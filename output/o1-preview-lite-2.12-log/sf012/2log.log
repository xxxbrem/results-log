2025-02-10 09:10:40 - openai._base_client - INFO - Retrying request to /chat/completions in 0.473058 seconds
2025-02-10 09:12:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:12:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:12:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:12:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:12:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:12:01 - snowflake.connector.connection - INFO - closed
2025-02-10 09:12:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:12:01 - root - INFO - SQL:
-- 1. List distinct NFIP community names to verify the exact community name
SELECT DISTINCT "NFIP_COMMUNITY_NAME"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
LIMIT 100
Results:
NFIP_COMMUNITY_NAME
Horry County
Town Of Woodloch
City Of Indian Rocks Beach
Avoyelles Parish
Town Of Iowa
York County
Village Of Freeport
Brunswick County
Town Of Stony Point
City Of Key West
Clark County
City Of North Wildwood
Town Of Carolina Beach
Toombs County
City Of Sea Isle City
City Of New Smyrna Beach
City Of Hialeah
City Of Palacios
Sussex County
City Of Richwood
Ripley County
Territory Of The Virgin Islands
Town Of Brattleboro
Calcasieu Parish
City Of Oakbrook Terrace
City Of Weslaco
Town Of Hamburg
Tarrant County
Borough Of Glen Rock
Tattnall County
Borough Of Indiana
Borough Of Kittanning
Kankakee County
Borough Of Sea Bright
Guadalupe County
City Of Bucyrus
Howard County
City Of Portsmouth
Iberia Parish
City Of Germantown
Town Of Blooming Grove
Buchanan County
City Of Raymondville
Village Of Westhampton Beach
Township Of Lyndhurst
Summit County
City Of Denison
City Of Independence
Town Of Ridgeland
Village Of Chatham
City Of Callaway
Village Of La Rue
City Of Boston
Village Of Lake George
Township Of Benton
Accomack County
Township Of Braintrim
City Of Mankato
Carter County
City Of Elroy
Village Of Massapequa Park
City Of Fairfield
City Of Plantation
City Of Clayton
Town Of Fishkill
Borough Of Lake Como
Town Of Winthrop
City Of Prairie View
Village Of New York Mills
Township Of Alexandria
Borough Of Upland
City Of Georgetown
Village Of Saukville
Borough Of Oakmont
Long County
City Of Webster
City Of Canyonville
Town Of Newburgh
City Of Minden
City Of North Bay Village
Town Of Raymond
Village Of The Branch
Town Of Yucca Valley
Village Of Hutsonville
Randolph County
City Of Sedalia
City Of Ventnor City
City Of Safety Harbor
Town Of Coeymans
Manatee County
City Of Vidor
Lewis County
Township Of James
City Of Sulphur
City Of Deltona
Camden County
Village Of North Utica
Township Of Upper Merion
City Of Bessemer
Town Of Delaware

2025-02-10 09:12:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:12:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:12:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:12:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:12:02 - snowflake.connector.connection - INFO - closed
2025-02-10 09:12:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:12:03 - root - INFO - SQL:
-- 2. Retrieve sample data of claims for 'City Of New York' with damage amounts
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Results:
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT,CONTENTS_DAMAGE_AMOUNT
2012-10-29,56148.0,
2012-10-30,83568.0,
2021-09-02,,
2012-10-30,51256.0,3137.0
2012-10-29,157756.0,
2012-10-29,74921.0,
2012-10-29,12927.0,
2012-10-29,287703.0,
2012-10-29,14774.0,
2012-10-29,34980.0,
2010-03-30,10397.0,
2012-10-30,10999.0,2402.0
2016-07-26,3497.0,
2023-09-29,41430.0,0.0
2012-10-30,53830.0,
2012-10-29,41050.0,3036.0
2012-10-30,54254.0,
2011-08-28,28231.0,1554.0
2012-10-29,9091.0,
2024-01-13,16519.0,1324.0
2012-10-29,134782.0,9921.0
2021-09-01,4136.0,0.0
2012-10-29,31489.0,21382.0
2012-10-29,45291.0,
2012-10-29,46021.0,
2021-09-01,46533.0,1897.0
2012-10-29,49695.0,
2021-09-01,,
2012-10-29,46911.0,10544.0
2012-10-29,63805.0,16029.0
2021-09-01,18807.0,0.0
2012-10-29,,
2022-12-23,0.0,0.0
2021-09-01,53920.0,3182.0
2012-10-29,70379.0,7538.0
2012-10-29,9090.0,
2012-10-31,9320.0,
2012-10-29,53223.0,
2011-08-28,3420.0,
2012-10-29,115918.0,
2012-10-29,33236.0,
2012-10-30,45997.0,
2012-10-29,29899.0,
2016-05-03,,
2012-10-30,35190.0,
2011-08-28,9508.0,
2022-07-18,36252.0,2749.0
2012-10-29,26406.0,
2010-03-13,4542.0,
2022-12-26,11424.0,
2021-09-01,7701.0,36.0
2021-09-02,60992.0,0.0
2012-10-29,284507.0,102393.0
2012-10-30,,
2012-10-29,22577.0,
2023-04-30,4254.0,0.0
2012-10-29,62031.0,7614.0
2012-10-29,56051.0,8815.0
2012-10-29,136689.0,
2012-10-29,32365.0,
2012-10-28,12721.0,
2011-08-28,17318.0,
2012-10-29,51161.0,
2022-12-23,21591.0,
2016-07-25,3427.0,
2012-10-29,12733.0,1159.0
2010-03-31,2064.0,
2012-10-29,22046.0,
2012-10-29,161285.0,
2012-10-29,81631.0,
2022-12-23,35728.0,8387.0
2014-05-08,5611.0,
2012-10-30,78966.0,
2012-10-29,36836.0,
2021-09-02,0.0,0.0
2012-10-30,,6550.0
2023-10-06,,
2021-09-01,45459.0,
2012-10-29,31555.0,
2012-10-29,46099.0,50000.0
2012-10-29,30670.0,11359.0
2012-10-29,24928.0,
2012-10-30,29721.0,
2012-10-30,159667.0,
2012-10-29,16256.0,6000.0
2012-10-29,131979.0,
2012-10-30,33051.0,5645.0
2012-10-30,30640.0,
2021-09-02,2883.0,0.0
2021-09-01,17629.0,
2012-10-28,103349.0,
2011-08-28,8474.0,
2012-10-30,32621.0,
2023-09-29,34444.0,
2012-10-29,56872.0,
2012-10-30,28769.0,14067.0
2024-08-06,13463.0,0.0
2012-10-29,55050.0,
2022-12-23,30733.0,35052.0
2012-10-30,95393.0,37403.0

2025-02-10 09:12:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:12:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:12:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:12:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 34
2025-02-10 09:12:04 - snowflake.connector.connection - INFO - closed
2025-02-10 09:12:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:12:04 - root - INFO - SQL:
-- 3. Get the years present in the data for 'City Of New York'
SELECT DISTINCT YEAR("DATE_OF_LOSS") AS "Year"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
ORDER BY "Year"
LIMIT 100
Results:
Year
1988
1989
1991
1992
1993
1994
1996
1997
1999
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
2022
2023
2024

2025-02-10 09:12:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:12:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:12:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:12:05 - snowflake.connector.connection - INFO - closed
2025-02-10 09:12:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:12:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:12:37 - root - INFO - The error in your SQL query is due to mismatched quotation marks in the `WHERE` clause. Specifically, the string literal `'City Of New York"` has an opening single quote `'` and a closing double quote `"`, which causes a syntax error.

Here's the problematic line:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

**Correction:**

Ensure that your string literals are enclosed with matching single quotes `'...'` or double quotes `"..."` (though SQL generally uses single quotes for string literals and double quotes for identifiers like column names).

Here's the corrected SQL query:

```sql
-- 4. Count the number of claims per year for 'City Of New York' between 2010 and 2019
SELECT YEAR("DATE_OF_LOSS") AS "Year", COUNT(*) AS "Claim_Count"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Explanation:**

- **Quotation Marks:** Changed the ending double quote to a single quote to match the opening single quote in `'City Of New York'`.
- **Consistency:** Ensured that all quotation marks are correctly matched throughout the query.
- **Semicolon:** Added a semicolon at the end of the query (optional but good practice).

**Additional Notes:**

- **String Literals:** In SQL, string literals should be enclosed in single quotes `'...'`.
- **Identifiers:** Double quotes are typically used to enclose identifiers (e.g., column names, table names) that might conflict with SQL keywords or contain special characters.

**Revised Query Execution:**

After correcting the quotation marks, your query should run without the syntax error and provide the count of claims per year for 'City Of New York' between 2010 and 2019.

**Example Output:**

```csv
Year,Claim_Count
2010,claim_count_2010:int
2011,claim_count_2011:int
2012,claim_count_2012:int
2013,claim_count_2013:int
2014,claim_count_2014:int
2015,claim_count_2015:int
2016,claim_count_2016:int
2017,claim_count_2017:int
2018,claim_count_2018:int
2019,claim_count_2019:int
```

This output will show the number of claims per year for the specified period and community.
2025-02-10 09:12:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:12:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:12:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:12:38 - snowflake.connector.connection - INFO - closed
2025-02-10 09:12:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:13:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:13:06 - root - INFO - It looks like you're still encountering a syntax error due to mismatched quotation marks in your SQL query. The error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

indicates that there's a problem right at the beginning of the `WHERE` clause.

**Issue:**

In your `WHERE` clause, the condition:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

has mismatched quotation marks. The string literal starts with a single quote `'` but ends with a double quote `"`.

**Correction:**

Ensure that your string literals are enclosed with matching single quotes `'...'`.

Here is the corrected SQL query:

```sql
-- 4. Count the number of claims per year for 'City Of New York' between 2010 and 2019
SELECT YEAR("DATE_OF_LOSS") AS "Year", COUNT(*) AS "Claim_Count"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Explanation:**

- **Fixed Quotation Marks:** In the `WHERE` clause, both the beginning and ending quotation marks around `'City Of New York'` are now single quotes.
  
  ```sql
  WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  ```
  
- **Consistency:** All string literals in SQL should be enclosed in single quotes `'...'`. Double quotes are used for identifiers like column or table names.

- **Semicolon:** Added a semicolon at the end of the query (optional but good practice).

**Please try running the corrected query.**

**Additional Tip:**

To avoid such errors in the future:

- Always ensure that your string literals are enclosed with matching quotation marks.
- Use single quotes for string literals.
- Use double quotes for identifiers if necessary (e.g., if they contain spaces or special characters).

**Example Output:**

Assuming the data is available, the corrected query will output the number of claims per year for 'City Of New York' between 2010 and 2019:

```csv
Year,Claim_Count
2010,number_of_claims_2010
2011,number_of_claims_2011
2012,number_of_claims_2012
2013,number_of_claims_2013
2014,number_of_claims_2014
2015,number_of_claims_2015
2016,number_of_claims_2016
2017,number_of_claims_2017
2018,number_of_claims_2018
2019,number_of_claims_2019
```

Let me know if you have any further questions or run into any other issues!
2025-02-10 09:13:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:13:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:13:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:13:07 - snowflake.connector.connection - INFO - closed
2025-02-10 09:13:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:13:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:13:42 - root - INFO - It appears that you're encountering a syntax error in your SQL query. The error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

**Problem Analysis:**

1. **Mismatched Quotation Marks:**

   In your `WHERE` clause, the string literal `'City Of New York"` has mismatched quotation marks—a starting single quote `'` and an ending double quote `"`. This causes a syntax error because the string literal isn't properly terminated.

   ```sql
   WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
   ```

2. **Unexpected 'WHERE' at Line 1, Position 0:**

   The error message suggests that the SQL interpreter is encountering the `WHERE` keyword at the very beginning, which indicates that it might not recognize the `SELECT` statement. This can happen if:

   - The SQL interpreter doesn't support comment syntax and treats lines starting with `--` as invalid.
   - There's a missing `SELECT` statement in the executed query.
   - The query is being copied incorrectly, omitting the `SELECT` statement.

**Solution:**

1. **Ensure Proper Quotation Marks:**

   - Use matching single quotes for string literals.
   - Corrected condition:

     ```sql
     WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
     ```

2. **Remove Comment Lines:**

   - Some SQL environments do not support the `--` comment syntax or may misinterpret it.
   - Remove the comment line starting with `--` to prevent any parsing issues.

3. **Check for Missing Parts in the Query:**

   - Ensure that the entire query, including the `SELECT` statement, is being executed.
   - Make sure there are no accidental deletions or truncations when copying the query.

**Corrected SQL Query:**

Here is the corrected query without any comments:

```sql
SELECT YEAR("DATE_OF_LOSS") AS "Year", COUNT(*) AS "Claim_Count"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Action Steps:**

- **Copy the Entire Query:**

  Ensure you copy the entire query from `SELECT` to the semicolon `;` at the end.

- **Avoid Using Comments (if necessary):**

  If your SQL environment doesn't support comments, avoid including lines starting with `--`.

- **Verify the Quotation Marks:**

  Double-check that all string literals are enclosed with matching single quotes `'...'`.

**Explanation:**

- **Quotation Marks:**

  - String literals are enclosed in single quotes `'...'`.
  - Identifiers (like column names) are enclosed in double quotes `"..."` if they need to be quoted.

- **SQL Statement Structure:**

  - The query should start with `SELECT`, followed by the columns to retrieve.
  - The `FROM` clause specifies the table.
  - The `WHERE` clause filters the records.
  - The `GROUP BY` clause groups the records by the specified column.
  - The `ORDER BY` clause sorts the result.
  - The `LIMIT` clause restricts the number of records returned.

**Example Output:**

Assuming the data is present, running the corrected query should return a result like:

```csv
Year,Claim_Count
2010,number_of_claims_in_2010
2011,number_of_claims_in_2011
2012,number_of_claims_in_2012
2013,number_of_claims_in_2013
2014,number_of_claims_in_2014
2015,number_of_claims_in_2015
2016,number_of_claims_in_2016
2017,number_of_claims_in_2017
2018,number_of_claims_in_2018
2019,number_of_claims_in_2019
```

**Next Steps:**

Please try running the corrected query provided above. If you still encounter errors, please let me know the exact error message, and I'll be happy to assist further.
2025-02-10 09:13:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:13:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:13:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:13:43 - snowflake.connector.connection - INFO - closed
2025-02-10 09:13:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:13:44 - root - INFO - SQL:
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
Results:
001003 (42000): 01ba4bc9-0004-932b-0001-11c3010c1dd6: SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
2025-02-10 09:13:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:13:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:13:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:13:45 - snowflake.connector.connection - INFO - closed
2025-02-10 09:13:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:14:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:14:18 - root - INFO - It seems that you're encountering a syntax error in your SQL query. The error message indicates:

```
SQL compilation error:
syntax error line 4 at position 30 unexpected '2010'.
syntax error line 4 at position 40 unexpected '' AND ''.
parse error line 7 at position 9 near '<EOF>'.
```

---

**Problem Analysis:**

The error is due to **mismatched quotation marks** in your `WHERE` clause.

Here's the problematic part of your query:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
```

- **Issue:** The string literal `'City Of New York"` starts with a single quote `'` and ends with a double quote `"`.
- **Result:** This causes the SQL parser to misinterpret the string literal and leads to a syntax error.

---

**Correction:**

Ensure that string literals are enclosed with **matching single quotes** `'...'`.

Here is the **corrected SQL query**:

```sql
-- 5. Sum building damage amounts per year for 'City Of New York' (without computing the final totals)
SELECT YEAR("DATE_OF_LOSS") AS "Year",
       SUM("BUILDING_DAMAGE_AMOUNT") AS "Total_Building_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

---

**Explanation:**

- **Fixed Quotation Marks in `WHERE` Clause:**

  ```sql
  WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  ```

  - Both the opening and closing quotes around `'City Of New York'` are **single quotes** `'`.

- **Consistent Use of Quotes:**
  - **Single Quotes `'...'`** for string literals.
  - **Double Quotes `"..."`** for identifiers (e.g., column names, if necessary).

---

**Additional Notes:**

- **Quotation Marks in SQL:**
  - **String Literals:** Use single quotes `'...'`.
  - **Identifiers:** Use double quotes `"..."` if the identifier contains spaces or special characters.

- **Common Practice:**
  - Avoid mixing quotation marks.
  - Be consistent throughout your query.

---

**Action Steps:**

1. **Copy the Corrected Query:**
   - Make sure you copy the entire corrected query provided above.

2. **Run the Query:**
   - Execute the query in your SQL environment.

3. **Verify the Results:**
   - The query should run without syntax errors.
   - It will display the total building damage amounts per year for 'City Of New York' from 2010 to 2019.

---

**Example Output:**

```csv
Year,Total_Building_Damage
2010,total_building_damage_2010
2011,total_building_damage_2011
2012,total_building_damage_2012
2013,total_building_damage_2013
2014,total_building_damage_2014
2015,total_building_damage_2015
2016,total_building_damage_2016
2017,total_building_damage_2017
2018,total_building_damage_2018
2019,total_building_damage_2019
```

---

**Next Steps:**

- **Check Other Queries:**
  - If you encounter similar errors in other queries, check for mismatched quotation marks.

- **Be Mindful When Typing or Copying Queries:**
  - Ensure that all quotation marks are correctly matched.
  - Avoid copying unintended characters or missing parts of the query.

---

Please try running the corrected query and let me know if you need further assistance!
2025-02-10 09:14:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:14:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:14:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:14:19 - snowflake.connector.connection - INFO - closed
2025-02-10 09:14:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:14:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:14:58 - root - INFO - It seems you're encountering a syntax error in your SQL query. The error message indicates:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

---

**Problem Analysis:**

1. **Mismatched Quotation Marks:**

   In your `WHERE` clause, the condition:

   ```sql
   WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
   ```

   has mismatched quotation marks—a starting single quote `'` and an ending double quote `"`. This causes the SQL parser to misinterpret the string literal.

2. **Comment Syntax:**

   The comment line starting with `--` might be causing issues, depending on the SQL environment you're using. Some SQL interpreters may not support the `--` comment syntax or may misinterpret it, leading to syntax errors.

---

**Solution:**

1. **Ensure Proper Quotation Marks:**

   - Use matching single quotes `'...'` for string literals.
   - Corrected condition:

     ```sql
     WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
     ```

2. **Remove Comment Lines:**

   - Remove the comment line starting with `--` to prevent parsing issues.
   - Ensure the query starts with the `SELECT` statement.

---

**Corrected SQL Query:**

```sql
SELECT YEAR("DATE_OF_LOSS") AS "Year", 
       SUM("BUILDING_DAMAGE_AMOUNT") AS "Total_Building_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

---

**Explanation:**

- **Quotation Marks:**

  - **String Literals:** Enclosed in single quotes `'...'`.
  - **Identifiers (Column Names):** Enclosed in double quotes `"..."` if necessary.

- **Comments:**

  - Some SQL environments may not support comments starting with `--`. Removing the comment line ensures the query is parsed correctly.

---

**Action Steps:**

1. **Copy the Corrected Query:**

   - Ensure you copy the entire query from `SELECT` to the semicolon `;` at the end.
   - Do not include any comment lines starting with `--`.

2. **Check Quotation Marks:**

   - Verify that all string literals are enclosed with matching single quotes.
   - Ensure that double quotes are used correctly around column names.

3. **Execute the Query:**

   - Paste the corrected query into your SQL tool.
   - Run the query.

---

**Additional Tip:**

- If you continue to encounter syntax errors, try simplifying the query and adding components back one at a time to isolate the issue.

---

**Example Output:**

Assuming the data is present, you should receive a result similar to:

```csv
Year,Total_Building_Damage
2010,total_building_damage_2010
2011,total_building_damage_2011
2012,total_building_damage_2012
2013,total_building_damage_2013
2014,total_building_damage_2014
2015,total_building_damage_2015
2016,total_building_damage_2016
2017,total_building_damage_2017
2018,total_building_damage_2018
2019,total_building_damage_2019
```

---

**Next Steps:**

- **Verify Other Queries:**

  - If you have similar errors in other queries, check for mismatched quotation marks and issues with comment syntax.

- **Consult Documentation:**

  - Refer to your SQL environment's documentation regarding supported comment syntax and quotation mark usage.

---

Let me know if you continue to experience issues or have any questions!
2025-02-10 09:14:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:14:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:14:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:14:59 - snowflake.connector.connection - INFO - closed
2025-02-10 09:14:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:15:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:15:51 - root - INFO - It appears you're still encountering a syntax error in your SQL query. The error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

**Problem Analysis:**

1. **Mismatched Quotation Marks:**

   - In your `WHERE` clause, the condition:

     ```sql
     WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
     ```

     has mismatched quotation marks—a starting single quote `'` and an ending double quote `"`. This causes a syntax error because the string literal isn't properly terminated.

2. **SQL Execution Issue:**

   - The error message indicates that the SQL parser is seeing `WHERE` at the very beginning (`line 1 at position 0`), which suggests that it's expecting a `SELECT` statement but instead encounters `WHERE`.

   - This can happen if:

     - The SQL environment you're using doesn't support comment syntax (lines starting with `--`) and is ignoring or misinterpreting your `SELECT` statement.

     - You're only inputting the `WHERE` clause into the SQL prompt, rather than the entire query.

**Solution Steps:**

1. **Fix the Quotation Marks:**

   - Ensure that both the opening and closing quotation marks around `'City Of New York'` are **single quotes**.

     Corrected condition:

     ```sql
     WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
     ```

2. **Ensure You're Executing the Entire Query:**

   - Make sure that you're copying and running the entire SQL query, starting from the `SELECT` statement.

   - Do not include the comment line starting with `--` if your SQL environment doesn't support comments or is misinterpreting them.

3. **Avoid Using Inline Comments (if necessary):**

   - Some SQL environments do not handle comments starting with `--` well, especially when copying and pasting multiple lines.

   - Remove the comment line or place it after the query.

**Corrected SQL Query:**

```sql
SELECT YEAR("DATE_OF_LOSS") AS "Year",
       SUM("BUILDING_DAMAGE_AMOUNT") AS "Total_Building_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Action Steps:**

1. **Copy the Entire Corrected Query:**

   - Ensure you copy **everything** from `SELECT` down to the semicolon `;`.

2. **Check Quotation Marks:**

   - Verify that all string literals are enclosed in single quotes `'...'`.

3. **Remove Comments:**

   - If your SQL tool does not support comments or if you're unsure, remove the comment lines starting with `--`.

4. **Paste and Run the Query:**

   - Paste the corrected query into your SQL editor or console.

   - Ensure that no extra or unintended characters (like line breaks or invisible characters) are included.

5. **Verify the SQL Environment Supports Multi-line Queries:**

   - Some SQL tools require queries to be entered on a single line or have specific ways of handling multi-line input.

   - If necessary, adjust the query to fit the input requirements of your SQL tool.

**Explanation of the Corrected Query:**

- **No Comments:**

  - Removed the comment line starting with `--` to prevent any parsing issues.

- **Fixed Quotation Marks:**

  - Ensured the string literal `'City Of New York'` is enclosed in matching single quotes.

- **Full Query Execution:**

  - The query starts with `SELECT` and includes all necessary clauses.

**Additional Tips:**

- **Testing the Query in Isolation:**

  - If you're still encountering errors, try running a simplified version of the query to test the basics.

    ```sql
    SELECT 1;
    ```

  - If this works, gradually add parts of your query to identify where the issue arises.

- **Copy-Paste Issues:**

  - Sometimes, invisible characters or formatting can cause problems when copying and pasting code.

  - Try typing out the query manually to avoid such issues.

- **Check for Non-Printable Characters:**

  - Ensure there are no hidden characters by copying your query into a plain text editor first.

**Example Execution:**

After making the corrections, running the query should give you an output similar to:

```csv
Year,Total_Building_Damage
2010,123456.78
2011,234567.89
2012,345678.90
2013,456789.01
2014,567890.12
2015,678901.23
2016,789012.34
2017,890123.45
2018,901234.56
2019,12345.67
```

**Summary:**

- **Ensure Proper Quotation Marks:**

  - Always use matching single quotes for string literals in SQL.

- **Execute the Entire Query:**

  - Make sure your SQL environment is executing the entire query and not just a part of it.

- **Be Mindful of Comments and Formatting:**

  - Comments and extra formatting can sometimes cause issues. When in doubt, remove comments and ensure the query is correctly formatted.

**Let me know if you continue to experience issues or have any questions! I'm here to help you resolve this problem.**
2025-02-10 09:15:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:15:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:15:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:15:52 - snowflake.connector.connection - INFO - closed
2025-02-10 09:15:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:15:52 - root - INFO - SQL:
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
Results:
001003 (42000): 01ba4bcb-0004-932b-0001-11c3010c1dfa: SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
2025-02-10 09:15:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:15:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:15:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:15:53 - snowflake.connector.connection - INFO - closed
2025-02-10 09:15:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:16:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:16:26 - root - INFO - It appears you're encountering a syntax error in your SQL query. The error message indicates:

```
SQL compilation error:
syntax error line 4 at position 30 unexpected '2010'.
syntax error line 4 at position 40 unexpected '' AND ''.
parse error line 7 at position 9 near '<EOF>'.
```

---

**Problem Analysis:**

The error is due to **mismatched quotation marks** in your `WHERE` clause.

Here's the problematic part of your query:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

- **Issue:** The string literal starts with a single quote `'` but ends with a double quote `"`.
- **Result:** This causes the SQL parser to misinterpret the string literal, leading to a syntax error.

---

**Correction:**

Ensure that your string literal `'City Of New York'` is enclosed entirely within **matching single quotes**.

Here's the **corrected SQL query**:

```sql
-- 6. Sum contents damage amounts per year for 'City Of New York'
SELECT YEAR("DATE_OF_LOSS") AS "Year", 
       SUM("CONTENTS_DAMAGE_AMOUNT") AS "Total_Contents_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Explanation:**

- **Fixed Quotation Marks:**

  - The string literal `'City Of New York'` is now properly enclosed in **single quotes**:

    ```sql
    WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
    ```

- **Consistency:**

  - All string literals should be enclosed in single quotes `'...'`.
  - Identifiers (like column names) can be enclosed in double quotes `"..."` if needed.

---

**Action Steps:**

1. **Copy the Corrected Query:**

   - Make sure you copy the entire corrected query above, from `SELECT` to the semicolon `;`.

2. **Ensure Proper Quotation Marks:**

   - Verify that in the `WHERE` clause, both the opening and closing quotes around `'City Of New York'` are single quotes.

3. **Remove Comments If Necessary:**

   - If your SQL environment doesn't support comments (lines starting with `--`), remove them before running the query.

4. **Execute the Query:**

   - Run the corrected query in your SQL environment.

---

**Additional Tips:**

- **Be Careful When Copying and Pasting:**

  - Sometimes, copying code from documents or emails can introduce formatting issues or incorrect characters (like smart quotes `“` and `”` instead of straight quotes `'` and `"`).

- **Check for Hidden Characters:**

  - Paste your query into a plain text editor to ensure there are no hidden or special characters.

- **Quotation Marks in SQL:**

  - **Single Quotes `'...'`**: Use for string literals.
  - **Double Quotes `"..."`**: Use for identifiers (like column names) if they contain special characters or match SQL keywords.

---

**Example Execution:**

After correcting the query, you should be able to run it without syntax errors and get the desired results. The output will show the total contents damage amounts per year for 'City Of New York' between 2010 and 2019.

**Example Output:**

```csv
Year,Total_Contents_Damage
2010,total_contents_damage_2010
2011,total_contents_damage_2011
2012,total_contents_damage_2012
2013,total_contents_damage_2013
2014,total_contents_damage_2014
2015,total_contents_damage_2015
2016,total_contents_damage_2016
2017,total_contents_damage_2017
2018,total_contents_damage_2018
2019,total_contents_damage_2019
```

---

**Summary:**

- **Issue:** Mismatched quotation marks in the `WHERE` clause.
- **Solution:** Use matching single quotes around `'City Of New York'`.
- **Action:** Copy and run the corrected query provided above.

---

**Let me know if you continue to experience issues or if you have any questions. I'm here to help you resolve this problem!**
2025-02-10 09:16:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:16:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:16:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:16:27 - snowflake.connector.connection - INFO - closed
2025-02-10 09:16:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:17:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:17:00 - root - INFO - It seems you're still encountering a syntax error due to mismatched quotation marks in your SQL query. The error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

**Problem Analysis:**

In your `WHERE` clause, the condition:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

has mismatched quotation marks—a starting single quote `'` and an ending double quote `"`. This causes the SQL parser to misinterpret the string literal, leading to a syntax error.

**Correction:**

To fix this issue, ensure that both the opening and closing quotation marks around `'City Of New York'` are **single quotes** `'...'`.

Here's the **corrected SQL query**:

```sql
-- 6. Sum contents damage amounts per year for 'City Of New York'
SELECT YEAR("DATE_OF_LOSS") AS "Year", 
       SUM("CONTENTS_DAMAGE_AMOUNT") AS "Total_Contents_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Explanation:**

- **Fixed Quotation Marks:**
  
  - The string literal `'City Of New York'` is now properly enclosed in matching single quotes `'`.

    ```sql
    WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
    ```

- **Consistency:**

  - String literals in SQL should always be enclosed in single quotes `'...'`.
  - Double quotes `"..."` are used for identifiers like column or table names if necessary.

**Action Steps:**

1. **Copy the Corrected Query:**

   - Ensure you copy the entire corrected query provided above.

2. **Double-Check Quotation Marks:**

   - Make sure that in the `WHERE` clause, both the opening and closing quotes around `'City Of New York'` are **single quotes** `'`.

3. **Check for Hidden Characters:**

   - Sometimes, when copying and pasting code, invisible characters or formatting can cause issues. It's a good idea to paste your query into a plain text editor first to ensure there are no hidden characters.

4. **Remove Comments If Necessary:**

   - If your SQL environment does not support comments (lines starting with `--`), remove the comment line before executing the query.

5. **Execute the Query:**

   - Run the corrected query in your SQL environment.

**Additional Tips:**

- **Copying Issues:**

  - Ensure that you haven't accidentally copied any extra characters or omitted any parts of the query.
  - Be careful with the quotation marks, especially if you're copying from a place where quotes might be auto-formatted (e.g., changing straight quotes to curly quotes).

- **Testing in Isolation:**

  - To verify that the issue is with the quotation marks, you can run a simplified version of the query:

    ```sql
    SELECT 'Test' AS "Output";
    ```

  - If this works, gradually build back up to the full query, ensuring that each part works correctly.

**Example Output:**

Running the corrected query should provide you with the total contents damage amounts per year for 'City Of New York' between 2010 and 2019:

```csv
Year,Total_Contents_Damage
2010,total_contents_damage_2010
2011,total_contents_damage_2011
2012,total_contents_damage_2012
2013,total_contents_damage_2013
2014,total_contents_damage_2014
2015,total_contents_damage_2015
2016,total_contents_damage_2016
2017,total_contents_damage_2017
2018,total_contents_damage_2018
2019,total_contents_damage_2019
```

**Summary:**

- The error is due to mismatched quotation marks in your `WHERE` clause.
- Use matching single quotes `'...'` for string literals.
- Ensure you're executing the entire corrected query without any unintended modifications.

**Let me know if you continue to experience issues or if you need further assistance!**
2025-02-10 09:17:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:17:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:17:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:17:01 - snowflake.connector.connection - INFO - closed
2025-02-10 09:17:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:17:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:17:49 - root - INFO - It looks like you're still encountering the same syntax error due to mismatched quotation marks in your SQL query. The error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

**Issue:**

In your `WHERE` clause, the condition:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

has mismatched quotation marks—a starting single quote `'` and an ending double quote `"`. This causes the SQL parser to misinterpret the string literal, leading to a syntax error.

**Correction:**

Ensure that the string `'City Of New York'` is enclosed in **matching single quotes** `'...'`.

**Corrected SQL Query:**

```sql
SELECT YEAR("DATE_OF_LOSS") AS "Year", 
       SUM("CONTENTS_DAMAGE_AMOUNT") AS "Total_Contents_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Explanation:**

- **Quotation Marks:**
  - The string literal `'City Of New York'` starts and ends with **single quotes** `'`.
  - Double quotes `"..."` are used around column names.

**Next Steps:**

1. **Copy the Corrected Query Carefully:**

   Make sure to copy the entire corrected query above without any modifications.

2. **Verify the Quotation Marks:**

   - Ensure that `'City Of New York'` is enclosed in matching single quotes.
   - There should be no mismatched or extra quotation marks.

3. **Test a Simple Query:**

   To check if the SQL environment handles string literals correctly, run:

   ```sql
   SELECT 'City Of New York' AS "Test_String";
   ```

   - If this runs without error, proceed to execute the corrected main query.

4. **Avoid Copy-Paste Errors:**

   Sometimes, copying from certain environments can introduce hidden characters or formatting issues. Consider typing the query manually to avoid this.

5. **Remove Comment Lines if Necessary:**

   If your SQL environment doesn't support comments (`--`), remove the comment lines before running the query.

**Additional Tips:**

- **Consistent Quotation Usage:**

  - **Single Quotes `'...'`**: For string literals.
  - **Double Quotes `"..."`**: For identifiers (e.g., column names).

- **Example of Correct `WHERE` Clause:**

  ```sql
  WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  ```

**Summary:**

- **Problem:** Mismatched quotation marks causing a syntax error.
- **Solution:** Use matching single quotes around `'City Of New York'`.
- **Action:** Update your query with the corrected `WHERE` clause and execute it.

**Let me know if you continue to experience issues or if there's anything else I can assist you with!**
2025-02-10 09:17:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:17:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:17:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:17:50 - snowflake.connector.connection - INFO - closed
2025-02-10 09:17:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:17:50 - root - INFO - SQL:
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
Results:
001003 (42000): 01ba4bcd-0004-91d9-0001-11c3010c2066: SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
2025-02-10 09:17:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:17:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:17:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:17:51 - snowflake.connector.connection - INFO - closed
2025-02-10 09:17:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:18:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:18:55 - root - INFO - It seems you're consistently encountering a syntax error due to mismatched quotation marks in your SQL queries. The error message indicates:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

and

```
syntax error line 3 at position 36 unexpected 'Of'.
parse error line 5 at position 9 near '<EOF>'.
```

---

### **Problem Analysis:**

In your `WHERE` clause, you have:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

- **Issue:** The string literal starts with a single quote `'` but ends with a double quote `"`.
- **Result:** This causes the SQL parser to misinterpret the string, leading to syntax errors.
- **Error Message Explanation:** The parser encounters `'City Of New York"` and doesn't find a closing single quote. As a result, it treats the remaining text as code, leading to unexpected tokens like `'Of'` and errors at `'<EOF>'`.

---

### **Solution:**

**Ensure that your string literals are enclosed in matching single quotes `'...'`.**

Here's the **corrected `WHERE` clause**:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
```

---

### **Next Steps:**

1. **Use the Corrected Query:**

   ```sql
   -- 7. Retrieve claims with non-null building damage amounts for 'City Of New York'
   SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
   FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
   WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
     AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
   LIMIT 100;
   ```

2. **Verify Quotation Marks:**

   - Make sure both the opening and closing quotes around `'City Of New York'` are **single quotes**.
   - There should be **no double quotes** inside the string literal.

3. **Type the String Literal Manually:**

   - Instead of copying and pasting, **manually type** `'City Of New York'` to avoid any hidden characters or formatting issues.

4. **Check for Hidden or Special Characters:**

   - Sometimes, copying text from certain sources can introduce invisible characters or smart quotes (`“` or `”`) instead of straight quotes (`'` or `"`).
   - Use a plain text editor to ensure your quotes are standard single quotes.

5. **Test a Simple String Literal:**

   - Run a simple query to test string literals:

     ```sql
     SELECT 'City Of New York' AS "Test_String";
     ```

   - If this simple query fails, there's an issue with how your SQL environment handles string literals.

6. **Ensure Full Query Execution:**

   - Confirm that you're executing the **entire query**, including the `SELECT` statement, not just the `WHERE` clause.

---

### **Additional Tips:**

- **Understand Quotation Usage:**
  - **Single Quotes `'...'`**: Used for string literals in SQL.
  - **Double Quotes `"..."`**: Used for identifiers (e.g., column or table names) that may contain special characters or match SQL keywords.

- **Avoid Mixing Quotes:**
  - Do not start a string with a single quote and end with a double quote, or vice versa.

- **Check SQL Environment Support:**
  - Ensure your SQL environment (e.g., Snowflake) supports the syntax used in your query.

---

### **Example of Corrected Query Execution:**

```sql
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

**Expected Result:**

- A list of records with non-null building damage amounts for claims where the NFIP community name is 'City Of New York'.

---

### **If You Continue to Experience Issues:**

- **Check for Auto-Correction Features:**
  - Some text editors or SQL clients may automatically convert straight quotes to smart quotes. Disable this feature if possible.

- **Use Parameterized Queries (if supported):**
  - This can help avoid issues with quotation marks.

  ```sql
  SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
  FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
  WHERE "NFIP_COMMUNITY_NAME" = ?
    AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
  LIMIT 100;
  ```

  - Then bind the parameter with the value `'City Of New York'`.

- **Consult Documentation or Support:**
  - Refer to the documentation of your SQL platform for specifics on string literals and quotation marks.
  - Reach out to support forums or help desks for your SQL tool.

---

### **Summary:**

- The syntax error is caused by mismatched quotation marks in your string literal.
- Always enclose string literals in matching single quotes `'...'`.
- Be cautious when copying and pasting code to ensure no unwanted characters are introduced.
- Manually typing out the problematic parts can help avoid hidden formatting issues.

---

I hope this helps you resolve the syntax errors and successfully run your query. Let me know if you have any further questions or need additional assistance!
2025-02-10 09:18:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:18:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:18:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:18:56 - snowflake.connector.connection - INFO - closed
2025-02-10 09:18:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:19:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:19:29 - root - INFO - It looks like you're still encountering a syntax error due to mismatched quotation marks in your SQL query. The error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

---

### **Problem Analysis:**

In your `WHERE` clause, you have:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

- **Issue:** The string literal starts with a **single quote** `'` but ends with a **double quote** `"`. This mismatch causes the SQL parser to misinterpret the string, leading to a syntax error.
- **Result:** The SQL parser doesn't recognize the end of the string, and as a result, it throws an error at the `WHERE` clause.

---

### **Solution:**

**Ensure that your string literals are enclosed in **matching single quotes** `'...'`.**

Here is the **corrected SQL query**:

```sql
-- 7. Retrieve claims with non-null building damage amounts for 'City Of New York'
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

---

### **Explanation:**

- **Correct Quotation Marks:**
  - The string literal `'City Of New York'` is properly enclosed in **matching single quotes**.
  - There should be no double quotes (`"`) inside your string literals.
- **Consistent Usage:**
  - Use **single quotes** `'...'` for string literals.
  - Use **double quotes** `"..."` for identifiers (like column names), if necessary.

---

### **Action Steps:**

1. **Copy the Corrected Query:**

   - Ensure you copy the **entire** corrected query provided above, starting from `SELECT` and ending with the semicolon `;`.

2. **Double-Check Quotation Marks:**

   - Verify that in the `WHERE` clause, `'City Of New York'` has matching single quotes at both the beginning and end.

3. **Avoid Mixing Quotes:**

   - Do **not** mix single and double quotes in the same string. This can cause syntax errors.

4. **Type the String Literal Manually:**

   - Instead of copying and pasting, try **typing** `'City Of New York'` manually to ensure there are no hidden or incorrect characters.

5. **Test a Simple Query:**

   - To confirm that your SQL environment is interpreting string literals correctly, run a simple test:

     ```sql
     SELECT 'City Of New York' AS "Test_String";
     ```

     - If this runs without errors, proceed with the corrected main query.

6. **Check for Hidden Characters:**

   - Sometimes copying text from certain sources introduces hidden characters or formatting issues. Use a plain text editor to ensure your quotes are standard single quotes.

---

### **Additional Tips:**

- **Consistency:** Always use matching quotation marks in your SQL queries.
- **Comments:** If your SQL environment does not support comments (lines starting with `--`), remove them before executing.

---

### **Example Execution:**

Using the corrected query:

```sql
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

**Expected Result:**

- The query should run without syntax errors.
- It will retrieve up to 100 records where:
  - The `NFIP_COMMUNITY_NAME` is **exactly** `'City Of New York'`.
  - The `BUILDING_DAMAGE_AMOUNT` is not null.

---

### **Summary:**

- **Problem:** The syntax error is caused by mismatched quotation marks in your string literal `'City Of New York"`.
- **Solution:** Ensure that the string is enclosed in matching single quotes: `'City Of New York'`.
- **Action:** Use the corrected query provided, carefully checking for correct quotation marks.

---

**Please try running the corrected query.**

If you continue to experience issues or have any questions, feel free to let me know—I'm here to help!
2025-02-10 09:19:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:19:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:19:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:19:30 - snowflake.connector.connection - INFO - closed
2025-02-10 09:19:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:20:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:20:37 - root - INFO - It appears you're still encountering a syntax error due to mismatched quotation marks in your SQL query. The error message indicates:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

---

### **Problem Analysis:**

In your `WHERE` clause, the condition:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

has **mismatched quotation marks**—it starts with a **single quote** `'` and ends with a **double quote** `"`. This causes the SQL parser to misinterpret the string literal, leading to a syntax error.

---

### **Solution:**

**Ensure that your string literal is enclosed in matching single quotes `'...'`.**

Here is the **corrected SQL query**:

```sql
-- 7. Retrieve claims with non-null building damage amounts for 'City Of New York'
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

---

### **Action Steps:**

1. **Copy the Corrected Query Carefully:**

   Please copy the entire corrected query above, ensuring that the string `'City Of New York'` is enclosed in matching single quotes.

2. **Verify Quotation Marks:**

   - **String Literals:** Use single quotes `'...'` for string values. In the `WHERE` clause, both the opening and closing quotes around `'City Of New York'` should be single quotes.
   - **Identifiers:** Use double quotes `"..."` for identifiers like column names.

3. **Type the String Literal Manually:**

   If copying and pasting still cause issues, try **typing** `'City Of New York'` manually to avoid any hidden formatting characters.

4. **Test a Simple Query:**

   To ensure your SQL environment correctly interprets string literals, run this simple test:

   ```sql
   SELECT 'City Of New York' AS "Test_String";
   ```

   - If this query executes without error, proceed to run the corrected main query.

---

### **Explanation:**

- **Mismatched Quotes Cause Errors:**

  - Incorrect:

    ```sql
    WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
    ```

    - Starts with a single quote `'` and ends with a double quote `"`.
    - Leads to syntax errors because the string literal is not properly closed.

  - Correct:

    ```sql
    WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
    ```

    - Starts and ends with single quotes `'`, forming a valid string literal.

- **Quotation Marks in SQL:**

  - **Single Quotes `'...'`:** Use for string literals.
  - **Double Quotes `"..."`:** Use for identifiers (e.g., column names or table names), especially if they contain spaces or special characters.

---

### **Additional Tips:**

- **Avoid Mixing Quotation Marks:**

  Ensure that you do not mix single and double quotes when enclosing a string literal.

- **Check for Hidden Characters:**

  Sometimes, copying text from certain sources introduces hidden characters or smart quotes. Use a plain text editor to ensure you have standard single quotes.

- **Execute the Entire Query:**

  Make sure you are running the entire SQL query, including the `SELECT` statement and all clauses.

---

### **Example Execution:**

After correcting the query, running it should return records like:

```csv
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT
2012-10-29,56148.0
2012-10-30,83568.0
2012-10-30,51256.0
...
```

---

### **Summary:**

- **Issue:** The syntax error is due to mismatched quotation marks in your `WHERE` clause.
- **Solution:** Use matching single quotes around `'City Of New York'`.
- **Action:** Copy and run the corrected query provided above, ensuring proper quotation marks.

---

**Please try running the corrected query.** If you continue to experience issues or have any questions, feel free to let me know—I'm here to help!
2025-02-10 09:20:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:20:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:20:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:20:38 - snowflake.connector.connection - INFO - closed
2025-02-10 09:20:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:20:38 - root - INFO - SQL:
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
Results:
001003 (42000): 01ba4bd0-0004-91d9-0001-11c3010c209a: SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
2025-02-10 09:20:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:20:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:20:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:20:39 - snowflake.connector.connection - INFO - closed
2025-02-10 09:20:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:21:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:21:16 - root - INFO - It seems you're still encountering a syntax error due to mismatched quotation marks in your SQL query. The error message indicates:

```
SQL compilation error:
parse error line 5 at position 9 near '<EOF>'.
syntax error line 3 at position 36 unexpected 'Of'.
parse error line 5 at position 9 near '<EOF>'.
```

---

### **Problem Analysis:**

In your `WHERE` clause, you have:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

- **Issue:** The string literal starts with a **single quote** `'` but ends with a **double quote** `"`. This mismatch causes the SQL parser to misinterpret the string, leading to syntax errors.
- **Result:** The parser cannot find the proper end of the string literal, causing unexpected tokens like `'Of'` in the error message.

---

### **Solution:**

**Ensure that your string literal `'City Of New York'` is enclosed in matching single quotes `'...'`.**

Here is the **corrected SQL query**:

```sql
-- 8. Retrieve claims with non-null contents damage amounts for 'City Of New York'
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

---

### **Explanation:**

- **Quotation Marks:**
  - **String Literals:** Enclosed in **single quotes** `'...'`.
    - `'City Of New York'` starts and ends with single quotes.
  - **Identifiers (Column Names):** Enclosed in **double quotes** `"..."` if necessary.
- **Consistency:** Always use matching quotation marks to define string literals.

---

### **Why This Error Might Be Occurring Repeatedly:**

It's possible that when you're copying and pasting the query, the quotation marks are being altered or not properly copied. Here are some steps to help resolve this:

1. **Type the Quotations Manually:**

   - **Delete** the existing quotes around `'City Of New York'`.
   - **Manually type** single quotes `'` around the string: `'City Of New York'`.

2. **Check for Smart Quotes:**

   - Some text editors or word processors automatically replace straight quotes `'` with curly (smart) quotes `‘’`, which are not recognized in SQL.
   - Ensure that you're using straight single quotes `'`.

3. **Use a Plain Text Editor:**

   - Write your SQL query in a plain text editor (like Notepad) to prevent any hidden formatting.
   - Then copy it into your SQL environment.

4. **Avoid Mixing Quotes:**

   - Do not mix single and double quotes in the same string literal.
   - Ensure both the opening and closing quotes are the same type.

5. **Test a Simple Query:**

   - Run the following simple query to check if your SQL environment handles string literals correctly:

     ```sql
     SELECT 'Test String' AS "Test";
     ```

   - If this query fails, there may be an issue with how your SQL environment interprets quotation marks.

---

### **Copy and Paste This Corrected Query:**

Please copy the entire query below and ensure that the quotation marks are exactly as shown:

```sql
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

---

### **Additional Tips:**

- **Check for Hidden Characters:**

  - Sometimes, invisible characters can cause issues.
  - Ensure there's nothing between the quotes except the intended text.

- **Verify the `NFIP_COMMUNITY_NAME`:**

  - Ensure that `'City Of New York'` is exactly the value used in the database.
  - You can run a query to list distinct community names:

    ```sql
    SELECT DISTINCT "NFIP_COMMUNITY_NAME"
    FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
    WHERE "NFIP_COMMUNITY_NAME" ILIKE '%City%New%York%'
    LIMIT 100;
    ```

- **SQL Client Settings:**

  - If you continue to face issues, check if your SQL client has specific settings or modes that affect how it interprets quotes.

---

### **Example Execution:**

After correcting the quotation marks, your query should run successfully and return results like:

```csv
DATE_OF_LOSS,CONTENTS_DAMAGE_AMOUNT
2012-10-30,3137.0
2012-10-29,9921.0
2012-10-29,21382.0
2012-10-29,10544.0
2012-10-29,16029.0
...
```

---

### **Conclusion:**

The syntax error is caused by mismatched quotation marks in your string literal. By ensuring that the string `'City Of New York'` is enclosed in matching single quotes, the SQL parser can correctly interpret the query.

---

**Please try running the corrected query.** If you still encounter errors, consider manually typing the entire query to avoid any copy-paste issues. Let me know if you need further assistance!
2025-02-10 09:21:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:21:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:21:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:21:17 - snowflake.connector.connection - INFO - closed
2025-02-10 09:21:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:22:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:22:05 - root - INFO - I see that you're still encountering the same syntax error due to mismatched quotation marks in your SQL query. It seems that despite corrections, the issue persists. Let's address this step by step to ensure that your query runs successfully.

---

### **Understanding the Issue**

In your `WHERE` clause, your condition is:

```sql
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
```

- **Problem:** The string literal starts with a **single quote** `'` but ends with a **double quote** `"`.
- **Effect:** This mismatched quotation causes the SQL parser to misinterpret the query, leading to a syntax error.

---

### **Solution Steps**

1. **Ensure Matching Quotation Marks**

   The string `'City Of New York'` should be enclosed in matching single quotes:

   ```sql
   WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
   ```

2. **Type the String Literal Manually**

   - **Delete** the existing `'City Of New York"` from your query.
   - **Manually type** the string literal using single quotes:

     ```sql
     'City Of New York'
     ```

3. **Check for Hidden Characters or Smart Quotes**

   - Sometimes, text editors automatically convert straight quotes `'` into curly or smart quotes `‘’`, which are not recognized in SQL.
   - Ensure that you're using standard, straight single quotes.

4. **Test a Simple Query**

   To verify that your SQL environment handles string literals correctly, run the following simple query:

   ```sql
   SELECT 'Test String' AS "Test";
   ```

   - If this query fails, there may be issues with how your SQL environment interprets quotation marks.

5. **Use a Plain Text Editor**

   - Write your SQL query in a plain text editor like Notepad or Notepad++.
   - This helps avoid any hidden formatting or special characters.

6. **Copy the Entire Corrected Query**

   Here's the **corrected query**. Please copy the entire query and ensure that the quotation marks are exactly as shown:

   ```sql
   SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
   FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
   WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
     AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
   LIMIT 100;
   ```

---

### **Alternative Approach**

If the issue persists, let's try an alternative method using a parameterized query or the ASCII code for single quotes.

#### **Using Double Single Quotes**

In SQL, to include a single quote within a string literal, you use two single quotes `''`. However, in this case, since we're dealing with mismatched quotes, we can ensure that both quotes are single quotes.

#### **Using LIKE Clause**

Alternatively, you can use the `LIKE` operator to avoid exact string matching issues:

```sql
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" LIKE 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

---

### **Possible Reasons for Persistent Error**

- **Copy-Paste Issues:** Sometimes, copying and pasting from certain applications (like word processors or emails) can introduce hidden formatting characters.
- **Text Encoding:** There might be encoding issues causing the quotes to be misinterpreted.
- **SQL Client Settings:** Your SQL client might have specific settings or limitations affecting how queries are parsed.

---

### **Final Recommendations**

1. **Manually Type the Query**

   - Instead of copying and pasting, **type out the entire query manually** in your SQL client.

2. **Verify Quotation Marks**

   - Ensure that all quotation marks are the standard single `'` and double `"` quotes.
   - There should be no mismatched or smart quotes.

3. **Simplify the Query**

   - Try running a very simple version of the query to test:

     ```sql
     SELECT *
     FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
     WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
     LIMIT 10;
     ```

4. **Consult Documentation**

   - Refer to your SQL client or platform documentation to check for any known issues with quotation marks.

---

### **Example of Corrected Query Execution**

```sql
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

**Expected Result:**

You should receive a list of claims with non-null contents damage amounts for 'City Of New York'.

---

### **Additional Support**

If you're still experiencing errors after following these steps:

- **Provide Full Error Message:** Share the complete error message without any truncation.
- **Screen Capture:** If possible, take a screenshot of your SQL query and the error (be cautious with sensitive information).
- **Check Environment Settings:** Ensure your SQL environment is properly configured and up-to-date.

---

### **Summary**

- The syntax error is due to mismatched quotation marks in your query.
- Ensure that the string `'City Of New York'` is enclosed in matching single quotes.
- Manually typing the query can help avoid hidden characters or formatting issues.

---

Please try these steps, and let me know if you're able to run the query successfully or if you need further assistance. I'm here to help!
2025-02-10 09:22:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:22:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:22:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:22:06 - snowflake.connector.connection - INFO - closed
2025-02-10 09:22:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:23:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:23:12 - root - INFO - It appears that you're still encountering the same syntax error. Based on the error message:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.
```

This suggests that the SQL compiler is seeing the `WHERE` keyword at the very beginning of the input (line 1, position 0), which implies that the query being submitted starts with `WHERE` and is missing the preceding `SELECT` and `FROM` clauses.

**Possible Cause:**

- **Incomplete Query Submission:** You might be accidentally submitting only the `WHERE` clause instead of the entire SQL query.

**Solution:**

Please ensure that you're submitting the **entire SQL query**, starting from the `SELECT` statement, not just the `WHERE` clause.

**Here's the full corrected SQL query:**

```sql
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
```

**Action Steps:**

1. **Copy the Entire Query:**

   - Make sure to copy the entire query above, from `SELECT` to the semicolon `;` at the end.

2. **Check Quotation Marks:**

   - The string literal `'City Of New York'` is enclosed in **matching single quotes** `'`.
   - All column names are enclosed in double quotes `"..."`.

3. **Paste and Execute the Query:**

   - Paste the full query into your SQL client or interface.
   - Ensure that there are no unintended characters or missing parts.

4. **Verify Your SQL Environment:**

   - If you're using a query builder or interface that separates different parts of the query (e.g., separate fields for `SELECT`, `FROM`, `WHERE`), ensure that each part is entered in the appropriate place.
   - If the interface expects the `WHERE` clause separately, then you should only input the condition without the `WHERE` keyword.

   **For example:**

   - **Condition:** `"NFIP_COMMUNITY_NAME" = 'City Of New York' AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL`

5. **Test a Simple Query:**

   - Try running a basic query to ensure your environment is working correctly.

     ```sql
     SELECT 1;
     ```

   - If this simple query fails, there may be an issue with your SQL client or connection.

**Additional Tips:**

- **Avoid Copy-Paste Issues:**

  - When copying code from emails or documents, hidden characters or formatting can cause problems.
  - Paste the query into a plain text editor first to ensure it's clean before copying it into your SQL client.

- **Check for Hidden Characters:**

  - Ensure there are no hidden spaces or special characters at the beginning of your query.

- **Manual Typing:**

  - If possible, try typing out the query manually to avoid any issues with copy-paste.

**Example Execution:**

After running the corrected query, you should receive results similar to:

```csv
DATE_OF_LOSS,CONTENTS_DAMAGE_AMOUNT
2012-10-30,3137.0
2012-10-29,9921.0
2012-10-29,21382.0
2012-10-29,10544.0
2012-10-29,16029.0
...
```

**Summary:**

- **Issue:** The error message suggests that the SQL compiler is encountering `WHERE` at the start of the query, indicating that the `SELECT` and `FROM` clauses are missing.
- **Solution:** Use the full SQL query provided above, starting from `SELECT`.

**Let me know if you're able to run the query successfully or if you need further assistance. I'm here to help!**
2025-02-10 09:23:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:23:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:23:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:23:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:23:14 - snowflake.connector.connection - INFO - closed
2025-02-10 09:23:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:24:25 - root - INFO - SQL:
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
Results:
DATE_OF_LOSS,CONTENTS_DAMAGE_AMOUNT
2012-10-29,14996.0
2021-09-01,0.0
2023-09-29,70509.0
2023-09-29,1200.0
2023-09-29,0.0
1992-12-11,1530.0
2012-10-29,3820.0
2012-10-29,11620.0
2012-10-30,36163.0
2012-10-30,15007.0
2022-12-22,0.0
2012-10-29,10544.0
2012-10-29,16029.0
2021-09-01,0.0
2022-12-23,0.0
2021-09-01,3182.0
2012-10-29,7538.0
2012-10-29,1159.0
2022-12-23,8387.0
2021-09-02,0.0
2012-10-30,49133.0
2012-10-30,21329.0
2012-10-29,18946.0
2021-09-01,0.0
2022-01-23,0.0
2021-09-01,0.0
2021-09-01,0.0
2012-10-29,23699.0
2021-09-01,0.0
2012-10-29,11000.0
2012-10-29,10107.0
2021-09-02,218.0
2012-10-30,48200.0
2012-10-29,8259.0
2012-10-29,322.0
2012-10-29,8783.0
2021-09-01,734.0
2022-12-23,0.0
2022-12-23,13154.0
2012-10-28,1238.0
2012-10-29,22067.0
2021-08-22,1388.0
2021-09-01,637.0
2022-12-23,931.0
2012-10-29,1497.0
2012-10-29,1435.0
2021-09-01,1739.0
2012-10-29,2997.0
2012-10-29,15639.0
2022-12-23,3853.0
2012-10-29,12309.0
2021-09-01,1865.0
2012-10-30,11406.0
2024-01-11,0.0
2012-10-29,21745.0
2021-09-01,1313.0
2012-10-30,6588.0
2022-12-23,0.0
2012-10-29,11787.0
2012-10-29,95301.0
2012-10-29,9918.0
2021-09-01,0.0
2021-09-01,0.0
2012-10-29,17246.0
2012-10-29,39577.0
2012-10-31,31954.0
2012-10-29,43106.0
2023-09-29,0.0
2012-10-29,1294.0
2021-09-01,721.0
2012-10-29,14416.0
2012-10-29,1195.0
2012-10-30,1833.0
2021-09-01,3604.0
2012-10-29,4121.0
2012-10-29,17721.0
2021-08-21,15599.0
2021-09-01,0.0
2021-09-01,0.0
2023-12-18,0.0
2023-04-30,0.0
2012-10-29,7162.0
2022-12-23,25453.0
2012-10-30,14112.0
2021-08-23,0.0
2012-10-30,40092.0
2023-09-29,0.0
2021-09-02,7144.0
2012-10-29,9563.0
2012-10-29,21899.0
2012-10-30,21086.0
2012-10-29,2991.0
2022-12-23,1791.0
2012-10-30,12600.0
2021-09-01,2587.0
2011-08-28,5237.0
2012-10-29,27810.0
2021-09-01,0.0
2012-10-29,6388.0
2012-10-29,1325.0

2025-02-10 09:24:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 9
2025-02-10 09:24:26 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:27 - root - INFO - SQL:
-- 9. List the causes of damage for claims in 'City Of New York'
SELECT DISTINCT "CAUSE_OF_DAMAGE"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Results:
CAUSE_OF_DAMAGE
""
Other causes
Tidal water overflow
Erosion-demolition
Alluvial fan overflow
Expedited claim handling process follow-up site inspection
Accumulation of rainfall or snowmelt
"Stream, river, or lake overflow"
Erosion-removal

2025-02-10 09:24:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:24:28 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:28 - root - INFO - SQL:
-- 10. Retrieve claim IDs and damage amounts for 'City Of New York' for verification
SELECT "NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_ID", "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Results:
Too long, hard cut:
NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_ID,DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT,CONTENTS_DAMAGE_AMOUNT
8aa68fb5-3af7-46e7-909c-46bc7c87aee5,2012-10-29,34625.0,14996.0
8616287f-7432-4ec6-bcf4-9af9c3be5047,2021-09-01,21913.0,0.0
96e28220-e249-4b08-ab9c-2c72ad8b2cd3,2023-09-29,,70509.0
7de96317-8463-4ee0-a566-19328cdafb56,2011-08-28,2574.0,
b237cac7-1255-4477-a4da-f78c63e4758f,2023-09-29,25486.0,1200.0
40468e02-04f1-46dd-bee8-b6a1f87e3bae,2023-09-29,11182.0,
fede74bb-c28d-40d6-93a7-de9b8eeecee9,2012-10-29,44795.0,
83e98f6e-ad52-41c3-968e-5f2150bb25d2,2023-09-29,17023.0,0.0
e369a862-5307-4e5a-bb8b-af58c3e99433,1992-12-11,,1530.0
62923adb-e2b0-47b5-a37a-df6b57c0d6cd,2021-09-01,,
c11a0214-d780-4d46-8ded-91fc556461bc,2012-10-29,28765.0,
d0f20e95-ef39-451e-b8c5-aedfbc78deb3,2012-10-30,30011.0,
efab097c-31ca-4acf-bcf4-54a490fc7ea9,2012-10-29,42711.0,3820.0
176d9e40-51dd-4955-9c25-cc598a35d4cb,2012-10-29,52773.0,11620.0
6753dedc-f6c9-402d-9fc0-e6c577c5366c,2012-11-07,,
ad0ff777-f81a-40d5-a341-1db8c872f8cd,2011-08-28,5031.0,
95179131-55b1-4df6-abf1-490e364d6abc,2012-10-30,109885.0,36163.0
09cad34e-2878-4163-b640-5c23dba59b47,2012-10-29,98586.0,
bcd24534-49ff-4ab8-987d-baa9f258566d,2011-08-27,1167.0,
59656d12-2e59-40b8-89f2-409e7e30c671,2012-10-30,66357.0,15007.0
aacdaad5-858a-4adf-aad8-f16e924b9198,2022-12-22,25118.0,0.0
c521fba8-e52f-4176-89a8-fb3b7d2b0ebc,2012-10-29,36069.0,
21ceacbd-09fe-45a6-b6cc-41253b83c0b6,1992-12-11,,
9ad98555-6e87-49db-800b-1f71fd8a9f9a,2012-10-30,33512.0,
3a1c3832-8682-459d-9b64-094a618bc80f,2023-09-26,,
20359f63-84fb-48d9-9217-2a0f2970b8d7,2011-08-28,5717.0,
eda24380-81e5-450f-9451-eca8ebf062c5,2012-10-29,75308.0,
01ed4c63-0166-49a7-9cb6-1de015cec913,2012-10-29,12503.0,
24b53c3c-a6fd-4f5c-b4a7-f965add4dfb5,2012-10-30,36304.0,
ada9be64-84b4-40cc-9bbf-4a1cd962a081,2012-10-29,16931.0,4000.0
88385961-0dff-4db3-b3e2-f20f1b8fe7ae,2012-10-29,107268.0,
74e0b0c4-8720-4df3-ba10-e3edb5489085,2021-09-01,10358.0,
1f307f3c-67ff-4b2d-a5fe-5d62392f6aee,2012-10-29,76920.0,24187.0
5e18068f-0e3c-4737-a6e1-6670bdc02224,2023-09-29,10279.0,2503.0
1475c1b8-fbc3-4f0e-997b-66c8afea5f2d,2021-09-01,1964.0,0.0
a2699d0e-48c1-46f1-9ec1-915894a84494,2012-10-30,39191.0,1439.0
ddc365da-0bd8-47aa-80ba-1a93bf6d182b,2012-10-29,23152.0,4862.0
38e5b8db-8ca1-4560-b4d7-a6a6e658fea3,2012-10-29,12345.0,
267da2e0-ca2c-458b-8144-dcbc0f507ae1,2012-10-29,52781.0,
773d58ba-a4fc-4891-8a3a-1023b9e3c5e5,2012-10-29,19437.0,
eb0ccb2f-2b82-4a11-8ba5-96bc39c501b0,2012-10-29,33941.0,8500.0
a8412c93-1d93-4fb2-a0a2-f59dc77333dc,2012-10-29,106269.0,43966.0
87f7187d-79b8-44ee-af36-99feeb85c3bf,2021-09-01,7757.0,1878.0
e0d39284-e906-4c19-b694-d450bee16856,2012-10-29,1915.0,
364423f3-e3bf-4598-82cf-f00d1f12f836,2015-02-26,,
59c7c2d2-8256-40b0-a44e-b66af8e170e1,2012-10-29,37803.0,
4fa1d91c-bfce-45ce-bec6-84df383c7b82,2021-09-01,16089.0,2020.0
73720f81-10bb-4f01-9b01-5a7115079bf8,2011-08-28,6809.0,
e199e9b9-1c61-4950-8064-6088b611c8aa,2017-05-04,3331.0,
01344d8c-bbaf-4d8c-aa87-1dd759a50a7e,2012-10-29,38468.0,9868.0
7842aa05-b385-46ba-906e-2198a282865b,2021-09-01,5237.0,0.0
fab0403a-4a06-4e79-8cf6-b11c833b3311,2011-08-28,50367.0,
be3da9f4-4f54-4acd-b62f-fd5ddc12dae5,2012-10-29,1592.0,
f3d348c7-c651-4716-a000-7e0a8f6b8a86,2012-10-29,42501.0,14191.0
2f74cd75-086f-4b7b-88e0-48258b63263e,2021-09-02,22809.0,1343.0
10b37b59-5917-4f91-acd1-9839280543c8,2021-09-02,94971.0,51527.0
f3f86a64-cadc-4b35-b2ea-22c8d8a34e23,2012-10-30,36085.0,1604.0
e8c259c3-a0e2-4e70-8b31-7d266d088bff,2012-10-29,32979.0,
7a8b4d80-e877-48c2-8fdd-e9cb24201670,2012-10-29,140702.0,18653.0
0e42815f-6ade-4a63-ab9f-9a498a359314,2012-10-29,20489.0,13543.0
9cc35b62-1f4a-42a9-9ea4-f64b030dc0cb,2023-07-02,645.0,0.0
08183080-4bb0-4f15-bf85-5c8ed8044031,2012-10-29,123179.0,
e9673a1f-401b-4795-af7b-ed8d3b712f84,2012-10-29,50599.0,
0c9c5fb2-c7bc-4f8e-b250-6208eae32b8f,2012-10-29,140460.0,
1dde9549-48ec-4bed-a5c7-cdfaa84c42e1,1992-12-11,,
0c936ba3-1f50-499c-be22-e229a3e66b00,2012-10-30,43866.0,
8339bc6a-3e97-4fbf-aa27-a57ced0f69fe,2021-09-01,19904.0,5291.0
2512a642-3af0-42ef-bc78-81acc8b3f15c,2012-10-30,165405.0,
b390cc0e-ca68-4f29-87c4-d9e8f790569b,2012-10-30,18300.0,1723.0
257c8f43-dce3-4fdf-a092-7007e365b610,2012-10-29,30200.0,
cf45b4ad-1367-4472-9a07-f0a34a465529,2011-08-27,7154.0,
0f774819-c5dc-49cc-969d-1a3de3541589,2012-10-29,63431.0,
e5c08023-1f44-44d0-bfa4-2258ceb6ad68,2012-10-29,154700.0,
9714b88d-936b-4a2d-b99c-808b573152ce,2012-10-30,27979.0,
ddbeb6cd-29f9-4e04-8e99-20752b1adba3,2012-10-29,25648.0,10859.0
646140ff-7ccf-409b-8f71-0deae4a018ed,2012-10-29,70350.0,40658.0
7535ca58-96ef-422d-9fbf-0010c35d8b92,2012-10-30,32678.0,4933.0
80c86379-ac1f-4717-b85f-c36a8121c00e,2021-09-07,15682.0,0.0
af165836-4629-4129-a560-7bf89cffcc3e,2022-12-23,8825.0,0.0
e2604c33-b87b-4aed-b074-eba889000be6,2012-10-29,59949.0,24640.0
398a68d2-a085-48e6-80b3-6fa69634bea7,2012-10-29,34882.0,15058.0
6167dc12-727d-44da-9987-c81b3c3a6aea,2012-10-29,31730.0,
8ef2862b-2a37-4aa6-9c31-92cd09b104e3,2012-10-29,112612.0,
d191a

2025-02-10 09:24:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:24:30 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:30 - root - INFO - SQL:
-- 11. Retrieve claims with building damage amount greater than a certain value for 'City Of New York'
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "BUILDING_DAMAGE_AMOUNT" > 100000
LIMIT 100
Results:
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT
2012-10-29,205938.0
2012-10-29,189286.0
2012-10-29,220560.0
2012-10-30,140550.0
2012-10-29,252001.0
2012-10-29,229107.0
2012-10-29,111292.0
2012-10-29,100710.0
2012-10-29,102584.0
2012-10-29,203186.0
2012-10-28,3349434.0
2012-10-29,107868.0
2012-10-29,132165.0
2012-10-29,102930.0
2012-10-29,126224.0
2012-10-29,109179.0
2012-10-29,148071.0
2012-10-29,225118.0
2012-10-29,158035.0
2012-10-29,101000.0
2012-10-29,194881.0
2012-10-29,171702.0
2012-10-29,283552.0
2012-10-29,262790.0
2012-10-29,145758.0
2012-10-30,105384.0
2012-10-29,143649.0
2012-10-29,118741.0
2012-10-29,106111.0
2012-10-29,101954.0
2012-10-29,108127.0
2012-10-29,111073.0
2012-10-29,105300.0
2012-10-29,107830.0
2012-10-29,157756.0
2012-10-29,287703.0
2012-10-29,117498.0
2012-10-29,112691.0
2012-10-29,117629.0
2012-10-29,115227.0
2012-10-29,130251.0
2012-10-29,369586.0
2012-10-29,314208.0
2012-10-29,104137.0
2012-10-29,107130.0
2012-10-29,6178677.0
2012-10-29,115918.0
2012-10-29,284507.0
2012-10-29,136689.0
2014-04-30,129953.0
2012-10-30,148270.0
2012-10-29,389029.0
2012-10-29,118764.0
2012-10-29,116241.0
2012-10-29,134782.0
2012-10-30,156050.0
2012-10-30,196055.0
2012-10-29,108661.0
2012-10-30,188908.0
2012-11-05,120498.0
2012-10-30,101093.0
2012-10-30,109916.0
2012-10-29,152445.0
2012-10-29,114200.0
2012-10-29,234010.0
2012-10-29,538938.0
2012-10-29,132834.0
2012-10-29,105383.0
2012-10-29,145885.0
2021-09-01,257674.0
2012-10-29,631357.0
2012-10-29,125449.0
2012-10-30,122661.0
2021-09-01,102690.0
2012-10-29,121733.0
2012-10-29,1180256.0
2021-09-01,479739.0
2012-10-29,181231.0
2012-10-29,302505.0
2012-10-29,138224.0
2012-10-29,179761.0
2021-09-01,176542.0
2012-10-30,107776.0
2021-09-01,126530.0
2012-10-29,159061.0
2012-10-29,131919.0
2023-09-29,116657.0
2012-10-29,217831.0
2021-09-01,101548.0
2012-10-29,164420.0
2021-09-02,103252.0
2012-10-30,103360.0
2012-10-29,125423.0
2012-10-29,263687.0
2012-10-30,102900.0
2012-10-29,109800.0
2012-10-29,162157.0
2012-10-30,122217.0
2012-10-29,110488.0
2012-10-29,293008.0

2025-02-10 09:24:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:24:32 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:32 - root - INFO - SQL:
-- 12. Retrieve latitude and longitude for mapping claims in 'City Of New York'
SELECT "LATITUDE", "LONGITUDE", "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Results:
LATITUDE,LONGITUDE,DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT
40.6,-73.9,2012-10-29,34625.0
40.6,-74.1,2021-09-01,21913.0
,,2023-09-29,
40.6,-73.9,2011-08-28,2574.0
40.8,-73.9,2023-09-29,25486.0
40.6,-73.9,2023-09-29,11182.0
40.6,-73.9,2012-10-29,44795.0
40.6,-73.9,2023-09-29,17023.0
40.6,-73.9,1992-12-11,
40.6,-73.9,2021-09-01,
40.5,-74.1,2012-10-29,28765.0
40.6,-74.1,2012-10-30,30011.0
40.6,-73.9,2012-10-29,42711.0
40.6,-73.9,2012-10-29,52773.0
40.6,-74.1,2012-11-07,
40.6,-74.1,2011-08-28,5031.0
40.6,-73.8,2012-10-30,109885.0
40.6,-73.8,2012-10-29,98586.0
40.7,-73.8,2011-08-27,1167.0
40.6,-73.9,2012-10-30,66357.0
40.6,-73.8,2022-12-22,25118.0
40.6,-74.0,2012-10-29,36069.0
40.6,-73.9,1992-12-11,
40.6,-74.0,2012-10-30,33512.0
40.6,-74.0,2023-09-26,
40.7,-73.8,2011-08-28,5717.0
40.6,-74.1,2012-10-29,75308.0
40.6,-73.8,2012-10-29,12503.0
40.6,-74.1,2012-10-30,36304.0
40.6,-73.9,2012-10-29,16931.0
40.6,-73.9,2012-10-29,107268.0
40.9,-73.8,2021-09-01,10358.0
40.6,-74.1,2012-10-29,76920.0
40.6,-73.9,2023-09-29,10279.0
40.6,-74.1,2021-09-01,1964.0
40.6,-73.8,2012-10-30,39191.0
40.6,-73.8,2012-10-29,23152.0
40.6,-73.8,2012-10-29,12345.0
40.6,-74.1,2012-10-29,52781.0
40.6,-74.1,2012-10-29,19437.0
40.6,-73.7,2012-10-29,33941.0
40.6,-73.9,2012-10-29,106269.0
40.6,-73.9,2012-10-29,34387.0
40.6,-74.0,2012-10-30,34289.0
40.6,-73.9,2012-10-29,88439.0
40.6,-73.8,2012-10-29,30207.0
40.6,-74.1,2012-10-29,8809.0
40.7,-74.0,2022-10-02,
40.6,-73.8,2012-10-30,23800.0
40.6,-73.8,1992-12-11,8783.0
40.6,-73.7,2012-10-29,74279.0
40.7,-73.8,2022-12-23,12660.0
40.6,-74.1,2012-10-30,110059.0
40.6,-73.8,2023-09-29,6021.0
40.6,-74.1,2012-10-30,51119.0
40.8,-73.9,2012-10-29,15531.0
40.6,-73.9,2012-10-29,23731.0
40.6,-73.9,2012-10-29,103707.0
40.9,-73.8,2012-10-29,12697.0
40.6,-74.0,2012-10-29,24615.0
40.6,-73.9,2012-10-29,103729.0
40.6,-73.9,2012-10-29,152713.0
40.7,-74.0,2023-09-29,3799.0
40.6,-74.1,2012-10-30,35331.0
40.6,-74.1,2012-10-29,8060.0
40.6,-73.8,2018-10-27,9823.0
40.6,-73.9,2012-10-29,77557.0
40.6,-73.9,2011-08-28,15304.0
40.6,-74.1,2012-12-27,4109.0
40.6,-74.0,2012-10-29,30853.0
40.6,-73.9,2012-10-29,354000.0
40.6,-73.9,2012-10-29,43399.0
40.8,-73.8,2020-06-06,5335.0
40.6,-74.1,2012-10-29,95685.0
40.6,-74.0,2012-10-29,48005.0
40.6,-73.8,2012-10-29,34637.0
40.6,-73.8,2011-08-27,6091.0
40.7,-73.9,2021-08-23,12650.0
40.6,-74.1,2021-09-01,5975.0
40.6,-73.9,2012-10-29,28782.0
40.6,-73.9,2021-09-01,0.0
40.6,-73.9,2012-10-29,75923.0
40.7,-73.8,2023-09-29,0.0
40.7,-73.8,2014-04-30,
40.6,-73.9,2012-10-29,15563.0
40.6,-74.1,2011-08-28,2214.0
40.7,-73.9,2014-05-01,4913.0
40.6,-73.8,2012-10-30,31017.0
40.6,-73.8,2023-09-30,3666.0
40.6,-73.8,2012-10-29,81522.0
40.6,-74.1,2012-10-29,49459.0
40.6,-73.9,2012-10-29,68711.0
40.7,-73.8,2008-06-14,10758.0
40.6,-73.8,2012-10-30,165469.0
40.7,-73.7,2023-07-18,0.0
40.6,-73.9,2011-08-28,6793.0
40.5,-74.2,2012-10-29,72890.0
40.8,-73.8,2021-09-02,6917.0
40.6,-73.8,2017-05-13,
40.6,-74.0,2012-10-29,519027.0

2025-02-10 09:24:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-02-10 09:24:33 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:33 - root - INFO - SQL:
-- 13. Get the flood types associated with claims in 'City Of New York'
SELECT DISTINCT "FLOOD_TYPE"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Results:
FLOOD_TYPE
""
Low-Velocity Flow or Ponding

2025-02-10 09:24:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-02-10 09:24:35 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:35 - root - INFO - SQL:
-- 14. Retrieve claims grouped by flood event in 'City Of New York'
SELECT "FLOOD_EVENT", COUNT(*) AS "Number_of_Claims"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
GROUP BY "FLOOD_EVENT"
ORDER BY "Number_of_Claims" DESC
LIMIT 100
Results:
FLOOD_EVENT,Number_of_Claims
Hurricane Sandy,7354
,1542
Hurricane Ida,1116
Hurricane Irene,916
Late-September New York Flooding,451
Nor'easter,170
December Storm - Nor'easter,150
Late summer storms,127
Mid-spring storms,79
Tropical Storm Henri,69
Torrential rain,59
Flooding,17
Tropical Storm Lee,12
"The ""Halloween"" Storm",8
Blizzard of 1993,5
December Nor'easter,4
Hurricane Floyd,2
Tropical Storm Fred,1
Vermont/New York Flooding,1
Hurricane Debby,1

2025-02-10 09:24:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:24:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:24:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:24:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 09:24:36 - snowflake.connector.connection - INFO - closed
2025-02-10 09:24:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:24:37 - root - INFO - SQL:
-- 15. Retrieve all damage amounts for 'City Of New York' between 2010 and 2019
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT", "NET_BUILDING_PAYMENT_AMOUNT", "NET_CONTENTS_PAYMENT_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
LIMIT 100
Results:
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT,CONTENTS_DAMAGE_AMOUNT,NET_BUILDING_PAYMENT_AMOUNT,NET_CONTENTS_PAYMENT_AMOUNT
2012-10-29,34625.0,14996.0,33624.37,13995.03
2011-08-28,2574.0,,1672.55,0.0
2012-10-29,44795.0,,47896.5,0.0
2012-10-29,28765.0,,32005.65,0.0
2012-10-30,30011.0,,30488.89,0.0
2012-10-29,42711.0,3820.0,44237.32,2820.0
2012-10-29,52773.0,11620.0,51772.82,10619.22
2012-11-07,,,0.0,0.0
2011-08-28,5031.0,,471.55,0.0
2012-10-30,109885.0,36163.0,119974.73,35162.53
2012-10-29,98586.0,,97585.71,0.0
2011-08-27,1167.0,,0.0,0.0
2012-10-30,66357.0,15007.0,85348.43,14006.06
2012-10-29,36069.0,,40057.31,0.0
2012-10-30,33512.0,,33920.51,0.0
2011-08-28,5717.0,,3716.31,0.0
2012-10-29,75308.0,,95811.7,0.0
2012-10-29,12503.0,,11502.39,0.0
2012-10-30,36304.0,,34303.37,0.0
2012-10-29,16931.0,4000.0,15931.08,3000.0
2012-10-29,107268.0,,102268.99,0.0
2012-10-29,76920.0,24187.0,77447.97,19186.75
2012-10-30,39191.0,1439.0,44318.02,438.65
2012-10-29,23152.0,4862.0,28546.4,3861.04
2012-10-29,12345.0,,11345.58,0.0
2012-10-29,52781.0,,52780.22,0.0
2012-10-29,19437.0,,19548.02,0.0
2012-10-29,33941.0,8500.0,32474.95,3499.95
2012-10-29,106269.0,43966.0,105269.14,42966.64
2012-10-29,29236.0,14471.0,39277.58,13471.34
2018-01-09,,,0.0,0.0
2012-10-30,65343.0,,64342.52,0.0
2012-10-29,35718.0,,30718.09,0.0
2012-10-30,16958.0,1105.0,15958.57,105.27
2012-10-29,66512.0,,61511.09,0.0
2011-08-27,12831.0,,11403.19,0.0
2012-10-29,,,0.0,0.0
2011-08-28,8508.0,1756.0,3507.71,755.93
2012-10-29,53772.0,1340.0,52771.48,339.75
2012-10-29,5572.0,,4571.33,0.0
2012-10-29,81341.0,,79340.89,0.0
2012-10-29,43554.0,,42750.88,0.0
2012-10-30,45618.0,,47310.21,0.0
2012-10-30,81982.0,,80982.42,0.0
2012-10-29,177848.0,0.0,175848.71,0.0
2012-10-29,235692.0,86525.0,250000.0,85525.05
2013-03-14,,,0.0,0.0
2012-10-29,,,0.0,0.0
2012-10-29,86921.0,20770.0,93080.7,19769.89
2012-10-29,17216.0,,19656.51,0.0
2012-10-29,58288.0,,53288.21,0.0
2012-10-30,23202.0,1992.0,22201.51,991.29
2012-10-29,96226.0,,91226.31,0.0
2012-10-29,72265.0,29267.0,75275.78,28266.73
2012-10-29,289326.0,45067.0,250000.0,40066.1
2012-10-29,41402.0,8399.0,40401.91,7398.67
2012-10-29,18001.0,970.0,16001.84,0.0
2012-10-29,62519.0,,63821.19,0.0
2012-10-29,24175.0,,20976.28,0.0
2012-10-29,28357.0,0.0,23358.87,0.0
2012-10-29,98669.0,,97668.21,0.0
2012-10-29,74672.0,,84684.14,0.0
2012-10-30,32372.0,,33342.56,0.0
2012-10-29,93521.0,,91520.48,0.0
2012-10-29,83325.0,,89114.24,0.0
2012-10-29,40979.0,,35978.01,0.0
2012-10-30,58298.0,,53297.85,0.0
2012-10-29,8598.0,,12616.08,0.0
2011-08-14,3458.0,,2457.31,0.0
2012-10-29,46160.0,10777.0,46040.92,9776.99
2012-10-29,92702.0,11000.0,91701.91,10000.0
2018-04-16,,,0.0,0.0
2012-10-29,25473.0,,23473.23,0.0
2014-04-30,3482.0,,2622.07,0.0
2012-10-29,42216.0,,41875.02,0.0
2012-10-29,48165.0,,43164.57,0.0
2012-10-30,16997.0,,15996.25,0.0
2012-10-30,8136.0,,6135.53,0.0
2012-10-29,52757.0,,51756.52,0.0
2012-10-29,209413.0,90920.0,250000.0,89920.01
2012-10-29,107001.0,,102000.37,0.0
2011-08-28,7272.0,,6271.79,0.0
2011-08-27,30450.0,,25449.01,0.0
2012-10-29,42301.0,,40300.93,0.0
2012-10-29,68397.0,,68973.12,0.0
2012-10-30,25232.0,,31645.06,0.0
2012-10-30,120333.0,,186575.71,0.0
2012-10-30,31706.0,,28547.65,0.0
2011-08-27,6333.0,,5343.24,0.0
2012-10-29,91301.0,42559.0,89300.75,40558.21
2012-10-29,93424.0,14435.0,116539.77,10500.0
2014-04-30,11657.0,,10656.98,0.0
2012-10-29,142475.0,,154627.23,0.0
2012-10-29,39515.0,4045.0,38514.25,3044.84
2012-10-29,34131.0,,33130.24,0.0
2012-10-30,1669415.0,,500000.0,0.0
2012-10-29,60308.0,,59307.71,0.0
2012-10-29,32823.0,,31822.53,0.0
2012-10-29,84914.0,17103.0,91341.42,16102.24
2012-10-30,21721.0,,24083.6,0.0

2025-02-10 09:24:37 - root - INFO - itercount: 0
2025-02-10 09:24:37 - root - INFO - Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,0
table_name,AIRCRAFT_INDEX
description,"The Aircraft Index table details the various aircraft models used by carriers, including their unique identification codes, names, and associated attributes such as aircraft group and cabin configuration."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,1
table_name,AIRPORT_INDEX
description,"The Airport Index table catalogs airports tracked by the US DOT Domestic Segment data, featuring their unique DOT codes, IATA alpha codes, and additional location-specific information."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,2
table_name,BANK_FOR_INTERNATIONAL_SETTLEMENTS_ATTRIBUTES
description,"Financial variables on international property prices, central bank policy rates, banking activities and risks, credit availabity to the non-financial sector, liquidity, and consumer prices from the BIS, a central bank for other central banks.

The Bank for International Settlements (BIS) is an international financial organization that provides data series on Property Prices (real estate market trends), Central Bank Policy Rates (global monetary policy), Locational and Consolidated Banking Statistics (international banking activities and risks), Credit to the Non-Financial Sector (credit availability), Global Liquidity Indicators, and Consumer Prices (inflationary activity).

Provides a wide format breakdown of variables included in the bank_for_international_settlements_timeseries table. The BIS Series ID is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,3
table_name,CANADA_STATCAN_TIMESERIES
description,"Canadian economic, demographic, and social data, including income, household finances, prices, GDP, labor market, census, and more, by geographic entity over time.

Statistics Canada provides insights into Canada's economy, demographics, and social structure. Reports include analyses of income and government transfers by economic family type; household economic distributions covering income, consumption, and saving; and current and historical retail prices. Key economic indicators such as the Consumer Price Index, Gross Domestic Product, and the New Housing Price Index are detailed, along with labor market data like employment by industry and labor force statistics. The Census Profiles furnish comprehensive data on private household income, population, dwellings, and age groups, while other reports track monthly foreign exchange rates, industrial product prices, credit liabilities of households, and both current and historical retail trade sales.

Each row represents a distinct timeseries, date, and value by geographic entity, JOINABLE to Cybersyn's geography entity tables. Each variable is detailed in the canada_statcan_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,4
table_name,COMPANY_CHARACTERISTICS
description,"Characteristics for nearly 100k companies, including EIN, CIK, LEI, address information, industry descriptions, and more, with start and end date ranges, by Cybersyn's COMPANY_ID. This table serves as a compliment to the company_index table, which is the spine for Cybersyn data that involves company-level identifiers.

Provides a long format overview of characteristics associated with a particular COMPANY_ID.

This table includes a unique ID for each company (COMPANY_ID) and associated categorical characteristics (EIN, CIK, LEI, address information, industry descriptions, and more). A characteristic may be temporal with start and end dates indicating the range for which the data is valid."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,5
table_name,COMPANY_SECURITY_RELATIONSHIPS
description,"Map between companies and the securities (stocks, bonds, etc.) they issue, including security identifiers from common open sources, including OpenFIGI and PermID. Maps to Cybersyn's company index.

OpenFIGI and PermID both provide unique identifier systems for entities in the financial world, enhancing data standardization and integration. OpenFIGI (Open Financial Instrument Global Identifier) assigns codes primarily to financial instruments and related entities for improved transparency and efficiency in the global markets, while PermID (Permanent Identifier) by Refinitiv offers unique, machine-readable identifiers to a wide array of data elements including companies, securities, and financial instruments, facilitating consistent data management and interoperability across different systems and platforms in finance.

Provides a map between COMPANY_ID and associated SECURITY_IDs. Securities can have multiple 'levels' associated with one company identifier, such as the PERMID_QUOTE_ID, PERMID_SECURITY_ID, OPENFIGI_SHARE_CLASS_ID, OPENFIGI_COMPOSITE_ID, and OPENFIGI_FIGI_ID.

The PermID Quote ID is an identifier from Refinitiv's PermID system used specifically for quoting purposes. It's linked to the data needed for pricing and quoting a security, such as current stock price, rather than the security's intrinsic characteristics.

The PermID Security ID is an identifier from Refinitiv's PermID system that uniquely identifies individual securities (like stocks or bonds) associated with a company. It focuses on the specific security rather than the broader entity.

The OpenFIGI Composite ID is an identifier from the Bloomberg OpenFIGI system that aggregates all securities (across different markets or exchanges) that are considered part of the same overall listing for a company, providing a composite view of that company's security across markets.

The OpenFIGI Share Class ID is an identifier from the Bloomberg OpenFIGI system that distinguishes different classes of shares (such as Class A, Class B, etc.) issued by a company. Different share classes may have varying voting rights, dividend policies, or other characteristics.

The OpenFIGI FIGI ID is a unique identifier for any financial instrument itself, not limited to shares. It covers a wider range of securities, such as bonds, derivatives, and others."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,6
table_name,DATACOMMONS_ATTRIBUTES
description,"Demographic, economic, government spending, and environmental statistics at national, state, county, and municipal levels, aggregated by Data Commons.

Data Commons is an open source project that integrates data from various public sources to power contextual Google Search. Data Commons covers a variety of topics including demographic, economic, government spending, and environmental statistics at national, state, county, and municipal levels.

Provides a wide format breakdown of variables included in the datacommons_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,7
table_name,EUROPEAN_CENTRAL_BANK_ATTRIBUTES
description,"Consumer price indices, residential property prices, and valuations for European countries and country groups, provided by the European Central Bank.

The European Central Bank (ECB) is a central institution of the Eurozone, primarily responsible for managing the euro and framing and implementing EU economic & monetary policy. Our ECB data covers the following: (1) Consumer Price Indices for a wide range of consumer goods, (2) Residential Property Prices, and (3) Residential Property Valuations. Data is provided for European countries as well as the European country groups.

Provides a wide format breakdown of variables included in the european_central_bank_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,8
table_name,FBI_CRIME_TIMESERIES
description,"Estimated crime statistics for both state and national levels in the US from the FBI.

The FBI, or Federal Bureau of Investigation, is the principal federal law enforcement agency in the United States, tasked with investigating and enforcing federal laws. Data includes crime totals across the nation and its 50 states from 1979.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the fbi_crime_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,9
table_name,FEDERAL_RESERVE_ATTRIBUTES
description,"Borrowing patterns, credit card debt, commercial paper, finance companies, industrial production, capacity utilization, assets, liabilities, and net worth in the US, provided by the Fed.

The Federal Reserve, often referred to as the Fed, is the central banking system of the US. The data details (1) Consumer Credit - borrowing patterns, credit card debt, and other forms of consumer loans, (2) Commercial Paper - a short-term debt instrument used by corporations for financing, (3) health and activity of Finance Companies, (4) Industrial Production and Capacity Utilization of the manufacturing sector, and (5) US Financial Accounts - assets, liabilities, and net worth.

Provides a wide format breakdown of variables included in the federal_reserve_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,10
table_name,FEMA_DISASTER_DECLARATION_INDEX
description,"Financial assistance applications and funding amounts by grant funding type for federally-declared disasters in the US, organized by FEMA.

The Federal Emergency Management Agency (FEMA) provides extensive data on emergency management in the United States. This data encompasses disaster declarations, declared recovery programs, and the National Flood Insurance Program (NFIP) policies and claims. The disaster declaration process involves a collaboration between FEMA and the federal government, where state or tribal governments formally request federal assistance through FEMA after a significant disaster overwhelms their capabilities. Upon receiving the request, FEMA evaluates the situation and advises the President, who then decides whether to declare a federal disaster, enabling the allocation of federal funds and resources to assist in recovery efforts.

Provides a wide format breakdown of federally-declared disasters, including financial assistance values (e.g., the number of approved applications, as well as individual, public assistance, and hazard mitigation grant amounts)."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FEMA_DISASTER_DECLARATION_INDEX (
    DISASTER_END_DATE DATE,
    STATE_OBLIGATED_PUBLIC_ASSISTANCE_CATEGORY_C_TO_G_AMOUNT FLOAT,
    DISASTER_DECLARATION_TYPE TEXT,
    DECLARED_PROGRAMS ARRAY,
    APPROVED_INDIVIDUAL_AND_HOUSEHOLDS_PROGRAM_AMOUNT FLOAT,
    INDIVIDUAL_ASSISTANCE_UPDATE_DATE DATE,
    STATE_OBLIGATED_PUBLIC_ASSISTANCE_CATEGORY_A_B_AMOUNT FLOAT,
    DISASTER_DECLARATION_REQUEST_ID TEXT,
    DISASTER_ID TEXT,
    DISASTER_BEGIN_DATE DATE,
    APPROVED_INDIVIDUAL_ASSISTANCE_APPLICATIONS NUMBER,
    DISASTER_TYPE TEXT,
    STATE_OBLIGATED_HAZARD_MITIGATION_GRANT_PROGRAM_AMOUNT FLOAT,
    STATE_OBLIGATED_PUBLIC_ASSISTANCE_AMOUNT FLOAT,
    DISASTER_DECLARATION_DATE DATE,
    PUBLIC_ASSISTANCE_UPDATE_DATE DATE,
    DISASTER_DECLARATION_NAME TEXT,
    FEMA_DISASTER_DECLARATION_ID TEXT,
    APPROVED_HOUSING_ASSISTANCE_AMOUNT FLOAT,
    APPROVED_OTHER_NEEDS_ASSISTANCE_AMOUNT FLOAT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,11
table_name,INTERNATIONAL_LABOUR_ORGANIZATION_ATTRIBUTES
description,"Global labor market data on employment, unemployment, labor force participation, and other measures broken down by demographic and economic characteristics, provided by the International Labour Organization (ILO).

The International Labour Organization (ILO), a specialized international agency of the United Nations focused on human and labor rights, offers data on various aspects of the labor market, including employment, unemployment, labor force participation, and other measures of labor market status and trends. The model estimates they provide cover parameters such as sex, age, settlement classification, employment status, occupation, economic activity, and economic class. 

Provides a wide format breakdown of variables included in the international_labour_organization_timeseries table. The ILO Series ID is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,12
table_name,IRS_INDIVIDUAL_INCOME_TIMESERIES
description,"Aggregated individual income tax statistics, including population and income changes, at the zip code, county, and state levels, based on annual IRS returns.

The Internal Revenue Service (IRS), which is the revenue service of the US federal government, is responsible for collecting taxes and administering the Internal Revenue Code. The IRS publishes aggregated individual income tax statistics based on annual returns. This data illustrates underlying economic conditions at a zip code and state level as well as measuring population and aggregate income changes between counties and states. It also allows for specific measurement of county-to-county population flow.

Provides historical values for each variable collected by the IRS by GEO_ID.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the irs_individual_income_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,13
table_name,EUROPEAN_COMMISSION_EDGAR_TIMESERIES
description,"Emissions data for CO2, CH4, N2O, and F-gases by country and industry, covering both biogenic and fossil fuel sources, provided by the European Commission.

The Emissions Database for Global Atmospheric Research (EDGAR), developed by the European Commission, compiles and presents global emissions data from both human activities and natural sources. The database offers emissions data on a range of substances, including carbon dioxide (CO2), methane (CH4), nitrous oxide (N2O), and various fluorinated gases (F-gases). EDGAR tracks emissions data by country and industry, encompassing both biogenic and fossil fuel sources.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the european_commission_edgar_attributes table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.EUROPEAN_COMMISSION_EDGAR_TIMESERIES (
    VALUE FLOAT,
    DATE DATE,
    VARIABLE_NAME TEXT,
    VARIABLE TEXT,
    GEO_ID TEXT,
    UNIT TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,14
table_name,US_DEPARTMENT_OF_LABOR_UNEMPLOYMENT_INSURANCE_CLAIMS_TIMESERIES
description,"Initial and continued unemployment insurance claims in the US and each state, released weekly by the US Department of Labor to track US unemployment trends.

The US Department of Labor provides weekly data on Unemployment Insurance (UI) claims. The data is used in the economic analysis of unemployment trends in the nation, and in each state. Initial claims measure emerging unemployment and continued weeks claimed measure the number of persons claiming unemployment benefits.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the us_department_of_labor_unemployment_insurance_claims_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,15
table_name,BANK_FOR_INTERNATIONAL_SETTLEMENTS_TIMESERIES
description,"Country-level statistics on real estate market trends, monetary policy rates, banking activities, credit availability to the non-financial sector, liquidity conditions, and inflation, provided by the central bank for central banks, Bank for International Settlements (BIS).

The Bank for International Settlements (BIS) is an international financial organization that provides data series on Property Prices (real estate market trends), Central Bank Policy Rates (global monetary policy), Locational and Consolidated Banking Statistics (international banking activities and risks), Credit to the Non-Financial Sector (credit availability), Global Liquidity Indicators, and Consumer Prices (inflationary activity).

Each row represents a distinct timeseries, date, and value by primary and counterparty geographic entities (if available). Each variable is detailed in the bank_for_international_settlements_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,16
table_name,DATACOMMONS_TIMESERIES
description,"Demographic, economic, government spending, and environmental statistics at national, state, county, and municipal levels, aggregated by Data Commons.

Data Commons is an open source project that integrates data from various public sources to power contextual Google Search. Data Commons covers a variety of topics including demographic, economic, government spending, and environmental statistics at national, state, county, and municipal levels. This data primarily revolves around geographic entities from the national, state, county, municipal, zip code, and census tract levels.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the datacommons_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,17
table_name,EUROPEAN_COMMISSION_EDGAR_ATTRIBUTES
description,"Emissions data for CO2, CH4, N2O, and F-gases by country and industry, covering both biogenic and fossil fuel sources, provided by the European Commission.

The Emissions Database for Global Atmospheric Research (EDGAR), developed by the European Commission, compiles and presents global emissions data from both human activities and natural sources. The database offers emissions data on a range of substances, including carbon dioxide (CO2), methane (CH4), nitrous oxide (N2O), and various fluorinated gases (F-gases). EDGAR tracks emissions data by country and industry, encompassing both biogenic and fossil fuel sources.

Provides a wide format breakdown of variables included in the european_commission_edgar_timeseries table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.EUROPEAN_COMMISSION_EDGAR_ATTRIBUTES (
    VARIABLE TEXT,
    FREQUENCY TEXT,
    IPCC_INDUSTRY TEXT,
    UNIT TEXT,
    VARIABLE_NAME TEXT,
    MEASURE TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,18
table_name,FDIC_BRANCH_LOCATIONS_INDEX
description,"Index of each FDIC banking institutions' branches.

The Federal Deposit Insurance Corporation (FDIC) is an independent agency of the US government that insures deposits at banks and thrift institutions, up to an insured limit, and promotes the safety and soundness of these financial institutions by identifying, monitoring, and addressing risks. They monitor financial institutions at 3 levels: (1) holding company, (2) institution, and (3) branch. On an annual basis, they conduct the Summary of Deposits survey that gathers data on the deposits held at each FDIC-insured banks' branches (if the bank has at least one branch).

Provides a wide format overview of each banking institutions' branches by FDIC_BRANCH_ID.

The table includes an ID and name for each branch and its associated institution and holding company. It also includes branch-specific location information as well as institution-level regulatory and insurance data."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,19
table_name,FHFA_HOUSE_PRICE_ATTRIBUTES
description,"House price indexes measuring single-family home price changes in the US since 1975, across various geographic levels and property classifications, provided from the FHFA based on Fannie Mae and Freddie Mac mortgage data.

The Federal Housing Finance Agency (FHFA) provides the House Price Index (HPI), a collection of publicly available price indexes that measure movement of single-family house prices in the US since 1975. The FHFA compiles this data by examining repeat mortgage transactions on single-family properties whose mortgages have been purchased or securitized by Fannie Mae or Freddie Mac, across various geographic levels.

Provides a wide format breakdown of variables included in the fhfa_house_price_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including its property classification (traditional, distress-free, non-metro), how the index is measured (all-transactions, purchase-only, expanded-data), the frequency of the measurement, whether the variable is seasonally adjusted, and its unit of measurement."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,20
table_name,FINANCIAL_FRED_ATTRIBUTES
description,"Economic and financial metrics including retail sales, foreign exchange rates, industrial production, and bank-specific data like deposits, liabilities, and loan balances.

FRED, published by the St. Louis Federal Reserve, includes information aggregated from various government sources. It features various economic metrics such as monthly retail sales, foreign exchange rates, and industrial production as well as, financial-institution-specific data (e.g. flow of deposits for small and large banks, total bank liabilities, outstanding balance of commercial real estate loans).

Provides a wide format breakdown of variables included in the financial_fred_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including the type of value being measured, the specific FRED release, the release source, if the variable is seasonally adjusted, its unit of measurement, frequency of measurement, and measurement methodology."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,21
table_name,GEOGRAPHY_HIERARCHY
description,"The Geography Hierarchy table provides hierarchical relationships between a PARENT_GEO_ID and GEO_ID (e.g., country/USA is parent to geoID/01, which is representative of the state of Alabama)."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,22
table_name,HOME_MORTGAGE_DISCLOSURE_ATTRIBUTES
description,"Loan-level data on US mortgage applications, originations, denials, purchases, and sales, including applicant demographics, loan terms, and financial institution details, as aggregated by HMDA.

The Home Mortgage Disclosure Act (HMDA) requires many financial and lending institutions to maintain, report, and publicly disclose loan-level information about mortgages. This data is collected and managed by the Consumer Financial Protection Bureau (CFPB) and the Federal Financial Institutions Examination Council (FFIEC). HMDA data are the most comprehensive source of publicly available information on the US mortgage market and mortgage lending activity. Mandated by the HMDA, the dataset includes various details on mortgage applications, originations, denials, purchases and sales of loans, and other mortgage-related activities. 

Provides a wide format breakdown of loan applications reported by the HMDA.

The table includes details for every home loan application in the US from financial institutions required to file HMDA reports. Institutions that meet criteria such as certain asset thresholds must report HMDA data. Data includes the year of the loan, detailed geographic and demographic information on the applicant, the name of the financial institution, denial rationale, loan terms, and more."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,23
table_name,INTERNATIONAL_LABOUR_ORGANIZATION_TIMESERIES
description,"Global labor market data on employment, unemployment, labor force participation, and other measures broken down by demographic and economic characteristics, provided by the International Labour Organization (ILO).

The International Labour Organization (ILO), a specialized international agency of the United Nations focused on human and labor rights, offers data on various aspects of the labor market, including employment, unemployment, labor force participation, and other measures of labor market status and trends. The model estimates they provide cover parameters such as sex, age, settlement classification, employment status, occupation, economic activity, and economic class. 

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the international_labour_organization_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,24
table_name,IRS_MIGRATION_BY_CHARACTERISTIC_TIMESERIES
description,"Aggregated migration data at zip code, county, and state levels, including population flow, income changes, and demographic characteristics, provided by the IRS.

The Internal Revenue Service (IRS), which is the revenue service of the US federal government, is responsible for collecting taxes and administering the Internal Revenue Code. The IRS publishes aggregated migration data based on annual returns. This data illustrates underlying economic conditions at a zip code and state level as well as measuring population and aggregate income changes between counties and states. It also allows for specific measurement of county-to-county population flow.

Provides historical values for each variable collected by the IRS by GEO_ID.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the irs_migration_by_characteristic_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,25
table_name,OUR_WORLD_IN_DATA_TIMESERIES
description,"Global CO2 emissions data by country, region, sector, and source, showing key contributors and variations over time, provided by Our World in Data (OWID).

OWID is an online publication that presents empirical research and data on global development. 

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the our_world_in_data_attributes table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.OUR_WORLD_IN_DATA_TIMESERIES (
    GEO_ID TEXT,
    DATE DATE,
    VARIABLE TEXT,
    VARIABLE_NAME TEXT,
    UNIT TEXT,
    VALUE FLOAT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,26
table_name,FINANCIAL_FRED_VARIABLE_SERIES_ID_CROSSWALK
description,"Map between FRED's reported SERIES_ID and Cybersyn's VARIABLE identifier, along with the associated GEO_ID.

FRED, published by the St. Louis Federal Reserve, includes information aggregated from various government sources. It features various economic metrics such as monthly retail sales, foreign exchange rates, and industrial production as well as, financial-institution-specific data (e.g. flow of deposits for small and large banks, total bank liabilities, outstanding balance of commercial real estate loans)."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,27
table_name,GEOGRAPHY_RELATIONSHIPS
description,"The Geography Relationships table provides details on relationships between geographic entities of differing levels. This table includes relationships of type 'overlaps' and type 'contains'. For example, it provides a GEO_ID for a zip code that overlaps with a city, and it details a GEO_ID for a state that contains a particular census tract."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.GEOGRAPHY_RELATIONSHIPS (
    RELATED_GEO_NAME TEXT,
    RELATED_GEO_ID TEXT,
    RELATED_LEVEL TEXT,
    RELATIONSHIP_TYPE TEXT,
    GEO_ID TEXT,
    LEVEL TEXT,
    GEO_NAME TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,28
table_name,NOAA_WEATHER_METRICS_ATTRIBUTES
description,"Daily global climate data including temperature, precipitation, snowfall, and snow depth measurements from over 80,000 weather stations worldwide, provided by NOAA.

The National Centers for Environmental Information (NCEI), a division of the National Oceanic and Atmospheric Administration (NOAA), distributes the Global Historical Climatology Network-Daily (GHCNd),  a global database of daily climate summaries collected from land surface weather stations by numerous sources. The GHCNd database encompasses various meteorological measurements such as temperature, precipitation, snowfall, and snow depth, from over 80K+ weather stations around the world.

Provides a wide format breakdown of variables included in the noaa_weather_metrics_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including the type of value being measured, its measurement type as specified by the NCEI, unit of measurement, and frequency of measurement."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.NOAA_WEATHER_METRICS_ATTRIBUTES (
    VARIABLE TEXT,
    VARIABLE_NAME TEXT,
    UNIT TEXT,
    FREQUENCY TEXT,
    MEASURE TEXT,
    MEASUREMENT_TYPE TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,29
table_name,POINT_OF_INTEREST_ADDRESSES_RELATIONSHIPS
description,"Map between Point of Interest (POI) identifiers and addresses found in US_ADDRESSES.

Sourced from OpenAddresses and Overture Maps Foundation. OpenAddresses is a collaborative project that compiles and provides free and open global address data, aggregating crowd-sourced and publicly available datasets to create a comprehensive, unified resource. Overture Maps Foundation, though not exclusively an address database, aims to provide a comprehensive, open-source, global mapping platform that includes address data among various other geographical and location-based information, enhancing the detail and usability of open mapping data. It is an open data project steered by Amazon, Meta, Microsoft, and TomTom that aggregates map data from multiple sources.

Provides a long format overview of relationships between a POI_ID and ADDRESS_ID."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,30
table_name,SEC_REPORT_ATTRIBUTES
description,"Company KPIs published in SEC filings using XBRL format, provided on a monthly basis.

Provides a wide format breakdown of variables included within an SEC report by ADSH and SIK.

This table provides the parsed XBRL line items from financial statements by a unique variable ID, which are associated with a particular report. This includes detailed metadata, tags, measure descriptions, unit of measurement, associated values, report IDs, statement types, and date details."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,31
table_name,SEC_REPORT_INDEX
description,"Index of filings (ADSH) submitted to the SEC by entities (CIK), provided on a monthly basis.

Provides a wide format breakdown of each report (ADSH) filed by an entity (CIK). Each row represents a distinct report submission type and date by entity (CIK)."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,32
table_name,STOCK_PRICE_TIMESERIES
description,"Cybersyn publishes daily prices (open/close, high/low) & trading volumes of US securities executed on the Nasdaq. The data is sourced from Databento's direct feed with Nasdaq TotalView. Cybersyn makes data from the previous trading day available around 6am ET.

Trading volume, open/close, and high/low prices are based on full day trading, inclusive of pre-market, regular trading, and after hours sessions. For example, the open price will reflect the price of the first trade of the day in the pre-market. The trading volume will reflect the total number of trades executed on the Nasdaq throughout all sessions. "
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,33
table_name,UNITED_KINGDOM_TIMESERIES
description,"Statistics on UK population, demographics, economy, deaths, retail sales, and card spending by geographic entity over time.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the united_kingdom_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,34
table_name,FOOD_AGRICULTURE_ORGANIZATION_ATTRIBUTES
description,"Greenhouse gas emissions data related to agriculture, forestry, and other land use activities, including carbon dioxide, methane, and nitrous oxide gases, provided by the United Nations.

The Food and Agriculture Organization (FAO) is a specialized agency of the United Nations leading the international effort to increase food security and nutrition standards. The FAOSTAT database reports greenhouse gas emissions data related to agriculture, forestry, and other land use activities (including carbon dioxide, methane, nitrous oxide gases, etc.).

Provides a wide format breakdown of variables included in the food_agriculture_organization_timeseries table, including type of emission and source of data."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FOOD_AGRICULTURE_ORGANIZATION_ATTRIBUTES (
    UNIT TEXT,
    VARIABLE_NAME TEXT,
    MEASURE TEXT,
    ITEM TEXT,
    VARIABLE TEXT,
    MEASUREMENT_TYPE TEXT,
    SOURCE TEXT,
    FREQUENCY TEXT,
    EMISSION_TYPE TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,35
table_name,US_DEPARTMENT_OF_AGRICULTURE_COMMODITIES_ATTRIBUTES
description,"Global agricultural commodity production, supply, and distribution (PSD), as reported by the US Department of Agriculture (USDA); includes area harvested, production, imports, exports, and consumption for commodities.

Managed by the USDA's Foreign Agricultural Service (FAS), it covers a wide range of commodities, including grains, oilseeds, fruits, and vegetables. This data covers both calendar years (running from January 1st to December 31st) and marketing years. Marketing years typically begin in the month when the harvest of a particular crop starts and end before the beginning of the next year's harvest. This period can vary significantly among different crops and countries, depending on when these crops are sown and harvested. The specific starting month of the marketing year for each crop is essential because it affects how production, stocks, and trade are accounted for and compared year-over-year. Marketing years are used to better align the supply and demand statistics of a commodity with its normal production cycle. Additionally, the USDA's Export Sales Reporting (ESR) data provides weekly updates on the export sales activity of major commodities, further enhancing the understanding of market dynamics within these defined marketing years.

Provides a wide format breakdown of variables included in the us_department_of_agriculture_commodities_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,36
table_name,US_ECONOMIC_CENSUS_ATTRIBUTES
description,"Detailed economic data on US businesses, such as number of establishments, types of goods and services provided, employment figures, payroll expenses, and operational costs, across different industries and geographic regions.

The Economic Census is a survey conducted by the US Census Bureau every 5 years on number of firms, number of establishments; number of employees, payroll and sales, value and percentage of product shipments, revenue by geographic area for establishments and firms by NAICS code.

Provides a wide format breakdown of variables included in the us_economic_census_timeseries table. Following attributes are provides for reference: NAICS industry classification, type of operation run by the establishment, establishment's tax status, Products and Services Code and sources of credit card services income."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,37
table_name,US_ECONOMIC_CENSUS_TIMESERIES
description,"Detailed economic data on US businesses, such as number of establishments, types of goods and services provided, employment figures, payroll expenses, and operational costs, across different industries and geographic regions.

The Economic Census is a survey conducted by the US Census Bureau every 5 years on number of firms, number of establishments; number of employees, payroll and sales, value and percentage of product shipments, revenue by geographic area for establishments and firms by NAICS code.
  
Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the us_economic_census_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,38
table_name,US_REAL_ESTATE_TIMESERIES
description,"Construction and real estate data, including new building permits and construction spending, categorized into residential, non-residential, and public sectors, provided by the US Census Bureau.

The US Real Estate tables encompass data on the construction and real estate sectors. The tables contain data from (1) the Building Permit Survey (BPS) and (2) Construction Spending data from the US Census Bureau. 

The BPS, an indicator of future construction activity, records new building permits, signaling future residential and commercial projects. 
Construction Spending data quantifies actual expenditures on construction projects, categorized into residential, non-residential, and public sectors.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the us_real_estate_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,39
table_name,WORLD_BANK_ATTRIBUTES
description,"Provides environmental, social, governance, and financial indicators for countries, including sustainability performance, governance dimensions, development data, economic conditions, debt statistics, and public sector debt, compiled by the World Bank.

The World Bank, an international financial institution, provides global environmental, social, and governance (ESG) and financial data:

Environment, Social And Governance (ESG) Data provides information on 17 key sustainability themes to shed light on countries’ sustainability performance.
The Worldwide Governance Indicators (WGI) report on six dimensions of governance (voice and accountability, political stability and absence of violence, government effectiveness, regulatory quality, rule of law, and control of corruption) based on over 30 underlying data sources. 
The Worldwide Development Indicators (WDI) covers global development data on various sectors, such as health, education, and the environment.
The Global Economic Monitor (GEM) provides indicators on current global economic conditions.
The Global Economic Prospect (GEP) offers analysis of current global economic trends and short-term forecasts for the world economy.
The International Debt Statistics (IDS) details external debt of developing countries, compiling data on debt stocks and flows and other financial flows to these countries.
The Quarterly Public Sector Debt (PSD) publishes public sector debt of participating countries.
The Quarterly External Debt Statistics (QDG) provides data on external debt of countries that participate in the General Data Dissemination System (GDDS). This is a framework developed by the International Monetary Fund (IMF) to guide countries in the dissemination of their economic, financial, and socio-demographic data to the public.

Provides a wide format breakdown of variables included in the world_bank_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including the type of value being measured, unit of measurement, and frequency of aggregations."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,40
table_name,OPENFIGI_SECURITY_INDEX
description,"Security details for OpenFIGI Composite, Share Class, and FIGI IDs, including tickers, names, asset classes, types, subtypes, exchange codes, and related IDs.

OpenFIGI IDs are unique identifiers for active and inactive securities across all global assets including equities, bonds, futures, and options. The Financial Instrument Global Identifier (i.e. FIGI) is an established global standard and used to facilitate easy mapping across data sources.

The OpenFIGI Composite ID is an identifier from the Bloomberg OpenFIGI system that aggregates all securities (across different markets or exchanges) that are considered part of the same overall listing for a company, providing a composite view of that company's security across markets.

The OpenFIGI Share Class ID is an identifier from the Bloomberg OpenFIGI system that distinguishes different classes of shares (such as Class A, Class B, etc.) issued by a company. Different share classes may have varying voting rights, dividend policies, or other characteristics.

The OpenFIGI FIGI ID is a unique identifier for any financial instrument itself, not limited to shares. It covers a wider range of securities, such as bonds, derivatives, and others.

Provides a wide format overview of security details by TOP_LEVEL_OPENFIGI_ID.

This table provides detailed information for each OpenFIGI ID by type of FIGI ID, including its primary ticker, security name, asset class, security type, security subtypes, global tickers, exchange codes, and related OpenFIGI IDs."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,41
table_name,US_DEPARTMENT_OF_TRANSPORTATION_TIMESERIES
description,"Monthly domestic non-stop segment data reported by both US and foreign air carriers.

The US Department of Transportation domestic segment data reports both US and foreign air carriers, including carrier, origin, destination, aircraft type and service class for transported passengers, freight and mail, available capacity, scheduled departures, departures performed, aircraft hours, and load factor when both origin and destination airports are located within the boundaries of the United States and its territories.

Each row represents a distinct timeseries, date, and value by geographic entity, JOINABLE to Cybersyn's geography entity tables. Each variable is detailed in the us_department_of_transportation_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,42
table_name,WORLD_BANK_TIMESERIES
description,"Global data on country-level ESG performance; current global economic conditions, trends, and forecasts; and public sector and external debt.

The World Bank, an international financial institution, provides global environmental, social, and governance (ESG) and financial data:

Environment, Social And Governance (ESG) Data provides information on 17 key sustainability themes to shed light on countries’ sustainability performance.
The Worldwide Governance Indicators (WGI) report on six dimensions of governance (voice and accountability, political stability and absence of violence, government effectiveness, regulatory quality, rule of law, and control of corruption) based on over 30 underlying data sources. 
The Worldwide Development Indicators (WDI) covers global development data on various sectors, such as health, education, and the environment.
The Global Economic Monitor (GEM) provides indicators on current global economic conditions.
The Global Economic Prospect (GEP) offers analysis of current global economic trends and short-term forecasts for the world economy.
The International Debt Statistics (IDS) details external debt of developing countries, compiling data on debt stocks and flows and other financial flows to these countries.
The Quarterly Public Sector Debt (PSD) publishes public sector debt of participating countries.
The Quarterly External Debt Statistics (QDG) provides data on external debt of countries that participate in the General Data Dissemination System (GDDS). This is a framework developed by the International Monetary Fund (IMF) to guide countries in the dissemination of their economic, financial, and socio-demographic data to the public.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the world_bank_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,43
table_name,BUREAU_OF_LABOR_STATISTICS_EMPLOYMENT_ATTRIBUTES
description,"Employment, job openings, labor turnover, and wages tracked across US regions in the LAUS, JOLTS, and SAE reports from the BLS.

The US Bureau of Labor Statistics (BLS) produces granular employment reports: Local Area Unemployment Statistics (LAUS) provides monthly and annual employment, unemployment, and labor force data for states and localities; Job Openings and Labor Turnover Survey (JOLTS) covers labor demand and turnover rates, including data on job openings, hires, and separations; and State and Metro Employment (SAE) delivers employment and wage data across various industries at state and metropolitan levels.

Provides a wide format breakdown of variables included in the bureau_of_labor_statistics_employment_timeseries table. The BLS report is provided for reference. Additionally, variables are defined by seasonal adjustment, related industry, and size of the establishment referenced."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,44
table_name,CALENDAR_INDEX
description,"Cybersyn compiles common calendars into a single table. Each calendar has an ID (calendar_id) for users to select which calendar type they want to use. Individual periods within the calendar include period start and end dates.

In addition to period start and end dates, the relevant annual period is included in addition to the ordinal position of the period within the annual period. For example, and ordinal position of 100 in the daily calendar indicates the day is the 100th period in the year.

Calendars include the following period types: Day, Week, Month, Quarter, and Year. For Month, Quarter, and Year periods, calendars are further broken down to include the traditional measures of the periods as well as Retail 4-5-4 calendars for each period type. Additionally, the Retail 4-5-4 calendars include the restated periods to account for years in which there are 53 weeks."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,45
table_name,FINANCIAL_BRANCH_ENTITIES
description,"All bank branch locations in the United States, including a unique identifier for a branch (ID_RSSD) as well as detailed information on the branch's geographic location and parent institution.

The Federal Financial Institutions Examination Council (FFIEC) is a U.S. government interagency body that prescribes uniform principles, standards, and report forms for the federal examination of financial institutions. It does not provide deposit insurance. The FFIEC provides detailed branch-level data for these institutions, which includes information on branch locations, deposits, and other financial metrics. This data is provided to support the public and regulatory oversight, promoting understanding and informed decision-making regarding the nation's financial systems and aiding in the assessment of local banking market conditions.

Provides a wide format overview of bank branches monitored by the FFIEC by ID_RSSD."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,46
table_name,HOUSING_URBAN_DEVELOPMENT_ATTRIBUTES
description,"Annual state and Continuum of Care (CoC)-level homelessness estimates in the US from 2007 onwards.

The US Department of Housing and Urban Development (HUD) is a federal agency responsible for national policies on America's housing needs. The Annual Homeless Assessment Report (AHAR) provides estimates of homelessness in the US based on the Point-In-Time (PIT) count and Housing Inventory Count (HIC) conducted in January of each year. It provides a detailed view on the number of homeless individuals, chronically homeless persons, homeless veterans, and homeless children and youth.

Provides a wide format breakdown of variables included in the housing_urban_development_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,47
table_name,EIA_ENERGY_TIMESERIES
description,"Natural gas, electricity, and petroleum sales, production, consumption, and import/export statistics, provided by the Energy Information Administration (EIA).

The Energy Information Administration (EIA) is part of the U.S. Department of Energy and serves as a primary source of data on energy production, consumption, and related topics.

Each row represents a distinct timeseries, date, and value by geographic entity, JOINABLE to Cybersyn's geography entity tables. Each variable is detailed in the eia_energy_attributes table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.EIA_ENERGY_TIMESERIES (
    VARIABLE_NAME TEXT,
    UNIT TEXT,
    IMPORTER_GEO_ID TEXT,
    EXPORTER_GEO_ID TEXT,
    VALUE FLOAT,
    VARIABLE TEXT,
    DATE DATE,
    GEO_ID TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,48
table_name,FHFA_MORTGAGE_PERFORMANCE_TIMESERIES
description,"Loan-level mortgage data from the FHFA including originations, terms, performance, borrower demographics, and delinquency rates at national, state, and local levels from 2002 onwards.

The Federal Housing Finance Agency (FHFA) in partnership with the Consumer Financial Protection Bureau (CFPB) developed the National Mortgage Database (NMDB), a nationally representative 5% sample of residential mortgages in the US. It details loan-level data covering mortgage originations, terms, and performance, along with borrower demographics.; and indicates rates of delayed payments, foreclosures and bankruptcies, and forbearance. The data is grouped by geographic levels (national, state, CBSA/MSD level) and includes both Enterprise and non-Enterprise individual mortgages from 2002 onwards.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the fhfa_mortgage_performance_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,49
table_name,FREDDIE_MAC_HOUSING_ATTRIBUTES
description,"House price index tracking price movements for single-family homes and condominiums, and weekly mortgage interest rates for fixed-rate and adjustable-rate mortgage products, provided by Freddie Mac.

Freddie Mac, formally known as the Federal Home Loan Mortgage Corporation, is a government-sponsored enterprise in the US that purchases and securitizes mortgages. Freddie Mac creates a House Price Index (HPI) from data collected on residential property sales and appraisals. This index tracks price movements for both single-family homes and condominiums in the US. Additionally, Freddie Mac provides the Primary Mortgage Market Survey (PMMS), which is a weekly report on mortgage interest rates in the US. This tracks the borrowing costs for homebuyers and refinancers. The PMMS collects data on fixed-rate and adjustable-rate mortgage products, presenting averages for various loan terms.

Provides a wide format breakdown of variables included in the freddie_mac_housing_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,50
table_name,INTERNATIONAL_TRADE_ADMINISTRATION_BUSINESS_SERVICE_PROVIDERS_INDEX
description,"Directory of US and foreign-based businesses providing services that many small- and medium-sized exporters required to succeed in the foreign markets.

The US Department of Commerce's International Trade Administration (ITA) provides data on trade events, trade leads, market research, tariff data, and many other datasets relevant to exporters and importers. The Business Service Provider (BSP) directory is intended to provide an additional resource to US exporters. It is particularly helpful for US companies that are just getting started exporting or that are looking to expand into a new geographic market or industry.

Provides a wide format overview of business service providers (BSPs) by BUSINESS_SERVICE_PROVIDER_ID. This table includes business- and geographic-details on each company covered in the BSP list."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,51
table_name,NEWYORKFED_CONSUMER_TIMESERIES
description,"Monthly household economic expectations and behavior data, and quarterly consumer debt and credit trends, including balances, delinquencies, and bankruptcies for the US.

The Federal Reserve Bank of New York (or New York Fed) provides data on economic perspectives and behaviors of US households in the Survey of Consumer Expectations (SCE) and the Household Debt and Credit Report. The Survey of Consumer Expectations (SCE) collects monthly data on households' economic expectations and behavior on inflation, the labor market, and personal finance. This survey is unique in its detailed questioning regarding the probability of certain events occurring in the respondents' financial lives (e.g., inflation, spending, income), serving as a tool for understanding future consumer behavior and economic trends. The Household Debt and Credit Report provides quarterly updates on trends in consumer debt and credit, including breakdowns by debt type and credit score. It draws from a nationally representative sample of anonymized Equifax credit data to report on developments in mortgage, student loan, auto loan, and credit card balances, as well as bankruptcy filings and delinquencies.

Provides historical values for each variable collected.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the newyorkfed_consumer_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,52
table_name,OECD_ATTRIBUTES
description,"Economic, demographic, and labor market data for OECD countries and select non-members, including trade, wages, income distribution, population projections, and social expenditure, provided by the OECD.

The OECD, or Organisation for Economic Co-operation and Development, conducts research, collects data, and provides analysis to help governments develop effective policies and address global challenges. The OECD database provides data on OECD member countries and select non-member countries. The data includes (1) Balance of payments - Financial transactions of a country with the rest of the world. (2) Composite leading indicators - Future economic trends. (3) Venture capital investments - Market statistics on entrepreneurial finance. (4) Average annual wages and hours worked per worker - Labor market trends. (5) Decile ratios of gross earnings - Income distribution. (6) Trade union density and wage gap by age - Labor force dynamics. (7) Population data and projections - Demographic trends. (8) Public and private social expenditure - Government and private sector investments in social welfare.

Provides a wide format breakdown of variables included in the oecd_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including the type of value being measured, unit of measurement, frequency of aggregations, and details on adjustments applied to the data."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,53
table_name,OECD_TIMESERIES
description,"Economic, demographic, and labor market data for OECD countries and select non-members, including trade, wages, income distribution, population projections, and social expenditure, provided by the OECD.

The OECD, or Organisation for Economic Co-operation and Development, conducts research, collects data, and provides analysis to help governments develop effective policies and address global challenges. The OECD database provides data on OECD member countries and select non-member countries. The data includes (1) Balance of payments - Financial transactions of a country with the rest of the world. (2) Composite leading indicators - Future economic trends. (3) Venture capital investments - Market statistics on entrepreneurial finance. (4) Average annual wages and hours worked per worker - Labor market trends. (5) Decile ratios of gross earnings - Income distribution. (6) Trade union density and wage gap by age - Labor force dynamics. (7) Population data and projections - Demographic trends. (8) Public and private social expenditure - Government and private sector investments in social welfare.

Provides historical values for each variable collected.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the oecd_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,54
table_name,FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
description,"Insurance claims made under the National Flood Insurance Policy data, including financial details of the claim and property specifications, in the United States, provided by FEMA.

The Federal Emergency Management Agency (FEMA) provides extensive data on emergency management in the United States. This data encompasses disaster declarations, declared recovery programs, and the National Flood Insurance Program (NFIP) policies and claims. The Federal Insurance and Mitigation Administration (FIMA) National Flood Insurance Program (NFIP) Claims data provides comprehensive information on claims made under the NFIP. It serves as a resource for understanding the financial impact of flood events on communities.

Provides a wide format breakdown of claims made under the NFIP, including financial details of the claim and property specifications."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX (
    LATITUDE FLOAT,
    ICC_COVERAGE NUMBER,
    REPLACEMENT_COST_BASIS TEXT,
    ORIGINAL_FLOOD_POLICY_DATE DATE,
    DISASTER_ASSISTANCE_COVERAGE_REQUIRED TEXT,
    ELEVATION_DIFFERENCE NUMBER,
    EVENT_DESIGNATION_NUMBER TEXT,
    FLOOD_TYPE TEXT,
    COMMUNITY_RATING_SYSTEM_CLASS TEXT,
    PROPERTY_INDICATORS ARRAY,
    NFIP_COMMUNITY_NUMBER_CURRENT TEXT,
    AMOUNT_PAID_ON_BUILDING_CLAIM FLOAT,
    CENSUS_TRACT_ID TEXT,
    LONGITUDE FLOAT,
    FLOOD_EVENT TEXT,
    BUILDING_DAMAGE_AMOUNT FLOAT,
    CENSUS_BLOCK_GROUP_ID TEXT,
    FLOOD_WATER_DEPTH NUMBER,
    AMOUNT_PAID_ON_CONTENTS_CLAIM FLOAT,
    FICO_NUMBER NUMBER,
    BUILDING_REPLACEMENT_COST NUMBER,
    NUMBER_OF_FLOORS TEXT,
    CURRENT_FLOOD_ZONE TEXT,
    ORIGINAL_CONSTRUCTION_DATE DATE,
    TOTAL_BUILDING_INSURANCE_COVERAGE NUMBER,
    NET_BUILDING_PAYMENT_AMOUNT FLOAT,
    NFIP_RATED_COMMUNITY_NUMBER TEXT,
    BUILDING_PROPERTY_VALUE NUMBER,
    TOTAL_CONTENTS_INSURANCE_COVERAGE NUMBER,
    CONDOMINIUM_COVERAGE_TYPE TEXT,
    BASE_FLOOD_ELEVATION FLOAT,
    NFIP_COMMUNITY_NAME TEXT,
    CAUSE_OF_DAMAGE TEXT,
    NON_PAYMENT_REASON_CONTENTS TEXT,
    POLICY_COUNT NUMBER,
    POLICY_RATING_METHOD TEXT,
    OBSTRUCTION TEXT,
    ZIP_GEO_ID TEXT,
    POLICY_RATED_FLOOD_ZONE TEXT,
    CITY TEXT,
    NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_ID TEXT,
    BASEMENT_ENCLOSURE_CRAWLSPACE TEXT,
    NET_CONTENTS_PAYMENT_AMOUNT FLOAT,
    LOWEST_FLOOR_ELEVATION FLOAT,
    OCCUPANCY_TYPE TEXT,
    UNITS NUMBER,
    NON_PAYMENT_REASON_BUILDING TEXT,
    CONTENTS_DEDUCTIBLE NUMBER,
    CONTENT_LOCATION TEXT,
    FLOOD_WATER_DURATION_HOURS NUMBER,
    DATE_OF_LOSS DATE,
    BUILDING_TYPE TEXT,
    CONTENTS_DAMAGE_AMOUNT FLOAT,
    COUNTY_GEO_ID TEXT,
    NET_ICC_PAYMENT_AMOUNT FLOAT,
    CONTENTS_PROPERTY_VALUE NUMBER,
    CONTENTS_REPLACEMENT_COST NUMBER,
    AMOUNT_PAID_ON_INCREASED_COST_OF_COMPLIANCE_CLAIM FLOAT,
    LOWEST_ADJACENT_GRADE FLOAT,
    BUILDING_DEDUCTIBLE NUMBER,
    STATE_GEO_ID TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,55
table_name,US_ADDRESSES
description,"Comprehensive US address data, including geographic information, latitude/longitude coordinates, and address specifics, mapped to a unique ADDRESS_ID for each address.

Sourced from OpenAddresses, the National Address Database (NAD) and Overture Maps Foundation. 

OpenAddresses is a collaborative project that compiles and provides free and open global address data, aggregating crowd-sourced and publicly available datasets to create a comprehensive, unified resource. 
The National Address Database, developed by the US Department of Transportation, is an initiative to create a single, public-domain database of address information, focusing on nationwide coverage to support governmental and emergency response needs. 
Overture Maps Foundation, though not exclusively an address database, aims to provide a comprehensive, open-source, global mapping platform that includes address data among various other geographical and location-based information, enhancing the detail and usability of open mapping data.

Provides a wide format overview of US addresses by ADDRESS_ID. This table represents each unique address with geographic information mappable to other Cybersyn tables, latitude and longitude coordinates, and other address specifics."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,56
table_name,US_REAL_ESTATE_ATTRIBUTES
description,"Construction and real estate data, including new building permits and construction spending, categorized into residential, non-residential, and public sectors, provided by the US Census Bureau.

The US Real Estate tables encompass data on the construction and real estate sectors. The tables contain data from (1) the Building Permit Survey (BPS) and (2) Construction Spending data from the US Census Bureau. 

The BPS, an indicator of future construction activity, records new building permits, signaling future residential and commercial projects. 
Construction Spending data quantifies actual expenditures on construction projects, categorized into residential, non-residential, and public sectors.

Provides a wide format breakdown of variables included in the us_real_estate_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,57
table_name,GOVERNMENT_CONTRACT_AWARD_INDEX
description,"Federal contract awards data with award amount, date, recipient, and primary awarder for each contract award ID and its associated contract solicitation ID.

The U.S. General Services Administration (GSA) manages SAM.gov (System for Award Management), which is a key database for government procurement, federal contracting, and awards information in the United States. This platform provides comprehensive data on federal contracts and contract awards, serving as a central location where businesses can register to do business with the U.S. government, and where government agencies publish award details and contracting opportunities. 

Contracts represent listings soliciting bids on goods and services that the Federal US government is seeking from contractors. 
Contract Awards represent accepted bids or solicitations from third-party contractors to fulfill a contract. Note that the description of the contract award may differ from that of the original contract if the government reopened the contract or awarded multiple awards from a single original contract solicitation.

Provides a wide format table that describes each contract award (CONTRACT_AWARD_ID) and its associated (CONTRACT_SOLICITATION_ID).

The table provides information on the contract award, including the award amount, date, recipient, and primary awarder."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,58
table_name,INTERNATIONAL_MONETARY_FUND_TIMESERIES
description,"Economic and financial indicators for countries and regions, including commodity prices, balance of payments, government finances, investment, and regional economic outlooks, provided by the IMF.

The International Monetary Fund (IMF) provides data on the following topics: Primary Commodity Price System (prices of commodities by country); Balance of Payments (countries’ economic transactions with the rest of the world, including trade balances, capital flows, and official reserves); Fiscal Monitor (detailed government finances); International Financial Statistics (macroeconomic and financial indicators); Coordinated Portfolio Investment Survey (cross-border holdings of equity and debt securities); Africa Regional Economic Outlook (economic indicators for Africa); Asia and Pacific Regional Economic Outlook (economic indicators for the Asia and Pacific region).

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the international_monetary_fund_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,59
table_name,IRS_ORIGIN_DESTINATION_MIGRATION_TIMESERIES
description,"Aggregated migration data showing population flows, income changes, and number of households migrating between US counties and states, based on annual tax returns filed with the IRS.

The Internal Revenue Service (IRS), which is the revenue service of the US federal government, is responsible for collecting taxes and administering the Internal Revenue Code. The IRS publishes aggregated migration data based on annual returns. This data illustrates underlying economic conditions at a zip code and state level as well as measuring population and aggregate income changes between counties and states. It also allows for specific measurement of county-to-county population flow. The data include the number of returns filed (which approximates the number of households that migrated), total adjusted gross income, and number of individuals (or the number of personal exemptions claimed).

Provides historical values for each variable collected by the IRS by FROM_GEO_ID and TO_GEO_ID.

Each row represents a distinct timeseries, date, and value by geographic entity."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,60
table_name,AIRCRAFT_CARRIER_INDEX
description,"The Aircraft Carrier Index table provides a list of airline carriers, including their unique identification codes, names, and key operational details."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,61
table_name,AMERICAN_COMMUNITY_SURVEY_TIMESERIES
description,"Annual population estimates with detailed demographic, social, economic, and housing data at multiple geographic levels, from national to census block group.

The US Census Bureau's American Community Survey (ACS) is an annual survey based on a subset of the population (unlike the decennial census, which aims to count every individual). The ACS provides data at various geographic levels. They provide 1-year and 5-year estimates on a rolling basis (e.g., a 5-year estimate in 2022 would be based on data collected between January 1, 2018 and December 31, 2022). 1-year estimates are available for areas with populations of 65,000+. 5-year estimates are available for all areas.

Each row represents a distinct timeseries collected by the ACS, date, and value by geographic entity JOINABLE to Cybersyn's geography tables. Each variable is detailed in the american_community_survey_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,62
table_name,CANADA_STATCAN_ATTRIBUTES
description,"Demographic, economic, and social variables on Canada, including income, prices, GDP, labor, census profiles, foreign exchange, credit, and retail trade, provided by Canada's national statistical agency.

Statistics Canada provides insights into Canada's economy, demographics, and social structure. Reports include analyses of income and government transfers by economic family type; household economic distributions covering income, consumption, and saving; and current and historical retail prices. Key economic indicators such as the Consumer Price Index, Gross Domestic Product, and the New Housing Price Index are detailed, along with labor market data like employment by industry and labor force statistics. The Census Profiles furnish comprehensive data on private household income, population, dwellings, and age groups, while other reports track monthly foreign exchange rates, industrial product prices, credit liabilities of households, and both current and historical retail trade sales.

Provides a wide format breakdown of variables included in the canada_statcan_timeseries table. The STATCAN report is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,63
table_name,COMPANY_INDEX
description,"Compiled list of public and private companies with a unique Cybersyn company identifier (company_id) mapped to public identifiers like CIK, EIN, PermID, and LEI. This table serves as the spine for Cybersyn data that involves company-level identifiers.

Cybersyn has compiled a list of public and private companies companies through various sources including from the Securities and Exchange Commission (SEC), PermID from Refinitiv, and Global Legal Entity Identifier Foundation (GLEIF). Each of these sources uses their own unique identifier for companies, and Cybersyn maps these IDs together to allow users to join datasets together using common unique identifiers. Cybersyn datasets that include company entities use the COMPANY_ID field as the unique ID for the company.

The EIN (Employer Identification Number) is issued by the US Internal Revenue Service (IRS) and is a unique 9-digit number used to identify business entities for tax purposes. The CIK (Central Index Key) is issued by the US Securities and Exchange Commission (SEC) and is a unique number assigned to corporations, individuals, and foreign governments who are required to file disclosures with the SEC. The LEI (Legal Entity Identifier) is a 20-character, alpha-numeric code based on the ISO 17442 standard, assigned to distinct legal entities that engage in financial transactions and administered by the Global Legal Entity Identifier Foundation (GLEIF). The PERMID_COMPANY_ID is issued by PermID from Refinitiv and is a permanent identifier that they publish for organization entities.  

Provides a wide format overview of companies by COMPANY_ID, which can be used across Cybersyn's datasets as a unique identifier for corporate entities."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,64
table_name,FDIC_SUMMARY_OF_DEPOSITS_ATTRIBUTES
description,"Deposit data for FDIC-insured bank branches, including deposit amounts, branch locations, and institution details, released annually.

The Federal Deposit Insurance Corporation (FDIC) is an independent agency of the US government that insures deposits at banks and thrift institutions, up to an insured limit, and promotes the safety and soundness of these financial institutions by identifying, monitoring, and addressing risks. They monitor financial institutions at 3 levels: (1) holding company, (2) institution, and (3) branch. On an annual basis, they conduct the Summary of Deposits survey that gathers data on the deposits held at each FDIC-insured banks' branches (if the bank has at least one branch).

Provides a wide format breakdown of variables included in the fdic_summary_of_deposits_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,65
table_name,FEDERAL_RESERVE_TIMESERIES
description,"Borrowing patterns, credit card debt, commercial paper, finance companies, industrial production, capacity utilization, assets, liabilities, and net worth in the US, provided by the Fed.

The Federal Reserve, often referred to as the Fed, is the central banking system of the US. The data details (1) Consumer Credit - borrowing patterns, credit card debt, and other forms of consumer loans, (2) Commercial Paper - a short-term debt instrument used by corporations for financing, (3) health and activity of Finance Companies, (4) Industrial Production and Capacity Utilization of the manufacturing sector, and (5) US Financial Accounts - assets, liabilities, and net worth.

Provides historical values for each variable collected.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the federal_reserve_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,66
table_name,FEMA_MISSION_ASSIGNMENT_INDEX
description,"List of FEMA mission assignments, work orders issued by FEMA to other federal agencies to direct funding and manage tasks in support of, and in anticipation of, or in response to, a Presidential declaration of an emergency or major disaster.

The Federal Emergency Management Agency (FEMA) provides extensive data on emergency management in the United States. This data encompasses disaster declarations, declared recovery programs, and the National Flood Insurance Program (NFIP) policies and claims. FEMA issues mission assignments in anticipation of, or in response to, a Presidential declaration of an emergency or major disaster. Mission Assignments are distinct because they allow for deployment, employment and assistance from the full range of federal resources to support disaster needs.

Provides a wide format breakdown of mission assignments, including detailed statements of work and associated federal and state funding."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FEMA_MISSION_ASSIGNMENT_INDEX (
    REQUESTED_ASSISTANCE_DESCRIPTION TEXT,
    CITY TEXT,
    STATE_COST_SHARE_PERCENT FLOAT,
    STATE_GEO_ID TEXT,
    OBLIGATION_AMOUNT FLOAT,
    FEMA_RECORD_ID TEXT,
    STATE_COST_SHARE_AMOUNT FLOAT,
    ZIP_GEO_ID TEXT,
    PROJECTED_COMPLETION_DATE DATE,
    REQUESTED_DATE DATE,
    REQUESTED_AMOUNT FLOAT,
    FEDERAL_COST_SHARE_PERCENT FLOAT,
    OBLIGATION_DATE DATE,
    STATEMENT_OF_WORK TEXT,
    MISSION_ASSIGNMENT_ID TEXT,
    FEDERAL_COST_SHARE_AMOUNT FLOAT,
    DISASTER_ID TEXT,
    AMENDMENT_ID NUMBER,
    REQUESTING_AGENCY TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,67
table_name,FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_POLICY_INDEX
description,"National Flood Insurance Policy data with information on coverage amounts, premiums, and geographical distribution of policyholders in the United States, provided by FEMA.

The Federal Emergency Management Agency (FEMA) provides extensive data on emergency management in the United States. This data encompasses disaster declarations, declared recovery programs, and the National Flood Insurance Program (NFIP) policies and claims. The Federal Insurance and Mitigation Administration's (FIMA) National Flood Insurance Program (NFIP) Policy Data offers insights into the flood insurance policies issued under the program. This data includes information on the number of policies in effect, coverage amounts, premiums, and the geographical distribution of policyholders. It's a key resource for analyzing flood insurance coverage trends and understanding the reach and impact of the NFIP in mitigating flood risks across the United States.

Provides a wide format breakdown of NFIP policies, including the policy specifications and the building specifications."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_POLICY_INDEX (
    LATITUDE FLOAT,
    LONGITUDE FLOAT,
    ORIGINAL_FLOOD_POLICY_DATE DATE,
    POLICY_RATED_FLOOD_ZONE TEXT,
    ELEVATION_DIFFERENCE NUMBER,
    SUBSIDIZATION_TYPE TEXT,
    PROBATION_SURCHARGE NUMBER,
    PROPERTY_PURCHASE_DATE DATE,
    TOTAL_INSURANCE_PREMIUM_OF_THE_POLICY NUMBER,
    STATE_GEO_ID TEXT,
    BASEMENT_ENCLOSURE_CRAWLSPACE TEXT,
    ICC_PREMIUM NUMBER,
    NFIP_RATED_COMMUNITY_NUMBER TEXT,
    CONTENTS_DEDUCTIBLE NUMBER,
    ADDITIONAL_CONTENTS_RATE FLOAT,
    LOWEST_ADJACENT_GRADE FLOAT,
    GRANDFATHERING TEXT,
    HFIAA_SURCHARGE NUMBER,
    CITY TEXT,
    ROLLOVER_TRANSFER TEXT,
    POLICY_EFFECTIVE_DATE DATE,
    BUILDING_DEDUCTIBLE NUMBER,
    TOTAL_BUILDING_INSURANCE_COVERAGE NUMBER,
    POLICY_TERMINATION_DATE DATE,
    POLICY_CANCELLATION_REASON TEXT,
    MAP_PANEL_NUMBER TEXT,
    WAITING_PERIOD_TYPE TEXT,
    TOTAL_CONTENTS_INSURANCE_COVERAGE NUMBER,
    BASIC_CONTENTS_RATE FLOAT,
    RESERVE_FUND_ASSESSMENT NUMBER,
    FEMA_REGION_ID NUMBER,
    POLICY_CANCELLATION_DATE DATE,
    POLICY_RATING_METHOD TEXT,
    BASE_FLOOD_ELEVATION FLOAT,
    FEDERAL_POLICY_FEE NUMBER,
    OCCUPANCY_TYPE TEXT,
    POLICY_COUNT NUMBER,
    NATIONAL_FLOOD_INSURANCE_PROGRAM_POLICY_ID TEXT,
    ENDORSEMENT_EFFECTIVE_DATE DATE,
    CENSUS_TRACT_ID TEXT,
    NFIP_COMMUNITY_NUMBER_CURRENT TEXT,
    COUNTY_GEO_ID TEXT,
    CENSUS_BLOCK_GROUP_ID TEXT,
    POLICY_COST FLOAT,
    NUMBER_OF_FLOORS TEXT,
    PROPERTY_INDICATORS ARRAY,
    BUILDING_REPLACEMENT_COST NUMBER,
    BASIC_BUILDING_RATE FLOAT,
    ENCLOSURE TEXT,
    DISASTER_ASSISTANCE_COVERAGE_REQUIRED TEXT,
    INSURANCE_TO_VALUE_RATIO TEXT,
    COMMUNITY_RATING_SYSTEM_CLASS TEXT,
    BUILDING_TYPE TEXT,
    NFIP_COMMUNITY_NAME TEXT,
    CURRENT_FLOOD_ZONE TEXT,
    ZIP_GEO_ID TEXT,
    OBSTRUCTION TEXT,
    LOWEST_FLOOR_ELEVATION FLOAT,
    CONDOMINIUM_COVERAGE_TYPE TEXT,
    ADDITIONAL_BUILDING_RATE FLOAT,
    CONTENT_LOCATION TEXT,
    MAP_PANEL_SUFFIX TEXT,
    ORIGINAL_CONSTRUCTION_DATE DATE
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,68
table_name,FINANCIAL_INSTITUTION_ENTITIES
description,"Index of all financial institutions and banks in the US regulated by the Federal Deposit Insurance Corporation (FDIC) and Federal Financial Institutions Examination Council (FFIEC). 

The FDIC BankSuite provides a comprehensive array of financial data and reports on FDIC-insured institutions in the United States. This suite typically includes detailed information such as bank financial statements, call reports (quarterly financial reports filed by banks), and Uniform Bank Performance Reports (UBPRs) which analyze the financial condition and performance of individual banks.

Provides a wide format breakdown of FDIC-insured entities by ID_RSSD.

The table includes a unique institution ID (ID_RSSD), geographic location, start and end dates, charter types, other identifiers for the institution, associated NAICS codes, and more."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,69
table_name,FINANCIAL_INSTITUTION_TIMESERIES
description,"Financial metrics on FDIC-insured institutions, including financial statements, call reports, and performance analysis for individual banks over time.

The FDIC BankSuite provides a comprehensive array of financial data and reports on FDIC-insured institutions in the United States. This suite typically includes detailed information such as bank financial statements, call reports (quarterly financial reports filed by banks), and Uniform Bank Performance Reports (UBPRs) which analyze the financial condition and performance of individual banks.

Each row represents a distinct timeseries, date, and banking institution entity (ID_RSSD). Each variable is detailed in the financial_institution_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,70
table_name,FREDDIE_MAC_HOUSING_TIMESERIES
description,"House price index tracking price movements for single-family homes and condominiums, and weekly mortgage interest rates for fixed-rate and adjustable-rate mortgage products, provided by Freddie Mac.

Freddie Mac, formally known as the Federal Home Loan Mortgage Corporation, is a government-sponsored enterprise in the US that purchases and securitizes mortgages. Freddie Mac creates a House Price Index (HPI) from data collected on residential property sales and appraisals. This index tracks price movements for both single-family homes and condominiums in the US. Additionally, Freddie Mac provides the Primary Mortgage Market Survey (PMMS), which is a weekly report on mortgage interest rates in the US. This tracks the borrowing costs for homebuyers and refinancers. The PMMS collects data on fixed-rate and adjustable-rate mortgage products, presenting averages for various loan terms.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the freddie_mac_housing_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,71
table_name,CYBERSYN_FINANCIAL_ECONOMIC_INDICATORS_TIMESERIES
description,"Economic metrics including retail sales, consumer credit, mortgage rates, unemployment claims, GDP estimates, employment, and CPI data for various geographic entities, aggregated from various government sources.

The Cybersyn Financial & Economic Indicators tables include data aggregated from various government sources. It features various economic metrics, such as the Census Bureau's retail sales, Federal Reserve's commercial paper and consumer credit, New York Fed's SOFR and EFFR data, Freddie Mac's house price index and mortgage rates, the Department of Labor's weekly unemployment claims, Bureau of Economic Analysis GDP estimates, Bureau of Labor Statistics employment and CPI data, and more.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the cybersyn_financial_economic_indicators_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,72
table_name,FINANCIAL_FRED_TIMESERIES
description,"Economic and financial metrics including retail sales, foreign exchange rates, industrial production, and bank-specific data like deposits, liabilities, and loan balances.

FRED, published by the St. Louis Federal Reserve, includes information aggregated from various government sources. It features various economic metrics such as monthly retail sales, foreign exchange rates, and industrial production as well as, financial-institution-specific data (e.g. flow of deposits for small and large banks, total bank liabilities, outstanding balance of commercial real estate loans).

Provides historical values for variables collected by FRED by GEO_ID.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the financial_fred_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,73
table_name,HOUSING_URBAN_DEVELOPMENT_TIMESERIES
description,"Annual state and Continuum of Care (CoC)-level homelessness estimates in the US from 2007 onwards.

The US Department of Housing and Urban Development (HUD) is a federal agency responsible for national policies on America's housing needs. The Annual Homeless Assessment Report (AHAR) provides estimates of homelessness in the US based on the Point-In-Time (PIT) count and Housing Inventory Count (HIC) conducted in January of each year. It provides a detailed view on the number of homeless individuals, chronically homeless persons, homeless veterans, and homeless children and youth.

Each row represents a distinct timeseries, date, and value by geographic entity, JOINABLE to Cybersyn's geography entity tables. Each variable is detailed in the housing_urban_development_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,74
table_name,INTERNATIONAL_MONETARY_FUND_ATTRIBUTES
description,"Economic and financial indicators for countries and regions, including commodity prices, balance of payments, government finances, investment, and regional economic outlooks, provided by the IMF.

The International Monetary Fund (IMF) provides data on the following topics: Primary Commodity Price System (prices of commodities by country); Balance of Payments (countries’ economic transactions with the rest of the world, including trade balances, capital flows, and official reserves); Fiscal Monitor (detailed government finances); International Financial Statistics (macroeconomic and financial indicators); Coordinated Portfolio Investment Survey (cross-border holdings of equity and debt securities); Africa Regional Economic Outlook (economic indicators for Africa); Asia and Pacific Regional Economic Outlook (economic indicators for the Asia and Pacific region).

Provides a wide format breakdown of variables included in the international_monetary_fund_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,75
table_name,INTERNATIONAL_TRADE_ADMINISTRATION_TRADE_EVENTS_INDEX
description,"Directory of events for US businesses interested in selling their products and services overseas.

The US Department of Commerce's International Trade Administration (ITA) provides data on trade events, trade leads, market research, tariff data, and many other datasets relevant to exporters and importers. Trade events include industry conferences, webinars, lectures, and trade missions organized by the ITA and other trade agencies (e.g., The US Trade and Development Agency, The State Department, The Small Business Administration). Businesses can get tremendous value from meeting with trade specialists and learning about new opportunities for their business.

Provides a wide format overview of trade events by TRADE_EVENT_ID.

This table includes location and timing details for all events associated with the above trade organizations."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,76
table_name,IRS_MIGRATION_BY_CHARACTERISTIC_ATTRIBUTES
description,"Aggregated migration data at zip code, county, and state levels, including population flow, income changes, and demographic characteristics, provided by the IRS.

The Internal Revenue Service (IRS), which is the revenue service of the US federal government, is responsible for collecting taxes and administering the Internal Revenue Code. The IRS publishes aggregated migration data based on annual returns. This data illustrates underlying economic conditions at a zip code and state level as well as measuring population and aggregate income changes between counties and states. It also allows for specific measurement of county-to-county population flow.

Provides a wide format breakdown of variables included in the irs_migration_by_characteristic_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including the associated income bracket, return group, age group, unit of measurement, and frequency of measurement."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,77
table_name,NEWYORKFED_CONSUMER_ATTRIBUTES
description,"Monthly household economic expectations and behavior data, and quarterly consumer debt and credit trends, including balances, delinquencies, and bankruptcies.

The Federal Reserve Bank of New York (or New York Fed) provides data on economic perspectives and behaviors of US households in the Survey of Consumer Expectations (SCE) and the Household Debt and Credit Report. The Survey of Consumer Expectations (SCE) collects monthly data on households' economic expectations and behavior on inflation, the labor market, and personal finance. This survey is unique in its detailed questioning regarding the probability of certain events occurring in the respondents' financial lives (e.g., inflation, spending, income), serving as a tool for understanding future consumer behavior and economic trends. The Household Debt and Credit Report provides quarterly updates on trends in consumer debt and credit, including breakdowns by debt type and credit score. It draws from a nationally representative sample of anonymized Equifax credit data to report on developments in mortgage, student loan, auto loan, and credit card balances, as well as bankruptcy filings and delinquencies.

Provides a wide format breakdown of variables included in the newyorkfed_consumer_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,78
table_name,OUR_WORLD_IN_DATA_ATTRIBUTES
description,"Global CO2 emissions data by sector and source, showing key contributors and variations over time, provided by Our World in Data (OWID).

OWID is an online publication that presents empirical research and data on global development.

Provides a wide format breakdown of variables included in the our_world_in_data_timeseries table. OWID charts are provided for reference."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.OUR_WORLD_IN_DATA_ATTRIBUTES (
    UNIT TEXT,
    VARIABLE TEXT,
    MEASURE TEXT,
    VARIABLE_NAME TEXT,
    FREQUENCY TEXT,
    OUR_WORLD_IN_DATA_CHARTS ARRAY
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,79
table_name,WORLD_TRADE_ORGANIZATION_TIMESERIES
description,"International trade statistics including trade flows, tariff rates, and regional trade dynamics for goods and services between reporting and partner economies, from the intergovernmental organization, World Trade Organization (WTO).

The World Trade Organization (WTO) Indicator Data provides statistics on international trade, covering trade flows in goods and services, tariff rates set by countries on imports, and regional trade dynamics. 

Each row represents a distinct timeseries, date, and value by geographic entity (reporting economy and partner economy). Each variable is detailed in the world_trade_organization_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,80
table_name,FDIC_SUMMARY_OF_DEPOSITS_TIMESERIES
description,"Deposit data for FDIC-insured bank branches, including deposit amounts, branch locations, and institution details, released annually.

The Federal Deposit Insurance Corporation (FDIC) is an independent agency of the US government that insures deposits at banks and thrift institutions, up to an insured limit, and promotes the safety and soundness of these financial institutions by identifying, monitoring, and addressing risks. They monitor financial institutions at 3 levels: (1) holding company, (2) institution, and (3) branch. On an annual basis, they conduct the Summary of Deposits survey that gathers data on the deposits held at each FDIC-insured banks' branches (if the bank has at least one branch).

Each row represents a distinct timeseries, date, and value by FDIC institution and branch. Each variable is detailed in the fdic_summary_of_deposits_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,81
table_name,FHFA_MORTGAGE_PERFORMANCE_ATTRIBUTES
description,"Loan-level mortgage data from the FHFA including originations, terms, performance, borrower demographics, and delinquency rates at national, state, and local levels from 2002 onwards.

The Federal Housing Finance Agency (FHFA) in partnership with the Consumer Financial Protection Bureau (CFPB) developed the National Mortgage Database (NMDB), a nationally representative 5% sample of residential mortgages in the US. It details loan-level data covering mortgage originations, terms, and performance, along with borrower demographics.; and indicates rates of delayed payments, foreclosures and bankruptcies, and forbearance. The data is grouped by geographic levels (national, state, CBSA/MSD level) and includes both Enterprise and non-Enterprise individual mortgages from 2002 onwards.

Provides a wide format breakdown of variables included in the fhfa_mortgage_performance_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,82
table_name,FHFA_UNIFORM_APPRAISAL_ATTRIBUTES
description,"Single-family home appraisal trends, including home values and features, from a 5% nationally representative sample since 2013, sourced by the FHFA.

The Federal Housing Finance Agency (FHFA) provides the Uniform Appraisal Dataset (UAD), which details trends found in single family appraisals (i.e. home values) collected by Fannie Mae and Freddie Mac for both new purchases and refinances since 2013. It is based on a 5% nationally representative random sample of appraisals for single-family mortgages acquired by the Enterprises.

Provides a wide format breakdown of variables included in the fhfa_uniform_appraisal_timeseries table, including the reason for the appraisal request (e.g., Purchase, Refinance), the characteristic for category grouping based on home features, important home features, and unit of measurement."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,83
table_name,GEOGRAPHY_INDEX
description,"The Geography Index table provides a unique GEO_ID with its associated GEO_NAME and LEVEL (e.g., City, CensusZipCodeTabulationArea, County, etc.). ISO codes are provided for a geography where applicable."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.GEOGRAPHY_INDEX (
    LEVEL TEXT,
    ISO_ALPHA2 TEXT,
    GEO_ID TEXT,
    ISO_3166_2_CODE TEXT,
    ISO_NUMERIC_CODE TEXT,
    ISO_ALPHA3 TEXT,
    GEO_NAME TEXT,
    ISO_NAME TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,84
table_name,INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_SCREENED_ENTITIES_INDEX
description,"Compilation of export screening lists of companies, entities, or persons from the Departments of Commerce, State, and the Treasury that would require additional due diligence.

The US Department of Commerce's International Trade Administration (ITA) provides data on trade events, trade leads, market research, tariff data, and many other datasets relevant to exporters and importers. The Consolidated Screening List enables businesses to stay compliant with exporting law. In the event that a company, entity or person on the list appears to match a party potentially involved in an export transaction, additional due diligence should be conducted before proceeding. There may be a strict export prohibition, requirement for seeking a license application, evaluation of the end-use or user to ensure it does not result in an activity prohibited by any U.S. export regulations, or other restriction.

Provides a wide format overview of entities that would require additional screening if part of an export transaction (by EXPORT_RESTRICTED_ENTITY_ID).

This table includes associated information with each entity type (e.g. for a vessel, the vessel's call sign, gross registered tonnage, and gross tonnage are provided), including the source of the data."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,85
table_name,FEMA_DISASTER_DECLARATION_AREAS_INDEX
description,"Federally-declared disasters and their associated geographies (state and county), authorized programs, and recorded timelines, as recorded by FEMA.

The Federal Emergency Management Agency (FEMA) provides extensive data on emergency management in the United States. This data encompasses disaster declarations, declared recovery programs, and the National Flood Insurance Program (NFIP) policies and claims. The disaster declaration process involves a collaboration between FEMA and the federal government, where state or tribal governments formally request federal assistance through FEMA after a significant disaster overwhelms their capabilities. Upon receiving the request, FEMA evaluates the situation and advises the President, who then decides whether to declare a federal disaster, enabling the allocation of federal funds and resources to assist in recovery efforts.

Provides a wide format breakdown of federally-declared disasters and associated geographies. This includes details on the disaster and authorized programs."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FEMA_DISASTER_DECLARATION_AREAS_INDEX (
    STATE_GEO_ID TEXT,
    DECLARED_PROGRAMS_DETAILED ARRAY,
    FEMA_REGION_ID NUMBER,
    DESIGNATED_DATE DATE,
    DISASTER_DECLARATION_RECORD_ID TEXT,
    FEMA_PLACE_CODE TEXT,
    ENTRY_DATE DATE,
    DISASTER_ID TEXT,
    FEMA_DESIGNATED_AREA TEXT,
    TRIBAL_REQUEST BOOLEAN,
    CLOSEOUT_DATE DATE,
    COUNTY_GEO_ID TEXT,
    UPDATE_DATE DATE
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,86
table_name,FINANCIAL_INSTITUTION_ATTRIBUTES
description,"Financial variables tracked by the FDIC for FDIC-insured institutions.

The FDIC BankSuite provides a comprehensive array of financial data and reports on FDIC-insured institutions in the United States. This suite typically includes detailed information such as bank financial statements, call reports (quarterly financial reports filed by banks), and Uniform Bank Performance Reports (UBPRs) which analyze the financial condition and performance of individual banks.

Provides a wide format breakdown of variables included in the financial_institution_timeseries table.

The table includes a unique variable ID and a human-readable variable name. Additionally, each column represents a characteristic of the variable, including the definition of the variable, its reporting frequency, and unit of measurement."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,87
table_name,INTERNATIONAL_TRADE_ADMINISTRATION_TRADE_LEADS_INDEX
description,"Directory of contract opportunities for US businesses selling their products and services overseas.

The US Department of Commerce's International Trade Administration (ITA) provides data on trade events, trade leads, market research, tariff data, and many other datasets relevant to exporters and importers. Trade leads, procurement opportunities, and contract notifications originate from 	The State Department’s Business Information Database System (BIDS), FedBizOps, The United Kingdom, Canada, The Millennium Challenge Corporation, Australia, and The United States Trade and Development Agency (USTDA)

Provides a wide format overview of contract leads for US businesses by TRADE_LEAD_ID.

This table includes a description of the lead and details on the associated timing. Currently, only leads from the UK are provided."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,88
table_name,PERMID_SECURITY_INDEX
description,"Refinitiv's PermID, or Permanent Identifier, is a machine-readable, unique identifier assigned to various entities and data elements in the financial world. This includes a specific Security ID, which is used to consistently and unambiguously identify financial securities such as stocks, bonds, and derivatives.

Provides a wide format overview of each PERMID_SECURITY_ID.

This table provides details on each security with a PermID, including the security's name, its primary ticker, asset class, primary exchange, and security status (e.g., Active, Inactive), as well as related global tickers."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,89
table_name,PUBLIC_HOLIDAY_CALENDAR
description,"The Public Holiday Calendar provides reference data containing government-designated holidays for 119 countries since 1970, as well as the financial market holidays for the European Central Bank (ECB) and New York Stock Exchange (NYSE).
Provides historical values for each public holiday by GEO_ID.
Each row represents a distinct timeseries, date, and holiday name by geographic entity. It identifies whether the holiday is financial."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,90
table_name,SEC_HOLDING_FILING_INDEX
description,"Report index for Form 13-F, a disclosure of equity holdings by institutional investment managers with over $100 million in assets under management, provided on a quarterly basis by the SEC.

The SEC assigns a unique number, Central Index Key (CIK), to all entities (companies, individuals, and foreign governments) who file disclosures with the SEC. A filing is assigned a unique identifier called an ADSH, or Accession Number. The Report entity represents individual filings with the SEC. 

Provides a wide format overview of an SEC filing (13F fund holding reports) by ADSH with associated CIK and OpenFIGI IDs."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,91
table_name,UNITED_NATIONS_INDUSTRIAL_DEVELOPMENT_ORGANIZATION_ATTRIBUTES
description,"Manufacturing sector statistics for countries, including performance and trends, using the ISIC Revision 3 framework for comparability across years, provided by the United Nations Industrial Development Organization (UNIDO).

The UNIDO is an agency of the United Nations that promotes industrial development for poverty reduction, inclusive globalization, and environmental sustainability. INDSTAT, which adheres to the International Standard Industrial Classification of All Economic Activities (ISIC) Revision 3, provides statistics on the manufacturing sector, analyzing industrial performance and trends by country. The consistent application of ISIC Revision 3 ensures comparability in industrial data across years.

Provides a wide format breakdown of variables included in the united_nations_industrial_development_organization_timeseries table. The related economic activity and INDSTAT version are provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,92
table_name,WORLD_HEALTH_ORGANIZATION_TIMESERIES
description,"Country-level health data, tracking a range of environmental, social, and legislative factors that impact citizen health and health outcomes, provided by the World Health Organization (WHO).

The World Health Organization (WHO) provides an annual compilation of health-related indicators for its 194 members and associated country groups and regions. The data encompasses health-related metrics, including alcohol consumption among adolescents and adults, tobacco control policies, abortion rates, accessibility of dementia care services, and adolescent fertility rates. Additionally, it covers environmental health indicators like ambient air pollution's impact on disability-adjusted life years (DALYs) and mortality rates. This data set provides a detailed overview of global health trends and issues.

Each row represents a distinct timeseries, date, and value by geographic entity (representing a country, country group, or region). Each variable is detailed in the world_health_organization_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,93
table_name,GOVERNMENT_CONTRACT_INDEX
description,"Index of federal contracts, including contract descriptions, associated agencies, and geographic information on contract performance.

The U.S. General Services Administration (GSA) manages SAM.gov (System for Award Management), which is a key database for government procurement, federal contracting, and awards information in the United States. This platform provides comprehensive data on federal contracts and contract awards, serving as a central location where businesses can register to do business with the U.S. government, and where government agencies publish award details and contracting opportunities. Contracts represent listings soliciting bids on goods and services that the Federal US government is seeking from contractors. Contract Awards represent accepted bids or solicitations from third-party contractors to fulfill a contract. Note that the description of the contract award may differ from that of the original contract if the government reopened the contract or awarded multiple awards from a single original contract solicitation.

Provides a wide format table that describes each contract (CONTRACT_SOLICITATION_ID). The table details the original contract name, description, associated departments and agencies, and geographic information on the performance of the contract."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,94
table_name,SEC_CIK_INDEX
description,"Map between company identifiers (including Cybersyn's COMPANY_ID) and the SEC Central Index Keys (CIKs), along with geographic and industry classification details for SEC filers.

The SEC assigns a unique number, Central Index Key (CIK), to all entities (companies, individuals, and foreign governments) who file disclosures with the SEC. 
SIC, or Standard Industrial Classification, is a four-digit code provided by the SEC to classify the primary industry of a company. Originally developed by the U.S. government in the 1930s, SIC codes are used to categorize companies and facilitate the analysis of economic activities across government and private sectors."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,95
table_name,US_TREASURY_ATTRIBUTES
description,"Corporate bond yields, savings bond data, Treasury security issuance and interest rates, and revenue collection figures for the US government.

The US Treasury provides data on various financial indicators of the US government, including data on corporate bond yield spot and average rates, savings bonds, securities issued in TreasuryDirect, average interest rates on Treasury securities, and revenue collections. This data details the US corporate bond market, government debt issuance, bond market activity, interest rate trends, and the government’s income sources.

Provides a wide format breakdown of variables included in the us_treasury_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,96
table_name,UNITED_NATIONS_INDUSTRIAL_DEVELOPMENT_ORGANIZATION_TIMESERIES
description,"Manufacturing sector statistics by country, including industrial performance and trends, from 2016 to 2023, using the ISIC Revision 3 classification, provided by the United Nations Industrial Development Organization (UNIDO).

The UNIDO is an agency of the United Nations that promotes industrial development for poverty reduction, inclusive globalization, and environmental sustainability. INDSTAT, which adheres to the International Standard Industrial Classification of All Economic Activities (ISIC) Revision 3, provides statistics on the manufacturing sector, analyzing industrial performance and trends by country. The consistent application of ISIC Revision 3 ensures comparability in industrial data across years.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the united_nations_industrial_development_organization_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,97
table_name,US_DEPARTMENT_OF_LABOR_UNEMPLOYMENT_INSURANCE_CLAIMS_ATTRIBUTES
description,"Initial and continued unemployment insurance claims in the US and each state, released weekly by the US Department of Labor to track US unemployment trends.

The US Department of Labor provides weekly data on Unemployment Insurance (UI) claims. The data is used in the economic analysis of unemployment trends in the nation, and in each state. Initial claims measure emerging unemployment and continued weeks claimed measure the number of persons claiming unemployment benefits.

Provides a wide format breakdown of variables included in the us_department_of_labor_unemployment_insurance_claims_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,98
table_name,AMERICAN_COMMUNITY_SURVEY_ATTRIBUTES
description,"Population variables covering demographic, social, economic, and housing trends in the US, releasing 1-year and 5-year estimates annually.

The US Census Bureau's American Community Survey (ACS) is an annual survey based on a subset of the population (unlike the decennial census, which aims to count every individual). The ACS provides data at various geographic levels. They provide 1-year and 5-year estimates on a rolling basis (e.g., a 5-year estimate in 2022 would be based on data collected between January 1, 2018 and December 31, 2022). 1-year estimates are available for areas with populations of 65,000+. 5-year estimates are available for all areas.

Provides a wide format breakdown of variables included in the american_community_survey_timeseries table. The ACS Series ID is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,99
table_name,BUREAU_OF_LABOR_STATISTICS_EMPLOYMENT_TIMESERIES
description,"Employment, job openings, labor turnover, and wages tracked across US regions in the LAUS, JOLTS, and SAE reports from the BLS.

The US Bureau of Labor Statistics (BLS) produces granular employment reports: Local Area Unemployment Statistics (LAUS) provides monthly and annual employment, unemployment, and labor force data for states and localities; Job Openings and Labor Turnover Survey (JOLTS) covers labor demand and turnover rates, including data on job openings, hires, and separations; and State and Metro Employment (SAE) delivers employment and wage data across various industries at state and metropolitan levels.

Each row represents a distinct timeseries collected by the BLS reports (LAUS, JOLTS, and SAE), date, and value by geographic entity JOINABLE to Cybersyn's geography entity tables. Each variable is detailed in the bureau_of_labor_statistics_employment_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,100
table_name,BUREAU_OF_LABOR_STATISTICS_PRICE_ATTRIBUTES
description,"US CPI and average price data, measuring average change in prices paid by consumers for goods and services over time and thus inflation, reported by the Bureau of Labor Statistics.

The US Bureau of Labor Statistics (BLS) releases the Consumer Price Index (CPI) report, which measures the average change in prices paid by consumers for goods and services over time. This report serves as a key indicator of inflation. The Average Price report provides estimates of price levels (i.e. average price paid by the consumer for a good or service).

Provides a wide format breakdown of variables included in the bureau_of_labor_statistics_price_timeseries table. The BLS report is provided for reference. Additionally, variables are defined by seasonal adjustment, consumer product, and CPI base type (e.g., standard or alternative)."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,101
table_name,BUREAU_OF_LABOR_STATISTICS_PRICE_TIMESERIES
description,"US CPI and average price data, measuring average change in prices paid by consumers for goods and services over time and thus inflation, at the country, region, division, and CBSA levels, reported by the Bureau of Labor Statistics.

The US Bureau of Labor Statistics (BLS) releases the Consumer Price Index (CPI) report, which measures the average change in prices paid by consumers for goods and services over time. This report serves as a key indicator of inflation. The Average Price report provides estimates of price levels (i.e. average price paid by the consumer for a good or service).

Each row represents a distinct timeseries from the CPI & Average Price BLS reports, date, and value by geographic entity, joinable to Cybersyn's geography entity tables. Each variable is detailed in the bureau_of_labor_statistics_price_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,102
table_name,CLIMATE_WATCH_ATTRIBUTES
description,"Tracked greenhouse gas emissions data by sector and gas and future emission scenarios based on economic, technological, and policy assumptions, compiled by Climate Watch.

Managed by the World Resources Institute, Climate Watch is a global coalition of countries and institutions collaborating to ensure nations receive the technical and financial support to achieve climate targets under the Paris Agreement. Climate Watch's historical emissions dataset provides a record of past greenhouse gas emissions across various sectors and gases, categorized by both geographic and sector-specific divisions, and presents future emission scenarios, each predicated on distinct assumptions regarding economic growth, technological advancements, and policy implementations. These scenarios facilitate exploration into potential future states of global emissions.

Provides a wide format breakdown of variables included in the climate_watch_timeseries table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.CLIMATE_WATCH_ATTRIBUTES (
    VARIABLE_NAME TEXT,
    EMISSION_TYPE TEXT,
    SCENARIO TEXT,
    SECTOR TEXT,
    FREQUENCY TEXT,
    UNIT TEXT,
    SOURCE TEXT,
    VARIABLE TEXT,
    MEASURE TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,103
table_name,CLIMATE_WATCH_TIMESERIES
description,"Country-level greenhouse gas emissions data by sector and gas; estimates based on future emission scenarios with various economic, technological, and policy assumptions.

Managed by the World Resources Institute, Climate Watch is a global coalition of countries and institutions collaborating to ensure nations receive the technical and financial support to achieve climate targets under the Paris Agreement. Climate Watch's historical emissions dataset provides a record of past greenhouse gas emissions across various sectors and gases, categorized by both geographic and sector-specific divisions, and presents future emission scenarios, each predicated on distinct assumptions regarding economic growth, technological advancements, and policy implementations. These scenarios facilitate exploration into potential future states of global emissions.

Each row represents a distinct timeseries, date, and value by geographic entity, JOINABLE to Cybersyn's geography entity tables. Each variable is detailed in the climate_watch_attributes table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.CLIMATE_WATCH_TIMESERIES (
    VARIABLE TEXT,
    VALUE FLOAT,
    VARIABLE_NAME TEXT,
    GEO_ID TEXT,
    UNIT TEXT,
    DATE DATE
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,104
table_name,COMPANY_RELATIONSHIPS
description,"Company subsidiary and parent relationships, joinable to Cybersyn's company_index table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,105
table_name,CYBERSYN_DATA_CATALOG
description,"A catalog of all Cybersyn tables. Metadata about the tables includes descriptions, data sources, related tables, and more."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.CYBERSYN_DATA_CATALOG (
    DATA_SOURCE ARRAY,
    LICENSE_URL ARRAY,
    TABLE_NAME_PROPER TEXT,
    LISTING_NAME ARRAY,
    CREATED_DATE DATE,
    LAST_UPDATED_TIMESTAMP TIMESTAMP_TZ,
    TABLE_TYPE TEXT,
    DESCRIPTION TEXT,
    SELECT_RELATED_TABLES ARRAY,
    DOCUMENTATION_URL TEXT,
    SHORT_DESCRIPTION TEXT,
    DATA_SOURCE_URL ARRAY,
    ENTITIES ARRAY,
    LISTING_URL ARRAY,
    TABLE_NAME TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,106
table_name,CYBERSYN_FINANCIAL_ECONOMIC_INDICATORS_ATTRIBUTES
description,"Economic metrics including retail sales, consumer credit, mortgage rates, unemployment claims, GDP estimates, employment, and CPI data for various geographic entities, aggregated from various government sources.

The Cybersyn Financial & Economic Indicators tables include data aggregated from various government sources. It features various economic metrics, such as the Census Bureau's retail sales, Federal Reserve's commercial paper and consumer credit, New York Fed's SOFR and EFFR data, Freddie Mac's house price index and mortgage rates, the Department of Labor's weekly unemployment claims, Bureau of Economic Analysis GDP estimates, Bureau of Labor Statistics employment and CPI data, and more.

Provides a wide format breakdown of variables included in the cybersyn_financial_economic_indicators_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,107
table_name,EUROPEAN_CENTRAL_BANK_TIMESERIES
description,"Consumer price indices, residential property prices, and valuations for European countries and country groups, provided by the European Central Bank.

The European Central Bank (ECB) is a central institution of the Eurozone, primarily responsible for managing the euro and framing and implementing EU economic & monetary policy. Our ECB data covers the following: (1) Consumer Price Indices for a wide range of consumer goods, (2) Residential Property Prices, and (3) Residential Property Valuations. Data is provided for European countries as well as the European country groups.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the european_central_bank_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,108
table_name,FBI_CRIME_ATTRIBUTES
description,"Estimated crime statistics for both state and national levels in the US from the FBI.

The FBI, or Federal Bureau of Investigation, is the principal federal law enforcement agency in the United States, tasked with investigating and enforcing federal laws. Data includes crime totals across the nation and its 50 states from 1979.

Provides a wide format breakdown of variables included in the fbi_crime_timeseries table. The offense category is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,109
table_name,FEMA_REGION_INDEX
description,"FEMA region headquarters' addresses and geo-location details for coordinating localized disaster response, recovery, and mitigation efforts across the United States.

The Federal Emergency Management Agency (FEMA) provides extensive data on emergency management in the United States. This data encompasses disaster declarations, declared recovery programs, and the National Flood Insurance Program (NFIP) policies and claims.

FEMA region headquarters are primarily used for coordinating disaster response and recovery efforts within their respective regions. These regional offices work closely with state and local governments, as well as with tribal and territorial authorities, to prepare for, protect against, respond to, recover from, and mitigate all hazards. By having regional headquarters, FEMA ensures a more localized, immediate, and effective response to emergencies and disasters.

Provides a wide format breakdown of FEMA's regions, including the address for each region's headquarters and region geo-location details."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FEMA_REGION_INDEX (
    FEMA_REGION_ID TEXT,
    LATITUDE FLOAT,
    LONGITUDE FLOAT,
    COVERED_STATES TEXT,
    ADDRESS TEXT,
    REGION_GEOMETRY GEOMETRY,
    FEMA_REGION_NAME TEXT,
    CITY TEXT,
    STATE_GEO_ID TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,110
table_name,FINANCIAL_CFPB_COMPLAINT
description,"Daily-updated consumer complaints about financial products and services, including company responses and complaint details, dating back to December 2011, from the CFPB.

The Consumer Financial Protection Bureau (CFPB) publishes the Consumer Complaints Database that provides complaint information for companies by product category, receipt, and company response timeliness by consumer's zip code and state. It serves as a valuable tool for understanding consumer challenges in the financial marketplace and for monitoring how financial institutions address these issues. The data is updated daily and dates back to Dec 1, 2011.

Provides a wide format overview of each complaint submitted to the CFPB.

The table provides information on each complaint, including the product, issue, associated company, complaint narrative, public response from the company, and complaint submission details."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,111
table_name,FINANCIAL_INSTITUTION_EVENTS
description,"Bank events data related to FDIC institutions, including splits, discontinued charters, asset sales, retained charters, and failures, with transaction dates and accounting methods.

The FDIC BankSuite provides a comprehensive array of financial data and reports on FDIC-insured institutions in the United States. This suite typically includes detailed information such as bank financial statements, call reports (quarterly financial reports filed by banks), and Uniform Bank Performance Reports (UBPRs) which analyze the financial condition and performance of individual banks.

The table includes ID_RSSDs for the predecessor and successor of different event types. Events include splits, discontinued charters, sale of assets, retained charters, and failures. It details the transaction date and the merge accounting method utilized."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,112
table_name,FINANCIAL_INSTITUTION_HIERARCHY
description,"Provides FDIC financial institution relationships, including parent and offspring IDs, institution categories, relationship types, percent control, and active status.

The FDIC BankSuite provides a comprehensive array of financial data and reports on FDIC-insured institutions in the United States. This suite typically includes detailed information such as bank financial statements, call reports (quarterly financial reports filed by banks), and Uniform Bank Performance Reports (UBPRs) which analyze the financial condition and performance of individual banks.

Provides a wide format breakdown of relationships between various levels of financial institutions by ID_RSSD_PARENT and ID_RSSD_OFFSPRING.

Each row represents a unique relationship between two financial institutions, the category definition of each institution, the type of relationship and percent control, and whether the relationship is active."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,113
table_name,FOOD_AGRICULTURE_ORGANIZATION_TIMESERIES
description,"Greenhouse gas emissions data related to agriculture, forestry, and other land use activities, including carbon dioxide, methane, and nitrous oxide gases, provided by the United Nations.

The Food and Agriculture Organization (FAO) is a specialized agency of the United Nations leading the international effort to increase food security and nutrition standards. The FAOSTAT database reports greenhouse gas emissions data related to agriculture, forestry, and other land use activities (including carbon dioxide, methane, nitrous oxide gases, etc.).
  
Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the food_agriculture_organization_attributes table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.FOOD_AGRICULTURE_ORGANIZATION_TIMESERIES (
    VARIABLE_NAME TEXT,
    UNIT TEXT,
    GEO_ID TEXT,
    VARIABLE TEXT,
    DATE TEXT,
    VALUE FLOAT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,114
table_name,GEOGRAPHY_OVERLAPS
description,"The Geography Overlaps table provides overlapping geographic relationships between the GEO_ID and OVERLAPS_WITH (e.g., overlap between a county and a zip code)."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,115
table_name,NOAA_WEATHER_METRICS_TIMESERIES
description,"Daily global climate data including temperature, precipitation, snowfall, and snow depth measurements from over 80,000 weather stations worldwide, provided by NOAA.

The National Centers for Environmental Information (NCEI), a division of the National Oceanic and Atmospheric Administration (NOAA), distributes the Global Historical Climatology Network-Daily (GHCNd),  a global database of daily climate summaries collected from land surface weather stations by numerous sources. The GHCNd database encompasses various meteorological measurements such as temperature, precipitation, snowfall, and snow depth, from over 80K+ weather stations around the world.

Each row represents a distinct timeseries, date, and value by NOAA weather station from 2000 onwards. Each variable is detailed in the noaa_weather_metrics_attributes table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.NOAA_WEATHER_METRICS_TIMESERIES (
    VARIABLE TEXT,
    VALUE NUMBER,
    NOAA_WEATHER_STATION_ID TEXT,
    DATE DATE,
    DATETIME TIMESTAMP_NTZ,
    UNIT TEXT,
    VARIABLE_NAME TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,116
table_name,EIA_ENERGY_ATTRIBUTES
description,"Natural gas, electricity, and petroleum sales, production, consumption, and import/export statistics, provided by the Energy Information Administration (EIA).

The Energy Information Administration (EIA) is part of the U.S. Department of Energy and serves as a primary source of data on energy production, consumption, and related topics.

Provides a wide format breakdown of variables included in the eia_energy_timeseries table."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.EIA_ENERGY_ATTRIBUTES (
    REPORT TEXT,
    SECTOR TEXT,
    MEASURE TEXT,
    FREQUENCY TEXT,
    UNIT TEXT,
    VARIABLE_NAME TEXT,
    ENERGY_TYPE TEXT,
    VARIABLE TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,117
table_name,FHFA_HOUSE_PRICE_TIMESERIES
description,"House price indexes measuring single-family home price changes in the US since 1975, across various geographic levels and property classifications, provided from the FHFA based on Fannie Mae and Freddie Mac mortgage data.

The Federal Housing Finance Agency (FHFA) provides the House Price Index (HPI), a collection of publicly available price indexes that measure movement of single-family house prices in the US since 1975. The FHFA compiles this data by examining repeat mortgage transactions on single-family properties whose mortgages have been purchased or securitized by Fannie Mae or Freddie Mac, across various geographic levels.

Provides historical values for each variable collected by the FHFA HPI by GEO_ID.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the fhfa_house_price_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,118
table_name,FHFA_UNIFORM_APPRAISAL_TIMESERIES
description,"Single-family home appraisal trends, including home values and features, from a 5% nationally representative sample since 2013, sourced by the FHFA.

The Federal Housing Finance Agency (FHFA) provides the Uniform Appraisal Dataset (UAD), which details trends found in single family appraisals (i.e. home values) collected by Fannie Mae and Freddie Mac for both new purchases and refinances since 2013. It is based on a 5% nationally representative random sample of appraisals for single-family mortgages acquired by the Enterprises.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the fhfa_uniform_appraisal_attributes. The table also flags values that were suppressed due to privacy reasons."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,119
table_name,GEOGRAPHY_CHARACTERISTICS
description,"The Geography Characteristics table provides various types of geographic characteristic relationships (e.g., GEOJSON coordinates, WKT coordinates, state abbreviations, and FIPS 10-4 codes) with an associated RELATIONSHIP_START_DATE and RELATIONSHIP_END_DATE by GEO_ID."""
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,120
table_name,INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_ASSISTANCE_CENTERS_INDEX
description,"Directory of all of the International Trade Administration's (ITA) domestic and international export assistance centers.

The US Department of Commerce's International Trade Administration (ITA) provides data on trade events, trade leads, market research, tariff data, and many other datasets relevant to exporters and importers. ITA centers are often collocated with offices from the State Department or other trade agencies. Therefore, the addresses change with some regularity.

Provides a wide format overview of domestic and international ITA centers by INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_ASSISTANCE_CENTER_ID. This table provides contact and address information for all of ITA\’s centers."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,121
table_name,IRS_INDIVIDUAL_INCOME_ATTRIBUTES
description,"Aggregated individual income tax statistics, including population and income changes, at the zip code, county, and state levels, based on annual IRS returns.

The Internal Revenue Service (IRS), which is the revenue service of the US federal government, is responsible for collecting taxes and administering the Internal Revenue Code. The IRS publishes aggregated individual income tax statistics based on annual returns. This data illustrates underlying economic conditions at a zip code and state level as well as measuring population and aggregate income changes between counties and states. It also allows for specific measurement of county-to-county population flow.

Provides a wide format breakdown of variables included in the irs_individual_income_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,122
table_name,NOAA_WEATHER_STATION_INDEX
description,"Index of NOAA land surface weather stations reporting global climate metrics.

The National Centers for Environmental Information (NCEI), a division of the National Oceanic and Atmospheric Administration (NOAA), distributes the Global Historical Climatology Network-Daily (GHCNd),  a global database of daily climate summaries collected from land surface weather stations by numerous sources. The GHCNd database encompasses various meteorological measurements such as temperature, precipitation, snowfall, and snow depth, from over 80K+ weather stations around the world.

Provides a wide format overview of NOAA land surface weather stations included in the noaa_weather_metrics_timeseries table.

The table includes a unique ID for each NOAA land surface weather station, geographic details on its location, including GEO_IDs which can be mapped to the GEOGRAPHY_INDEX GEO_ID field, where data for this weather station is sourced, and the weather station's associated organizations."
DDL,"CREATE TABLE WEATHER__ENVIRONMENT.CYBERSYN.CYBERSYN.NOAA_WEATHER_STATION_INDEX (
    NOAA_WEATHER_STATION_NAME TEXT,
    LATITUDE FLOAT,
    ZIP_NAME TEXT,
    COUNTRY_GEO_ID TEXT,
    WORLD_METEOROLOGICAL_ORGANIZATION_ID TEXT,
    ZIP_GEO_ID TEXT,
    SOURCE_DATA ARRAY,
    STATE_GEO_ID TEXT,
    ELEVATION FLOAT,
    NOAA_WEATHER_STATION_ID TEXT,
    WEATHER_STATION_NETWORK TEXT,
    COUNTRY_NAME TEXT,
    ASSOCIATED_NETWORKS ARRAY,
    LONGITUDE FLOAT,
    STATE_NAME TEXT
);"

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,123
table_name,SEC_FISCAL_CALENDARS
description,"Company fiscal calendars by quarter, including period start and end dates, identified by unique Central Index Key (CIK) numbers."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,124
table_name,SEC_HOLDING_FILING_ATTRIBUTES
description,"Disclosure of equity holdings by institutional investment managers with over $100 million in assets under management, provided in the Form 13-F on a quarterly basis by the SEC.

The SEC assigns a unique number, Central Index Key (CIK), to all entities (companies, individuals, and foreign governments) who file disclosures with the SEC. A filing is assigned a unique identifier called an ADSH, or Accession Number. The Report entity represents individual filings with the SEC. 

Provides a wide format overview of an SEC filing by ADSH with associated CIK and OpenFIGI IDs.

This table provides details on each 13-F filing to the SEC, including the securities' name, market value, number of shares, and OpenFIGI IDs."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,125
table_name,US_DEPARTMENT_OF_AGRICULTURE_COMMODITIES_TIMESERIES
description,"Global agricultural commodity production, supply, and distribution data by country, covering area harvested, production, imports, exports, and consumption for each commodity, provided by the US Department of Agriculture (USDA).

Managed by the USDA's Foreign Agricultural Service (FAS), it covers a wide range of commodities, including grains, oilseeds, fruits, and vegetables. This data covers both calendar years (running from January 1st to December 31st) and marketing years. Marketing years typically begin in the month when the harvest of a particular crop starts and end before the beginning of the next year's harvest. This period can vary significantly among different crops and countries, depending on when these crops are sown and harvested. The specific starting month of the marketing year for each crop is essential because it affects how production, stocks, and trade are accounted for and compared year-over-year. Marketing years are used to better align the supply and demand statistics of a commodity with its normal production cycle. Additionally, the USDA's Export Sales Reporting (ESR) data provides weekly updates on the export sales activity of major commodities, further enhancing the understanding of market dynamics within these defined marketing years.

Each row represents a distinct timeseries, data, and value by geographic entity. Each variable is detailed in the us_department_of_agriculture_commodities_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,126
table_name,US_DEPARTMENT_OF_TRANSPORTATION_ATTRIBUTES
description,"Monthly domestic non-stop segment data reported by both US and foreign air carriers.

The US Department of Transportation domestic segment data reports both US and foreign air carriers, including carrier, origin, destination, aircraft type and service class for transported passengers, freight and mail, available capacity, scheduled departures, departures performed, aircraft hours, and load factor when both origin and destination airports are located within the boundaries of the United States and its territories.

Provides a wide format breakdown of variables included in the us_department_of_transportation_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,127
table_name,FX_RATES_TIMESERIES
description,"Foreign exchange rates for currency pairs (base and quote currencies), with data from FRED, ECB, and BIS.

Foreign exchange (FX) rates are the rates at which one currency can be exchanged for another. These rates fluctuate based on various factors including economic indicators, market sentiment, political events, and global financial stability. Foreign exchange rates are crucial for international trade and finance, as they determine how much of one currency is needed to buy a unit of another currency. These rates can be floating, changing continuously based on market forces, or they might be pegged (fixed) to another major currency or basket of currencies, managed by a country's central bank. FX rates data is provided historically by FRED (pre-2000) and by the European Central Bank (ECB) and Bank for International Settlements (BIS) for 2000 onwards. To note, these data sources often do not publish the exchange rate every day.

Provides historical values for each currency pair collected by BASE_CURRENCY_ID and QUOTE_CURRENCY_ID.

Each row represents a distinct timeseries, date, and value by currency pair."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,128
table_name,SEC_REPORT_TEXT_ATTRIBUTES
description,"Provides full text of company filings (10-Ks, 10-Qs, 8-Ks) submitted to the SEC, with unique identifiers for each document.

Provides a wide format breakdown of each SEC document submission by SEC_DOCUMENT_ID and ADSH.

Each row represents a report's full text. The SEC_DOCUMENT_ID is a unique document identifier. An ADSH can have multiple documents associated with it."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,129
table_name,US_TREASURY_TIMESERIES
description,"Corporate bond yields, savings bond data, Treasury security issuance and interest rates, and revenue collection figures for the US government, provided by the US Treasury.

The US Treasury provides data on various financial indicators of the US government, including data on corporate bond yield spot and average rates, savings bonds, securities issued in TreasuryDirect, average interest rates on Treasury securities, and revenue collections. This data details the US corporate bond market, government debt issuance, bond market activity, interest rate trends, and the government’s income sources.

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the us_treasury_attributes table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,130
table_name,WORLD_HEALTH_ORGANIZATION_ATTRIBUTES
description,"Health-related indicators for 194 WHO members, including alcohol consumption, tobacco control, abortion rates, dementia care accessibility, adolescent fertility, and environmental health impacts.

The World Health Organization (WHO) provides an annual compilation of health-related indicators for its 194 members and associated country groups and regions. The data encompasses health-related metrics, including alcohol consumption among adolescents and adults, tobacco control policies, abortion rates, accessibility of dementia care services, and adolescent fertility rates. Additionally, it covers environmental health indicators like ambient air pollution's impact on disability-adjusted life years (DALYs) and mortality rates. This data set provides a detailed overview of global health trends and issues.

Provides a wide format breakdown of variables included in the world_health_organization_timeseries table. The source where the WHO aggregated the data from is provided."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,131
table_name,POINT_OF_INTEREST_INDEX
description,"Database of US points of interest (POIs), including names, detailed categorical information, and unique POI IDs for mapping to addresses.

Sourced from OpenAddresses and Overture Maps Foundation. 

OpenAddresses is a collaborative project that compiles and provides free and open global address data, aggregating crowd-sourced and publicly available datasets to create a comprehensive, unified resource. 
Overture Maps Foundation, though not exclusively an address database, aims to provide a comprehensive, open-source, global mapping platform that includes address data among various other geographical and location-based information, enhancing the detail and usability of open mapping data.

Provides a wide format overview of US points of interest (POIs) by unique POI_ID.

This table provides information on unique US points of interest (POIs), including its name and detailed categorical information on the type of location. POIs can be mapped to their addresses using the point_of_interest_addresses_relationship table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,132
table_name,UNITED_KINGDOM_ATTRIBUTES
description,"UK datasets on population, demographics, regional economies, deaths/suicides, retail sales, and credit/debit card spending.

Provides a wide format breakdown of variables included in the united_kingdom_timeseries table."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,133
table_name,WORLD_TRADE_ORGANIZATION_ATTRIBUTES
description,"International trade statistics including trade flows, tariff rates, and regional trade dynamics for goods and services from the intergovernmental organization, World Trade Organization (WTO).

The World Trade Organization (WTO) Indicator Data provides statistics on international trade, covering trade flows in goods and services, tariff rates set by countries on imports, and regional trade dynamics. 

Provides a wide format breakdown of variables included in the world_trade_organization_timeseries table. The WTO indicator code is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,134
table_name,USPS_ADDRESS_CHANGE_ATTRIBUTES
description,"Aggregated inbound and outbound change of address requests at the zip code level, including request type (temporary or permanent) and historical values, provided by the USPS.

The United States Postal Service (USPS) provides the aggregate number of inbound and outbound change of address requests at the zip code level. An individual, family, or business may make a change of address request for mail-forwarding purposes when moving from one mailing address to another. The request type can be temporary or permanent. 

Provides a wide format breakdown of variables included in the usps_address_change_timeseries table. Additionally, the categorization of the request (which can be grouped as temporal, by the requestor type, or total) is provided for reference."
DDL,

Database Name: WEATHER__ENVIRONMENT
Schema Name: CYBERSYN
,135
table_name,USPS_ADDRESS_CHANGE_TIMESERIES
description,"Aggregated inbound and outbound change of address requests at the zip code level, including request type (temporary or permanent) and historical values, provided by the USPS.

The United States Postal Service (USPS) provides the aggregate number of inbound and outbound change of address requests at the zip code level. An individual, family, or business may make a change of address request for mail-forwarding purposes when moving from one mailing address to another. The request type can be temporary or permanent. 

Each row represents a distinct timeseries, date, and value by geographic entity. Each variable is detailed in the usps_address_change_attributes table."
DDL,

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'WEATHER__ENVIRONMENT': {'CYBERSYN': ['AIRCRAFT_INDEX', 'AIRPORT_INDEX', 'BANK_FOR_INTERNATIONAL_SETTLEMENTS_ATTRIBUTES', 'CANADA_STATCAN_TIMESERIES', 'COMPANY_CHARACTERISTICS', 'COMPANY_SECURITY_RELATIONSHIPS', 'DATACOMMONS_ATTRIBUTES', 'EUROPEAN_CENTRAL_BANK_ATTRIBUTES', 'FBI_CRIME_TIMESERIES', 'FEDERAL_RESERVE_ATTRIBUTES', 'FEMA_DISASTER_DECLARATION_INDEX', 'INTERNATIONAL_LABOUR_ORGANIZATION_ATTRIBUTES', 'IRS_INDIVIDUAL_INCOME_TIMESERIES', 'EUROPEAN_COMMISSION_EDGAR_TIMESERIES', 'US_DEPARTMENT_OF_LABOR_UNEMPLOYMENT_INSURANCE_CLAIMS_TIMESERIES', 'BANK_FOR_INTERNATIONAL_SETTLEMENTS_TIMESERIES', 'DATACOMMONS_TIMESERIES', 'EUROPEAN_COMMISSION_EDGAR_ATTRIBUTES', 'FDIC_BRANCH_LOCATIONS_INDEX', 'FHFA_HOUSE_PRICE_ATTRIBUTES', 'FINANCIAL_FRED_ATTRIBUTES', 'GEOGRAPHY_HIERARCHY', 'HOME_MORTGAGE_DISCLOSURE_ATTRIBUTES', 'INTERNATIONAL_LABOUR_ORGANIZATION_TIMESERIES', 'IRS_MIGRATION_BY_CHARACTERISTIC_TIMESERIES', 'OUR_WORLD_IN_DATA_TIMESERIES', 'FINANCIAL_FRED_VARIABLE_SERIES_ID_CROSSWALK', 'GEOGRAPHY_RELATIONSHIPS', 'NOAA_WEATHER_METRICS_ATTRIBUTES', 'POINT_OF_INTEREST_ADDRESSES_RELATIONSHIPS', 'SEC_REPORT_ATTRIBUTES', 'SEC_REPORT_INDEX', 'STOCK_PRICE_TIMESERIES', 'UNITED_KINGDOM_TIMESERIES', 'FOOD_AGRICULTURE_ORGANIZATION_ATTRIBUTES', 'US_DEPARTMENT_OF_AGRICULTURE_COMMODITIES_ATTRIBUTES', 'US_ECONOMIC_CENSUS_ATTRIBUTES', 'US_ECONOMIC_CENSUS_TIMESERIES', 'US_REAL_ESTATE_TIMESERIES', 'WORLD_BANK_ATTRIBUTES', 'OPENFIGI_SECURITY_INDEX', 'US_DEPARTMENT_OF_TRANSPORTATION_TIMESERIES', 'WORLD_BANK_TIMESERIES', 'BUREAU_OF_LABOR_STATISTICS_EMPLOYMENT_ATTRIBUTES', 'CALENDAR_INDEX', 'FINANCIAL_BRANCH_ENTITIES', 'HOUSING_URBAN_DEVELOPMENT_ATTRIBUTES', 'EIA_ENERGY_TIMESERIES', 'FHFA_MORTGAGE_PERFORMANCE_TIMESERIES', 'FREDDIE_MAC_HOUSING_ATTRIBUTES', 'INTERNATIONAL_TRADE_ADMINISTRATION_BUSINESS_SERVICE_PROVIDERS_INDEX', 'NEWYORKFED_CONSUMER_TIMESERIES', 'OECD_ATTRIBUTES', 'OECD_TIMESERIES', 'FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX', 'US_ADDRESSES', 'US_REAL_ESTATE_ATTRIBUTES', 'GOVERNMENT_CONTRACT_AWARD_INDEX', 'INTERNATIONAL_MONETARY_FUND_TIMESERIES', 'IRS_ORIGIN_DESTINATION_MIGRATION_TIMESERIES', 'AIRCRAFT_CARRIER_INDEX', 'AMERICAN_COMMUNITY_SURVEY_TIMESERIES', 'CANADA_STATCAN_ATTRIBUTES', 'COMPANY_INDEX', 'FDIC_SUMMARY_OF_DEPOSITS_ATTRIBUTES', 'FEDERAL_RESERVE_TIMESERIES', 'FEMA_MISSION_ASSIGNMENT_INDEX', 'FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_POLICY_INDEX', 'FINANCIAL_INSTITUTION_ENTITIES', 'FINANCIAL_INSTITUTION_TIMESERIES', 'FREDDIE_MAC_HOUSING_TIMESERIES', 'CYBERSYN_FINANCIAL_ECONOMIC_INDICATORS_TIMESERIES', 'FINANCIAL_FRED_TIMESERIES', 'HOUSING_URBAN_DEVELOPMENT_TIMESERIES', 'INTERNATIONAL_MONETARY_FUND_ATTRIBUTES', 'INTERNATIONAL_TRADE_ADMINISTRATION_TRADE_EVENTS_INDEX', 'IRS_MIGRATION_BY_CHARACTERISTIC_ATTRIBUTES', 'NEWYORKFED_CONSUMER_ATTRIBUTES', 'OUR_WORLD_IN_DATA_ATTRIBUTES', 'WORLD_TRADE_ORGANIZATION_TIMESERIES', 'FDIC_SUMMARY_OF_DEPOSITS_TIMESERIES', 'FHFA_MORTGAGE_PERFORMANCE_ATTRIBUTES', 'FHFA_UNIFORM_APPRAISAL_ATTRIBUTES', 'GEOGRAPHY_INDEX', 'INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_SCREENED_ENTITIES_INDEX', 'FEMA_DISASTER_DECLARATION_AREAS_INDEX', 'FINANCIAL_INSTITUTION_ATTRIBUTES', 'INTERNATIONAL_TRADE_ADMINISTRATION_TRADE_LEADS_INDEX', 'PERMID_SECURITY_INDEX', 'PUBLIC_HOLIDAY_CALENDAR', 'SEC_HOLDING_FILING_INDEX', 'UNITED_NATIONS_INDUSTRIAL_DEVELOPMENT_ORGANIZATION_ATTRIBUTES', 'WORLD_HEALTH_ORGANIZATION_TIMESERIES', 'GOVERNMENT_CONTRACT_INDEX', 'SEC_CIK_INDEX', 'US_TREASURY_ATTRIBUTES', 'UNITED_NATIONS_INDUSTRIAL_DEVELOPMENT_ORGANIZATION_TIMESERIES', 'US_DEPARTMENT_OF_LABOR_UNEMPLOYMENT_INSURANCE_CLAIMS_ATTRIBUTES', 'AMERICAN_COMMUNITY_SURVEY_ATTRIBUTES', 'BUREAU_OF_LABOR_STATISTICS_EMPLOYMENT_TIMESERIES', 'BUREAU_OF_LABOR_STATISTICS_PRICE_ATTRIBUTES', 'BUREAU_OF_LABOR_STATISTICS_PRICE_TIMESERIES', 'CLIMATE_WATCH_ATTRIBUTES', 'CLIMATE_WATCH_TIMESERIES', 'COMPANY_RELATIONSHIPS', 'CYBERSYN_DATA_CATALOG', 'CYBERSYN_FINANCIAL_ECONOMIC_INDICATORS_ATTRIBUTES', 'EUROPEAN_CENTRAL_BANK_TIMESERIES', 'FBI_CRIME_ATTRIBUTES', 'FEMA_REGION_INDEX', 'FINANCIAL_CFPB_COMPLAINT', 'FINANCIAL_INSTITUTION_EVENTS', 'FINANCIAL_INSTITUTION_HIERARCHY', 'FOOD_AGRICULTURE_ORGANIZATION_TIMESERIES', 'GEOGRAPHY_OVERLAPS', 'NOAA_WEATHER_METRICS_TIMESERIES', 'EIA_ENERGY_ATTRIBUTES', 'FHFA_HOUSE_PRICE_TIMESERIES', 'FHFA_UNIFORM_APPRAISAL_TIMESERIES', 'GEOGRAPHY_CHARACTERISTICS', 'INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_ASSISTANCE_CENTERS_INDEX', 'IRS_INDIVIDUAL_INCOME_ATTRIBUTES', 'NOAA_WEATHER_STATION_INDEX', 'SEC_FISCAL_CALENDARS', 'SEC_HOLDING_FILING_ATTRIBUTES', 'US_DEPARTMENT_OF_AGRICULTURE_COMMODITIES_TIMESERIES', 'US_DEPARTMENT_OF_TRANSPORTATION_ATTRIBUTES', 'FX_RATES_TIMESERIES', 'SEC_REPORT_TEXT_ATTRIBUTES', 'US_TREASURY_TIMESERIES', 'WORLD_HEALTH_ORGANIZATION_ATTRIBUTES', 'POINT_OF_INTEREST_INDEX', 'UNITED_KINGDOM_ATTRIBUTES', 'WORLD_TRADE_ORGANIZATION_ATTRIBUTES', 'USPS_ADDRESS_CHANGE_ATTRIBUTES', 'USPS_ADDRESS_CHANGE_TIMESERIES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX`

- **Columns:**
  - `"NFIP_COMMUNITY_NAME"`: Used to filter the claims for the NFIP community named 'City Of New York'.
  - `"DATE_OF_LOSS"`: Used to determine the year of loss and to group by each year.
  - `"BUILDING_DAMAGE_AMOUNT"`: Used to get the building damage amounts to sum up for totals.
  - `"CONTENTS_DAMAGE_AMOUNT"`: Used to get the contents damage amounts to sum up for totals.
  
- **Conditions:**
  - Filter where `"NFIP_COMMUNITY_NAME"` = 'City Of New York'.
  - Filter `"DATE_OF_LOSS"` between '2010-01-01' and '2019-12-31'.

**SQL Queries:**

```sql
-- 1. List distinct NFIP community names to verify the exact community name
SELECT DISTINCT "NFIP_COMMUNITY_NAME"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
LIMIT 100;

-- 2. Retrieve sample data of claims for 'City Of New York' with damage amounts
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100;

-- 3. Get the years present in the data for 'City Of New York'
SELECT DISTINCT YEAR("DATE_OF_LOSS") AS "Year"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
ORDER BY "Year"
LIMIT 100;

-- 4. Count the number of claims per year for 'City Of New York' between 2010 and 2019
SELECT YEAR("DATE_OF_LOSS") AS "Year", COUNT(*) AS "Claim_Count"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;

-- 5. Sum building damage amounts per year for 'City Of New York' (without computing the final totals)
SELECT YEAR("DATE_OF_LOSS") AS "Year", SUM("BUILDING_DAMAGE_AMOUNT") AS "Total_Building_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;

-- 6. Sum contents damage amounts per year for 'City Of New York'
SELECT YEAR("DATE_OF_LOSS") AS "Year", SUM("CONTENTS_DAMAGE_AMOUNT") AS "Total_Contents_Damage"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;

-- 7. Retrieve claims with non-null building damage amounts for 'City Of New York'
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "BUILDING_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;

-- 8. Retrieve claims with non-null contents damage amounts for 'City Of New York'
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;

-- 9. List the causes of damage for claims in 'City Of New York'
SELECT DISTINCT "CAUSE_OF_DAMAGE"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100;

-- 10. Retrieve claim IDs and damage amounts for 'City Of New York' for verification
SELECT "NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_ID", "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
LIMIT 100;

-- 11. Retrieve claims with building damage amount greater than a certain value for 'City Of New York'
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "BUILDING_DAMAGE_AMOUNT" > 100000
LIMIT 100;

-- 12. Retrieve latitude and longitude for mapping claims in 'City Of New York'
SELECT "LATITUDE", "LONGITUDE", "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
LIMIT 100;

-- 13. Get the flood types associated with claims in 'City Of New York'
SELECT DISTINCT "FLOOD_TYPE"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100;

-- 14. Retrieve claims grouped by flood event in 'City Of New York'
SELECT "FLOOD_EVENT", COUNT(*) AS "Number_of_Claims"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
GROUP BY "FLOOD_EVENT"
ORDER BY "Number_of_Claims" DESC
LIMIT 100;

-- 15. Retrieve all damage amounts for 'City Of New York' between 2010 and 2019
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT", "NET_BUILDING_PAYMENT_AMOUNT", "NET_CONTENTS_PAYMENT_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
LIMIT 100;
```Query:
-- 1. List distinct NFIP community names to verify the exact community name
SELECT DISTINCT "NFIP_COMMUNITY_NAME"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
LIMIT 100
Answer:
NFIP_COMMUNITY_NAME
Horry County
Town Of Woodloch
City Of Indian Rocks Beach
Avoyelles Parish
Town Of Iowa
York County
Village Of Freeport
Brunswick County
Town Of Stony Point
City Of Key West
Clark County
City Of North Wildwood
Town Of Carolina Beach
Toombs County
City Of Sea Isle City
City Of New Smyrna Beach
City Of Hialeah
City Of Palacios
Sussex County
City Of Richwood
Ripley County
Territory Of The Virgin Islands
Town Of Brattleboro
Calcasieu Parish
City Of Oakbrook Terrace
City Of Weslaco
Town Of Hamburg
Tarrant County
Borough Of Glen Rock
Tattnall County
Borough Of Indiana
Borough Of Kittanning
Kankakee County
Borough Of Sea Bright
Guadalupe County
City Of Bucyrus
Howard County
City Of Portsmouth
Iberia Parish
City Of Germantown
Town Of Blooming Grove
Buchanan County
City Of Raymondville
Village Of Westhampton Beach
Township Of Lyndhurst
Summit County
City Of Denison
City Of Independence
Town Of Ridgeland
Village Of Chatham
City Of Callaway
Village Of La Rue
City Of Boston
Village Of Lake George
Township Of Benton
Accomack County
Township Of Braintrim
City Of Mankato
Carter County
City Of Elroy
Village Of Massapequa Park
City Of Fairfield
City Of Plantation
City Of Clayton
Town Of Fishkill
Borough Of Lake Como
Town Of Winthrop
City Of Prairie View
Village Of New York Mills
Township Of Alexandria
Borough Of Upland
City Of Georgetown
Village Of Saukville
Borough Of Oakmont
Long County
City Of Webster
City Of Canyonville
Town Of Newburgh
City Of Minden
City Of North Bay Village
Town Of Raymond
Village Of The Branch
Town Of Yucca Valley
Village Of Hutsonville
Randolph County
City Of Sedalia
City Of Ventnor City
City Of Safety Harbor
Town Of Coeymans
Manatee County
City Of Vidor
Lewis County
Township Of James
City Of Sulphur
City Of Deltona
Camden County
Village Of North Utica
Township Of Upper Merion
City Of Bessemer
Town Of Delaware
Query:
-- 2. Retrieve sample data of claims for 'City Of New York' with damage amounts
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Answer:
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT,CONTENTS_DAMAGE_AMOUNT
2012-10-29,56148.0,
2012-10-30,83568.0,
2021-09-02,,
2012-10-30,51256.0,3137.0
2012-10-29,157756.0,
2012-10-29,74921.0,
2012-10-29,12927.0,
2012-10-29,287703.0,
2012-10-29,14774.0,
2012-10-29,34980.0,
2010-03-30,10397.0,
2012-10-30,10999.0,2402.0
2016-07-26,3497.0,
2023-09-29,41430.0,0.0
2012-10-30,53830.0,
2012-10-29,41050.0,3036.0
2012-10-30,54254.0,
2011-08-28,28231.0,1554.0
2012-10-29,9091.0,
2024-01-13,16519.0,1324.0
2012-10-29,134782.0,9921.0
2021-09-01,4136.0,0.0
2012-10-29,31489.0,21382.0
2012-10-29,45291.0,
2012-10-29,46021.0,
2021-09-01,46533.0,1897.0
2012-10-29,49695.0,
2021-09-01,,
2012-10-29,46911.0,10544.0
2012-10-29,63805.0,16029.0
2021-09-01,18807.0,0.0
2012-10-29,,
2022-12-23,0.0,0.0
2021-09-01,53920.0,3182.0
2012-10-29,70379.0,7538.0
2012-10-29,9090.0,
2012-10-31,9320.0,
2012-10-29,53223.0,
2011-08-28,3420.0,
2012-10-29,115918.0,
2012-10-29,33236.0,
2012-10-30,45997.0,
2012-10-29,29899.0,
2016-05-03,,
2012-10-30,35190.0,
2011-08-28,9508.0,
2022-07-18,36252.0,2749.0
2012-10-29,26406.0,
2010-03-13,4542.0,
2022-12-26,11424.0,
2021-09-01,7701.0,36.0
2021-09-02,60992.0,0.0
2012-10-29,284507.0,102393.0
2012-10-30,,
2012-10-29,22577.0,
2023-04-30,4254.0,0.0
2012-10-29,62031.0,7614.0
2012-10-29,56051.0,8815.0
2012-10-29,136689.0,
2012-10-29,32365.0,
2012-10-28,12721.0,
2011-08-28,17318.0,
2012-10-29,51161.0,
2022-12-23,21591.0,
2016-07-25,3427.0,
2012-10-29,12733.0,1159.0
2010-03-31,2064.0,
2012-10-29,22046.0,
2012-10-29,161285.0,
2012-10-29,81631.0,
2022-12-23,35728.0,8387.0
2014-05-08,5611.0,
2012-10-30,78966.0,
2012-10-29,36836.0,
2021-09-02,0.0,0.0
2012-10-30,,6550.0
2023-10-06,,
2021-09-01,45459.0,
2012-10-29,31555.0,
2012-10-29,46099.0,50000.0
2012-10-29,30670.0,11359.0
2012-10-29,24928.0,
2012-10-30,29721.0,
2012-10-30,159667.0,
2012-10-29,16256.0,6000.0
2012-10-29,131979.0,
2012-10-30,33051.0,5645.0
2012-10-30,30640.0,
2021-09-02,2883.0,0.0
2021-09-01,17629.0,
2012-10-28,103349.0,
2011-08-28,8474.0,
2012-10-30,32621.0,
2023-09-29,34444.0,
2012-10-29,56872.0,
2012-10-30,28769.0,14067.0
2024-08-06,13463.0,0.0
2012-10-29,55050.0,
2022-12-23,30733.0,35052.0
2012-10-30,95393.0,37403.0
Query:
-- 3. Get the years present in the data for 'City Of New York'
SELECT DISTINCT YEAR("DATE_OF_LOSS") AS "Year"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
ORDER BY "Year"
LIMIT 100
Answer:
Year
1988
1989
1991
1992
1993
1994
1996
1997
1999
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
2022
2023
2024
Query:
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York"
Answer:
001003 (42000): 01ba4bd0-0004-91d9-0001-11c3010c209a: SQL compilation error:
syntax error line 1 at position 0 unexpected 'WHERE'.Query:
SELECT "DATE_OF_LOSS", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "CONTENTS_DAMAGE_AMOUNT" IS NOT NULL
LIMIT 100;
Answer:
DATE_OF_LOSS,CONTENTS_DAMAGE_AMOUNT
2012-10-29,14996.0
2021-09-01,0.0
2023-09-29,70509.0
2023-09-29,1200.0
2023-09-29,0.0
1992-12-11,1530.0
2012-10-29,3820.0
2012-10-29,11620.0
2012-10-30,36163.0
2012-10-30,15007.0
2022-12-22,0.0
2012-10-29,10544.0
2012-10-29,16029.0
2021-09-01,0.0
2022-12-23,0.0
2021-09-01,3182.0
2012-10-29,7538.0
2012-10-29,1159.0
2022-12-23,8387.0
2021-09-02,0.0
2012-10-30,49133.0
2012-10-30,21329.0
2012-10-29,18946.0
2021-09-01,0.0
2022-01-23,0.0
2021-09-01,0.0
2021-09-01,0.0
2012-10-29,23699.0
2021-09-01,0.0
2012-10-29,11000.0
2012-10-29,10107.0
2021-09-02,218.0
2012-10-30,48200.0
2012-10-29,8259.0
2012-10-29,322.0
2012-10-29,8783.0
2021-09-01,734.0
2022-12-23,0.0
2022-12-23,13154.0
2012-10-28,1238.0
2012-10-29,22067.0
2021-08-22,1388.0
2021-09-01,637.0
2022-12-23,931.0
2012-10-29,1497.0
2012-10-29,1435.0
2021-09-01,1739.0
2012-10-29,2997.0
2012-10-29,15639.0
2022-12-23,3853.0
2012-10-29,12309.0
2021-09-01,1865.0
2012-10-30,11406.0
2024-01-11,0.0
2012-10-29,21745.0
2021-09-01,1313.0
2012-10-30,6588.0
2022-12-23,0.0
2012-10-29,11787.0
2012-10-29,95301.0
2012-10-29,9918.0
2021-09-01,0.0
2021-09-01,0.0
2012-10-29,17246.0
2012-10-29,39577.0
2012-10-31,31954.0
2012-10-29,43106.0
2023-09-29,0.0
2012-10-29,1294.0
2021-09-01,721.0
2012-10-29,14416.0
2012-10-29,1195.0
2012-10-30,1833.0
2021-09-01,3604.0
2012-10-29,4121.0
2012-10-29,17721.0
2021-08-21,15599.0
2021-09-01,0.0
2021-09-01,0.0
2023-12-18,0.0
2023-04-30,0.0
2012-10-29,7162.0
2022-12-23,25453.0
2012-10-30,14112.0
2021-08-23,0.0
2012-10-30,40092.0
2023-09-29,0.0
2021-09-02,7144.0
2012-10-29,9563.0
2012-10-29,21899.0
2012-10-30,21086.0
2012-10-29,2991.0
2022-12-23,1791.0
2012-10-30,12600.0
2021-09-01,2587.0
2011-08-28,5237.0
2012-10-29,27810.0
2021-09-01,0.0
2012-10-29,6388.0
2012-10-29,1325.0
Query:
-- 9. List the causes of damage for claims in 'City Of New York'
SELECT DISTINCT "CAUSE_OF_DAMAGE"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Answer:
CAUSE_OF_DAMAGE
""
Other causes
Tidal water overflow
Erosion-demolition
Alluvial fan overflow
Expedited claim handling process follow-up site inspection
Accumulation of rainfall or snowmelt
"Stream, river, or lake overflow"
Erosion-removal
Query:
-- 10. Retrieve claim IDs and damage amounts for 'City Of New York' for verification
SELECT "NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_ID", "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Answer:
Too long, hard cut:
NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_ID,DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT,CONTENTS_DAMAGE_AMOUNT
8aa68fb5-3af7-46e7-909c-46bc7c87aee5,2012-10-29,34625.0,14996.0
8616287f-7432-4ec6-bcf4-9af9c3be5047,2021-09-01,21913.0,0.0
96e28220-e249-4b08-ab9c-2c72ad8b2cd3,2023-09-29,,70509.0
7de96317-8463-4ee0-a566-19328cdafb56,2011-08-28,2574.0,
b237cac7-1255-4477-a4da-f78c63e4758f,2023-09-29,25486.0,1200.0
40468e02-04f1-46dd-bee8-b6a1f87e3bae,2023-09-29,11182.0,
fede74bb-c28d-40d6-93a7-de9b8eeecee9,2012-10-29,44795.0,
83e98f6e-ad52-41c3-968e-5f2150bb25d2,2023-09-29,17023.0,0.0
e369a862-5307-4e5a-bb8b-af58c3e99433,1992-12-11,,1530.0
62923adb-e2b0-47b5-a37a-df6b57c0d6cd,2021-09-01,,
c11a0214-d780-4d46-8ded-91fc556461bc,2012-10-29,28765.0,
d0f20e95-ef39-451e-b8c5-aedfbc78deb3,2012-10-30,30011.0,
efab097c-31ca-4acf-bcf4-54a490fc7ea9,2012-10-29,42711.0,3820.0
176d9e40-51dd-4955-9c25-cc598a35d4cb,2012-10-29,52773.0,11620.0
6753dedc-f6c9-402d-9fc0-e6c577c5366c,2012-11-07,,
ad0ff777-f81a-40d5-a341-1db8c872f8cd,2011-08-28,5031.0,
95179131-55b1-4df6-abf1-490e364d6abc,2012-10-30,109885.0,36163.0
09cad34e-2878-4163-b640-5c23dba59b47,2012-10-29,98586.0,
bcd24534-49ff-4ab8-987d-baa9f258566d,2011-08-27,1167.0,
59656d12-2e59-40b8-89f2-409e7e30c671,2012-10-30,66357.0,15007.0
aacdaad5-858a-4adf-aad8-f16e924b9198,2022-12-22,25118.0,0.0
c521fba8-e52f-4176-89a8-fb3b7d2b0ebc,2012-10-29,36069.0,
21ceacbd-09fe-45a6-b6cc-41253b83c0b6,1992-12-11,,
9ad98555-6e87-49db-800b-1f71fd8a9f9a,2012-10-30,33512.0,
3a1c3832-8682-459d-9b64-094a618bc80f,2023-09-26,,
20359f63-84fb-48d9-9217-2a0f2970b8d7,2011-08-28,5717.0,
eda24380-81e5-450f-9451-eca8ebf062c5,2012-10-29,75308.0,
01ed4c63-0166-49a7-9cb6-1de015cec913,2012-10-29,12503.0,
24b53c3c-a6fd-4f5c-b4a7-f965add4dfb5,2012-10-30,36304.0,
ada9be64-84b4-40cc-9bbf-4a1cd962a081,2012-10-29,16931.0,4000.0
88385961-0dff-4db3-b3e2-f20f1b8fe7ae,2012-10-29,107268.0,
74e0b0c4-8720-4df3-ba10-e3edb5489085,2021-09-01,10358.0,
1f307f3c-67ff-4b2d-a5fe-5d62392f6aee,2012-10-29,76920.0,24187.0
5e18068f-0e3c-4737-a6e1-6670bdc02224,2023-09-29,10279.0,2503.0
1475c1b8-fbc3-4f0e-997b-66c8afea5f2d,2021-09-01,1964.0,0.0
a2699d0e-48c1-46f1-9ec1-915894a84494,2012-10-30,39191.0,1439.0
ddc365da-0bd8-47aa-80ba-1a93bf6d182b,2012-10-29,23152.0,4862.0
38e5b8db-8ca1-4560-b4d7-a6a6e658fea3,2012-10-29,12345.0,
267da2e0-ca2c-458b-8144-dcbc0f507ae1,2012-10-29,52781.0,
773d58ba-a4fc-4891-8a3a-1023b9e3c5e5,2012-10-29,19437.0,
eb0ccb2f-2b82-4a11-8ba5-96bc39c501b0,2012-10-29,33941.0,8500.0
a8412c93-1d93-4fb2-a0a2-f59dc77333dc,2012-10-29,106269.0,43966.0
87f7187d-79b8-44ee-af36-99feeb85c3bf,2021-09-01,7757.0,1878.0
e0d39284-e906-4c19-b694-d450bee16856,2012-10-29,1915.0,
364423f3-e3bf-4598-82cf-f00d1f12f836,2015-02-26,,
59c7c2d2-8256-40b0-a44e-b66af8e170e1,2012-10-29,37803.0,
4fa1d91c-bfce-45ce-bec6-84df383c7b82,2021-09-01,16089.0,2020.0
73720f81-10bb-4f01-9b01-5a7115079bf8,2011-08-28,6809.0,
e199e9b9-1c61-4950-8064-6088b611c8aa,2017-05-04,3331.0,
01344d8c-bbaf-4d8c-aa87-1dd759a50a7e,2012-10-29,38468.0,9868.0
7842aa05-b385-46ba-906e-2198a282865b,2021-09-01,5237.0,0.0
fab0403a-4a06-4e79-8cf6-b11c833b3311,2011-08-28,50367.0,
be3da9f4-4f54-4acd-b62f-fd5ddc12dae5,2012-10-29,1592.0,
f3d348c7-c651-4716-a000-7e0a8f6b8a86,2012-10-29,42501.0,14191.0
2f74cd75-086f-4b7b-88e0-48258b63263e,2021-09-02,22809.0,1343.0
10b37b59-5917-4f91-acd1-9839280543c8,2021-09-02,94971.0,51527.0
f3f86a64-cadc-4b35-b2ea-22c8d8a34e23,2012-10-30,36085.0,1604.0
e8c259c3-a0e2-4e70-8b31-7d266d088bff,2012-10-29,32979.0,
7a8b4d80-e877-48c2-8fdd-e9cb24201670,2012-10-29,140702.0,18653.0
0e42815f-6ade-4a63-ab9f-9a498a359314,2012-10-29,20489.0,13543.0
9cc35b62-1f4a-42a9-9ea4-f64b030dc0cb,2023-07-02,645.0,0.0
08183080-4bb0-4f15-bf85-5c8ed8044031,2012-10-29,123179.0,
e9673a1f-401b-4795-af7b-ed8d3b712f84,2012-10-29,50599.0,
0c9c5fb2-c7bc-4f8e-b250-6208eae32b8f,2012-10-29,140460.0,
1dde9549-48ec-4bed-a5c7-cdfaa84c42e1,1992-12-11,,
0c936ba3-1f50-499c-be22-e229a3e66b00,2012-10-30,43866.0,
8339bc6a-3e97-4fbf-aa27-a57ced0f69fe,2021-09-01,19904.0,5291.0
2512a642-3af0-42ef-bc78-81acc8b3f15c,2012-10-30,165405.0,
b390cc0e-ca68-4f29-87c4-d9e8f790569b,2012-10-30,18300.0,1723.0
257c8f43-dce3-4fdf-a092-7007e365b610,2012-10-29,30200.0,
cf45b4ad-1367-4472-9a07-f0a34a465529,2011-08-27,7154.0,
0f774819-c5dc-49cc-969d-1a3de3541589,2012-10-29,63431.0,
e5c08023-1f44-44d0-bfa4-2258ceb6ad68,2012-10-29,154700.0,
9714b88d-936b-4a2d-b99c-808b573152ce,2012-10-30,27979.0,
ddbeb6cd-29f9-4e04-8e99-20752b1adba3,2012-10-29,25648.0,10859.0
646140ff-7ccf-409b-8f71-0deae4a018ed,2012-10-29,70350.0,40658.0
7535ca58-96ef-422d-9fbf-0010c35d8b92,2012-10-30,32678.0,4933.0
80c86379-ac1f-4717-b85f-c36a8121c00e,2021-09-07,15682.0,0.0
af165836-4629-4129-a560-7bf89cffcc3e,2022-12-23,8825.0,0.0
e2604c33-b87b-4aed-b074-eba889000be6,2012-10-29,59949.0,24640.0
398a68d2-a085-48e6-80b3-6fa69634bea7,2012-10-29,34882.0,15058.0
6167dc12-727d-44da-9987-c81b3c3a6aea,2012-10-29,31730.0,
8ef2862b-2a37-4aa6-9c31-92cd09b104e3,2012-10-29,112612.0,
d191a
Query:
-- 11. Retrieve claims with building damage amount greater than a certain value for 'City Of New York'
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "BUILDING_DAMAGE_AMOUNT" > 100000
LIMIT 100
Answer:
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT
2012-10-29,205938.0
2012-10-29,189286.0
2012-10-29,220560.0
2012-10-30,140550.0
2012-10-29,252001.0
2012-10-29,229107.0
2012-10-29,111292.0
2012-10-29,100710.0
2012-10-29,102584.0
2012-10-29,203186.0
2012-10-28,3349434.0
2012-10-29,107868.0
2012-10-29,132165.0
2012-10-29,102930.0
2012-10-29,126224.0
2012-10-29,109179.0
2012-10-29,148071.0
2012-10-29,225118.0
2012-10-29,158035.0
2012-10-29,101000.0
2012-10-29,194881.0
2012-10-29,171702.0
2012-10-29,283552.0
2012-10-29,262790.0
2012-10-29,145758.0
2012-10-30,105384.0
2012-10-29,143649.0
2012-10-29,118741.0
2012-10-29,106111.0
2012-10-29,101954.0
2012-10-29,108127.0
2012-10-29,111073.0
2012-10-29,105300.0
2012-10-29,107830.0
2012-10-29,157756.0
2012-10-29,287703.0
2012-10-29,117498.0
2012-10-29,112691.0
2012-10-29,117629.0
2012-10-29,115227.0
2012-10-29,130251.0
2012-10-29,369586.0
2012-10-29,314208.0
2012-10-29,104137.0
2012-10-29,107130.0
2012-10-29,6178677.0
2012-10-29,115918.0
2012-10-29,284507.0
2012-10-29,136689.0
2014-04-30,129953.0
2012-10-30,148270.0
2012-10-29,389029.0
2012-10-29,118764.0
2012-10-29,116241.0
2012-10-29,134782.0
2012-10-30,156050.0
2012-10-30,196055.0
2012-10-29,108661.0
2012-10-30,188908.0
2012-11-05,120498.0
2012-10-30,101093.0
2012-10-30,109916.0
2012-10-29,152445.0
2012-10-29,114200.0
2012-10-29,234010.0
2012-10-29,538938.0
2012-10-29,132834.0
2012-10-29,105383.0
2012-10-29,145885.0
2021-09-01,257674.0
2012-10-29,631357.0
2012-10-29,125449.0
2012-10-30,122661.0
2021-09-01,102690.0
2012-10-29,121733.0
2012-10-29,1180256.0
2021-09-01,479739.0
2012-10-29,181231.0
2012-10-29,302505.0
2012-10-29,138224.0
2012-10-29,179761.0
2021-09-01,176542.0
2012-10-30,107776.0
2021-09-01,126530.0
2012-10-29,159061.0
2012-10-29,131919.0
2023-09-29,116657.0
2012-10-29,217831.0
2021-09-01,101548.0
2012-10-29,164420.0
2021-09-02,103252.0
2012-10-30,103360.0
2012-10-29,125423.0
2012-10-29,263687.0
2012-10-30,102900.0
2012-10-29,109800.0
2012-10-29,162157.0
2012-10-30,122217.0
2012-10-29,110488.0
2012-10-29,293008.0
Query:
-- 12. Retrieve latitude and longitude for mapping claims in 'City Of New York'
SELECT "LATITUDE", "LONGITUDE", "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Answer:
LATITUDE,LONGITUDE,DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT
40.6,-73.9,2012-10-29,34625.0
40.6,-74.1,2021-09-01,21913.0
,,2023-09-29,
40.6,-73.9,2011-08-28,2574.0
40.8,-73.9,2023-09-29,25486.0
40.6,-73.9,2023-09-29,11182.0
40.6,-73.9,2012-10-29,44795.0
40.6,-73.9,2023-09-29,17023.0
40.6,-73.9,1992-12-11,
40.6,-73.9,2021-09-01,
40.5,-74.1,2012-10-29,28765.0
40.6,-74.1,2012-10-30,30011.0
40.6,-73.9,2012-10-29,42711.0
40.6,-73.9,2012-10-29,52773.0
40.6,-74.1,2012-11-07,
40.6,-74.1,2011-08-28,5031.0
40.6,-73.8,2012-10-30,109885.0
40.6,-73.8,2012-10-29,98586.0
40.7,-73.8,2011-08-27,1167.0
40.6,-73.9,2012-10-30,66357.0
40.6,-73.8,2022-12-22,25118.0
40.6,-74.0,2012-10-29,36069.0
40.6,-73.9,1992-12-11,
40.6,-74.0,2012-10-30,33512.0
40.6,-74.0,2023-09-26,
40.7,-73.8,2011-08-28,5717.0
40.6,-74.1,2012-10-29,75308.0
40.6,-73.8,2012-10-29,12503.0
40.6,-74.1,2012-10-30,36304.0
40.6,-73.9,2012-10-29,16931.0
40.6,-73.9,2012-10-29,107268.0
40.9,-73.8,2021-09-01,10358.0
40.6,-74.1,2012-10-29,76920.0
40.6,-73.9,2023-09-29,10279.0
40.6,-74.1,2021-09-01,1964.0
40.6,-73.8,2012-10-30,39191.0
40.6,-73.8,2012-10-29,23152.0
40.6,-73.8,2012-10-29,12345.0
40.6,-74.1,2012-10-29,52781.0
40.6,-74.1,2012-10-29,19437.0
40.6,-73.7,2012-10-29,33941.0
40.6,-73.9,2012-10-29,106269.0
40.6,-73.9,2012-10-29,34387.0
40.6,-74.0,2012-10-30,34289.0
40.6,-73.9,2012-10-29,88439.0
40.6,-73.8,2012-10-29,30207.0
40.6,-74.1,2012-10-29,8809.0
40.7,-74.0,2022-10-02,
40.6,-73.8,2012-10-30,23800.0
40.6,-73.8,1992-12-11,8783.0
40.6,-73.7,2012-10-29,74279.0
40.7,-73.8,2022-12-23,12660.0
40.6,-74.1,2012-10-30,110059.0
40.6,-73.8,2023-09-29,6021.0
40.6,-74.1,2012-10-30,51119.0
40.8,-73.9,2012-10-29,15531.0
40.6,-73.9,2012-10-29,23731.0
40.6,-73.9,2012-10-29,103707.0
40.9,-73.8,2012-10-29,12697.0
40.6,-74.0,2012-10-29,24615.0
40.6,-73.9,2012-10-29,103729.0
40.6,-73.9,2012-10-29,152713.0
40.7,-74.0,2023-09-29,3799.0
40.6,-74.1,2012-10-30,35331.0
40.6,-74.1,2012-10-29,8060.0
40.6,-73.8,2018-10-27,9823.0
40.6,-73.9,2012-10-29,77557.0
40.6,-73.9,2011-08-28,15304.0
40.6,-74.1,2012-12-27,4109.0
40.6,-74.0,2012-10-29,30853.0
40.6,-73.9,2012-10-29,354000.0
40.6,-73.9,2012-10-29,43399.0
40.8,-73.8,2020-06-06,5335.0
40.6,-74.1,2012-10-29,95685.0
40.6,-74.0,2012-10-29,48005.0
40.6,-73.8,2012-10-29,34637.0
40.6,-73.8,2011-08-27,6091.0
40.7,-73.9,2021-08-23,12650.0
40.6,-74.1,2021-09-01,5975.0
40.6,-73.9,2012-10-29,28782.0
40.6,-73.9,2021-09-01,0.0
40.6,-73.9,2012-10-29,75923.0
40.7,-73.8,2023-09-29,0.0
40.7,-73.8,2014-04-30,
40.6,-73.9,2012-10-29,15563.0
40.6,-74.1,2011-08-28,2214.0
40.7,-73.9,2014-05-01,4913.0
40.6,-73.8,2012-10-30,31017.0
40.6,-73.8,2023-09-30,3666.0
40.6,-73.8,2012-10-29,81522.0
40.6,-74.1,2012-10-29,49459.0
40.6,-73.9,2012-10-29,68711.0
40.7,-73.8,2008-06-14,10758.0
40.6,-73.8,2012-10-30,165469.0
40.7,-73.7,2023-07-18,0.0
40.6,-73.9,2011-08-28,6793.0
40.5,-74.2,2012-10-29,72890.0
40.8,-73.8,2021-09-02,6917.0
40.6,-73.8,2017-05-13,
40.6,-74.0,2012-10-29,519027.0
Query:
-- 13. Get the flood types associated with claims in 'City Of New York'
SELECT DISTINCT "FLOOD_TYPE"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
LIMIT 100
Answer:
FLOOD_TYPE
""
Low-Velocity Flow or Ponding
Query:
-- 14. Retrieve claims grouped by flood event in 'City Of New York'
SELECT "FLOOD_EVENT", COUNT(*) AS "Number_of_Claims"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
GROUP BY "FLOOD_EVENT"
ORDER BY "Number_of_Claims" DESC
LIMIT 100
Answer:
FLOOD_EVENT,Number_of_Claims
Hurricane Sandy,7354
,1542
Hurricane Ida,1116
Hurricane Irene,916
Late-September New York Flooding,451
Nor'easter,170
December Storm - Nor'easter,150
Late summer storms,127
Mid-spring storms,79
Tropical Storm Henri,69
Torrential rain,59
Flooding,17
Tropical Storm Lee,12
"The ""Halloween"" Storm",8
Blizzard of 1993,5
December Nor'easter,4
Hurricane Floyd,2
Tropical Storm Fred,1
Vermont/New York Flooding,1
Hurricane Debby,1
Query:
-- 15. Retrieve all damage amounts for 'City Of New York' between 2010 and 2019
SELECT "DATE_OF_LOSS", "BUILDING_DAMAGE_AMOUNT", "CONTENTS_DAMAGE_AMOUNT", "NET_BUILDING_PAYMENT_AMOUNT", "NET_CONTENTS_PAYMENT_AMOUNT"
FROM WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE "NFIP_COMMUNITY_NAME" = 'City Of New York'
  AND "DATE_OF_LOSS" BETWEEN '2010-01-01' AND '2019-12-31'
LIMIT 100
Answer:
DATE_OF_LOSS,BUILDING_DAMAGE_AMOUNT,CONTENTS_DAMAGE_AMOUNT,NET_BUILDING_PAYMENT_AMOUNT,NET_CONTENTS_PAYMENT_AMOUNT
2012-10-29,34625.0,14996.0,33624.37,13995.03
2011-08-28,2574.0,,1672.55,0.0
2012-10-29,44795.0,,47896.5,0.0
2012-10-29,28765.0,,32005.65,0.0
2012-10-30,30011.0,,30488.89,0.0
2012-10-29,42711.0,3820.0,44237.32,2820.0
2012-10-29,52773.0,11620.0,51772.82,10619.22
2012-11-07,,,0.0,0.0
2011-08-28,5031.0,,471.55,0.0
2012-10-30,109885.0,36163.0,119974.73,35162.53
2012-10-29,98586.0,,97585.71,0.0
2011-08-27,1167.0,,0.0,0.0
2012-10-30,66357.0,15007.0,85348.43,14006.06
2012-10-29,36069.0,,40057.31,0.0
2012-10-30,33512.0,,33920.51,0.0
2011-08-28,5717.0,,3716.31,0.0
2012-10-29,75308.0,,95811.7,0.0
2012-10-29,12503.0,,11502.39,0.0
2012-10-30,36304.0,,34303.37,0.0
2012-10-29,16931.0,4000.0,15931.08,3000.0
2012-10-29,107268.0,,102268.99,0.0
2012-10-29,76920.0,24187.0,77447.97,19186.75
2012-10-30,39191.0,1439.0,44318.02,438.65
2012-10-29,23152.0,4862.0,28546.4,3861.04
2012-10-29,12345.0,,11345.58,0.0
2012-10-29,52781.0,,52780.22,0.0
2012-10-29,19437.0,,19548.02,0.0
2012-10-29,33941.0,8500.0,32474.95,3499.95
2012-10-29,106269.0,43966.0,105269.14,42966.64
2012-10-29,29236.0,14471.0,39277.58,13471.34
2018-01-09,,,0.0,0.0
2012-10-30,65343.0,,64342.52,0.0
2012-10-29,35718.0,,30718.09,0.0
2012-10-30,16958.0,1105.0,15958.57,105.27
2012-10-29,66512.0,,61511.09,0.0
2011-08-27,12831.0,,11403.19,0.0
2012-10-29,,,0.0,0.0
2011-08-28,8508.0,1756.0,3507.71,755.93
2012-10-29,53772.0,1340.0,52771.48,339.75
2012-10-29,5572.0,,4571.33,0.0
2012-10-29,81341.0,,79340.89,0.0
2012-10-29,43554.0,,42750.88,0.0
2012-10-30,45618.0,,47310.21,0.0
2012-10-30,81982.0,,80982.42,0.0
2012-10-29,177848.0,0.0,175848.71,0.0
2012-10-29,235692.0,86525.0,250000.0,85525.05
2013-03-14,,,0.0,0.0
2012-10-29,,,0.0,0.0
2012-10-29,86921.0,20770.0,93080.7,19769.89
2012-10-29,17216.0,,19656.51,0.0
2012-10-29,58288.0,,53288.21,0.0
2012-10-30,23202.0,1992.0,22201.51,991.29
2012-10-29,96226.0,,91226.31,0.0
2012-10-29,72265.0,29267.0,75275.78,28266.73
2012-10-29,289326.0,45067.0,250000.0,40066.1
2012-10-29,41402.0,8399.0,40401.91,7398.67
2012-10-29,18001.0,970.0,16001.84,0.0
2012-10-29,62519.0,,63821.19,0.0
2012-10-29,24175.0,,20976.28,0.0
2012-10-29,28357.0,0.0,23358.87,0.0
2012-10-29,98669.0,,97668.21,0.0
2012-10-29,74672.0,,84684.14,0.0
2012-10-30,32372.0,,33342.56,0.0
2012-10-29,93521.0,,91520.48,0.0
2012-10-29,83325.0,,89114.24,0.0
2012-10-29,40979.0,,35978.01,0.0
2012-10-30,58298.0,,53297.85,0.0
2012-10-29,8598.0,,12616.08,0.0
2011-08-14,3458.0,,2457.31,0.0
2012-10-29,46160.0,10777.0,46040.92,9776.99
2012-10-29,92702.0,11000.0,91701.91,10000.0
2018-04-16,,,0.0,0.0
2012-10-29,25473.0,,23473.23,0.0
2014-04-30,3482.0,,2622.07,0.0
2012-10-29,42216.0,,41875.02,0.0
2012-10-29,48165.0,,43164.57,0.0
2012-10-30,16997.0,,15996.25,0.0
2012-10-30,8136.0,,6135.53,0.0
2012-10-29,52757.0,,51756.52,0.0
2012-10-29,209413.0,90920.0,250000.0,89920.01
2012-10-29,107001.0,,102000.37,0.0
2011-08-28,7272.0,,6271.79,0.0
2011-08-27,30450.0,,25449.01,0.0
2012-10-29,42301.0,,40300.93,0.0
2012-10-29,68397.0,,68973.12,0.0
2012-10-30,25232.0,,31645.06,0.0
2012-10-30,120333.0,,186575.71,0.0
2012-10-30,31706.0,,28547.65,0.0
2011-08-27,6333.0,,5343.24,0.0
2012-10-29,91301.0,42559.0,89300.75,40558.21
2012-10-29,93424.0,14435.0,116539.77,10500.0
2014-04-30,11657.0,,10656.98,0.0
2012-10-29,142475.0,,154627.23,0.0
2012-10-29,39515.0,4045.0,38514.25,3044.84
2012-10-29,34131.0,,33130.24,0.0
2012-10-30,1669415.0,,500000.0,0.0
2012-10-29,60308.0,,59307.71,0.0
2012-10-29,32823.0,,31822.53,0.0
2012-10-29,84914.0,17103.0,91341.42,16102.24
2012-10-30,21721.0,,24083.6,0.0
End Exploring Related Columns
Task: For each year from 2010 through 2019, what were the total building damage amounts and total contents damage amounts reported under the National Flood Insurance Program for the NFIP community named 'City Of New York,' grouped by each year of loss?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Total_Building_Damage_Amount,Total_Contents_Damage_Amount
2010,total_building_damage_2010:float,total_contents_damage_2010:float
2011,total_building_damage_2011:float,total_contents_damage_2011:float
2012,total_building_damage_2012:float,total_contents_damage_2012:float
2013,total_building_damage_2013:float,total_contents_damage_2013:float
2014,total_building_damage_2014:float,total_contents_damage_2014:float
2015,total_building_damage_2015:float,total_contents_damage_2015:float
2016,total_building_damage_2016:float,total_contents_damage_2016:float
2017,total_building_damage_2017:float,total_contents_damage_2017:float
2018,total_building_damage_2018:float,total_contents_damage_2018:float
2019,total_building_damage_2019:float,total_contents_damage_2019:float
```

The table above presents the total building damage amounts and total contents damage amounts reported under the National Flood Insurance Program for the NFIP community named 'City Of New York,' grouped by each year of loss from 2010 through 2019. Each year's totals are calculated by summing the `BUILDING_DAMAGE_AMOUNT` and `CONTENTS_DAMAGE_AMOUNT` for all claims in the `FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX` table where the `NFIP_COMMUNITY_NAME` is 'City Of New York' and the `DATE_OF_LOSS` falls within the respective year..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'WEATHER__ENVIRONMENT': {'CYBERSYN': ['AIRCRAFT_INDEX', 'AIRPORT_INDEX', 'BANK_FOR_INTERNATIONAL_SETTLEMENTS_ATTRIBUTES', 'CANADA_STATCAN_TIMESERIES', 'COMPANY_CHARACTERISTICS', 'COMPANY_SECURITY_RELATIONSHIPS', 'DATACOMMONS_ATTRIBUTES', 'EUROPEAN_CENTRAL_BANK_ATTRIBUTES', 'FBI_CRIME_TIMESERIES', 'FEDERAL_RESERVE_ATTRIBUTES', 'FEMA_DISASTER_DECLARATION_INDEX', 'INTERNATIONAL_LABOUR_ORGANIZATION_ATTRIBUTES', 'IRS_INDIVIDUAL_INCOME_TIMESERIES', 'EUROPEAN_COMMISSION_EDGAR_TIMESERIES', 'US_DEPARTMENT_OF_LABOR_UNEMPLOYMENT_INSURANCE_CLAIMS_TIMESERIES', 'BANK_FOR_INTERNATIONAL_SETTLEMENTS_TIMESERIES', 'DATACOMMONS_TIMESERIES', 'EUROPEAN_COMMISSION_EDGAR_ATTRIBUTES', 'FDIC_BRANCH_LOCATIONS_INDEX', 'FHFA_HOUSE_PRICE_ATTRIBUTES', 'FINANCIAL_FRED_ATTRIBUTES', 'GEOGRAPHY_HIERARCHY', 'HOME_MORTGAGE_DISCLOSURE_ATTRIBUTES', 'INTERNATIONAL_LABOUR_ORGANIZATION_TIMESERIES', 'IRS_MIGRATION_BY_CHARACTERISTIC_TIMESERIES', 'OUR_WORLD_IN_DATA_TIMESERIES', 'FINANCIAL_FRED_VARIABLE_SERIES_ID_CROSSWALK', 'GEOGRAPHY_RELATIONSHIPS', 'NOAA_WEATHER_METRICS_ATTRIBUTES', 'POINT_OF_INTEREST_ADDRESSES_RELATIONSHIPS', 'SEC_REPORT_ATTRIBUTES', 'SEC_REPORT_INDEX', 'STOCK_PRICE_TIMESERIES', 'UNITED_KINGDOM_TIMESERIES', 'FOOD_AGRICULTURE_ORGANIZATION_ATTRIBUTES', 'US_DEPARTMENT_OF_AGRICULTURE_COMMODITIES_ATTRIBUTES', 'US_ECONOMIC_CENSUS_ATTRIBUTES', 'US_ECONOMIC_CENSUS_TIMESERIES', 'US_REAL_ESTATE_TIMESERIES', 'WORLD_BANK_ATTRIBUTES', 'OPENFIGI_SECURITY_INDEX', 'US_DEPARTMENT_OF_TRANSPORTATION_TIMESERIES', 'WORLD_BANK_TIMESERIES', 'BUREAU_OF_LABOR_STATISTICS_EMPLOYMENT_ATTRIBUTES', 'CALENDAR_INDEX', 'FINANCIAL_BRANCH_ENTITIES', 'HOUSING_URBAN_DEVELOPMENT_ATTRIBUTES', 'EIA_ENERGY_TIMESERIES', 'FHFA_MORTGAGE_PERFORMANCE_TIMESERIES', 'FREDDIE_MAC_HOUSING_ATTRIBUTES', 'INTERNATIONAL_TRADE_ADMINISTRATION_BUSINESS_SERVICE_PROVIDERS_INDEX', 'NEWYORKFED_CONSUMER_TIMESERIES', 'OECD_ATTRIBUTES', 'OECD_TIMESERIES', 'FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX', 'US_ADDRESSES', 'US_REAL_ESTATE_ATTRIBUTES', 'GOVERNMENT_CONTRACT_AWARD_INDEX', 'INTERNATIONAL_MONETARY_FUND_TIMESERIES', 'IRS_ORIGIN_DESTINATION_MIGRATION_TIMESERIES', 'AIRCRAFT_CARRIER_INDEX', 'AMERICAN_COMMUNITY_SURVEY_TIMESERIES', 'CANADA_STATCAN_ATTRIBUTES', 'COMPANY_INDEX', 'FDIC_SUMMARY_OF_DEPOSITS_ATTRIBUTES', 'FEDERAL_RESERVE_TIMESERIES', 'FEMA_MISSION_ASSIGNMENT_INDEX', 'FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_POLICY_INDEX', 'FINANCIAL_INSTITUTION_ENTITIES', 'FINANCIAL_INSTITUTION_TIMESERIES', 'FREDDIE_MAC_HOUSING_TIMESERIES', 'CYBERSYN_FINANCIAL_ECONOMIC_INDICATORS_TIMESERIES', 'FINANCIAL_FRED_TIMESERIES', 'HOUSING_URBAN_DEVELOPMENT_TIMESERIES', 'INTERNATIONAL_MONETARY_FUND_ATTRIBUTES', 'INTERNATIONAL_TRADE_ADMINISTRATION_TRADE_EVENTS_INDEX', 'IRS_MIGRATION_BY_CHARACTERISTIC_ATTRIBUTES', 'NEWYORKFED_CONSUMER_ATTRIBUTES', 'OUR_WORLD_IN_DATA_ATTRIBUTES', 'WORLD_TRADE_ORGANIZATION_TIMESERIES', 'FDIC_SUMMARY_OF_DEPOSITS_TIMESERIES', 'FHFA_MORTGAGE_PERFORMANCE_ATTRIBUTES', 'FHFA_UNIFORM_APPRAISAL_ATTRIBUTES', 'GEOGRAPHY_INDEX', 'INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_SCREENED_ENTITIES_INDEX', 'FEMA_DISASTER_DECLARATION_AREAS_INDEX', 'FINANCIAL_INSTITUTION_ATTRIBUTES', 'INTERNATIONAL_TRADE_ADMINISTRATION_TRADE_LEADS_INDEX', 'PERMID_SECURITY_INDEX', 'PUBLIC_HOLIDAY_CALENDAR', 'SEC_HOLDING_FILING_INDEX', 'UNITED_NATIONS_INDUSTRIAL_DEVELOPMENT_ORGANIZATION_ATTRIBUTES', 'WORLD_HEALTH_ORGANIZATION_TIMESERIES', 'GOVERNMENT_CONTRACT_INDEX', 'SEC_CIK_INDEX', 'US_TREASURY_ATTRIBUTES', 'UNITED_NATIONS_INDUSTRIAL_DEVELOPMENT_ORGANIZATION_TIMESERIES', 'US_DEPARTMENT_OF_LABOR_UNEMPLOYMENT_INSURANCE_CLAIMS_ATTRIBUTES', 'AMERICAN_COMMUNITY_SURVEY_ATTRIBUTES', 'BUREAU_OF_LABOR_STATISTICS_EMPLOYMENT_TIMESERIES', 'BUREAU_OF_LABOR_STATISTICS_PRICE_ATTRIBUTES', 'BUREAU_OF_LABOR_STATISTICS_PRICE_TIMESERIES', 'CLIMATE_WATCH_ATTRIBUTES', 'CLIMATE_WATCH_TIMESERIES', 'COMPANY_RELATIONSHIPS', 'CYBERSYN_DATA_CATALOG', 'CYBERSYN_FINANCIAL_ECONOMIC_INDICATORS_ATTRIBUTES', 'EUROPEAN_CENTRAL_BANK_TIMESERIES', 'FBI_CRIME_ATTRIBUTES', 'FEMA_REGION_INDEX', 'FINANCIAL_CFPB_COMPLAINT', 'FINANCIAL_INSTITUTION_EVENTS', 'FINANCIAL_INSTITUTION_HIERARCHY', 'FOOD_AGRICULTURE_ORGANIZATION_TIMESERIES', 'GEOGRAPHY_OVERLAPS', 'NOAA_WEATHER_METRICS_TIMESERIES', 'EIA_ENERGY_ATTRIBUTES', 'FHFA_HOUSE_PRICE_TIMESERIES', 'FHFA_UNIFORM_APPRAISAL_TIMESERIES', 'GEOGRAPHY_CHARACTERISTICS', 'INTERNATIONAL_TRADE_ADMINISTRATION_EXPORT_ASSISTANCE_CENTERS_INDEX', 'IRS_INDIVIDUAL_INCOME_ATTRIBUTES', 'NOAA_WEATHER_STATION_INDEX', 'SEC_FISCAL_CALENDARS', 'SEC_HOLDING_FILING_ATTRIBUTES', 'US_DEPARTMENT_OF_AGRICULTURE_COMMODITIES_TIMESERIES', 'US_DEPARTMENT_OF_TRANSPORTATION_ATTRIBUTES', 'FX_RATES_TIMESERIES', 'SEC_REPORT_TEXT_ATTRIBUTES', 'US_TREASURY_TIMESERIES', 'WORLD_HEALTH_ORGANIZATION_ATTRIBUTES', 'POINT_OF_INTEREST_INDEX', 'UNITED_KINGDOM_ATTRIBUTES', 'WORLD_TRADE_ORGANIZATION_ATTRIBUTES', 'USPS_ADDRESS_CHANGE_ATTRIBUTES', 'USPS_ADDRESS_CHANGE_TIMESERIES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-10 09:25:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:25:18 - root - INFO - ```sql
SELECT 
    YEAR("DATE_OF_LOSS") AS "Year", 
    SUM("BUILDING_DAMAGE_AMOUNT") AS "Total_Building_Damage_Amount", 
    SUM("CONTENTS_DAMAGE_AMOUNT") AS "Total_Contents_Damage_Amount"
FROM 
    WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE 
    "NFIP_COMMUNITY_NAME" = 'City Of New York'
    AND YEAR("DATE_OF_LOSS") BETWEEN 2010 AND 2019
GROUP BY 
    "Year"
ORDER BY 
    "Year";
```
2025-02-10 09:25:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:25:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:25:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:25:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-02-10 09:25:19 - snowflake.connector.connection - INFO - closed
2025-02-10 09:25:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:25:19 - root - INFO - itercount: 1
2025-02-10 09:25:19 - root - INFO - 0
2025-02-10 09:25:19 - root - INFO - results: 
Year,Total_Building_Damage_Amount,Total_Contents_Damage_Amount
2010,855612.0,37645.0
2011,10806293.0,573783.0
2012,492830349.0,57180644.0
2013,61004.0,172.0
2014,1335256.0,78545.0
2015,54399.0,681.0
2016,244045.0,12759.0
2017,208828.0,72746.0
2018,1593268.0,98348.0
2019,395322.0,198045.0


2025-02-10 09:25:19 - root - INFO - Please check the answer again by reviewing For each year from 2010 through 2019, what were the total building damage amounts and total contents damage amounts reported under the National Flood Insurance Program for the NFIP community named 'City Of New York,' grouped by each year of loss?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Total_Building_Damage_Amount,Total_Contents_Damage_Amount
2010,total_building_damage_2010:float,total_contents_damage_2010:float
2011,total_building_damage_2011:float,total_contents_damage_2011:float
2012,total_building_damage_2012:float,total_contents_damage_2012:float
2013,total_building_damage_2013:float,total_contents_damage_2013:float
2014,total_building_damage_2014:float,total_contents_damage_2014:float
2015,total_building_damage_2015:float,total_contents_damage_2015:float
2016,total_building_damage_2016:float,total_contents_damage_2016:float
2017,total_building_damage_2017:float,total_contents_damage_2017:float
2018,total_building_damage_2018:float,total_contents_damage_2018:float
2019,total_building_damage_2019:float,total_contents_damage_2019:float
```

The table above presents the total building damage amounts and total contents damage amounts reported under the National Flood Insurance Program for the NFIP community named 'City Of New York,' grouped by each year of loss from 2010 through 2019. Each year's totals are calculated by summing the `BUILDING_DAMAGE_AMOUNT` and `CONTENTS_DAMAGE_AMOUNT` for all claims in the `FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX` table where the `NFIP_COMMUNITY_NAME` is 'City Of New York' and the `DATE_OF_LOSS` falls within the respective year. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Total_Building_Damage_Amount,Total_Contents_Damage_Amount
2010,855612.0,37645.0
2011,10806293.0,573783.0
2012,492830349.0,57180644.0
2013,61004.0,172.0
2014,1335256.0,78545.0
2015,54399.0,681.0
2016,244045.0,12759.0
2017,208828.0,72746.0
2018,1593268.0,98348.0
2019,395322.0,198045.0
Current sql:
SELECT 
    YEAR("DATE_OF_LOSS") AS "Year", 
    SUM("BUILDING_DAMAGE_AMOUNT") AS "Total_Building_Damage_Amount", 
    SUM("CONTENTS_DAMAGE_AMOUNT") AS "Total_Contents_Damage_Amount"
FROM 
    WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE 
    "NFIP_COMMUNITY_NAME" = 'City Of New York'
    AND YEAR("DATE_OF_LOSS") BETWEEN 2010 AND 2019
GROUP BY 
    "Year"
ORDER BY 
    "Year";
2025-02-10 09:25:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 09:25:58 - root - INFO - ```sql
SELECT 
    YEAR("DATE_OF_LOSS") AS "Year", 
    ROUND(SUM("BUILDING_DAMAGE_AMOUNT"), 4) AS "Total_Building_Damage_Amount", 
    ROUND(SUM("CONTENTS_DAMAGE_AMOUNT"), 4) AS "Total_Contents_Damage_Amount"
FROM 
    WEATHER__ENVIRONMENT.CYBERSYN.FEMA_NATIONAL_FLOOD_INSURANCE_PROGRAM_CLAIM_INDEX
WHERE 
    "NFIP_COMMUNITY_NAME" = 'City Of New York'
    AND YEAR("DATE_OF_LOSS") BETWEEN 2010 AND 2019
GROUP BY 
    "Year"
ORDER BY 
    "Year";
```
2025-02-10 09:25:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 09:25:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 09:25:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 09:26:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-02-10 09:26:00 - snowflake.connector.connection - INFO - closed
2025-02-10 09:26:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 09:26:00 - root - INFO - itercount: 2
2025-02-10 09:26:00 - root - INFO - 0
2025-02-10 09:26:00 - root - INFO - Total iteration counts: 2
