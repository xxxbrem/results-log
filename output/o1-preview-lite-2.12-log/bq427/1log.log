2025-02-10 17:10:22 - openai._base_client - INFO - Retrying request to /chat/completions in 0.435679 seconds
2025-02-10 17:11:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:12:00 - root - INFO - SQL:
SELECT DISTINCT shot_type
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
   LIMIT 100;
Results:
shot_type
layup
jump shot
hook shot
tip shot
dunk

2025-02-10 17:12:01 - root - INFO - SQL:
SELECT
     shot_type,
     event_coord_x,
     event_coord_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
   LIMIT 100;
Results:
shot_type,event_coord_x,event_coord_y
layup,88.0,255.0
layup,99.0,255.0
layup,71.0,327.0
jump shot,240.0,177.0
jump shot,237.0,336.0
jump shot,208.0,231.0
jump shot,339.0,356.0
jump shot,119.0,219.0
hook shot,134.0,214.0
jump shot,153.0,286.0
jump shot,184.0,423.0
jump shot,359.0,236.0
jump shot,65.0,41.0
jump shot,251.0,85.0
layup,87.0,248.0
layup,134.0,263.0
jump shot,212.0,221.0
jump shot,141.0,272.0
tip shot,88.0,266.0
tip shot,99.0,301.0
hook shot,140.0,304.0
jump shot,130.0,92.0
jump shot,273.0,324.0
layup,92.0,248.0
layup,89.0,329.0
layup,91.0,246.0
layup,72.0,328.0
dunk,85.0,300.0
jump shot,336.0,328.0
jump shot,181.0,533.0
layup,1037.0,332.0
layup,1050.0,334.0
jump shot,962.0,39.0
jump shot,790.0,368.0
jump shot,935.0,132.0
jump shot,1076.0,557.0
jump shot,848.0,109.0
jump shot,813.0,400.0
jump shot,1083.0,46.0
jump shot,808.0,403.0
jump shot,773.0,336.0
layup,1010.0,301.0
jump shot,1027.0,346.0
jump shot,808.0,341.0
jump shot,841.0,130.0
layup,1020.0,358.0
layup,1054.0,339.0
layup,1027.0,303.0
layup,1009.0,331.0
layup,1024.0,262.0
jump shot,975.0,253.0
layup,1048.0,338.0
layup,1048.0,328.0
jump shot,1013.0,459.0
jump shot,1055.0,417.0
dunk,1045.0,301.0
dunk,1052.0,312.0
jump shot,838.0,125.0
jump shot,838.0,133.0
jump shot,880.0,489.0
jump shot,1090.0,29.0
jump shot,1081.0,37.0
jump shot,88.0,239.0
layup,101.0,291.0
jump shot,311.0,441.0
jump shot,596.0,96.0
jump shot,75.0,32.0
jump shot,357.0,279.0
jump shot,118.0,562.0

2025-02-10 17:12:03 - root - INFO - SQL:
SELECT DISTINCT team_basket
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE team_basket IS NOT NULL
   LIMIT 100;
Results:
team_basket
left
right

2025-02-10 17:12:04 - root - INFO - SQL:
SELECT
     shot_type,
     COUNT(*) AS num_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
   GROUP BY shot_type
   LIMIT 100;
Results:
shot_type,num_shots
layup,337805
jump shot,680076
hook shot,11015
tip shot,6117
dunk,41997

2025-02-10 17:12:05 - root - INFO - SQL:
SELECT
     scheduled_date,
     shot_type,
     event_coord_x,
     event_coord_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND scheduled_date < '2018-03-15'
   LIMIT 100;
Results:
scheduled_date,shot_type,event_coord_x,event_coord_y
2015-11-15 00:30:00+00:00,layup,1010.0,238.0
2015-11-15 00:30:00+00:00,layup,1028.0,215.0
2015-11-15 00:30:00+00:00,layup,85.0,298.0
2015-11-15 00:30:00+00:00,jump shot,846.0,94.0
2015-11-15 00:30:00+00:00,layup,102.0,294.0
2017-12-09 21:00:00+00:00,jump shot,305.0,184.0
2017-12-09 21:00:00+00:00,layup,106.0,264.0
2018-02-14 01:00:00+00:00,jump shot,799.0,397.0
2018-02-14 01:00:00+00:00,jump shot,53.0,562.0
2018-02-14 01:00:00+00:00,jump shot,964.0,269.0
2018-02-14 01:00:00+00:00,jump shot,144.0,256.0
2018-02-14 01:00:00+00:00,layup,1033.0,300.0
2018-02-14 01:00:00+00:00,layup,1002.0,290.0
2018-02-14 01:00:00+00:00,layup,85.0,320.0
2018-02-14 01:00:00+00:00,jump shot,1009.0,281.0
2015-11-25 02:00:00+00:00,jump shot,237.0,500.0
2015-11-25 02:00:00+00:00,jump shot,347.0,352.0
2015-11-25 02:00:00+00:00,jump shot,95.0,344.0
2015-11-25 02:00:00+00:00,layup,1054.0,331.0
2015-11-25 02:00:00+00:00,jump shot,343.0,298.0
2015-11-25 02:00:00+00:00,layup,103.0,283.0
2015-11-25 02:00:00+00:00,layup,1026.0,312.0
2015-11-25 02:00:00+00:00,layup,1047.0,276.0
2015-11-25 02:00:00+00:00,jump shot,904.0,298.0
2015-11-25 02:00:00+00:00,jump shot,832.0,144.0
2015-11-25 02:00:00+00:00,jump shot,815.0,399.0
2015-11-25 02:00:00+00:00,layup,1048.0,266.0
2015-12-23 01:00:00+00:00,layup,1020.0,249.0
2015-12-23 01:00:00+00:00,layup,1034.0,280.0
2015-12-23 01:00:00+00:00,jump shot,1009.0,288.0
2015-12-23 01:00:00+00:00,jump shot,170.0,159.0
2015-12-23 01:00:00+00:00,jump shot,256.0,190.0

2025-02-10 17:12:07 - root - INFO - SQL:
SELECT
     shot_type,
     shot_made,
     COUNT(*) AS num_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND shot_made IS NOT NULL
   GROUP BY shot_type, shot_made
   LIMIT 100;
Results:
shot_type,shot_made,num_shots
layup,False,152338
jump shot,False,442006
hook shot,False,5750
jump shot,True,238070
tip shot,True,3745
hook shot,True,5265
layup,True,185467
dunk,True,37191
dunk,False,4806
tip shot,False,2372

2025-02-10 17:12:08 - root - INFO - SQL:
SELECT
     shot_type,
     event_coord_x,
     event_coord_y,
     team_basket,
     CASE
       WHEN event_coord_x < 564 THEN event_coord_x
       ELSE 1128 - event_coord_x
     END AS adjusted_x,
     CASE
       WHEN event_coord_x < 564 THEN 600 - event_coord_y
       ELSE event_coord_y
     END AS adjusted_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
   LIMIT 100;
Results:
shot_type,event_coord_x,event_coord_y,team_basket,adjusted_x,adjusted_y
layup,88.0,255.0,left,88.0,345.0
layup,99.0,255.0,left,99.0,345.0
layup,71.0,327.0,left,71.0,273.0
jump shot,240.0,177.0,left,240.0,423.0
jump shot,237.0,336.0,left,237.0,264.0
jump shot,208.0,231.0,left,208.0,369.0
jump shot,339.0,356.0,left,339.0,244.0
jump shot,119.0,219.0,left,119.0,381.0
hook shot,134.0,214.0,left,134.0,386.0
jump shot,153.0,286.0,left,153.0,314.0
jump shot,184.0,423.0,left,184.0,177.0
jump shot,359.0,236.0,left,359.0,364.0
jump shot,65.0,41.0,left,65.0,559.0
jump shot,251.0,85.0,left,251.0,515.0
layup,87.0,248.0,left,87.0,352.0
layup,134.0,263.0,left,134.0,337.0
jump shot,212.0,221.0,left,212.0,379.0
jump shot,141.0,272.0,left,141.0,328.0
tip shot,88.0,266.0,left,88.0,334.0
tip shot,99.0,301.0,left,99.0,299.0
hook shot,140.0,304.0,left,140.0,296.0
jump shot,130.0,92.0,left,130.0,508.0
jump shot,273.0,324.0,left,273.0,276.0
layup,92.0,248.0,left,92.0,352.0
layup,89.0,329.0,left,89.0,271.0
layup,91.0,246.0,left,91.0,354.0
layup,72.0,328.0,left,72.0,272.0
dunk,85.0,300.0,left,85.0,300.0
jump shot,336.0,328.0,left,336.0,272.0
jump shot,181.0,533.0,left,181.0,67.0
layup,1037.0,332.0,right,91.0,332.0
layup,1050.0,334.0,right,78.0,334.0
jump shot,962.0,39.0,right,166.0,39.0
jump shot,790.0,368.0,right,338.0,368.0
jump shot,935.0,132.0,right,193.0,132.0
jump shot,1076.0,557.0,right,52.0,557.0
jump shot,848.0,109.0,right,280.0,109.0

2025-02-10 17:12:09 - root - INFO - SQL:
SELECT
     shot_type,
     AVG(CASE WHEN event_coord_x < 564 THEN event_coord_x ELSE 1128 - event_coord_x END) AS avg_adjusted_x,
     AVG(CASE WHEN event_coord_x < 564 THEN 600 - event_coord_y ELSE event_coord_y END) AS avg_adjusted_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
     AND scheduled_date < '2018-03-15'
   GROUP BY shot_type
   LIMIT 100;
Results:
shot_type,avg_adjusted_x,avg_adjusted_y
layup,96.37913611987685,302.93106914262165
jump shot,211.34314374632456,297.78175941602535
dunk,90.51952730941055,301.2171542489316
hook shot,124.90573884114225,304.5526291470288
tip shot,93.32401862940787,301.84281437125753

2025-02-10 17:12:10 - root - INFO - SQL:
SELECT
     shot_type,
     COUNT(*) AS total_shots,
     SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) AS successful_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND scheduled_date < '2018-03-15'
   GROUP BY shot_type
   LIMIT 100;
Results:
shot_type,total_shots,successful_shots
layup,335278,184106
jump shot,675099,236368
dunk,41634,36873
hook shot,10821,5184
tip shot,6012,3675

2025-02-10 17:12:12 - root - INFO - SQL:
SELECT
      team_id,
      team_basket,
      event_coord_x,
      event_coord_y,
      CASE
        WHEN (team_basket = 'left' AND event_coord_x < 564)
          OR (team_basket = 'right' AND event_coord_x >= 564) THEN 'Correct Side'
        ELSE 'Wrong Side'
      END AS side_check
    FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
    WHERE shot_type IS NOT NULL
      AND event_coord_x IS NOT NULL
      AND event_coord_y IS NOT NULL
    LIMIT 100;
Results:
team_id,team_basket,event_coord_x,event_coord_y,side_check
fae4855b-1b64-4b40-a632-9ed345e1e952,left,88.0,255.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,99.0,255.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,71.0,327.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,240.0,177.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,237.0,336.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,208.0,231.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,339.0,356.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,119.0,219.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,134.0,214.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,153.0,286.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,184.0,423.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,359.0,236.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,65.0,41.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,251.0,85.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,87.0,248.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,134.0,263.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,212.0,221.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,141.0,272.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,88.0,266.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,99.0,301.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,140.0,304.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,130.0,92.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,273.0,324.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,92.0,248.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,89.0,329.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,91.0,246.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,72.0,328.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,85.0,300.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,336.0,328.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,181.0,533.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,right,1037.0,332.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,right,1050.0,334.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,right,962.0,39.0,Correct Side

2025-02-10 17:12:12 - root - INFO - itercount: 0
2025-02-10 17:12:12 - root - INFO - Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,0
table_name,mbb_teams
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_teams`
(
  market STRING,
  alias STRING,
  name STRING,
  id STRING,
  code_ncaa INT64,
  kaggle_team_id INT64,
  school_ncaa STRING,
  turner_name STRING,
  league_name STRING,
  league_alias STRING,
  league_id STRING,
  conf_name STRING,
  conf_alias STRING,
  conf_id STRING,
  division_name STRING,
  division_alias STRING,
  division_id STRING,
  venue_id STRING,
  venue_city STRING,
  venue_state STRING,
  venue_address STRING,
  venue_zip STRING,
  venue_country STRING,
  venue_name STRING,
  venue_capacity INT64,
  logo_large STRING,
  logo_medium STRING,
  logo_small STRING
)
OPTIONS(
  description=""General information about the 351 current men's D1 basketball teams.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,1
table_name,mbb_teams_games_sr
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_teams_games_sr`
(
  game_id STRING OPTIONS(description=""[Game data] Unique identifier for the game""),
  season INT64 OPTIONS(description=""[Game data] Season the game was played in""),
  status STRING OPTIONS(description=""[Game data] Indicates the last state of Sportradar's game file""),
  coverage STRING OPTIONS(description=""[Game data] Type of coverage provided by Sportradar""),
  neutral_site BOOL OPTIONS(description=""[Game data] Type of coverage provided by Sportradar""),
  scheduled_date DATE OPTIONS(description=""[Game data] Date the game was played""),
  gametime TIMESTAMP OPTIONS(description=""[Game data] Date and time the game was played""),
  conference_game BOOL OPTIONS(description=""[Game data] Indicator of whether the two teams were in the same conference at the time the game was played""),
  tournament STRING OPTIONS(description=""[Game data] Whether the game was played in a post-season tournament""),
  tournament_type STRING OPTIONS(description=""[Game data] Type of post-season tournament a game was in played""),
  tournament_round STRING OPTIONS(description=""[Game data] Tournament round""),
  tournament_game_no STRING OPTIONS(description=""[Game data] Tournament game number""),
  attendance INT64 OPTIONS(description=""[Game data] Attendance of the game""),
  lead_changes INT64 OPTIONS(description=""[Game stats] Number of lead changes in the game""),
  times_tied INT64 OPTIONS(description=""[Game stats] Number of ties in the game""),
  periods INT64 OPTIONS(description=""[Game stats] Number of periods the game""),
  possession_arrow STRING OPTIONS(description=""[Game stats] The unique identifier of the team that would receive the ball the next time a jump ball is called, see https://en.wikipedia.org/wiki/Jump_ball for more information""),
  venue_id STRING OPTIONS(description=""[Game data] Unique identifier for the venue where the game was played""),
  venue_city STRING OPTIONS(description=""[Game data] City where the game was played""),
  venue_state STRING OPTIONS(description=""[Game data] State where the game was played""),
  venue_address STRING OPTIONS(description=""[Game data] Address of the venue where the game was played""),
  venue_zip STRING OPTIONS(description=""[Game data] Address of the venue where the game was played""),
  venue_country STRING OPTIONS(description=""[Game data] Country where the game was played""),
  venue_name STRING OPTIONS(description=""[Game data] Name of the venue where the game was played""),
  venue_capacity INT64 OPTIONS(description=""[Game data] Current capacity of the venue where the game was played""),
  home_team BOOL OPTIONS(description=""[Team data] Team was the home team (Note: this doesn't mean the game was played at home because the game could have been played at a neutral site)""),
  name STRING OPTIONS(description=""[Team data] Team name""),
  market STRING OPTIONS(description=""[Team data] Team school name""),
  team_id STRING OPTIONS(description=""[Team data] Team school ID from SportRadar (unique)""),
  alias STRING OPTIONS(description=""[Team data] Team school alias (unique)""),
  league_id STRING OPTIONS(description=""[Team data] Team school league ID (not unique)""),
  league_name STRING OPTIONS(description=""[Team data] Team school league name (not unique)""),
  league_alias STRING OPTIONS(description=""[Team data] Team school league alias (not unique)""),
  conf_id STRING OPTIONS(description=""[Team data] Team current conference ID (not unique)""),
  conf_name STRING OPTIONS(description=""[Team data] Team current conference name (not unique)""),
  conf_alias STRING OPTIONS(description=""[Team data] Team current conference alias (not unique)""),
  division_id STRING OPTIONS(description=""[Team data] Team current division ID (not unique)""),
  division_name STRING OPTIONS(description=""[Team data] Team current division name (not unique)""),
  division_alias STRING OPTIONS(description=""[Team data] Team current division alias (not unique)""),
  logo_large STRING OPTIONS(description=""[Team data] Team logo 200x200""),
  logo_medium STRING OPTIONS(description=""[Team data] Team logo 70x70""),
  logo_small STRING OPTIONS(description=""[Team data] Team logo 24x24""),
  opp_name STRING OPTIONS(description=""[Opponent data] Opponent name""),
  opp_market STRING OPTIONS(description=""[Opponent data] Opponent school name""),
  opp_id STRING OPTIONS(description=""[Opponent data] Opponent school ID from SportRadar (unique)""),
  opp_alias STRING OPTIONS(description=""[Opponent data] Opponent school alias (unique)""),
  opp_league_id STRING OPTIONS(description=""[Opponent data] Opponent school league ID (not unique)""),
  opp_league_name STRING OPTIONS(description=""[Opponent data] Opponent school league name (not unique)""),
  opp_league_alias STRING OPTIONS(description=""[Opponent data] Opponent school league alias (not unique)""),
  opp_conf_id STRING OPTIONS(description=""[Opponent data] Opponent current conference ID (not unique)""),
  opp_conf_name STRING OPTIONS(description=""[Opponent data] Opponent current conference name (not unique)""),
  opp_conf_alias STRING OPTIONS(description=""[Opponent data] Opponent current conference alias (not unique)""),
  opp_division_id STRING OPTIONS(description=""[Opponent data] Opponent current division ID (not unique)""),
  opp_division_name STRING OPTIONS(description=""[Opponent data] Opponent current division name (not unique)""),
  opp_division_alias STRING OPTIONS(description=""[Opponent data] Opponent current division alias (not unique)""),
  opp_logo_large STRING OPTIONS(description=""[Opponent data] Opponent logo 200x200""),
  opp_logo_medium STRING OPTIONS(description=""[Opponent data] Opponent logo 70x70""),
  opp_logo_small STRING OPTIONS(description=""[Opponent data] Opponent logo 24x24""),
  win BOOL OPTIONS(description=""[Team stats] Win""),
  points_game INT64 OPTIONS(description=""[Team stats] Points scored""),
  minutes STRING OPTIONS(description=""[Team stats] Total minutes played""),
  field_goals_made INT64 OPTIONS(description=""[Team stats] Field goals made""),
  field_goals_att INT64 OPTIONS(description=""[Team stats] Field goals attempted""),
  field_goals_pct FLOAT64 OPTIONS(description=""[Team stats] Field goal percentage""),
  three_points_made INT64 OPTIONS(description=""[Team stats] Three-pointers made""),
  three_points_att INT64 OPTIONS(description=""[Team stats] Three-pointers attempted""),
  three_points_pct FLOAT64 OPTIONS(description=""[Team stats] Three-point shot percentage""),
  two_points_made INT64 OPTIONS(description=""[Team stats] Two-pointers made""),
  two_points_att INT64 OPTIONS(description=""[Team stats] Two-pointers attempted""),
  two_points_pct FLOAT64 OPTIONS(description=""[Team stats] Two-point shot percentage""),
  blocked_att INT64 OPTIONS(description=""[Team stats] Number of the team's shots blocked by the opponent""),
  free_throws_made INT64 OPTIONS(description=""[Team stats] Free throws made""),
  free_throws_att INT64 OPTIONS(description=""[Team stats] Free throws attempted""),
  free_throws_pct FLOAT64 OPTIONS(description=""[Team stats] Free throw percentage""),
  offensive_rebounds INT64 OPTIONS(description=""[Team stats] Offensive rebounds""),
  defensive_rebounds INT64 OPTIONS(description=""[Team stats] Defensive rebounds""),
  rebounds INT64 OPTIONS(description=""[Team stats] Total rebounds""),
  assists INT64 OPTIONS(description=""[Team stats] Assists""),
  turnovers INT64 OPTIONS(description=""[Team stats] Turnovers""),
  steals INT64 OPTIONS(description=""[Team stats] Steals""),
  blocks INT64 OPTIONS(description=""[Team stats] Blocks""),
  assists_turnover_ratio FLOAT64 OPTIONS(description=""[Team stats] Assist-to-turnover ratio""),
  personal_fouls INT64 OPTIONS(description=""[Team stats] Personal fouls committed""),
  ejections INT64 OPTIONS(description=""[Team stats] Player ejections""),
  foulouts INT64 OPTIONS(description=""[Team stats] Player foul-outs""),
  points INT64 OPTIONS(description=""[Team stats] Total points scored""),
  fast_break_pts INT64 OPTIONS(description=""[Team stats] Fast-break points scored""),
  second_chance_pts INT64 OPTIONS(description=""[Team stats] Second-chance points scored""),
  team_turnovers INT64 OPTIONS(description=""[Team stats] Team turnovers""),
  points_off_turnovers INT64 OPTIONS(description=""[Team stats] Points off turnovers""),
  team_rebounds INT64 OPTIONS(description=""[Team stats] Team rebounds""),
  flagrant_fouls INT64 OPTIONS(description=""[Team stats] Flagrant fouls committed""),
  player_tech_fouls INT64 OPTIONS(description=""[Team stats] Technical fouls committed""),
  team_tech_fouls INT64 OPTIONS(description=""[Team stats] Technical fouls committed by team""),
  coach_tech_fouls INT64 OPTIONS(description=""[Team stats] Technical fouls committed by coach""),
  opp_points_game INT64 OPTIONS(description=""[Opponent stats] Points scored""),
  opp_minutes STRING OPTIONS(description=""[Opponent stats] Total minutes played""),
  opp_field_goals_made INT64 OPTIONS(description=""[Opponent stats] Field goals made""),
  opp_field_goals_att INT64 OPTIONS(description=""[Opponent stats] Field goals attempted""),
  opp_field_goals_pct FLOAT64 OPTIONS(description=""[Opponent stats] Field goal percentage""),
  opp_three_points_made INT64 OPTIONS(description=""[Opponent stats] Three-pointers made""),
  opp_three_points_att INT64 OPTIONS(description=""[Opponent stats] Three-pointers attempted""),
  opp_three_points_pct FLOAT64 OPTIONS(description=""[Opponent stats] Three-point shot percentage""),
  opp_two_points_made INT64 OPTIONS(description=""[Opponent stats] Two-pointers made""),
  opp_two_points_att INT64 OPTIONS(description=""[Opponent stats] Two-pointers attempted""),
  opp_two_points_pct FLOAT64 OPTIONS(description=""[Opponent stats] Two-point shot percentage""),
  opp_blocked_att INT64 OPTIONS(description=""[Opponent stats] Number of the opponent's shots blocked by the team""),
  opp_free_throws_made INT64 OPTIONS(description=""[Opponent stats] Free throws made""),
  opp_free_throws_att INT64 OPTIONS(description=""[Opponent stats] Free throws attempted""),
  opp_free_throws_pct FLOAT64 OPTIONS(description=""[Opponent stats] Free throw percentage""),
  opp_offensive_rebounds INT64 OPTIONS(description=""[Opponent stats] Offensive rebounds""),
  opp_defensive_rebounds INT64 OPTIONS(description=""[Opponent stats] Defensive rebounds""),
  opp_rebounds INT64 OPTIONS(description=""[Opponent stats] Total rebounds""),
  opp_assists INT64 OPTIONS(description=""[Opponent stats] Assists""),
  opp_turnovers INT64 OPTIONS(description=""[Opponent stats] Turnovers""),
  opp_steals INT64 OPTIONS(description=""[Opponent stats] Steals""),
  opp_blocks INT64 OPTIONS(description=""[Opponent stats] Blocks""),
  opp_assists_turnover_ratio FLOAT64 OPTIONS(description=""[Opponent stats] Assist-to-turnover ratio""),
  opp_personal_fouls INT64 OPTIONS(description=""[Opponent stats] Personal fouls committed""),
  opp_ejections INT64 OPTIONS(description=""[Opponent stats] Player ejections""),
  opp_foulouts INT64 OPTIONS(description=""[Opponent stats] Player foul-outs""),
  opp_points INT64 OPTIONS(description=""[Opponent stats] Total points scored""),
  opp_fast_break_pts INT64 OPTIONS(description=""[Opponent stats] Fast-break points scored""),
  opp_second_chance_pts INT64 OPTIONS(description=""[Opponent stats] Second-chance points scored""),
  opp_team_turnovers INT64 OPTIONS(description=""[Opponent stats] Opponent turnovers""),
  opp_points_off_turnovers INT64 OPTIONS(description=""[Opponent stats] Points off turnovers""),
  opp_team_rebounds INT64 OPTIONS(description=""[Opponent stats] Opponent rebounds""),
  opp_flagrant_fouls INT64 OPTIONS(description=""[Opponent stats] Flagrant fouls committed""),
  opp_player_tech_fouls INT64 OPTIONS(description=""[Opponent stats] Technical fouls committed""),
  opp_team_tech_fouls INT64 OPTIONS(description=""[Opponent stats] Technical fouls committed by opponent""),
  opp_coach_tech_fouls INT64 OPTIONS(description=""[Opponent stats] Technical fouls committed by coach""),
  created TIMESTAMP OPTIONS(description=""[Table data] Box score data entry time"")
)
OPTIONS(
  description=""Team-level box scores from every men's basketball game from the 2013-14 season to the 2017-18 season. Each row shows a single team's stats in one game. This data is identical to mbb_games_sr, but is organized differently to make it easier to calculate a single team's statistics.\n\nData provided by Sportradar LLC, see www.sportradar.com for more details.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,2
table_name,team_colors
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.team_colors`
(
  market STRING,
  id STRING,
  code_ncaa INT64,
  color STRING
)
OPTIONS(
  description=""Hex color codes for the 351 current men's D1 basketball teams.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,3
table_name,mbb_historical_tournament_games
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_historical_tournament_games`
(
  season INT64 OPTIONS(description=""Year the game was played in. Note that this is different from the \""season\"" values in other tables here, which use academic year.""),
  round INT64 OPTIONS(description=""Tournament round, indicated by the number of teams playing in that round""),
  days_from_epoch INT64 OPTIONS(description=""Days from epoch, as defined in the Kaggle competition (https://www.kaggle.com/c/mens-machine-learning-competition-2018/data)""),
  game_date DATE OPTIONS(description=""Date the game was played""),
  day STRING OPTIONS(description=""Day of the week the game was played""),
  win_seed STRING OPTIONS(description=""Seed of the winning team""),
  win_region STRING OPTIONS(description=""Region of the winning team, as defined in the Kaggle competition (https://www.kaggle.com/c/mens-machine-learning-competition-2018/data)""),
  win_market STRING OPTIONS(description=""School name (using Sportradar names) of the winning team""),
  win_name STRING OPTIONS(description=""Team name of the winning team""),
  win_alias STRING OPTIONS(description=""Team alias of the winning team""),
  win_team_id STRING OPTIONS(description=""Sportradar team ID of the winning team""),
  win_school_ncaa STRING OPTIONS(description=""School name of the winning team (see http://stats.ncaa.org/game_upload/team_codes)""),
  win_code_ncaa INT64 OPTIONS(description=""School code of the winning team (see http://stats.ncaa.org/game_upload/team_codes)""),
  win_kaggle_team_id INT64 OPTIONS(description=""Kaggle team ID of the winning team""),
  win_pts INT64 OPTIONS(description=""Points scored by the winning team""),
  lose_seed STRING OPTIONS(description=""Seed of the losing team""),
  lose_region STRING OPTIONS(description=""Region of the losing team, as defined in the Kaggle competition (https://www.kaggle.com/c/mens-machine-learning-competition-2018/data)""),
  lose_market STRING OPTIONS(description=""School name (using Sportradar names) of the losing team""),
  lose_name STRING OPTIONS(description=""Team name of the losing team""),
  lose_alias STRING OPTIONS(description=""Team alias of the losing team""),
  lose_team_id STRING OPTIONS(description=""Sportradar team ID of the losing team""),
  lose_school_ncaa STRING OPTIONS(description=""School name of the losing team (see http://stats.ncaa.org/game_upload/team_codes)""),
  lose_code_ncaa INT64 OPTIONS(description=""School code of the losing team (see http://stats.ncaa.org/game_upload/team_codes)""),
  lose_kaggle_team_id INT64 OPTIONS(description=""Kaggle team ID of the losing team""),
  lose_pts INT64 OPTIONS(description=""Points scored by the losing team""),
  num_ot INT64 OPTIONS(description=""Number of overtime periods played in the game""),
  academic_year INT64 OPTIONS(description=""The academic year the game was played in"")
)
OPTIONS(
  description=""Game score information from Men's Basketball games, starting with the 1984-85 tournament. Each row shows one game.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,4
table_name,mbb_pbp_sr
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
(
  game_id STRING OPTIONS(description=""Unique identifier for the game""),
  load_timestamp TIMESTAMP OPTIONS(description=""Time at which the data was loaded into the table""),
  season INT64 OPTIONS(description=""Season the game was played in""),
  status STRING OPTIONS(description=""""),
  scheduled_date TIMESTAMP OPTIONS(description=""Date the game was played""),
  venue_id STRING OPTIONS(description=""Unique identifier for the venue where the game was played""),
  venue_name STRING OPTIONS(description=""Name of the venue where the game was played""),
  venue_city STRING OPTIONS(description=""City where the game was played""),
  venue_state STRING OPTIONS(description=""State where the game was played""),
  venue_address STRING OPTIONS(description=""Address of the venue where the game was played""),
  venue_zip STRING OPTIONS(description=""Zip code of the venue where the game was played""),
  venue_country STRING OPTIONS(description=""Country where the game was played""),
  venue_capacity INT64 OPTIONS(description=""Current capacity of the venue where the game was played""),
  attendance INT64 OPTIONS(description=""Attendance of the game""),
  neutral_site BOOL OPTIONS(description=""Boolean value indicating whether the game was played at a neutral site""),
  conference_game BOOL OPTIONS(description=""Boolean value indicating whether the two teams were in the same conference at the time the game was played""),
  tournament STRING OPTIONS(description=""Indicator of what type of tournament (conference or NCAA) a game was played in, if any""),
  tournament_type STRING OPTIONS(description=""Indicator of which conference tournament a game was played in, if any""),
  round STRING OPTIONS(description=""Indicator of which tournament round a game was played in, if any""),
  game_no STRING OPTIONS(description=""Indicator of which tournament game number a game was, if any""),
  away_market STRING OPTIONS(description=""Visiting team school name""),
  away_name STRING OPTIONS(description=""Visiting team name""),
  away_id STRING OPTIONS(description=""Visiting team school ID from SportRadar (unique)\nTo enable screen reader support, press Ctrl+Alt+Z To learn about keyboard shortcuts, press Ctrl+slash""),
  away_alias STRING OPTIONS(description=""Visiting team school alias (unique)""),
  away_conf_name STRING OPTIONS(description=""Visiting team current conference name (not unique)""),
  away_conf_alias STRING OPTIONS(description=""Visiting team current conference alias (not unique)""),
  away_division_name STRING OPTIONS(description=""Visiting team division name (not unique)""),
  away_division_alias STRING OPTIONS(description=""Visiting team division alias (not unique)""),
  away_league_name STRING OPTIONS(description=""Visiting team school league name (not unique)""),
  home_market STRING OPTIONS(description=""Home team school name""),
  home_name STRING OPTIONS(description=""Home team name""),
  home_id STRING OPTIONS(description=""Home team school ID from SportRadar (unique)""),
  home_alias STRING OPTIONS(description=""Home team school alias (unique)""),
  home_conf_name STRING OPTIONS(description=""Home team current conference name (not unique)""),
  home_conf_alias STRING OPTIONS(description=""Home team current conference alias (not unique)""),
  home_division_name STRING OPTIONS(description=""Home team current division name (not unique)""),
  home_division_alias STRING OPTIONS(description=""Home team current division alias (not unique)""),
  home_league_name STRING OPTIONS(description=""Home team school league name (not unique)""),
  period INT64 OPTIONS(description=""This field indicates which period the event occured in. \""1\"" is the first 20-minute half, \""2\"" is the second 20-minute half, \""3\"" is the first OT, \""4\"" is the second OT, etc.""),
  game_clock STRING OPTIONS(description=""Time left in the period in minutes""),
  elapsed_time_sec INT64 OPTIONS(description=""Total time elapsed in the game in seconds""),
  possession_arrow STRING OPTIONS(description=""The unique identifier of the team that will receive the ball the next time a jump ball is called, see https://en.wikipedia.org/wiki/Jump_ball for more information""),
  team_name STRING OPTIONS(description=""Indicator of the school name to which the event was attributed""),
  team_market STRING OPTIONS(description=""Indicator of the team name to which the event was attributed""),
  team_id STRING OPTIONS(description=""Indicator of the team school ID from SportRadar (unique) to which the event was attributed""),
  team_alias STRING OPTIONS(description=""Indicator of the team school alias (unique) to which the event was attributed""),
  team_conf_name STRING OPTIONS(description=""Indicator of the team current conference name (not unique) to which the event was attributed""),
  team_conf_alias STRING OPTIONS(description=""Indicator of the team current conference alias (not unique) to which the event was attributed""),
  team_division_name STRING OPTIONS(description=""Indicator of the team current division name (not unique) to which the event was attributed""),
  team_division_alias STRING OPTIONS(description=""Indicator of the team current division alias (not unique) to which the event was attributed""),
  team_league_name STRING OPTIONS(description=""Indicator of the team school league name (not unique) to which the event was attributed""),
  team_basket STRING OPTIONS(description=""The basket (left or right) that the team to which the event is attributed is attacking""),
  possession_team_id STRING OPTIONS(description=""The id of the team that possessed the ball at the end of the play.""),
  player_id STRING OPTIONS(description=""Unique identifier for the player to whom the event is attributed""),
  player_full_name STRING OPTIONS(description=""Name for the player to whom the event is attributed""),
  jersey_num INT64 OPTIONS(description=""Jersey number for the player to whom the event is attributed""),
  event_id STRING OPTIONS(description=""Unique identifier for the event (\""play\"")""),
  timestamp TIMESTAMP OPTIONS(description=""The time when the event details were last updated""),
  event_description STRING OPTIONS(description=""A description of the event""),
  event_coord_x FLOAT64 OPTIONS(description=""The location of the play in number of inches from the \""left\"" baseline, max 1128""),
  event_coord_y FLOAT64 OPTIONS(description=""The location of the play in inches from the \""top\"" sideline, max 600""),
  event_type STRING OPTIONS(description=""Category of event""),
  type STRING OPTIONS(description=""Event subtype giving additional information about the event""),
  shot_made BOOL OPTIONS(description=""Boolean value indicating whether the event was a shot made""),
  shot_type STRING OPTIONS(description=""There are 5 categories of shot types: jump shot, layup, hook shot, dunk, tip shot""),
  shot_subtype STRING OPTIONS(description=""Additional information about shot type (e.g. fadeaway, floating, pullup, step back, turnaround, alley-oop, driving, finger roll, putback, reverse)""),
  three_point_shot BOOL OPTIONS(description=""Boolean value indicating whether the event was a three-point shot attempt""),
  points_scored FLOAT64 OPTIONS(description=""Number of points scored on the play""),
  turnover_type STRING OPTIONS(description=""Type of turnover""),
  rebound_type STRING OPTIONS(description=""Indicator of whether a rebound was offensive or defensive""),
  timeout_duration FLOAT64 OPTIONS(description=""Duration of timeout"")
)
OPTIONS(
  description=""Play-by-play information from men's basketball games, starting with the 2013-14 season. Each row shows a single event in a game. \n\n\nData provided by Sportradar LLC, see www.sportradar.com for more details.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,5
table_name,mascots
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mascots`
(
  id STRING OPTIONS(description=""University unique ID from Sportradar""),
  market STRING OPTIONS(description=""The university to which the mascot belongs""),
  name STRING OPTIONS(description=""The name of the university’s team""),
  mascot STRING OPTIONS(description=""The name of the university's mascot""),
  mascot_name STRING OPTIONS(description=""The proper name of the university's mascot, if available (e.g. a character)""),
  mascot_common_name STRING OPTIONS(description=""The type of being or creature that the mascot embodies""),
  tax_subspecies STRING OPTIONS(description=""The subspecies to which the mascot belongs""),
  tax_species STRING OPTIONS(description=""The species to which the mascot belongs""),
  tax_genus STRING OPTIONS(description=""The genus to which the mascot belongs""),
  tax_family STRING OPTIONS(description=""The family to which the mascot belongs""),
  tax_order STRING OPTIONS(description=""The order to which the mascot belongs""),
  tax_class STRING OPTIONS(description=""The class to which the mascot belongs""),
  tax_phylum STRING OPTIONS(description=""The phylum to which the mascot belongs""),
  tax_kingdom STRING OPTIONS(description=""The kingdom to which the mascot belongs""),
  tax_domain STRING OPTIONS(description=""The domain to which the mascot belongs""),
  non_tax_type STRING OPTIONS(description=""The non-Linnean type of being or creature to which the mascot belongs, if applicable"")
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,6
table_name,mbb_players_games_sr
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_players_games_sr`
(
  game_id STRING OPTIONS(description=""[Game data] Unique identifier for the game""),
  season INT64 OPTIONS(description=""[Game data] Season the game was played in""),
  neutral_site BOOL OPTIONS(description=""[Game data] Indicator of whether the game was played on a neutral court""),
  scheduled_date DATE OPTIONS(description=""[Game data] Date the game was played""),
  gametime TIMESTAMP OPTIONS(description=""[Game data] Date and time the game was played""),
  tournament STRING OPTIONS(description=""[Game data] Whether the game was played in a post-season tournament""),
  tournament_type STRING OPTIONS(description=""[Game data] Type of post-season tournament a game was in played""),
  tournament_round STRING OPTIONS(description=""[Game data] Tournament round""),
  tournament_game_no STRING OPTIONS(description=""[Game data] Tournament game number""),
  player_id STRING OPTIONS(description=""[Player info] Player Sportradar player ID""),
  last_name STRING OPTIONS(description=""[Player info] Player last name""),
  first_name STRING OPTIONS(description=""[Player info] Player first name""),
  full_name STRING OPTIONS(description=""[Player info] Player full name""),
  abbr_name STRING OPTIONS(description=""[Player info] Player abbreviated name (\""F.Last\"")""),
  status STRING OPTIONS(description=""[Player info] Player status as of 2017-18 season""),
  jersey_number INT64 OPTIONS(description=""[Player info] Player jersey number""),
  height INT64 OPTIONS(description=""[Player info] Player height""),
  weight INT64 OPTIONS(description=""[Player info] Player weight""),
  birth_place STRING OPTIONS(description=""[Player info] Player birth place or home (Note: this information comes from the school's website, via Sportradar. While many of these entries indicate the player's birthplace, some of them may instead indicate the town that the players most identifies with.)""),
  birthplace_city STRING OPTIONS(description=""[Player info] Player's home city (Note: this information comes from the school's website, via Sportradar. While many of these entries indicate the player's birthplace, some of them may instead indicate the town that the players most identifies with.)""),
  birthplace_state STRING OPTIONS(description=""[Player info] Player's home state (Note: this information comes from the school's website, via Sportradar. While many of these entries indicate the player's birthplace, some of them may instead indicate the town that the players most identifies with.)""),
  birthplace_country STRING OPTIONS(description=""[Player info] Player's home country (Note: this information comes from the school's website, via Sportradar. While many of these entries indicate the player's birthplace, some of them may instead indicate the town that the players most identifies with.)""),
  class STRING OPTIONS(description=""[Player info] Player's class at game time (Note: this information comes from the school's website, via Sportradar.)""),
  team_name STRING OPTIONS(description=""[Team info] Team name""),
  team_market STRING OPTIONS(description=""[Team info] Team school name (using Sportradar names)""),
  team_id STRING OPTIONS(description=""[Team info] Sportradar team ID""),
  team_alias STRING OPTIONS(description=""[Team info] Team alias""),
  conf_name STRING OPTIONS(description=""[Team info] Team current conference name""),
  conf_alias STRING OPTIONS(description=""[Team info] Team current conference alias""),
  division_name STRING OPTIONS(description=""[Team info] Team current division name""),
  division_alias STRING OPTIONS(description=""[Team info] Team current division alias""),
  league_name STRING OPTIONS(description=""[Team info] Team current league name""),
  home_team BOOL OPTIONS(description=""[Team info] Indicator of whether the team was the home team""),
  active BOOL OPTIONS(description=""[Player stats] Indicator of whether the player was active for the game""),
  played BOOL OPTIONS(description=""[Player stats] Indicator of whether the player played in the game""),
  starter BOOL OPTIONS(description=""[Player stats] Indicator of whether the player started the game""),
  minutes STRING OPTIONS(description=""[Player stats] Minutes played""),
  minutes_int64 INT64 OPTIONS(description=""[Player stats] Minutes played (as integer)""),
  position STRING OPTIONS(description=""[Player stats] Position""),
  primary_position STRING OPTIONS(description=""[Player stats] Primary position""),
  field_goals_made INT64 OPTIONS(description=""[Player stats] Field goals made""),
  field_goals_att INT64 OPTIONS(description=""[Player stats] Field goals attempted""),
  field_goals_pct FLOAT64 OPTIONS(description=""[Player stats] Field goal percentage""),
  three_points_made INT64 OPTIONS(description=""[Player stats] Three-pointers made""),
  three_points_att INT64 OPTIONS(description=""[Player stats] Three-pointers attempted""),
  three_points_pct FLOAT64 OPTIONS(description=""[Player stats] Three-point shot percentage""),
  two_points_made INT64 OPTIONS(description=""[Player stats] Two-pointers made""),
  two_points_att INT64 OPTIONS(description=""[Player stats] Two-pointers attempted""),
  two_points_pct FLOAT64 OPTIONS(description=""[Player stats] Two-point shot percentage""),
  blocked_att INT64 OPTIONS(description=""[Player stats] Number of shots blocked by the other team""),
  free_throws_made INT64 OPTIONS(description=""[Player stats] Free throws made""),
  free_throws_att INT64 OPTIONS(description=""[Player stats] Free throws attempted""),
  free_throws_pct FLOAT64 OPTIONS(description=""[Player stats] Free throw percentage""),
  offensive_rebounds INT64 OPTIONS(description=""[Player stats] Offensive rebounds""),
  defensive_rebounds INT64 OPTIONS(description=""[Player stats] Defensive rebounds""),
  rebounds INT64 OPTIONS(description=""[Player stats] Total rebounds""),
  assists INT64 OPTIONS(description=""[Player stats] Assists""),
  turnovers INT64 OPTIONS(description=""[Player stats] Turnovers""),
  steals INT64 OPTIONS(description=""[Player stats] Steals""),
  blocks INT64 OPTIONS(description=""[Player stats] Blocks""),
  assists_turnover_ratio FLOAT64 OPTIONS(description=""[Player stats] Assist-to-turnover ratio""),
  personal_fouls INT64 OPTIONS(description=""[Player stats] Personal fouls committed""),
  tech_fouls INT64 OPTIONS(description=""[Player stats] Technical fouls committed""),
  flagrant_fouls INT64 OPTIONS(description=""[Player stats] Flagrant fouls committed""),
  points INT64 OPTIONS(description=""[Player stats] Points scored""),
  sp_created TIMESTAMP OPTIONS(description=""[Table data] Box score data entry time"")
)
OPTIONS(
  description=""Player-level box scores from every men's basketball game from the 2013-14 season to the 2017-18 season. Each row shows a single player's stats in one game.\n\nData provided by Sportradar LLC, see www.sportradar.com for more details.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,7
table_name,mbb_historical_teams_games
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_historical_teams_games`
(
  season INT64 OPTIONS(description=""[Game data] Season the game was played in""),
  scheduled_date STRING OPTIONS(description=""[Game data] Date the game was played""),
  attendance FLOAT64 OPTIONS(description=""[Game data] Attendance of the game""),
  market STRING OPTIONS(description=""[Team data] Team school name (using Sportradar names)""),
  name STRING OPTIONS(description=""[Team data] Team name""),
  team_code STRING OPTIONS(description=""[Team data] School code (see http://stats.ncaa.org/game_upload/team_codes)""),
  team_id STRING OPTIONS(description=""[Team data] Sportradar team ID""),
  alias STRING OPTIONS(description=""[Team data] Team alias""),
  current_division STRING OPTIONS(description=""[Team data] The division the team currently plays in""),
  points_game INT64 OPTIONS(description=""[Game data] Points scored by team""),
  win BOOL OPTIONS(description=""[Game data] Whether the team won the game""),
  opp_market STRING OPTIONS(description=""[Opponent data] Opponent school name (using Sportradar names)""),
  opp_name STRING OPTIONS(description=""[Opponent data] Opponent name""),
  opp_code INT64 OPTIONS(description=""[Opponent data] Opponent school code (see http://stats.ncaa.org/game_upload/team_codes)""),
  opp_id STRING OPTIONS(description=""[Opponent data] Opponent school ID (using Sportradar IDs)""),
  opp_alias STRING OPTIONS(description=""[Opponent data] Opponent alias""),
  opp_current_division STRING OPTIONS(description=""[Opponent data] The division the opponent currently plays in""),
  opp_points_game INT64 OPTIONS(description=""[Opponent data] Points scored by opponent"")
)
OPTIONS(
  description=""Final scores for men's basketball games, starting with the 1996-97 season. Each game is included twice, with one entry per team. \n\nData provided by the NCAA.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,8
table_name,mbb_games_sr
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_games_sr`
(
  game_id STRING OPTIONS(description=""[Game data] Unique identifier for the game""),
  season INT64 OPTIONS(description=""[Game data] Season the game was played in""),
  status STRING OPTIONS(description=""[Game data] Indicates the last state of Sportradar's game file""),
  coverage STRING OPTIONS(description=""[Game data] Type of coverage provided by Sportradar""),
  neutral_site BOOL OPTIONS(description=""[Game data] Indicator of whether the game was played on a neutral court""),
  scheduled_date DATE OPTIONS(description=""[Game data] Date the game was played""),
  gametime TIMESTAMP OPTIONS(description=""[Game data] Date and time the game was played""),
  conference_game BOOL OPTIONS(description=""[Game data] Indicator of whether the two teams were in the same conference at the time the game was played""),
  tournament STRING OPTIONS(description=""[Game data] Whether the game was played in a post-season tournament""),
  tournament_type STRING OPTIONS(description=""[Game data] Type of post-season tournament a game was in played""),
  tournament_round STRING OPTIONS(description=""[Game data] Tournament round""),
  tournament_game_no STRING OPTIONS(description=""[Game data] Tournament game number""),
  attendance INT64 OPTIONS(description=""[Game data] Attendance of the game""),
  lead_changes INT64 OPTIONS(description=""[Game stats] Number of lead changes in the game""),
  times_tied INT64 OPTIONS(description=""[Game stats] Number of ties in the game""),
  periods INT64 OPTIONS(description=""[Game stats] Number of periods the game""),
  possession_arrow STRING OPTIONS(description=""[Game stats] The unique identifier of the team that would receive the ball the next time a jump ball is called, see https://en.wikipedia.org/wiki/Jump_ball for more information""),
  venue_id STRING OPTIONS(description=""[Game data] Unique identifier for the venue where the game was played""),
  venue_city STRING OPTIONS(description=""[Game data] City where the game was played""),
  venue_state STRING OPTIONS(description=""[Game data] State where the game was played""),
  venue_address STRING OPTIONS(description=""[Game data] Address of the venue where the game was played""),
  venue_zip STRING OPTIONS(description=""[Game data] Address of the venue where the game was played""),
  venue_country STRING OPTIONS(description=""[Game data] Country where the game was played""),
  venue_name STRING OPTIONS(description=""[Game data] Name of the venue where the game was played""),
  venue_capacity INT64 OPTIONS(description=""[Game data] Current capacity of the venue where the game was played""),
  h_name STRING OPTIONS(description=""[Home Team data] Home team name""),
  h_market STRING OPTIONS(description=""[Home Team data] Home team school name""),
  h_id STRING OPTIONS(description=""[Home Team data] Home team school ID from SportRadar (unique)""),
  h_alias STRING OPTIONS(description=""[Home Team data] Home team school alias (unique)""),
  h_league_id STRING OPTIONS(description=""[Home Team data] Home team school league ID (not unique)""),
  h_league_name STRING OPTIONS(description=""[Home Team data] Home team school league name (not unique)""),
  h_league_alias STRING OPTIONS(description=""[Home Team data] Home team school league alias (not unique)""),
  h_conf_id STRING OPTIONS(description=""[Home Team data] Home team current conference ID (not unique)""),
  h_conf_name STRING OPTIONS(description=""[Home Team data] Home team current conference name (not unique)""),
  h_conf_alias STRING OPTIONS(description=""[Home Team data] Home team current conference alias (not unique)""),
  h_division_id STRING OPTIONS(description=""[Home Team data] Home team current division ID (not unique)""),
  h_division_name STRING OPTIONS(description=""[Home Team data] Home team current division name (not unique)""),
  h_division_alias STRING OPTIONS(description=""[Home Team data] Home team current division alias (not unique)""),
  h_logo_large STRING OPTIONS(description=""[Home Team data] Home team logo 200x200""),
  h_logo_medium STRING OPTIONS(description=""[Home Team data] Home team logo 70x70""),
  h_logo_small STRING OPTIONS(description=""[Home Team data] Home team logo 24x24""),
  h_points_game INT64 OPTIONS(description=""[Home Team stats] Home points scored""),
  h_rank INT64 OPTIONS(description=""[Home Team stats] Home rank""),
  h_minutes STRING OPTIONS(description=""[Home Team stats] Home total minutes played""),
  h_field_goals_made INT64 OPTIONS(description=""[Home Team stats] Home field goals made""),
  h_field_goals_att INT64 OPTIONS(description=""[Home Team stats] Home field goals attempted""),
  h_field_goals_pct FLOAT64 OPTIONS(description=""[Home Team stats] Home field goal percentage""),
  h_three_points_made INT64 OPTIONS(description=""[Home Team stats] Home three-pointers made""),
  h_three_points_att INT64 OPTIONS(description=""[Home Team stats] Home three-pointers attempted""),
  h_three_points_pct FLOAT64 OPTIONS(description=""[Home Team stats] Home three-point shot percentage""),
  h_two_points_made INT64 OPTIONS(description=""[Home Team stats] Home two-pointers made""),
  h_two_points_att INT64 OPTIONS(description=""[Home Team stats] Home two-pointers attempted""),
  h_two_points_pct FLOAT64 OPTIONS(description=""[Home Team stats] Home two-point shot percentage""),
  h_blocked_att INT64 OPTIONS(description=""[Home Team stats] Number of the home team's shots blocked by the away team""),
  h_free_throws_made INT64 OPTIONS(description=""[Home Team stats] Home free throws made""),
  h_free_throws_att INT64 OPTIONS(description=""[Home Team stats] Home free throws attempted""),
  h_free_throws_pct FLOAT64 OPTIONS(description=""[Home Team stats] Home free throw percentage""),
  h_offensive_rebounds INT64 OPTIONS(description=""[Home Team stats] Home offensive rebounds""),
  h_defensive_rebounds INT64 OPTIONS(description=""[Home Team stats] Home defensive rebounds""),
  h_rebounds INT64 OPTIONS(description=""[Home Team stats] Home total rebounds""),
  h_assists INT64 OPTIONS(description=""[Home Team stats] Home assists""),
  h_turnovers INT64 OPTIONS(description=""[Home Team stats] Home turnovers""),
  h_steals INT64 OPTIONS(description=""[Home Team stats] Home steals""),
  h_blocks INT64 OPTIONS(description=""[Home Team stats] Home blocks""),
  h_assists_turnover_ratio FLOAT64 OPTIONS(description=""[Home Team stats] Home assist-to-turnover ratio""),
  h_personal_fouls INT64 OPTIONS(description=""[Home Team stats] Home personal fouls committed""),
  h_ejections INT64 OPTIONS(description=""[Home Team stats] Home player ejections""),
  h_foulouts INT64 OPTIONS(description=""[Home Team stats] Home player foul-outs""),
  h_points INT64 OPTIONS(description=""[Home Team stats] Home total points scored""),
  h_fast_break_pts INT64 OPTIONS(description=""[Home Team stats] Home fast-break points scored""),
  h_second_chance_pts INT64 OPTIONS(description=""[Home Team stats] Home second-chance points scored""),
  h_team_turnovers INT64 OPTIONS(description=""[Home Team stats] Home team turnovers""),
  h_points_off_turnovers INT64 OPTIONS(description=""[Home Team stats] Home points off turnovers""),
  h_team_rebounds INT64 OPTIONS(description=""[Home Team stats] Home team rebounds""),
  h_flagrant_fouls INT64 OPTIONS(description=""[Home Team stats] Home flagrant fouls committed""),
  h_player_tech_fouls INT64 OPTIONS(description=""[Home Team stats] Home technical fouls committed""),
  h_team_tech_fouls INT64 OPTIONS(description=""[Home Team stats] Home technical fouls committed by team""),
  h_coach_tech_fouls INT64 OPTIONS(description=""[Home Team stats] Home technical fouls committed by coach""),
  a_name STRING OPTIONS(description=""[Away Team data] Away team name""),
  a_market STRING OPTIONS(description=""[Away Team data] Away team school name""),
  a_id STRING OPTIONS(description=""[Away Team data] Away team school ID from SportRadar (unique)""),
  a_alias STRING OPTIONS(description=""[Away Team data] Away team school alias (unique)""),
  a_league_id STRING OPTIONS(description=""[Away Team data] Away team school league ID (not unique)""),
  a_league_name STRING OPTIONS(description=""[Away Team data] Away team school league name (not unique)""),
  a_league_alias STRING OPTIONS(description=""[Away Team data] Away team school league alias (not unique)""),
  a_conf_id STRING OPTIONS(description=""[Away Team data] Away team current conference ID (not unique)""),
  a_conf_name STRING OPTIONS(description=""[Away Team data] Away team current conference name (not unique)""),
  a_conf_alias STRING OPTIONS(description=""[Away Team data] Away team current conference alias (not unique)""),
  a_division_id STRING OPTIONS(description=""[Away Team data] Away team current division ID (not unique)""),
  a_division_name STRING OPTIONS(description=""[Away Team data] Away team current division name (not unique)""),
  a_division_alias STRING OPTIONS(description=""[Away Team data] Away team current division alias (not unique)""),
  a_logo_large STRING OPTIONS(description=""[Away Team data] Away team logo 200x200""),
  a_logo_medium STRING OPTIONS(description=""[Away Team data] Away team logo 70x70""),
  a_logo_small STRING OPTIONS(description=""[Away Team data] Away team logo 24x24""),
  a_points_game INT64 OPTIONS(description=""[Away Team stats] Away points scored""),
  a_rank INT64 OPTIONS(description=""[Away Team stats] Away rank""),
  a_minutes STRING OPTIONS(description=""[Away Team stats] Away total minutes played""),
  a_field_goals_made INT64 OPTIONS(description=""[Away Team stats] Away field goals made""),
  a_field_goals_att INT64 OPTIONS(description=""[Away Team stats] Away field goals attempted""),
  a_field_goals_pct FLOAT64 OPTIONS(description=""[Away Team stats] Away field goal percentage""),
  a_three_points_made INT64 OPTIONS(description=""[Away Team stats] Away three-pointers made""),
  a_three_points_att INT64 OPTIONS(description=""[Away Team stats] Away three-pointers attempted""),
  a_three_points_pct FLOAT64 OPTIONS(description=""[Away Team stats] Away three-point shot percentage""),
  a_two_points_made INT64 OPTIONS(description=""[Away Team stats] Away two-pointers made""),
  a_two_points_att INT64 OPTIONS(description=""[Away Team stats] Away two-pointers attempted""),
  a_two_points_pct FLOAT64 OPTIONS(description=""[Away Team stats] Away two-point shot percentage""),
  a_blocked_att INT64 OPTIONS(description=""[Away Team stats] Number of the away team's shots blocked by the away team""),
  a_free_throws_made INT64 OPTIONS(description=""[Away Team stats] Away free throws made""),
  a_free_throws_att INT64 OPTIONS(description=""[Away Team stats] Away free throws attempted""),
  a_free_throws_pct FLOAT64 OPTIONS(description=""[Away Team stats] Away free throw percentage""),
  a_offensive_rebounds INT64 OPTIONS(description=""[Away Team stats] Away offensive rebounds""),
  a_defensive_rebounds INT64 OPTIONS(description=""[Away Team stats] Away defensive rebounds""),
  a_rebounds INT64 OPTIONS(description=""[Away Team stats] Away total rebounds""),
  a_assists INT64 OPTIONS(description=""[Away Team stats] Away assists""),
  a_turnovers INT64 OPTIONS(description=""[Away Team stats] Away turnovers""),
  a_steals INT64 OPTIONS(description=""[Away Team stats] Away steals""),
  a_blocks INT64 OPTIONS(description=""[Away Team stats] Away blocks""),
  a_assists_turnover_ratio FLOAT64 OPTIONS(description=""[Away Team stats] Away assist-to-turnover ratio""),
  a_personal_fouls INT64 OPTIONS(description=""[Away Team stats] Away personal fouls committed""),
  a_ejections INT64 OPTIONS(description=""[Away Team stats] Away player ejections""),
  a_foulouts INT64 OPTIONS(description=""[Away Team stats] Away player foul-outs""),
  a_points INT64 OPTIONS(description=""[Away Team stats] Away total points scored""),
  a_fast_break_pts INT64 OPTIONS(description=""[Away Team stats] Away fast-break points scored""),
  a_second_chance_pts INT64 OPTIONS(description=""[Away Team stats] Away second-chance points scored""),
  a_team_turnovers INT64 OPTIONS(description=""[Away Team stats] Away team turnovers""),
  a_points_off_turnovers INT64 OPTIONS(description=""[Away Team stats] Away points off turnovers""),
  a_team_rebounds INT64 OPTIONS(description=""[Away Team stats] Away team rebounds""),
  a_flagrant_fouls INT64 OPTIONS(description=""[Away Team stats] Away flagrant fouls committed""),
  a_player_tech_fouls INT64 OPTIONS(description=""[Away Team stats] Away technical fouls committed""),
  a_team_tech_fouls INT64 OPTIONS(description=""[Away Team stats] Away technical fouls committed by team""),
  a_coach_tech_fouls INT64 OPTIONS(description=""[Away Team stats] Away technical fouls committed by coach""),
  created TIMESTAMP OPTIONS(description=""[Table data] Box score data entry time"")
)
OPTIONS(
  description=""Team-level box scores from every men's basketball game from the 2013-14 season to the 2017-18 season. Each row shows both teams' stats for that one game.\n\nData provided by Sportradar LLC, see www.sportradar.com for more details.""
);"

Database Name: bigquery-public-data
Schema Name: ncaa_basketball
,9
table_name,mbb_historical_teams_seasons
ddl,"CREATE TABLE `bigquery-public-data.ncaa_basketball.mbb_historical_teams_seasons`
(
  season INT64 OPTIONS(description=""Season the game was played in""),
  market STRING OPTIONS(description=""Team school name (using Sportradar names)""),
  name STRING OPTIONS(description=""Team name""),
  team_code INT64 OPTIONS(description=""School code (see http://stats.ncaa.org/game_upload/team_codes)""),
  team_id STRING OPTIONS(description=""Sportradar team ID""),
  alias STRING OPTIONS(description=""Team alias""),
  division INT64 OPTIONS(description=""The division the team played in at this time of this season""),
  current_division STRING OPTIONS(description=""The division the team currently plays in""),
  wins INT64 OPTIONS(description=""Number of wins in this season""),
  losses INT64 OPTIONS(description=""Number of losses in this season""),
  ties INT64 OPTIONS(description=""Number of ties in this season"")
)
OPTIONS(
  description=""Season record information for Men's Basketball, starting with the 1894-95 season. Each game is included twice, with one entry per team. \n\nData provided by the NCAA.""
);"

External knowledge that might be helpful: 
# Score Intervals and Coordinates Logic

## Score Delta Intervals

To categorize the score deltas into intervals, the following conditions are used:

- **<-20**: When `score_delta < -20`
- **-20 — -11**: When `score_delta` is between -20 (inclusive) and -10 (exclusive)
- **-10 — -1**: When `score_delta` is between -10 (inclusive) and 0 (exclusive)
- **0**: When `score_delta` equals 0
- **1 — 10**: When `score_delta` is between 1 (inclusive) and 10 (inclusive)
- **11 — 20**: When `score_delta` is between 11 (exclusive) and 20 (inclusive)
- **>20**: When `score_delta > 20`

These intervals help in analyzing the performance based on the difference in team scores.

## X and Y Coordinates Calculation

Coordinates are adjusted based on the `event_coord_x` and `event_coord_y` values as follows:

- **X Coordinate**: 
  - If `event_coord_x < 564`: Use `event_coord_x` directly.
  - Otherwise: Calculate as `1128 - event_coord_x`.

- **Y Coordinate**: 
  - If `event_coord_x < 564`: Calculate as `600 - event_coord_y`.
  - Otherwise: Use `event_coord_y` directly.

The table structure information is ({database name: {schema name: [table name]}}): 
{'bigquery-public-data': {'ncaa_basketball': ['mbb_teams', 'mbb_teams_games_sr', 'team_colors', 'mbb_historical_tournament_games', 'mbb_pbp_sr', 'mascots', 'mbb_players_games_sr', 'mbb_historical_teams_games', 'mbb_games_sr', 'mbb_historical_teams_seasons']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`

  - **Columns:**
    - `shot_type`: Used to group events by shot type.
    - `event_coord_x`: X coordinate of the event; used to calculate average x coordinate after adjustment.
    - `event_coord_y`: Y coordinate of the event; used to calculate average y coordinate after adjustment.
    - `shot_made`: Indicates if the shot was successful; used to calculate average number of successful shots.
    - `scheduled_date`: Date the game was played; used to filter shots taken before March 15, 2018.
    - `team_basket`: Indicates the basket ('left' or 'right') that the team is attacking; used to adjust coordinates to ensure consistency.
    - `team_id`: Identifier for the team; useful for ensuring shots are on the correct side of the court.
    - `event_type`: Category of the event; used to filter for shot events.
    - `event_description`: Provides details about the event; can offer insights when analyzing data.
    - `three_point_shot`: Indicates if the shot was a three-point attempt; may be useful for further analysis.

**Conditions to be Used:**

- `scheduled_date < '2018-03-15'`: To include only shots taken before March 15, 2018.
- `shot_type IS NOT NULL`: To exclude events without a specified shot type.
- `event_coord_x IS NOT NULL AND event_coord_y IS NOT NULL`: To exclude events without coordinate data.
- Ensure shots are on the correct side of the court based on the team's basket (`team_basket`) and adjust coordinates accordingly.

---

**SQL Queries:**

1. **Retrieve distinct shot types to understand the categories available:**

   ```sql
   SELECT DISTINCT shot_type
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
   LIMIT 100;
   ```

2. **View a sample of events with shot types and their coordinates:**

   ```sql
   SELECT
     shot_type,
     event_coord_x,
     event_coord_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
   LIMIT 100;
   ```

3. **Get distinct values of `team_basket` to understand how teams are assigned baskets:**

   ```sql
   SELECT DISTINCT team_basket
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE team_basket IS NOT NULL
   LIMIT 100;
   ```

4. **Count the number of shots per shot type to see which types are most common:**

   ```sql
   SELECT
     shot_type,
     COUNT(*) AS num_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
   GROUP BY shot_type
   LIMIT 100;
   ```

5. **Retrieve events with shot types taken before March 15, 2018:**

   ```sql
   SELECT
     scheduled_date,
     shot_type,
     event_coord_x,
     event_coord_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND scheduled_date < '2018-03-15'
   LIMIT 100;
   ```

6. **Get the number of made and missed shots per shot type:**

   ```sql
   SELECT
     shot_type,
     shot_made,
     COUNT(*) AS num_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND shot_made IS NOT NULL
   GROUP BY shot_type, shot_made
   LIMIT 100;
   ```

7. **Sample calculation of adjusted x and y coordinates for consistency in basket orientation:**

   ```sql
   SELECT
     shot_type,
     event_coord_x,
     event_coord_y,
     team_basket,
     CASE
       WHEN event_coord_x < 564 THEN event_coord_x
       ELSE 1128 - event_coord_x
     END AS adjusted_x,
     CASE
       WHEN event_coord_x < 564 THEN 600 - event_coord_y
       ELSE event_coord_y
     END AS adjusted_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
   LIMIT 100;
   ```

8. **Calculate average adjusted coordinates per shot type (before March 15, 2018):**

   ```sql
   SELECT
     shot_type,
     AVG(CASE WHEN event_coord_x < 564 THEN event_coord_x ELSE 1128 - event_coord_x END) AS avg_adjusted_x,
     AVG(CASE WHEN event_coord_x < 564 THEN 600 - event_coord_y ELSE event_coord_y END) AS avg_adjusted_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
     AND scheduled_date < '2018-03-15'
   GROUP BY shot_type
   LIMIT 100;
   ```

9. **Count total shots and successful shots per shot type (before March 15, 2018):**

   ```sql
   SELECT
     shot_type,
     COUNT(*) AS total_shots,
     SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) AS successful_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND scheduled_date < '2018-03-15'
   GROUP BY shot_type
   LIMIT 100;
   ```

10. **Identify events where shots are on the correct side of the court based on the team's basket:**

    ```sql
    SELECT
      team_id,
      team_basket,
      event_coord_x,
      event_coord_y,
      CASE
        WHEN (team_basket = 'left' AND event_coord_x < 564)
          OR (team_basket = 'right' AND event_coord_x >= 564) THEN 'Correct Side'
        ELSE 'Wrong Side'
      END AS side_check
    FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
    WHERE shot_type IS NOT NULL
      AND event_coord_x IS NOT NULL
      AND event_coord_y IS NOT NULL
    LIMIT 100;
    ```

These queries progressively help in understanding the necessary data:

- **Queries 1-3:** Explore the distinct values and categories in key columns.
- **Queries 4-6:** Provide counts and distributions of shots, essential for calculating averages.
- **Query 7:** Demonstrates how to adjust coordinates based on the team's attacking basket.
- **Queries 8-9:** Calculate average adjusted coordinates and shot success rates per shot type.
- **Query 10:** Verifies if shots are on the correct side of the court, ensuring data consistency.

By analyzing the results of these queries, we can gather the necessary insights to perform the calculations required for the task.Query:
SELECT DISTINCT shot_type
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
   LIMIT 100;
Answer:
shot_type
layup
jump shot
hook shot
tip shot
dunk
Query:
SELECT
     shot_type,
     event_coord_x,
     event_coord_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
   LIMIT 100;
Answer:
shot_type,event_coord_x,event_coord_y
layup,88.0,255.0
layup,99.0,255.0
layup,71.0,327.0
jump shot,240.0,177.0
jump shot,237.0,336.0
jump shot,208.0,231.0
jump shot,339.0,356.0
jump shot,119.0,219.0
hook shot,134.0,214.0
jump shot,153.0,286.0
jump shot,184.0,423.0
jump shot,359.0,236.0
jump shot,65.0,41.0
jump shot,251.0,85.0
layup,87.0,248.0
layup,134.0,263.0
jump shot,212.0,221.0
jump shot,141.0,272.0
tip shot,88.0,266.0
tip shot,99.0,301.0
hook shot,140.0,304.0
jump shot,130.0,92.0
jump shot,273.0,324.0
layup,92.0,248.0
layup,89.0,329.0
layup,91.0,246.0
layup,72.0,328.0
dunk,85.0,300.0
jump shot,336.0,328.0
jump shot,181.0,533.0
layup,1037.0,332.0
layup,1050.0,334.0
jump shot,962.0,39.0
jump shot,790.0,368.0
jump shot,935.0,132.0
jump shot,1076.0,557.0
jump shot,848.0,109.0
jump shot,813.0,400.0
jump shot,1083.0,46.0
jump shot,808.0,403.0
jump shot,773.0,336.0
layup,1010.0,301.0
jump shot,1027.0,346.0
jump shot,808.0,341.0
jump shot,841.0,130.0
layup,1020.0,358.0
layup,1054.0,339.0
layup,1027.0,303.0
layup,1009.0,331.0
layup,1024.0,262.0
jump shot,975.0,253.0
layup,1048.0,338.0
layup,1048.0,328.0
jump shot,1013.0,459.0
jump shot,1055.0,417.0
dunk,1045.0,301.0
dunk,1052.0,312.0
jump shot,838.0,125.0
jump shot,838.0,133.0
jump shot,880.0,489.0
jump shot,1090.0,29.0
jump shot,1081.0,37.0
jump shot,88.0,239.0
layup,101.0,291.0
jump shot,311.0,441.0
jump shot,596.0,96.0
jump shot,75.0,32.0
jump shot,357.0,279.0
jump shot,118.0,562.0
Query:
SELECT DISTINCT team_basket
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE team_basket IS NOT NULL
   LIMIT 100;
Answer:
team_basket
left
right
Query:
SELECT
     shot_type,
     COUNT(*) AS num_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
   GROUP BY shot_type
   LIMIT 100;
Answer:
shot_type,num_shots
layup,337805
jump shot,680076
hook shot,11015
tip shot,6117
dunk,41997
Query:
SELECT
     scheduled_date,
     shot_type,
     event_coord_x,
     event_coord_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND scheduled_date < '2018-03-15'
   LIMIT 100;
Answer:
scheduled_date,shot_type,event_coord_x,event_coord_y
2015-11-15 00:30:00+00:00,layup,1010.0,238.0
2015-11-15 00:30:00+00:00,layup,1028.0,215.0
2015-11-15 00:30:00+00:00,layup,85.0,298.0
2015-11-15 00:30:00+00:00,jump shot,846.0,94.0
2015-11-15 00:30:00+00:00,layup,102.0,294.0
2017-12-09 21:00:00+00:00,jump shot,305.0,184.0
2017-12-09 21:00:00+00:00,layup,106.0,264.0
2018-02-14 01:00:00+00:00,jump shot,799.0,397.0
2018-02-14 01:00:00+00:00,jump shot,53.0,562.0
2018-02-14 01:00:00+00:00,jump shot,964.0,269.0
2018-02-14 01:00:00+00:00,jump shot,144.0,256.0
2018-02-14 01:00:00+00:00,layup,1033.0,300.0
2018-02-14 01:00:00+00:00,layup,1002.0,290.0
2018-02-14 01:00:00+00:00,layup,85.0,320.0
2018-02-14 01:00:00+00:00,jump shot,1009.0,281.0
2015-11-25 02:00:00+00:00,jump shot,237.0,500.0
2015-11-25 02:00:00+00:00,jump shot,347.0,352.0
2015-11-25 02:00:00+00:00,jump shot,95.0,344.0
2015-11-25 02:00:00+00:00,layup,1054.0,331.0
2015-11-25 02:00:00+00:00,jump shot,343.0,298.0
2015-11-25 02:00:00+00:00,layup,103.0,283.0
2015-11-25 02:00:00+00:00,layup,1026.0,312.0
2015-11-25 02:00:00+00:00,layup,1047.0,276.0
2015-11-25 02:00:00+00:00,jump shot,904.0,298.0
2015-11-25 02:00:00+00:00,jump shot,832.0,144.0
2015-11-25 02:00:00+00:00,jump shot,815.0,399.0
2015-11-25 02:00:00+00:00,layup,1048.0,266.0
2015-12-23 01:00:00+00:00,layup,1020.0,249.0
2015-12-23 01:00:00+00:00,layup,1034.0,280.0
2015-12-23 01:00:00+00:00,jump shot,1009.0,288.0
2015-12-23 01:00:00+00:00,jump shot,170.0,159.0
2015-12-23 01:00:00+00:00,jump shot,256.0,190.0
Query:
SELECT
     shot_type,
     shot_made,
     COUNT(*) AS num_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND shot_made IS NOT NULL
   GROUP BY shot_type, shot_made
   LIMIT 100;
Answer:
shot_type,shot_made,num_shots
layup,False,152338
jump shot,False,442006
hook shot,False,5750
jump shot,True,238070
tip shot,True,3745
hook shot,True,5265
layup,True,185467
dunk,True,37191
dunk,False,4806
tip shot,False,2372
Query:
SELECT
     shot_type,
     event_coord_x,
     event_coord_y,
     team_basket,
     CASE
       WHEN event_coord_x < 564 THEN event_coord_x
       ELSE 1128 - event_coord_x
     END AS adjusted_x,
     CASE
       WHEN event_coord_x < 564 THEN 600 - event_coord_y
       ELSE event_coord_y
     END AS adjusted_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
   LIMIT 100;
Answer:
shot_type,event_coord_x,event_coord_y,team_basket,adjusted_x,adjusted_y
layup,88.0,255.0,left,88.0,345.0
layup,99.0,255.0,left,99.0,345.0
layup,71.0,327.0,left,71.0,273.0
jump shot,240.0,177.0,left,240.0,423.0
jump shot,237.0,336.0,left,237.0,264.0
jump shot,208.0,231.0,left,208.0,369.0
jump shot,339.0,356.0,left,339.0,244.0
jump shot,119.0,219.0,left,119.0,381.0
hook shot,134.0,214.0,left,134.0,386.0
jump shot,153.0,286.0,left,153.0,314.0
jump shot,184.0,423.0,left,184.0,177.0
jump shot,359.0,236.0,left,359.0,364.0
jump shot,65.0,41.0,left,65.0,559.0
jump shot,251.0,85.0,left,251.0,515.0
layup,87.0,248.0,left,87.0,352.0
layup,134.0,263.0,left,134.0,337.0
jump shot,212.0,221.0,left,212.0,379.0
jump shot,141.0,272.0,left,141.0,328.0
tip shot,88.0,266.0,left,88.0,334.0
tip shot,99.0,301.0,left,99.0,299.0
hook shot,140.0,304.0,left,140.0,296.0
jump shot,130.0,92.0,left,130.0,508.0
jump shot,273.0,324.0,left,273.0,276.0
layup,92.0,248.0,left,92.0,352.0
layup,89.0,329.0,left,89.0,271.0
layup,91.0,246.0,left,91.0,354.0
layup,72.0,328.0,left,72.0,272.0
dunk,85.0,300.0,left,85.0,300.0
jump shot,336.0,328.0,left,336.0,272.0
jump shot,181.0,533.0,left,181.0,67.0
layup,1037.0,332.0,right,91.0,332.0
layup,1050.0,334.0,right,78.0,334.0
jump shot,962.0,39.0,right,166.0,39.0
jump shot,790.0,368.0,right,338.0,368.0
jump shot,935.0,132.0,right,193.0,132.0
jump shot,1076.0,557.0,right,52.0,557.0
jump shot,848.0,109.0,right,280.0,109.0
Query:
SELECT
     shot_type,
     AVG(CASE WHEN event_coord_x < 564 THEN event_coord_x ELSE 1128 - event_coord_x END) AS avg_adjusted_x,
     AVG(CASE WHEN event_coord_x < 564 THEN 600 - event_coord_y ELSE event_coord_y END) AS avg_adjusted_y
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND event_coord_x IS NOT NULL
     AND event_coord_y IS NOT NULL
     AND scheduled_date < '2018-03-15'
   GROUP BY shot_type
   LIMIT 100;
Answer:
shot_type,avg_adjusted_x,avg_adjusted_y
layup,96.37913611987685,302.93106914262165
jump shot,211.34314374632456,297.78175941602535
dunk,90.51952730941055,301.2171542489316
hook shot,124.90573884114225,304.5526291470288
tip shot,93.32401862940787,301.84281437125753
Query:
SELECT
     shot_type,
     COUNT(*) AS total_shots,
     SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) AS successful_shots
   FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
   WHERE shot_type IS NOT NULL
     AND scheduled_date < '2018-03-15'
   GROUP BY shot_type
   LIMIT 100;
Answer:
shot_type,total_shots,successful_shots
layup,335278,184106
jump shot,675099,236368
dunk,41634,36873
hook shot,10821,5184
tip shot,6012,3675
Query:
SELECT
      team_id,
      team_basket,
      event_coord_x,
      event_coord_y,
      CASE
        WHEN (team_basket = 'left' AND event_coord_x < 564)
          OR (team_basket = 'right' AND event_coord_x >= 564) THEN 'Correct Side'
        ELSE 'Wrong Side'
      END AS side_check
    FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
    WHERE shot_type IS NOT NULL
      AND event_coord_x IS NOT NULL
      AND event_coord_y IS NOT NULL
    LIMIT 100;
Answer:
team_id,team_basket,event_coord_x,event_coord_y,side_check
fae4855b-1b64-4b40-a632-9ed345e1e952,left,88.0,255.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,99.0,255.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,71.0,327.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,240.0,177.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,237.0,336.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,208.0,231.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,339.0,356.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,119.0,219.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,134.0,214.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,153.0,286.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,184.0,423.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,359.0,236.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,65.0,41.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,251.0,85.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,87.0,248.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,134.0,263.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,212.0,221.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,141.0,272.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,88.0,266.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,99.0,301.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,140.0,304.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,130.0,92.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,273.0,324.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,92.0,248.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,89.0,329.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,91.0,246.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,72.0,328.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,85.0,300.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,336.0,328.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,left,181.0,533.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,right,1037.0,332.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,right,1050.0,334.0,Correct Side
fae4855b-1b64-4b40-a632-9ed345e1e952,right,962.0,39.0,Correct Side
End Exploring Related Columns
Task: Could you determine, for each shot type, the average x and y coordinates (adjusted to ensure consistency regarding the left or right basket), the average number of shot attempts, and the average number of successful shots, considering only shots taken before March 15, 2018, excluding those with null shot types or coordinates, ensuring the shots are on the correct side of the court based on the team's basket.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: To determine the averages for each shot type, we consider only shots taken before March 15, 2018, excluding those with null shot types or coordinates, and ensure the shots are on the correct side of the court based on the team's basket. The adjusted x and y coordinates are calculated as per the provided logic.

```csv
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,avg_shot_attempts,avg_successful_shots
shot_type1:str,x_coord1:float,y_coord1:float,attempts1:float,successful_shots1:float
shot_type2:str,x_coord2:float,y_coord2:float,attempts2:float,successful_shots2:float
...
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'bigquery-public-data': {'ncaa_basketball': ['mbb_teams', 'mbb_teams_games_sr', 'team_colors', 'mbb_historical_tournament_games', 'mbb_pbp_sr', 'mascots', 'mbb_players_games_sr', 'mbb_historical_teams_games', 'mbb_games_sr', 'mbb_historical_teams_seasons']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-10 17:12:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:12:58 - root - INFO - To determine the averages for each shot type, we consider only shots taken before March 15, 2018, excluding those with null shot types or coordinates, and ensure the shots are on the correct side of the court based on the team's basket. The adjusted x and y coordinates are calculated as per the provided logic.

```sql
SELECT
    shot_type,
    AVG(
        CASE
            WHEN event_coord_x < 564 THEN event_coord_x
            ELSE 1128 - event_coord_x
        END
    ) AS avg_adjusted_x_coordinate,
    AVG(
        CASE
            WHEN event_coord_x < 564 THEN 600 - event_coord_y
            ELSE event_coord_y
        END
    ) AS avg_adjusted_y_coordinate,
    COUNT(*) AS total_shot_attempts,
    SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) AS total_successful_shots
FROM
    `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
WHERE
    shot_type IS NOT NULL
    AND event_coord_x IS NOT NULL
    AND event_coord_y IS NOT NULL
    AND scheduled_date < '2018-03-15'
    AND (
        (team_basket = 'left' AND event_coord_x < 564)
        OR (team_basket = 'right' AND event_coord_x >= 564)
    )
GROUP BY
    shot_type;
```
2025-02-10 17:13:00 - root - INFO - itercount: 1
2025-02-10 17:13:00 - root - INFO - 0
2025-02-10 17:13:00 - root - INFO - results: 
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,total_shot_attempts,total_successful_shots
layup,96.35235796498377,302.9383168189649,334759,183997
jump shot,211.25291442560925,297.78205423049906,673975,236173
dunk,90.5004086145563,301.2168060763388,41604,36850
hook shot,124.90350309640449,304.5689989832699,10819,5184
tip shot,93.31835643895106,301.83831635209623,5987,3675


2025-02-10 17:13:00 - root - INFO - Please check the answer again by reviewing Could you determine, for each shot type, the average x and y coordinates (adjusted to ensure consistency regarding the left or right basket), the average number of shot attempts, and the average number of successful shots, considering only shots taken before March 15, 2018, excluding those with null shot types or coordinates, ensuring the shots are on the correct side of the court based on the team's basket., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To determine the averages for each shot type, we consider only shots taken before March 15, 2018, excluding those with null shot types or coordinates, and ensure the shots are on the correct side of the court based on the team's basket. The adjusted x and y coordinates are calculated as per the provided logic.

```csv
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,avg_shot_attempts,avg_successful_shots
shot_type1:str,x_coord1:float,y_coord1:float,attempts1:float,successful_shots1:float
shot_type2:str,x_coord2:float,y_coord2:float,attempts2:float,successful_shots2:float
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,total_shot_attempts,total_successful_shots
layup,96.35235796498377,302.9383168189649,334759,183997
jump shot,211.25291442560925,297.78205423049906,673975,236173
dunk,90.5004086145563,301.2168060763388,41604,36850
hook shot,124.90350309640449,304.5689989832699,10819,5184
tip shot,93.31835643895106,301.83831635209623,5987,3675
Current sql:
SELECT
    shot_type,
    AVG(
        CASE
            WHEN event_coord_x < 564 THEN event_coord_x
            ELSE 1128 - event_coord_x
        END
    ) AS avg_adjusted_x_coordinate,
    AVG(
        CASE
            WHEN event_coord_x < 564 THEN 600 - event_coord_y
            ELSE event_coord_y
        END
    ) AS avg_adjusted_y_coordinate,
    COUNT(*) AS total_shot_attempts,
    SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) AS total_successful_shots
FROM
    `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
WHERE
    shot_type IS NOT NULL
    AND event_coord_x IS NOT NULL
    AND event_coord_y IS NOT NULL
    AND scheduled_date < '2018-03-15'
    AND (
        (team_basket = 'left' AND event_coord_x < 564)
        OR (team_basket = 'right' AND event_coord_x >= 564)
    )
GROUP BY
    shot_type;
2025-02-10 17:13:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:13:39 - root - INFO - To determine the averages for each shot type, we consider only shots taken before March 15, 2018, excluding those with null shot types or coordinates, and ensure the shots are on the correct side of the court based on the team's basket. The adjusted x and y coordinates are calculated as per the provided logic.

```sql
SELECT
    shot_type,
    ROUND(AVG(
        CASE
            WHEN event_coord_x < 564 THEN event_coord_x
            ELSE 1128 - event_coord_x
        END
    ), 4) AS avg_adjusted_x_coordinate,
    ROUND(AVG(
        CASE
            WHEN event_coord_x < 564 THEN 600 - event_coord_y
            ELSE event_coord_y
        END
    ), 4) AS avg_adjusted_y_coordinate,
    ROUND(COUNT(*) / COUNT(DISTINCT game_id), 4) AS avg_shot_attempts,
    ROUND(SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) / COUNT(DISTINCT game_id), 4) AS avg_successful_shots
FROM
    `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
WHERE
    shot_type IS NOT NULL
    AND event_coord_x IS NOT NULL
    AND event_coord_y IS NOT NULL
    AND scheduled_date < '2018-03-15'
    AND (
        (team_basket = 'left' AND event_coord_x < 564)
        OR (team_basket = 'right' AND event_coord_x >= 564)
    )
GROUP BY
    shot_type;
```

This query calculates:

- **`avg_adjusted_x_coordinate`**: The average adjusted x-coordinate for each shot type.
- **`avg_adjusted_y_coordinate`**: The average adjusted y-coordinate for each shot type.
- **`avg_shot_attempts`**: The average number of shot attempts per game for each shot type.
- **`avg_successful_shots`**: The average number of successful shots per game for each shot type.

The averages are rounded to four decimal places as specified.
2025-02-10 17:13:41 - root - INFO - itercount: 2
2025-02-10 17:13:41 - root - INFO - 0
2025-02-10 17:13:41 - root - INFO - results: 
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,avg_shot_attempts,avg_successful_shots
layup,96.3524,302.9383,35.8108,19.683
jump shot,211.2529,297.7821,72.0906,25.2618
dunk,90.5004,301.2168,4.6094,4.0827
hook shot,124.9035,304.569,3.8135,1.8273
tip shot,93.3184,301.8383,2.1914,1.3452


2025-02-10 17:13:41 - root - INFO - Please check the answer again by reviewing Could you determine, for each shot type, the average x and y coordinates (adjusted to ensure consistency regarding the left or right basket), the average number of shot attempts, and the average number of successful shots, considering only shots taken before March 15, 2018, excluding those with null shot types or coordinates, ensuring the shots are on the correct side of the court based on the team's basket., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To determine the averages for each shot type, we consider only shots taken before March 15, 2018, excluding those with null shot types or coordinates, and ensure the shots are on the correct side of the court based on the team's basket. The adjusted x and y coordinates are calculated as per the provided logic.

```csv
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,avg_shot_attempts,avg_successful_shots
shot_type1:str,x_coord1:float,y_coord1:float,attempts1:float,successful_shots1:float
shot_type2:str,x_coord2:float,y_coord2:float,attempts2:float,successful_shots2:float
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
shot_type,avg_adjusted_x_coordinate,avg_adjusted_y_coordinate,avg_shot_attempts,avg_successful_shots
layup,96.3524,302.9383,35.8108,19.683
jump shot,211.2529,297.7821,72.0906,25.2618
dunk,90.5004,301.2168,4.6094,4.0827
hook shot,124.9035,304.569,3.8135,1.8273
tip shot,93.3184,301.8383,2.1914,1.3452
Current sql:
SELECT
    shot_type,
    ROUND(AVG(
        CASE
            WHEN event_coord_x < 564 THEN event_coord_x
            ELSE 1128 - event_coord_x
        END
    ), 4) AS avg_adjusted_x_coordinate,
    ROUND(AVG(
        CASE
            WHEN event_coord_x < 564 THEN 600 - event_coord_y
            ELSE event_coord_y
        END
    ), 4) AS avg_adjusted_y_coordinate,
    ROUND(COUNT(*) / COUNT(DISTINCT game_id), 4) AS avg_shot_attempts,
    ROUND(SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) / COUNT(DISTINCT game_id), 4) AS avg_successful_shots
FROM
    `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
WHERE
    shot_type IS NOT NULL
    AND event_coord_x IS NOT NULL
    AND event_coord_y IS NOT NULL
    AND scheduled_date < '2018-03-15'
    AND (
        (team_basket = 'left' AND event_coord_x < 564)
        OR (team_basket = 'right' AND event_coord_x >= 564)
    )
GROUP BY
    shot_type;
2025-02-10 17:14:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:14:18 - root - INFO - ```sql
SELECT
    shot_type,
    ROUND(AVG(
        CASE
            WHEN event_coord_x < 564 THEN event_coord_x
            ELSE 1128 - event_coord_x
        END
    ), 4) AS avg_adjusted_x_coordinate,
    ROUND(AVG(
        CASE
            WHEN event_coord_x < 564 THEN 600 - event_coord_y
            ELSE event_coord_y
        END
    ), 4) AS avg_adjusted_y_coordinate,
    ROUND(COUNT(*) / COUNT(DISTINCT game_id), 4) AS avg_shot_attempts,
    ROUND(SUM(CASE WHEN shot_made = TRUE THEN 1 ELSE 0 END) / COUNT(DISTINCT game_id), 4) AS avg_successful_shots
FROM
    `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
WHERE
    shot_type IS NOT NULL
    AND event_coord_x IS NOT NULL
    AND event_coord_y IS NOT NULL
    AND scheduled_date < '2018-03-15'
    AND (
        (team_basket = 'left' AND event_coord_x < 564)
        OR (team_basket = 'right' AND event_coord_x >= 564)
    )
GROUP BY
    shot_type;
```
2025-02-10 17:14:19 - root - INFO - itercount: 3
2025-02-10 17:14:19 - root - INFO - 0
2025-02-10 17:14:19 - root - INFO - Total iteration counts: 3
