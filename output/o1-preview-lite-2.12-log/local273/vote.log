```plaintext
1result.sql
```

I selected `1result.sql` as the correct SQL because it correctly calculates the average pick percentage for each product name according to the given requirements. Here's why:

**Reasons:**

1. **FIFO and Inventory Constraints:**
   - `1result.sql` takes into account the First-In-First-Out (FIFO) approach by ordering orders based on the `ordered` date from the `orders` table.
   - It calculates the cumulative ordered quantity before each orderline to simulate the FIFO consumption of inventory. This ensures that earlier orders consume the inventory before later ones.
   - It joins with the total available inventory per product to determine how much inventory is remaining before each order.

2. **Calculation of Picked Quantity Reflecting Overlapping Range:**
   - The SQL calculates the `remaining_inventory_before_order` by subtracting the cumulative ordered quantity before the current order from the total inventory.
   - It then determines the `pick_qty` (picked quantity) for each orderline based on the remaining inventory:
     - If the remaining inventory is sufficient to fulfill the order (`remaining_inventory_before_order >= order_qty`), it picks the full order quantity.
     - If the remaining inventory is positive but insufficient, it picks whatever is remaining.
     - If the remaining inventory is zero or negative, it picks zero.
   - This method ensures that the picked quantity reflects only the overlapping range between each order's required quantity and the inventory's available quantity.

3. **Average Pick Percentage Calculation:**
   - It calculates the pick percentage per orderline by dividing the `pick_qty` by the `order_qty`.
   - It then groups the results by `product_name` and calculates the average pick percentage.
   - This approach provides an accurate reflection of the average pick percentage per product, considering the actual inventory constraints and FIFO consumption.

4. **Results Match Expectations:**
   - The results from `1result.sql` show varying average pick percentages, indicating that inventory constraints are affecting the pick rates.
   - For example, "Hoppy Crude Oil" has an average pick percentage of approximately 36.11%, which aligns with earlier observations where the pick percentage was around 37.5%.
   - Other products have an average pick percentage of 100%, which could be because their inventory levels were sufficient to fulfill all orders.

5. **Comparison with Other SQLs:**
   - `0result.sql` outputs an average pick percentage of 100% for all products, which seems unrealistic given the inventory constraints mentioned in earlier observations.
   - `2result.sql` shows average pick percentages that do not fully account for the FIFO approach or the cumulative consumption of inventory, and its results don't align as closely with earlier data.

**Conclusion:**

`1result.sql` accurately reflects the task's requirements by:

- Implementing a FIFO approach using order dates.
- Considering inventory constraints and cumulative consumption.
- Calculating picked quantities based on overlapping ranges.
- Providing reasonable average pick percentages for each product.

Therefore, it is the correct SQL for calculating the average pick percentage per product name under the specified conditions.