After comparing the SQL queries and their results, the **best choice is `2result.sql`**.

**Reasons:**

1. **Accurate Volume Conversion:**
   - In `2result.sql`, the volume values ending with "K" or "M" are properly converted to numerical values by first removing the suffix and then casting the result to `REAL` before multiplying:
     ```sql
     CASE
         WHEN "volume" LIKE '%K' THEN CAST(REPLACE("volume", 'K', '') AS REAL) * 1000
         WHEN "volume" LIKE '%M' THEN CAST(REPLACE("volume", 'M', '') AS REAL) * 1000000
     ```
   - This ensures accurate arithmetic operations and avoids any potential errors due to inappropriate data types.

2. **Correct Handling of "-" Volumes:**
   - The query correctly treats any volume value of "-" as zero:
     ```sql
     WHEN "volume" = '-' THEN 0
     ```
   - This aligns with the requirement to treat "-" as zero.

3. **Proper Date Matching:**
   - The JOIN condition in `2result.sql` accurately matches the current date with the previous date by adjusting the dates appropriately:
     ```sql
     current."date_formatted" = date(previous."date_formatted", '+1 day')
     ```
   - This ensures that we're calculating the percentage change based on the previous day's volume.

4. **Excluding Zero Previous Volumes:**
   - The condition to use only non-zero previous volumes is correctly implemented in the `WHERE` clause:
     ```sql
     WHERE
         current."date_formatted" BETWEEN '2021-08-01' AND '2021-08-10'
         AND previous."volume_numeric" > 0
     ```
   - This ensures that only meaningful percentage changes are calculated.

5. **Clean Query Structure:**
   - The query in `2result.sql` is well-structured and readable, making it easier to understand, maintain, and debug if necessary.

**Therefore, `2result.sql` correctly implements all the task requirements and provides accurate results.**

```plaintext
2result.sql
```