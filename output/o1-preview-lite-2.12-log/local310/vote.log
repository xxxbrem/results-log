The correct SQL query is **1result.sql**.

**Reasoning:**

- **Structured and Readable Approach:** The `1result.sql` script uses Common Table Expressions (CTEs) with the `WITH` clause to break down the problem into manageable and logical steps. This approach enhances readability and makes the query easier to follow and maintain.

- **Step-by-Step Calculations:**
  - **driver_points:** Calculates the total points for each driver per year by summing up the points from the `results` table joined with the `races` table to get the year information.
  - **max_driver_points:** Determines the highest total points earned by any driver each year.
  - **constructor_points:** Similarly, calculates the total points for each constructor per year.
  - **max_constructor_points:** Determines the highest total points earned by any constructor each year.
  - **total_max_points:** Combines the maximum driver and constructor points per year and calculates their sum.

- **Alignment with the Task Requirements:** The query effectively addresses the task of finding the three years with the smallest combined totals of the highest driver and constructor points. It summarizes the data accurately and orders the results as specified.

- **Consistent Results:** The `1result.sql` script produces the correct results, matching the expected output. It lists the years 1966, 1964, and 1962 with the smallest combined total points, which are 108.0, 111.0, and 114.0 respectively.

- **Self-Contained within the Constraints:** Although the initial task mentions using only the `results` table, it's necessary to join with the `races` table to access the `year` information since the `results` table alone does not contain year data. All provided queries perform this join, and `1result.sql` does so effectively.

**Therefore, the chosen SQL query is:**

```plaintext
1result.sql
```