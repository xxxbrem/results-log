2025-02-12 19:05:20 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:05:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:05:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:05:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:05:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 19:05:21 - snowflake.connector.connection - INFO - closed
2025-02-12 19:05:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:05:22 - root - INFO - SQL:
SELECT "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py'
   LIMIT 100;
Results:
Too long, hard cut:
path
push_notifications/migrations/0002_auto_20160106_0850.py
Maximum_Subarray/Python/shivam5992/kadane.py
Caesar_Cipher/Python/kennyledet/caesar_cipher.py
setup.py
pgcrypto_expressions/test/settings.py
ec2_security_groups_dumper/__init__.py
dirigible/info_pages/__init__.py
tests/python/tests/test_updatecollection.py
tests/testproject/settings.py
yandex_money/api.py
google/cloud/dataflow/utils/__init__.py
examples/Rest/ex20_get_ilo_nic.py
try/for_now.py
node_modules/node-sass/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py
vendor/distribute-0.6.36/easy_install.py
vendor/pip-1.3.1/pip/vcs/subversion.py
vendor/distribute-0.6.36/tests/install_test.py
testing/testing/unit_tests/__init__.py
src/__init__.py
image_cropping/utils.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/GenFds/FfsInfStatement.py
src/VBox/Additions/common/crOpenGL/stub_common.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/Ecc/CodeFragmentCollector.py
project/admin/__init__.py
examples/backend/myproject/myproject/wsgi.py
tools/perf/tests/attr.py
health_check_celery/tasks.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/lib/user_array.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/core/tests/test_multiarray_assignment.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/distutils/command/sdist.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/traversal/tests/test_dfs.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/bipartite/tests/test_matching.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/core/cversions.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/doc/howtofind.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/lib/tests/test__datasource.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/f2py/f2py2e.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/polynomial/laguerre.py
osx_build/nefi2_osx_amd64_xcode_2015/bin/nefi2/model/algorithms/invert_color.py
path.py
lib/gdata/tlslite/utils/PyCrypto_AES.py
servers/youtube.py
cloudify/manager.py
misc/webdriver-w3c-tests/cookie/cookie_test.py
Lessons/lesson15.py
layout_scanner.py
networkapiclient/UsuarioGrupo.py
networkapiclient/EnvironmentVIP.py
thirdparty/future/src/libfuturize/fixes/fix_print.py
third_party/catapult/third_party/Paste/paste/util/ip4.py
third_party/catapult/third_party/webtest/webtest/forms.py
tools/gyp/test/make_global_settings/full-toolchain/gyptest-make_global_settings.py
third_party/jinja2/compiler.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/file/__init__.py
content/test/gpu/gpu_tests/trace_test_expectations.py
tools/telemetry/telemetry/value/value_unittest.py
tools/perf/page_sets/page_reload_cases.py
third_party/jinja2/_compat.py
third_party/chromite/cbuildbot/stages/build_stages.py
third_party/chromite/lib/terminal.py
tools/telemetry/telemetry/internal/backends/mandoline/config.py
third_party/cython/src/Cython/Plex/Lexicons.py
tools/gyp/test/sanitize-rule-names/gyptest-sanitize-rule-names.py
tools/grit/grit/format/policy_templates/writers/xml_writer_base_unittest.py
third_party/google_appengine_cloudstorage/cloudstorage/common.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/cloudfront/distribution.py
chrome/app/theme/PRESUBMIT.py
tools/gyp/test/ios/gyptest-per-config-settings.py
tools/telemetry/third_party/gsutilz/third_party/apitools/apitools/base/py/buffered_stream_test.py
third_party/catapult/tracing/tracing_build/__init__.py
tools/telemetry/telemetry/internal/backends/chrome_inspector/inspector_page_unittest.py
build/android/pylib/local/__init__.py
native_client/tools/scons_to_gn/print_data.py
tools/memory_inspector/memory_inspector/backends/memdump_parser.py
third_party/catapult/hooks/__init__.py
tools/cr/cr/actions/linux.py
tools/swarming_client/third_party/rsa/rsa/transform.py
third_party/catapult/perf_insights/perf_insights/corpus_driver.py
tools/gyp/test/win/gyptest-link-enable-winrt.py
third_party/chromite/scripts/dep_tracker_unittest.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/datapipeline/layer1.py
third_party/catapult/tracing/third_party/tvcm/third_party/rcssmin/_setup/py3/setup.py
third_party/chromite/lib/patch.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/mws/__init__.py
tools/telemetry/third_party/modulegraph/modulegraph_tests/testpkg-edgedata/pkg/toplevel_conditional_import_existing.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/gs/bucketlistresultset.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/sqs/test_queue.py
buildtools/clang_format/script/clang-format.py
third_party/catapult/third_party/oauth2client/oauth2client/crypt.py
third_party/tlslite/tlslite/utils/cryptomath.py
tools/telemetry/third_party/gsutilz/gslib/addlhelp/projects.py
tools/deep_memory_profiler/subcommands/buckets.py
tools/telemetry/third_party/webpagereplay/dnsproxy.py
tools/chrome_proxy/integration_tests/__init__.py
third_party/cython/src/Cython/Pl

2025-02-12 19:05:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:05:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:05:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:05:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-02-12 19:05:23 - snowflake.connector.connection - INFO - closed
2025-02-12 19:05:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:05:23 - root - INFO - SQL:
SELECT "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.r'
   LIMIT 100;
Results:
path
data-prep/split-train-test.r
experimental/R/rapachetest.r
src/tools/make-os-ext.r
run-all.r
iRODS/clients/icommands/test/rules/rulemsiSetRescSortScheme.r
iRODS/clients/icommands/test/rules/testsuiteForLcov.r
qiime/support_files/R/randomforests_util.r
R/clonevol.r
ppapi/native_client/tests/ppapi_messaging/ppapi_messaging.r
jni/SDL_mixer/external/libmikmod-3.1.12/macintosh/libmikmodversion.r
R/when.r
inst/examples/test_performance/demo_allgather_spmd.r
inst/examples/test_cs/simple.server.r
books/all-of-statistics/=Rprograms/stockprice.r
Stochastic/Exercise1_1.r
src/tools/make-natives.r
R/tabledata.r
build_dir/toolchain-arm_v5te_gcc-linaro_uClibc-0.9.32_eabi/binutils-2.20.1/ld/testsuite/ld-powerpc/tlsexetoc.r
R/msssr2tc.r
binr/old.rarc2/t/loop.r
examples/PlotDailyData/plot-daily-data-using-stdin-barb-detailed-instrumentation.r
examples/consoleSource/source1.r
src/01.Opt.3 - Memory Management Functions.r
dbug/user.r
ld/testsuite/ld-arm/tls-gdesc.r

2025-02-12 19:05:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:05:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:05:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:05:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:05:24 - snowflake.connector.connection - INFO - closed
2025-02-12 19:05:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:05:25 - root - INFO - SQL:
SELECT COUNT(*) AS "Python_File_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py';
Results:
Python_File_Count
8963

2025-02-12 19:05:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:05:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:05:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:05:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 19:05:26 - snowflake.connector.connection - INFO - closed
2025-02-12 19:05:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:05:27 - root - INFO - SQL:
SELECT c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   LIMIT 100;
Results:
Too long, hard cut:
content
"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations

from corehq.sql_db.operations import RawSQLMigration

migrator = RawSQLMigration(('corehq', 'sql_proxy_accessors', 'sql_templates'), {
    'PL_PROXY_CLUSTER_NAME': settings.PL_PROXY_CLUSTER_NAME
})


class Migration(migrations.Migration):

    dependencies = [
        ('sql_proxy_accessors', '0005_rename_get_case_attachment_by_name'),
    ]

    operations = [
        migrator.get_migration('get_case_by_external_id.sql'),
    ]
"
"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only MAEC Packages are supported'

    # Merge the MAEC packages
    merged_package = merge_packages(parsed_documents)
    # Write the merged package to the output file
    merged_package.to_xml_file(output_file, {""https://github.com/MAECProject/python-maec"":""merged""})

def merge_packages(package_list, namespace = None):
    '''Merge a list of input MAEC Packages and return a merged Package instance.'''
    malware_subjects = []
    # Instantiate the ID generator class (for automatic ID generation)
    if not namespace:
        NS = Namespace(""https://github.com/MAECProject/python-maec"", ""merged"")
    else:
        NS = namespace
    maec.utils.set_id_namespace(NS)
    # Build the list of Malware Subjects
    for package in package_list:
        for malware_subject in package.malware_subjects:
            malware_subjects.append(malware_subject)
    # Merge the Malware Subjects
    merged_subjects = merge_malware_subjects(malware_subjects)
    # Merge the input namespace/schemaLocation dictionaries
    merged_namespaces = {}
    merged_schemalocations = {}
    for package in package_list:
        merged_namespaces.update(package.__input_namespaces__)
        merged_schemalocations.update(package.__input_schemalocations__)
    # Create a new Package with the merged Malware Subjects
    merged_package = Package()
    merged_package.malware_subjects = MalwareSubjectList(merged_subjects)
    merged_package.__input_namespaces__ = merged_namespaces
    merged_package.__input_schemalocations__ = merged_schemalocations
    return merged_package

def bin_malware_subjects(malware_subject_list, default_hash_type='md5'):
    '''Bin a list of Malware Subjects by hash
       Default = MD5
    '''
    binned_subjects = {}
    for malware_subject in malware_subject_list:
        mal_inst_obj = malware_subject.malware_instance_object_attributes
        if mal_inst_obj:
            obj_properties = mal_inst_obj.properties
            if obj_properties and obj_properties.hashes:
                for hash in obj_properties.hashes:
                    if hash.type_ and hash.simple_hash_value:
                        hash_type = ''
                        hash_value = ''
                        # Get the hash type
                        hash_type = str(hash.type_).lower()
                        # Get the hash value
                        hash_value = str(hash.simple_hash_value).lower()
                            
                        # Check the hash type and bin accordingly
                        if hash_type == default_hash_type:
                            if has

2025-02-12 19:05:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:05:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:05:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:05:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 19:05:28 - snowflake.connector.connection - INFO - closed
2025-02-12 19:05:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:05:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:05:50 - root - INFO - ```sql
SELECT c."content"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE LOWER(f."path") LIKE '%.r'
LIMIT 100;
```
2025-02-12 19:05:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:05:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:05:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:05:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 19:05:52 - snowflake.connector.connection - INFO - closed
2025-02-12 19:05:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:06:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:06:18 - root - INFO - ```sql
SELECT c."content"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."sample_repo_name" = f."repo_name"
     AND c."sample_ref" = f."ref"
     AND c."sample_path" = f."path"
WHERE f."path" LIKE '%.r'
LIMIT 100;
```
2025-02-12 19:06:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:06:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:06:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:06:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 19:06:19 - snowflake.connector.connection - INFO - closed
2025-02-12 19:06:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:06:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:06:36 - root - INFO - ```sql
SELECT c."content"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%' OR f."path" ILIKE '%.r%'
LIMIT 100;
```
2025-02-12 19:06:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:06:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:06:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:06:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 8
2025-02-12 19:06:39 - snowflake.connector.connection - INFO - closed
2025-02-12 19:06:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:07:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:07:27 - root - INFO - SQL:
SELECT c."content"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%' OR f."path" ILIKE '%.r%'
LIMIT 100;
Results:
Too long, hard cut:
content
"# Rekall Memory Forensics
#
# Copyright Digital Forensics Solutions.
# Copyright 2013 Google Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

__author__ = (""Andrew Case <atcuno@gmail.com>"",
              ""Michael Cohen <scudette@google.com>"")


from rekall.plugins.linux import common


class IOmem(common.LinuxPlugin):
    '''mimics /proc/iomem.'''

    __name = ""iomem""

    table_header = [
        dict(name=""Resource"", cname=""resource"", style=""address""),
        dict(name=""Start"", cname=""start"", style=""address""),
        dict(name=""End"", cname=""end"", style=""address""),
        dict(name=""Name"", cname=""name"", type=""TreeNode""),
    ]

    def GetResources(self):
        # Resources are organized in a tree structure.
        resource_tree_root = self.profile.get_constant_object(
            ""iomem_resource"", target=""resource"")

        seen = set()

        return self._GetResources(resource_tree_root, seen)

    def _GetResources(self, node, seen, depth=0):
        """"""Traverse the resource tree depth first.""""""
        if not node or node in seen:
            return

        seen.add(node)

        yield node, depth

        if node.child:
            for x in self._GetResources(node.child.deref(), seen, depth+1):
                yield x

        for sibling in node.walk_list(""sibling""):
            for x in self._GetResources(sibling, seen, depth):
                yield x


    def collect(self):
        for node, depth in self.GetResources():
            yield dict(
                resource=node,
                start=node.start,
                end=node.end,
                name=node.name.deref(),
                depth=depth)
"
"======================
Design and History FAQ
======================

Why does Python use indentation for grouping of statements?
-----------------------------------------------------------

Guido van Rossum believes that using indentation for grouping is extremely
elegant and contributes a lot to the clarity of the average Python program.
Most people learn to love this feature after a while.

Since there are no begin/end brackets there cannot be a disagreement between
grouping perceived by the parser and the human reader.  Occasionally C
programmers will encounter a fragment of code like this::

   if (x <= y)
           x++;
           y--;
   z++;

Only the ``x++`` statement is executed if the condition is true, but the
indentation leads you to believe otherwise.  Even experienced C programmers will
sometimes stare at it a long time wondering why ``y`` is being decremented even
for ``x > y``.

Because there are no begin/end brackets, Python is much less prone to
coding-style conflicts.  In C there are many different ways to place the braces.
If you're used to reading and writing code that uses one style, you will feel at
least slightly uneasy when reading (or being required to write) another style.

Many coding styles place begin/end brackets on a line by themselves.  This makes
programs considerably longer and wastes valuable screen space, making it harder
to get a good overview of a program.  Ideally, a function should fit on one
screen (say, 20-30 lines).  20 lines of Python can do a lot more work than 20
lines of C.  This is not solely due to the lack of begin/end brackets -- the
lack of declarations and the high-level data types are also responsible -- but
the indentation-based syntax certainly helps.


Why am I getting strange results with simple arithmetic operations?
-------------------------------------------------------------------

See the next question.


Why are floating-point calculations so inaccurate?
--------------------------------------------------

Users are often surprised by results like this::

    >>> 1.2 - 1.0
    0.19999999999999996

and think it is a bug in Python.  It's not.  This has little to do with Python,
and much more to do with how the underlying platform handles floating-point
numbers.

The :class:`float` type in CPython uses a C ``double`` for storage.  A
:class:`float` object's value is stored in binary floating-point with a fixed
precision (typically 53 bits) and Python uses C operations, which in turn rely
on the hardware implementation in the processor, to perform floating-point
operations. This means that as far as floating-

2025-02-12 19:07:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:07:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:07:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:07:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 19:07:28 - snowflake.connector.connection - INFO - closed
2025-02-12 19:07:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:07:29 - root - INFO - SQL:
SELECT DISTINCT REGEXP_SUBSTR(c."content", '(import\\s+\\w+|from\\s+\\w+\\s+import\\s+\\w+)', 1, 1, 'im') AS "Import_Line"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   LIMIT 100;
Results:
Import_Line
from diesel import quickstart
from copy import deepcopy
from __future__ import unicode_literals
import common

2025-02-12 19:07:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:07:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:07:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:07:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 19:07:30 - snowflake.connector.connection - INFO - closed
2025-02-12 19:07:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:08:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:08:04 - root - INFO - ```sql
SELECT DISTINCT REGEXP_SUBSTR(c."content", '(import\s+\w+|from\s+\w+\s+import\s+\w+)', 1, 1, 'i') AS "Import_Line"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%'
LIMIT 100;
```
2025-02-12 19:08:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:08:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:08:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:08:05 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:08:05 - snowflake.connector.connection - INFO - closed
2025-02-12 19:08:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:08:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:08:41 - root - INFO - SQL:
SELECT DISTINCT REGEXP_SUBSTR(c."content", '(import\s+\w+|from\s+\w+\s+import\s+\w+)', 1, 1, 'i') AS "Import_Line"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%'
LIMIT 100;
Results:
Import_Line
""

2025-02-12 19:08:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:08:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:08:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:08:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 19:08:42 - snowflake.connector.connection - INFO - closed
2025-02-12 19:08:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:08:42 - root - INFO - SQL:
SELECT REGEXP_REPLACE(REGEXP_SUBSTR(c."content", 'import\\s+(\\w+)', 1, 1, 'im'), 'import\\s+', '') AS "Module",
          COUNT(*) AS "Import_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   GROUP BY "Module"
   ORDER BY "Import_Count" DESC
   LIMIT 100;
Results:
Module,Import_Count
unicode_literals,1
deepcopy,1
quickstart,1
common,1

2025-02-12 19:08:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:08:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:08:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:08:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 19:08:44 - snowflake.connector.connection - INFO - closed
2025-02-12 19:08:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:09:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:09:11 - root - INFO - ```sql
SELECT REGEXP_REPLACE(
         REGEXP_SUBSTR(c."content", 'import\\s+(\\w+)', 1, 1, 'i'),
         'import\\s+', '') AS "Module",
       COUNT(*) AS "Import_Count"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%'
GROUP BY "Module"
ORDER BY "Import_Count" DESC
LIMIT 100;
```
2025-02-12 19:09:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:09:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:09:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:09:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 19:09:12 - snowflake.connector.connection - INFO - closed
2025-02-12 19:09:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:09:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:09:28 - root - INFO - SQL:
SELECT REGEXP_REPLACE(
         REGEXP_SUBSTR(c."content", 'import\\s+(\\w+)', 1, 1, 'i'),
         'import\\s+', '') AS "Module",
       COUNT(*) AS "Import_Count"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%'
GROUP BY "Module"
ORDER BY "Import_Count" DESC
LIMIT 100;
Results:
Module,Import_Count
quickstart,1
deepcopy,1
unicode_literals,1
common,1

2025-02-12 19:09:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:09:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:09:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:09:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 19:09:30 - snowflake.connector.connection - INFO - closed
2025-02-12 19:09:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:09:30 - root - INFO - SQL:
SELECT f."path", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE c."binary" = FALSE
    ORDER BY c."size" DESC
    LIMIT 100;
Results:
Too long, hard cut:
path,size
test/bower_components/angular/angular.min.js.map,340629
dist/1.10.2/jquery-ajax-deprecated-dimensions-effects-offset-wrap.js,212374
Training Data For Question Retrieval/Yahoo Data/yahoo_answer/C1883Question.dat,207063
drivers/mmc/host/vub300.c,74229
dist/2.0.3/jquery-dimensions-sizzle.min.js,66557
ajax/libs/medium-editor/4.4.0/js/medium-editor.min.js,59410
Menda-Dark/gnome-shell/gnome-shell-no-crash.css,57968
dpdk-16.04/drivers/net/e1000/base/e1000_82571.c,57311
drivers/thermal/msm8974-tsens.c,52839
drivers/target/iscsi/iscsi_target_parameters.c,52369
drivers/target/iscsi/iscsi_target_parameters.c,52369
drivers/target/iscsi/iscsi_target_parameters.c,52369
src/C/libressl/libressl-2.0.0/include/openssl/ec.h,46312
recipes/linux/linux-2.6.30/calamari/defconfig,45092
drivers/net/ethernet/intel/igb/e1000_mac.c,40883
drivers/net/ethernet/intel/igb/e1000_mac.c,40883
drivers/net/ethernet/intel/igb/e1000_mac.c,40883
cpython/Doc/faq/design.rst,35823
ajax/libs/jqueryui/1.8.21/themes/vader/jquery-ui.css,33116
filer/locale/lt/LC_MESSAGES/django.po,32586
mayfield/branches/ilguXifs/src/tools/frhed/FRHED/Afxres.h,32525
js/loadxml.js,32258
tests/Fidelity/test262/suite/ch07/7.6/7.6-17.js.expected,31357
public/lib/pnotify-1.2.0/jquery.pnotify.js,31315
aws/glacier.rkt,29045
drivers/i2c/busses/i2c-mv64xxx.c,27802
locations-original-xml/GHFRK14DDU53RQQ.xml,26769
ice40ultra/hdl/top.vhd,26674
scripts/mod/mod-extract.c,25559
interface/mmal/core/mmal_component.c,25544
src/client/common/css/mixins.less,24469
po/sd.po,21065
code/server/sv_init.c,20707
include/opencv2/flann/autotuned_index.h,20607
include/external/libpng/pngstruct.h,20408
fs/xfs/xfs_itable.c,20030
fs/xfs/xfs_itable.c,20030
XenAdmin/Dialogs/Network/CertificateChangedDialog.resx,19279
vendor/endroid/qrcode/assets/data/qrvfr27.dat,15750
server/static/css/components/checkbox.css,15462
tools/sstrip/src/sstrip.c,13963
htdocs/societe/class/address.class.php,13870
mqtt/mqtt/mqtt_msg.c,13613
Rmd_files/sectionTexts/folkTheory.Rmd,12850
drivers/video/backlight/Kconfig,12532
libcilkrts/include/cilk/common.h,12478
maec/utils/merge.py,12077
src/compiler/expression/script_exprs.cpp,11322
arch/powerpc/platforms/cell/spider-pic.c,11093
Source/WebCore/platform/graphics/cairo/GraphicsContext3DCairo.cpp,10957
block/blk-mq-sysfs.c,10897
ajax/libs/jquery.tablesorter/2.17.7/js/widgets/widget-columnSelector.js,10853
docs/html/M_Accord_Statistics_Distributions_Univariate_LognormalDistribution__ctor_2.htm,10815
kernel/drivers/scsi/aic7xxx/aic79xx_proc.c,10544
drivers/scsi/aic7xxx/aic79xx_proc.c,10544
examples/Math-issue-309/src/mantissa/src/org/spaceroots/mantissa/algebra/PolynomialFraction.java,10388
drivers/infiniband/hw/amso1100/c2_cm.c,10235
drivers/infiniband/hw/amso1100/c2_cm.c,10235
slam_ext/external/g2o/trunk/g2o/core/estimate_propagator.cpp,10141
include/chajian/mailChajian.php,9906
arch/mips/kernel/scall64-64.S,9722
Documentation/zh_CN/email-clients.txt,9571
Documentation/zh_CN/email-clients.txt,9571
Documentation/zh_CN/email-clients.txt,9571
Documentation/zh_CN/email-clients.txt,9571
libs/MathJax/MathJax-2.3-latest/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata.js,9565
build/js/rotatedIntervals/Ediacaran.json,9408
sdoc/tutorial/tutorial_ncbitaxonomy.rst,8789
docs/html/F_ZedGraph_LineItem__symbol.htm,8688
Birthday-Adapter/src/main/java/org/birthdayadapter/util/FragmentStatePagerAdapterV14.java,8592
engines/neverhood/menumodule.h,8445
drivers/md/dm-delay.c,8287
include/linux/debugfs.h,8022
fs/udf/misc.c,7881
modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/am/integration/tests/publisher/APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase.java,7320
deps/uv/docs/make.bat,6728
fs/xfs/xfs_discard.c,6577
src/taoensso/nippy/encryption.clj,6512
arch/m68k/include/asm/m68360_enet.h,6446
src/gwt/src/org/rstudio/studio/client/workbench/WorkbenchListManager.java,6244
BreadWallet/BreadWallet.xcdatamodeld/BreadWallet.xcdatamodel/contents,5904
bundles/jcr/jackrabbit-accessmanager/src/main/java/org/apache/sling/jcr/jackrabbit/accessmanager/post/DeleteAcesServlet.java,5817
dep/tbb/include/tbb/tbb_config.h,5762
util/src/test/java/org/killbill/billing/util/tag/api/TestDefaultTagUserApi.java,5635
Homeworks/ASP.NET MVC/03.ASP.NETMVCWorkingWithData/Twitter.Web/Scripts/kendo/cultures/kendo.culture.sr-Latn-RS.min.js,5446
Reflector/Nsurvey_BE/Votations.NSurvey.Data/NSurveyUserData.xsd,5239
arch/powerpc/include/asm/elf.h,5058
drivers/gpu/drm/radeon/si_reg.h,5036
docs/www/node98.html,4943
drivers/staging/fbtft/fbtft-sysfs.c,4842
backend/Simplicity/_demo/page-index.js,4813
src/qt/trafficgraphwidget.cpp,4765
include/linux/amba/pl080.h,4729
include/linux/amba/pl080.h,4729
src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java,4688
doc/gui/org/deidentifier/arx/gui/view/impl/menu/class-use/EditorCriterionRiskBased.html,4604
arch/sh/include/asm/ioctls.h,4482
arch/sh/include/asm/ioctls.h,4482
arch/sh/include/asm/ioctls.h,4482
include/linux/epm_adc.h,447

2025-02-12 19:09:30 - root - INFO - itercount: 0
2025-02-12 19:09:30 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
To perform the analysis, we need to identify the relevant tables and columns, along with potential conditions to filter and extract the required data.

**Relevant Tables and Columns:**

1. **`GITHUB_REPOS.SAMPLE_FILES`**
   - `"repo_name"`: To identify the repository name.
   - `"ref"`: The Git reference (e.g., branch or tag).
   - `"path"`: **Potential Usage**: Contains the file paths; used to filter files ending with `.py` or `.r`.
   - `"id"`: Unique identifier for the file; can be used to join with `SAMPLE_CONTENTS`.

2. **`GITHUB_REPOS.SAMPLE_CONTENTS`**
   - `"id"`: **Potential Usage**: File identifier; used to join with `SAMPLE_FILES` on `"id"`.
   - `"content"`: **Potential Usage**: Contains the actual file content; used to extract import statements.
   - `"binary"`: Indicates if the content is binary; used to filter out binary files.
   - `"sample_repo_name"`: Repository name; can be used for validation or additional filtering.

**Conditions That May Be Used:**

- Filter files ending with `.py` or `.r`:
  - `"path" LIKE '%.py'` or `"path" LIKE '%.r'`
- Exclude binary files:
  - `"binary" = FALSE`
- Join condition between tables:
  - `SAMPLE_FILES."id" = SAMPLE_CONTENTS."id"`

**SQL Queries:**

Below are 10 different SQL queries to understand the data and prepare for the analysis:

1. **List Python Files:**
   ```sql
   SELECT "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py'
   LIMIT 100;
   ```

2. **List R Files:**
   ```sql
   SELECT "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.r'
   LIMIT 100;
   ```

3. **Count of Python Files:**
   ```sql
   SELECT COUNT(*) AS "Python_File_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py';
   ```

4. **Sample Content of Python Files:**
   ```sql
   SELECT c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   LIMIT 100;
   ```

5. **Sample Content of R Files:**
   ```sql
   SELECT c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
   LIMIT 100;
   ```

6. **Distinct Python Import Lines:**
   ```sql
   SELECT DISTINCT REGEXP_SUBSTR(c."content", '(import\\s+\\w+|from\\s+\\w+\\s+import\\s+\\w+)', 1, 1, 'im') AS "Import_Line"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   LIMIT 100;
   ```

7. **Distinct R Library Calls:**
   ```sql
   SELECT DISTINCT REGEXP_SUBSTR(c."content", 'library\\s*\\(\\s*\\w+\\s*\\)', 1, 1, 'im') AS "Library_Call"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
   LIMIT 100;
   ```

8. **Count of Python Modules Imported:**
   ```sql
   SELECT REGEXP_REPLACE(REGEXP_SUBSTR(c."content", 'import\\s+(\\w+)', 1, 1, 'im'), 'import\\s+', '') AS "Module",
          COUNT(*) AS "Import_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   GROUP BY "Module"
   ORDER BY "Import_Count" DESC
   LIMIT 100;
   ```

9. **Count of R Libraries Used:**
   ```sql
   SELECT REGEXP_REPLACE(REGEXP_SUBSTR(c."content", 'library\\s*\\(\\s*(\\w+)\\s*\\)', 1, 1, 'im'), 'library\\s*\\(\\s*', '') AS "Library",
          COUNT(*) AS "Usage_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
   GROUP BY "Library"
   ORDER BY "Usage_Count" DESC
   LIMIT 100;
   ```

10. **Sample of Non-Binary Files with Size Information:**
    ```sql
    SELECT f."path", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE c."binary" = FALSE
    ORDER BY c."size" DESC
    LIMIT 100;
    ```

These queries help in understanding the data and preparing for the analysis. They cover:

- Filtering for specific file types (`.py`, `.r`).
- Joining `SAMPLE_FILES` and `SAMPLE_CONTENTS` on `"id"`.
- Extracting import statements using regular expressions.
- Counting the occurrences of imported modules or libraries.
- Ensuring only non-binary files are processed.

Note: In the absence of specific knowledge about the data's content or structure (e.g., how the `content` field is formatted), the regular expressions used in the queries may need adjustments based on actual data. Additionally, all column names are enclosed in double quotations as per Snowflake SQL syntax.Query:
SELECT "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py'
   LIMIT 100;
Answer:
Too long, hard cut:
path
push_notifications/migrations/0002_auto_20160106_0850.py
Maximum_Subarray/Python/shivam5992/kadane.py
Caesar_Cipher/Python/kennyledet/caesar_cipher.py
setup.py
pgcrypto_expressions/test/settings.py
ec2_security_groups_dumper/__init__.py
dirigible/info_pages/__init__.py
tests/python/tests/test_updatecollection.py
tests/testproject/settings.py
yandex_money/api.py
google/cloud/dataflow/utils/__init__.py
examples/Rest/ex20_get_ilo_nic.py
try/for_now.py
node_modules/node-sass/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py
vendor/distribute-0.6.36/easy_install.py
vendor/pip-1.3.1/pip/vcs/subversion.py
vendor/distribute-0.6.36/tests/install_test.py
testing/testing/unit_tests/__init__.py
src/__init__.py
image_cropping/utils.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/GenFds/FfsInfStatement.py
src/VBox/Additions/common/crOpenGL/stub_common.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/Ecc/CodeFragmentCollector.py
project/admin/__init__.py
examples/backend/myproject/myproject/wsgi.py
tools/perf/tests/attr.py
health_check_celery/tasks.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/lib/user_array.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/core/tests/test_multiarray_assignment.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/distutils/command/sdist.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/traversal/tests/test_dfs.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/bipartite/tests/test_matching.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/core/cversions.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/doc/howtofind.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/lib/tests/test__datasource.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/f2py/f2py2e.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/polynomial/laguerre.py
osx_build/nefi2_osx_amd64_xcode_2015/bin/nefi2/model/algorithms/invert_color.py
path.py
lib/gdata/tlslite/utils/PyCrypto_AES.py
servers/youtube.py
cloudify/manager.py
misc/webdriver-w3c-tests/cookie/cookie_test.py
Lessons/lesson15.py
layout_scanner.py
networkapiclient/UsuarioGrupo.py
networkapiclient/EnvironmentVIP.py
thirdparty/future/src/libfuturize/fixes/fix_print.py
third_party/catapult/third_party/Paste/paste/util/ip4.py
third_party/catapult/third_party/webtest/webtest/forms.py
tools/gyp/test/make_global_settings/full-toolchain/gyptest-make_global_settings.py
third_party/jinja2/compiler.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/file/__init__.py
content/test/gpu/gpu_tests/trace_test_expectations.py
tools/telemetry/telemetry/value/value_unittest.py
tools/perf/page_sets/page_reload_cases.py
third_party/jinja2/_compat.py
third_party/chromite/cbuildbot/stages/build_stages.py
third_party/chromite/lib/terminal.py
tools/telemetry/telemetry/internal/backends/mandoline/config.py
third_party/cython/src/Cython/Plex/Lexicons.py
tools/gyp/test/sanitize-rule-names/gyptest-sanitize-rule-names.py
tools/grit/grit/format/policy_templates/writers/xml_writer_base_unittest.py
third_party/google_appengine_cloudstorage/cloudstorage/common.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/cloudfront/distribution.py
chrome/app/theme/PRESUBMIT.py
tools/gyp/test/ios/gyptest-per-config-settings.py
tools/telemetry/third_party/gsutilz/third_party/apitools/apitools/base/py/buffered_stream_test.py
third_party/catapult/tracing/tracing_build/__init__.py
tools/telemetry/telemetry/internal/backends/chrome_inspector/inspector_page_unittest.py
build/android/pylib/local/__init__.py
native_client/tools/scons_to_gn/print_data.py
tools/memory_inspector/memory_inspector/backends/memdump_parser.py
third_party/catapult/hooks/__init__.py
tools/cr/cr/actions/linux.py
tools/swarming_client/third_party/rsa/rsa/transform.py
third_party/catapult/perf_insights/perf_insights/corpus_driver.py
tools/gyp/test/win/gyptest-link-enable-winrt.py
third_party/chromite/scripts/dep_tracker_unittest.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/datapipeline/layer1.py
third_party/catapult/tracing/third_party/tvcm/third_party/rcssmin/_setup/py3/setup.py
third_party/chromite/lib/patch.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/mws/__init__.py
tools/telemetry/third_party/modulegraph/modulegraph_tests/testpkg-edgedata/pkg/toplevel_conditional_import_existing.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/gs/bucketlistresultset.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/sqs/test_queue.py
buildtools/clang_format/script/clang-format.py
third_party/catapult/third_party/oauth2client/oauth2client/crypt.py
third_party/tlslite/tlslite/utils/cryptomath.py
tools/telemetry/third_party/gsutilz/gslib/addlhelp/projects.py
tools/deep_memory_profiler/subcommands/buckets.py
tools/telemetry/third_party/webpagereplay/dnsproxy.py
tools/chrome_proxy/integration_tests/__init__.py
third_party/cython/src/Cython/Pl
Query:
SELECT "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.r'
   LIMIT 100;
Answer:
path
data-prep/split-train-test.r
experimental/R/rapachetest.r
src/tools/make-os-ext.r
run-all.r
iRODS/clients/icommands/test/rules/rulemsiSetRescSortScheme.r
iRODS/clients/icommands/test/rules/testsuiteForLcov.r
qiime/support_files/R/randomforests_util.r
R/clonevol.r
ppapi/native_client/tests/ppapi_messaging/ppapi_messaging.r
jni/SDL_mixer/external/libmikmod-3.1.12/macintosh/libmikmodversion.r
R/when.r
inst/examples/test_performance/demo_allgather_spmd.r
inst/examples/test_cs/simple.server.r
books/all-of-statistics/=Rprograms/stockprice.r
Stochastic/Exercise1_1.r
src/tools/make-natives.r
R/tabledata.r
build_dir/toolchain-arm_v5te_gcc-linaro_uClibc-0.9.32_eabi/binutils-2.20.1/ld/testsuite/ld-powerpc/tlsexetoc.r
R/msssr2tc.r
binr/old.rarc2/t/loop.r
examples/PlotDailyData/plot-daily-data-using-stdin-barb-detailed-instrumentation.r
examples/consoleSource/source1.r
src/01.Opt.3 - Memory Management Functions.r
dbug/user.r
ld/testsuite/ld-arm/tls-gdesc.r
Query:
SELECT COUNT(*) AS "Python_File_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py';
Answer:
Python_File_Count
8963
Query:
SELECT c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   LIMIT 100;
Answer:
Too long, hard cut:
content
"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations

from corehq.sql_db.operations import RawSQLMigration

migrator = RawSQLMigration(('corehq', 'sql_proxy_accessors', 'sql_templates'), {
    'PL_PROXY_CLUSTER_NAME': settings.PL_PROXY_CLUSTER_NAME
})


class Migration(migrations.Migration):

    dependencies = [
        ('sql_proxy_accessors', '0005_rename_get_case_attachment_by_name'),
    ]

    operations = [
        migrator.get_migration('get_case_by_external_id.sql'),
    ]
"
"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only MAEC Packages are supported'

    # Merge the MAEC packages
    merged_package = merge_packages(parsed_documents)
    # Write the merged package to the output file
    merged_package.to_xml_file(output_file, {""https://github.com/MAECProject/python-maec"":""merged""})

def merge_packages(package_list, namespace = None):
    '''Merge a list of input MAEC Packages and return a merged Package instance.'''
    malware_subjects = []
    # Instantiate the ID generator class (for automatic ID generation)
    if not namespace:
        NS = Namespace(""https://github.com/MAECProject/python-maec"", ""merged"")
    else:
        NS = namespace
    maec.utils.set_id_namespace(NS)
    # Build the list of Malware Subjects
    for package in package_list:
        for malware_subject in package.malware_subjects:
            malware_subjects.append(malware_subject)
    # Merge the Malware Subjects
    merged_subjects = merge_malware_subjects(malware_subjects)
    # Merge the input namespace/schemaLocation dictionaries
    merged_namespaces = {}
    merged_schemalocations = {}
    for package in package_list:
        merged_namespaces.update(package.__input_namespaces__)
        merged_schemalocations.update(package.__input_schemalocations__)
    # Create a new Package with the merged Malware Subjects
    merged_package = Package()
    merged_package.malware_subjects = MalwareSubjectList(merged_subjects)
    merged_package.__input_namespaces__ = merged_namespaces
    merged_package.__input_schemalocations__ = merged_schemalocations
    return merged_package

def bin_malware_subjects(malware_subject_list, default_hash_type='md5'):
    '''Bin a list of Malware Subjects by hash
       Default = MD5
    '''
    binned_subjects = {}
    for malware_subject in malware_subject_list:
        mal_inst_obj = malware_subject.malware_instance_object_attributes
        if mal_inst_obj:
            obj_properties = mal_inst_obj.properties
            if obj_properties and obj_properties.hashes:
                for hash in obj_properties.hashes:
                    if hash.type_ and hash.simple_hash_value:
                        hash_type = ''
                        hash_value = ''
                        # Get the hash type
                        hash_type = str(hash.type_).lower()
                        # Get the hash value
                        hash_value = str(hash.simple_hash_value).lower()
                            
                        # Check the hash type and bin accordingly
                        if hash_type == default_hash_type:
                            if has
Query:
SELECT c."content"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%' OR f."path" ILIKE '%.r%'
LIMIT 100;
Answer:
Too long, hard cut:
content
"# Rekall Memory Forensics
#
# Copyright Digital Forensics Solutions.
# Copyright 2013 Google Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

__author__ = (""Andrew Case <atcuno@gmail.com>"",
              ""Michael Cohen <scudette@google.com>"")


from rekall.plugins.linux import common


class IOmem(common.LinuxPlugin):
    '''mimics /proc/iomem.'''

    __name = ""iomem""

    table_header = [
        dict(name=""Resource"", cname=""resource"", style=""address""),
        dict(name=""Start"", cname=""start"", style=""address""),
        dict(name=""End"", cname=""end"", style=""address""),
        dict(name=""Name"", cname=""name"", type=""TreeNode""),
    ]

    def GetResources(self):
        # Resources are organized in a tree structure.
        resource_tree_root = self.profile.get_constant_object(
            ""iomem_resource"", target=""resource"")

        seen = set()

        return self._GetResources(resource_tree_root, seen)

    def _GetResources(self, node, seen, depth=0):
        """"""Traverse the resource tree depth first.""""""
        if not node or node in seen:
            return

        seen.add(node)

        yield node, depth

        if node.child:
            for x in self._GetResources(node.child.deref(), seen, depth+1):
                yield x

        for sibling in node.walk_list(""sibling""):
            for x in self._GetResources(sibling, seen, depth):
                yield x


    def collect(self):
        for node, depth in self.GetResources():
            yield dict(
                resource=node,
                start=node.start,
                end=node.end,
                name=node.name.deref(),
                depth=depth)
"
"======================
Design and History FAQ
======================

Why does Python use indentation for grouping of statements?
-----------------------------------------------------------

Guido van Rossum believes that using indentation for grouping is extremely
elegant and contributes a lot to the clarity of the average Python program.
Most people learn to love this feature after a while.

Since there are no begin/end brackets there cannot be a disagreement between
grouping perceived by the parser and the human reader.  Occasionally C
programmers will encounter a fragment of code like this::

   if (x <= y)
           x++;
           y--;
   z++;

Only the ``x++`` statement is executed if the condition is true, but the
indentation leads you to believe otherwise.  Even experienced C programmers will
sometimes stare at it a long time wondering why ``y`` is being decremented even
for ``x > y``.

Because there are no begin/end brackets, Python is much less prone to
coding-style conflicts.  In C there are many different ways to place the braces.
If you're used to reading and writing code that uses one style, you will feel at
least slightly uneasy when reading (or being required to write) another style.

Many coding styles place begin/end brackets on a line by themselves.  This makes
programs considerably longer and wastes valuable screen space, making it harder
to get a good overview of a program.  Ideally, a function should fit on one
screen (say, 20-30 lines).  20 lines of Python can do a lot more work than 20
lines of C.  This is not solely due to the lack of begin/end brackets -- the
lack of declarations and the high-level data types are also responsible -- but
the indentation-based syntax certainly helps.


Why am I getting strange results with simple arithmetic operations?
-------------------------------------------------------------------

See the next question.


Why are floating-point calculations so inaccurate?
--------------------------------------------------

Users are often surprised by results like this::

    >>> 1.2 - 1.0
    0.19999999999999996

and think it is a bug in Python.  It's not.  This has little to do with Python,
and much more to do with how the underlying platform handles floating-point
numbers.

The :class:`float` type in CPython uses a C ``double`` for storage.  A
:class:`float` object's value is stored in binary floating-point with a fixed
precision (typically 53 bits) and Python uses C operations, which in turn rely
on the hardware implementation in the processor, to perform floating-point
operations. This means that as far as floating-
Query:
SELECT DISTINCT REGEXP_SUBSTR(c."content", '(import\\s+\\w+|from\\s+\\w+\\s+import\\s+\\w+)', 1, 1, 'im') AS "Import_Line"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   LIMIT 100;
Answer:
Import_Line
from diesel import quickstart
from copy import deepcopy
from __future__ import unicode_literals
import common
Query:
SELECT DISTINCT REGEXP_SUBSTR(c."content", '(import\s+\w+|from\s+\w+\s+import\s+\w+)', 1, 1, 'i') AS "Import_Line"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%'
LIMIT 100;
Answer:
Import_Line
""
Query:
SELECT REGEXP_REPLACE(REGEXP_SUBSTR(c."content", 'import\\s+(\\w+)', 1, 1, 'im'), 'import\\s+', '') AS "Module",
          COUNT(*) AS "Import_Count"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
     ON c."id" = f."id"
   WHERE f."path" LIKE '%.py' AND c."binary" = FALSE
   GROUP BY "Module"
   ORDER BY "Import_Count" DESC
   LIMIT 100;
Answer:
Module,Import_Count
unicode_literals,1
deepcopy,1
quickstart,1
common,1
Query:
SELECT REGEXP_REPLACE(
         REGEXP_SUBSTR(c."content", 'import\\s+(\\w+)', 1, 1, 'i'),
         'import\\s+', '') AS "Module",
       COUNT(*) AS "Import_Count"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
  ON c."id" = f."id"
WHERE f."path" ILIKE '%.py%'
GROUP BY "Module"
ORDER BY "Import_Count" DESC
LIMIT 100;
Answer:
Module,Import_Count
quickstart,1
deepcopy,1
unicode_literals,1
common,1
Query:
SELECT f."path", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE c."binary" = FALSE
    ORDER BY c."size" DESC
    LIMIT 100;
Answer:
Too long, hard cut:
path,size
test/bower_components/angular/angular.min.js.map,340629
dist/1.10.2/jquery-ajax-deprecated-dimensions-effects-offset-wrap.js,212374
Training Data For Question Retrieval/Yahoo Data/yahoo_answer/C1883Question.dat,207063
drivers/mmc/host/vub300.c,74229
dist/2.0.3/jquery-dimensions-sizzle.min.js,66557
ajax/libs/medium-editor/4.4.0/js/medium-editor.min.js,59410
Menda-Dark/gnome-shell/gnome-shell-no-crash.css,57968
dpdk-16.04/drivers/net/e1000/base/e1000_82571.c,57311
drivers/thermal/msm8974-tsens.c,52839
drivers/target/iscsi/iscsi_target_parameters.c,52369
drivers/target/iscsi/iscsi_target_parameters.c,52369
drivers/target/iscsi/iscsi_target_parameters.c,52369
src/C/libressl/libressl-2.0.0/include/openssl/ec.h,46312
recipes/linux/linux-2.6.30/calamari/defconfig,45092
drivers/net/ethernet/intel/igb/e1000_mac.c,40883
drivers/net/ethernet/intel/igb/e1000_mac.c,40883
drivers/net/ethernet/intel/igb/e1000_mac.c,40883
cpython/Doc/faq/design.rst,35823
ajax/libs/jqueryui/1.8.21/themes/vader/jquery-ui.css,33116
filer/locale/lt/LC_MESSAGES/django.po,32586
mayfield/branches/ilguXifs/src/tools/frhed/FRHED/Afxres.h,32525
js/loadxml.js,32258
tests/Fidelity/test262/suite/ch07/7.6/7.6-17.js.expected,31357
public/lib/pnotify-1.2.0/jquery.pnotify.js,31315
aws/glacier.rkt,29045
drivers/i2c/busses/i2c-mv64xxx.c,27802
locations-original-xml/GHFRK14DDU53RQQ.xml,26769
ice40ultra/hdl/top.vhd,26674
scripts/mod/mod-extract.c,25559
interface/mmal/core/mmal_component.c,25544
src/client/common/css/mixins.less,24469
po/sd.po,21065
code/server/sv_init.c,20707
include/opencv2/flann/autotuned_index.h,20607
include/external/libpng/pngstruct.h,20408
fs/xfs/xfs_itable.c,20030
fs/xfs/xfs_itable.c,20030
XenAdmin/Dialogs/Network/CertificateChangedDialog.resx,19279
vendor/endroid/qrcode/assets/data/qrvfr27.dat,15750
server/static/css/components/checkbox.css,15462
tools/sstrip/src/sstrip.c,13963
htdocs/societe/class/address.class.php,13870
mqtt/mqtt/mqtt_msg.c,13613
Rmd_files/sectionTexts/folkTheory.Rmd,12850
drivers/video/backlight/Kconfig,12532
libcilkrts/include/cilk/common.h,12478
maec/utils/merge.py,12077
src/compiler/expression/script_exprs.cpp,11322
arch/powerpc/platforms/cell/spider-pic.c,11093
Source/WebCore/platform/graphics/cairo/GraphicsContext3DCairo.cpp,10957
block/blk-mq-sysfs.c,10897
ajax/libs/jquery.tablesorter/2.17.7/js/widgets/widget-columnSelector.js,10853
docs/html/M_Accord_Statistics_Distributions_Univariate_LognormalDistribution__ctor_2.htm,10815
kernel/drivers/scsi/aic7xxx/aic79xx_proc.c,10544
drivers/scsi/aic7xxx/aic79xx_proc.c,10544
examples/Math-issue-309/src/mantissa/src/org/spaceroots/mantissa/algebra/PolynomialFraction.java,10388
drivers/infiniband/hw/amso1100/c2_cm.c,10235
drivers/infiniband/hw/amso1100/c2_cm.c,10235
slam_ext/external/g2o/trunk/g2o/core/estimate_propagator.cpp,10141
include/chajian/mailChajian.php,9906
arch/mips/kernel/scall64-64.S,9722
Documentation/zh_CN/email-clients.txt,9571
Documentation/zh_CN/email-clients.txt,9571
Documentation/zh_CN/email-clients.txt,9571
Documentation/zh_CN/email-clients.txt,9571
libs/MathJax/MathJax-2.3-latest/jax/output/HTML-CSS/fonts/Neo-Euler/fontdata.js,9565
build/js/rotatedIntervals/Ediacaran.json,9408
sdoc/tutorial/tutorial_ncbitaxonomy.rst,8789
docs/html/F_ZedGraph_LineItem__symbol.htm,8688
Birthday-Adapter/src/main/java/org/birthdayadapter/util/FragmentStatePagerAdapterV14.java,8592
engines/neverhood/menumodule.h,8445
drivers/md/dm-delay.c,8287
include/linux/debugfs.h,8022
fs/udf/misc.c,7881
modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/am/integration/tests/publisher/APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase.java,7320
deps/uv/docs/make.bat,6728
fs/xfs/xfs_discard.c,6577
src/taoensso/nippy/encryption.clj,6512
arch/m68k/include/asm/m68360_enet.h,6446
src/gwt/src/org/rstudio/studio/client/workbench/WorkbenchListManager.java,6244
BreadWallet/BreadWallet.xcdatamodeld/BreadWallet.xcdatamodel/contents,5904
bundles/jcr/jackrabbit-accessmanager/src/main/java/org/apache/sling/jcr/jackrabbit/accessmanager/post/DeleteAcesServlet.java,5817
dep/tbb/include/tbb/tbb_config.h,5762
util/src/test/java/org/killbill/billing/util/tag/api/TestDefaultTagUserApi.java,5635
Homeworks/ASP.NET MVC/03.ASP.NETMVCWorkingWithData/Twitter.Web/Scripts/kendo/cultures/kendo.culture.sr-Latn-RS.min.js,5446
Reflector/Nsurvey_BE/Votations.NSurvey.Data/NSurveyUserData.xsd,5239
arch/powerpc/include/asm/elf.h,5058
drivers/gpu/drm/radeon/si_reg.h,5036
docs/www/node98.html,4943
drivers/staging/fbtft/fbtft-sysfs.c,4842
backend/Simplicity/_demo/page-index.js,4813
src/qt/trafficgraphwidget.cpp,4765
include/linux/amba/pl080.h,4729
include/linux/amba/pl080.h,4729
src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java,4688
doc/gui/org/deidentifier/arx/gui/view/impl/menu/class-use/EditorCriterionRiskBased.html,4604
arch/sh/include/asm/ioctls.h,4482
arch/sh/include/asm/ioctls.h,4482
arch/sh/include/asm/ioctls.h,4482
include/linux/epm_adc.h,447
End Exploring Related Columns
Task: Can you analyze the joined data from github repos files and github_repos contents, focusing only on files ending with '.py' or '.r', then extract Python modules from 'import' or 'from ... import' lines and R libraries from 'library(...)' lines, count their occurrences, and finally list the results sorted by language and by the number of occurrences in descending order?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Language,Module_or_Library,Count
Python,module_name:str,count:int
Python,module_name:str,count:int
...
R,library_name:str,count:int
R,library_name:str,count:int
...
```

After analyzing the joined data from `GITHUB_REPOS.SAMPLE_FILES` and `GITHUB_REPOS.SAMPLE_CONTENTS`, focusing on files ending with `.py` (Python) and `.r` (R), we extracted Python modules from lines starting with `import` or `from ... import`, and R libraries from lines containing `library(...)`. We then counted the occurrences of each module or library. The results are listed above, sorted by language and the number of occurrences in descending order..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 19:10:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:10:36 - root - INFO - ```sql
SELECT "Language", "Module_or_Library", COUNT(*) AS "Count"
FROM (
    -- Extract Python modules
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*(?:import|from)\\s+(\\w+)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract R libraries
    SELECT 'R' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*library\\s*\\(\\s*(\\w+)\\s*\\)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
) AS modules
WHERE "Module_or_Library" IS NOT NULL AND "Module_or_Library" <> ''
GROUP BY "Language", "Module_or_Library"
ORDER BY "Language", "Count" DESC NULLS LAST;
```
2025-02-12 19:10:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:10:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:10:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:10:43 - snowflake.connector.connection - INFO - closed
2025-02-12 19:10:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:10:43 - root - INFO - itercount: 1
2025-02-12 19:10:43 - root - INFO - 100048 (2201B): 01ba595e-0004-9c12-0001-11c30111311e: Invalid regular expression: '^\s*(?:import|from)\s+(\w+)', no argument for repetition operator: ?
2025-02-12 19:10:43 - root - INFO - Input sql:
SELECT "Language", "Module_or_Library", COUNT(*) AS "Count"
FROM (
    -- Extract Python modules
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*(?:import|from)\\s+(\\w+)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract R libraries
    SELECT 'R' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*library\\s*\\(\\s*(\\w+)\\s*\\)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
) AS modules
WHERE "Module_or_Library" IS NOT NULL AND "Module_or_Library" <> ''
GROUP BY "Language", "Module_or_Library"
ORDER BY "Language", "Count" DESC NULLS LAST;
The error information is:
100048 (2201B): 01ba595e-0004-9c12-0001-11c30111311e: Invalid regular expression: '^\s*(?:import|from)\s+(\w+)', no argument for repetition operator: ?
Please correct it and output only 1 complete SQL query.
2025-02-12 19:11:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:11:13 - root - INFO - ```sql
SELECT "Language", "Module_or_Library", COUNT(*) AS "Count"
FROM (
    -- Extract Python 'import' statements
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*import\\s+(\\w+)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract Python 'from ... import' statements
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*from\\s+(\\w+)\\s+import\\s+', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract R libraries
    SELECT 'R' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*library\\s*\\(\\s*(\\w+)\\s*\\)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
) AS modules
WHERE "Module_or_Library" IS NOT NULL AND "Module_or_Library" <> ''
GROUP BY "Language", "Module_or_Library"
ORDER BY "Language", "Count" DESC NULLS LAST;
```
2025-02-12 19:11:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:11:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:11:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:11:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-02-12 19:11:15 - snowflake.connector.connection - INFO - closed
2025-02-12 19:11:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:11:15 - root - INFO - itercount: 2
2025-02-12 19:11:15 - root - INFO - 0
2025-02-12 19:11:15 - root - INFO - results: 
Language,Module_or_Library,Count
Python,maec,1
Python,time,1
Python,itertools,1
Python,mixbox,1
Python,copy,1
Python,diesel,1
Python,__future__,1


2025-02-12 19:11:15 - root - INFO - Please check the answer again by reviewing Can you analyze the joined data from github repos files and github_repos contents, focusing only on files ending with '.py' or '.r', then extract Python modules from 'import' or 'from ... import' lines and R libraries from 'library(...)' lines, count their occurrences, and finally list the results sorted by language and by the number of occurrences in descending order?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Language,Module_or_Library,Count
Python,module_name:str,count:int
Python,module_name:str,count:int
...
R,library_name:str,count:int
R,library_name:str,count:int
...
```

After analyzing the joined data from `GITHUB_REPOS.SAMPLE_FILES` and `GITHUB_REPOS.SAMPLE_CONTENTS`, focusing on files ending with `.py` (Python) and `.r` (R), we extracted Python modules from lines starting with `import` or `from ... import`, and R libraries from lines containing `library(...)`. We then counted the occurrences of each module or library. The results are listed above, sorted by language and the number of occurrences in descending order. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Language,Module_or_Library,Count
Python,maec,1
Python,time,1
Python,itertools,1
Python,mixbox,1
Python,copy,1
Python,diesel,1
Python,__future__,1
Current sql:
SELECT "Language", "Module_or_Library", COUNT(*) AS "Count"
FROM (
    -- Extract Python 'import' statements
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*import\\s+(\\w+)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract Python 'from ... import' statements
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*from\\s+(\\w+)\\s+import\\s+', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract R libraries
    SELECT 'R' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*library\\s*\\(\\s*(\\w+)\\s*\\)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
) AS modules
WHERE "Module_or_Library" IS NOT NULL AND "Module_or_Library" <> ''
GROUP BY "Language", "Module_or_Library"
ORDER BY "Language", "Count" DESC NULLS LAST;
2025-02-12 19:11:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:11:41 - root - INFO - ```sql
SELECT "Language", "Module_or_Library", COUNT(*) AS "Count"
FROM (
    -- Extract Python 'import' statements
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*import\\s+(\\w+)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract Python 'from ... import' statements
    SELECT 'Python' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*from\\s+(\\w+)\\s+import\\b', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.py' AND c."binary" = FALSE

    UNION ALL

    -- Extract R libraries
    SELECT 'R' AS "Language",
           REGEXP_SUBSTR(lines.value, '^\\s*library\\s*\\(\\s*(\\w+)\\s*\\)', 1, 1, 'i', 1) AS "Module_or_Library"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id",
         LATERAL FLATTEN(input => SPLIT(c."content", '\n')) AS lines
    WHERE f."path" LIKE '%.r' AND c."binary" = FALSE
) AS modules
WHERE "Module_or_Library" IS NOT NULL AND "Module_or_Library" <> ''
GROUP BY "Language", "Module_or_Library"
ORDER BY "Language", "Count" DESC NULLS LAST;
```
2025-02-12 19:11:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:11:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:11:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:11:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-02-12 19:11:43 - snowflake.connector.connection - INFO - closed
2025-02-12 19:11:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:11:44 - root - INFO - itercount: 3
2025-02-12 19:11:44 - root - INFO - 0
2025-02-12 19:11:44 - root - INFO - Total iteration counts: 3
