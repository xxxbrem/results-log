After comparing the two SQL queries and their results, the second SQL query `2result.sql` is the correct choice for the following reasons:

**1. Use of COUNT with CASE Statements:**

- **Efficiency and Clarity:** The second query uses `COUNT(CASE WHEN condition THEN 1 END)`, which counts the number of times the condition is true by counting non-NULL values. This method is efficient and semantically clear when the goal is to count occurrences that meet specific conditions.
- **Standard Practice:** Using `COUNT` with a `CASE` statement is a common and standard practice for counting conditional occurrences in SQL. It leverages SQL's handling of NULLs, where `COUNT` ignores NULL values, thus only counting records where the condition is true.

**2. Comparison with SUM Method in the First Query:**

- The first query `1result.sql` uses `SUM(CASE WHEN condition THEN 1 ELSE 0 END)`, which sums up 1s and 0s based on whether the condition is met.
- While both `SUM` with `CASE` and `COUNT` with `CASE` can yield the same numerical results in this context, using `COUNT` is generally more straightforward for counting purposes. It avoids potential issues with NULL values and is often more performant.

**3. Results Consistency:**

- Both queries produce the same results numerically, but `2result.sql` achieves this with a more concise and conventional approach.

**Conclusion:**

Given these reasons, `2result.sql` is the correct and preferred SQL query for calculating the number of active financial branch entities per state on the specified dates and determining the percentage change.

```plaintext
2result.sql
```