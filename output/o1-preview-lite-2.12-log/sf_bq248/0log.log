2025-02-12 18:49:56 - openai._base_client - INFO - Retrying request to /chat/completions in 0.449479 seconds
2025-02-12 18:50:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:50:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:50:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:50:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:50:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:50:56 - snowflake.connector.connection - INFO - closed
2025-02-12 18:50:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:50:56 - root - INFO - SQL:
-- Query 1: Retrieve repositories and their languages
SELECT "repo_name", "language"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
LIMIT 100;
Results:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]

2025-02-12 18:50:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:50:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:50:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:50:58 - snowflake.connector.connection - INFO - closed
2025-02-12 18:50:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:51:23 - root - INFO - The error you're encountering occurs because the `f.value` in your query is a JSON object (a VARIANT data type containing an object with "bytes" and "name" keys), and you're trying to cast it directly to a `NUMBER`. Specifically, `f.value` looks like `{"bytes":24665,"name":"Ruby"}`, which cannot be cast to a `NUMBER` directly.

**Understanding the Data Structure:**

- **"language" Column**: In the `LANGUAGES` table, the `"language"` column is a VARIANT type that contains a JSON object. Each key in this object is the name of a programming language, and the value is the number of bytes of code written in that language.
  
  However, based on the error message and the sample data you provided, it seems that the structure might be slightly different. Instead of being a simple key-value pair, the `"language"` column might contain an array of objects, each with `"name"` and `"bytes"` fields.

**Why the Error Occurs:**

- **Attempting to Cast an Object to NUMBER**: In your query, `f.value` is an object like `{"bytes":24665,"name":"Ruby"}`. When you use `f.value::NUMBER`, Snowflake attempts to cast the entire object to a number, which is not possible, resulting in the error: `Failed to cast variant value ... to FIXED`.

**Solution:**

To fix the error, you need to extract the `"bytes"` and `"name"` fields from the `f.value` object before casting:

- Use `f.value:"bytes"` to access the `"bytes"` field.
- Use `f.value:"name"` to access the `"name"` field.

**Corrected Query:**

```sql
SELECT
  "repo_name",
  f.value:"name"::STRING AS "language_name",
  f.value:"bytes"::NUMBER AS "bytes"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
     LATERAL FLATTEN(input => "language") f
LIMIT 100;
```

**Explanation:**

- **f.value:"name"::STRING**: Extracts the `"name"` field from `f.value` and casts it to `STRING`.
- **f.value:"bytes"::NUMBER**: Extracts the `"bytes"` field from `f.value` and casts it to `NUMBER`.

**Additional Considerations:**

- If the `"language"` column is an array of objects, you might need to adjust the `LATERAL FLATTEN` accordingly.

- If the `"language"` column is a JSON object where the keys are language names and values are byte counts, you can use:

  ```sql
  SELECT
    "repo_name",
    f.key::STRING AS "language_name",
    f.value::NUMBER AS "bytes"
  FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
       LATERAL FLATTEN(input => "language") f
  LIMIT 100;
  ```

  But since you're getting an error with this approach, it suggests that `f.value` is not directly the byte count but an object containing both `"name"` and `"bytes"`.

**Verification:**

To understand the structure of the `"language"` column, you can run a query to look at some sample data:

```sql
SELECT
  "repo_name",
  "language"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
WHERE "language" IS NOT NULL
LIMIT 10;
```

This will help you see how the data is structured and adjust your query accordingly.

**Alternative Approach:**

If the `"language"` column contains an array of language objects, you can use `LATERAL FLATTEN` with `input => "language"` and extract the fields from `f.value` as shown.

---

**Summary:**

- Use `f.value:"field_name"` to access specific fields within a VARIANT object.
- Ensure you're casting the correct data types when extracting fields.
- Adjust your query based on the actual structure of the data in the `"language"` column.

---

Feel free to run the corrected query, and let me know if you encounter any more issues or need further assistance!
2025-02-12 18:51:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:24 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:52:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:52:09 - root - INFO - SQL:
SELECT
  "repo_name",
  f.value:"name"::STRING AS "language_name",
  f.value:"bytes"::NUMBER AS "bytes"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
     LATERAL FLATTEN(input => "language") f
LIMIT 100;
Results:
repo_name,language_name,bytes
yyuu/antismoker,Ruby,24665
yyuu/antismoker,Shell,164
itakurara/gem_mamezo,Ruby,1994
itakurara/gem_mamezo,Shell,115
klriutsa/e_stat,Ruby,3585
klriutsa/e_stat,Shell,131
rmcfadzean/jekyll-codepen,Ruby,5232
rmcfadzean/jekyll-codepen,Shell,420
kitlangton/pessimist,Ruby,2329
kitlangton/pessimist,Shell,115
bjjb/ordu,Ruby,1715
bjjb/ordu,Shell,131
sajjadROR/extra_attributes_for_all_migration,Ruby,2578
sajjadROR/extra_attributes_for_all_migration,Shell,115
space-pirates-llc/quill-builder,Ruby,14983
space-pirates-llc/quill-builder,Shell,131
jt-platterz/slack_messenger,Ruby,7726
jt-platterz/slack_messenger,Shell,131
aquinofb/checkout,Ruby,13565
aquinofb/checkout,Shell,131
esender/ffaker,Ruby,301045
esender/ffaker,Shell,60
harshniketseta/marvels,Ruby,2172
harshniketseta/marvels,Shell,115
catalin-enache/ntk_dockerfile,Ruby,192
catalin-enache/ntk_dockerfile,Shell,182
chef/knife-linode,Ruby,40951
chef/knife-linode,Shell,455
qilab-/vagrant-cdh4.5,Ruby,662
qilab-/vagrant-cdh4.5,Shell,1229
carney520/crawler,Ruby,53286
carney520/crawler,Shell,115
alu0100789355/prct09,Ruby,21138
alu0100789355/prct09,Shell,115
ConPaaS-team/conpaas-docker-images,Ruby,412
ConPaaS-team/conpaas-docker-images,Shell,5403
dreamingechoes/bootstrap_sb_admin_base_v2,Ruby,1858
dreamingechoes/bootstrap_sb_admin_base_v2,Shell,115
wickles/homebrew-cask,Ruby,2140657
wickles/homebrew-cask,Shell,56584
pressable/chef-hipchat-cli,Ruby,5169
pressable/chef-hipchat-cli,Shell,2128
gnawhleinad/youtube,Ruby,29
gnawhleinad/youtube,Shell,1171
se3000/ruby-eth,Ruby,69565
se3000/ruby-eth,Shell,131
jayceeb/remote_syslog2-cookbook,Ruby,3392
jayceeb/remote_syslog2-cookbook,Shell,2109
cosmo0920/ansible-playbook-for-keter-deploy,Ruby,3250
cosmo0920/ansible-playbook-for-keter-deploy,Shell,316
egjiri/database_syncer,Ruby,3929
egjiri/database_syncer,Shell,115
can-explore/geojson_model,Ruby,8272
can-explore/geojson_model,Shell,115
yast/yast-storage-ng,Ruby,5753311
yast/yast-storage-ng,Shell,2203
alu0100611281/LPP_32_prct09,Ruby,10513
alu0100611281/LPP_32_prct09,Shell,115
obsidian-btc/http-commands,Ruby,22977
obsidian-btc/http-commands,Shell,2912
guttertec/vagrant-template,Ruby,124
guttertec/vagrant-template,Shell,0
altV/interleave,Ruby,2176
altV/interleave,Shell,131
phoet/memo-it,Ruby,9556
phoet/memo-it,Shell,131
dimko/carrierwave-jpegtran,Ruby,3917
dimko/carrierwave-jpegtran,Shell,66
kuldeepaggarwal/arel_extension,Ruby,6601
kuldeepaggarwal/arel_extension,Shell,115
nalabjp/mysql_import,Ruby,21440
nalabjp/mysql_import,Shell,290
marcojonker/test,Ruby,156103
marcojonker/test,Shell,1517
akuzko/parascope,Ruby,24482
akuzko/parascope,Shell,131
DivineDominion/zettel-outline-rendering,Ruby,20436
DivineDominion/zettel-outline-rendering,Shell,131
cyphactor/octopusci,Ruby,84848
cyphactor/octopusci,Shell,915
bogdan14x/d3raw,Ruby,11054
bogdan14x/d3raw,Shell,131
googleapis/ruby-spanner-activerecord,Ruby,695332
googleapis/ruby-spanner-activerecord,Shell,18145
arius/ispa-ruian,Ruby,12987
arius/ispa-ruian,Shell,131
rcarver/config,Ruby,303099
rcarver/config,Shell,10642
mikelorant/fragrance,Ruby,7491
mikelorant/fragrance,Shell,115
WebHostingCoopTeam/ldapdocker,Ruby,332
WebHostingCoopTeam/ldapdocker,Shell,535
pokowaka/wordament-solver,Ruby,7807
pokowaka/wordament-solver,Shell,115
Joe-noh/yaml_ref_resolver,Ruby,11006
Joe-noh/yaml_ref_resolver,Shell,131
mrcc87/switch_proxy,Ruby,7061
mrcc87/switch_proxy,Shell,131
niedhui/mongoid,Ruby,2516009
niedhui/mongoid,Shell,116

2025-02-12 18:52:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:52:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:52:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:52:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 18:52:10 - snowflake.connector.connection - INFO - closed
2025-02-12 18:52:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:52:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:52:41 - root - INFO - ```sql
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme%'
  AND c."content" ILIKE '%copyright%'
LIMIT 100;
```
2025-02-12 18:52:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:52:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:52:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:52:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:52:42 - snowflake.connector.connection - INFO - closed
2025-02-12 18:52:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:53:20 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:53:20 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme%'
  AND c."content" ILIKE '%copyright%'
LIMIT 100;
Results:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"

2025-02-12 18:53:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:53:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:53:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:53:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 18:53:21 - snowflake.connector.connection - INFO - closed
2025-02-12 18:53:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:53:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:53:40 - root - INFO - ```sql
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
LIMIT 100;
```
2025-02-12 18:53:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:53:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:53:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:53:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 14
2025-02-12 18:53:43 - snowflake.connector.connection - INFO - closed
2025-02-12 18:53:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:54:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:54:16 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,content
jissereitsma/media-manager-improvement,administrator/components/com_modules/views/modules/tmpl/default_batch_body.php,"<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_modules
 *
 * @copyright   Copyright (C) 2005 - 2015 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */

defined('_JEXEC') or die;

$clientId  = $this->state->get('filter.client_id');

// Show only Module Positions of published Templates
$published = 1;
$positions = JHtml::_('modules.positions', $clientId, $published);
$positions['']['items'][] = ModulesHelper::createOption('nochange', JText::_('COM_MODULES_BATCH_POSITION_NOCHANGE'));
$positions['']['items'][] = ModulesHelper::createOption('noposition', JText::_('COM_MODULES_BATCH_POSITION_NOPOSITION'));

// Add custom position to options
$customGroupText = JText::_('COM_MODULES_CUSTOM_POSITION');

// Build field
$attr = array(
	'id'        => 'batch-position-id',
	'list.attr' => 'class=""chzn-custom-value input-xlarge"" '
		. 'data-custom_group_text=""' . $customGroupText . '"" '
		. 'data-no_results_text=""' . JText::_('COM_MODULES_ADD_CUSTOM_POSITION') . '"" '
		. 'data-placeholder=""' . JText::_('COM_MODULES_TYPE_OR_SELECT_POSITION') . '"" '
);

?>

<p><?php echo JText::_('COM_MODULES_BATCH_TIP'); ?></p>
<div class=""row-fluid"">
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.language'); ?>
		</div>
	</div>
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.access'); ?>
		</div>
	</div>
</div>
<div class=""row-fluid"">
	<?php if ($published >= 0) : ?>
		<div class=""span6"">
			<div class=""controls"">
				<label id=""batch-choose-action-lbl"" for=""batch-choose-action"">
					<?php echo JText::_('COM_MODULES_BATCH_POSITION_LABEL'); ?>
				</label>
				<div id=""batch-choose-action"" class=""control-group"">
					<?php echo JHtml::_('select.groupedlist', $positions, 'batch[position_id]', $attr) ?>
					<div id=""batch-copy-move"" class=""control-group radio"">
						<?php echo JHtml::_('modules.batchOptions'); ?>
					</div>
				</div>
			</div>
		</div>
	<?php endif; ?>
</div>
"
CyanogenMod/android_kernel_samsung_jf,drivers/net/ethernet/intel/igb/e1000_mac.c,"/*******************************************************************************

  Intel(R) Gigabit Ethernet Linux driver
  Copyright(c) 2007-2012 Intel Corporation.

  This program is free software; you can redistribute it and/or modify it
  under the terms and conditions of the GNU General Public License,
  version 2, as published by the Free Software Foundation.

  This program is distributed in the hope it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  more details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.

  The full GNU General Public License is included in this distribution in
  the file called ""COPYING"".

  Contact Information:
  e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
  Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497

*******************************************************************************/

#include <linux/if_ether.h>
#include <linux/delay.h>
#include <linux/pci.h>
#include <linux/netdevice.h>
#include <linux/etherdevice.h>

#include ""e1000_mac.h""

#include ""igb.h""

static s32 igb_set_default_fc(struct e1000_hw *hw);
static s32 igb_set_fc_watermarks(struct e1000_hw *hw);

/**
 *  igb_get_bus_info_pcie - Get PCIe bus information
 *  @hw: pointer to the HW structure
 *
 *  Determines and stores the system bus information for a particular
 *  network interface.  The following bus information is determined and stored:
 *  bus speed, bus width, type (PCIe), and PCIe function.
 **/
s32 igb_get_bus_info_pcie(struct e1000_hw *hw)
{
	struct e1000_bus_info *bus = &hw->bus;
	s32 ret_val;
	u32 reg;
	u16 pcie_link_status;

	bus->type = e1000_bus_type_pci_express;

	ret_val = igb_read_pcie_cap_reg(hw,
					PCI_EXP_LNKSTA,
					&pcie_link_status);
	if (ret_val) {
		bus->width = e1000_bus_width_unknown;
		bus->speed = e1000_bus_speed_unknown;
	} else {
		switch (pcie_link_status & PCI_EXP_LNKSTA_CLS) {
		case PCI_EXP_LNKSTA_CLS_2_5GB:
			bus->speed = e1000_bus_speed_2500;
			break;
		case PCI_EXP_LNKSTA_CLS_5_0GB:
			bus->speed = e1000_bus_speed_5000;
			break;
		default:
			bus->speed = e1000_bus_speed_unknown;
			break;
		}

		bus->width = (enum e1000_bus_width)((pcie_link_status &
						     PCI_EXP_LNKSTA_NLW) >>
						     PCI_EXP_LNKSTA_NLW_SHIFT);
	}

	reg = rd32(E1000_STATUS);
	bus->func = (reg & E1000_STATUS_FUNC_MASK) >> E1000_STATUS_FUNC_SHIFT;

	return 0;
}

/**
 *  ig

2025-02-12 18:54:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:54:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:54:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:54:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:54:17 - snowflake.connector.connection - INFO - closed
2025-02-12 18:54:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:54:18 - root - INFO - SQL:
-- Query 5: Retrieve files whose paths include 'readme.md'
SELECT "repo_name", "path", "id"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
WHERE "path" ILIKE '%readme.md%'
LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,id
hatajoe/github-notification-gopherjs,GitHub-Notification-GopherJS-darwin-x64/GitHub-Notification-GopherJS.app/Contents/Resources/app/node_modules/octonode/node_modules/request/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/README.md,4d2aa001501107cd2792f385ad62237dc3757521
itsthejb/ObjcAssociatedObjectHelpers,README.md,b618db0b7811ca2f6619bf52cbb5532cad0152c9
jdhoek/inkscape-isometric-projection,README.md,a770e8d8ad235d5d18238b8e6f854f4285e7e6fd
lechinoix/Pcap-visualization-project,PcapFiles/ReadMe.md~,3f2f855d9439826e819ae4e3499c00d9c7e896c7
lydell/json-stringify-pretty-compact,readme.md,6f850c7a63700e8151a5050d876525336d045534
notlose/react-native-spring-carousel,node_modules/react-native-spring-carousel/node_modules/rebound/README.md,82deabcfa3147a218589ec7cd7f97ff82d560618
onopko/compass-h5bp-codekit-barebone,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/node-sass/node_modules/meow/node_modules/camelcase-keys/node_modules/map-obj/readme.md,fee03d900caa47b424e9f0b6aa402bb684b63ad5
onopko/compass-h5bp-codekit-barebone,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/less/node_modules/request/README.md,799811370137fec9198ff405c87e5dae1015b3b6
rubis-lab/Vehicle-Dynamics-Simulator,README.md,55c2bb25869a537821a990c4ed9ae44800278fbf
sasha-travkina/humhub-themes-flathub,README.md,a5306f0674ee08fbd9d11405d6c948c5d1b5b5bd
sebarmeli/JS-Redirection-Mobile-Site,node_modules/grunt/node_modules/dateformat/Readme.md,d469e6d780b51653f7f075f25af1ecd5343796a8
seibelj/react-simple-markdown-editor,README.md,a28f4b750eb3c7dd98b194ea5bb11b630688285e
sensu-plugins/sensu-plugins-graphite,README.md,b05d5509d58d19b3d9e50b764287c06b2aca41d6
smartytwiti/master-chat-node-angular,node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/debug/Readme.md,e59b9adae9c90c4f4a7e68ec46e8da717385302b
ConnectSDK/Connect-SDK-Cordova-Plugin,scripts/node_modules/request/node_modules/forever-agent/README.md,9d5b66343c4e917ad1600b7656dbd2f4112ed8aa
DealerDotCom/terraform-provider-bigip,vendor/github.com/bgentry/speakeasy/Readme.md,fceda7518ce4187c57b2b62173faca19a3b87d58
Esri/arcobjects-sdk-community-samples,Net/Editing/PointsAlongLine/Readme.md,f02bbb73e25ed8e53441a14b687093572e4fa578
Esri/arcobjects-sdk-community-samples,Net/Raster/DMCIIRasterType/Readme.md,d15134448c42ec0556c3a109b9b53f32de56c883
EsriCanada-CE/ecce-app-challenge-2016,SpatialCOGnition/BuildingResilience/resources/lib/ckeditor/skins/moono/readme.md,bfa45d7e2dae5923b79283e3c7a53043fc976a22
FlorianBrett/MQTT-Home-Automation-Hub,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/string_decoder/README.md,4d2aa001501107cd2792f385ad62237dc3757521
FlorianBrett/MQTT-Home-Automation-Hub,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/gauge/node_modules/lodash.padend/README.md,ac84987849bf1ad18ceb4c18fb9b22688c5d3502
Marketcloud/ionic-marketcloud-starter,www/lib/angular-sanitize/README.md,b84aaf6dbf1c1632e4c947b1d7565585466a93e5
MrMatthias/BackgroundDrawingAttribute,README.md,52f2609b34906459fd26624f03208690d5be74ae
TheBrazillianForgersTeam/DynamicCraft,README.md,91cd27804709bd143cd38169aa312cfbcedeed7a
XueSeason/Generate-QRCode-BarCode-iOS,VMC/node_modules/body-parser/node_modules/http-errors/node_modules/inherits/README.md,b1c56658557b8162aa9f5ba8610ed03a5e558d9d
cornflourblue/angular-reverse-geocode,README.md,5280b54f10c8243759d9af783d7f755acc9b604d
daigofuji/jekyll-foundation-5-starter,node_modules/grunt/node_modules/minimatch/README.md,978268e275e8ef007abdd77b22948aaa84d706e4
daigofuji/jekyll-foundation-5-starter,node_modules/node-sass/node_modules/sass-graph/node_modules/yargs/node_modules/cliui/node_modules/center-align/README.md,44cb6f2455b54e68acf2ff2745e78d465b8e9a33
hypriot/image-builder-nvidia-shieldtv,builder/test-integration/README.md,66b1f37620a8c97cd082228244cef8699b9052ce
jboss-developer/jboss-wfk-quickstarts,kitchensink-rf/README.md,734df3f65e94a0d49bfd836e7e39c32a0a61ed2c
joeaudette/cloudscribe.Web.Pagination,README.md,25235e9882621163af1506609ee4b3d0667c5925
jonashackt/spring-boot-starter-drools,README.md,8162ab9237a3594b9333ad8f66741ea03fb17ebc
mvalleavila/Kafka-Spark-Hbase-Example,README.md,1772612cb962058a3699037ad3a163ea4b6b7269
ojongerius/terraform-provider-datadog,vendor/github.com/cenkalti/backoff/README.md,020b8fbf339e9d986701fc1fda9c95fb06dfc252
oldnewthing/Windows-universal-samples,Samples/PasswordVault/README.md,1c0a8ee379df3beb9b308d855091c4aa7f94af76
pantheon-systems/quicksilver-examples,jira_integration/README.md,135c28beaff68d14f22481e929449e8e38463a02
patriciogonzalezvivo/thebookofshaders,glossary/README.md,4499de51bf4c36414508218f81690d2474900d38
pavelvlasov/koa-generic-session-mongo,README.md,2495e981b52d9229452486a36dbb9054b33967ec
shekhargulati/52-technologies-in-2016,READ

2025-02-12 18:54:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:54:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:54:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:54:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 18:54:19 - snowflake.connector.connection - INFO - closed
2025-02-12 18:54:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:55:13 - root - INFO - ```sql
SELECT f."repo_name", f."path"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
LIMIT 100;
```
2025-02-12 18:55:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:55:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:55:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:55:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:55:14 - snowflake.connector.connection - INFO - closed
2025-02-12 18:55:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:55:44 - root - INFO - SQL:
SELECT f."repo_name", f."path"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
LIMIT 100;
Results:
Too long, hard cut:
repo_name,path
np/ling,fixtures/strict-par-success/fun1_to_proc_par2.ll
np/ling,tests/failure/wrong_order_par_seq_middle.t/wrong_order_par_seq_middle.ll
np/ling,fixtures/strict-par-success/layout_case.ll
np/ling,fixtures/strict-par-success/merger_loli_Sort.ll
np/ling,fixtures/failure/infer_recv.ll
np/ling,fixtures/strict-par-success/parallel_assoc_tensor3_flat.ll
np/ling,fixtures/strict-par-failure/ten_loli_par.ll
np/ling,fixtures/compile/my_loli.ll
np/ling,fixtures/failure/dead_lock_tensor2_tensor2.ll
np/ling,fixtures/sequence/par_ten_ten_v1.ll
np/ling,tests/failure/reusedParChannel.t/reusedParChannel.ll
ello/Moya,Demo/Pods/Headers/Private/ReactiveCocoa/ReactiveCocoa/RACSerialDisposable.h
ello/Moya,Demo/Pods/Headers/Private/ReactiveCocoa/UISlider+RACSignalSupport.h
seL4/seL4,libsel4/tools/xmllint.sh
sni/Thruk,themes/themes-available/Vautour/images/logo_thruk_mid.png
NREL/SOWFA,applications/solvers/incompressible/windEnergy/pisoFoamTurbine/Make/options
NREL/SOWFA,applications/solvers/incompressible/windEnergy/windPlantSolver/pEqn.H
jordic/k8s,cloudsqlip/Godeps/_workspace/src/github.com/prometheus/procfs/fixtures/26232/fd/1
szaghi/OFF,examples/2D/two_dimensional_riemann_problems/kt-c03/off/OFF
xemul/criu,test/zdtm/static/mntns_root_bind02.c
artsy/eigen,fastlane/metadata/fr-FR/marketing_url.txt
bing6/CNode,Pods/Headers/Private/CocoaLumberjack/DDContextFilterLogFormatter.h
bing6/CNode,Pods/Headers/Private/SVGKit/SVGKParserStyles.h
bing6/CNode,Pods/Headers/Public/SVGKit/SVGLength.h
bing6/CNode,Pods/Headers/Public/KSRefresh/UIScrollView+KS.h
bing6/CNode,Pods/Headers/Private/FMDB/FMDatabasePool.h
dokku/dokku,plugins/20_events/post-build-dockerfile
fs/ios-base,Pods/Headers/Public/KIF/CGGeometry-KIFAdditions.h
google/caja,third_party/java/jetty/lib/jetty-servlet.jar
hgyhei/GYWy,GYnews/Pods/Headers/Public/Masonry/MASConstraintMaker.h
holocm/holo,test/05-diff/source/etc/symlink-modified.conf
iovisor/bcc,examples/networking/neighbor_sharing/simulation.py
raquo/hnapp,static/js/native.history.js
smarr/SOMns,fast
BaiduCC/BGCC,deps/openssl/include/openssl/ui_compat.h
CubLinux/dev,icons/CubLinux/actions/22/gnome-logout.png
CubLinux/dev,icons/CubLinux/actions/16/window_new.png
CubLinux/dev,icons/CubLinux/status/22/gpm-battery-040.png
CubLinux/dev,icons/CubLinux/status/Scalable/notification-gpm-battery-020.svg
CubLinux/dev,icons/CubLinux/status/48/battery_two_thirds.png
CubLinux/dev,icons/CubLinux/places/128/gnome-fs-dav.png
CubLinux/dev,icons/CubLinux/actions/22/rhythmbox-set-star.png
CubLinux/dev,icons/CubLinux/places/128/gnome-fs-smb.png
CubLinux/dev,icons/CubLinux/actions/22/gtk-find-and-replace.png
CubLinux/dev,icons/CubLinux/actions/22/filesave.png
CubLinux/dev,icons/CubLinux/actions/24/back.png
CubLinux/dev,icons/chromiumos/cursors/sailboat
CubLinux/dev,icons/CubLinux/status/96/ac-adapter.png
CubLinux/dev,icons/CubLinux/stock/64/stock_person-panel.png
CubLinux/dev,icons/CubLinux/places/96/folder-images.png
CubLinux/dev,icons/CubLinux/actions/24/rotate.png
CubLinux/dev,icons/CubLinux/status/22/battery-good-charging-symbolic.png
CubLinux/dev,icons/CubLinux/status/128/notification-battery-020.png
CubLinux/dev,icons/CubLinux/actions/16/stock_search.png
CubLinux/dev,icons/CubLinux/actions/22/gtk-properties.png
CubLinux/dev,icons/CubLinux/places/scalable/gnome-fs-directory-accept.svg
CubLinux/one,Debian Packages/chromiumos-cursor-theme/extract/usr/share/icons/chromiumos/cursors/hand1
GLChan/rekaz,rekaz/Zaker-C/Pods/Headers/Public/SDWebImage/SDWebImageManager.h
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/apps/kig.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/status/dialog-error.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/actions/edit-cut.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/actions/system-shutdown.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/devices/audio-input-microphone.png
MLGZ/PopMenu,PopMenu/Pods/Headers/Private/pop/POPAnimationRuntime.h
Novartis/yap,bin/yap_summary_call
apsavin/bnsf,test-apps/test-app-with-history-fallback/libs
chaos/lustre,build/prepare-commit-msg
jeaye/stdman,man/std::wfstream::close.3
jeaye/stdman,"man/std::u32string::rend,std::basic_string::crend.3"
jeaye/stdman,"man/std::wstreambuf::pubimbue,std::basic_streambuf::imbue.3"
madre/devops,node_modules/html-webpack-plugin/node_modules/html-minifier/node_modules/.bin/uglifyjs
mzhaom/trunk,third_party/openssl/linux-x86_64/include/openssl/ecdsa.h
teamVCH/sway,Pods/Headers/Private/FBSDKCoreKit/FBSDKUtility.h
teamVCH/sway,Pods/Headers/Public/ParseTwitterUtils/PF_Twitter.h
teamVCH/sway,Pods/Headers/Private/FBSDKCoreKit/FBSDKMutableCopying.h
teamVCH/sway,Pods/Headers/Private/Parse/PFURLSessionDataTaskDelegate.h
teamVCH/sway,Pods/Headers/Private/Parse/PFRESTObjectBatchCommand.h
teamVCH/sway,Pods/Headers/Private/Parse/PFErrorUtilities.h
teamVCH/sway,Pods/Headers/Private/Parse/PFPushUtilities.h
teamVCH/sway,Pods/Headers/Private/ParseFacebookUtilsV4/PFFacebookUtils.h
teamVCH/sway,Pods/Head

2025-02-12 18:55:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:55:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:55:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:55:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 18:55:48 - snowflake.connector.connection - INFO - closed
2025-02-12 18:55:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:49 - root - INFO - SQL:
-- Query 7: Find files whose contents include 'Copyright (c)'
SELECT "id", "content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
WHERE "content" ILIKE '%copyright (c)%'
LIMIT 100;
Results:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;

2025-02-12 18:55:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:55:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:55:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:55:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 18:55:51 - snowflake.connector.connection - INFO - closed
2025-02-12 18:55:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:52 - root - INFO - SQL:
-- Query 8: Join SAMPLE_FILES and SAMPLE_CONTENTS on 'id' to get file paths and contents
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,content
jissereitsma/media-manager-improvement,administrator/components/com_modules/views/modules/tmpl/default_batch_body.php,"<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_modules
 *
 * @copyright   Copyright (C) 2005 - 2015 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */

defined('_JEXEC') or die;

$clientId  = $this->state->get('filter.client_id');

// Show only Module Positions of published Templates
$published = 1;
$positions = JHtml::_('modules.positions', $clientId, $published);
$positions['']['items'][] = ModulesHelper::createOption('nochange', JText::_('COM_MODULES_BATCH_POSITION_NOCHANGE'));
$positions['']['items'][] = ModulesHelper::createOption('noposition', JText::_('COM_MODULES_BATCH_POSITION_NOPOSITION'));

// Add custom position to options
$customGroupText = JText::_('COM_MODULES_CUSTOM_POSITION');

// Build field
$attr = array(
	'id'        => 'batch-position-id',
	'list.attr' => 'class=""chzn-custom-value input-xlarge"" '
		. 'data-custom_group_text=""' . $customGroupText . '"" '
		. 'data-no_results_text=""' . JText::_('COM_MODULES_ADD_CUSTOM_POSITION') . '"" '
		. 'data-placeholder=""' . JText::_('COM_MODULES_TYPE_OR_SELECT_POSITION') . '"" '
);

?>

<p><?php echo JText::_('COM_MODULES_BATCH_TIP'); ?></p>
<div class=""row-fluid"">
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.language'); ?>
		</div>
	</div>
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.access'); ?>
		</div>
	</div>
</div>
<div class=""row-fluid"">
	<?php if ($published >= 0) : ?>
		<div class=""span6"">
			<div class=""controls"">
				<label id=""batch-choose-action-lbl"" for=""batch-choose-action"">
					<?php echo JText::_('COM_MODULES_BATCH_POSITION_LABEL'); ?>
				</label>
				<div id=""batch-choose-action"" class=""control-group"">
					<?php echo JHtml::_('select.groupedlist', $positions, 'batch[position_id]', $attr) ?>
					<div id=""batch-copy-move"" class=""control-group radio"">
						<?php echo JHtml::_('modules.batchOptions'); ?>
					</div>
				</div>
			</div>
		</div>
	<?php endif; ?>
</div>
"
CyanogenMod/android_kernel_samsung_jf,drivers/net/ethernet/intel/igb/e1000_mac.c,"/*******************************************************************************

  Intel(R) Gigabit Ethernet Linux driver
  Copyright(c) 2007-2012 Intel Corporation.

  This program is free software; you can redistribute it and/or modify it
  under the terms and conditions of the GNU General Public License,
  version 2, as published by the Free Software Foundation.

  This program is distributed in the hope it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  more details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.

  The full GNU General Public License is included in this distribution in
  the file called ""COPYING"".

  Contact Information:
  e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
  Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497

*******************************************************************************/

#include <linux/if_ether.h>
#include <linux/delay.h>
#include <linux/pci.h>
#include <linux/netdevice.h>
#include <linux/etherdevice.h>

#include ""e1000_mac.h""

#include ""igb.h""

static s32 igb_set_default_fc(struct e1000_hw *hw);
static s32 igb_set_fc_watermarks(struct e1000_hw *hw);

/**
 *  igb_get_bus_info_pcie - Get PCIe bus information
 *  @hw: pointer to the HW structure
 *
 *  Determines and stores the system bus information for a particular
 *  network interface.  The following bus information is determined and stored:
 *  bus speed, bus width, type (PCIe), and PCIe function.
 **/
s32 igb_get_bus_info_pcie(struct e1000_hw *hw)
{
	struct e1000_bus_info *bus = &hw->bus;
	s32 ret_val;
	u32 reg;
	u16 pcie_link_status;

	bus->type = e1000_bus_type_pci_express;

	ret_val = igb_read_pcie_cap_reg(hw,
					PCI_EXP_LNKSTA,
					&pcie_link_status);
	if (ret_val) {
		bus->width = e1000_bus_width_unknown;
		bus->speed = e1000_bus_speed_unknown;
	} else {
		switch (pcie_link_status & PCI_EXP_LNKSTA_CLS) {
		case PCI_EXP_LNKSTA_CLS_2_5GB:
			bus->speed = e1000_bus_speed_2500;
			break;
		case PCI_EXP_LNKSTA_CLS_5_0GB:
			bus->speed = e1000_bus_speed_5000;
			break;
		default:
			bus->speed = e1000_bus_speed_unknown;
			break;
		}

		bus->width = (enum e1000_bus_width)((pcie_link_status &
						     PCI_EXP_LNKSTA_NLW) >>
						     PCI_EXP_LNKSTA_NLW_SHIFT);
	}

	reg = rd32(E1000_STATUS);
	bus->func = (reg & E1000_STATUS_FUNC_MASK) >> E1000_STATUS_FUNC_SHIFT;

	return 0;
}

/**
 *  ig

2025-02-12 18:55:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:55:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:55:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:55:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 18:55:53 - snowflake.connector.connection - INFO - closed
2025-02-12 18:55:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:54 - root - INFO - SQL:
-- Query 9: Find files whose paths include 'readme.md' and get their contents
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme.md%'
LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,content
DaMSL/K3,tools/scripts/docker/README.md,"K3 Dockerfiles
==========

Dockerfiles are updated for three images:

1. **k3-app** -- (~250MB) light-weight image to run a K3 program. Based on debian:jessie. It contains only the necessary dependency libraries.
2. **k3-compiler** -- (~2 GB) Image containing the GHC and GCC tool chains to compile a K3 program to binary. Based on debian:jessie
3. **k3-dev** (~2.5 GB)  -- Larger container with additional library and application support (e.g. clang, ruby, vim, and others). It is based on debian:sid

To build an image use the following command:

```
docker build -f k3-dev -t damsl/k3-dev:<your_tag> .
```

(Note: Docker build now has the -f option, so you don't have to call all docker files, ""Dockerfile"")

The image ```damsl/k3-dev:vanilla``` which is pushed to the repo contains the K3 source built with no options. Feel free to pull, use, & re-build K3 with whatever options necessary (and re-push with a new tag if needed).

The other scripts in here are left for legacy purposes.

Build Dependency Versions:
<pre>
  - GHC: 7.10.1
  - GCC: 4.9.2
  - Boost: 1.57
  - Mesos: 0.22.1</pre>
"
rgardler/azure-quickstart-templates,emercoin-ubuntu/README.md,"# Emercoin Instance

This Microsoft Azure template deploys a single Emercoin client which will connect to the public Emercoin network.

[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json)
<a href=""http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json"" target=""_blank"">
    <img src=""http://armviz.io/visualizebutton.png""/>
</a>

Once your deployment is complete you will be able to connect to the Emercoin public network.

![Emercoin-Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/emercoin-ubuntu/images/emercoin.png)

# Template Parameters
When you launch the installation of the VM, you need to specify the following parameters:
* `vmDnsPrefix`: this is the public DNS name for the VM that you will use interact with your console. You just need to specify an unique name.
* `adminUsername`: self-explanatory. This is the account you will use for connecting to the node
* `adminPassword`: self-explanatory. Be aware that Azure requires passwords to have One upper case, one lower case, a special character, and a number
* `vmSize`: The type of VM that you want to use for the node. The default size is D1_v2 but you can change that if you expect to run workloads that require more RAM or CPU resources.

# Emercoin Deployment Walkthrough
1. Get your node's IP
 1. browse to https://portal.azure.com

 2. then click browse all, followed by ""resource groups"", and choose your resource group

 3. then expand your resources, and public ip address of your node.

2. Connect to your node
 1. SSH to the public ip of your node as the user you specified for `adminUsername`, enter your `adminPassword`
 2. Try to use the cli-client by `emc help` or `emc getinfo`
 3. Point your browser to the public ip of your node, sign in with `adminUsername` and `adminPassword` specified before (note that browser may show you a warning of bad certificate - it's OK, you may replace the self-signed certificates by yours at /etc/ssl/emc/emcweb*)
"
briancavalier/todomvc-fab,examples/cujo/bower_components/curl/src/curl/plugin/README.md,"curl.js loader plugins
===

Please see the wiki for information about using plugins.  If you're interested
in creating your own plugins, please check out the Plugin Author's Guide
on the wiki (TBD).

All of these plugins conform to the AMD specification.  However, that
doesn't necessarily mean that they'll work with other AMD loaders or
builders.  Until the build-time API of AMD is finalized, there will be
incompatibilities.

Modules that should work with any loader/builder:

async!
domReady!
js!
link!

TODO:

json! (auto-detects xdomain and uses JSON-P)
"
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of y

2025-02-12 18:55:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:55:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:55:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:55:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 14
2025-02-12 18:55:57 - snowflake.connector.connection - INFO - closed
2025-02-12 18:55:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:57 - root - INFO - SQL:
-- Query 10: Find files whose contents include 'Copyright (c)' and get their paths
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE c."content" ILIKE '%copyright (c)%'
LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,content
AdrianDC/android_kernel_sony_msm8960t,fs/xfs/xfs_itable.c,"/*
 * Copyright (c) 2000-2002,2005 Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it would be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write the Free Software Foundation,
 * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
#include ""xfs.h""
#include ""xfs_fs.h""
#include ""xfs_types.h""
#include ""xfs_bit.h""
#include ""xfs_log.h""
#include ""xfs_inum.h""
#include ""xfs_trans.h""
#include ""xfs_sb.h""
#include ""xfs_ag.h""
#include ""xfs_mount.h""
#include ""xfs_bmap_btree.h""
#include ""xfs_alloc_btree.h""
#include ""xfs_ialloc_btree.h""
#include ""xfs_dinode.h""
#include ""xfs_inode.h""
#include ""xfs_ialloc.h""
#include ""xfs_itable.h""
#include ""xfs_error.h""
#include ""xfs_btree.h""
#include ""xfs_trace.h""

STATIC int
xfs_internal_inum(
	xfs_mount_t	*mp,
	xfs_ino_t	ino)
{
	return (ino == mp->m_sb.sb_rbmino || ino == mp->m_sb.sb_rsumino ||
		(xfs_sb_version_hasquota(&mp->m_sb) &&
		 (ino == mp->m_sb.sb_uquotino || ino == mp->m_sb.sb_gquotino)));
}

/*
 * Return stat information for one inode.
 * Return 0 if ok, else errno.
 */
int
xfs_bulkstat_one_int(
	struct xfs_mount	*mp,		/* mount point for filesystem */
	xfs_ino_t		ino,		/* inode to get data for */
	void __user		*buffer,	/* buffer to place output in */
	int			ubsize,		/* size of buffer */
	bulkstat_one_fmt_pf	formatter,	/* formatter, copy to user */
	int			*ubused,	/* bytes used by me */
	int			*stat)		/* BULKSTAT_RV_... */
{
	struct xfs_icdinode	*dic;		/* dinode core info pointer */
	struct xfs_inode	*ip;		/* incore inode pointer */
	struct xfs_bstat	*buf;		/* return buffer */
	int			error = 0;	/* error value */

	*stat = BULKSTAT_RV_NOTHING;

	if (!buffer || xfs_internal_inum(mp, ino))
		return XFS_ERROR(EINVAL);

	buf = kmem_alloc(sizeof(*buf), KM_SLEEP | KM_MAYFAIL);
	if (!buf)
		return XFS_ERROR(ENOMEM);

	error = xfs_iget(mp, NULL, ino,
			 (XFS_IGET_DONTCACHE | XFS_IGET_UNTRUSTED),
			 XFS_ILOCK_SHARED, &ip);
	if (error) {
		*stat = BULKSTAT_RV_NOTHING;
		goto out_free;
	}

	ASSERT(ip != NULL);
	ASSERT(ip->i_imap.im_blkno != 0);

	dic = &ip->i_d;

	/* xfs_iget returns the following without needing
	 * further change.
	 */
	buf->bs_nlink = dic->di_nlink;
	buf->bs_projid_lo = dic->di_projid_lo;
	buf->bs_projid_hi = dic->di_projid_hi;
	buf->bs_ino = ino;
	buf->bs_mode = dic->di_mode;
	buf->bs_uid = dic->di_uid;
	buf->bs_gid = dic->di_gid;
	buf->bs_size = dic->di_size;
	buf->bs_atime.tv_sec = dic->di_atime.t_sec;
	buf->bs_atime.tv_nsec = dic->di_atime.t_nsec;
	buf->bs_mtime.tv_sec = dic->di_mtime.t_sec;
	buf->bs_mtime.tv_nsec = dic->di_mtime.t_nsec;
	buf->bs_ctime.tv_sec = dic->di_ctime.t_sec;
	buf->bs_ctime.tv_nsec = dic->di_ctime.t_nsec;
	buf->bs_xflags = xfs_ip2xflags(ip);
	buf->bs_extsize = dic->di_extsize << mp->m_sb.sb_blocklog;
	buf->bs_extents = dic->di_nextents;
	buf->bs_gen = dic->di_gen;
	memset(buf->bs_pad, 0, sizeof(buf->bs_pad));
	buf->bs_dmevmask = dic->di_dmevmask;
	buf->bs_dmstate = dic->di_dmstate;
	buf->bs_aextents = dic->di_anextents;
	buf->bs_forkoff = XFS_IFORK_BOFF(ip);

	switch (dic->di_format) {
	case XFS_DINODE_FMT_DEV:
		buf->bs_rdev = ip->i_df.if_u2.if_rdev;
		buf->bs_blksize = BLKDEV_IOSIZE;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_LOCAL:
	case XFS_DINODE_FMT_UUID:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_EXTENTS:
	case XFS_DINODE_FMT_BTREE:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = dic->di_nblocks + ip->i_delayed_blks;
		break;
	}
	xfs_iunlock(ip, XFS_ILOCK_SHARED);
	IRELE(ip);

	error = formatter(buffer, ubsize, ubused, buf);

	if (!error)
		*stat = BULKSTAT_RV_DIDONE;

 out_free:
	kmem_free(buf);
	return error;
}

/* Return 0 on success or positive error */
STATIC int
xfs_bulkstat_one_fmt(
	void			__user *ubuffer,
	int			ubsize,
	int			*ubused,
	const xfs_bstat_t	*buffer)
{
	if (ubsize < sizeof(*buffer))
		return XFS_ERROR(ENOMEM);
	if (copy_to_user(ubuffer, buffer, sizeof(*buffer)))
		return XFS_ERROR(EFAULT);
	if (ubused)
		*ubused = sizeof(*buffer);
	return 0;
}

int
xfs_bulkstat_one(
	xfs_mount_t	*mp,		/* mount point for filesystem */
	xfs_ino_t	ino,		/* inode number to get data for */
	void		__user *buffer,	/* buffer to place output in */
	int		ubsize,		/* size of buffer */
	int		*ubused,	/* bytes used by me */
	int		*stat)		/* BULKSTAT_RV_... */
{
	return xfs_bulkstat_one_int(mp, ino, buffer, ubsize,
				   

2025-02-12 18:55:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:55:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:55:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:55:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:55:58 - snowflake.connector.connection - INFO - closed
2025-02-12 18:55:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:55:59 - root - INFO - SQL:
-- Query 11: Find files whose paths include 'readme.md' and contents include 'Copyright (c)'
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme.md%'
  AND c."content" ILIKE '%copyright (c)%'
LIMIT 100;
Results:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"

2025-02-12 18:55:59 - root - INFO - itercount: 0
2025-02-12 18:55:59 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
**Columns and Potential Usage:**

- **LANGUAGES**
  - `"repo_name"`: Used to identify repositories.
  - `"language"`: VARIANT column containing programming languages used in each repository.
    - *Potential Usage*: To retrieve programming languages associated with each repository.
    - *Condition*: Exclude repositories that use any programming language whose name includes "python" (case-insensitive).

- **SAMPLE_FILES**
  - `"repo_name"`: Identifies the repository the file belongs to.
  - `"path"`: The file's path within the repository.
    - *Potential Usage*: To find files whose paths include "readme.md" (case-insensitive).
  - `"id"`: Unique identifier for the file.
    - *Potential Usage*: To join with the `SAMPLE_CONTENTS` table to access file contents.

- **SAMPLE_CONTENTS**
  - `"id"`: Unique file identifier; used to join with `SAMPLE_FILES`.
  - `"content"`: The contents of the file.
    - *Potential Usage*: To search for files containing the phrase "Copyright (c)" (case-insensitive).

**Conditions That May Be Used:**

- Repositories **not** using any programming language whose name includes "python" (case-insensitive).
- Files whose `"path"` includes "readme.md" (case-insensitive).
- Files whose `"content"` contains the phrase "Copyright (c)" (case-insensitive).

---

**SQL Queries:**

```sql
-- Query 1: Retrieve repositories and their languages
SELECT "repo_name", "language"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
LIMIT 100;
```

```sql
-- Query 2: Extract individual languages from the VARIANT "language" column
SELECT "repo_name", f.key::STRING AS "language_name", f.value::NUMBER AS "bytes"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
     LATERAL FLATTEN(input => "language") f
LIMIT 100;
```

```sql
-- Query 3: List repositories that use a language containing 'python'
SELECT DISTINCT "repo_name"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
     LATERAL FLATTEN(input => "language") f
WHERE f.key::STRING ILIKE '%python%'
LIMIT 100;
```

```sql
-- Query 4: List repositories and languages excluding those with 'python' in the language name
SELECT DISTINCT "repo_name", f.key::STRING AS "language_name"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
     LATERAL FLATTEN(input => "language") f
WHERE f.key::STRING NOT ILIKE '%python%'
LIMIT 100;
```

```sql
-- Query 5: Retrieve files whose paths include 'readme.md'
SELECT "repo_name", "path", "id"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
WHERE "path" ILIKE '%readme.md%'
LIMIT 100;
```

```sql
-- Query 6: Get contents of files with specific IDs from SAMPLE_CONTENTS
SELECT "id", "content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
WHERE "id" IN ('example_id1', 'example_id2')
LIMIT 100;
```

```sql
-- Query 7: Find files whose contents include 'Copyright (c)'
SELECT "id", "content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
WHERE "content" ILIKE '%copyright (c)%'
LIMIT 100;
```

```sql
-- Query 8: Join SAMPLE_FILES and SAMPLE_CONTENTS on 'id' to get file paths and contents
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
LIMIT 100;
```

```sql
-- Query 9: Find files whose paths include 'readme.md' and get their contents
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme.md%'
LIMIT 100;
```

```sql
-- Query 10: Find files whose contents include 'Copyright (c)' and get their paths
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE c."content" ILIKE '%copyright (c)%'
LIMIT 100;
```

```sql
-- Query 11: Find files whose paths include 'readme.md' and contents include 'Copyright (c)'
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme.md%'
  AND c."content" ILIKE '%copyright (c)%'
LIMIT 100;
```

---

These queries are designed to explore the relevant tables and columns to understand the data needed to solve the task. Each query serves a different purpose:

- **Queries 1-4**: Examine repositories and their programming languages to identify those that do or do not use languages containing "python".
- **Queries 5 & 9**: Retrieve files with paths including "readme.md".
- **Queries 6 & 7**: Retrieve file contents, specifically those containing "Copyright (c)".
- **Queries 8, 10, & 11**: Join `SAMPLE_FILES` and `SAMPLE_CONTENTS` to associate file paths with contents and apply combined conditions.

All column names are enclosed in double quotations as required, and the queries adhere to the guidelines provided.Query:
-- Query 1: Retrieve repositories and their languages
SELECT "repo_name", "language"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
LIMIT 100;
Answer:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]
Query:
SELECT
  "repo_name",
  f.value:"name"::STRING AS "language_name",
  f.value:"bytes"::NUMBER AS "bytes"
FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
     LATERAL FLATTEN(input => "language") f
LIMIT 100;
Answer:
repo_name,language_name,bytes
yyuu/antismoker,Ruby,24665
yyuu/antismoker,Shell,164
itakurara/gem_mamezo,Ruby,1994
itakurara/gem_mamezo,Shell,115
klriutsa/e_stat,Ruby,3585
klriutsa/e_stat,Shell,131
rmcfadzean/jekyll-codepen,Ruby,5232
rmcfadzean/jekyll-codepen,Shell,420
kitlangton/pessimist,Ruby,2329
kitlangton/pessimist,Shell,115
bjjb/ordu,Ruby,1715
bjjb/ordu,Shell,131
sajjadROR/extra_attributes_for_all_migration,Ruby,2578
sajjadROR/extra_attributes_for_all_migration,Shell,115
space-pirates-llc/quill-builder,Ruby,14983
space-pirates-llc/quill-builder,Shell,131
jt-platterz/slack_messenger,Ruby,7726
jt-platterz/slack_messenger,Shell,131
aquinofb/checkout,Ruby,13565
aquinofb/checkout,Shell,131
esender/ffaker,Ruby,301045
esender/ffaker,Shell,60
harshniketseta/marvels,Ruby,2172
harshniketseta/marvels,Shell,115
catalin-enache/ntk_dockerfile,Ruby,192
catalin-enache/ntk_dockerfile,Shell,182
chef/knife-linode,Ruby,40951
chef/knife-linode,Shell,455
qilab-/vagrant-cdh4.5,Ruby,662
qilab-/vagrant-cdh4.5,Shell,1229
carney520/crawler,Ruby,53286
carney520/crawler,Shell,115
alu0100789355/prct09,Ruby,21138
alu0100789355/prct09,Shell,115
ConPaaS-team/conpaas-docker-images,Ruby,412
ConPaaS-team/conpaas-docker-images,Shell,5403
dreamingechoes/bootstrap_sb_admin_base_v2,Ruby,1858
dreamingechoes/bootstrap_sb_admin_base_v2,Shell,115
wickles/homebrew-cask,Ruby,2140657
wickles/homebrew-cask,Shell,56584
pressable/chef-hipchat-cli,Ruby,5169
pressable/chef-hipchat-cli,Shell,2128
gnawhleinad/youtube,Ruby,29
gnawhleinad/youtube,Shell,1171
se3000/ruby-eth,Ruby,69565
se3000/ruby-eth,Shell,131
jayceeb/remote_syslog2-cookbook,Ruby,3392
jayceeb/remote_syslog2-cookbook,Shell,2109
cosmo0920/ansible-playbook-for-keter-deploy,Ruby,3250
cosmo0920/ansible-playbook-for-keter-deploy,Shell,316
egjiri/database_syncer,Ruby,3929
egjiri/database_syncer,Shell,115
can-explore/geojson_model,Ruby,8272
can-explore/geojson_model,Shell,115
yast/yast-storage-ng,Ruby,5753311
yast/yast-storage-ng,Shell,2203
alu0100611281/LPP_32_prct09,Ruby,10513
alu0100611281/LPP_32_prct09,Shell,115
obsidian-btc/http-commands,Ruby,22977
obsidian-btc/http-commands,Shell,2912
guttertec/vagrant-template,Ruby,124
guttertec/vagrant-template,Shell,0
altV/interleave,Ruby,2176
altV/interleave,Shell,131
phoet/memo-it,Ruby,9556
phoet/memo-it,Shell,131
dimko/carrierwave-jpegtran,Ruby,3917
dimko/carrierwave-jpegtran,Shell,66
kuldeepaggarwal/arel_extension,Ruby,6601
kuldeepaggarwal/arel_extension,Shell,115
nalabjp/mysql_import,Ruby,21440
nalabjp/mysql_import,Shell,290
marcojonker/test,Ruby,156103
marcojonker/test,Shell,1517
akuzko/parascope,Ruby,24482
akuzko/parascope,Shell,131
DivineDominion/zettel-outline-rendering,Ruby,20436
DivineDominion/zettel-outline-rendering,Shell,131
cyphactor/octopusci,Ruby,84848
cyphactor/octopusci,Shell,915
bogdan14x/d3raw,Ruby,11054
bogdan14x/d3raw,Shell,131
googleapis/ruby-spanner-activerecord,Ruby,695332
googleapis/ruby-spanner-activerecord,Shell,18145
arius/ispa-ruian,Ruby,12987
arius/ispa-ruian,Shell,131
rcarver/config,Ruby,303099
rcarver/config,Shell,10642
mikelorant/fragrance,Ruby,7491
mikelorant/fragrance,Shell,115
WebHostingCoopTeam/ldapdocker,Ruby,332
WebHostingCoopTeam/ldapdocker,Shell,535
pokowaka/wordament-solver,Ruby,7807
pokowaka/wordament-solver,Shell,115
Joe-noh/yaml_ref_resolver,Ruby,11006
Joe-noh/yaml_ref_resolver,Shell,131
mrcc87/switch_proxy,Ruby,7061
mrcc87/switch_proxy,Shell,131
niedhui/mongoid,Ruby,2516009
niedhui/mongoid,Shell,116
Query:
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme%'
  AND c."content" ILIKE '%copyright%'
LIMIT 100;
Answer:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"
Query:
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,content
jissereitsma/media-manager-improvement,administrator/components/com_modules/views/modules/tmpl/default_batch_body.php,"<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_modules
 *
 * @copyright   Copyright (C) 2005 - 2015 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */

defined('_JEXEC') or die;

$clientId  = $this->state->get('filter.client_id');

// Show only Module Positions of published Templates
$published = 1;
$positions = JHtml::_('modules.positions', $clientId, $published);
$positions['']['items'][] = ModulesHelper::createOption('nochange', JText::_('COM_MODULES_BATCH_POSITION_NOCHANGE'));
$positions['']['items'][] = ModulesHelper::createOption('noposition', JText::_('COM_MODULES_BATCH_POSITION_NOPOSITION'));

// Add custom position to options
$customGroupText = JText::_('COM_MODULES_CUSTOM_POSITION');

// Build field
$attr = array(
	'id'        => 'batch-position-id',
	'list.attr' => 'class=""chzn-custom-value input-xlarge"" '
		. 'data-custom_group_text=""' . $customGroupText . '"" '
		. 'data-no_results_text=""' . JText::_('COM_MODULES_ADD_CUSTOM_POSITION') . '"" '
		. 'data-placeholder=""' . JText::_('COM_MODULES_TYPE_OR_SELECT_POSITION') . '"" '
);

?>

<p><?php echo JText::_('COM_MODULES_BATCH_TIP'); ?></p>
<div class=""row-fluid"">
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.language'); ?>
		</div>
	</div>
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.access'); ?>
		</div>
	</div>
</div>
<div class=""row-fluid"">
	<?php if ($published >= 0) : ?>
		<div class=""span6"">
			<div class=""controls"">
				<label id=""batch-choose-action-lbl"" for=""batch-choose-action"">
					<?php echo JText::_('COM_MODULES_BATCH_POSITION_LABEL'); ?>
				</label>
				<div id=""batch-choose-action"" class=""control-group"">
					<?php echo JHtml::_('select.groupedlist', $positions, 'batch[position_id]', $attr) ?>
					<div id=""batch-copy-move"" class=""control-group radio"">
						<?php echo JHtml::_('modules.batchOptions'); ?>
					</div>
				</div>
			</div>
		</div>
	<?php endif; ?>
</div>
"
CyanogenMod/android_kernel_samsung_jf,drivers/net/ethernet/intel/igb/e1000_mac.c,"/*******************************************************************************

  Intel(R) Gigabit Ethernet Linux driver
  Copyright(c) 2007-2012 Intel Corporation.

  This program is free software; you can redistribute it and/or modify it
  under the terms and conditions of the GNU General Public License,
  version 2, as published by the Free Software Foundation.

  This program is distributed in the hope it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  more details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.

  The full GNU General Public License is included in this distribution in
  the file called ""COPYING"".

  Contact Information:
  e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
  Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497

*******************************************************************************/

#include <linux/if_ether.h>
#include <linux/delay.h>
#include <linux/pci.h>
#include <linux/netdevice.h>
#include <linux/etherdevice.h>

#include ""e1000_mac.h""

#include ""igb.h""

static s32 igb_set_default_fc(struct e1000_hw *hw);
static s32 igb_set_fc_watermarks(struct e1000_hw *hw);

/**
 *  igb_get_bus_info_pcie - Get PCIe bus information
 *  @hw: pointer to the HW structure
 *
 *  Determines and stores the system bus information for a particular
 *  network interface.  The following bus information is determined and stored:
 *  bus speed, bus width, type (PCIe), and PCIe function.
 **/
s32 igb_get_bus_info_pcie(struct e1000_hw *hw)
{
	struct e1000_bus_info *bus = &hw->bus;
	s32 ret_val;
	u32 reg;
	u16 pcie_link_status;

	bus->type = e1000_bus_type_pci_express;

	ret_val = igb_read_pcie_cap_reg(hw,
					PCI_EXP_LNKSTA,
					&pcie_link_status);
	if (ret_val) {
		bus->width = e1000_bus_width_unknown;
		bus->speed = e1000_bus_speed_unknown;
	} else {
		switch (pcie_link_status & PCI_EXP_LNKSTA_CLS) {
		case PCI_EXP_LNKSTA_CLS_2_5GB:
			bus->speed = e1000_bus_speed_2500;
			break;
		case PCI_EXP_LNKSTA_CLS_5_0GB:
			bus->speed = e1000_bus_speed_5000;
			break;
		default:
			bus->speed = e1000_bus_speed_unknown;
			break;
		}

		bus->width = (enum e1000_bus_width)((pcie_link_status &
						     PCI_EXP_LNKSTA_NLW) >>
						     PCI_EXP_LNKSTA_NLW_SHIFT);
	}

	reg = rd32(E1000_STATUS);
	bus->func = (reg & E1000_STATUS_FUNC_MASK) >> E1000_STATUS_FUNC_SHIFT;

	return 0;
}

/**
 *  ig
Query:
-- Query 5: Retrieve files whose paths include 'readme.md'
SELECT "repo_name", "path", "id"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
WHERE "path" ILIKE '%readme.md%'
LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,id
hatajoe/github-notification-gopherjs,GitHub-Notification-GopherJS-darwin-x64/GitHub-Notification-GopherJS.app/Contents/Resources/app/node_modules/octonode/node_modules/request/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/README.md,4d2aa001501107cd2792f385ad62237dc3757521
itsthejb/ObjcAssociatedObjectHelpers,README.md,b618db0b7811ca2f6619bf52cbb5532cad0152c9
jdhoek/inkscape-isometric-projection,README.md,a770e8d8ad235d5d18238b8e6f854f4285e7e6fd
lechinoix/Pcap-visualization-project,PcapFiles/ReadMe.md~,3f2f855d9439826e819ae4e3499c00d9c7e896c7
lydell/json-stringify-pretty-compact,readme.md,6f850c7a63700e8151a5050d876525336d045534
notlose/react-native-spring-carousel,node_modules/react-native-spring-carousel/node_modules/rebound/README.md,82deabcfa3147a218589ec7cd7f97ff82d560618
onopko/compass-h5bp-codekit-barebone,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/node-sass/node_modules/meow/node_modules/camelcase-keys/node_modules/map-obj/readme.md,fee03d900caa47b424e9f0b6aa402bb684b63ad5
onopko/compass-h5bp-codekit-barebone,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/less/node_modules/request/README.md,799811370137fec9198ff405c87e5dae1015b3b6
rubis-lab/Vehicle-Dynamics-Simulator,README.md,55c2bb25869a537821a990c4ed9ae44800278fbf
sasha-travkina/humhub-themes-flathub,README.md,a5306f0674ee08fbd9d11405d6c948c5d1b5b5bd
sebarmeli/JS-Redirection-Mobile-Site,node_modules/grunt/node_modules/dateformat/Readme.md,d469e6d780b51653f7f075f25af1ecd5343796a8
seibelj/react-simple-markdown-editor,README.md,a28f4b750eb3c7dd98b194ea5bb11b630688285e
sensu-plugins/sensu-plugins-graphite,README.md,b05d5509d58d19b3d9e50b764287c06b2aca41d6
smartytwiti/master-chat-node-angular,node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/debug/Readme.md,e59b9adae9c90c4f4a7e68ec46e8da717385302b
ConnectSDK/Connect-SDK-Cordova-Plugin,scripts/node_modules/request/node_modules/forever-agent/README.md,9d5b66343c4e917ad1600b7656dbd2f4112ed8aa
DealerDotCom/terraform-provider-bigip,vendor/github.com/bgentry/speakeasy/Readme.md,fceda7518ce4187c57b2b62173faca19a3b87d58
Esri/arcobjects-sdk-community-samples,Net/Editing/PointsAlongLine/Readme.md,f02bbb73e25ed8e53441a14b687093572e4fa578
Esri/arcobjects-sdk-community-samples,Net/Raster/DMCIIRasterType/Readme.md,d15134448c42ec0556c3a109b9b53f32de56c883
EsriCanada-CE/ecce-app-challenge-2016,SpatialCOGnition/BuildingResilience/resources/lib/ckeditor/skins/moono/readme.md,bfa45d7e2dae5923b79283e3c7a53043fc976a22
FlorianBrett/MQTT-Home-Automation-Hub,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/string_decoder/README.md,4d2aa001501107cd2792f385ad62237dc3757521
FlorianBrett/MQTT-Home-Automation-Hub,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/gauge/node_modules/lodash.padend/README.md,ac84987849bf1ad18ceb4c18fb9b22688c5d3502
Marketcloud/ionic-marketcloud-starter,www/lib/angular-sanitize/README.md,b84aaf6dbf1c1632e4c947b1d7565585466a93e5
MrMatthias/BackgroundDrawingAttribute,README.md,52f2609b34906459fd26624f03208690d5be74ae
TheBrazillianForgersTeam/DynamicCraft,README.md,91cd27804709bd143cd38169aa312cfbcedeed7a
XueSeason/Generate-QRCode-BarCode-iOS,VMC/node_modules/body-parser/node_modules/http-errors/node_modules/inherits/README.md,b1c56658557b8162aa9f5ba8610ed03a5e558d9d
cornflourblue/angular-reverse-geocode,README.md,5280b54f10c8243759d9af783d7f755acc9b604d
daigofuji/jekyll-foundation-5-starter,node_modules/grunt/node_modules/minimatch/README.md,978268e275e8ef007abdd77b22948aaa84d706e4
daigofuji/jekyll-foundation-5-starter,node_modules/node-sass/node_modules/sass-graph/node_modules/yargs/node_modules/cliui/node_modules/center-align/README.md,44cb6f2455b54e68acf2ff2745e78d465b8e9a33
hypriot/image-builder-nvidia-shieldtv,builder/test-integration/README.md,66b1f37620a8c97cd082228244cef8699b9052ce
jboss-developer/jboss-wfk-quickstarts,kitchensink-rf/README.md,734df3f65e94a0d49bfd836e7e39c32a0a61ed2c
joeaudette/cloudscribe.Web.Pagination,README.md,25235e9882621163af1506609ee4b3d0667c5925
jonashackt/spring-boot-starter-drools,README.md,8162ab9237a3594b9333ad8f66741ea03fb17ebc
mvalleavila/Kafka-Spark-Hbase-Example,README.md,1772612cb962058a3699037ad3a163ea4b6b7269
ojongerius/terraform-provider-datadog,vendor/github.com/cenkalti/backoff/README.md,020b8fbf339e9d986701fc1fda9c95fb06dfc252
oldnewthing/Windows-universal-samples,Samples/PasswordVault/README.md,1c0a8ee379df3beb9b308d855091c4aa7f94af76
pantheon-systems/quicksilver-examples,jira_integration/README.md,135c28beaff68d14f22481e929449e8e38463a02
patriciogonzalezvivo/thebookofshaders,glossary/README.md,4499de51bf4c36414508218f81690d2474900d38
pavelvlasov/koa-generic-session-mongo,README.md,2495e981b52d9229452486a36dbb9054b33967ec
shekhargulati/52-technologies-in-2016,READ
Query:
SELECT f."repo_name", f."path"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path
np/ling,fixtures/strict-par-success/fun1_to_proc_par2.ll
np/ling,tests/failure/wrong_order_par_seq_middle.t/wrong_order_par_seq_middle.ll
np/ling,fixtures/strict-par-success/layout_case.ll
np/ling,fixtures/strict-par-success/merger_loli_Sort.ll
np/ling,fixtures/failure/infer_recv.ll
np/ling,fixtures/strict-par-success/parallel_assoc_tensor3_flat.ll
np/ling,fixtures/strict-par-failure/ten_loli_par.ll
np/ling,fixtures/compile/my_loli.ll
np/ling,fixtures/failure/dead_lock_tensor2_tensor2.ll
np/ling,fixtures/sequence/par_ten_ten_v1.ll
np/ling,tests/failure/reusedParChannel.t/reusedParChannel.ll
ello/Moya,Demo/Pods/Headers/Private/ReactiveCocoa/ReactiveCocoa/RACSerialDisposable.h
ello/Moya,Demo/Pods/Headers/Private/ReactiveCocoa/UISlider+RACSignalSupport.h
seL4/seL4,libsel4/tools/xmllint.sh
sni/Thruk,themes/themes-available/Vautour/images/logo_thruk_mid.png
NREL/SOWFA,applications/solvers/incompressible/windEnergy/pisoFoamTurbine/Make/options
NREL/SOWFA,applications/solvers/incompressible/windEnergy/windPlantSolver/pEqn.H
jordic/k8s,cloudsqlip/Godeps/_workspace/src/github.com/prometheus/procfs/fixtures/26232/fd/1
szaghi/OFF,examples/2D/two_dimensional_riemann_problems/kt-c03/off/OFF
xemul/criu,test/zdtm/static/mntns_root_bind02.c
artsy/eigen,fastlane/metadata/fr-FR/marketing_url.txt
bing6/CNode,Pods/Headers/Private/CocoaLumberjack/DDContextFilterLogFormatter.h
bing6/CNode,Pods/Headers/Private/SVGKit/SVGKParserStyles.h
bing6/CNode,Pods/Headers/Public/SVGKit/SVGLength.h
bing6/CNode,Pods/Headers/Public/KSRefresh/UIScrollView+KS.h
bing6/CNode,Pods/Headers/Private/FMDB/FMDatabasePool.h
dokku/dokku,plugins/20_events/post-build-dockerfile
fs/ios-base,Pods/Headers/Public/KIF/CGGeometry-KIFAdditions.h
google/caja,third_party/java/jetty/lib/jetty-servlet.jar
hgyhei/GYWy,GYnews/Pods/Headers/Public/Masonry/MASConstraintMaker.h
holocm/holo,test/05-diff/source/etc/symlink-modified.conf
iovisor/bcc,examples/networking/neighbor_sharing/simulation.py
raquo/hnapp,static/js/native.history.js
smarr/SOMns,fast
BaiduCC/BGCC,deps/openssl/include/openssl/ui_compat.h
CubLinux/dev,icons/CubLinux/actions/22/gnome-logout.png
CubLinux/dev,icons/CubLinux/actions/16/window_new.png
CubLinux/dev,icons/CubLinux/status/22/gpm-battery-040.png
CubLinux/dev,icons/CubLinux/status/Scalable/notification-gpm-battery-020.svg
CubLinux/dev,icons/CubLinux/status/48/battery_two_thirds.png
CubLinux/dev,icons/CubLinux/places/128/gnome-fs-dav.png
CubLinux/dev,icons/CubLinux/actions/22/rhythmbox-set-star.png
CubLinux/dev,icons/CubLinux/places/128/gnome-fs-smb.png
CubLinux/dev,icons/CubLinux/actions/22/gtk-find-and-replace.png
CubLinux/dev,icons/CubLinux/actions/22/filesave.png
CubLinux/dev,icons/CubLinux/actions/24/back.png
CubLinux/dev,icons/chromiumos/cursors/sailboat
CubLinux/dev,icons/CubLinux/status/96/ac-adapter.png
CubLinux/dev,icons/CubLinux/stock/64/stock_person-panel.png
CubLinux/dev,icons/CubLinux/places/96/folder-images.png
CubLinux/dev,icons/CubLinux/actions/24/rotate.png
CubLinux/dev,icons/CubLinux/status/22/battery-good-charging-symbolic.png
CubLinux/dev,icons/CubLinux/status/128/notification-battery-020.png
CubLinux/dev,icons/CubLinux/actions/16/stock_search.png
CubLinux/dev,icons/CubLinux/actions/22/gtk-properties.png
CubLinux/dev,icons/CubLinux/places/scalable/gnome-fs-directory-accept.svg
CubLinux/one,Debian Packages/chromiumos-cursor-theme/extract/usr/share/icons/chromiumos/cursors/hand1
GLChan/rekaz,rekaz/Zaker-C/Pods/Headers/Public/SDWebImage/SDWebImageManager.h
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/apps/kig.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/status/dialog-error.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/actions/edit-cut.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/actions/system-shutdown.png
Lerc/notanos,notanos/system/data/icons/buuf_watercolor/devices/audio-input-microphone.png
MLGZ/PopMenu,PopMenu/Pods/Headers/Private/pop/POPAnimationRuntime.h
Novartis/yap,bin/yap_summary_call
apsavin/bnsf,test-apps/test-app-with-history-fallback/libs
chaos/lustre,build/prepare-commit-msg
jeaye/stdman,man/std::wfstream::close.3
jeaye/stdman,"man/std::u32string::rend,std::basic_string::crend.3"
jeaye/stdman,"man/std::wstreambuf::pubimbue,std::basic_streambuf::imbue.3"
madre/devops,node_modules/html-webpack-plugin/node_modules/html-minifier/node_modules/.bin/uglifyjs
mzhaom/trunk,third_party/openssl/linux-x86_64/include/openssl/ecdsa.h
teamVCH/sway,Pods/Headers/Private/FBSDKCoreKit/FBSDKUtility.h
teamVCH/sway,Pods/Headers/Public/ParseTwitterUtils/PF_Twitter.h
teamVCH/sway,Pods/Headers/Private/FBSDKCoreKit/FBSDKMutableCopying.h
teamVCH/sway,Pods/Headers/Private/Parse/PFURLSessionDataTaskDelegate.h
teamVCH/sway,Pods/Headers/Private/Parse/PFRESTObjectBatchCommand.h
teamVCH/sway,Pods/Headers/Private/Parse/PFErrorUtilities.h
teamVCH/sway,Pods/Headers/Private/Parse/PFPushUtilities.h
teamVCH/sway,Pods/Headers/Private/ParseFacebookUtilsV4/PFFacebookUtils.h
teamVCH/sway,Pods/Head
Query:
-- Query 7: Find files whose contents include 'Copyright (c)'
SELECT "id", "content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
WHERE "content" ILIKE '%copyright (c)%'
LIMIT 100;
Answer:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;
Query:
-- Query 8: Join SAMPLE_FILES and SAMPLE_CONTENTS on 'id' to get file paths and contents
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,content
jissereitsma/media-manager-improvement,administrator/components/com_modules/views/modules/tmpl/default_batch_body.php,"<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_modules
 *
 * @copyright   Copyright (C) 2005 - 2015 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */

defined('_JEXEC') or die;

$clientId  = $this->state->get('filter.client_id');

// Show only Module Positions of published Templates
$published = 1;
$positions = JHtml::_('modules.positions', $clientId, $published);
$positions['']['items'][] = ModulesHelper::createOption('nochange', JText::_('COM_MODULES_BATCH_POSITION_NOCHANGE'));
$positions['']['items'][] = ModulesHelper::createOption('noposition', JText::_('COM_MODULES_BATCH_POSITION_NOPOSITION'));

// Add custom position to options
$customGroupText = JText::_('COM_MODULES_CUSTOM_POSITION');

// Build field
$attr = array(
	'id'        => 'batch-position-id',
	'list.attr' => 'class=""chzn-custom-value input-xlarge"" '
		. 'data-custom_group_text=""' . $customGroupText . '"" '
		. 'data-no_results_text=""' . JText::_('COM_MODULES_ADD_CUSTOM_POSITION') . '"" '
		. 'data-placeholder=""' . JText::_('COM_MODULES_TYPE_OR_SELECT_POSITION') . '"" '
);

?>

<p><?php echo JText::_('COM_MODULES_BATCH_TIP'); ?></p>
<div class=""row-fluid"">
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.language'); ?>
		</div>
	</div>
	<div class=""control-group span6"">
		<div class=""controls"">
			<?php echo JHtml::_('batch.access'); ?>
		</div>
	</div>
</div>
<div class=""row-fluid"">
	<?php if ($published >= 0) : ?>
		<div class=""span6"">
			<div class=""controls"">
				<label id=""batch-choose-action-lbl"" for=""batch-choose-action"">
					<?php echo JText::_('COM_MODULES_BATCH_POSITION_LABEL'); ?>
				</label>
				<div id=""batch-choose-action"" class=""control-group"">
					<?php echo JHtml::_('select.groupedlist', $positions, 'batch[position_id]', $attr) ?>
					<div id=""batch-copy-move"" class=""control-group radio"">
						<?php echo JHtml::_('modules.batchOptions'); ?>
					</div>
				</div>
			</div>
		</div>
	<?php endif; ?>
</div>
"
CyanogenMod/android_kernel_samsung_jf,drivers/net/ethernet/intel/igb/e1000_mac.c,"/*******************************************************************************

  Intel(R) Gigabit Ethernet Linux driver
  Copyright(c) 2007-2012 Intel Corporation.

  This program is free software; you can redistribute it and/or modify it
  under the terms and conditions of the GNU General Public License,
  version 2, as published by the Free Software Foundation.

  This program is distributed in the hope it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  more details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.

  The full GNU General Public License is included in this distribution in
  the file called ""COPYING"".

  Contact Information:
  e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
  Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497

*******************************************************************************/

#include <linux/if_ether.h>
#include <linux/delay.h>
#include <linux/pci.h>
#include <linux/netdevice.h>
#include <linux/etherdevice.h>

#include ""e1000_mac.h""

#include ""igb.h""

static s32 igb_set_default_fc(struct e1000_hw *hw);
static s32 igb_set_fc_watermarks(struct e1000_hw *hw);

/**
 *  igb_get_bus_info_pcie - Get PCIe bus information
 *  @hw: pointer to the HW structure
 *
 *  Determines and stores the system bus information for a particular
 *  network interface.  The following bus information is determined and stored:
 *  bus speed, bus width, type (PCIe), and PCIe function.
 **/
s32 igb_get_bus_info_pcie(struct e1000_hw *hw)
{
	struct e1000_bus_info *bus = &hw->bus;
	s32 ret_val;
	u32 reg;
	u16 pcie_link_status;

	bus->type = e1000_bus_type_pci_express;

	ret_val = igb_read_pcie_cap_reg(hw,
					PCI_EXP_LNKSTA,
					&pcie_link_status);
	if (ret_val) {
		bus->width = e1000_bus_width_unknown;
		bus->speed = e1000_bus_speed_unknown;
	} else {
		switch (pcie_link_status & PCI_EXP_LNKSTA_CLS) {
		case PCI_EXP_LNKSTA_CLS_2_5GB:
			bus->speed = e1000_bus_speed_2500;
			break;
		case PCI_EXP_LNKSTA_CLS_5_0GB:
			bus->speed = e1000_bus_speed_5000;
			break;
		default:
			bus->speed = e1000_bus_speed_unknown;
			break;
		}

		bus->width = (enum e1000_bus_width)((pcie_link_status &
						     PCI_EXP_LNKSTA_NLW) >>
						     PCI_EXP_LNKSTA_NLW_SHIFT);
	}

	reg = rd32(E1000_STATUS);
	bus->func = (reg & E1000_STATUS_FUNC_MASK) >> E1000_STATUS_FUNC_SHIFT;

	return 0;
}

/**
 *  ig
Query:
-- Query 9: Find files whose paths include 'readme.md' and get their contents
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme.md%'
LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,content
DaMSL/K3,tools/scripts/docker/README.md,"K3 Dockerfiles
==========

Dockerfiles are updated for three images:

1. **k3-app** -- (~250MB) light-weight image to run a K3 program. Based on debian:jessie. It contains only the necessary dependency libraries.
2. **k3-compiler** -- (~2 GB) Image containing the GHC and GCC tool chains to compile a K3 program to binary. Based on debian:jessie
3. **k3-dev** (~2.5 GB)  -- Larger container with additional library and application support (e.g. clang, ruby, vim, and others). It is based on debian:sid

To build an image use the following command:

```
docker build -f k3-dev -t damsl/k3-dev:<your_tag> .
```

(Note: Docker build now has the -f option, so you don't have to call all docker files, ""Dockerfile"")

The image ```damsl/k3-dev:vanilla``` which is pushed to the repo contains the K3 source built with no options. Feel free to pull, use, & re-build K3 with whatever options necessary (and re-push with a new tag if needed).

The other scripts in here are left for legacy purposes.

Build Dependency Versions:
<pre>
  - GHC: 7.10.1
  - GCC: 4.9.2
  - Boost: 1.57
  - Mesos: 0.22.1</pre>
"
rgardler/azure-quickstart-templates,emercoin-ubuntu/README.md,"# Emercoin Instance

This Microsoft Azure template deploys a single Emercoin client which will connect to the public Emercoin network.

[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json)
<a href=""http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json"" target=""_blank"">
    <img src=""http://armviz.io/visualizebutton.png""/>
</a>

Once your deployment is complete you will be able to connect to the Emercoin public network.

![Emercoin-Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/emercoin-ubuntu/images/emercoin.png)

# Template Parameters
When you launch the installation of the VM, you need to specify the following parameters:
* `vmDnsPrefix`: this is the public DNS name for the VM that you will use interact with your console. You just need to specify an unique name.
* `adminUsername`: self-explanatory. This is the account you will use for connecting to the node
* `adminPassword`: self-explanatory. Be aware that Azure requires passwords to have One upper case, one lower case, a special character, and a number
* `vmSize`: The type of VM that you want to use for the node. The default size is D1_v2 but you can change that if you expect to run workloads that require more RAM or CPU resources.

# Emercoin Deployment Walkthrough
1. Get your node's IP
 1. browse to https://portal.azure.com

 2. then click browse all, followed by ""resource groups"", and choose your resource group

 3. then expand your resources, and public ip address of your node.

2. Connect to your node
 1. SSH to the public ip of your node as the user you specified for `adminUsername`, enter your `adminPassword`
 2. Try to use the cli-client by `emc help` or `emc getinfo`
 3. Point your browser to the public ip of your node, sign in with `adminUsername` and `adminPassword` specified before (note that browser may show you a warning of bad certificate - it's OK, you may replace the self-signed certificates by yours at /etc/ssl/emc/emcweb*)
"
briancavalier/todomvc-fab,examples/cujo/bower_components/curl/src/curl/plugin/README.md,"curl.js loader plugins
===

Please see the wiki for information about using plugins.  If you're interested
in creating your own plugins, please check out the Plugin Author's Guide
on the wiki (TBD).

All of these plugins conform to the AMD specification.  However, that
doesn't necessarily mean that they'll work with other AMD loaders or
builders.  Until the build-time API of AMD is finalized, there will be
incompatibilities.

Modules that should work with any loader/builder:

async!
domReady!
js!
link!

TODO:

json! (auto-detects xdomain and uses JSON-P)
"
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of y
Query:
-- Query 10: Find files whose contents include 'Copyright (c)' and get their paths
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE c."content" ILIKE '%copyright (c)%'
LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,content
AdrianDC/android_kernel_sony_msm8960t,fs/xfs/xfs_itable.c,"/*
 * Copyright (c) 2000-2002,2005 Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it would be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write the Free Software Foundation,
 * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
#include ""xfs.h""
#include ""xfs_fs.h""
#include ""xfs_types.h""
#include ""xfs_bit.h""
#include ""xfs_log.h""
#include ""xfs_inum.h""
#include ""xfs_trans.h""
#include ""xfs_sb.h""
#include ""xfs_ag.h""
#include ""xfs_mount.h""
#include ""xfs_bmap_btree.h""
#include ""xfs_alloc_btree.h""
#include ""xfs_ialloc_btree.h""
#include ""xfs_dinode.h""
#include ""xfs_inode.h""
#include ""xfs_ialloc.h""
#include ""xfs_itable.h""
#include ""xfs_error.h""
#include ""xfs_btree.h""
#include ""xfs_trace.h""

STATIC int
xfs_internal_inum(
	xfs_mount_t	*mp,
	xfs_ino_t	ino)
{
	return (ino == mp->m_sb.sb_rbmino || ino == mp->m_sb.sb_rsumino ||
		(xfs_sb_version_hasquota(&mp->m_sb) &&
		 (ino == mp->m_sb.sb_uquotino || ino == mp->m_sb.sb_gquotino)));
}

/*
 * Return stat information for one inode.
 * Return 0 if ok, else errno.
 */
int
xfs_bulkstat_one_int(
	struct xfs_mount	*mp,		/* mount point for filesystem */
	xfs_ino_t		ino,		/* inode to get data for */
	void __user		*buffer,	/* buffer to place output in */
	int			ubsize,		/* size of buffer */
	bulkstat_one_fmt_pf	formatter,	/* formatter, copy to user */
	int			*ubused,	/* bytes used by me */
	int			*stat)		/* BULKSTAT_RV_... */
{
	struct xfs_icdinode	*dic;		/* dinode core info pointer */
	struct xfs_inode	*ip;		/* incore inode pointer */
	struct xfs_bstat	*buf;		/* return buffer */
	int			error = 0;	/* error value */

	*stat = BULKSTAT_RV_NOTHING;

	if (!buffer || xfs_internal_inum(mp, ino))
		return XFS_ERROR(EINVAL);

	buf = kmem_alloc(sizeof(*buf), KM_SLEEP | KM_MAYFAIL);
	if (!buf)
		return XFS_ERROR(ENOMEM);

	error = xfs_iget(mp, NULL, ino,
			 (XFS_IGET_DONTCACHE | XFS_IGET_UNTRUSTED),
			 XFS_ILOCK_SHARED, &ip);
	if (error) {
		*stat = BULKSTAT_RV_NOTHING;
		goto out_free;
	}

	ASSERT(ip != NULL);
	ASSERT(ip->i_imap.im_blkno != 0);

	dic = &ip->i_d;

	/* xfs_iget returns the following without needing
	 * further change.
	 */
	buf->bs_nlink = dic->di_nlink;
	buf->bs_projid_lo = dic->di_projid_lo;
	buf->bs_projid_hi = dic->di_projid_hi;
	buf->bs_ino = ino;
	buf->bs_mode = dic->di_mode;
	buf->bs_uid = dic->di_uid;
	buf->bs_gid = dic->di_gid;
	buf->bs_size = dic->di_size;
	buf->bs_atime.tv_sec = dic->di_atime.t_sec;
	buf->bs_atime.tv_nsec = dic->di_atime.t_nsec;
	buf->bs_mtime.tv_sec = dic->di_mtime.t_sec;
	buf->bs_mtime.tv_nsec = dic->di_mtime.t_nsec;
	buf->bs_ctime.tv_sec = dic->di_ctime.t_sec;
	buf->bs_ctime.tv_nsec = dic->di_ctime.t_nsec;
	buf->bs_xflags = xfs_ip2xflags(ip);
	buf->bs_extsize = dic->di_extsize << mp->m_sb.sb_blocklog;
	buf->bs_extents = dic->di_nextents;
	buf->bs_gen = dic->di_gen;
	memset(buf->bs_pad, 0, sizeof(buf->bs_pad));
	buf->bs_dmevmask = dic->di_dmevmask;
	buf->bs_dmstate = dic->di_dmstate;
	buf->bs_aextents = dic->di_anextents;
	buf->bs_forkoff = XFS_IFORK_BOFF(ip);

	switch (dic->di_format) {
	case XFS_DINODE_FMT_DEV:
		buf->bs_rdev = ip->i_df.if_u2.if_rdev;
		buf->bs_blksize = BLKDEV_IOSIZE;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_LOCAL:
	case XFS_DINODE_FMT_UUID:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_EXTENTS:
	case XFS_DINODE_FMT_BTREE:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = dic->di_nblocks + ip->i_delayed_blks;
		break;
	}
	xfs_iunlock(ip, XFS_ILOCK_SHARED);
	IRELE(ip);

	error = formatter(buffer, ubsize, ubused, buf);

	if (!error)
		*stat = BULKSTAT_RV_DIDONE;

 out_free:
	kmem_free(buf);
	return error;
}

/* Return 0 on success or positive error */
STATIC int
xfs_bulkstat_one_fmt(
	void			__user *ubuffer,
	int			ubsize,
	int			*ubused,
	const xfs_bstat_t	*buffer)
{
	if (ubsize < sizeof(*buffer))
		return XFS_ERROR(ENOMEM);
	if (copy_to_user(ubuffer, buffer, sizeof(*buffer)))
		return XFS_ERROR(EFAULT);
	if (ubused)
		*ubused = sizeof(*buffer);
	return 0;
}

int
xfs_bulkstat_one(
	xfs_mount_t	*mp,		/* mount point for filesystem */
	xfs_ino_t	ino,		/* inode number to get data for */
	void		__user *buffer,	/* buffer to place output in */
	int		ubsize,		/* size of buffer */
	int		*ubused,	/* bytes used by me */
	int		*stat)		/* BULKSTAT_RV_... */
{
	return xfs_bulkstat_one_int(mp, ino, buffer, ubsize,
				   
Query:
-- Query 11: Find files whose paths include 'readme.md' and contents include 'Copyright (c)'
SELECT f."repo_name", f."path", c."content"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
  ON f."id" = c."id"
WHERE f."path" ILIKE '%readme.md%'
  AND c."content" ILIKE '%copyright (c)%'
LIMIT 100;
Answer:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"
End Exploring Related Columns
Task: Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)"..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 18:56:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:56:22 - root - INFO - ```sql
WITH repos_with_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
         LATERAL FLATTEN(input => "language") f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files AS (
    SELECT COUNT(*) AS total_files
    FROM files_in_repos
),
condition_files AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT condition_files.condition_files / total_files.total_files::FLOAT AS proportion
    FROM condition_files, total_files
)
SELECT proportion AS "Proportion"
FROM proportion_table;
```
2025-02-12 18:56:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:56:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:56:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:56:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:56:24 - snowflake.connector.connection - INFO - closed
2025-02-12 18:56:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:56:25 - root - INFO - itercount: 1
2025-02-12 18:56:25 - root - INFO - 0
2025-02-12 18:56:25 - root - INFO - results: 
Proportion
2.3926020743859983e-06


2025-02-12 18:56:25 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
2.3926020743859983e-06
Current sql:
WITH repos_with_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
         LATERAL FLATTEN(input => "language") f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files AS (
    SELECT COUNT(*) AS total_files
    FROM files_in_repos
),
condition_files AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT condition_files.condition_files / total_files.total_files::FLOAT AS proportion
    FROM condition_files, total_files
)
SELECT proportion AS "Proportion"
FROM proportion_table;
2025-02-12 18:56:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:56:42 - root - INFO - ```sql
WITH repos_with_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
         LATERAL FLATTEN(input => "language") f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files AS (
    SELECT COUNT(*) AS total_files
    FROM files_in_repos
),
condition_files AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT condition_files.condition_files / total_files.total_files::FLOAT AS proportion
    FROM condition_files, total_files
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;
```
2025-02-12 18:56:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:56:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:56:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:56:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:56:44 - snowflake.connector.connection - INFO - closed
2025-02-12 18:56:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:56:45 - root - INFO - itercount: 2
2025-02-12 18:56:45 - root - INFO - 0
2025-02-12 18:56:45 - root - INFO - results: 
Proportion
0


2025-02-12 18:56:45 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH repos_with_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES,
         LATERAL FLATTEN(input => "language") f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files AS (
    SELECT COUNT(*) AS total_files
    FROM files_in_repos
),
condition_files AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT condition_files.condition_files / total_files.total_files::FLOAT AS proportion
    FROM condition_files, total_files
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 18:57:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:57:44 - root - INFO - ```sql
WITH all_repos AS (
    SELECT DISTINCT "repo_name" FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repo_languages AS (
    SELECT r."repo_name", l."language"
    FROM all_repos AS r
    LEFT JOIN GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l
    ON r."repo_name" = l."repo_name"
),
repos_with_python AS (
    SELECT DISTINCT rl."repo_name"
    FROM repo_languages AS rl,
    LATERAL FLATTEN(input => rl."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files AS (
    SELECT COUNT(*) AS total_files
    FROM files_with_content
),
condition_files AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT condition_files.condition_files / NULLIF(total_files.total_files, 0)::FLOAT AS proportion
    FROM condition_files, total_files
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;
```
2025-02-12 18:57:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:57:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:57:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:57:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:57:45 - snowflake.connector.connection - INFO - closed
2025-02-12 18:57:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:57:46 - root - INFO - itercount: 3
2025-02-12 18:57:46 - root - INFO - 0
2025-02-12 18:57:46 - root - INFO - results: 
Proportion
0


2025-02-12 18:57:46 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH all_repos AS (
    SELECT DISTINCT "repo_name" FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repo_languages AS (
    SELECT r."repo_name", l."language"
    FROM all_repos AS r
    LEFT JOIN GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l
    ON r."repo_name" = l."repo_name"
),
repos_with_python AS (
    SELECT DISTINCT rl."repo_name"
    FROM repo_languages AS rl,
    LATERAL FLATTEN(input => rl."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files AS (
    SELECT COUNT(*) AS total_files
    FROM files_with_content
),
condition_files AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT condition_files.condition_files / NULLIF(total_files.total_files, 0)::FLOAT AS proportion
    FROM condition_files, total_files
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 18:58:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:58:27 - root - INFO - ```sql
WITH all_repos AS (
    SELECT DISTINCT "repo_name" FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repo_languages AS (
    SELECT r."repo_name", l."language"
    FROM all_repos AS r
    LEFT JOIN GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l
      ON r."repo_name" = l."repo_name"
),
repos_with_python AS (
    SELECT DISTINCT rl."repo_name"
    FROM repo_languages AS rl,
    LATERAL FLATTEN(input => rl."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_with_content
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;
```
2025-02-12 18:58:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:58:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:58:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:58:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:58:29 - snowflake.connector.connection - INFO - closed
2025-02-12 18:58:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:58:29 - root - INFO - itercount: 4
2025-02-12 18:58:29 - root - INFO - 0
2025-02-12 18:58:29 - root - INFO - results: 
Proportion
0


2025-02-12 18:58:29 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH all_repos AS (
    SELECT DISTINCT "repo_name" FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repo_languages AS (
    SELECT r."repo_name", l."language"
    FROM all_repos AS r
    LEFT JOIN GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l
      ON r."repo_name" = l."repo_name"
),
repos_with_python AS (
    SELECT DISTINCT rl."repo_name"
    FROM repo_languages AS rl,
    LATERAL FLATTEN(input => rl."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_with_content
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 18:59:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:59:13 - root - INFO - ```sql
WITH all_repos AS (
    SELECT DISTINCT "repo_name" FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
    LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name" FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
selected_files AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM selected_files
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM selected_files
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;
```
2025-02-12 18:59:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:59:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:59:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:59:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:59:15 - snowflake.connector.connection - INFO - closed
2025-02-12 18:59:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:59:15 - root - INFO - itercount: 5
2025-02-12 18:59:15 - root - INFO - 0
2025-02-12 18:59:15 - root - INFO - results: 
Proportion
0


2025-02-12 18:59:15 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH all_repos AS (
    SELECT DISTINCT "repo_name" FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
    LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name" FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_in_repos AS (
    SELECT f."id", f."repo_name", f."path"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
selected_files AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM files_in_repos AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM selected_files
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM selected_files
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 19:00:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:00:06 - root - INFO - ```sql
WITH files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
    LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
files_in_repos_without_python AS (
    SELECT *
    FROM files_with_content
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_in_repos_without_python
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos_without_python
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;
```
2025-02-12 19:00:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:00:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:00:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:00:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:00:08 - snowflake.connector.connection - INFO - closed
2025-02-12 19:00:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:00:08 - root - INFO - itercount: 6
2025-02-12 19:00:08 - root - INFO - 0
2025-02-12 19:00:08 - root - INFO - results: 
Proportion
0


2025-02-12 19:00:08 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
    LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
files_in_repos_without_python AS (
    SELECT *
    FROM files_with_content
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_in_repos_without_python
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos_without_python
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 19:01:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:01:01 - root - INFO - ```sql
WITH files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
    LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
files_in_repos_without_python AS (
    SELECT *
    FROM files_with_content
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_in_repos_without_python
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos_without_python
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;
```
2025-02-12 19:01:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:01:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:01:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:01:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:01:02 - snowflake.connector.connection - INFO - closed
2025-02-12 19:01:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:01:02 - root - INFO - itercount: 7
2025-02-12 19:01:02 - root - INFO - 0
2025-02-12 19:01:02 - root - INFO - results: 
Proportion
0


2025-02-12 19:01:02 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
    LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
files_in_repos_without_python AS (
    SELECT *
    FROM files_with_content
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_in_repos_without_python
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos_without_python
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
      COALESCE(condition_files_count.condition_files, 0) /
      NULLIF(total_files_count.total_files, 0)::FLOAT AS proportion
    FROM condition_files_count, total_files_count
)
SELECT COALESCE(ROUND(proportion::NUMERIC, 4), 0.0) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 19:02:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:02:04 - root - INFO - ```sql
WITH files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
         LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
files_in_repos_without_python AS (
    SELECT *
    FROM files_with_content
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_in_repos_without_python
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos_without_python
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
        CASE WHEN total_files_count.total_files > 0 THEN
            condition_files_count.condition_files / total_files_count.total_files::FLOAT
        ELSE
            0.0
        END AS proportion
    FROM condition_files_count, total_files_count
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;
```
2025-02-12 19:02:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:02:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:02:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:02:05 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:02:05 - snowflake.connector.connection - INFO - closed
2025-02-12 19:02:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:02:06 - root - INFO - itercount: 8
2025-02-12 19:02:06 - root - INFO - 0
2025-02-12 19:02:06 - root - INFO - results: 
Proportion
0


2025-02-12 19:02:06 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
         LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
files_in_repos_without_python AS (
    SELECT *
    FROM files_with_content
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_in_repos_without_python
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_in_repos_without_python
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
        CASE WHEN total_files_count.total_files > 0 THEN
            condition_files_count.condition_files / total_files_count.total_files::FLOAT
        ELSE
            0.0
        END AS proportion
    FROM condition_files_count, total_files_count
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 19:03:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:03:18 - root - INFO - ```sql
WITH all_repos AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES l
    WHERE l."language"::TEXT ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS c ON f."id" = c."id"
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_with_content
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
        CASE WHEN total_files_count.total_files > 0 THEN
            condition_files_count.condition_files / total_files_count.total_files::FLOAT
        ELSE
            0.0
        END AS proportion
    FROM total_files_count, condition_files_count
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;
```
2025-02-12 19:03:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:03:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:03:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:03:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:03:19 - snowflake.connector.connection - INFO - closed
2025-02-12 19:03:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:03:20 - root - INFO - itercount: 9
2025-02-12 19:03:20 - root - INFO - 0
2025-02-12 19:03:20 - root - INFO - results: 
Proportion
0


2025-02-12 19:03:20 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0
Current sql:
WITH all_repos AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES l
    WHERE l."language"::TEXT ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS c ON f."id" = c."id"
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_with_content
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
        CASE WHEN total_files_count.total_files > 0 THEN
            condition_files_count.condition_files / total_files_count.total_files::FLOAT
        ELSE
            0.0
        END AS proportion
    FROM total_files_count, condition_files_count
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;Empty results in Column ['Proportion']. Please correct them.

2025-02-12 19:04:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 19:04:10 - root - INFO - ```sql
WITH all_repos AS (
    SELECT DISTINCT "repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
),
repos_with_python AS (
    SELECT DISTINCT l."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES AS l,
         LATERAL FLATTEN(input => l."language") AS f
    WHERE f.key::STRING ILIKE '%python%'
),
repos_without_python AS (
    SELECT "repo_name"
    FROM all_repos
    WHERE "repo_name" NOT IN (SELECT "repo_name" FROM repos_with_python)
),
files_with_content AS (
    SELECT f."id", f."repo_name", f."path", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c ON f."id" = c."id"
    WHERE f."repo_name" IN (SELECT "repo_name" FROM repos_without_python)
),
total_files_count AS (
    SELECT COUNT(*) AS total_files FROM files_with_content
),
condition_files_count AS (
    SELECT COUNT(*) AS condition_files
    FROM files_with_content
    WHERE "path" ILIKE '%readme.md%'
      AND "content" ILIKE '%Copyright (c)%'
),
proportion_table AS (
    SELECT
        CASE WHEN total_files_count.total_files > 0 THEN
            condition_files_count.condition_files / total_files_count.total_files::FLOAT
        ELSE
            0.0
        END AS proportion
    FROM total_files_count, condition_files_count
)
SELECT ROUND(proportion::NUMERIC, 4) AS "Proportion"
FROM proportion_table;
```
2025-02-12 19:04:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 19:04:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 19:04:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 19:04:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 19:04:12 - snowflake.connector.connection - INFO - closed
2025-02-12 19:04:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 19:04:13 - root - INFO - Total iteration counts: 10
