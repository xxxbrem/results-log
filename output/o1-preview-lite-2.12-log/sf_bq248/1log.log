2025-01-25 23:43:37 - openai._base_client - INFO - Retrying request to /chat/completions in 0.489179 seconds
2025-01-25 23:44:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 23:44:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:23 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:23 - root - INFO - SQL:
SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES"
   LIMIT 100;
Results:
repo_name
bound1ess/selectable
sylvek/leeloo
openMF/mifosx-packager
SpringMT/rack-qrcode
fblupi/GEventator
BrianBailey/gem_practice
DigixGlobal/aurum
groknix/rsyslog
benjaminoakes/odin
tdug/filter_countable
dkong/bash-git-prompt
magicdrive/ruby-git-gems
jronallo/abrizer
nicrou/owl_carousel-rails
skylarsch/elo
vumanhcuongit/cex-rb
vlesierse/coreos-vagrant
Mobilette/MobiletteSwiftBaseProject
jessesquires/PrintlnMagic
macram/rxNetflixRoulette
FirebaseExtended/codelab-textclassification-ios
akpw/SwiftNetworkImages
iSapozhnik/FamilyPocket
danpratt/Simply-Zen
mathstuf/dbus-serialize
nandub/homebrew
eschnett/HelloWorld1.jl
livetat/TKSwarmAlert
marcelodeolive1ra/DC-UFSCar-ES2-201601-GrupoHelloWorld
pollow/xyzSQL
adamzimny/Chess4f
jgoldfar/Sundials.jl
biblelamp/JavaExercises
boddhisattva/oh-my-zsh
JuliaPackageMirrors/JuliaFEM.jl
jducoeur/jstree-facade
mitsuse/neocomplete-kompl
itswindtw/spock
sponomarev/swarker
McPolemic/fine-ants
covermymeds/elastic_results
SanctionCo/pilot-ios
banjun/JetToTheFuture
ZhengQingchen/ContactList
stainless-steel/opentype
nathansizemore/simple-slab
FuzzOli87/vim-sauce
2027205T/tango_with_django
jimmyngo/rust-parsetime
schnake24/teich_commander
crystal/autocode-homebrew
siburb/STTwitter
dynaTrace/Dynatrace-easyTravel-Ansible
Duceux/Arty
cjww-development/rest-api
Keno/REPLCompletions.jl
paulcbetts/node-raven
imrhk/AndroidApps
klr-android/zhejiulai
shengxiang205/mongoid
adzzie/test
FragCoder/bootstrap-left-slide-menu
jaredq/EnBe
comblox/PnP-Provisioning-Schema
DrZivil/appquizr
chisty/asp.net-web-api-articles
Anzacday/anzac-day-tours-gallipoli
arthurhammer/gamin-watch-apps
teslasleep/sql
shykes/dokku
jhoneswilliam/Calendar-Group
MarkusFuchs20OnGitHub/UnklaresDenken
rudijs/elk-filebeat-seed
tracylv/appframework
kevoree/docker-image-kevoree-browser-runtime
Brokous/Message
nicorevin/beep
Lekx/practica3html
ZamkoveDlazby/ZamkoveDlazby
bryanwillis/dashhack
vkimura/githubtest_01
janvanhulzen/Temperature-Control
uBbOo/LeapKinet2OSC
nutt2/ispconfig_fi
Akki1697/Loppy
jeff-blaisdell/date
jamiepg1/Repository27
creativecircleTM/Teste
PaulAnnekov/AlgoForFun
Noah-Huppert/youtube-contest-helper
ikergravalos/pruebas2015
tommykw/shiki
jagatmerah/north-american-octo-cyril
graidl/test
Centreon-Widgets/centreon-widget-broker-status
polotek/min-local-store
jeejisme/religion
yass23in/squealing-capsicum
bvincent1/lonelyTwiiterTest-1
LrdPatrick/TPG1

2025-01-25 23:44:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:25 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:25 - root - INFO - SQL:
SELECT "repo_name", "language"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES"
   LIMIT 100;
Results:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]

2025-01-25 23:44:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:27 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:27 - root - INFO - SQL:
SELECT "repo_name", l.VALUE::STRING AS "language_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,language_name
MMCWonko/WonkoTheSane,"{""bytes"":92330,""name"":""Ruby""}"
MMCWonko/WonkoTheSane,"{""bytes"":143,""name"":""Shell""}"
amypivo/all_seeing_pi,"{""bytes"":12166,""name"":""Ruby""}"
amypivo/all_seeing_pi,"{""bytes"":101,""name"":""Shell""}"
takuma510/oh-my-demoserver,"{""bytes"":2374,""name"":""Ruby""}"
takuma510/oh-my-demoserver,"{""bytes"":115,""name"":""Shell""}"
jasonrclark/shoes-faux,"{""bytes"":3107,""name"":""Ruby""}"
jasonrclark/shoes-faux,"{""bytes"":115,""name"":""Shell""}"
simonneutert/period_overlap,"{""bytes"":4548,""name"":""Ruby""}"
simonneutert/period_overlap,"{""bytes"":131,""name"":""Shell""}"
corbt/homebrew-cask,"{""bytes"":1766004,""name"":""Ruby""}"
corbt/homebrew-cask,"{""bytes"":52927,""name"":""Shell""}"
interexchange/rack-utm_cookies,"{""bytes"":6188,""name"":""Ruby""}"
interexchange/rack-utm_cookies,"{""bytes"":115,""name"":""Shell""}"
rshell/oracle-enhanced,"{""bytes"":435377,""name"":""Ruby""}"
rshell/oracle-enhanced,"{""bytes"":2042,""name"":""Shell""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":4941,""name"":""Ruby""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":122,""name"":""Shell""}"
a-e/FitNexus,"{""bytes"":5552,""name"":""Ruby""}"
a-e/FitNexus,"{""bytes"":101,""name"":""Shell""}"
phaltoe/movies_news_gem,"{""bytes"":11987,""name"":""Ruby""}"
phaltoe/movies_news_gem,"{""bytes"":131,""name"":""Shell""}"
baschtl/uberssh,"{""bytes"":7456,""name"":""Ruby""}"
baschtl/uberssh,"{""bytes"":115,""name"":""Shell""}"
chetstone/vbusv2,"{""bytes"":8550,""name"":""Ruby""}"
chetstone/vbusv2,"{""bytes"":1443,""name"":""Shell""}"
mclosson/rack-honeytoken,"{""bytes"":5624,""name"":""Ruby""}"
mclosson/rack-honeytoken,"{""bytes"":115,""name"":""Shell""}"
mgall/mooc-scicomp,"{""bytes"":481,""name"":""Ruby""}"
mgall/mooc-scicomp,"{""bytes"":1056,""name"":""Shell""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":10249,""name"":""Ruby""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":131,""name"":""Shell""}"
laarc/sol,"{""bytes"":10389,""name"":""Ruby""}"
laarc/sol,"{""bytes"":446,""name"":""Shell""}"
korishev/mongoid,"{""bytes"":1464284,""name"":""Ruby""}"
korishev/mongoid,"{""bytes"":2378,""name"":""Shell""}"
jharveysmith/nginx,"{""bytes"":72552,""name"":""Ruby""}"
jharveysmith/nginx,"{""bytes"":116,""name"":""Shell""}"
Petermuturi/additiongem,"{""bytes"":1979,""name"":""Ruby""}"
Petermuturi/additiongem,"{""bytes"":115,""name"":""Shell""}"
johann-koebbe/bunny_burrow,"{""bytes"":34594,""name"":""Ruby""}"
johann-koebbe/bunny_burrow,"{""bytes"":657,""name"":""Shell""}"
lonelyplanet/image-resizer,"{""bytes"":18838,""name"":""Ruby""}"
lonelyplanet/image-resizer,"{""bytes"":51,""name"":""Shell""}"
sonots/mysql_getlock,"{""bytes"":7801,""name"":""Ruby""}"
sonots/mysql_getlock,"{""bytes"":131,""name"":""Shell""}"
amarshall/rbenv,"{""bytes"":2160,""name"":""Ruby""}"
amarshall/rbenv,"{""bytes"":21049,""name"":""Shell""}"
ludamillion/ffaker,"{""bytes"":228980,""name"":""Ruby""}"
ludamillion/ffaker,"{""bytes"":60,""name"":""Shell""}"
dandanwei/number_normalizer,"{""bytes"":15046,""name"":""Ruby""}"
dandanwei/number_normalizer,"{""bytes"":131,""name"":""Shell""}"
kakoni/xroad-ruby-client,"{""bytes"":6057,""name"":""Ruby""}"
kakoni/xroad-ruby-client,"{""bytes"":115,""name"":""Shell""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":2330,""name"":""Ruby""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":115,""name"":""Shell""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":1588,""name"":""Ruby""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":25196,""name"":""Shell""}"
masa0x80/arare,"{""bytes"":5642,""name"":""Ruby""}"
masa0x80/arare,"{""bytes"":115,""name"":""Shell""}"
frozenApr/signature_verification,"{""bytes"":3888,""name"":""Ruby""}"
frozenApr/signature_verification,"{""bytes"":131,""name"":""Shell""}"
jutonz/reup,"{""bytes"":6437,""name"":""Ruby""}"
jutonz/reup,"{""bytes"":115,""name"":""Shell""}"
vigo/els,"{""bytes"":2618,""name"":""Ruby""}"
vigo/els,"{""bytes"":115,""name"":""Shell""}"
benbjurstrom/quivjek,"{""bytes"":9096,""name"":""Ruby""}"
benbjurstrom/quivjek,"{""bytes"":131,""name"":""Shell""}"
carlthuringer/restforce,"{""bytes"":123060,""name"":""Ruby""}"
carlthuringer/restforce,"{""bytes"":463,""name"":""Shell""}"
takatoshiono/wavedash,"{""bytes"":17096,""name"":""Ruby""}"
takatoshiono/wavedash,"{""bytes"":115,""name"":""Shell""}"
chadrem/filter_chain,"{""bytes"":11249,""name"":""Ruby""}"
chadrem/filter_chain,"{""bytes"":115,""name"":""Shell""}"
phusion/apachai-hopachai,"{""bytes"":56838,""name"":""Ruby""}"
phusion/apachai-hopachai,"{""bytes"":2613,""name"":""Shell""}"
bhalothia/chef-rundeck,"{""bytes"":29460,""name"":""Ruby""}"
bhalothia/chef-rundeck,"{""bytes"":244,""name"":""Shell""}"
rapid7/chef-conqueso,"{""bytes"":15541,""name"":""Ruby""}"
rapid7/chef-conqueso,"{""bytes"":2132,""name"":""Shell""}"
enriclluelles/homebrew-cask,"{""bytes"":1685661,""name"":""Ruby""}"
enriclluelles/homebrew-cask,"{""bytes"":59881,""name"":""Shell""}"
danielRomero/telegram_api,"{""bytes"":

2025-01-25 23:44:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:29 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:29 - root - INFO - SQL:
SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   WHERE l.VALUE::STRING ILIKE '%python%'
   LIMIT 100;
Results:
repo_name
vonwenm/antler4book
metatron-app/metatron-discovery
leepc12/BigDataScript
aanastasiou/adl_ebnf
followyourheart/vowpal_wabbit
dusenberrymw/incubator-systemml
gcnonato/presto
milliman/spark
collinjackson/mojo
symek/open-gto
Ultimaker/Uranium
lucteo/conan-llvm
ubuntu5678/pimouse_run_corridor
dcaceresd/pose_publisher
shaggytwodope/clockr
Neal/oh-my-zsh
waywardmonkeys/http-builder
kudlav/dnf
sagarwaghmare69/dp
yu5611789/oh-my-zsh
nccgroup/joern
STLInspector/STLInspector
denizdemir/presto
nickwallen/metron
b-slim/hive
ericvandenbergfb/spark
dongjoon-hyun/spark
zjureel/flink
sotty/drools
zhangpf/cloudroid
KDE/printer-applet
TimSalimans/HiggsML
ukleinek/bash-completion
WPI-RAIL/battery_monitor_rmp
couchbase/couchbase-cli
rootAvish/scrapy
JarrettR/Altium-CircuitMaker-Tools
berngp/oh-my-zsh
mutse/remastersys
arminnh/c-to-p-compiler
sim2541/pimouse_ros
KDE/stibium
JackMc/datacats
zhreshold/mxnet
Kapim/ar-table-itable
lovepark/o3d3xx-h5
tlmohren/Msc_thesis
marsorp/blog
Towards-Autonomous/kitti_odom
pdebuyl-lab/RMPCDMD
LantaoJin/spark
Helen-Zhao/elasticsearch
FedericoRessi/networking-odl
takeshineshiro/oh-my-zsh
LinusU/fbthrift
KanDisheng/HelloWorld
OpenClovis/SAFplus-Availability-Scalability-Platform
Jildor/ZoneLimit
PGower/google-diff-match-patch
RyokoAkizuki/mtasa-blue
aufflick/core-plot
xtremelabs/core-plot
brutto/google-diff-match-patch
paraboul/libmpq
Maijin/sdb
utisam/gfly
pbomta/or-tools
alpaca-tc/comment_extractor
leodemoura/z3
snowshine09/google-diff-match-patch
dandycheung/distorm
Testinos/Freerdp
SkyFireArchives/SkyFireEMU_420
chaupt/google-diff-match-patch
liangsen/google-diff-match-patch
marcotm/google-diff-match-patch
snowyu/google-diff-match-patch
mannewalis/google-diff-match-patch
ericsnowcurrently/juju
Sajid3/Cello
ZeroK-RTS/SpringRTS-Tools
AlexTMjugador/mtasa-blue
Dellware78/mtasa-blue
scottj/google-diff-match-patch
dyadyuramaxim/google-diff-match-patch
lincsoon/crosswalk
uus169/libpomelo2
WebByBrains/cocos2d-x-boilerplate
merikonjatta/wayak-wiki
IEEE-NITK/Daedalus
alphaKAI/mal
andondaniel/tria
Mferrill/TrinityCustom
hanxi/HXGame
olejorgenb/google-diff-match-patch-archived
RiccardoPecora/MP
chjp2046/fbthrift
sherazkasi/SabreSoftware
ivarptr/google-diff-match-patch
sbesson/zeroc-ice

2025-01-25 23:44:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:30 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:31 - root - INFO - SQL:
SELECT "repo_name", l.VALUE::STRING AS "language_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   WHERE l.VALUE::STRING NOT ILIKE '%python%'
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,language_name
MMCWonko/WonkoTheSane,"{""bytes"":92330,""name"":""Ruby""}"
MMCWonko/WonkoTheSane,"{""bytes"":143,""name"":""Shell""}"
amypivo/all_seeing_pi,"{""bytes"":12166,""name"":""Ruby""}"
amypivo/all_seeing_pi,"{""bytes"":101,""name"":""Shell""}"
takuma510/oh-my-demoserver,"{""bytes"":2374,""name"":""Ruby""}"
takuma510/oh-my-demoserver,"{""bytes"":115,""name"":""Shell""}"
jasonrclark/shoes-faux,"{""bytes"":3107,""name"":""Ruby""}"
jasonrclark/shoes-faux,"{""bytes"":115,""name"":""Shell""}"
simonneutert/period_overlap,"{""bytes"":4548,""name"":""Ruby""}"
simonneutert/period_overlap,"{""bytes"":131,""name"":""Shell""}"
corbt/homebrew-cask,"{""bytes"":1766004,""name"":""Ruby""}"
corbt/homebrew-cask,"{""bytes"":52927,""name"":""Shell""}"
interexchange/rack-utm_cookies,"{""bytes"":6188,""name"":""Ruby""}"
interexchange/rack-utm_cookies,"{""bytes"":115,""name"":""Shell""}"
rshell/oracle-enhanced,"{""bytes"":435377,""name"":""Ruby""}"
rshell/oracle-enhanced,"{""bytes"":2042,""name"":""Shell""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":4941,""name"":""Ruby""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":122,""name"":""Shell""}"
a-e/FitNexus,"{""bytes"":5552,""name"":""Ruby""}"
a-e/FitNexus,"{""bytes"":101,""name"":""Shell""}"
phaltoe/movies_news_gem,"{""bytes"":11987,""name"":""Ruby""}"
phaltoe/movies_news_gem,"{""bytes"":131,""name"":""Shell""}"
baschtl/uberssh,"{""bytes"":7456,""name"":""Ruby""}"
baschtl/uberssh,"{""bytes"":115,""name"":""Shell""}"
chetstone/vbusv2,"{""bytes"":8550,""name"":""Ruby""}"
chetstone/vbusv2,"{""bytes"":1443,""name"":""Shell""}"
mclosson/rack-honeytoken,"{""bytes"":5624,""name"":""Ruby""}"
mclosson/rack-honeytoken,"{""bytes"":115,""name"":""Shell""}"
mgall/mooc-scicomp,"{""bytes"":481,""name"":""Ruby""}"
mgall/mooc-scicomp,"{""bytes"":1056,""name"":""Shell""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":10249,""name"":""Ruby""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":131,""name"":""Shell""}"
laarc/sol,"{""bytes"":10389,""name"":""Ruby""}"
laarc/sol,"{""bytes"":446,""name"":""Shell""}"
korishev/mongoid,"{""bytes"":1464284,""name"":""Ruby""}"
korishev/mongoid,"{""bytes"":2378,""name"":""Shell""}"
jharveysmith/nginx,"{""bytes"":72552,""name"":""Ruby""}"
jharveysmith/nginx,"{""bytes"":116,""name"":""Shell""}"
Petermuturi/additiongem,"{""bytes"":1979,""name"":""Ruby""}"
Petermuturi/additiongem,"{""bytes"":115,""name"":""Shell""}"
johann-koebbe/bunny_burrow,"{""bytes"":34594,""name"":""Ruby""}"
johann-koebbe/bunny_burrow,"{""bytes"":657,""name"":""Shell""}"
lonelyplanet/image-resizer,"{""bytes"":18838,""name"":""Ruby""}"
lonelyplanet/image-resizer,"{""bytes"":51,""name"":""Shell""}"
sonots/mysql_getlock,"{""bytes"":7801,""name"":""Ruby""}"
sonots/mysql_getlock,"{""bytes"":131,""name"":""Shell""}"
amarshall/rbenv,"{""bytes"":2160,""name"":""Ruby""}"
amarshall/rbenv,"{""bytes"":21049,""name"":""Shell""}"
ludamillion/ffaker,"{""bytes"":228980,""name"":""Ruby""}"
ludamillion/ffaker,"{""bytes"":60,""name"":""Shell""}"
dandanwei/number_normalizer,"{""bytes"":15046,""name"":""Ruby""}"
dandanwei/number_normalizer,"{""bytes"":131,""name"":""Shell""}"
kakoni/xroad-ruby-client,"{""bytes"":6057,""name"":""Ruby""}"
kakoni/xroad-ruby-client,"{""bytes"":115,""name"":""Shell""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":2330,""name"":""Ruby""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":115,""name"":""Shell""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":1588,""name"":""Ruby""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":25196,""name"":""Shell""}"
masa0x80/arare,"{""bytes"":5642,""name"":""Ruby""}"
masa0x80/arare,"{""bytes"":115,""name"":""Shell""}"
frozenApr/signature_verification,"{""bytes"":3888,""name"":""Ruby""}"
frozenApr/signature_verification,"{""bytes"":131,""name"":""Shell""}"
jutonz/reup,"{""bytes"":6437,""name"":""Ruby""}"
jutonz/reup,"{""bytes"":115,""name"":""Shell""}"
vigo/els,"{""bytes"":2618,""name"":""Ruby""}"
vigo/els,"{""bytes"":115,""name"":""Shell""}"
benbjurstrom/quivjek,"{""bytes"":9096,""name"":""Ruby""}"
benbjurstrom/quivjek,"{""bytes"":131,""name"":""Shell""}"
carlthuringer/restforce,"{""bytes"":123060,""name"":""Ruby""}"
carlthuringer/restforce,"{""bytes"":463,""name"":""Shell""}"
takatoshiono/wavedash,"{""bytes"":17096,""name"":""Ruby""}"
takatoshiono/wavedash,"{""bytes"":115,""name"":""Shell""}"
chadrem/filter_chain,"{""bytes"":11249,""name"":""Ruby""}"
chadrem/filter_chain,"{""bytes"":115,""name"":""Shell""}"
phusion/apachai-hopachai,"{""bytes"":56838,""name"":""Ruby""}"
phusion/apachai-hopachai,"{""bytes"":2613,""name"":""Shell""}"
bhalothia/chef-rundeck,"{""bytes"":29460,""name"":""Ruby""}"
bhalothia/chef-rundeck,"{""bytes"":244,""name"":""Shell""}"
rapid7/chef-conqueso,"{""bytes"":15541,""name"":""Ruby""}"
rapid7/chef-conqueso,"{""bytes"":2132,""name"":""Shell""}"
enriclluelles/homebrew-cask,"{""bytes"":1685661,""name"":""Ruby""}"
enriclluelles/homebrew-cask,"{""bytes"":59881,""name"":""Shell""}"
danielRomero/telegram_api,"{""bytes"":

2025-01-25 23:44:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:32 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:32 - root - INFO - SQL:
SELECT "repo_name", "id", "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" ILIKE '%readme.md%'
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,id,path
hatajoe/github-notification-gopherjs,4d2aa001501107cd2792f385ad62237dc3757521,GitHub-Notification-GopherJS-darwin-x64/GitHub-Notification-GopherJS.app/Contents/Resources/app/node_modules/octonode/node_modules/request/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/README.md
itsthejb/ObjcAssociatedObjectHelpers,b618db0b7811ca2f6619bf52cbb5532cad0152c9,README.md
jdhoek/inkscape-isometric-projection,a770e8d8ad235d5d18238b8e6f854f4285e7e6fd,README.md
lechinoix/Pcap-visualization-project,3f2f855d9439826e819ae4e3499c00d9c7e896c7,PcapFiles/ReadMe.md~
lydell/json-stringify-pretty-compact,6f850c7a63700e8151a5050d876525336d045534,readme.md
notlose/react-native-spring-carousel,82deabcfa3147a218589ec7cd7f97ff82d560618,node_modules/react-native-spring-carousel/node_modules/rebound/README.md
onopko/compass-h5bp-codekit-barebone,fee03d900caa47b424e9f0b6aa402bb684b63ad5,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/node-sass/node_modules/meow/node_modules/camelcase-keys/node_modules/map-obj/readme.md
onopko/compass-h5bp-codekit-barebone,799811370137fec9198ff405c87e5dae1015b3b6,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/less/node_modules/request/README.md
rubis-lab/Vehicle-Dynamics-Simulator,55c2bb25869a537821a990c4ed9ae44800278fbf,README.md
sasha-travkina/humhub-themes-flathub,a5306f0674ee08fbd9d11405d6c948c5d1b5b5bd,README.md
sebarmeli/JS-Redirection-Mobile-Site,d469e6d780b51653f7f075f25af1ecd5343796a8,node_modules/grunt/node_modules/dateformat/Readme.md
seibelj/react-simple-markdown-editor,a28f4b750eb3c7dd98b194ea5bb11b630688285e,README.md
sensu-plugins/sensu-plugins-graphite,b05d5509d58d19b3d9e50b764287c06b2aca41d6,README.md
smartytwiti/master-chat-node-angular,e59b9adae9c90c4f4a7e68ec46e8da717385302b,node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/debug/Readme.md
ConnectSDK/Connect-SDK-Cordova-Plugin,9d5b66343c4e917ad1600b7656dbd2f4112ed8aa,scripts/node_modules/request/node_modules/forever-agent/README.md
DealerDotCom/terraform-provider-bigip,fceda7518ce4187c57b2b62173faca19a3b87d58,vendor/github.com/bgentry/speakeasy/Readme.md
Esri/arcobjects-sdk-community-samples,f02bbb73e25ed8e53441a14b687093572e4fa578,Net/Editing/PointsAlongLine/Readme.md
Esri/arcobjects-sdk-community-samples,d15134448c42ec0556c3a109b9b53f32de56c883,Net/Raster/DMCIIRasterType/Readme.md
EsriCanada-CE/ecce-app-challenge-2016,bfa45d7e2dae5923b79283e3c7a53043fc976a22,SpatialCOGnition/BuildingResilience/resources/lib/ckeditor/skins/moono/readme.md
FlorianBrett/MQTT-Home-Automation-Hub,4d2aa001501107cd2792f385ad62237dc3757521,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/string_decoder/README.md
FlorianBrett/MQTT-Home-Automation-Hub,ac84987849bf1ad18ceb4c18fb9b22688c5d3502,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/gauge/node_modules/lodash.padend/README.md
Marketcloud/ionic-marketcloud-starter,b84aaf6dbf1c1632e4c947b1d7565585466a93e5,www/lib/angular-sanitize/README.md
MrMatthias/BackgroundDrawingAttribute,52f2609b34906459fd26624f03208690d5be74ae,README.md
TheBrazillianForgersTeam/DynamicCraft,91cd27804709bd143cd38169aa312cfbcedeed7a,README.md
XueSeason/Generate-QRCode-BarCode-iOS,b1c56658557b8162aa9f5ba8610ed03a5e558d9d,VMC/node_modules/body-parser/node_modules/http-errors/node_modules/inherits/README.md
cornflourblue/angular-reverse-geocode,5280b54f10c8243759d9af783d7f755acc9b604d,README.md
daigofuji/jekyll-foundation-5-starter,978268e275e8ef007abdd77b22948aaa84d706e4,node_modules/grunt/node_modules/minimatch/README.md
daigofuji/jekyll-foundation-5-starter,44cb6f2455b54e68acf2ff2745e78d465b8e9a33,node_modules/node-sass/node_modules/sass-graph/node_modules/yargs/node_modules/cliui/node_modules/center-align/README.md
hypriot/image-builder-nvidia-shieldtv,66b1f37620a8c97cd082228244cef8699b9052ce,builder/test-integration/README.md
jboss-developer/jboss-wfk-quickstarts,734df3f65e94a0d49bfd836e7e39c32a0a61ed2c,kitchensink-rf/README.md
joeaudette/cloudscribe.Web.Pagination,25235e9882621163af1506609ee4b3d0667c5925,README.md
jonashackt/spring-boot-starter-drools,8162ab9237a3594b9333ad8f66741ea03fb17ebc,README.md
mvalleavila/Kafka-Spark-Hbase-Example,1772612cb962058a3699037ad3a163ea4b6b7269,README.md
ojongerius/terraform-provider-datadog,020b8fbf339e9d986701fc1fda9c95fb06dfc252,vendor/github.com/cenkalti/backoff/README.md
oldnewthing/Windows-universal-samples,1c0a8ee379df3beb9b308d855091c4aa7f94af76,Samples/PasswordVault/README.md
pantheon-systems/quicksilver-examples,135c28beaff68d14f22481e929449e8e38463a02,jira_integration/README.md
patriciogonzalezvivo/thebookofshaders,4499de51bf4c36414508218f81690d2474900d38,glossary/README.md
pavelvlasov/koa-generic-session-mongo,2495e981b52d9229452486a36dbb9054b33967ec,README.md
shekhargulati/52-technologies-in-2016,54d6

2025-01-25 23:44:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 15
2025-01-25 23:44:36 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:36 - root - INFO - SQL:
SELECT "id", "content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   LIMIT 100;
Results:
Too long, hard cut:
id,content
2dd586a19b594a73e9c6f7485d1e5da9203a4467,"/*
 * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips
 *
 * Copyright (C) 2008 David Brownell
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/bcd.h>
#include <linux/slab.h>
#include <linux/rtc.h>
#include <linux/workqueue.h>

#include <linux/spi/spi.h>
#include <linux/spi/ds1305.h>
#include <linux/module.h>


/*
 * Registers ... mask DS1305_WRITE into register address to write,
 * otherwise you're reading it.  All non-bitmask values are BCD.
 */
#define DS1305_WRITE		0x80


/* RTC date/time ... the main special cases are that we:
 *  - Need fancy ""hours"" encoding in 12hour mode
 *  - Don't rely on the ""day-of-week"" field (or tm_wday)
 *  - Are a 21st-century clock (2000 <= year < 2100)
 */
#define DS1305_RTC_LEN		7		/* bytes for RTC regs */

#define DS1305_SEC		0x00		/* register addresses */
#define DS1305_MIN		0x01
#define DS1305_HOUR		0x02
#	define DS1305_HR_12		0x40	/* set == 12 hr mode */
#	define DS1305_HR_PM		0x20	/* set == PM (12hr mode) */
#define DS1305_WDAY		0x03
#define DS1305_MDAY		0x04
#define DS1305_MON		0x05
#define DS1305_YEAR		0x06


/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).
 * DS1305_ALM_DISABLE disables a match field (some combos are bad).
 *
 * NOTE that since we don't use WDAY, we limit ourselves to alarms
 * only one day into the future (vs potentially up to a week).
 *
 * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we
 * don't currently support them.  We'd either need to do it only when
 * no alarm is pending (not the standard model), or to use the second
 * alarm (implying that this is a DS1305 not DS1306, *and* that either
 * it's wired up a second IRQ we know, or that INTCN is set)
 */
#define DS1305_ALM_LEN		4		/* bytes for ALM regs */
#define DS1305_ALM_DISABLE	0x80

#define DS1305_ALM0(r)		(0x07 + (r))	/* register addresses */
#define DS1305_ALM1(r)		(0x0b + (r))


/* three control registers */
#define DS1305_CONTROL_LEN	3		/* bytes of control regs */

#define DS1305_CONTROL		0x0f		/* register addresses */
#	define DS1305_nEOSC		0x80	/* low enables oscillator */
#	define DS1305_WP		0x40	/* write protect */
#	define DS1305_INTCN		0x04	/* clear == only int0 used */
#	define DS1306_1HZ		0x04	/* enable 1Hz output */
#	define DS1305_AEI1		0x02	/* enable ALM1 IRQ */
#	define DS1305_AEI0		0x01	/* enable ALM0 IRQ */
#define DS1305_STATUS		0x10
/* status has just AEIx bits, mirrored as IRQFx */
#define DS1305_TRICKLE		0x11
/* trickle bits are defined in <linux/spi/ds1305.h> */

/* a bunch of NVRAM */
#define DS1305_NVRAM_LEN	96		/* bytes of NVRAM */

#define DS1305_NVRAM		0x20		/* register addresses */


struct ds1305 {
	struct spi_device	*spi;
	struct rtc_device	*rtc;

	struct work_struct	work;

	unsigned long		flags;
#define FLAG_EXITING	0

	bool			hr12;
	u8			ctrl[DS1305_CONTROL_LEN];
};


/*----------------------------------------------------------------------*/

/*
 * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux
 * software (like a bootloader) which may require it.
 */

static unsigned bcd2hour(u8 bcd)
{
	if (bcd & DS1305_HR_12) {
		unsigned	hour = 0;

		bcd &= ~DS1305_HR_12;
		if (bcd & DS1305_HR_PM) {
			hour = 12;
			bcd &= ~DS1305_HR_PM;
		}
		hour += bcd2bin(bcd);
		return hour - 1;
	}
	return bcd2bin(bcd);
}

static u8 hour2bcd(bool hr12, int hour)
{
	if (hr12) {
		hour++;
		if (hour <= 12)
			return DS1305_HR_12 | bin2bcd(hour);
		hour -= 12;
		return DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);
	}
	return bin2bcd(hour);
}

/*----------------------------------------------------------------------*/

/*
 * Interface to RTC framework
 */

static int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		buf[2];
	long		err = -EINVAL;

	buf[0] = DS1305_WRITE | DS1305_CONTROL;
	buf[1] = ds1305->ctrl[0];

	if (enabled) {
		if (ds1305->ctrl[0] & DS1305_AEI0)
			goto done;
		buf[1] |= DS1305_AEI0;
	} else {
		if (!(buf[1] & DS1305_AEI0))
			goto done;
		buf[1] &= ~DS1305_AEI0;
	}
	err = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);
	if (err >= 0)
		ds1305->ctrl[0] = buf[1];
done:
	return err;

}


/*
 * Get/set of date and time is pretty normal.
 */

static int ds1305_get_time(struct device *dev, struct rtc_time *time)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		addr = DS1305_SEC;
	u8		buf[DS1305_RTC_LEN];
	int		status;

	/* Use write-then-read to get all the date/time registers
	 * since dma from stack is nonportable
	 */
	status = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),
			buf, sizeof(buf));
	if (status < 0)
		return status;

	dev_vdbg(dev, ""%s: %02x %02x %02x, %02x %02x %02x %02x\n"",
		""read"", buf[0], buf[1], buf[2], buf[3],
		buf[4]

2025-01-25 23:44:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-25 23:44:37 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:38 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,content
rgardler/azure-quickstart-templates,emercoin-ubuntu/README.md,"# Emercoin Instance

This Microsoft Azure template deploys a single Emercoin client which will connect to the public Emercoin network.

[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json)
<a href=""http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json"" target=""_blank"">
    <img src=""http://armviz.io/visualizebutton.png""/>
</a>

Once your deployment is complete you will be able to connect to the Emercoin public network.

![Emercoin-Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/emercoin-ubuntu/images/emercoin.png)

# Template Parameters
When you launch the installation of the VM, you need to specify the following parameters:
* `vmDnsPrefix`: this is the public DNS name for the VM that you will use interact with your console. You just need to specify an unique name.
* `adminUsername`: self-explanatory. This is the account you will use for connecting to the node
* `adminPassword`: self-explanatory. Be aware that Azure requires passwords to have One upper case, one lower case, a special character, and a number
* `vmSize`: The type of VM that you want to use for the node. The default size is D1_v2 but you can change that if you expect to run workloads that require more RAM or CPU resources.

# Emercoin Deployment Walkthrough
1. Get your node's IP
 1. browse to https://portal.azure.com

 2. then click browse all, followed by ""resource groups"", and choose your resource group

 3. then expand your resources, and public ip address of your node.

2. Connect to your node
 1. SSH to the public ip of your node as the user you specified for `adminUsername`, enter your `adminPassword`
 2. Try to use the cli-client by `emc help` or `emc getinfo`
 3. Point your browser to the public ip of your node, sign in with `adminUsername` and `adminPassword` specified before (note that browser may show you a warning of bad certificate - it's OK, you may replace the self-signed certificates by yours at /etc/ssl/emc/emcweb*)
"
DaMSL/K3,tools/scripts/docker/README.md,"K3 Dockerfiles
==========

Dockerfiles are updated for three images:

1. **k3-app** -- (~250MB) light-weight image to run a K3 program. Based on debian:jessie. It contains only the necessary dependency libraries.
2. **k3-compiler** -- (~2 GB) Image containing the GHC and GCC tool chains to compile a K3 program to binary. Based on debian:jessie
3. **k3-dev** (~2.5 GB)  -- Larger container with additional library and application support (e.g. clang, ruby, vim, and others). It is based on debian:sid

To build an image use the following command:

```
docker build -f k3-dev -t damsl/k3-dev:<your_tag> .
```

(Note: Docker build now has the -f option, so you don't have to call all docker files, ""Dockerfile"")

The image ```damsl/k3-dev:vanilla``` which is pushed to the repo contains the K3 source built with no options. Feel free to pull, use, & re-build K3 with whatever options necessary (and re-push with a new tag if needed).

The other scripts in here are left for legacy purposes.

Build Dependency Versions:
<pre>
  - GHC: 7.10.1
  - GCC: 4.9.2
  - Boost: 1.57
  - Mesos: 0.22.1</pre>
"
briancavalier/todomvc-fab,examples/cujo/bower_components/curl/src/curl/plugin/README.md,"curl.js loader plugins
===

Please see the wiki for information about using plugins.  If you're interested
in creating your own plugins, please check out the Plugin Author's Guide
on the wiki (TBD).

All of these plugins conform to the AMD specification.  However, that
doesn't necessarily mean that they'll work with other AMD loaders or
builders.  Until the build-time API of AMD is finalized, there will be
incompatibilities.

Modules that should work with any loader/builder:

async!
domReady!
js!
link!

TODO:

json! (auto-detects xdomain and uses JSON-P)
"
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of y

2025-01-25 23:44:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:44:39 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:40 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
     AND c."content" ILIKE '%Copyright (c)%'
   LIMIT 100;
Results:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"

2025-01-25 23:44:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:41 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:42 - root - INFO - SQL:
SELECT DISTINCT f."repo_name"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" ILIKE '%readme.md%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      )
    LIMIT 100;
Results:
repo_name
smartytwiti/master-chat-node-angular
repotag/rjgit
splunk/splunk-sdk-javascript
AndrewKralovec/Mongo-My-Admin
chef/knife-openstack
saladinkzn/gretty
mashery/iodocs
ppaulojr/PPJEmailPicker
lipelip/DWM
nicolewhite/neo4j-complaints
tategakibunko/nehan.js
sendgridlabs/loggly-docker
MozillaKerala/botzilla
upnext/BeaconCtrl
ljo/exist-sparql
Kaixhin/FGMachine
android-cn/android-open-project-demo
google/iosched
opentok/opentok-hardware-setup.js
duliodenis/HackingWithSwift
A5hleyRich/wp-background-processing
mariusschulz/ExtraLINQ
oarrabi/OALayoutAnchor
JustServerless/awesome-serverless
kyleweiner/Cool-Beans
DLuensch/StereoVision-ADCensus
videodromm/Cardboard
hokaccha/nodebrew
SuperManitu/AdvancedDispensersMod2.0
anzfactory/QiitaCollection
tomas/skull
puikinsh/gentelella
itsKaynine/SwiftRaisedTab
Turfjs/turf
foreverjs/nssocket
dodola/Gitbook
jboss-developer/jboss-wfk-quickstarts
NewVisionsForPublicSchools/autoCrat-SCRIPT
getlantern/lantern
jucimarjr/html5games
samuelthomas2774/oauth-client
xuwang/coreos-docker-dev
girliemac/RPi-KittyCam
customink/secondbase
malyw/malyw.github.io
thomasmeadows/atom-commentcode
alimysoyang/InAppWebHTTPServer
TelerikAcademy/CSharp-Part-1
nytlabs/hive
pratamawijaya/example
cpuguy83/kvfs
jamesshore/lets_code_javascript
neufeld/pandaseq
rakeshkadamati/MIPS-32-Bit-Verilog
CaliStyle/humpback
Obijuan/tutoriales-freecad
bingblue/parttime
robert52/simple-upload
smihir/simuino
mstruebing/web-s
camelmasa/animate-rails
netblue30/firetools
lt/php-cryptopals
JonHMChan/descartes
IBM-DTeam/swift-ibm_db
jcrubino/beego-composer
CeeJayDK/SweetFX
aloha-app/libcurldroid
Maxx53/NoCableLauncher
HeinrichReimer/inquiry
raweng/android-different-loading-animations
dmilicic/android-clean-sample-app
ethereum/meteor-dapp-whisper-chat-client
ArunMichaelDsouza/CSS-Mint
jeromeetienne/threex.htmlmixer
mil-oss/MTFXML
Eric-Guo/wechat
wonderkiln/WKAwesomeMenu
michaljach/ember-cli-deploy-scp
deech/fltkhs
lsegal/atom-runner
hicTech/cssPlus
luca-piccioni/OpenGL.Net
HubSpot/jinjava
oleksiyk/kafka
akhikhl/wuff
QianXY/xbox_project
naokits/my-programming-marathon
ExtremeLearningMachines/ELM-LRF
ihrthk/android-gradle-mulchannel-plugin
mahkoh/rust-tox
yeikos/js.merge
digitalcraftsman/hugo-type-theme
IdentityServer/IdentityServer3.MembershipReboot
zgldh/laravel-query-filter
igorw/compose
RookStudios/Lernkartei
zhuowenli/zhuowenli.github.io
yincart2/galaxy
gcarq/rusty-blockparser

2025-01-25 23:44:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:44:43 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:44 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%Copyright (c)%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      )
    LIMIT 100;
Results:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"

2025-01-25 23:44:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:44:45 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:46 - root - INFO - SQL:
SELECT COUNT(*) AS "total_readme_files"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" ILIKE '%readme.md%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      );
Results:
total_readme_files
2550

2025-01-25 23:44:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:44:47 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:48 - root - INFO - SQL:
SELECT COUNT(*) AS "copyright_readme_files"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%Copyright (c)%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      );
Results:
copyright_readme_files
1

2025-01-25 23:44:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:44:50 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:50 - root - INFO - SQL:
SELECT
      (SELECT COUNT(*)
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
       JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
         ON f."id" = c."id"
       WHERE f."path" ILIKE '%readme.md%'
         AND c."content" ILIKE '%Copyright (c)%'
         AND f."repo_name" NOT IN (
           SELECT DISTINCT l."repo_name"
           FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
             LATERAL FLATTEN(input => l."language") lang
           WHERE lang.VALUE::STRING ILIKE '%python%'
         )
      )::FLOAT /
      (SELECT COUNT(*)
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
       WHERE f."path" ILIKE '%readme.md%'
         AND f."repo_name" NOT IN (
           SELECT DISTINCT l."repo_name"
           FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
             LATERAL FLATTEN(input => l."language") lang
           WHERE lang.VALUE::STRING ILIKE '%python%'
         )
      ) AS "proportion";
Results:
proportion
0.000392156862745098

2025-01-25 23:44:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:44:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:44:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:44:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 23:44:51 - snowflake.connector.connection - INFO - closed
2025-01-25 23:44:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:44:52 - root - INFO - SQL:
SELECT l."repo_name", l."language"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l
    LIMIT 100;
Results:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]

2025-01-25 23:44:52 - root - INFO - itercount: 0
2025-01-25 23:44:52 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
DDL describes table information.
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_FILES', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
**Relevant tables and columns:**

- **Table:** `LANGUAGES`
  - `"repo_name"`: Identifies repositories.
    - **Usage:** To link repositories to their languages.
  - `"language"`: Contains programming languages used in the repository (as a VARIANT type).
    - **Usage:** To check if a repository uses any language with 'python' in its name.
    - **Condition:** Exclude repositories where `"language"` includes 'python'.

- **Table:** `SAMPLE_FILES`
  - `"repo_name"`: Identifies repositories.
    - **Usage:** To link files to their repositories.
  - `"path"`: File paths in the repository.
    - **Usage:** To select files where `"path"` includes 'readme.md'.
    - **Condition:** Include files where `"path"` ILIKE '%readme.md%'.
  - `"id"`: Unique identifier for each file.
    - **Usage:** To join with `SAMPLE_CONTENTS` table on `"id"`.

- **Table:** `SAMPLE_CONTENTS`
  - `"id"`: Matches the `"id"` in `SAMPLE_FILES`.
    - **Usage:** To join with `SAMPLE_FILES` to get file contents.
  - `"content"`: Content of the file.
    - **Usage:** To check if the file contains the phrase 'Copyright (c)'.
    - **Condition:** Include files where `"content"` ILIKE '%Copyright (c)%'.

**Conditions to be used:**

- Exclude repositories that use any programming language with 'python' in its name.
- Include files where `"path"` includes 'readme.md'.
- Include files where `"content"` contains 'Copyright (c)'.

---

**SQL Queries:**

1. **Retrieve distinct repository names from the `LANGUAGES` table:**

   ```sql
   SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES"
   LIMIT 100;
   ```

2. **List all languages used in each repository (raw `language` data):**

   ```sql
   SELECT "repo_name", "language"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES"
   LIMIT 100;
   ```

3. **Extract individual languages per repository using `FLATTEN`:**

   ```sql
   SELECT "repo_name", l.VALUE::STRING AS "language_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   LIMIT 100;
   ```

4. **Find repositories that use a language with 'python' in its name:**

   ```sql
   SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   WHERE l.VALUE::STRING ILIKE '%python%'
   LIMIT 100;
   ```

5. **List repositories and their languages excluding those with 'python':**

   ```sql
   SELECT "repo_name", l.VALUE::STRING AS "language_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   WHERE l.VALUE::STRING NOT ILIKE '%python%'
   LIMIT 100;
   ```

6. **Get files where `"path"` includes 'readme.md' from `SAMPLE_FILES`:**

   ```sql
   SELECT "repo_name", "id", "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" ILIKE '%readme.md%'
   LIMIT 100;
   ```

7. **Preview contents of files from `SAMPLE_CONTENTS` table:**

   ```sql
   SELECT "id", "content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   LIMIT 100;
   ```

8. **Join `SAMPLE_FILES` and `SAMPLE_CONTENTS` on `"id"` to get file contents for 'readme.md' files:**

   ```sql
   SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
   LIMIT 100;
   ```

9. **Find 'readme.md' files containing 'Copyright (c)' in their content:**

   ```sql
   SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
     AND c."content" ILIKE '%Copyright (c)%'
   LIMIT 100;
   ```

10. **List repositories without 'python' that have 'readme.md' files:**

    ```sql
    SELECT DISTINCT f."repo_name"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" ILIKE '%readme.md%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      )
    LIMIT 100;
    ```

11. **Get 'readme.md' files in repositories without 'python' that contain 'Copyright (c)':**

    ```sql
    SELECT f."repo_name", f."path", c."content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%Copyright (c)%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      )
    LIMIT 100;
    ```

12. **Count total 'readme.md' files in repositories without 'python':**

    ```sql
    SELECT COUNT(*) AS "total_readme_files"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" ILIKE '%readme.md%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      );
    ```

13. **Count 'readme.md' files containing 'Copyright (c)' in repositories without 'python':**

    ```sql
    SELECT COUNT(*) AS "copyright_readme_files"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%Copyright (c)%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      );
    ```

14. **Calculate the proportion of 'readme.md' files containing 'Copyright (c)' over total 'readme.md' files in repositories without 'python' (using a subquery for totals):**

    ```sql
    SELECT
      (SELECT COUNT(*)
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
       JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
         ON f."id" = c."id"
       WHERE f."path" ILIKE '%readme.md%'
         AND c."content" ILIKE '%Copyright (c)%'
         AND f."repo_name" NOT IN (
           SELECT DISTINCT l."repo_name"
           FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
             LATERAL FLATTEN(input => l."language") lang
           WHERE lang.VALUE::STRING ILIKE '%python%'
         )
      )::FLOAT /
      (SELECT COUNT(*)
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
       WHERE f."path" ILIKE '%readme.md%'
         AND f."repo_name" NOT IN (
           SELECT DISTINCT l."repo_name"
           FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
             LATERAL FLATTEN(input => l."language") lang
           WHERE lang.VALUE::STRING ILIKE '%python%'
         )
      ) AS "proportion";
    ```

15. **Preview of repositories and languages for verification purposes:**

    ```sql
    SELECT l."repo_name", l."language"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l
    LIMIT 100;
    ```

**Note:** These queries help in understanding the values in the related columns and how they can be used to compute the required proportion. They explore different aspects of the data, from simple selections to more complex joins and aggregations, following the instructions provided.Query:
SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES"
   LIMIT 100;
Answer:
repo_name
bound1ess/selectable
sylvek/leeloo
openMF/mifosx-packager
SpringMT/rack-qrcode
fblupi/GEventator
BrianBailey/gem_practice
DigixGlobal/aurum
groknix/rsyslog
benjaminoakes/odin
tdug/filter_countable
dkong/bash-git-prompt
magicdrive/ruby-git-gems
jronallo/abrizer
nicrou/owl_carousel-rails
skylarsch/elo
vumanhcuongit/cex-rb
vlesierse/coreos-vagrant
Mobilette/MobiletteSwiftBaseProject
jessesquires/PrintlnMagic
macram/rxNetflixRoulette
FirebaseExtended/codelab-textclassification-ios
akpw/SwiftNetworkImages
iSapozhnik/FamilyPocket
danpratt/Simply-Zen
mathstuf/dbus-serialize
nandub/homebrew
eschnett/HelloWorld1.jl
livetat/TKSwarmAlert
marcelodeolive1ra/DC-UFSCar-ES2-201601-GrupoHelloWorld
pollow/xyzSQL
adamzimny/Chess4f
jgoldfar/Sundials.jl
biblelamp/JavaExercises
boddhisattva/oh-my-zsh
JuliaPackageMirrors/JuliaFEM.jl
jducoeur/jstree-facade
mitsuse/neocomplete-kompl
itswindtw/spock
sponomarev/swarker
McPolemic/fine-ants
covermymeds/elastic_results
SanctionCo/pilot-ios
banjun/JetToTheFuture
ZhengQingchen/ContactList
stainless-steel/opentype
nathansizemore/simple-slab
FuzzOli87/vim-sauce
2027205T/tango_with_django
jimmyngo/rust-parsetime
schnake24/teich_commander
crystal/autocode-homebrew
siburb/STTwitter
dynaTrace/Dynatrace-easyTravel-Ansible
Duceux/Arty
cjww-development/rest-api
Keno/REPLCompletions.jl
paulcbetts/node-raven
imrhk/AndroidApps
klr-android/zhejiulai
shengxiang205/mongoid
adzzie/test
FragCoder/bootstrap-left-slide-menu
jaredq/EnBe
comblox/PnP-Provisioning-Schema
DrZivil/appquizr
chisty/asp.net-web-api-articles
Anzacday/anzac-day-tours-gallipoli
arthurhammer/gamin-watch-apps
teslasleep/sql
shykes/dokku
jhoneswilliam/Calendar-Group
MarkusFuchs20OnGitHub/UnklaresDenken
rudijs/elk-filebeat-seed
tracylv/appframework
kevoree/docker-image-kevoree-browser-runtime
Brokous/Message
nicorevin/beep
Lekx/practica3html
ZamkoveDlazby/ZamkoveDlazby
bryanwillis/dashhack
vkimura/githubtest_01
janvanhulzen/Temperature-Control
uBbOo/LeapKinet2OSC
nutt2/ispconfig_fi
Akki1697/Loppy
jeff-blaisdell/date
jamiepg1/Repository27
creativecircleTM/Teste
PaulAnnekov/AlgoForFun
Noah-Huppert/youtube-contest-helper
ikergravalos/pruebas2015
tommykw/shiki
jagatmerah/north-american-octo-cyril
graidl/test
Centreon-Widgets/centreon-widget-broker-status
polotek/min-local-store
jeejisme/religion
yass23in/squealing-capsicum
bvincent1/lonelyTwiiterTest-1
LrdPatrick/TPG1
Query:
SELECT "repo_name", "language"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES"
   LIMIT 100;
Answer:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]
Query:
SELECT "repo_name", l.VALUE::STRING AS "language_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,language_name
MMCWonko/WonkoTheSane,"{""bytes"":92330,""name"":""Ruby""}"
MMCWonko/WonkoTheSane,"{""bytes"":143,""name"":""Shell""}"
amypivo/all_seeing_pi,"{""bytes"":12166,""name"":""Ruby""}"
amypivo/all_seeing_pi,"{""bytes"":101,""name"":""Shell""}"
takuma510/oh-my-demoserver,"{""bytes"":2374,""name"":""Ruby""}"
takuma510/oh-my-demoserver,"{""bytes"":115,""name"":""Shell""}"
jasonrclark/shoes-faux,"{""bytes"":3107,""name"":""Ruby""}"
jasonrclark/shoes-faux,"{""bytes"":115,""name"":""Shell""}"
simonneutert/period_overlap,"{""bytes"":4548,""name"":""Ruby""}"
simonneutert/period_overlap,"{""bytes"":131,""name"":""Shell""}"
corbt/homebrew-cask,"{""bytes"":1766004,""name"":""Ruby""}"
corbt/homebrew-cask,"{""bytes"":52927,""name"":""Shell""}"
interexchange/rack-utm_cookies,"{""bytes"":6188,""name"":""Ruby""}"
interexchange/rack-utm_cookies,"{""bytes"":115,""name"":""Shell""}"
rshell/oracle-enhanced,"{""bytes"":435377,""name"":""Ruby""}"
rshell/oracle-enhanced,"{""bytes"":2042,""name"":""Shell""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":4941,""name"":""Ruby""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":122,""name"":""Shell""}"
a-e/FitNexus,"{""bytes"":5552,""name"":""Ruby""}"
a-e/FitNexus,"{""bytes"":101,""name"":""Shell""}"
phaltoe/movies_news_gem,"{""bytes"":11987,""name"":""Ruby""}"
phaltoe/movies_news_gem,"{""bytes"":131,""name"":""Shell""}"
baschtl/uberssh,"{""bytes"":7456,""name"":""Ruby""}"
baschtl/uberssh,"{""bytes"":115,""name"":""Shell""}"
chetstone/vbusv2,"{""bytes"":8550,""name"":""Ruby""}"
chetstone/vbusv2,"{""bytes"":1443,""name"":""Shell""}"
mclosson/rack-honeytoken,"{""bytes"":5624,""name"":""Ruby""}"
mclosson/rack-honeytoken,"{""bytes"":115,""name"":""Shell""}"
mgall/mooc-scicomp,"{""bytes"":481,""name"":""Ruby""}"
mgall/mooc-scicomp,"{""bytes"":1056,""name"":""Shell""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":10249,""name"":""Ruby""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":131,""name"":""Shell""}"
laarc/sol,"{""bytes"":10389,""name"":""Ruby""}"
laarc/sol,"{""bytes"":446,""name"":""Shell""}"
korishev/mongoid,"{""bytes"":1464284,""name"":""Ruby""}"
korishev/mongoid,"{""bytes"":2378,""name"":""Shell""}"
jharveysmith/nginx,"{""bytes"":72552,""name"":""Ruby""}"
jharveysmith/nginx,"{""bytes"":116,""name"":""Shell""}"
Petermuturi/additiongem,"{""bytes"":1979,""name"":""Ruby""}"
Petermuturi/additiongem,"{""bytes"":115,""name"":""Shell""}"
johann-koebbe/bunny_burrow,"{""bytes"":34594,""name"":""Ruby""}"
johann-koebbe/bunny_burrow,"{""bytes"":657,""name"":""Shell""}"
lonelyplanet/image-resizer,"{""bytes"":18838,""name"":""Ruby""}"
lonelyplanet/image-resizer,"{""bytes"":51,""name"":""Shell""}"
sonots/mysql_getlock,"{""bytes"":7801,""name"":""Ruby""}"
sonots/mysql_getlock,"{""bytes"":131,""name"":""Shell""}"
amarshall/rbenv,"{""bytes"":2160,""name"":""Ruby""}"
amarshall/rbenv,"{""bytes"":21049,""name"":""Shell""}"
ludamillion/ffaker,"{""bytes"":228980,""name"":""Ruby""}"
ludamillion/ffaker,"{""bytes"":60,""name"":""Shell""}"
dandanwei/number_normalizer,"{""bytes"":15046,""name"":""Ruby""}"
dandanwei/number_normalizer,"{""bytes"":131,""name"":""Shell""}"
kakoni/xroad-ruby-client,"{""bytes"":6057,""name"":""Ruby""}"
kakoni/xroad-ruby-client,"{""bytes"":115,""name"":""Shell""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":2330,""name"":""Ruby""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":115,""name"":""Shell""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":1588,""name"":""Ruby""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":25196,""name"":""Shell""}"
masa0x80/arare,"{""bytes"":5642,""name"":""Ruby""}"
masa0x80/arare,"{""bytes"":115,""name"":""Shell""}"
frozenApr/signature_verification,"{""bytes"":3888,""name"":""Ruby""}"
frozenApr/signature_verification,"{""bytes"":131,""name"":""Shell""}"
jutonz/reup,"{""bytes"":6437,""name"":""Ruby""}"
jutonz/reup,"{""bytes"":115,""name"":""Shell""}"
vigo/els,"{""bytes"":2618,""name"":""Ruby""}"
vigo/els,"{""bytes"":115,""name"":""Shell""}"
benbjurstrom/quivjek,"{""bytes"":9096,""name"":""Ruby""}"
benbjurstrom/quivjek,"{""bytes"":131,""name"":""Shell""}"
carlthuringer/restforce,"{""bytes"":123060,""name"":""Ruby""}"
carlthuringer/restforce,"{""bytes"":463,""name"":""Shell""}"
takatoshiono/wavedash,"{""bytes"":17096,""name"":""Ruby""}"
takatoshiono/wavedash,"{""bytes"":115,""name"":""Shell""}"
chadrem/filter_chain,"{""bytes"":11249,""name"":""Ruby""}"
chadrem/filter_chain,"{""bytes"":115,""name"":""Shell""}"
phusion/apachai-hopachai,"{""bytes"":56838,""name"":""Ruby""}"
phusion/apachai-hopachai,"{""bytes"":2613,""name"":""Shell""}"
bhalothia/chef-rundeck,"{""bytes"":29460,""name"":""Ruby""}"
bhalothia/chef-rundeck,"{""bytes"":244,""name"":""Shell""}"
rapid7/chef-conqueso,"{""bytes"":15541,""name"":""Ruby""}"
rapid7/chef-conqueso,"{""bytes"":2132,""name"":""Shell""}"
enriclluelles/homebrew-cask,"{""bytes"":1685661,""name"":""Ruby""}"
enriclluelles/homebrew-cask,"{""bytes"":59881,""name"":""Shell""}"
danielRomero/telegram_api,"{""bytes"":
Query:
SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   WHERE l.VALUE::STRING ILIKE '%python%'
   LIMIT 100;
Answer:
repo_name
vonwenm/antler4book
metatron-app/metatron-discovery
leepc12/BigDataScript
aanastasiou/adl_ebnf
followyourheart/vowpal_wabbit
dusenberrymw/incubator-systemml
gcnonato/presto
milliman/spark
collinjackson/mojo
symek/open-gto
Ultimaker/Uranium
lucteo/conan-llvm
ubuntu5678/pimouse_run_corridor
dcaceresd/pose_publisher
shaggytwodope/clockr
Neal/oh-my-zsh
waywardmonkeys/http-builder
kudlav/dnf
sagarwaghmare69/dp
yu5611789/oh-my-zsh
nccgroup/joern
STLInspector/STLInspector
denizdemir/presto
nickwallen/metron
b-slim/hive
ericvandenbergfb/spark
dongjoon-hyun/spark
zjureel/flink
sotty/drools
zhangpf/cloudroid
KDE/printer-applet
TimSalimans/HiggsML
ukleinek/bash-completion
WPI-RAIL/battery_monitor_rmp
couchbase/couchbase-cli
rootAvish/scrapy
JarrettR/Altium-CircuitMaker-Tools
berngp/oh-my-zsh
mutse/remastersys
arminnh/c-to-p-compiler
sim2541/pimouse_ros
KDE/stibium
JackMc/datacats
zhreshold/mxnet
Kapim/ar-table-itable
lovepark/o3d3xx-h5
tlmohren/Msc_thesis
marsorp/blog
Towards-Autonomous/kitti_odom
pdebuyl-lab/RMPCDMD
LantaoJin/spark
Helen-Zhao/elasticsearch
FedericoRessi/networking-odl
takeshineshiro/oh-my-zsh
LinusU/fbthrift
KanDisheng/HelloWorld
OpenClovis/SAFplus-Availability-Scalability-Platform
Jildor/ZoneLimit
PGower/google-diff-match-patch
RyokoAkizuki/mtasa-blue
aufflick/core-plot
xtremelabs/core-plot
brutto/google-diff-match-patch
paraboul/libmpq
Maijin/sdb
utisam/gfly
pbomta/or-tools
alpaca-tc/comment_extractor
leodemoura/z3
snowshine09/google-diff-match-patch
dandycheung/distorm
Testinos/Freerdp
SkyFireArchives/SkyFireEMU_420
chaupt/google-diff-match-patch
liangsen/google-diff-match-patch
marcotm/google-diff-match-patch
snowyu/google-diff-match-patch
mannewalis/google-diff-match-patch
ericsnowcurrently/juju
Sajid3/Cello
ZeroK-RTS/SpringRTS-Tools
AlexTMjugador/mtasa-blue
Dellware78/mtasa-blue
scottj/google-diff-match-patch
dyadyuramaxim/google-diff-match-patch
lincsoon/crosswalk
uus169/libpomelo2
WebByBrains/cocos2d-x-boilerplate
merikonjatta/wayak-wiki
IEEE-NITK/Daedalus
alphaKAI/mal
andondaniel/tria
Mferrill/TrinityCustom
hanxi/HXGame
olejorgenb/google-diff-match-patch-archived
RiccardoPecora/MP
chjp2046/fbthrift
sherazkasi/SabreSoftware
ivarptr/google-diff-match-patch
sbesson/zeroc-ice
Query:
SELECT "repo_name", l.VALUE::STRING AS "language_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES",
     LATERAL FLATTEN(input => "language") l
   WHERE l.VALUE::STRING NOT ILIKE '%python%'
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,language_name
MMCWonko/WonkoTheSane,"{""bytes"":92330,""name"":""Ruby""}"
MMCWonko/WonkoTheSane,"{""bytes"":143,""name"":""Shell""}"
amypivo/all_seeing_pi,"{""bytes"":12166,""name"":""Ruby""}"
amypivo/all_seeing_pi,"{""bytes"":101,""name"":""Shell""}"
takuma510/oh-my-demoserver,"{""bytes"":2374,""name"":""Ruby""}"
takuma510/oh-my-demoserver,"{""bytes"":115,""name"":""Shell""}"
jasonrclark/shoes-faux,"{""bytes"":3107,""name"":""Ruby""}"
jasonrclark/shoes-faux,"{""bytes"":115,""name"":""Shell""}"
simonneutert/period_overlap,"{""bytes"":4548,""name"":""Ruby""}"
simonneutert/period_overlap,"{""bytes"":131,""name"":""Shell""}"
corbt/homebrew-cask,"{""bytes"":1766004,""name"":""Ruby""}"
corbt/homebrew-cask,"{""bytes"":52927,""name"":""Shell""}"
interexchange/rack-utm_cookies,"{""bytes"":6188,""name"":""Ruby""}"
interexchange/rack-utm_cookies,"{""bytes"":115,""name"":""Shell""}"
rshell/oracle-enhanced,"{""bytes"":435377,""name"":""Ruby""}"
rshell/oracle-enhanced,"{""bytes"":2042,""name"":""Shell""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":4941,""name"":""Ruby""}"
nscarlyon/regal-now-playing-cli-gem,"{""bytes"":122,""name"":""Shell""}"
a-e/FitNexus,"{""bytes"":5552,""name"":""Ruby""}"
a-e/FitNexus,"{""bytes"":101,""name"":""Shell""}"
phaltoe/movies_news_gem,"{""bytes"":11987,""name"":""Ruby""}"
phaltoe/movies_news_gem,"{""bytes"":131,""name"":""Shell""}"
baschtl/uberssh,"{""bytes"":7456,""name"":""Ruby""}"
baschtl/uberssh,"{""bytes"":115,""name"":""Shell""}"
chetstone/vbusv2,"{""bytes"":8550,""name"":""Ruby""}"
chetstone/vbusv2,"{""bytes"":1443,""name"":""Shell""}"
mclosson/rack-honeytoken,"{""bytes"":5624,""name"":""Ruby""}"
mclosson/rack-honeytoken,"{""bytes"":115,""name"":""Shell""}"
mgall/mooc-scicomp,"{""bytes"":481,""name"":""Ruby""}"
mgall/mooc-scicomp,"{""bytes"":1056,""name"":""Shell""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":10249,""name"":""Ruby""}"
rjcolmed/featured-wiki-cli-app,"{""bytes"":131,""name"":""Shell""}"
laarc/sol,"{""bytes"":10389,""name"":""Ruby""}"
laarc/sol,"{""bytes"":446,""name"":""Shell""}"
korishev/mongoid,"{""bytes"":1464284,""name"":""Ruby""}"
korishev/mongoid,"{""bytes"":2378,""name"":""Shell""}"
jharveysmith/nginx,"{""bytes"":72552,""name"":""Ruby""}"
jharveysmith/nginx,"{""bytes"":116,""name"":""Shell""}"
Petermuturi/additiongem,"{""bytes"":1979,""name"":""Ruby""}"
Petermuturi/additiongem,"{""bytes"":115,""name"":""Shell""}"
johann-koebbe/bunny_burrow,"{""bytes"":34594,""name"":""Ruby""}"
johann-koebbe/bunny_burrow,"{""bytes"":657,""name"":""Shell""}"
lonelyplanet/image-resizer,"{""bytes"":18838,""name"":""Ruby""}"
lonelyplanet/image-resizer,"{""bytes"":51,""name"":""Shell""}"
sonots/mysql_getlock,"{""bytes"":7801,""name"":""Ruby""}"
sonots/mysql_getlock,"{""bytes"":131,""name"":""Shell""}"
amarshall/rbenv,"{""bytes"":2160,""name"":""Ruby""}"
amarshall/rbenv,"{""bytes"":21049,""name"":""Shell""}"
ludamillion/ffaker,"{""bytes"":228980,""name"":""Ruby""}"
ludamillion/ffaker,"{""bytes"":60,""name"":""Shell""}"
dandanwei/number_normalizer,"{""bytes"":15046,""name"":""Ruby""}"
dandanwei/number_normalizer,"{""bytes"":131,""name"":""Shell""}"
kakoni/xroad-ruby-client,"{""bytes"":6057,""name"":""Ruby""}"
kakoni/xroad-ruby-client,"{""bytes"":115,""name"":""Shell""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":2330,""name"":""Ruby""}"
minimum2scp/rspec-formatter-slack,"{""bytes"":115,""name"":""Shell""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":1588,""name"":""Ruby""}"
michael-ni/docker-enabled-vagrant,"{""bytes"":25196,""name"":""Shell""}"
masa0x80/arare,"{""bytes"":5642,""name"":""Ruby""}"
masa0x80/arare,"{""bytes"":115,""name"":""Shell""}"
frozenApr/signature_verification,"{""bytes"":3888,""name"":""Ruby""}"
frozenApr/signature_verification,"{""bytes"":131,""name"":""Shell""}"
jutonz/reup,"{""bytes"":6437,""name"":""Ruby""}"
jutonz/reup,"{""bytes"":115,""name"":""Shell""}"
vigo/els,"{""bytes"":2618,""name"":""Ruby""}"
vigo/els,"{""bytes"":115,""name"":""Shell""}"
benbjurstrom/quivjek,"{""bytes"":9096,""name"":""Ruby""}"
benbjurstrom/quivjek,"{""bytes"":131,""name"":""Shell""}"
carlthuringer/restforce,"{""bytes"":123060,""name"":""Ruby""}"
carlthuringer/restforce,"{""bytes"":463,""name"":""Shell""}"
takatoshiono/wavedash,"{""bytes"":17096,""name"":""Ruby""}"
takatoshiono/wavedash,"{""bytes"":115,""name"":""Shell""}"
chadrem/filter_chain,"{""bytes"":11249,""name"":""Ruby""}"
chadrem/filter_chain,"{""bytes"":115,""name"":""Shell""}"
phusion/apachai-hopachai,"{""bytes"":56838,""name"":""Ruby""}"
phusion/apachai-hopachai,"{""bytes"":2613,""name"":""Shell""}"
bhalothia/chef-rundeck,"{""bytes"":29460,""name"":""Ruby""}"
bhalothia/chef-rundeck,"{""bytes"":244,""name"":""Shell""}"
rapid7/chef-conqueso,"{""bytes"":15541,""name"":""Ruby""}"
rapid7/chef-conqueso,"{""bytes"":2132,""name"":""Shell""}"
enriclluelles/homebrew-cask,"{""bytes"":1685661,""name"":""Ruby""}"
enriclluelles/homebrew-cask,"{""bytes"":59881,""name"":""Shell""}"
danielRomero/telegram_api,"{""bytes"":
Query:
SELECT "repo_name", "id", "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" ILIKE '%readme.md%'
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,id,path
hatajoe/github-notification-gopherjs,4d2aa001501107cd2792f385ad62237dc3757521,GitHub-Notification-GopherJS-darwin-x64/GitHub-Notification-GopherJS.app/Contents/Resources/app/node_modules/octonode/node_modules/request/node_modules/bl/node_modules/readable-stream/node_modules/string_decoder/README.md
itsthejb/ObjcAssociatedObjectHelpers,b618db0b7811ca2f6619bf52cbb5532cad0152c9,README.md
jdhoek/inkscape-isometric-projection,a770e8d8ad235d5d18238b8e6f854f4285e7e6fd,README.md
lechinoix/Pcap-visualization-project,3f2f855d9439826e819ae4e3499c00d9c7e896c7,PcapFiles/ReadMe.md~
lydell/json-stringify-pretty-compact,6f850c7a63700e8151a5050d876525336d045534,readme.md
notlose/react-native-spring-carousel,82deabcfa3147a218589ec7cd7f97ff82d560618,node_modules/react-native-spring-carousel/node_modules/rebound/README.md
onopko/compass-h5bp-codekit-barebone,fee03d900caa47b424e9f0b6aa402bb684b63ad5,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/node-sass/node_modules/meow/node_modules/camelcase-keys/node_modules/map-obj/readme.md
onopko/compass-h5bp-codekit-barebone,799811370137fec9198ff405c87e5dae1015b3b6,node_modules/grunt-pleeease/node_modules/pleeease/node_modules/less/node_modules/request/README.md
rubis-lab/Vehicle-Dynamics-Simulator,55c2bb25869a537821a990c4ed9ae44800278fbf,README.md
sasha-travkina/humhub-themes-flathub,a5306f0674ee08fbd9d11405d6c948c5d1b5b5bd,README.md
sebarmeli/JS-Redirection-Mobile-Site,d469e6d780b51653f7f075f25af1ecd5343796a8,node_modules/grunt/node_modules/dateformat/Readme.md
seibelj/react-simple-markdown-editor,a28f4b750eb3c7dd98b194ea5bb11b630688285e,README.md
sensu-plugins/sensu-plugins-graphite,b05d5509d58d19b3d9e50b764287c06b2aca41d6,README.md
smartytwiti/master-chat-node-angular,e59b9adae9c90c4f4a7e68ec46e8da717385302b,node_modules/socket.io/node_modules/socket.io-client/node_modules/engine.io-client/node_modules/debug/Readme.md
ConnectSDK/Connect-SDK-Cordova-Plugin,9d5b66343c4e917ad1600b7656dbd2f4112ed8aa,scripts/node_modules/request/node_modules/forever-agent/README.md
DealerDotCom/terraform-provider-bigip,fceda7518ce4187c57b2b62173faca19a3b87d58,vendor/github.com/bgentry/speakeasy/Readme.md
Esri/arcobjects-sdk-community-samples,f02bbb73e25ed8e53441a14b687093572e4fa578,Net/Editing/PointsAlongLine/Readme.md
Esri/arcobjects-sdk-community-samples,d15134448c42ec0556c3a109b9b53f32de56c883,Net/Raster/DMCIIRasterType/Readme.md
EsriCanada-CE/ecce-app-challenge-2016,bfa45d7e2dae5923b79283e3c7a53043fc976a22,SpatialCOGnition/BuildingResilience/resources/lib/ckeditor/skins/moono/readme.md
FlorianBrett/MQTT-Home-Automation-Hub,4d2aa001501107cd2792f385ad62237dc3757521,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/are-we-there-yet/node_modules/readable-stream/node_modules/string_decoder/README.md
FlorianBrett/MQTT-Home-Automation-Hub,ac84987849bf1ad18ceb4c18fb9b22688c5d3502,hub-interface/sqlite-api/node_modules/sqlite3/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/gauge/node_modules/lodash.padend/README.md
Marketcloud/ionic-marketcloud-starter,b84aaf6dbf1c1632e4c947b1d7565585466a93e5,www/lib/angular-sanitize/README.md
MrMatthias/BackgroundDrawingAttribute,52f2609b34906459fd26624f03208690d5be74ae,README.md
TheBrazillianForgersTeam/DynamicCraft,91cd27804709bd143cd38169aa312cfbcedeed7a,README.md
XueSeason/Generate-QRCode-BarCode-iOS,b1c56658557b8162aa9f5ba8610ed03a5e558d9d,VMC/node_modules/body-parser/node_modules/http-errors/node_modules/inherits/README.md
cornflourblue/angular-reverse-geocode,5280b54f10c8243759d9af783d7f755acc9b604d,README.md
daigofuji/jekyll-foundation-5-starter,978268e275e8ef007abdd77b22948aaa84d706e4,node_modules/grunt/node_modules/minimatch/README.md
daigofuji/jekyll-foundation-5-starter,44cb6f2455b54e68acf2ff2745e78d465b8e9a33,node_modules/node-sass/node_modules/sass-graph/node_modules/yargs/node_modules/cliui/node_modules/center-align/README.md
hypriot/image-builder-nvidia-shieldtv,66b1f37620a8c97cd082228244cef8699b9052ce,builder/test-integration/README.md
jboss-developer/jboss-wfk-quickstarts,734df3f65e94a0d49bfd836e7e39c32a0a61ed2c,kitchensink-rf/README.md
joeaudette/cloudscribe.Web.Pagination,25235e9882621163af1506609ee4b3d0667c5925,README.md
jonashackt/spring-boot-starter-drools,8162ab9237a3594b9333ad8f66741ea03fb17ebc,README.md
mvalleavila/Kafka-Spark-Hbase-Example,1772612cb962058a3699037ad3a163ea4b6b7269,README.md
ojongerius/terraform-provider-datadog,020b8fbf339e9d986701fc1fda9c95fb06dfc252,vendor/github.com/cenkalti/backoff/README.md
oldnewthing/Windows-universal-samples,1c0a8ee379df3beb9b308d855091c4aa7f94af76,Samples/PasswordVault/README.md
pantheon-systems/quicksilver-examples,135c28beaff68d14f22481e929449e8e38463a02,jira_integration/README.md
patriciogonzalezvivo/thebookofshaders,4499de51bf4c36414508218f81690d2474900d38,glossary/README.md
pavelvlasov/koa-generic-session-mongo,2495e981b52d9229452486a36dbb9054b33967ec,README.md
shekhargulati/52-technologies-in-2016,54d6
Query:
SELECT "id", "content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   LIMIT 100;
Answer:
Too long, hard cut:
id,content
2dd586a19b594a73e9c6f7485d1e5da9203a4467,"/*
 * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips
 *
 * Copyright (C) 2008 David Brownell
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/bcd.h>
#include <linux/slab.h>
#include <linux/rtc.h>
#include <linux/workqueue.h>

#include <linux/spi/spi.h>
#include <linux/spi/ds1305.h>
#include <linux/module.h>


/*
 * Registers ... mask DS1305_WRITE into register address to write,
 * otherwise you're reading it.  All non-bitmask values are BCD.
 */
#define DS1305_WRITE		0x80


/* RTC date/time ... the main special cases are that we:
 *  - Need fancy ""hours"" encoding in 12hour mode
 *  - Don't rely on the ""day-of-week"" field (or tm_wday)
 *  - Are a 21st-century clock (2000 <= year < 2100)
 */
#define DS1305_RTC_LEN		7		/* bytes for RTC regs */

#define DS1305_SEC		0x00		/* register addresses */
#define DS1305_MIN		0x01
#define DS1305_HOUR		0x02
#	define DS1305_HR_12		0x40	/* set == 12 hr mode */
#	define DS1305_HR_PM		0x20	/* set == PM (12hr mode) */
#define DS1305_WDAY		0x03
#define DS1305_MDAY		0x04
#define DS1305_MON		0x05
#define DS1305_YEAR		0x06


/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).
 * DS1305_ALM_DISABLE disables a match field (some combos are bad).
 *
 * NOTE that since we don't use WDAY, we limit ourselves to alarms
 * only one day into the future (vs potentially up to a week).
 *
 * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we
 * don't currently support them.  We'd either need to do it only when
 * no alarm is pending (not the standard model), or to use the second
 * alarm (implying that this is a DS1305 not DS1306, *and* that either
 * it's wired up a second IRQ we know, or that INTCN is set)
 */
#define DS1305_ALM_LEN		4		/* bytes for ALM regs */
#define DS1305_ALM_DISABLE	0x80

#define DS1305_ALM0(r)		(0x07 + (r))	/* register addresses */
#define DS1305_ALM1(r)		(0x0b + (r))


/* three control registers */
#define DS1305_CONTROL_LEN	3		/* bytes of control regs */

#define DS1305_CONTROL		0x0f		/* register addresses */
#	define DS1305_nEOSC		0x80	/* low enables oscillator */
#	define DS1305_WP		0x40	/* write protect */
#	define DS1305_INTCN		0x04	/* clear == only int0 used */
#	define DS1306_1HZ		0x04	/* enable 1Hz output */
#	define DS1305_AEI1		0x02	/* enable ALM1 IRQ */
#	define DS1305_AEI0		0x01	/* enable ALM0 IRQ */
#define DS1305_STATUS		0x10
/* status has just AEIx bits, mirrored as IRQFx */
#define DS1305_TRICKLE		0x11
/* trickle bits are defined in <linux/spi/ds1305.h> */

/* a bunch of NVRAM */
#define DS1305_NVRAM_LEN	96		/* bytes of NVRAM */

#define DS1305_NVRAM		0x20		/* register addresses */


struct ds1305 {
	struct spi_device	*spi;
	struct rtc_device	*rtc;

	struct work_struct	work;

	unsigned long		flags;
#define FLAG_EXITING	0

	bool			hr12;
	u8			ctrl[DS1305_CONTROL_LEN];
};


/*----------------------------------------------------------------------*/

/*
 * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux
 * software (like a bootloader) which may require it.
 */

static unsigned bcd2hour(u8 bcd)
{
	if (bcd & DS1305_HR_12) {
		unsigned	hour = 0;

		bcd &= ~DS1305_HR_12;
		if (bcd & DS1305_HR_PM) {
			hour = 12;
			bcd &= ~DS1305_HR_PM;
		}
		hour += bcd2bin(bcd);
		return hour - 1;
	}
	return bcd2bin(bcd);
}

static u8 hour2bcd(bool hr12, int hour)
{
	if (hr12) {
		hour++;
		if (hour <= 12)
			return DS1305_HR_12 | bin2bcd(hour);
		hour -= 12;
		return DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);
	}
	return bin2bcd(hour);
}

/*----------------------------------------------------------------------*/

/*
 * Interface to RTC framework
 */

static int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		buf[2];
	long		err = -EINVAL;

	buf[0] = DS1305_WRITE | DS1305_CONTROL;
	buf[1] = ds1305->ctrl[0];

	if (enabled) {
		if (ds1305->ctrl[0] & DS1305_AEI0)
			goto done;
		buf[1] |= DS1305_AEI0;
	} else {
		if (!(buf[1] & DS1305_AEI0))
			goto done;
		buf[1] &= ~DS1305_AEI0;
	}
	err = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);
	if (err >= 0)
		ds1305->ctrl[0] = buf[1];
done:
	return err;

}


/*
 * Get/set of date and time is pretty normal.
 */

static int ds1305_get_time(struct device *dev, struct rtc_time *time)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		addr = DS1305_SEC;
	u8		buf[DS1305_RTC_LEN];
	int		status;

	/* Use write-then-read to get all the date/time registers
	 * since dma from stack is nonportable
	 */
	status = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),
			buf, sizeof(buf));
	if (status < 0)
		return status;

	dev_vdbg(dev, ""%s: %02x %02x %02x, %02x %02x %02x %02x\n"",
		""read"", buf[0], buf[1], buf[2], buf[3],
		buf[4]
Query:
SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,content
rgardler/azure-quickstart-templates,emercoin-ubuntu/README.md,"# Emercoin Instance

This Microsoft Azure template deploys a single Emercoin client which will connect to the public Emercoin network.

[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json)
<a href=""http://armviz.io/#/?load=https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2Fazure-quickstart-templates%2Fmaster%2Femercoin-ubuntu%2Fazuredeploy.json"" target=""_blank"">
    <img src=""http://armviz.io/visualizebutton.png""/>
</a>

Once your deployment is complete you will be able to connect to the Emercoin public network.

![Emercoin-Azure](https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/emercoin-ubuntu/images/emercoin.png)

# Template Parameters
When you launch the installation of the VM, you need to specify the following parameters:
* `vmDnsPrefix`: this is the public DNS name for the VM that you will use interact with your console. You just need to specify an unique name.
* `adminUsername`: self-explanatory. This is the account you will use for connecting to the node
* `adminPassword`: self-explanatory. Be aware that Azure requires passwords to have One upper case, one lower case, a special character, and a number
* `vmSize`: The type of VM that you want to use for the node. The default size is D1_v2 but you can change that if you expect to run workloads that require more RAM or CPU resources.

# Emercoin Deployment Walkthrough
1. Get your node's IP
 1. browse to https://portal.azure.com

 2. then click browse all, followed by ""resource groups"", and choose your resource group

 3. then expand your resources, and public ip address of your node.

2. Connect to your node
 1. SSH to the public ip of your node as the user you specified for `adminUsername`, enter your `adminPassword`
 2. Try to use the cli-client by `emc help` or `emc getinfo`
 3. Point your browser to the public ip of your node, sign in with `adminUsername` and `adminPassword` specified before (note that browser may show you a warning of bad certificate - it's OK, you may replace the self-signed certificates by yours at /etc/ssl/emc/emcweb*)
"
DaMSL/K3,tools/scripts/docker/README.md,"K3 Dockerfiles
==========

Dockerfiles are updated for three images:

1. **k3-app** -- (~250MB) light-weight image to run a K3 program. Based on debian:jessie. It contains only the necessary dependency libraries.
2. **k3-compiler** -- (~2 GB) Image containing the GHC and GCC tool chains to compile a K3 program to binary. Based on debian:jessie
3. **k3-dev** (~2.5 GB)  -- Larger container with additional library and application support (e.g. clang, ruby, vim, and others). It is based on debian:sid

To build an image use the following command:

```
docker build -f k3-dev -t damsl/k3-dev:<your_tag> .
```

(Note: Docker build now has the -f option, so you don't have to call all docker files, ""Dockerfile"")

The image ```damsl/k3-dev:vanilla``` which is pushed to the repo contains the K3 source built with no options. Feel free to pull, use, & re-build K3 with whatever options necessary (and re-push with a new tag if needed).

The other scripts in here are left for legacy purposes.

Build Dependency Versions:
<pre>
  - GHC: 7.10.1
  - GCC: 4.9.2
  - Boost: 1.57
  - Mesos: 0.22.1</pre>
"
briancavalier/todomvc-fab,examples/cujo/bower_components/curl/src/curl/plugin/README.md,"curl.js loader plugins
===

Please see the wiki for information about using plugins.  If you're interested
in creating your own plugins, please check out the Plugin Author's Guide
on the wiki (TBD).

All of these plugins conform to the AMD specification.  However, that
doesn't necessarily mean that they'll work with other AMD loaders or
builders.  Until the build-time API of AMD is finalized, there will be
incompatibilities.

Modules that should work with any loader/builder:

async!
domReady!
js!
link!

TODO:

json! (auto-detects xdomain and uses JSON-P)
"
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of y
Query:
SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
     AND c."content" ILIKE '%Copyright (c)%'
   LIMIT 100;
Answer:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"
Query:
SELECT DISTINCT f."repo_name"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" ILIKE '%readme.md%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      )
    LIMIT 100;
Answer:
repo_name
smartytwiti/master-chat-node-angular
repotag/rjgit
splunk/splunk-sdk-javascript
AndrewKralovec/Mongo-My-Admin
chef/knife-openstack
saladinkzn/gretty
mashery/iodocs
ppaulojr/PPJEmailPicker
lipelip/DWM
nicolewhite/neo4j-complaints
tategakibunko/nehan.js
sendgridlabs/loggly-docker
MozillaKerala/botzilla
upnext/BeaconCtrl
ljo/exist-sparql
Kaixhin/FGMachine
android-cn/android-open-project-demo
google/iosched
opentok/opentok-hardware-setup.js
duliodenis/HackingWithSwift
A5hleyRich/wp-background-processing
mariusschulz/ExtraLINQ
oarrabi/OALayoutAnchor
JustServerless/awesome-serverless
kyleweiner/Cool-Beans
DLuensch/StereoVision-ADCensus
videodromm/Cardboard
hokaccha/nodebrew
SuperManitu/AdvancedDispensersMod2.0
anzfactory/QiitaCollection
tomas/skull
puikinsh/gentelella
itsKaynine/SwiftRaisedTab
Turfjs/turf
foreverjs/nssocket
dodola/Gitbook
jboss-developer/jboss-wfk-quickstarts
NewVisionsForPublicSchools/autoCrat-SCRIPT
getlantern/lantern
jucimarjr/html5games
samuelthomas2774/oauth-client
xuwang/coreos-docker-dev
girliemac/RPi-KittyCam
customink/secondbase
malyw/malyw.github.io
thomasmeadows/atom-commentcode
alimysoyang/InAppWebHTTPServer
TelerikAcademy/CSharp-Part-1
nytlabs/hive
pratamawijaya/example
cpuguy83/kvfs
jamesshore/lets_code_javascript
neufeld/pandaseq
rakeshkadamati/MIPS-32-Bit-Verilog
CaliStyle/humpback
Obijuan/tutoriales-freecad
bingblue/parttime
robert52/simple-upload
smihir/simuino
mstruebing/web-s
camelmasa/animate-rails
netblue30/firetools
lt/php-cryptopals
JonHMChan/descartes
IBM-DTeam/swift-ibm_db
jcrubino/beego-composer
CeeJayDK/SweetFX
aloha-app/libcurldroid
Maxx53/NoCableLauncher
HeinrichReimer/inquiry
raweng/android-different-loading-animations
dmilicic/android-clean-sample-app
ethereum/meteor-dapp-whisper-chat-client
ArunMichaelDsouza/CSS-Mint
jeromeetienne/threex.htmlmixer
mil-oss/MTFXML
Eric-Guo/wechat
wonderkiln/WKAwesomeMenu
michaljach/ember-cli-deploy-scp
deech/fltkhs
lsegal/atom-runner
hicTech/cssPlus
luca-piccioni/OpenGL.Net
HubSpot/jinjava
oleksiyk/kafka
akhikhl/wuff
QianXY/xbox_project
naokits/my-programming-marathon
ExtremeLearningMachines/ELM-LRF
ihrthk/android-gradle-mulchannel-plugin
mahkoh/rust-tox
yeikos/js.merge
digitalcraftsman/hugo-type-theme
IdentityServer/IdentityServer3.MembershipReboot
zgldh/laravel-query-filter
igorw/compose
RookStudios/Lernkartei
zhuowenli/zhuowenli.github.io
yincart2/galaxy
gcarq/rusty-blockparser
Query:
SELECT f."repo_name", f."path", c."content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%Copyright (c)%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      )
    LIMIT 100;
Answer:
repo_name,path,content
waydelyle/openfund,public/js/ckeditor/README.md,"CKEditor 4
==========

Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.
http://ckeditor.com - See LICENSE.md for license information.

CKEditor is a text editor to be used inside web pages. It's not a replacement
for desktop text editors like Word or OpenOffice, but a component to be used as
part of web applications and websites.

## Documentation

The full editor documentation is available online at the following address:
http://docs.ckeditor.com

## Installation

Installing CKEditor is an easy task. Just follow these simple steps:

 1. **Download** the latest version from the CKEditor website:
    http://ckeditor.com. You should have already completed this step, but be
    sure you have the very latest version.
 2. **Extract** (decompress) the downloaded file into the root of your website.

**Note:** CKEditor is by default installed in the `ckeditor` folder. You can
place the files in whichever you want though.

## Checking Your Installation

The editor comes with a few sample pages that can be used to verify that
installation proceeded properly. Take a look at the `samples` directory.

To test your installation, just call the following page at your website:

	http://<your site>/<CKEditor installation path>/samples/index.html

For example:

	http://www.example.com/ckeditor/samples/index.html
"
Query:
SELECT COUNT(*) AS "total_readme_files"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" ILIKE '%readme.md%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      );
Answer:
total_readme_files
2550
Query:
SELECT COUNT(*) AS "copyright_readme_files"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%readme.md%'
      AND c."content" ILIKE '%Copyright (c)%'
      AND f."repo_name" NOT IN (
        SELECT DISTINCT l."repo_name"
        FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
          LATERAL FLATTEN(input => l."language") lang
        WHERE lang.VALUE::STRING ILIKE '%python%'
      );
Answer:
copyright_readme_files
1
Query:
SELECT
      (SELECT COUNT(*)
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
       JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
         ON f."id" = c."id"
       WHERE f."path" ILIKE '%readme.md%'
         AND c."content" ILIKE '%Copyright (c)%'
         AND f."repo_name" NOT IN (
           SELECT DISTINCT l."repo_name"
           FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
             LATERAL FLATTEN(input => l."language") lang
           WHERE lang.VALUE::STRING ILIKE '%python%'
         )
      )::FLOAT /
      (SELECT COUNT(*)
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
       WHERE f."path" ILIKE '%readme.md%'
         AND f."repo_name" NOT IN (
           SELECT DISTINCT l."repo_name"
           FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
             LATERAL FLATTEN(input => l."language") lang
           WHERE lang.VALUE::STRING ILIKE '%python%'
         )
      ) AS "proportion";
Answer:
proportion
0.000392156862745098
Query:
SELECT l."repo_name", l."language"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l
    LIMIT 100;
Answer:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]
End Exploring Related Columns
Task: What is the proportion of files whose paths include 'readme.md' that contain the phrase 'Copyright (c)', among all repositories that do not use any programming language with 'python' in its name

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
proportion
value:float<1
(Attention: answer in one row)
```

The proportion represents the fraction of files whose paths include 'readme.md' and contain the phrase 'Copyright (c)', among all repositories that do not use any programming language with 'python' in its name..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_FILES', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 23:45:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 23:45:11 - root - INFO - ```sql
SELECT
  (SELECT COUNT(*)
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
     AND c."content" ILIKE '%Copyright (c)%'
     AND f."repo_name" NOT IN (
       SELECT DISTINCT l."repo_name"
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
         LATERAL FLATTEN(input => l."language") lang
       WHERE lang.VALUE::STRING ILIKE '%python%'
     )
  )::FLOAT /
  (SELECT COUNT(*)
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   WHERE f."path" ILIKE '%readme.md%'
     AND f."repo_name" NOT IN (
       SELECT DISTINCT l."repo_name"
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
         LATERAL FLATTEN(input => l."language") lang
       WHERE lang.VALUE::STRING ILIKE '%python%'
     )
  ) AS "proportion";
```
2025-01-25 23:45:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:45:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:45:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:45:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:45:12 - snowflake.connector.connection - INFO - closed
2025-01-25 23:45:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:45:13 - root - INFO - itercount: 1
2025-01-25 23:45:13 - root - INFO - 0
2025-01-25 23:45:13 - root - INFO - results: 
proportion
0.000392156862745098


2025-01-25 23:45:13 - root - INFO - Please check the answer again by reviewing What is the proportion of files whose paths include 'readme.md' that contain the phrase 'Copyright (c)', among all repositories that do not use any programming language with 'python' in its name, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
proportion
value:float<1
(Attention: answer in one row)
```

The proportion represents the fraction of files whose paths include 'readme.md' and contain the phrase 'Copyright (c)', among all repositories that do not use any programming language with 'python' in its name. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
proportion
0.000392156862745098
Current sql:
SELECT
  (SELECT COUNT(*)
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%readme.md%'
     AND c."content" ILIKE '%Copyright (c)%'
     AND f."repo_name" NOT IN (
       SELECT DISTINCT l."repo_name"
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
         LATERAL FLATTEN(input => l."language") lang
       WHERE lang.VALUE::STRING ILIKE '%python%'
     )
  )::FLOAT /
  (SELECT COUNT(*)
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   WHERE f."path" ILIKE '%readme.md%'
     AND f."repo_name" NOT IN (
       SELECT DISTINCT l."repo_name"
       FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
         LATERAL FLATTEN(input => l."language") lang
       WHERE lang.VALUE::STRING ILIKE '%python%'
     )
  ) AS "proportion";
2025-01-25 23:45:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 23:45:39 - root - INFO - ```csv
proportion
0.0004
```

```sql
SELECT
  ROUND(
    (
      SELECT COUNT(*)
      FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
      JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%readme.md%'
        AND c."content" ILIKE '%Copyright (c)%'
        AND f."repo_name" NOT IN (
          SELECT DISTINCT l."repo_name"
          FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
            LATERAL FLATTEN(input => l."language") lang
          WHERE lang.VALUE::STRING ILIKE '%python%'
        )
    )::FLOAT /
    (
      SELECT COUNT(*)
      FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
      WHERE f."path" ILIKE '%readme.md%'
        AND f."repo_name" NOT IN (
          SELECT DISTINCT l."repo_name"
          FROM "GITHUB_REPOS"."GITHUB_REPOS"."LANGUAGES" l,
            LATERAL FLATTEN(input => l."language") lang
          WHERE lang.VALUE::STRING ILIKE '%python%'
        )
    ),
    4
  ) AS "proportion";
```
2025-01-25 23:45:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 23:45:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 23:45:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 23:45:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-25 23:45:41 - snowflake.connector.connection - INFO - closed
2025-01-25 23:45:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 23:45:42 - root - INFO - itercount: 2
2025-01-25 23:45:42 - root - INFO - 0
2025-01-25 23:45:42 - root - INFO - Total iteration counts: 2
