2025-02-12 14:50:51 - openai._base_client - INFO - Retrying request to /chat/completions in 0.377982 seconds
2025-02-12 14:52:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:52:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:52:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:52:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:52:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 14:52:41 - snowflake.connector.connection - INFO - closed
2025-02-12 14:52:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:52:41 - root - INFO - SQL:
-- Query 1: Retrieve median income per ZIP code in 2015
SELECT "geo_id", "median_income"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR"
LIMIT 100
Results:
geo_id,median_income
98304,36746.000000000
22714,74625.000000000
69128,56471.000000000
97908,22321.000000000
37228,15540.000000000
97486,62083.000000000
04491,27500.000000000
11005,58894.000000000
04936,40469.000000000
12195,
63102,39855.000000000
06793,81711.000000000
44669,67981.000000000
96109,29958.000000000
15638,51304.000000000
36263,41875.000000000
16853,39861.000000000
08352,67348.000000000
72536,22917.000000000
59926,29722.000000000
96084,34732.000000000
97011,39975.000000000
12444,38229.000000000
15561,56429.000000000
58488,60729.000000000
52219,44063.000000000
26852,31532.000000000
06091,
38588,40815.000000000
47584,40208.000000000
31038,43553.000000000
37326,21250.000000000
95560,35987.000000000
88348,19000.000000000
97484,38854.000000000
66850,90417.000000000
59755,28750.000000000
72136,36995.000000000
17101,28615.000000000
27556,
80830,51953.000000000
99638,35000.000000000
95443,15690.000000000
14881,
59731,37115.000000000
68416,40000.000000000
57766,64583.000000000
13404,32500.000000000
95497,75598.000000000
37219,50700.000000000
73556,37813.000000000
54948,41250.000000000
19436,55208.000000000
18503,14643.000000000
31527,66667.000000000
86444,21484.000000000
23153,75833.000000000
94970,93750.000000000
12481,54467.000000000
25879,22548.000000000
65335,50250.000000000
81121,40893.000000000
59927,47813.000000000
12548,56625.000000000
94569,110347.000000000
95728,58354.000000000
04063,
60661,98882.000000000
14480,38015.000000000
93517,61250.000000000
29202,
66944,25000.000000000
77002,62089.000000000
21766,28828.000000000
99153,32955.000000000
97145,56667.000000000
34289,42451.000000000
29614,27065.000000000
20006,34125.000000000
87531,48625.000000000
98134,52981.000000000
05034,95833.000000000
12517,60469.000000000
17027,65673.000000000
23968,32566.000000000
71970,30000.000000000
16691,45000.000000000
12847,62917.000000000
78215,51853.000000000
49918,32500.000000000
93424,74563.000000000
21734,52969.000000000
67202,40273.000000000
21872,61029.000000000
41180,20857.000000000
21130,53393.000000000
84334,54680.000000000
49628,45179.000000000
99131,44167.000000000
65064,54722.000000000

2025-02-12 14:52:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:52:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:52:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:52:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 14:52:42 - snowflake.connector.connection - INFO - closed
2025-02-12 14:52:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:52:43 - root - INFO - SQL:
-- Query 2: Retrieve median income per ZIP code in 2018
SELECT "geo_id", "median_income"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR"
LIMIT 100
Results:
geo_id,median_income
15537,46265.0
48215,22721.0
29571,32764.0
88063,24875.0
32310,36653.0
29550,42243.0
79403,38891.0
59034,44985.0
26047,49755.0
35954,40664.0
59401,39530.0
44041,40431.0
48225,47864.0
29418,39577.0
44502,26606.0
34491,46338.0
33634,58013.0
51106,56795.0
47807,21288.0
83402,51017.0
08059,69040.0
55807,46883.0
77029,34967.0
16201,49550.0
41102,50881.0
23002,54930.0
12571,78641.0
37334,44657.0
59801,37410.0
18091,54781.0
49677,39961.0
25143,43665.0
44278,69657.0
21217,29121.0
64601,46911.0
60480,83505.0
35504,50305.0
31029,52570.0
63121,37866.0
74601,40847.0
33010,27116.0
34950,25278.0
29379,38370.0
33167,36870.0
01105,19921.0
81416,42176.0
15074,45159.0
30401,36210.0
15904,56828.0
64117,46514.0
71202,22840.0
02744,38264.0
42431,47517.0
22980,51033.0
64683,43432.0
49837,55914.0
64501,33133.0
48210,29007.0
33801,35696.0
87107,48202.0
57262,42161.0
71601,30710.0
16635,54136.0
28801,33504.0
39367,38625.0
44706,46413.0
44683,44225.0
49408,58763.0
46819,47974.0
38804,43096.0
55305,75219.0
53143,47298.0
37311,37519.0
64085,48790.0
99611,61401.0
48458,34887.0
49431,50635.0
46113,72430.0
11565,120890.0
14103,47848.0
97141,46557.0
15425,44599.0
52405,62014.0
19095,74018.0
24013,34925.0
18337,75758.0
72118,45730.0
43050,49602.0
24201,37882.0
15666,52599.0
97005,49127.0
43605,28788.0
46516,46761.0
92236,34222.0
47713,26595.0
21215,37517.0
78202,25300.0
17545,62058.0
56431,46724.0
33841,42838.0

2025-02-12 14:52:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:52:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:52:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:52:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 14:52:44 - snowflake.connector.connection - INFO - closed
2025-02-12 14:52:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:52:44 - root - INFO - SQL:
-- Query 3: Retrieve employment data per ZIP code in 2017
SELECT "geo_id", "employed_wholesale_trade", "employed_manufacturing"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR"
LIMIT 100
Results:
geo_id,employed_wholesale_trade,employed_manufacturing
14521,13.0,76.0
43942,14.0,258.0
56097,43.0,331.0
14837,29.0,411.0
35218,69.0,229.0
12721,175.0,237.0
80924,41.0,206.0
85607,63.0,131.0
40210,136.0,668.0
46040,175.0,1021.0
70525,162.0,348.0
29582,167.0,207.0
32534,60.0,447.0
01569,184.0,1310.0
41001,270.0,1066.0
14217,260.0,980.0
48040,118.0,906.0
77836,262.0,583.0
63110,260.0,754.0
55927,99.0,329.0
28705,65.0,529.0
25560,155.0,543.0
35115,169.0,502.0
49345,269.0,1465.0
15801,94.0,908.0
55398,343.0,1713.0
40353,109.0,2446.0
28681,309.0,3884.0
59711,64.0,131.0
52060,132.0,687.0
60033,75.0,1440.0
00637,23.0,594.0
29627,184.0,1398.0
47111,111.0,1506.0
76067,229.0,1163.0
74653,36.0,144.0
85550,14.0,64.0
43080,61.0,427.0
47031,6.0,714.0
56101,42.0,680.0
37347,77.0,746.0
03042,141.0,526.0
17842,94.0,895.0
17241,114.0,650.0
38652,71.0,1987.0
18018,558.0,1687.0
45875,141.0,1676.0
27536,147.0,944.0
41701,164.0,235.0
21550,62.0,361.0
19036,238.0,439.0
27028,425.0,2164.0
30525,4.0,328.0
28371,58.0,508.0
49065,44.0,713.0
57049,98.0,565.0
15537,72.0,539.0
00735,40.0,425.0
26354,262.0,364.0
03077,183.0,826.0
86305,61.0,302.0
67060,190.0,1653.0
24333,140.0,1604.0
83316,128.0,470.0
56093,114.0,1568.0
35957,89.0,1432.0
46975,324.0,1880.0
54017,308.0,1732.0
34234,201.0,461.0
30125,251.0,2497.0
60134,694.0,1679.0
38116,583.0,1661.0
49304,12.0,137.0
54499,47.0,313.0
23950,41.0,198.0
66534,21.0,446.0
28555,43.0,96.0
62286,63.0,553.0
54923,82.0,1348.0
66043,52.0,222.0
78076,0.0,82.0
00920,257.0,223.0
44420,174.0,1049.0
45344,227.0,1078.0
77713,265.0,1091.0
99203,268.0,674.0
38118,493.0,1557.0
00976,700.0,1079.0
27944,73.0,261.0
29812,88.0,834.0
95360,144.0,859.0
47006,96.0,1234.0
28574,0.0,294.0
43205,101.0,280.0
25401,179.0,477.0
80603,175.0,573.0
53959,204.0,1564.0
87410,243.0,247.0
76574,203.0,1133.0
33803,377.0,969.0

2025-02-12 14:52:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:52:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:52:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:52:45 - snowflake.connector.connection - INFO - closed
2025-02-12 14:52:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:53:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:53:22 - root - INFO - It appears that the error occurred because the database and schema were not properly specified in your query. In Snowflake, when referencing a table, you need to include the database and schema unless you've already set them in your session.

The error message suggests that the session does not have a current database:

```
Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

**Solution:**

1. **Specify the Database and Schema in Your Query:**

   If the `ZIP_CODES` table is in the `PUBLIC` schema of the `GEO_US_BOUNDARIES` database, you can modify your query to include both the database and schema:

   ```sql
   -- Query 4: View ZIP code to state mapping with fully qualified table name
   SELECT DISTINCT "zip_code", "state_name"
   FROM "GEO_US_BOUNDARIES"."PUBLIC"."ZIP_CODES"
   LIMIT 100;
   ```

2. **Set the Current Database and Schema in Your Session:**

   Alternatively, you can set the default database and schema for your session so that you don't need to fully qualify the table names in your queries:

   ```sql
   -- Set the current database and schema
   USE DATABASE "GEO_US_BOUNDARIES";
   USE SCHEMA "PUBLIC";

   -- Now you can run your query without qualifying the database and schema
   SELECT DISTINCT "zip_code", "state_name"
   FROM "ZIP_CODES"
   LIMIT 100;
   ```

   Make sure to execute the `USE DATABASE` and `USE SCHEMA` commands before running your SELECT query.

**Explanation:**

- **Database and Schema:** In Snowflake, every table is organized within a database and a schema. If you don't specify them, Snowflake will look for the table in the current database and schema of your session.
- **Fully Qualified Table Name:** Using `"DATABASE"."SCHEMA"."TABLE"` ensures that Snowflake knows exactly where to find the table, even if a current database or schema isn't set.
- **Setting Current Database and Schema:** By setting the current database and schema using `USE DATABASE` and `USE SCHEMA`, you simplify your queries and reduce the need to fully qualify table names each time.

**Additional Tips:**

- **Verify the Schema Name:** If the `ZIP_CODES` table is not in the `PUBLIC` schema, replace `"PUBLIC"` with the correct schema name.
- **Check Permissions:** Ensure that your user account has the necessary permissions to access the database, schema, and table.
- **Consistency:** It's a good practice to consistently use either fully qualified table names or set the current database and schema at the beginning of your session.

**Revised Query:**

```sql
-- Using fully qualified table name
SELECT DISTINCT "zip_code", "state_name"
FROM "GEO_US_BOUNDARIES"."PUBLIC"."ZIP_CODES"
LIMIT 100;
```

Or, after setting the database and schema:

```sql
-- Setting current database and schema
USE DATABASE "GEO_US_BOUNDARIES";
USE SCHEMA "PUBLIC";

-- Query without fully qualifying table name
SELECT DISTINCT "zip_code", "state_name"
FROM "ZIP_CODES"
LIMIT 100;
```

**Next Steps:**

- Try running the revised query.
- If you still encounter errors, double-check the database and schema names.
- Ensure that the table `ZIP_CODES` exists in the specified database and schema.

---

Let me know if you need further assistance!
2025-02-12 14:53:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:53:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:53:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:53:23 - snowflake.connector.connection - INFO - closed
2025-02-12 14:53:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:54:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:54:17 - root - INFO - It appears that you're encountering the following error:

```
SQL compilation error:
Database 'GEO_US_BOUNDARIES' does not exist or not authorized.
```

**Explanation:**

This error indicates that the database `GEO_US_BOUNDARIES` is either:

- Not available in your Snowflake environment, or
- You do not have the necessary permissions to access it.

**Possible Reasons and Solutions:**

1. **Database Does Not Exist:**

   - The `GEO_US_BOUNDARIES` database might not be present in your Snowflake account.
   - **Solution:** Verify the list of databases accessible to you using:

     ```sql
     SHOW DATABASES;
     ```

2. **Insufficient Permissions:**

   - You might not have the required privileges to access the `GEO_US_BOUNDARIES` database.
   - **Solution:** Contact your database administrator to request access or to confirm whether the database exists.

**Alternative Approach:**

Given that the `GEO_US_BOUNDARIES` database is unavailable, we need to find another way to map ZIP codes to state names using the tables you have access to.

From the information provided, your available schemas and tables are:

- **Database:** `CENSUS_BUREAU_ACS_2`
- **Schemas:**
  - `CENSUS_BUREAU_ACS`
  - `CYCLISTIC`

**Potential Tables:**

1. **`CENSUS_BUREAU_ACS_2.CYCLISTIC.ZIP_CODES`**

   - **Columns:**
     - `"zip"`: ZIP code
     - `"borough"`
     - `"neighborhood"`
   - **Limitation:** This table does not include state information.

2. **`CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS`**

   - **Columns:**
     - `"state"`: State name
     - `"postal_code"`: State abbreviation
     - `"fips"`: State FIPS code
   - **Limitation:** This table does not include ZIP codes.

3. **`CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR`** and similar tables for other years.

   - **Columns:** Based on earlier queries, these tables include a `"geo_id"` column which represents the ZIP code, but do not seem to include state information.

**Solution: Create a ZIP Code to State Mapping Table**

Since none of the available tables contain a direct mapping between ZIP codes and states, you can:

1. **Import an External ZIP Code to State Mapping:**

   - Obtain a publicly available dataset that maps ZIP codes to state names or abbreviations. For example, you can download such a dataset from sources like the [United States Postal Service (USPS)](https://www.usps.com/) or other open data repositories.
   - Once you have the dataset, you can upload it to your Snowflake environment and create a new table. For example:

     ```sql
     CREATE OR REPLACE TABLE "ZIP_CODE_STATE_MAPPING" (
       "zip_code" VARCHAR,
       "state_name" VARCHAR,
       "state_abbreviation" VARCHAR
     );
     ```

   - Load your data into the `ZIP_CODE_STATE_MAPPING` table.

2. **Proceed Without State Names:**

   - If importing a new table is not feasible, you might consider proceeding without state-level aggregation.
   - Instead, you could perform your analysis at the ZIP code level or aggregate by another available geographic identifier.

**Updated SQL Queries Using the New Mapping Table:**

Assuming you have created the `ZIP_CODE_STATE_MAPPING` table, you can adjust your queries as follows:

```sql
-- Query 4: Use the new ZIP code to state mapping table
SELECT DISTINCT "zip_code", "state_name"
FROM "ZIP_CODE_STATE_MAPPING"
LIMIT 100;
```

**Integrate the Mapping into Your Main Query:**

You can join your employment data with the new mapping table to associate ZIP codes with states.

```sql
-- Updated Query: List each state in descending order of total vulnerable workers
SELECT
    zcsm."state_name",
    SUM(emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers",
    SUM(emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "ZIP_CODE_STATE_MAPPING" zcsm
ON
    emp."geo_id" = zcsm."zip_code"
GROUP BY
    zcsm."state_name"
ORDER BY
    "total_vulnerable_workers" DESC;
```

**Explanation:**

- **Join Condition:** We join the employment data (`emp`) with the ZIP code to state mapping (`zcsm`) on the ZIP code (`"geo_id"` and `"zip_code"`).
- **Calculations:**
  - **Vulnerable Wholesale Trade Workers:** `SUM(emp."employed_wholesale_trade" * 0.38)`
  - **Vulnerable Manufacturing Workers:** `SUM(emp."employed_manufacturing" * 0.41)`
  - **Total Vulnerable Workers:** Sum of the above two calculations.
- **Group By:** We group the data by `"state_name"` to aggregate the vulnerable workers per state.
- **Order By:** We order the results in descending order of `"total_vulnerable_workers"`.

**Next Steps:**

1. **Obtain the ZIP Code to State Mapping Data:**

   - Download or acquire the mapping data from a reliable source.
   - Ensure the data is in a compatible format (e.g., CSV) for importing into Snowflake.

2. **Create the Mapping Table:**

   - Use the `CREATE TABLE` statement to define the new table structure.
   - Load the data into the table using Snowflake's data loading methods.

3. **Run the Updated Queries:**

   - Once the mapping table is in place, you should be able to run the updated query without encountering the previous errors.
   - Verify that the data joins correctly by checking a few sample rows.

**Alternative Option: Use Approximate Methods**

If creating a mapping table is not immediately possible, you can:

- **Use the First Three Digits of ZIP Codes:** The first three digits of a ZIP code can sometimes correspond to a specific state or region, but this method is not precise.
- **Proceed with Aggregation by County or Other Geographic Units:** If your data contains other geographic identifiers, consider aggregating by those instead.

**Conclusion:**

The error you're experiencing is due to the unavailability of the `GEO_US_BOUNDARIES` database in your environment. To proceed, you'll need to either gain access to that database or create a new mapping table that associates ZIP codes with state names. Once you have the mapping, you can perform the required analysis and obtain the desired results.

---

Let me know if you need assistance with creating the mapping table or have any other questions!
2025-02-12 14:54:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:54:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:54:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:54:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 156
2025-02-12 14:54:19 - snowflake.connector.connection - INFO - closed
2025-02-12 14:54:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:56:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:56:12 - root - INFO - SQL:
SHOW DATABASES;
Results:
Too long, hard cut:
created_on,name,is_default,is_current,origin,owner,comment,options,retention_time,kind,budget,owner_role_type,object_visibility
2024-10-23 19:34:13.495000-07:00,ADVENTUREWORKS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:14.040000-07:00,AIRLINES,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-09-20 06:48:25.172000-07:00,AMAZON_VENDOR_ANALYTICS__SAMPLE_DATASET,N,N,REASONAUTOMATION.AMAZON.VENDOR + DSP + SPONSORED ADS + BRAND STORE,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-10-23 19:18:41.171000-07:00,AUSTIN,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:02.763000-07:00,BANK_SALES_TRADING,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2025-02-09 13:31:35.259000-08:00,BASEBALL,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:19:12.611000-07:00,BBC,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:07:35.194000-07:00,BLS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:08.939000-07:00,BOWLINGLEAGUE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-09-20 06:46:45.396000-07:00,BRAZE_USER_EVENT_DEMO_DATASET,N,N,BRAZE.SNOWFLAKE_MANAGED$PUBLIC_AWS_US_WEST_2.BRAZE_SAMPLE_DATASET_MARKETPLACE_SHARE,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-10-23 19:33:34.009000-07:00,BRAZILIAN_E_COMMERCE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:18.772000-07:00,CALIFORNIA_TRAFFIC_COLLISION,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:03:37.651000-07:00,CENSUS_BUREAU_ACS_1,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:03:44.093000-07:00,CENSUS_BUREAU_ACS_2,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:53:28.533000-07:00,CENSUS_BUREAU_INTERNATIONAL,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:59:56.395000-07:00,CENSUS_BUREAU_USA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-11-01 07:19:35.912000-07:00,CENSUS_GALAXY__AIML_MODEL_DATA_ENRICHMENT_SAMPLE,N,N,NNTCJGB.AUTO_FULFILLMENT_AREA$PUBLIC_AWS_US_WEST_2.CENSUS_GALAXY_SAMPLE_NY_AI_ML,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-09-20 06:55:45.006000-07:00,CENSUS_GALAXY__ZIP_CODE_TO_BLOCK_GROUP_SAMPLE,N,N,NNTCJGB.AUTO_FULFILLMENT_AREA$PUBLIC_AWS_US_WEST_2.CENSUS_GALAXY_SAMPLE_NY_ZIP_CODE_TO_BLOCK_GROUP,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-10-23 17:10:10.968000-07:00,CHICAGO,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:54.989000-07:00,CHINOOK,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:01.691000-07:00,CITY_LEGISLATION,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:22:34.891000-07:00,CMS_DATA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:58.487000-07:00,COMPLEX_ORACLE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:55:15.502000-07:00,COVID19_JHU_WORLD_BANK,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:56:13.175000-07:00,COVID19_NYT,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:54:37.484000-07:00,COVID19_OPEN_DATA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:54:38.797000-07:00,COVID19_OPEN_WORLD_BANK,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:57:59.262000-07:00,COVID19_SYMPTOM_SEARCH,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:59:09.813000-07:00,COVID19_USA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:07:15.772000-07:00,CPTAC_PDC,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:50:41.084000-07:00,CRYPTO,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:12:59.173000-07:00,CYMBAL_INVESTMENTS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-25 23:53:34.128000-07:00,DB_IMDB,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:26:36.344000-07:00,DEATH,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:15.599000-07:00,DELIVERY_CENTER,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:09:05.420000-07:00,DEPS_DEV_V1,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:19:39.354000-07:00,DIMENSIONS_AI_COVID19,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:19:46.307000-07:00,EBI_CHEMBL,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 18:47:27.448000-07:00,ECLIPSE_MEGAMOVIE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:25:49.638000-07:00,ECOMMERCE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:57.376000-07:00,EDUCATION_BUSINESS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:23.702000-07:00,ELECTRONIC_SALES,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:11.454000-07:00,ENTERTAINMENTAGENCY,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 18:54:11.005000-07:00,EPA_HISTORICAL_AIR_QUALITY,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:50:57.201000-07:00,ETHEREUM_BLOCKCHAIN,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:18.319000-07:00,EU_SOCCER,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:32:56.185000-07:00,E_COMMERCE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:35.859000-07:00,F1,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:21:53.253000-07:00,FDA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:21:41.453000-07:00,FEC,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 18:28:49.309000-07:00,FHIR_SYNTHEA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-09-20 06:20:49.552000-07:00,FINANCE__ECONOMIC

2025-02-12 14:56:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:56:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:56:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:56:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 14:56:13 - snowflake.connector.connection - INFO - closed
2025-02-12 14:56:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:56:13 - root - INFO - SQL:
-- Query 5: Calculate median income difference per ZIP code between 2015 and 2018
SELECT
    t2015."geo_id",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
LIMIT 100
Results:
geo_id,median_income_difference
98304,1013.0
22714,18292.0
69128,-18346.0
97908,1429.0
37228,13579.0
97486,-8690.0
04491,10000.0
11005,4099.0
04936,
12195,
63102,15198.0
06793,18150.0
44669,-12668.0
96109,12244.0
15638,-6637.0
36263,-15721.0
16853,
08352,1246.0
72536,6515.0
59926,
96084,6518.0
97011,2049.0
12444,19688.0
15561,4026.0
58488,3646.0
52219,4687.0
26852,28724.0
06091,
38588,3185.0
47584,792.0
31038,8138.0
37326,15000.0
95560,42579.0
88348,
97484,3378.0
66850,-34896.0
59755,10000.0
72136,16338.0
17101,1324.0
27556,
80830,3912.0
99638,1250.0
95443,560.0
14881,
59731,11488.0
68416,-5500.0
57766,
13404,10250.0
95497,2752.0
37219,46717.0
73556,-13125.0
54948,4375.0
19436,375.0
18503,2462.0
31527,8422.0
86444,-1345.0
23153,18073.0
94970,27132.0
12481,302.0
25879,19195.0
65335,-9000.0
81121,1746.0
59927,-1563.0
12548,-256.0
94569,43403.0
95728,
04063,
60661,8363.0
14480,7663.0
93517,-372.0
29202,
66944,31250.0
77002,4954.0
21766,6866.0
99153,1727.0
97145,28819.0
34289,12471.0
29614,-7065.0
20006,12194.0
87531,
98134,21792.0
05034,-17852.0
12517,
17027,5834.0
23968,2889.0
71970,8214.0
16691,-7250.0
12847,-3542.0
78215,12983.0
49918,17500.0
93424,-3473.0
21734,-15719.0
67202,-1662.0
21872,
41180,13831.0
21130,5473.0
84334,12275.0
49628,9821.0
99131,13958.0
65064,13716.0

2025-02-12 14:56:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:56:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:56:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:56:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 14:56:14 - snowflake.connector.connection - INFO - closed
2025-02-12 14:56:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:56:15 - root - INFO - SQL:
-- Query 6: Calculate vulnerable workers per ZIP code based on 2017 employment figures
SELECT
    "geo_id",
    "employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    "employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR"
LIMIT 100
Results:
geo_id,vulnerable_wholesale_trade_workers,vulnerable_manufacturing_workers
14521,4.94,31.159999999999997
43942,5.32,105.77999999999999
56097,16.34,135.70999999999998
14837,11.02,168.51
35218,26.22,93.89
12721,66.5,97.16999999999999
80924,15.58,84.46
85607,23.94,53.709999999999994
40210,51.68,273.88
46040,66.5,418.60999999999996
70525,61.56,142.67999999999998
29582,63.46,84.86999999999999
32534,22.8,183.26999999999998
01569,69.92,537.1
41001,102.6,437.06
14217,98.8,401.79999999999995
48040,44.84,371.46
77836,99.56,239.02999999999997
63110,98.8,309.14
55927,37.62,134.89
28705,24.7,216.89
25560,58.9,222.63
35115,64.22,205.82
49345,102.22,600.65
15801,35.72,372.28
55398,130.34,702.3299999999999
40353,41.42,1002.8599999999999
28681,117.42,1592.4399999999998
59711,24.32,53.709999999999994
52060,50.160000000000004,281.66999999999996
60033,28.5,590.4
00637,8.74,243.54
29627,69.92,573.18
47111,42.18,617.4599999999999
76067,87.02,476.83
74653,13.68,59.04
85550,5.32,26.24
43080,23.18,175.07
47031,2.2800000000000002,292.74
56101,15.96,278.8
37347,29.26,305.85999999999996
03042,53.58,215.66
17842,35.72,366.95
17241,43.32,266.5
38652,26.98,814.67
18018,212.04,691.67
45875,53.58,687.16
27536,55.86,387.03999999999996
41701,62.32,96.35
21550,23.56,148.01
19036,90.44,179.98999999999998
27028,161.5,887.2399999999999
30525,1.52,134.48
28371,22.04,208.28
49065,16.72,292.33
57049,37.24,231.64999999999998
15537,27.36,220.98999999999998
00735,15.2,174.25
26354,99.56,149.23999999999998
03077,69.54,338.65999999999997
86305,23.18,123.82
67060,72.2,677.7299999999999
24333,53.2,657.64
83316,48.64,192.7
56093,43.32,642.88
35957,33.82,587.12
46975,123.12,770.8
54017,117.04,710.12
34234,76.38,189.01
30125,95.38,1023.77
60134,263.72,688.39
38116,221.54,681.01
49304,4.5600000000000005,56.169999999999995
54499,17.86,128.32999999999998
23950,15.58,81.17999999999999
66534,7.98,182.85999999999999
28555,16.34,39.36
62286,23.94,226.73
54923,31.16,552.68
66043,19.76,91.02
78076,0.0,33.62
00920,97.66,91.42999999999999
44420,66.12,430.09
45344,86.26,441.97999999999996
77713,100.7,447.30999999999995
99203,101.84,276.34
38118,187.34,638.37
00976,266.0,442.39
27944,27.740000000000002,107.00999999999999
29812,33.44,341.94
95360,54.72,352.19
47006,36.480000000000004,505.94
28574,0.0,120.53999999999999
43205,38.38,114.8
25401,68.02,195.57
80603,66.5,234.92999999999998
53959,77.52,641.24
87410,92.34,101.27
76574,77.14,464.53
33803,143.26,397.28999999999996

2025-02-12 14:56:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:56:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:56:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:56:16 - snowflake.connector.connection - INFO - closed
2025-02-12 14:56:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:57:14 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:57:14 - root - INFO - It appears that you're encountering an error when trying to execute Query 7:

```
Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

**Explanation:**

The error message indicates that the session does not have a current database set, or the table names in your query are not fully qualified with the database and schema names. However, in your query, you have used fully qualified table names. This suggests one of the following issues:

1. **Database 'GEO_US_BOUNDARIES' Does Not Exist or Is Not Accessible:**

   - In previous attempts to access the `GEO_US_BOUNDARIES` database, you received an error stating that it does not exist or you are not authorized to access it.

     ```
     Database 'GEO_US_BOUNDARIES' does not exist or not authorized.
     ```

2. **Session Configuration:**

   - The session might not recognize the databases because they are not set, even though you used fully qualified names.

**Solution:**

Since the `GEO_US_BOUNDARIES` database is not accessible in your environment, you'll need to adjust your query to use only the available databases. Based on the `SHOW DATABASES;` output you provided, you have access to the `CENSUS_BUREAU_ACS_2` database but not to `GEO_US_BOUNDARIES`.

**Approach to Correct the Query:**

1. **Check for State Information in Available Tables:**

   - Examine the `ZIP_CODES_2017_5YR` table to see if it contains state information that you can use for grouping.
   - If the table includes a state identifier (e.g., `"state"`, `"state_code"`, `"state_fips"`), you can use it directly.

2. **If State Information Is Not Present:**

   - Use another table within `CENSUS_BUREAU_ACS_2` that provides ZIP code to state mapping.
   - For example, check if the `CYCLISTIC.ZIP_CODES` table contains state information.

3. **Create a Mapping Table (If Necessary):**

   - If no existing table contains the necessary mapping, you might need to create a mapping table by importing external data that maps ZIP codes to states.

**Corrected Query:**

Assuming that the `ZIP_CODES_2017_5YR` table contains a column `"state"` representing the state abbreviation or name, you can modify your query as follows:

```sql
-- Corrected Query 7: Join employment data with state information from the same table
SELECT
    emp."geo_id",
    emp."state",  -- Using state information from the same table
    emp."employed_wholesale_trade",
    emp."employed_manufacturing"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
LIMIT 100;
```

If the state information is not available in the `ZIP_CODES_2017_5YR` table, but you have a state mapping in another accessible table (e.g., `CYCLISTIC.ZIP_CODES`), you can join on that.

**Example Using `CYCLISTIC.ZIP_CODES`:**

```sql
-- Check the structure of the CYCLISTIC.ZIP_CODES table
DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CYCLISTIC"."ZIP_CODES";
```

If the `CYCLISTIC.ZIP_CODES` table contains a `"zip"` column and a `"state"` column, you can perform the join:

```sql
-- Corrected Query 7: Join employment data with ZIP code to state mapping from CYCLISTIC.ZIP_CODES
SELECT
    emp."geo_id",
    zc."state" AS "state_name",
    emp."employed_wholesale_trade",
    emp."employed_manufacturing"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "CENSUS_BUREAU_ACS_2"."CYCLISTIC"."ZIP_CODES" zc
ON
    emp."geo_id" = zc."zip"
LIMIT 100;
```

**Note:** Ensure that:

- The `zip` codes in both tables are in the same format (e.g., both are strings or integers, and include leading zeros if any).
- The `CYCLISTIC.ZIP_CODES` table includes the necessary state information.

**If State Information Is Still Not Accessible:**

If you cannot obtain state information from any existing tables, you might need to:

1. **Aggregate Data Without State Information:**

   - Perform your analysis without grouping by state.

   ```sql
   -- Sum vulnerable workers nationwide
   SELECT
       SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
       SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers",
       SUM(emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41) AS "total_vulnerable_workers"
   FROM
       "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
   ```

2. **Import a ZIP Code to State Mapping Table:**

   - Obtain a publicly available dataset that maps ZIP codes to state names.
   - Load this dataset into your database as a new table.

   ```sql
   -- Assuming you've created a new table called ZIP_CODE_STATE_MAPPING
   CREATE OR REPLACE TABLE "CENSUS_BUREAU_ACS_2"."PUBLIC"."ZIP_CODE_STATE_MAPPING" (
       "zip_code" VARCHAR,
       "state_name" VARCHAR
   );
   ```

   - After loading data into `ZIP_CODE_STATE_MAPPING`, adjust your query:

   ```sql
   -- Corrected Query 7: Join employment data with the new ZIP code to state mapping table
   SELECT
       emp."geo_id",
       zc."state_name",
       emp."employed_wholesale_trade",
       emp."employed_manufacturing"
   FROM
       "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
   JOIN
       "CENSUS_BUREAU_ACS_2"."PUBLIC"."ZIP_CODE_STATE_MAPPING" zc
   ON
       emp."geo_id" = zc."zip_code"
   LIMIT 100;
   ```

**Next Steps:**

- **Verify Available Data:**

  - Run `DESCRIBE TABLE` on the tables you have access to and see if state information is available.
  - Example:

    ```sql
    DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR";
    ```

- **Set the Current Database and Schema:**

  - Ensure that your session is correctly configured.

    ```sql
    USE DATABASE "CENSUS_BUREAU_ACS_2";
    USE SCHEMA "CENSUS_BUREAU_ACS";
    ```

- **Check for Typos and Accurate Table Names:**

  - Confirm that the table and column names are correct and exist within the specified database and schema.

- **Consult with Your Database Administrator:**

  - If necessary, consult with your DBA or supervisor to gain access to the required data or to assist in importing necessary datasets.

**Conclusion:**

The error occurs because the `GEO_US_BOUNDARIES` database is not available in your environment. By adjusting your query to use only the accessible databases and tables within `CENSUS_BUREAU_ACS_2`, and by checking for state information in available tables or creating a new mapping table, you can obtain the desired results.

Let me know if you need further assistance in modifying the queries or if you have any other questions!
2025-02-12 14:57:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:57:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:57:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:57:16 - snowflake.connector.connection - INFO - closed
2025-02-12 14:57:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:58:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:58:02 - root - INFO - **Understanding the Error:**

The error message you're encountering is:

```
000904 (42000): ... SQL compilation error: error line 3 at position 4
invalid identifier 'EMP."state"'
```

This error indicates that the column `"state"` does not exist in the table alias `emp`, which refers to the `ZIP_CODES_2017_5YR` table in your query.

**Reason for the Error:**

- The **`"ZIP_CODES_2017_5YR"`** table does **not** have a column named `"state"`. Therefore, referencing `emp."state"` in your SELECT statement leads to an invalid identifier error.

**Solution:**

Since the `"state"` column does not exist in the `"ZIP_CODES_2017_5YR"` table, we need to find another way to obtain state information to fulfill your query. Here are the steps you can take:

---

### **1. Verify Available Tables for State Information**

First, check if any of your accessible tables contain ZIP code to state mappings.

#### **A. Check `CYCLISTIC.ZIP_CODES` Table**

Run the following command to describe the structure of the `CYCLISTIC.ZIP_CODES` table:

```sql
DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CYCLISTIC"."ZIP_CODES";
```

**Expected Structure:**

Based on the information provided earlier, the table structure is:

```plaintext
"zip" NUMBER(38,0),
"borough" VARCHAR(16777216),
"neighborhood" VARCHAR(16777216)
```

- **Limitation:** This table does not contain state information.

#### **B. Check Other Tables for State Information**

- **`CYCLISTIC.STATE_FIPS`**: Contains `"state"`, `"postal_code"`, and `"fips"` columns.
  - **Limitation:** No ZIP codes to perform a join.

### **2. Import a ZIP Code to State Mapping Table**

Since none of the available tables contain the necessary ZIP code to state mapping, you can:

**A. Obtain a Publicly Available ZIP Code to State Mapping Dataset**

- There are publicly available datasets that map ZIP codes to state names or abbreviations.
- Sources include:
  - United States Postal Service (USPS)
  - Open data repositories

**B. Create a New Mapping Table in Snowflake**

1. **Prepare the Data:**

   - Ensure your dataset has at least the following columns:
     - `"zip_code"`: ZIP code (ensure leading zeros are preserved)
     - `"state_name"`: Full state name
     - `"state_abbreviation"`: State postal code abbreviation (optional)

2. **Create the Table:**

   ```sql
   CREATE OR REPLACE TABLE "CENSUS_BUREAU_ACS_2"."PUBLIC"."ZIP_CODE_STATE_MAPPING" (
       "zip_code" VARCHAR,
       "state_name" VARCHAR,
       "state_abbreviation" VARCHAR
   );
   ```

3. **Load the Data:**

   - Use Snowflake's data loading tools to import your data into the `ZIP_CODE_STATE_MAPPING` table.

### **3. Adjust Your Query to Use the New Mapping Table**

With the new mapping table in place, you can modify your query as follows:

```sql
-- Corrected Query 7: Join employment data with ZIP code to state mapping
SELECT
    emp."geo_id",
    zc."state_name",
    emp."employed_wholesale_trade",
    emp."employed_manufacturing"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
JOIN
    "CENSUS_BUREAU_ACS_2"."PUBLIC"."ZIP_CODE_STATE_MAPPING" AS zc
ON
    emp."geo_id" = zc."zip_code"
LIMIT 100;
```

**Notes:**

- **Table Aliases:**
  - `emp`: Refers to employment data from `ZIP_CODES_2017_5YR`.
  - `zc`: Refers to the ZIP code to state mapping from `ZIP_CODE_STATE_MAPPING`.

- **Join Condition:**
  - Ensure that ZIP codes are in the same format in both tables (e.g., both as strings with leading zeros preserved).

### **4. Verify Column Names and Data Types**

Ensure that:

- ZIP codes in both tables are of the same data type (`VARCHAR` recommended to preserve leading zeros).
- Column names are correctly referenced.

### **5. Handle Potential Issues with ZIP Code Formats**

ZIP codes can sometimes be challenging due to:

- **Leading Zeros:**
  - ZIP codes in the northeastern US start with zero.
  - **Solution:** Use `VARCHAR` data type for ZIP codes to preserve leading zeros.

- **Mismatch in ZIP Code Lengths:**
  - Some datasets may use 9-digit ZIP codes (ZIP+4 format).
  - **Solution:** Make sure both datasets use 5-digit ZIP codes.

### **Alternative Approach if Importing Is Not Possible**

If importing a new mapping table is not feasible, you have two options:

#### **A. Aggregate Data Nationwide**

Without state information, you can calculate the total vulnerable workers across the entire country.

```sql
-- Aggregate total vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers",
    SUM(emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp;
```

#### **B. Use State-Level Tables**

If you have state-level data available in tables like `"STATE_2017_5YR"`, you can perform your analysis at the state level without needing to join on ZIP codes.

```sql
-- Use state-level data
SELECT
    state_table."state" AS "state_name",
    state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers",
    (state_table."employed_wholesale_trade" * 0.38 + state_table."employed_manufacturing" * 0.41) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" AS state_table
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

**Note:** Replace column and table names with the actual names in your database.

---

**Summary:**

- The error `invalid identifier 'EMP."state"'` occurs because the `"state"` column does not exist in the `ZIP_CODES_2017_5YR` table.
- To proceed, you need to obtain state information by:
  - Importing a ZIP code to state mapping table.
  - Using state-level data if available.
  - Aggregating data without state-level grouping.

**Recommendation:**

- **Import a ZIP Code to State Mapping Table** to accurately map ZIP codes to states and fulfill your original task.
- Once the mapping table is in place, adjust your query to include the join with the new table.
- Ensure all data types and formats match between tables to prevent further errors.

---

**Let me know if you need assistance with importing data into Snowflake or have any other questions!**
2025-02-12 14:58:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:58:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:58:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:58:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 14:58:03 - snowflake.connector.connection - INFO - closed
2025-02-12 14:58:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 14:59:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 14:59:18 - root - INFO - SQL:
DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CYCLISTIC"."ZIP_CODES";
Results:
name,type,kind,null?,default,primary key,unique key,check,expression,comment,policy name,privacy domain
zip,"NUMBER(38,0)",COLUMN,Y,,N,N,,,,,
borough,VARCHAR(16777216),COLUMN,Y,,N,N,,,,,
neighborhood,VARCHAR(16777216),COLUMN,Y,,N,N,,,,,

2025-02-12 14:59:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 14:59:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 14:59:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 14:59:19 - snowflake.connector.connection - INFO - closed
2025-02-12 14:59:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:00:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:00:12 - root - INFO - ```sql
-- Corrected Query 8: Sum vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
```

---

```sql
-- Corrected Query 9: Calculate total vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers",
    SUM(
        emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
```

---

```sql
-- Corrected Query 10: List states in descending order of total vulnerable workers
SELECT
    state_table."state" AS "state_name",
    state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers",
    (
        state_table."employed_wholesale_trade" * 0.38 +
        state_table."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

---

```sql
-- Corrected Query 11: Identify ZIP codes with a decrease in median income from 2015 to 2018
SELECT
    t2015."geo_id",
    t2015."median_income" AS "median_income_2015",
    t2018."median_income" AS "median_income_2018",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
WHERE
    t2018."median_income" - t2015."median_income" < 0
LIMIT 100;
```

---

```sql
-- Corrected Query 12: Aggregate total employment in wholesale trade and manufacturing nationwide
SELECT
    SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
    SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
```

---

```sql
-- Corrected Query 13: List states with their median income change and total vulnerable workers
WITH income_diff AS (
    SELECT
        t2015."state" AS "state_name",
        t2018."median_income" - t2015."median_income" AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" t2018
    ON
        t2015."state" = t2018."state"
),
vulnerable_workers AS (
    SELECT
        state_table."state" AS "state_name",
        state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
)
SELECT
    income_diff."state_name",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (
        vulnerable_workers."vulnerable_wholesale_trade_workers" +
        vulnerable_workers."vulnerable_manufacturing_workers"
    ) AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."state_name" = vulnerable_workers."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

---

**Explanation:**

Due to the unavailability of the `GEO_US_BOUNDARIES` database and the lack of state information in your accessible tables, we've adjusted the queries to:

- **Aggregate data at the national level** rather than by state where necessary.
- **Use state-level tables** like `STATE_2015_5YR`, `STATE_2017_5YR`, and `STATE_2018_5YR` for state-based aggregations.
- **Exclude any references** to inaccessible databases or tables to prevent errors.

Please ensure that the `STATE_*_5YR` tables contain the necessary columns, such as `"state"`, `"employed_wholesale_trade"`, and `"employed_manufacturing"`. If the column names differ, adjust the queries accordingly.

Let me know if you need further assistance or if there are other queries you'd like to correct!
2025-02-12 15:00:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:00:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:00:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:00:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 15:00:13 - snowflake.connector.connection - INFO - closed
2025-02-12 15:00:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:01:46 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:01:46 - root - INFO - SQL:
-- Corrected Query 8: Sum vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
Results:
total_vulnerable_wholesale_trade_workers,total_vulnerable_manufacturing_workers
1547150.24,6383624.97

2025-02-12 15:01:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:01:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:01:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:01:47 - snowflake.connector.connection - INFO - closed
2025-02-12 15:01:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:02:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:02:33 - root - INFO - ```sql
-- Corrected Query 9: Calculate total vulnerable workers per state using state-level data
SELECT
    state_table."state" AS "state_name",
    state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers",
    (
        state_table."employed_wholesale_trade" * 0.38 +
        state_table."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table;
```

---

```sql
-- Corrected Query 10: List states in descending order of total vulnerable workers
SELECT
    state_table."state" AS "state_name",
    state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers",
    (
        state_table."employed_wholesale_trade" * 0.38 +
        state_table."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

---

```sql
-- Corrected Query 11: Identify ZIP codes with a decrease in median income from 2015 to 2018
SELECT
    t2015."geo_id",
    t2015."median_income" AS "median_income_2015",
    t2018."median_income" AS "median_income_2018",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
WHERE
    t2018."median_income" - t2015."median_income" < 0
LIMIT 100;
```

---

```sql
-- Corrected Query 12: Aggregate total employment in wholesale trade and manufacturing nationwide
SELECT
    SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
    SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
```

---

```sql
-- Corrected Query 13: List states with their median income change and total vulnerable workers
WITH income_diff AS (
    SELECT
        t2015."state" AS "state_name",
        t2018."median_income" - t2015."median_income" AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" t2018
    ON
        t2015."state" = t2018."state"
),
vulnerable_workers AS (
    SELECT
        state_table."state" AS "state_name",
        state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
)
SELECT
    income_diff."state_name",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (
        vulnerable_workers."vulnerable_wholesale_trade_workers" +
        vulnerable_workers."vulnerable_manufacturing_workers"
    ) AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."state_name" = vulnerable_workers."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

---

**Explanation:**

- **Queries 9 and 10:**
  - **Issue:** The original queries referenced the `GEO_US_BOUNDARIES.ZIP_CODES` table, which is either inaccessible or does not exist in your environment.
  - **Correction:** We modified the queries to use state-level data from the `STATE_2017_5YR` table available within `CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS`.
  - **Assumption:** The `STATE_2017_5YR` table contains the following columns:
    - `"state"`: State name or abbreviation.
    - `"employed_wholesale_trade"`: Number of employed wholesale trade workers per state.
    - `"employed_manufacturing"`: Number of employed manufacturing workers per state.

- **Queries 11 and 12:**
  - **No changes needed:** These queries do not reference the `GEO_US_BOUNDARIES` database and should work as is.

- **Query 13:**
  - **Issue:** Original query referenced the `GEO_US_BOUNDARIES.ZIP_CODES` table for state information.
  - **Correction:** We adjusted the query to use state-level median income data from `STATE_2015_5YR` and `STATE_2018_5YR` tables, and state-level employment data from `STATE_2017_5YR`.

**Note:** Make sure that:

- The `STATE_*_5YR` tables contain the required columns.
- Column names match those used in the queries.
- If column names differ, adjust the queries accordingly.

**Recommendation:**

- Verify the structure of the `STATE_*_5YR` tables using:
  ```sql
  DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR";
  ```
- Adjust column names in the queries if necessary.
- Ensure that your session has the correct database and schema set:
  ```sql
  USE DATABASE "CENSUS_BUREAU_ACS_2";
  USE SCHEMA "CENSUS_BUREAU_ACS";
  ```

Let me know if you need further assistance or if there are other queries you'd like to correct!
2025-02-12 15:02:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:02:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:02:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:02:34 - snowflake.connector.connection - INFO - closed
2025-02-12 15:02:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:03:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:03:18 - root - INFO - It appears that you're encountering the following error:

```
SQL compilation error: invalid identifier 'STATE_TABLE."state"'
```

**Explanation:**

The error occurs because the column `"state"` does not exist in the table `"STATE_2017_5YR"`. This suggests that the state identifier or state name in the table is stored under a different column name.

**Solution:**

To resolve this issue, we'll need to:

1. **Verify the Column Names in the `STATE_2017_5YR` Table:**

   Use the following command to inspect the table structure:

   ```sql
   DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR";
   ```

2. **Identify the Correct Column for State Names or Identifiers:**

   Common columns that might hold state information are:

   - `"geo_id"`
   - `"name"`
   - `"state_name"`
   - `"state_abbreviation"`

3. **Adjust the Query Using the Correct Column Names:**

   Replace `"state_table"."state"` with the appropriate column name found in the table.

**Assuming the State Identifier is in `"geo_id"` and the State Name is in `"name"`:**

After inspecting the table, let's say we find out:

- `"geo_id"`: Contains the state FIPS code.
- `"name"`: Contains the full state name.
- `"employed_wholesale_trade"`: Number of employed wholesale trade workers per state.
- `"employed_manufacturing"`: Number of employed manufacturing workers per state.

**Corrected Query:**

```sql
-- Corrected Query 9: Calculate total vulnerable workers per state
SELECT
    state_table."name" AS "state_name",
    state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers",
    (
        state_table."employed_wholesale_trade" * 0.38 +
        state_table."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table;
```

**Explanation:**

- **Column Adjustments:**

  - Replaced `state_table."state"` with `state_table."name"` as the state name column.
  - Ensured that the employment columns match those in the table.

- **Calculations:**

  - **Vulnerable Wholesale Trade Workers:** `state_table."employed_wholesale_trade" * 0.38`
  - **Vulnerable Manufacturing Workers:** `state_table."employed_manufacturing" * 0.41`
  - **Total Vulnerable Workers:** Sum of the above two calculations.

**Adjusting Query 10 Similarly:**

```sql
-- Corrected Query 10: List states in descending order of total vulnerable workers
SELECT
    state_table."name" AS "state_name",
    state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers",
    (
        state_table."employed_wholesale_trade" * 0.38 +
        state_table."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

**Adjusting Query 13 Accordingly:**

Assuming `t2015` and `t2018` tables also use `"name"` for state names.

```sql
-- Corrected Query 13: List states with their median income change and total vulnerable workers
WITH income_diff AS (
    SELECT
        t2015."name" AS "state_name",
        t2018."median_income" - t2015."median_income" AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        state_table."name" AS "state_name",
        state_table."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        state_table."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
)
SELECT
    income_diff."state_name",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (
        vulnerable_workers."vulnerable_wholesale_trade_workers" +
        vulnerable_workers."vulnerable_manufacturing_workers"
    ) AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."state_name" = vulnerable_workers."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

**Important Notes:**

- **Ensure Column Names Match Exactly:**
  - SQL is case-sensitive regarding column names when identifiers are quoted with double quotes.
  - Verify that the column names in your tables match those used in the queries.

- **Verify Employment Columns:**

  - Ensure that the employment data columns are correctly named.
  - Common column names may include:

    - `"employed_wholesale_trade"`
    - `"employed_in_wholesale_trade"`
    - `"wholesale_trade_employment"`
    - Similarly for manufacturing.

- **Check the `geo_id` Usage:**

  - In some datasets, `"geo_id"` may include state identifiers like FIPS codes.
  - When joining tables on `"geo_id"`, ensure they are of the same type and format.

- **Example `DESCRIBE TABLE` Output:**

  ```plaintext
  name                              type
  --------------------------------- ------------------------------
  geo_id                            VARCHAR(256)
  name                              VARCHAR(256)
  median_income                     NUMBER(38,0)
  employed_wholesale_trade          NUMBER(38,0)
  employed_manufacturing            NUMBER(38,0)
  -- other columns --
  ```

**Final Recommendation:**

- **Adjust Queries Based on Actual Column Names:**

  - If the state name is stored under a different column, replace `"name"` with the appropriate column.
  - If necessary, modify table aliases and join conditions to match your data.

- **Test Queries One Step at a Time:**

  - Run a simple `SELECT` query to ensure you can retrieve the state names and employment data.

    ```sql
    SELECT
        state_table."name",
        state_table."employed_wholesale_trade",
        state_table."employed_manufacturing"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" state_table
    LIMIT 10;
    ```

- **Verify Data Types and Formats:**

  - Ensure that calculations are valid (e.g., multiplying numeric columns).

**Conclusion:**

By identifying the correct column names and adjusting the queries accordingly, you should be able to resolve the `invalid identifier` error and successfully execute your queries.

Let me know if you need further assistance!
2025-02-12 15:03:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:03:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:03:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:03:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 252
2025-02-12 15:03:19 - snowflake.connector.connection - INFO - closed
2025-02-12 15:03:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:04:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:04:22 - root - INFO - SQL:
DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR";
Results:
Too long, hard cut:
name,type,kind,null?,default,primary key,unique key,check,expression,comment,policy name,privacy domain
geo_id,VARCHAR(16777216),COLUMN,Y,,N,N,,,,,
nonfamily_households,FLOAT,COLUMN,Y,,N,N,,,,,
family_households,FLOAT,COLUMN,Y,,N,N,,,,,
median_year_structure_built,FLOAT,COLUMN,Y,,N,N,,,,,
rent_burden_not_computed,FLOAT,COLUMN,Y,,N,N,,,,,
rent_over_50_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_40_to_50_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_35_to_40_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_30_to_35_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_25_to_30_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_20_to_25_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_15_to_20_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_10_to_15_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_under_10_percent,FLOAT,COLUMN,Y,,N,N,,,,,
total_pop,FLOAT,COLUMN,Y,,N,N,,,,,
male_pop,FLOAT,COLUMN,Y,,N,N,,,,,
female_pop,FLOAT,COLUMN,Y,,N,N,,,,,
median_age,FLOAT,COLUMN,Y,,N,N,,,,,
white_pop,FLOAT,COLUMN,Y,,N,N,,,,,
black_pop,FLOAT,COLUMN,Y,,N,N,,,,,
asian_pop,FLOAT,COLUMN,Y,,N,N,,,,,
hispanic_pop,FLOAT,COLUMN,Y,,N,N,,,,,
amerindian_pop,FLOAT,COLUMN,Y,,N,N,,,,,
other_race_pop,FLOAT,COLUMN,Y,,N,N,,,,,
two_or_more_races_pop,FLOAT,COLUMN,Y,,N,N,,,,,
not_hispanic_pop,FLOAT,COLUMN,Y,,N,N,,,,,
commuters_by_public_transportation,FLOAT,COLUMN,Y,,N,N,,,,,
households,FLOAT,COLUMN,Y,,N,N,,,,,
median_income,FLOAT,COLUMN,Y,,N,N,,,,,
income_per_capita,FLOAT,COLUMN,Y,,N,N,,,,,
housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
vacant_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
vacant_housing_units_for_rent,FLOAT,COLUMN,Y,,N,N,,,,,
vacant_housing_units_for_sale,FLOAT,COLUMN,Y,,N,N,,,,,
median_rent,FLOAT,COLUMN,Y,,N,N,,,,,
percent_income_spent_on_rent,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
million_dollar_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
mortgaged_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_father_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_mother_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_not_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
one_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
father_one_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
father_in_labor_force_one_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
commute_10_14_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_15_19_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_20_24_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_25_29_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_30_34_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_45_59_mins,FLOAT,COLUMN,Y,,N,N,,,,,
aggregate_travel_time_to_work,FLOAT,COLUMN,Y,,N,N,,,,,
income_less_10000,FLOAT,COLUMN,Y,,N,N,,,,,
income_10000_14999,FLOAT,COLUMN,Y,,N,N,,,,,
income_15000_19999,FLOAT,COLUMN,Y,,N,N,,,,,
income_20000_24999,FLOAT,COLUMN,Y,,N,N,,,,,
income_25000_29999,FLOAT,COLUMN,Y,,N,N,,,,,
income_30000_34999,FLOAT,COLUMN,Y,,N,N,,,,,
income_35000_39999,FLOAT,COLUMN,Y,,N,N,,,,,
income_40000_44999,FLOAT,COLUMN,Y,,N,N,,,,,
income_45000_49999,FLOAT,COLUMN,Y,,N,N,,,,,
income_50000_59999,FLOAT,COLUMN,Y,,N,N,,,,,
income_60000_74999,FLOAT,COLUMN,Y,,N,N,,,,,
income_75000_99999,FLOAT,COLUMN,Y,,N,N,,,,,
income_100000_124999,FLOAT,COLUMN,Y,,N,N,,,,,
income_125000_149999,FLOAT,COLUMN,Y,,N,N,,,,,
income_150000_199999,FLOAT,COLUMN,Y,,N,N,,,,,
income_200000_or_more,FLOAT,COLUMN,Y,,N,N,,,,,
renter_occupied_housing_units_paying_cash_median_gross_rent,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units_lower_value_quartile,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units_median_value,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units_upper_value_quartile,FLOAT,COLUMN,Y,,N,N,,,,,
married_households,FLOAT,COLUMN,Y,,N,N,,,,,
occupied_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
housing_units_renter_occupied,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_1_units_detached,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_1_units_attached,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_2_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_3_to_4_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_5_to_9_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_10_to_19_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_20_to_49_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_50_or_more_units,FLOAT,COLUMN,Y,,N,N,,,,,
mobile_homes,FLOAT,COLUMN,Y,,N,N,,,,,
housing_built_2005_or_later,FLOAT,COLUMN,Y,,N,N,,,,,
housing_built_2000_to_2004,FLOAT,COLUMN,Y,,N,N,,,,,
housing_built_1939_or_earlier,FLOAT,COLUMN,Y,,N,N,,,,,
male_under_5,FLOAT,COLUMN,Y,,N,N,,,,,
male_5_to_9,FLOAT,COLUMN,Y,,N,N,,,,,
male_10_to_14,FLOAT,COLUMN,Y,,N,N,,,,,
male_15_to_17,FLOAT,COLUMN,Y,,N,N,,,,,
male_18_to_19,FLOAT,COLUMN,Y,,N,N,,,,,
male_20,FLOAT,COLUMN,Y,,N,N,,,,,
male_21,FLOAT,COLUMN,Y,,N,N,,,,,
male_22_to_24,FLOAT,COLUMN,Y,,N,N,,,,,
male_25_to_29,FLOAT,COLUMN,Y,,N,N,,,,,
male_30_to_34,FLOAT,COLUMN,Y,,N,N,,,,,
male_35_to_39,FLOAT,COLUMN,Y,,N

2025-02-12 15:04:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:04:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:04:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:04:23 - snowflake.connector.connection - INFO - closed
2025-02-12 15:04:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:05:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:05:28 - root - INFO - It appears that you're encountering an error because the query references the `GEO_US_BOUNDARIES` database, which is not accessible in your environment. The error message indicates:

```
Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

**Explanation:**

- **Issue:** The query uses the table `"GEO_US_BOUNDARIES"."ZIP_CODES"`, which is either not available or not authorized for your session.
- **Impact:** Without access to this table, we cannot join the ZIP code data (`"ZIP_CODES_2017_5YR"`) with state names to aggregate vulnerable workers by state.

**Solution:**

Since we cannot access the `GEO_US_BOUNDARIES` database, we'll need to adjust the query to use only the tables available in the `CENSUS_BUREAU_ACS_2` database. However, upon inspecting the `"STATE_2017_5YR"` table, it appears that it does not contain the necessary employment columns (`"employed_wholesale_trade"` and `"employed_manufacturing"`).

**Options to Proceed:**

1. **Import a ZIP Code to State Mapping Table:**

   - **Obtain a Mapping Dataset:**
     - Acquire a publicly available dataset that maps ZIP codes to state names.
     - Ensure the dataset includes columns like `"zip_code"` and `"state_name"`.
   - **Create a New Table:**
     - Import the dataset into your database.
     - Example table name: `"ZIP_CODE_STATE_MAPPING"`.
   - **Adjust the Query:**
     - Join the `"ZIP_CODES_2017_5YR"` table with the new mapping table to associate ZIP codes with states.

2. **Use Another Geographic Identifier:**

   - **Check for Other Columns:**
     - Look for columns in `"ZIP_CODES_2017_5YR"` that might contain state information or other geographic identifiers (e.g., county codes).
   - **Adjust the Query:**
     - Use the available geographic identifiers to perform the aggregation.

3. **Aggregate Data at the National Level:**

   - **Modify the Query:**
     - Perform the calculation without grouping by state.
     - This will provide the total number of vulnerable workers nationwide.

**Corrected Query Using Option 3 (National Level Aggregation):**

```sql
-- Calculate total vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers",
    SUM(
        emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
```

**Explanation:**

- **Calculations:**
  - **Vulnerable Wholesale Trade Workers:** Total across all ZIP codes.
  - **Vulnerable Manufacturing Workers:** Total across all ZIP codes.
  - **Total Vulnerable Workers:** Sum of the above.
- **Limitation:**
  - Without state information, we cannot provide a state-wise breakdown.

**Results from Your Previous Execution:**

The following results were obtained when you ran a similar query:

```plaintext
total_vulnerable_wholesale_trade_workers,total_vulnerable_manufacturing_workers
1,547,150.24,6,383,624.97
```

These figures represent the total number of vulnerable workers nationwide in the wholesale trade and manufacturing sectors, respectively.

**Next Steps:**

1. **Option 1: Import ZIP Code to State Mapping**

   - **Create the Mapping Table:**

     ```sql
     CREATE OR REPLACE TABLE "CENSUS_BUREAU_ACS_2"."PUBLIC"."ZIP_CODE_STATE_MAPPING" (
         "zip_code" VARCHAR,
         "state_name" VARCHAR
     );
     ```

   - **Load the Data:**
     - Import the ZIP code to state mapping data into the table.

   - **Adjust the Query:**

     ```sql
     -- List states in descending order of total vulnerable workers
     SELECT
         zc."state_name",
         SUM(emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
         SUM(emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers",
         SUM(
             emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41
         ) AS "total_vulnerable_workers"
     FROM
         "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
     JOIN
         "CENSUS_BUREAU_ACS_2"."PUBLIC"."ZIP_CODE_STATE_MAPPING" zc
     ON
         emp."geo_id" = zc."zip_code"
     GROUP BY
         zc."state_name"
     ORDER BY
         "total_vulnerable_workers" DESC
     LIMIT 100;
     ```

2. **Option 2: Use Available Geographic Identifiers**

   - **Inspect the Data:**
     - Check if the `"ZIP_CODES_2017_5YR"` table contains other geographic identifiers.
     - Use those identifiers to map to states if possible.

3. **Option 3: Proceed with National Aggregation**

   - Use the corrected query provided above to get national-level totals.

**Conclusion:**

- **Recommendation:** Import a ZIP code to state mapping table to enable state-level aggregation.
- **Alternative:** If importing is not feasible, proceed with national-level analysis.

**Assistance with Importing Data:**

- If you need help importing the mapping table or adjusting the queries, please let me know, and I'll be happy to guide you through the process.

---

Let me know if you have any questions or need further assistance!
2025-02-12 15:05:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:05:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:05:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:05:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 15:05:30 - snowflake.connector.connection - INFO - closed
2025-02-12 15:05:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:06:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:06:25 - root - INFO - SQL:
-- Calculate total vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers",
    SUM(
        emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
Results:
total_vulnerable_wholesale_trade_workers,total_vulnerable_manufacturing_workers,total_vulnerable_workers
1547150.24,6383624.97,7930775.21

2025-02-12 15:06:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:06:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:06:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:06:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 15:06:27 - snowflake.connector.connection - INFO - closed
2025-02-12 15:06:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:06:28 - root - INFO - SQL:
-- Additional Queries:

-- Query 11: Identify ZIP codes with a decrease in median income from 2015 to 2018
SELECT
    t2015."geo_id",
    t2015."median_income" AS "median_income_2015",
    t2018."median_income" AS "median_income_2018",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
WHERE
    t2018."median_income" - t2015."median_income" < 0
LIMIT 100
Results:
geo_id,median_income_2015,median_income_2018,median_income_difference
69128,56471.000000000,38125.0,-18346.0
97486,62083.000000000,53393.0,-8690.0
44669,67981.000000000,55313.0,-12668.0
15638,51304.000000000,44667.0,-6637.0
36263,41875.000000000,26154.0,-15721.0
66850,90417.000000000,55521.0,-34896.0
68416,40000.000000000,34500.0,-5500.0
73556,37813.000000000,24688.0,-13125.0
86444,21484.000000000,20139.0,-1345.0
65335,50250.000000000,41250.0,-9000.0
59927,47813.000000000,46250.0,-1563.0
12548,56625.000000000,56369.0,-256.0
93517,61250.000000000,60878.0,-372.0
29614,27065.000000000,20000.0,-7065.0
05034,95833.000000000,77981.0,-17852.0
16691,45000.000000000,37750.0,-7250.0
12847,62917.000000000,59375.0,-3542.0
93424,74563.000000000,71090.0,-3473.0
21734,52969.000000000,37250.0,-15719.0
67202,40273.000000000,38611.0,-1662.0
27862,39375.000000000,37500.0,-1875.0
97108,51250.000000000,43472.0,-7778.0
08212,53125.000000000,47917.0,-5208.0
72201,67441.000000000,59286.0,-8155.0
98588,56855.000000000,46372.0,-10483.0
59844,41458.000000000,41125.0,-333.0
08023,53250.000000000,28708.0,-24542.0
63430,61250.000000000,36875.0,-24375.0
61602,20673.000000000,18958.0,-1715.0
71922,41667.000000000,38438.0,-3229.0
97067,73500.000000000,55038.0,-18462.0
05076,55000.000000000,49688.0,-5312.0
95461,58091.000000000,42250.0,-15841.0
03817,21042.000000000,20577.0,-465.0
17247,70781.000000000,41278.0,-29503.0
96075,26875.000000000,15391.0,-11484.0
56456,43333.000000000,28438.0,-14895.0
04066,90606.000000000,66719.0,-23887.0
37351,59268.000000000,47368.0,-11900.0
97830,39250.000000000,30909.0,-8341.0
97840,100921.000000000,79732.0,-21189.0
15928,46402.000000000,43971.0,-2431.0
93067,75684.000000000,57788.0,-17896.0
99345,66250.000000000,61875.0,-4375.0
93285,44712.000000000,30665.0,-14047.0
60604,151731.000000000,116250.0,-35481.0
12493,85547.000000000,78359.0,-7188.0
87743,29500.000000000,22708.0,-6792.0
95720,50625.000000000,43750.0,-6875.0
57773,90625.000000000,68214.0,-22411.0
77046,98047.000000000,81803.0,-16244.0
03751,56293.000000000,41845.0,-14448.0
02646,66434.000000000,64760.0,-1674.0
89413,115962.000000000,91184.0,-24778.0
04006,33839.000000000,32708.0,-1131.0
15413,36297.000000000,36219.0,-78.0
01088,61750.000000000,47232.0,-14518.0
61416,30156.000000000,21250.0,-8906.0
52166,56705.000000000,46667.0,-10038.0
27915,56406.000000000,33125.0,-23281.0
74427,46625.000000000,41563.0,-5062.0
40915,42556.000000000,29320.0,-13236.0
36205,64167.000000000,59375.0,-4792.0
77446,28542.000000000,25688.0,-2854.0
59484,83750.000000000,65938.0,-17812.0
69161,24688.000000000,19861.0,-4827.0
12752,50781.000000000,41202.0,-9579.0
59710,62083.000000000,36250.0,-25833.0
23879,53077.000000000,42361.0,-10716.0
97543,48140.000000000,31638.0,-16502.0
22959,70075.000000000,59844.0,-10231.0
96742,66250.000000000,61875.0,-4375.0
81029,40000.000000000,34286.0,-5714.0
80801,52708.000000000,48750.0,-3958.0
67332,47000.000000000,46250.0,-750.0
58463,40385.000000000,31550.0,-8835.0
67862,43750.000000000,41071.0,-2679.0
52774,76250.000000000,61250.0,-15000.0
62357,28125.000000000,24931.0,-3194.0
59087,43125.000000000,40417.0,-2708.0
73441,25313.000000000,24688.0,-625.0
97877,18000.000000000,11250.0,-6750.0
65283,58352.000000000,45948.0,-12404.0
01243,73750.000000000,69167.0,-4583.0
52312,30313.000000000,29444.0,-869.0
08738,104375.000000000,84659.0,-19716.0
67631,59875.000000000,43750.0,-16125.0
62965,38125.000000000,28958.0,-9167.0
27872,30625.000000000,19236.0,-11389.0
95552,32632.000000000,27056.0,-5576.0
64090,44688.000000000,41875.0,-2813.0
44697,50000.000000000,43750.0,-6250.0
54760,48500.000000000,36250.0,-12250.0
59419,52500.000000000,42500.0,-10000.0
28519,54750.000000000,53875.0,-875.0
63458,66250.000000000,29545.0,-36705.0
72152,36364.000000000,18913.0,-17451.0
84763,50000.000000000,46250.0,-3750.0
58752,88594.000000000,60625.0,-27969.0
54844,44500.000000000,43125.0,-1375.0

2025-02-12 15:06:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:06:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:06:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:06:29 - snowflake.connector.connection - INFO - closed
2025-02-12 15:06:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:07:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:07:01 - root - INFO - Certainly! Since the `GEO_US_BOUNDARIES` database is not accessible, we'll need to adjust **Query 12** to use only the tables available within the `CENSUS_BUREAU_ACS_2` database. Without access to a ZIP code to state mapping, we cannot aggregate employment data per state. Instead, we can aggregate the total employment nationwide.

---

```sql
-- Corrected Query 12: Aggregate total employment in wholesale trade and manufacturing nationwide
SELECT
    SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
    SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp;
```

---

**Explanation:**

- **Issue with Original Query:**
  - The original query attempted to join `ZIP_CODES_2017_5YR` (`emp`) with `GEO_US_BOUNDARIES.ZIP_CODES` (`zc`) to obtain state names.
  - Since the `GEO_US_BOUNDARIES` database is not accessible, this join cannot be performed, leading to the error.

- **Solution:**
  - Remove the join with the inaccessible `GEO_US_BOUNDARIES.ZIP_CODES` table.
  - Aggregate the total employment numbers nationwide without grouping by state.

**Result:**

- This query will return the total number of workers employed in the wholesale trade and manufacturing sectors across all ZIP codes in the dataset.

**Alternative Approaches:**

1. **Use State-Level Data (if available):**

   - Check if you have access to a state-level table that contains employment data, such as `"STATE_2017_5YR"`.
   - If so, you can aggregate employment data per state using that table.

   ```sql
   -- Alternative Query: Aggregate total employment per state using state-level data
   SELECT
       state_table."name" AS "state_name",
       state_table."employed_wholesale_trade" AS "total_wholesale_trade_workers",
       state_table."employed_manufacturing" AS "total_manufacturing_workers"
   FROM
       "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" AS state_table;
   ```

2. **Import a ZIP Code to State Mapping Table:**

   - If you can obtain a dataset that maps ZIP codes to state names, you can import it into your database.
   - After importing, you can perform the join to aggregate employment data per state.

   ```sql
   -- After importing ZIP code to state mapping into 'ZIP_CODE_STATE_MAPPING'
   SELECT
       zcsm."state_name",
       SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
       SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
   FROM
       "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
   JOIN
       "ZIP_CODE_STATE_MAPPING" AS zcsm
   ON
       emp."geo_id" = zcsm."zip_code"
   GROUP BY
       zcsm."state_name"
   LIMIT 100;
   ```

   **Note:** You'll need to adjust the table and column names based on how you import the mapping data.

---

**Let me know if you'd like assistance with importing a ZIP code to state mapping, or if you need further help modifying other queries!**
2025-02-12 15:07:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:07:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:07:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:07:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 15:07:02 - snowflake.connector.connection - INFO - closed
2025-02-12 15:07:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:07:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:07:42 - root - INFO - SQL:
-- Corrected Query 12: Aggregate total employment in wholesale trade and manufacturing nationwide
SELECT
    SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
    SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp;
Results:
total_wholesale_trade_workers,total_manufacturing_workers
4071448.0,15569817.0

2025-02-12 15:07:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:07:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:07:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:07:43 - snowflake.connector.connection - INFO - closed
2025-02-12 15:07:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:08:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:08:36 - root - INFO - ```sql
-- Corrected Query 13: List states with their median income change and total vulnerable workers
WITH income_diff AS (
    SELECT
        t2015."geo_id",
        t2015."name" AS "state_name",
        (t2018."median_income" - t2015."median_income") AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" AS t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" AS t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        emp."geo_id",
        emp."name" AS "state_name",
        (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
        (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" AS emp
)
SELECT
    income_diff."state_name",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (
        vulnerable_workers."vulnerable_wholesale_trade_workers" +
        vulnerable_workers."vulnerable_manufacturing_workers"
    ) AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."state_name" = vulnerable_workers."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

**Explanation:**

Due to the inaccessibility of the `GEO_US_BOUNDARIES` database, we've modified Query 13 to use state-level tables available within the `CENSUS_BUREAU_ACS_2` database. Specifically, we:

- **Used State-Level Tables:**
  - Replaced ZIP code tables with state-level tables:
    - `"STATE_2015_5YR"` for median income in 2015.
    - `"STATE_2017_5YR"` for employment data in 2017.
    - `"STATE_2018_5YR"` for median income in 2018.
- **Adjusted Column References:**
  - Replaced `"geo_id"` with `"name"` for state names, assuming that the `"name"` column contains the state names.
  - Ensured that the columns for employment and median income match those in the state-level tables.

**Notes:**

- **Join Conditions:**
  - Joined on `"geo_id"` to match records between years.
  - Matched `"state_name"` between `income_diff` and `vulnerable_workers` to aggregate data per state.
- **Calculations:**
  - **Median Income Difference:** Difference in median income between 2018 and 2015 per state.
  - **Vulnerable Workers:**
    - Calculated as 38% of wholesale trade employees and 41% of manufacturing employees in 2017.
- **Ordering:**
  - Results are ordered by `"total_vulnerable_workers"` in descending order.

**Assumptions:**

- The state-level tables contain the following columns:
  - `"geo_id"`: A unique identifier for each state.
  - `"name"`: The name of the state.
  - `"median_income"`: Median income for the state.
  - `"employed_wholesale_trade"`: Number of employed wholesale trade workers per state.
  - `"employed_manufacturing"`: Number of employed manufacturing workers per state.
- Column names in your tables match those used in the query. If they differ, please adjust the query accordingly.

**Next Steps:**

- **Verify Column Names:**
  - Use `DESCRIBE TABLE` or `SHOW COLUMNS` to confirm the column names in your tables.
- **Adjust Query If Necessary:**
  - Replace any column names in the query to match your table schema.
- **Run the Query:**
  - After adjustments, you should be able to execute the query without referencing the inaccessible `GEO_US_BOUNDARIES` database and obtain the desired results.

Let me know if you need further assistance!
2025-02-12 15:08:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:08:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:08:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:08:37 - snowflake.connector.connection - INFO - closed
2025-02-12 15:08:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:09:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:09:36 - root - INFO - **Understanding the Error:**

The error message you're encountering is:

```
SQL compilation error: error line 4 at position 8
invalid identifier 'T2015."name"'
```

**Explanation:**

- The error indicates that the column `"name"` does not exist in the table alias `t2015`, which refers to the `"ZIP_CODES_2015_5YR"` table in your query.
- In your query, you're selecting `t2015."name"` as `"state_name"`, but the `"ZIP_CODES_2015_5YR"` table likely does not have a `"name"` column.
- This mismatch is causing the `invalid identifier` error.

**Solution:**

Since the `"ZIP_CODES_2015_5YR"` table does not contain state names or the `"name"` column, and we cannot access the `"GEO_US_BOUNDARIES"` database, we need to use the state-level tables that include state names.

**Steps to Correct the Query:**

1. **Use State-Level Tables:**

   - Replace `"ZIP_CODES_2015_5YR"` with `"STATE_2015_5YR"`.
   - Replace `"ZIP_CODES_2018_5YR"` with `"STATE_2018_5YR"`.
   - Replace `"ZIP_CODES_2017_5YR"` with `"STATE_2017_5YR"`.

2. **Adjust Column References:**

   - Ensure that the state-level tables have a column that contains the state name, typically `"name"`.
   - Use `"name"` to select the state name.

3. **Modify the Query Accordingly:**

   ```sql
   -- Corrected Query 13: List states with their median income change and total vulnerable workers
   WITH income_diff AS (
       SELECT
           t2015."geo_id",
           t2015."name" AS "state_name",
           (t2018."median_income" - t2015."median_income") AS "median_income_difference"
       FROM
           "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" AS t2015
       JOIN
           "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" AS t2018
       ON
           t2015."geo_id" = t2018."geo_id"
   ),
   vulnerable_workers AS (
       SELECT
           emp."geo_id",
           emp."name" AS "state_name",
           (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
           (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
       FROM
           "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" AS emp
   )
   SELECT
       income_diff."state_name",
       income_diff."median_income_difference",
       vulnerable_workers."vulnerable_wholesale_trade_workers",
       vulnerable_workers."vulnerable_manufacturing_workers",
       (
           vulnerable_workers."vulnerable_wholesale_trade_workers" +
           vulnerable_workers."vulnerable_manufacturing_workers"
       ) AS "total_vulnerable_workers"
   FROM
       income_diff
   JOIN
       vulnerable_workers
   ON
       income_diff."state_name" = vulnerable_workers."state_name"
   ORDER BY
       "total_vulnerable_workers" DESC
   LIMIT 100;
   ```

**Explanation of Changes:**

- **Replaced Tables:**
  - **Original Tables:**
    - `"ZIP_CODES_2015_5YR"`, `"ZIP_CODES_2018_5YR"`, and `"ZIP_CODES_2017_5YR"`
  - **New Tables:**
    - `"STATE_2015_5YR"`, `"STATE_2018_5YR"`, and `"STATE_2017_5YR"`
- **Adjusted Column References:**
  - Replaced `t2015."geo_id"` with `t2015."geo_id"` (same, assuming the state tables have `"geo_id"`)
  - **Added `t2015."name" AS "state_name"`** in the `income_diff` CTE
  - **Added `emp."name" AS "state_name"`** in the `vulnerable_workers` CTE
- **Join Conditions:**
  - Now joining on `income_diff."state_name" = vulnerable_workers."state_name"`
- **Removed Reference to Inaccessible Database:**
  - Eliminated the join with `"GEO_US_BOUNDARIES"."ZIP_CODES"`

**Validation Steps:**

1. **Check Column Names:**

   - Use the following commands to verify that the `"STATE_*_5YR"` tables have the necessary columns:

     ```sql
     DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR";
     DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR";
     DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR";
     ```

   - Ensure that these tables include the columns:
     - `"geo_id"`
     - `"name"` (state name)
     - `"median_income"`
     - `"employed_wholesale_trade"`
     - `"employed_manufacturing"`

2. **Adjust the Query if Necessary:**

   - If the `"name"` column is not present, identify the correct column that contains the state name (e.g., `"state"` or `"state_name"`).
   - Replace `"name"` with the correct column name in the query.

**Example Adjustments:**

- If the state name is stored in a column called `"state"`, modify the query:

  ```sql
  -- Replace "name" with "state"
  WITH income_diff AS (
      SELECT
          t2015."geo_id",
          t2015."state" AS "state_name",
          (t2018."median_income" - t2015."median_income") AS "median_income_difference"
      FROM
          "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" AS t2015
      JOIN
          "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" AS t2018
      ON
          t2015."geo_id" = t2018."geo_id"
  ),
  vulnerable_workers AS (
      SELECT
          emp."geo_id",
          emp."state" AS "state_name",
          (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
          (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
      FROM
          "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" AS emp
  )
  -- Rest of the query remains the same
  ```

**Key Points:**

- **Ensure Column Names Exist:**

  - The error occurs because the column `"name"` does not exist in `t2015` (which was `"ZIP_CODES_2015_5YR"`).
  - By using state-level tables that contain the `"name"` or `"state"` column, we can include the state names in our query.

- **Avoid Inaccessible Databases:**

  - Since `"GEO_US_BOUNDARIES"` is not accessible, we eliminate any joins that reference tables from this database.

- **Align Table Levels:**

  - Use state-level tables for median income and employment data to ensure consistency and availability of state identifiers.

**Final Notes:**

- **Consistency in Data Levels:**

  - Mixing ZIP code data with state-level data can lead to aggregation issues and missing identifiers.
  - By using state-level tables throughout the query, we ensure that the joins can be performed correctly.

- **Possible Differences in Data:**

  - Be aware that state-level aggregates may differ from summing up ZIP code-level data due to differences in data collection and aggregation methods.

**Next Steps:**

1. **Run the Corrected Query:**

   - After making the necessary adjustments, execute the corrected query.

2. **Verify Results:**

   - Check the results to ensure they make sense and that the data aligns with expectations.

3. **Adjust if Necessary:**

   - If any further errors arise, revisit the column names and table structures to ensure they match your data.

---

**Let me know if you need any more assistance or if you have questions about modifying the query further!**
2025-02-12 15:09:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:09:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:09:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:09:37 - snowflake.connector.connection - INFO - closed
2025-02-12 15:09:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:10:20 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:10:20 - root - INFO - ```sql
-- Corrected Query 13: List states with their median income change and total vulnerable workers

WITH income_diff AS (
    SELECT
        t2015."geo_id",
        t2015."median_income" AS "median_income_2015",
        t2018."median_income" AS "median_income_2018",
        (t2018."median_income" - t2015."median_income") AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        emp."geo_id",
        (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
        (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
)
SELECT
    income_diff."geo_id",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (vulnerable_workers."vulnerable_wholesale_trade_workers" + vulnerable_workers."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."geo_id" = vulnerable_workers."geo_id"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

---

**Explanation:**

- **Issue with Original Query:**
  - The error `invalid identifier 'T2015."name"'` indicates that the column `"name"` does not exist in the table alias `t2015`, which refers to `"ZIP_CODES_2015_5YR"`.
  - Since we cannot access the `"GEO_US_BOUNDARIES"` database to get the `"state_name"`, and the `"ZIP_CODES_*_5YR"` tables do not have a `"name"` or `"state_name"` column, we need to adjust the query to work with the available data.

- **Corrections Made:**
  - **Removed Reference to `"name"` Column:**
    - The `"name"` column was referenced in the `income_diff` CTE but does not exist in the `"ZIP_CODES_2015_5YR"` table.
    - Removed `t2015."name" AS "state_name"` from the `SELECT` clause in the `income_diff` CTE.
  - **Eliminated Join with Inaccessible Database:**
    - Since we cannot access `"GEO_US_BOUNDARIES"."ZIP_CODES"`, we removed the join with this table.
  - **Adjusted Final `SELECT` Statement:**
    - Since we no longer have `"state_name"`, we use `income_diff."geo_id"` to reference the ZIP code.
    - You may replace `income_diff."geo_id"` with a different geographic identifier if available.

- **Resulting Query:**
  - The query now calculates the median income difference and vulnerable workers per ZIP code (`"geo_id"`), rather than per state.
  - It lists ZIP codes in descending order of total vulnerable workers.

- **Limitations:**
  - Without access to state names or a mapping from ZIP codes to states, we cannot aggregate or display data at the state level.
  - The results will be at the ZIP code level, identified by `"geo_id"`.

**Alternative Approach:**

If you require state-level aggregation and have access to state-level tables, you can adjust the query to use those tables:

```sql
-- Alternative Query 13 using state-level data

WITH income_diff AS (
    SELECT
        t2015."geo_id",
        t2015."name" AS "state_name",
        (t2018."median_income" - t2015."median_income") AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2015_5YR" AS t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2018_5YR" AS t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        emp."geo_id",
        emp."name" AS "state_name",
        (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
        (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR" AS emp
)
SELECT
    income_diff."state_name",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (vulnerable_workers."vulnerable_wholesale_trade_workers" + vulnerable_workers."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."geo_id" = vulnerable_workers."geo_id"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

**Notes on Alternative Approach:**

- **State-Level Data:**
  - This query uses state-level tables (`"STATE_2015_5YR"`, `"STATE_2017_5YR"`, `"STATE_2018_5YR"`) which likely contain the `"name"` column for state names.
- **Assumed Columns:**
  - `"geo_id"`: Unique identifier for each state.
  - `"name"`: State name.
  - `"median_income"`: Median income per state.
  - `"employed_wholesale_trade"` and `"employed_manufacturing"`: Employment figures per state.
- **Join Conditions:**
  - Joining on `"geo_id"` to align data across years and datasets.
- **Result:**
  - Provides median income changes and vulnerable worker counts per state.

**Conclusion:**

- If you cannot access state names through your ZIP code data or external databases, consider using state-level data if available.
- Alternatively, you may proceed with ZIP code-level data, understanding the limitations regarding state information.

---

Let me know if you need further assistance or if there are other queries you'd like to adjust!
2025-02-12 15:10:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:10:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:10:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:10:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 15:10:21 - snowflake.connector.connection - INFO - closed
2025-02-12 15:10:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:10:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:10:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:10:49 - root - INFO - SQL:
-- Corrected Query 13: List states with their median income change and total vulnerable workers

WITH income_diff AS (
    SELECT
        t2015."geo_id",
        t2015."median_income" AS "median_income_2015",
        t2018."median_income" AS "median_income_2018",
        (t2018."median_income" - t2015."median_income") AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        emp."geo_id",
        (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
        (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
)
SELECT
    income_diff."geo_id",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (vulnerable_workers."vulnerable_wholesale_trade_workers" + vulnerable_workers."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."geo_id" = vulnerable_workers."geo_id"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
Results:
geo_id,median_income_difference,vulnerable_wholesale_trade_workers,vulnerable_manufacturing_workers,total_vulnerable_workers
90011,6703.0,905.92,4277.94,5183.86
30721,4453.0,182.02,4649.8099999999995,4831.83
90201,5001.0,1128.98,3039.74,4168.719999999999
95035,24907.0,373.16,3633.0099999999998,4006.1699999999996
90280,6694.0,1149.1200000000001,2691.6499999999996,3840.7699999999995
60629,1307.0,688.1800000000001,3116.0,3804.1800000000003
60804,5621.0,605.72,3159.87,3765.59
60085,2603.0,595.08,3155.3599999999997,3750.4399999999996
49424,6336.0,216.22,3504.68,3720.8999999999996
90255,6664.0,911.24,2800.71,3711.95
77449,7309.0,1168.1200000000001,2540.3599999999997,3708.4799999999996
97124,11665.0,278.16,3390.7,3668.8599999999997
60505,5857.0,580.26,3081.97,3662.2299999999996
45840,4327.0,279.3,3287.3799999999997,3566.68
60639,5352.0,422.56,3112.72,3535.2799999999997
90650,6697.0,1028.28,2485.83,3514.1099999999997
92704,5863.0,408.88,3051.22,3460.1
77494,5544.0,923.4,2531.3399999999997,3454.74
60632,4320.0,561.26,2861.39,3422.6499999999996
75052,8610.0,893.0,2464.1,3357.1
91744,7637.0,680.2,2652.29,3332.49
46514,5657.0,278.54,3023.3399999999997,3301.8799999999997
47201,6026.0,130.72,3158.23,3288.95
92683,8435.0,430.16,2840.89,3271.0499999999997
97229,11633.0,397.48,2838.8399999999997,3236.3199999999997
91331,8374.0,490.2,2703.95,3194.1499999999996
92126,7957.0,309.7,2881.0699999999997,3190.7699999999995
77084,2145.0,830.6800000000001,2331.67,3162.3500000000004
53081,5594.0,122.74,3032.3599999999997,3155.0999999999995
97006,10872.0,356.06,2664.5899999999997,3020.6499999999996
91706,10455.0,849.6800000000001,2142.66,2992.34
97007,10597.0,476.14,2511.25,2987.39
49423,6531.0,136.8,2802.35,2939.15
98208,11453.0,224.96,2681.3999999999996,2906.3599999999997
48044,12663.0,271.32,2618.6699999999996,2889.99
92804,8463.0,576.08,2283.29,2859.37
72764,9078.0,316.54,2538.31,2854.85
94087,27548.0,192.28,2635.89,2828.17
92503,10236.0,499.32,2328.7999999999997,2828.12
60623,3543.0,424.08,2402.6,2826.68
95051,21628.0,292.98,2529.7,2822.68
90805,4555.0,503.12,2300.5099999999998,2803.6299999999997
77429,6950.0,807.12,1982.35,2789.47
54956,3131.0,254.22,2523.14,2777.3599999999997
40324,2665.0,202.54,2573.16,2775.7
60073,7869.0,349.98,2425.1499999999996,2775.1299999999997
92805,9412.0,585.58,2184.48,2770.06
44077,5931.0,240.16,2525.6,2765.7599999999998
44060,2259.0,346.18,2417.77,2763.95
60120,4799.0,336.68,2425.97,2762.6499999999996
84118,5695.0,452.2,2291.8999999999996,2744.0999999999995
53511,4705.0,242.06,2499.77,2741.83
29681,1943.0,404.32,2332.8999999999996,2737.22
95014,23861.0,196.84,2526.42,2723.26
94587,19927.0,382.28000000000003,2337.0,2719.28
30701,3031.0,180.12,2530.1099999999997,2710.2299999999996
11717,6559.0,551.76,2154.96,2706.7200000000003
45011,4563.0,470.44,2229.99,2700.43
84404,8700.0,244.34,2447.29,2691.63
07055,4456.0,425.98,2260.33,2686.31
44256,7494.0,483.36,2201.7,2685.06
77095,6247.0,891.1,1778.58,2669.68
92336,2605.0,809.02,1853.61,2662.63
94536,20047.0,379.24,2283.29,2662.5299999999997
37013,6388.0,596.98,2057.79,2654.77
90262,6570.0,528.96,2114.37,2643.33
28601,4063.0,400.9,2219.33,2620.23
53215,3401.0,329.46,2265.66,2595.12
94538,16265.0,257.64,2336.18,2593.8199999999997
44035,3056.0,234.46,2328.39,2562.85
92882,6851.0,565.82,1994.6499999999999,2560.47
54915,1784.0,363.66,2170.95,2534.6099999999997
54220,6186.0,130.72,2401.7799999999997,2532.4999999999995
93033,7696.0,613.7,1914.6999999999998,2528.3999999999996
78660,7131.0,407.74,2119.29,2527.0299999999997
63376,5937.0,443.08,2078.29,2521.37
94539,24576.0,337.44,2182.02,2519.46
90660,9859.0,680.96,1825.32,2506.2799999999997
77573,9958.0,372.02,2134.0499999999997,2506.0699999999997
17331,2769.0,449.16,2054.5099999999998,2503.6699999999996
77584,9852.0,443.08,2056.97,2500.0499999999997
90631,11703.0,792.3,1698.2199999999998,2490.5199999999995
95123,23633.0,238.26,2250.49,2488.75
30043,11117.0,679.44,1803.1799999999998,2482.62
91342,9745.0,387.98,2090.18,2478.16
92707,14866.0,277.78000000000003,2198.42,2476.2000000000003
48187,5317.0,273.6,2188.17,2461.77
92335,8686.0,511.48,1947.9099999999999,2459.39
91709,7676.0,876.28,1582.1899999999998,2458.47
92703,7773.0,212.8,2224.25,2437.05
91710,6972.0,657.4,1767.1,2424.5
77379,3673.0,565.82,1856.07,2421.89
48307,7641.0,175.18,2242.7,2417.8799999999997
90001,4634.0,464.74,1947.4999999999998,2412.24
42101,5115.0,381.14,2027.86,2409.0
95127,19061.0,212.8,2193.5,2406.3
19446,7457.0,310.46,2094.69,2405.15
46516,9166.0,101.84,2300.5099999999998,2402.35
75070,5474.0,585.2,1810.9699999999998,2396.17
30705,9377.0,103.74,2291.49,2395.2299999999996

2025-02-12 15:10:49 - root - INFO - itercount: 0
2025-02-12 15:10:49 - root - INFO - Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,0
table_name,BLOCKGROUP_2010_5YR
description,
DDL,"create or replace TABLE BLOCKGROUP_2010_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT
);"

Some other tables have the similar structure: ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2018_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2012_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,1
table_name,CBSA_2007_1YR
description,
DDL,"create or replace TABLE CBSA_2007_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CBSA_2007_1YR', 'CBSA_2015_5YR', 'CBSA_2013_5YR', 'CBSA_2019_1YR', 'CBSA_2012_5YR', 'CBSA_2017_5YR', 'CBSA_2008_1YR', 'CBSA_2011_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2015_1YR', 'CBSA_2007_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2011_1YR', 'CBSA_2012_1YR', 'CBSA_2013_3YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2016_5YR', 'CBSA_2013_1YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_5YR', 'CBSA_2011_3YR', 'CBSA_2012_3YR', 'CBSA_2016_1YR', 'CBSA_2017_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CBSA_2008_3YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,2
table_name,CENSUSTRACT_2011_5YR
description,
DDL,"create or replace TABLE CENSUSTRACT_2011_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2020_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,3
table_name,CONGRESSIONALDISTRICT_2010_5YR
description,
DDL,"create or replace TABLE CONGRESSIONALDISTRICT_2010_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT
);"

Some other tables have the similar structure: ['CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2012_3YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,4
table_name,STATE_2013_1YR
description,
DDL,"create or replace TABLE STATE_2013_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['STATE_2013_1YR', 'STATE_2014_1YR', 'STATE_2016_5YR', 'STATE_2019_1YR', 'STATE_2017_1YR', 'STATE_2019_5YR', 'STATE_2007_1YR', 'STATE_2008_3YR', 'STATE_2011_3YR', 'STATE_2012_1YR', 'STATE_2015_1YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2013_3YR', 'STATE_2014_5YR', 'STATE_2020_5YR', 'STATE_2008_1YR', 'STATE_2012_5YR', 'STATE_2018_5YR', 'STATE_2010_5YR', 'STATE_2012_3YR', 'STATE_2016_1YR', 'STATE_2018_1YR', 'STATE_2013_5YR', 'STATE_2007_3YR', 'STATE_2011_5YR', 'STATE_2010_3YR', 'STATE_2021_1YR', 'STATE_2011_1YR', 'STATE_2010_1YR', 'STATE_2017_5YR', 'STATE_2015_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,5
table_name,COUNTY_2013_5YR
description,
DDL,"create or replace TABLE COUNTY_2013_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['COUNTY_2013_5YR', 'COUNTY_2016_5YR', 'COUNTY_2020_5YR', 'COUNTY_2008_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_5YR', 'COUNTY_2017_1YR', 'COUNTY_2019_1YR', 'COUNTY_2014_5YR', 'COUNTY_2007_1YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2012_3YR', 'COUNTY_2013_1YR', 'COUNTY_2015_1YR', 'COUNTY_2009_1YR', 'COUNTY_2011_5YR', 'COUNTY_2015_5YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2014_1YR', 'COUNTY_2021_1YR', 'COUNTY_2019_5YR', 'COUNTY_2007_3YR', 'COUNTY_2009_3YR', 'COUNTY_2018_5YR', 'COUNTY_2016_1YR', 'COUNTY_2010_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_3YR', 'COUNTY_2008_1YR', 'COUNTY_2012_1YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,6
table_name,PLACE_2011_3YR
description,
DDL,"create or replace TABLE PLACE_2011_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['PLACE_2011_3YR', 'PLACE_2018_1YR', 'PLACE_2010_1YR', 'PLACE_2012_5YR', 'PLACE_2011_1YR', 'PLACE_2009_1YR', 'PLACE_2017_5YR', 'PLACE_2014_5YR', 'PLACE_2010_5YR', 'PLACE_2015_5YR', 'PLACE_2007_3YR', 'PLACE_2012_3YR', 'PLACE_2021_1YR', 'PLACE_2013_3YR', 'PLACE_2007_1YR', 'PLACE_2019_5YR', 'PLACE_2010_3YR', 'PLACE_2018_5YR', 'PLACE_2013_1YR', 'PLACE_2020_5YR', 'PLACE_2009_3YR', 'PLACE_2008_3YR', 'PLACE_2013_5YR', 'PLACE_2017_1YR', 'PLACE_2019_1YR', 'PLACE_2014_1YR', 'PLACE_2011_5YR', 'PLACE_2016_5YR', 'PLACE_2008_1YR', 'PLACE_2016_1YR', 'PLACE_2015_1YR', 'PLACE_2012_1YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,7
table_name,SCHOOLDISTRICTSECONDARY_2010_5YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTSECONDARY_2010_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,8
table_name,SCHOOLDISTRICTUNIFIED_2018_1YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTUNIFIED_2018_1YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,9
table_name,PUMA_2008_3YR
description,
DDL,"create or replace TABLE PUMA_2008_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['PUMA_2008_3YR', 'PUMA_2010_5YR', 'PUMA_2012_1YR', 'PUMA_2021_1YR', 'PUMA_2018_1YR', 'PUMA_2013_3YR', 'PUMA_2020_5YR', 'PUMA_2010_1YR', 'PUMA_2015_5YR', 'PUMA_2017_5YR', 'PUMA_2012_5YR', 'PUMA_2009_1YR', 'PUMA_2010_3YR', 'PUMA_2013_1YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2012_3YR', 'PUMA_2011_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2009_3YR', 'PUMA_2007_1YR', 'PUMA_2017_1YR', 'PUMA_2014_1YR', 'PUMA_2016_5YR', 'PUMA_2018_5YR', 'PUMA_2013_5YR', 'PUMA_2016_1YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,10
table_name,SCHOOLDISTRICTELEMENTARY_2010_1YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTELEMENTARY_2010_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" NUMBER(38,9),
	""family_households"" NUMBER(38,9),
	""median_year_structure_built"" NUMBER(38,9),
	""rent_burden_not_computed"" NUMBER(38,9),
	""rent_over_50_percent"" NUMBER(38,9),
	""rent_40_to_50_percent"" NUMBER(38,9),
	""rent_35_to_40_percent"" NUMBER(38,9),
	""rent_30_to_35_percent"" NUMBER(38,9),
	""rent_25_to_30_percent"" NUMBER(38,9),
	""rent_20_to_25_percent"" NUMBER(38,9),
	""rent_15_to_20_percent"" NUMBER(38,9),
	""rent_10_to_15_percent"" NUMBER(38,9),
	""rent_under_10_percent"" NUMBER(38,9),
	""total_pop"" NUMBER(38,9),
	""male_pop"" NUMBER(38,9),
	""female_pop"" NUMBER(38,9),
	""median_age"" NUMBER(38,9),
	""white_pop"" NUMBER(38,9),
	""black_pop"" NUMBER(38,9),
	""asian_pop"" NUMBER(38,9),
	""hispanic_pop"" NUMBER(38,9),
	""amerindian_pop"" NUMBER(38,9),
	""other_race_pop"" NUMBER(38,9),
	""two_or_more_races_pop"" NUMBER(38,9),
	""not_hispanic_pop"" NUMBER(38,9),
	""commuters_by_public_transportation"" NUMBER(38,9),
	""households"" NUMBER(38,9),
	""median_income"" NUMBER(38,9),
	""income_per_capita"" NUMBER(38,9),
	""housing_units"" NUMBER(38,9),
	""vacant_housing_units"" NUMBER(38,9),
	""vacant_housing_units_for_rent"" NUMBER(38,9),
	""vacant_housing_units_for_sale"" NUMBER(38,9),
	""median_rent"" NUMBER(38,9),
	""percent_income_spent_on_rent"" NUMBER(38,9),
	""owner_occupied_housing_units"" NUMBER(38,9),
	""million_dollar_housing_units"" NUMBER(38,9),
	""mortgaged_housing_units"" NUMBER(38,9),
	""families_with_young_children"" NUMBER(38,9),
	""two_parent_families_with_young_children"" NUMBER(38,9),
	""two_parents_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_father_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_mother_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_not_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""one_parent_families_with_young_children"" NUMBER(38,9),
	""father_one_parent_families_with_young_children"" NUMBER(38,9),
	""father_in_labor_force_one_parent_families_with_young_children"" NUMBER(38,9),
	""commute_10_14_mins"" NUMBER(38,9),
	""commute_15_19_mins"" NUMBER(38,9),
	""commute_20_24_mins"" NUMBER(38,9),
	""commute_25_29_mins"" NUMBER(38,9),
	""commute_30_34_mins"" NUMBER(38,9),
	""commute_45_59_mins"" NUMBER(38,9),
	""aggregate_travel_time_to_work"" NUMBER(38,9),
	""income_less_10000"" NUMBER(38,9),
	""income_10000_14999"" NUMBER(38,9),
	""income_15000_19999"" NUMBER(38,9),
	""income_20000_24999"" NUMBER(38,9),
	""income_25000_29999"" NUMBER(38,9),
	""income_30000_34999"" NUMBER(38,9),
	""income_35000_39999"" NUMBER(38,9),
	""income_40000_44999"" NUMBER(38,9),
	""income_45000_49999"" NUMBER(38,9),
	""income_50000_59999"" NUMBER(38,9),
	""income_60000_74999"" NUMBER(38,9),
	""income_75000_99999"" NUMBER(38,9),
	""income_100000_124999"" NUMBER(38,9),
	""income_125000_149999"" NUMBER(38,9),
	""income_150000_199999"" NUMBER(38,9),
	""income_200000_or_more"" NUMBER(38,9),
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" NUMBER(38,9),
	""owner_occupied_housing_units_lower_value_quartile"" NUMBER(38,9),
	""owner_occupied_housing_units_median_value"" NUMBER(38,9),
	""owner_occupied_housing_units_upper_value_quartile"" NUMBER(38,9),
	""married_households"" NUMBER(38,9),
	""occupied_housing_units"" NUMBER(38,9),
	""housing_units_renter_occupied"" NUMBER(38,9),
	""dwellings_1_units_detached"" NUMBER(38,9),
	""dwellings_1_units_attached"" NUMBER(38,9),
	""dwellings_2_units"" NUMBER(38,9),
	""dwellings_3_to_4_units"" NUMBER(38,9),
	""dwellings_5_to_9_units"" NUMBER(38,9),
	""dwellings_10_to_19_units"" NUMBER(38,9),
	""dwellings_20_to_49_units"" NUMBER(38,9),
	""dwellings_50_or_more_units"" NUMBER(38,9),
	""mobile_homes"" NUMBER(38,9),
	""housing_built_2005_or_later"" NUMBER(38,9),
	""housing_built_2000_to_2004"" NUMBER(38,9),
	""housing_built_1939_or_earlier"" NUMBER(38,9),
	""male_under_5"" NUMBER(38,9),
	""male_5_to_9"" NUMBER(38,9),
	""male_10_to_14"" NUMBER(38,9),
	""male_15_to_17"" NUMBER(38,9),
	""male_18_to_19"" NUMBER(38,9),
	""male_20"" NUMBER(38,9),
	""male_21"" NUMBER(38,9),
	""male_22_to_24"" NUMBER(38,9),
	""male_25_to_29"" NUMBER(38,9),
	""male_30_to_34"" NUMBER(38,9),
	""male_35_to_39"" NUMBER(38,9),
	""male_40_to_44"" NUMBER(38,9),
	""male_45_to_49"" NUMBER(38,9),
	""male_50_to_54"" NUMBER(38,9),
	""male_55_to_59"" NUMBER(38,9),
	""male_60_61"" NUMBER(38,9),
	""male_62_64"" NUMBER(38,9),
	""male_65_to_66"" NUMBER(38,9),
	""male_67_to_69"" NUMBER(38,9),
	""male_70_to_74"" NUMBER(38,9),
	""male_75_to_79"" NUMBER(38,9),
	""male_80_to_84"" NUMBER(38,9),
	""male_85_and_over"" NUMBER(38,9),
	""female_under_5"" NUMBER(38,9),
	""female_5_to_9"" NUMBER(38,9),
	""female_10_to_14"" NUMBER(38,9),
	""female_15_to_17"" NUMBER(38,9),
	""female_18_to_19"" NUMBER(38,9),
	""female_20"" NUMBER(38,9),
	""female_21"" NUMBER(38,9),
	""female_22_to_24"" NUMBER(38,9),
	""female_25_to_29"" NUMBER(38,9),
	""female_30_to_34"" NUMBER(38,9),
	""female_35_to_39"" NUMBER(38,9),
	""female_40_to_44"" NUMBER(38,9),
	""female_45_to_49"" NUMBER(38,9),
	""female_50_to_54"" NUMBER(38,9),
	""female_55_to_59"" NUMBER(38,9),
	""female_60_to_61"" NUMBER(38,9),
	""female_62_to_64"" NUMBER(38,9),
	""female_65_to_66"" NUMBER(38,9),
	""female_67_to_69"" NUMBER(38,9),
	""female_70_to_74"" NUMBER(38,9),
	""female_75_to_79"" NUMBER(38,9),
	""female_80_to_84"" NUMBER(38,9),
	""female_85_and_over"" NUMBER(38,9),
	""white_including_hispanic"" NUMBER(38,9),
	""black_including_hispanic"" NUMBER(38,9),
	""amerindian_including_hispanic"" NUMBER(38,9),
	""asian_including_hispanic"" NUMBER(38,9),
	""commute_5_9_mins"" NUMBER(38,9),
	""commute_35_39_mins"" NUMBER(38,9),
	""commute_40_44_mins"" NUMBER(38,9),
	""commute_60_89_mins"" NUMBER(38,9),
	""commute_90_more_mins"" NUMBER(38,9),
	""households_retirement_income"" NUMBER(38,9),
	""asian_male_45_54"" NUMBER(38,9),
	""asian_male_55_64"" NUMBER(38,9),
	""black_male_45_54"" NUMBER(38,9),
	""black_male_55_64"" NUMBER(38,9),
	""hispanic_male_45_54"" NUMBER(38,9),
	""hispanic_male_55_64"" NUMBER(38,9),
	""white_male_45_54"" NUMBER(38,9),
	""white_male_55_64"" NUMBER(38,9),
	""bachelors_degree_2"" NUMBER(38,9),
	""bachelors_degree_or_higher_25_64"" NUMBER(38,9),
	""children"" NUMBER(38,9),
	""children_in_single_female_hh"" NUMBER(38,9),
	""commuters_by_bus"" NUMBER(38,9),
	""commuters_by_car_truck_van"" NUMBER(38,9),
	""commuters_by_carpool"" NUMBER(38,9),
	""commuters_by_subway_or_elevated"" NUMBER(38,9),
	""commuters_drove_alone"" NUMBER(38,9),
	""different_house_year_ago_different_city"" NUMBER(38,9),
	""different_house_year_ago_same_city"" NUMBER(38,9),
	""employed_agriculture_forestry_fishing_hunting_mining"" NUMBER(38,9),
	""employed_arts_entertainment_recreation_accommodation_food"" NUMBER(38,9),
	""employed_construction"" NUMBER(38,9),
	""employed_education_health_social"" NUMBER(38,9),
	""employed_finance_insurance_real_estate"" NUMBER(38,9),
	""employed_information"" NUMBER(38,9),
	""employed_manufacturing"" NUMBER(38,9),
	""employed_other_services_not_public_admin"" NUMBER(38,9),
	""employed_public_administration"" NUMBER(38,9),
	""employed_retail_trade"" NUMBER(38,9),
	""employed_science_management_admin_waste"" NUMBER(38,9),
	""employed_transportation_warehousing_utilities"" NUMBER(38,9),
	""employed_wholesale_trade"" NUMBER(38,9),
	""female_female_households"" NUMBER(38,9),
	""four_more_cars"" NUMBER(38,9),
	""gini_index"" NUMBER(38,9),
	""graduate_professional_degree"" NUMBER(38,9),
	""group_quarters"" NUMBER(38,9),
	""high_school_including_ged"" NUMBER(38,9),
	""households_public_asst_or_food_stamps"" NUMBER(38,9),
	""in_grades_1_to_4"" NUMBER(38,9),
	""in_grades_5_to_8"" NUMBER(38,9),
	""in_grades_9_to_12"" NUMBER(38,9),
	""in_school"" NUMBER(38,9),
	""in_undergrad_college"" NUMBER(38,9),
	""less_than_high_school_graduate"" NUMBER(38,9),
	""male_45_64_associates_degree"" NUMBER(38,9),
	""male_45_64_bachelors_degree"" NUMBER(38,9),
	""male_45_64_graduate_degree"" NUMBER(38,9),
	""male_45_64_less_than_9_grade"" NUMBER(38,9),
	""male_45_64_grade_9_12"" NUMBER(38,9),
	""male_45_64_high_school"" NUMBER(38,9),
	""male_45_64_some_college"" NUMBER(38,9),
	""male_45_to_64"" NUMBER(38,9),
	""male_male_households"" NUMBER(38,9),
	""management_business_sci_arts_employed"" NUMBER(38,9),
	""no_car"" NUMBER(38,9),
	""no_cars"" NUMBER(38,9),
	""not_us_citizen_pop"" NUMBER(38,9),
	""occupation_management_arts"" NUMBER(38,9),
	""occupation_natural_resources_construction_maintenance"" NUMBER(38,9),
	""occupation_production_transportation_material"" NUMBER(38,9),
	""occupation_sales_office"" NUMBER(38,9),
	""occupation_services"" NUMBER(38,9),
	""one_car"" NUMBER(38,9),
	""two_cars"" NUMBER(38,9),
	""three_cars"" NUMBER(38,9),
	""pop_25_64"" NUMBER(38,9),
	""pop_determined_poverty_status"" NUMBER(38,9),
	""population_1_year_and_over"" NUMBER(38,9),
	""population_3_years_over"" NUMBER(38,9),
	""poverty"" NUMBER(38,9),
	""sales_office_employed"" NUMBER(38,9),
	""some_college_and_associates_degree"" NUMBER(38,9),
	""walked_to_work"" NUMBER(38,9),
	""worked_at_home"" NUMBER(38,9),
	""workers_16_and_over"" NUMBER(38,9),
	""associates_degree"" NUMBER(38,9),
	""bachelors_degree"" NUMBER(38,9),
	""high_school_diploma"" NUMBER(38,9),
	""less_one_year_college"" NUMBER(38,9),
	""masters_degree"" NUMBER(38,9),
	""one_year_more_college"" NUMBER(38,9),
	""pop_25_years_over"" NUMBER(38,9),
	""pop_15_and_over"" NUMBER(38,9),
	""pop_never_married"" NUMBER(38,9),
	""pop_now_married"" NUMBER(38,9),
	""pop_separated"" NUMBER(38,9),
	""pop_widowed"" NUMBER(38,9),
	""pop_divorced"" NUMBER(38,9),
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,11
table_name,ZCTA_2019_5YR
description,
DDL,"create or replace TABLE ZCTA_2019_5YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['ZCTA_2019_5YR', 'ZCTA5_2011_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2019_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2012_5YR', 'ZCTA_2020_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
,12
table_name,ZIP_CODES_2016_5YR
description,
DDL,"create or replace TABLE ZIP_CODES_2016_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT
);"

Some other tables have the similar structure: ['ZIP_CODES_2016_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR', 'ZIP_CODES_2014_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CYCLISTIC
,0
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip"" NUMBER(38,0),
	""borough"" VARCHAR(16777216),
	""neighborhood"" VARCHAR(16777216)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CYCLISTIC
,1
table_name,STATE_FIPS
description,
DDL,"create or replace TABLE STATE_FIPS (
	""state"" VARCHAR(16777216),
	""postal_code"" VARCHAR(16777216),
	""fips"" NUMBER(38,0)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,0
table_name,CBSA
description,
DDL,"create or replace TABLE CBSA (
	""geo_id"" VARCHAR(16777216),
	""csa_geo_id"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""msa_indicator"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""cbsa_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,1
table_name,ADJACENT_COUNTIES
description,
DDL,"create or replace TABLE ADJACENT_COUNTIES (
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""neighbors"" VARIANT,
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,2
table_name,CONGRESS_DISTRICT_115
description,
DDL,"create or replace TABLE CONGRESS_DISTRICT_115 (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""district_fips_code"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""congress_session"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" BOOLEAN,
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""district_geom"" BINARY(8388608)
);"

Some other tables have the similar structure: ['CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,3
table_name,CSA
description,
DDL,"create or replace TABLE CSA (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""msa_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""csa_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,4
table_name,NATIONAL_OUTLINE
description,
DDL,"create or replace TABLE NATIONAL_OUTLINE (
	""us_outline_geom"" BINARY(8388608),
	""aff_geo_id"" VARCHAR(16777216),
	""geo_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,5
table_name,METROPOLITAN_DIVISIONS
description,
DDL,"create or replace TABLE METROPOLITAN_DIVISIONS (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""cbsa_code"" VARCHAR(16777216),
	""metdiv_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""metdiv_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,6
table_name,RAILWAYS
description,
DDL,"create or replace TABLE RAILWAYS (
	""geo_id"" NUMBER(38,0),
	""full_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""railway_geom"" VARCHAR(16777216)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,7
table_name,ADJACENT_STATES
description,
DDL,"create or replace TABLE ADJACENT_STATES (
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,8
table_name,CNECTA
description,
DDL,"create or replace TABLE CNECTA (
	""geo_id"" VARCHAR(16777216),
	""cnecta_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""name_lsad"" VARCHAR(16777216),
	""lsad"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""cnecta_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,9
table_name,COASTLINE
description,
DDL,"create or replace TABLE COASTLINE (
	""name"" VARCHAR(16777216),
	""coastline_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,10
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip_code"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_code"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""zip_code_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,11
table_name,COUNTIES
description,
DDL,"create or replace TABLE COUNTIES (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_gnis_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""csa_fips_code"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""met_div_fips_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""county_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,12
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,13
table_name,STATES
description,
DDL,"create or replace TABLE STATES (
	""geo_id"" VARCHAR(16777216),
	""region_code"" VARCHAR(16777216),
	""division_code"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_gnis_code"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""state_geom"" BINARY(8388608)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
,14
table_name,URBAN_AREAS
description,
DDL,"create or replace TABLE URBAN_AREAS (
	""geo_id"" VARCHAR(16777216),
	""urban_area_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""area_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""urban_area_geom"" BINARY(8388608)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'CENSUS_BUREAU_ACS_2': {'CENSUS_BUREAU_ACS': ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2018_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2012_5YR', 'CBSA_2007_1YR', 'CBSA_2007_1YR', 'CBSA_2015_5YR', 'CBSA_2013_5YR', 'CBSA_2019_1YR', 'CBSA_2012_5YR', 'CBSA_2017_5YR', 'CBSA_2008_1YR', 'CBSA_2011_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2015_1YR', 'CBSA_2007_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2011_1YR', 'CBSA_2012_1YR', 'CBSA_2013_3YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2016_5YR', 'CBSA_2013_1YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_5YR', 'CBSA_2011_3YR', 'CBSA_2012_3YR', 'CBSA_2016_1YR', 'CBSA_2017_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CBSA_2008_3YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2020_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'STATE_2013_1YR', 'STATE_2013_1YR', 'STATE_2014_1YR', 'STATE_2016_5YR', 'STATE_2019_1YR', 'STATE_2017_1YR', 'STATE_2019_5YR', 'STATE_2007_1YR', 'STATE_2008_3YR', 'STATE_2011_3YR', 'STATE_2012_1YR', 'STATE_2015_1YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2013_3YR', 'STATE_2014_5YR', 'STATE_2020_5YR', 'STATE_2008_1YR', 'STATE_2012_5YR', 'STATE_2018_5YR', 'STATE_2010_5YR', 'STATE_2012_3YR', 'STATE_2016_1YR', 'STATE_2018_1YR', 'STATE_2013_5YR', 'STATE_2007_3YR', 'STATE_2011_5YR', 'STATE_2010_3YR', 'STATE_2021_1YR', 'STATE_2011_1YR', 'STATE_2010_1YR', 'STATE_2017_5YR', 'STATE_2015_5YR', 'COUNTY_2013_5YR', 'COUNTY_2013_5YR', 'COUNTY_2016_5YR', 'COUNTY_2020_5YR', 'COUNTY_2008_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_5YR', 'COUNTY_2017_1YR', 'COUNTY_2019_1YR', 'COUNTY_2014_5YR', 'COUNTY_2007_1YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2012_3YR', 'COUNTY_2013_1YR', 'COUNTY_2015_1YR', 'COUNTY_2009_1YR', 'COUNTY_2011_5YR', 'COUNTY_2015_5YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2014_1YR', 'COUNTY_2021_1YR', 'COUNTY_2019_5YR', 'COUNTY_2007_3YR', 'COUNTY_2009_3YR', 'COUNTY_2018_5YR', 'COUNTY_2016_1YR', 'COUNTY_2010_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_3YR', 'COUNTY_2008_1YR', 'COUNTY_2012_1YR', 'PLACE_2011_3YR', 'PLACE_2011_3YR', 'PLACE_2018_1YR', 'PLACE_2010_1YR', 'PLACE_2012_5YR', 'PLACE_2011_1YR', 'PLACE_2009_1YR', 'PLACE_2017_5YR', 'PLACE_2014_5YR', 'PLACE_2010_5YR', 'PLACE_2015_5YR', 'PLACE_2007_3YR', 'PLACE_2012_3YR', 'PLACE_2021_1YR', 'PLACE_2013_3YR', 'PLACE_2007_1YR', 'PLACE_2019_5YR', 'PLACE_2010_3YR', 'PLACE_2018_5YR', 'PLACE_2013_1YR', 'PLACE_2020_5YR', 'PLACE_2009_3YR', 'PLACE_2008_3YR', 'PLACE_2013_5YR', 'PLACE_2017_1YR', 'PLACE_2019_1YR', 'PLACE_2014_1YR', 'PLACE_2011_5YR', 'PLACE_2016_5YR', 'PLACE_2008_1YR', 'PLACE_2016_1YR', 'PLACE_2015_1YR', 'PLACE_2012_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'PUMA_2008_3YR', 'PUMA_2008_3YR', 'PUMA_2010_5YR', 'PUMA_2012_1YR', 'PUMA_2021_1YR', 'PUMA_2018_1YR', 'PUMA_2013_3YR', 'PUMA_2020_5YR', 'PUMA_2010_1YR', 'PUMA_2015_5YR', 'PUMA_2017_5YR', 'PUMA_2012_5YR', 'PUMA_2009_1YR', 'PUMA_2010_3YR', 'PUMA_2013_1YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2012_3YR', 'PUMA_2011_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2009_3YR', 'PUMA_2007_1YR', 'PUMA_2017_1YR', 'PUMA_2014_1YR', 'PUMA_2016_5YR', 'PUMA_2018_5YR', 'PUMA_2013_5YR', 'PUMA_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'ZCTA_2019_5YR', 'ZCTA_2019_5YR', 'ZCTA5_2011_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2019_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2012_5YR', 'ZCTA_2020_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR', 'ZIP_CODES_2014_5YR'], 'CYCLISTIC': ['ZIP_CODES', 'STATE_FIPS'], 'GEO_US_BOUNDARIES': ['CBSA', 'ADJACENT_COUNTIES', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'CSA', 'NATIONAL_OUTLINE', 'METROPOLITAN_DIVISIONS', 'RAILWAYS', 'ADJACENT_STATES', 'CNECTA', 'COASTLINE', 'ZIP_CODES', 'COUNTIES', 'NWS_FORECAST_REGIONS', 'STATES', 'URBAN_AREAS']}}
Begin Exploring Related Columns
**Considered Tables and Columns:**

1. **`CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR`**
   - `"geo_id"`: ZIP code identifier; used to join with other ZIP code data.
   - `"median_income"`: Median income in 2015 per ZIP code; used to calculate income difference.

2. **`CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR`**
   - `"geo_id"`: ZIP code identifier; used to join with other ZIP code data.
   - `"median_income"`: Median income in 2018 per ZIP code; used to calculate income difference.

3. **`CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2017_5YR`**
   - `"geo_id"`: ZIP code identifier; used to join with other ZIP code data.
   - `"employed_wholesale_trade"`: Number of employed wholesale trade workers in 2017 per ZIP code; used to calculate vulnerable wholesale trade workers.
   - `"employed_manufacturing"`: Number of employed manufacturing workers in 2017 per ZIP code; used to calculate vulnerable manufacturing workers.

4. **`GEO_US_BOUNDARIES.ZIP_CODES`**
   - `"zip_code"`: ZIP code; used to map ZIP codes to state names.
   - `"state_name"`: State name; used in the final output.

**Conditions that may be used:**

- **Joining Conditions:**
  - Join tables on ZIP codes using `"geo_id"` and `"zip_code"` (may require formatting ZIP codes to ensure they match).
- **Calculations:**
  - **Median Income Difference:** Calculate the difference in median income between 2015 and 2018 per ZIP code.
  - **Vulnerable Workers:**
    - Vulnerable Wholesale Trade Workers = `employed_wholesale_trade` * 38%
    - Vulnerable Manufacturing Workers = `employed_manufacturing` * 41%
- **Aggregation:**
  - Sum the number of vulnerable workers per state.
- **Ordering:**
  - Order the results by the total number of vulnerable workers in descending order.

---

**SQL Queries:**

```sql
-- Query 1: Retrieve median income per ZIP code in 2015
SELECT "geo_id", "median_income"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR"
LIMIT 100;

-- Query 2: Retrieve median income per ZIP code in 2018
SELECT "geo_id", "median_income"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR"
LIMIT 100;

-- Query 3: Retrieve employment data per ZIP code in 2017
SELECT "geo_id", "employed_wholesale_trade", "employed_manufacturing"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR"
LIMIT 100;

-- Query 4: View ZIP code to state mapping
SELECT DISTINCT "zip_code", "state_name"
FROM "GEO_US_BOUNDARIES"."ZIP_CODES"
LIMIT 100;

-- Query 5: Calculate median income difference per ZIP code between 2015 and 2018
SELECT
    t2015."geo_id",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
LIMIT 100;

-- Query 6: Calculate vulnerable workers per ZIP code based on 2017 employment figures
SELECT
    "geo_id",
    "employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    "employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR"
LIMIT 100;

-- Query 7: Join employment data with ZIP code to state mapping
SELECT
    emp."geo_id",
    zc."state_name",
    emp."employed_wholesale_trade",
    emp."employed_manufacturing"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "GEO_US_BOUNDARIES"."ZIP_CODES" zc
ON
    emp."geo_id" = zc."zip_code"
LIMIT 100;

-- Query 8: Sum vulnerable workers per state
SELECT
    zc."state_name",
    SUM(emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "GEO_US_BOUNDARIES"."ZIP_CODES" zc
ON
    emp."geo_id" = zc."zip_code"
GROUP BY
    zc."state_name"
LIMIT 100;

-- Query 9: Calculate total vulnerable workers per state
SELECT
    zc."state_name",
    SUM(emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers",
    SUM(emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "GEO_US_BOUNDARIES"."ZIP_CODES" zc
ON
    emp."geo_id" = zc."zip_code"
GROUP BY
    zc."state_name"
LIMIT 100;

-- Query 10: List states in descending order of total vulnerable workers
SELECT
    zc."state_name",
    SUM(emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers",
    SUM(emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "GEO_US_BOUNDARIES"."ZIP_CODES" zc
ON
    emp."geo_id" = zc."zip_code"
GROUP BY
    zc."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;

-- Additional Queries:

-- Query 11: Identify ZIP codes with a decrease in median income from 2015 to 2018
SELECT
    t2015."geo_id",
    t2015."median_income" AS "median_income_2015",
    t2018."median_income" AS "median_income_2018",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
WHERE
    t2018."median_income" - t2015."median_income" < 0
LIMIT 100;

-- Query 12: Aggregate total employment in wholesale trade and manufacturing per state
SELECT
    zc."state_name",
    SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
    SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
JOIN
    "GEO_US_BOUNDARIES"."ZIP_CODES" zc
ON
    emp."geo_id" = zc."zip_code"
GROUP BY
    zc."state_name"
LIMIT 100;

-- Query 13: List states with their median income change and total vulnerable workers
WITH income_diff AS (
    SELECT
        t2015."geo_id",
        t2018."median_income" - t2015."median_income" AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        emp."geo_id",
        emp."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        emp."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp
)
SELECT
    zc."state_name",
    SUM(income_diff."median_income_difference") AS "total_median_income_difference",
    SUM(vulnerable_workers."vulnerable_wholesale_trade_workers") AS "vulnerable_wholesale_trade_workers",
    SUM(vulnerable_workers."vulnerable_manufacturing_workers") AS "vulnerable_manufacturing_workers",
    SUM(vulnerable_workers."vulnerable_wholesale_trade_workers" + vulnerable_workers."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."geo_id" = vulnerable_workers."geo_id"
JOIN
    "GEO_US_BOUNDARIES"."ZIP_CODES" zc
ON
    income_diff."geo_id" = zc."zip_code"
GROUP BY
    zc."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
```

These queries progress from simple data retrieval to complex aggregations, helping to understand the relevant data and how it can be used to fulfill the task.Query:
-- Query 1: Retrieve median income per ZIP code in 2015
SELECT "geo_id", "median_income"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR"
LIMIT 100
Answer:
geo_id,median_income
98304,36746.000000000
22714,74625.000000000
69128,56471.000000000
97908,22321.000000000
37228,15540.000000000
97486,62083.000000000
04491,27500.000000000
11005,58894.000000000
04936,40469.000000000
12195,
63102,39855.000000000
06793,81711.000000000
44669,67981.000000000
96109,29958.000000000
15638,51304.000000000
36263,41875.000000000
16853,39861.000000000
08352,67348.000000000
72536,22917.000000000
59926,29722.000000000
96084,34732.000000000
97011,39975.000000000
12444,38229.000000000
15561,56429.000000000
58488,60729.000000000
52219,44063.000000000
26852,31532.000000000
06091,
38588,40815.000000000
47584,40208.000000000
31038,43553.000000000
37326,21250.000000000
95560,35987.000000000
88348,19000.000000000
97484,38854.000000000
66850,90417.000000000
59755,28750.000000000
72136,36995.000000000
17101,28615.000000000
27556,
80830,51953.000000000
99638,35000.000000000
95443,15690.000000000
14881,
59731,37115.000000000
68416,40000.000000000
57766,64583.000000000
13404,32500.000000000
95497,75598.000000000
37219,50700.000000000
73556,37813.000000000
54948,41250.000000000
19436,55208.000000000
18503,14643.000000000
31527,66667.000000000
86444,21484.000000000
23153,75833.000000000
94970,93750.000000000
12481,54467.000000000
25879,22548.000000000
65335,50250.000000000
81121,40893.000000000
59927,47813.000000000
12548,56625.000000000
94569,110347.000000000
95728,58354.000000000
04063,
60661,98882.000000000
14480,38015.000000000
93517,61250.000000000
29202,
66944,25000.000000000
77002,62089.000000000
21766,28828.000000000
99153,32955.000000000
97145,56667.000000000
34289,42451.000000000
29614,27065.000000000
20006,34125.000000000
87531,48625.000000000
98134,52981.000000000
05034,95833.000000000
12517,60469.000000000
17027,65673.000000000
23968,32566.000000000
71970,30000.000000000
16691,45000.000000000
12847,62917.000000000
78215,51853.000000000
49918,32500.000000000
93424,74563.000000000
21734,52969.000000000
67202,40273.000000000
21872,61029.000000000
41180,20857.000000000
21130,53393.000000000
84334,54680.000000000
49628,45179.000000000
99131,44167.000000000
65064,54722.000000000
Query:
-- Query 2: Retrieve median income per ZIP code in 2018
SELECT "geo_id", "median_income"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR"
LIMIT 100
Answer:
geo_id,median_income
15537,46265.0
48215,22721.0
29571,32764.0
88063,24875.0
32310,36653.0
29550,42243.0
79403,38891.0
59034,44985.0
26047,49755.0
35954,40664.0
59401,39530.0
44041,40431.0
48225,47864.0
29418,39577.0
44502,26606.0
34491,46338.0
33634,58013.0
51106,56795.0
47807,21288.0
83402,51017.0
08059,69040.0
55807,46883.0
77029,34967.0
16201,49550.0
41102,50881.0
23002,54930.0
12571,78641.0
37334,44657.0
59801,37410.0
18091,54781.0
49677,39961.0
25143,43665.0
44278,69657.0
21217,29121.0
64601,46911.0
60480,83505.0
35504,50305.0
31029,52570.0
63121,37866.0
74601,40847.0
33010,27116.0
34950,25278.0
29379,38370.0
33167,36870.0
01105,19921.0
81416,42176.0
15074,45159.0
30401,36210.0
15904,56828.0
64117,46514.0
71202,22840.0
02744,38264.0
42431,47517.0
22980,51033.0
64683,43432.0
49837,55914.0
64501,33133.0
48210,29007.0
33801,35696.0
87107,48202.0
57262,42161.0
71601,30710.0
16635,54136.0
28801,33504.0
39367,38625.0
44706,46413.0
44683,44225.0
49408,58763.0
46819,47974.0
38804,43096.0
55305,75219.0
53143,47298.0
37311,37519.0
64085,48790.0
99611,61401.0
48458,34887.0
49431,50635.0
46113,72430.0
11565,120890.0
14103,47848.0
97141,46557.0
15425,44599.0
52405,62014.0
19095,74018.0
24013,34925.0
18337,75758.0
72118,45730.0
43050,49602.0
24201,37882.0
15666,52599.0
97005,49127.0
43605,28788.0
46516,46761.0
92236,34222.0
47713,26595.0
21215,37517.0
78202,25300.0
17545,62058.0
56431,46724.0
33841,42838.0
Query:
-- Query 3: Retrieve employment data per ZIP code in 2017
SELECT "geo_id", "employed_wholesale_trade", "employed_manufacturing"
FROM "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR"
LIMIT 100
Answer:
geo_id,employed_wholesale_trade,employed_manufacturing
14521,13.0,76.0
43942,14.0,258.0
56097,43.0,331.0
14837,29.0,411.0
35218,69.0,229.0
12721,175.0,237.0
80924,41.0,206.0
85607,63.0,131.0
40210,136.0,668.0
46040,175.0,1021.0
70525,162.0,348.0
29582,167.0,207.0
32534,60.0,447.0
01569,184.0,1310.0
41001,270.0,1066.0
14217,260.0,980.0
48040,118.0,906.0
77836,262.0,583.0
63110,260.0,754.0
55927,99.0,329.0
28705,65.0,529.0
25560,155.0,543.0
35115,169.0,502.0
49345,269.0,1465.0
15801,94.0,908.0
55398,343.0,1713.0
40353,109.0,2446.0
28681,309.0,3884.0
59711,64.0,131.0
52060,132.0,687.0
60033,75.0,1440.0
00637,23.0,594.0
29627,184.0,1398.0
47111,111.0,1506.0
76067,229.0,1163.0
74653,36.0,144.0
85550,14.0,64.0
43080,61.0,427.0
47031,6.0,714.0
56101,42.0,680.0
37347,77.0,746.0
03042,141.0,526.0
17842,94.0,895.0
17241,114.0,650.0
38652,71.0,1987.0
18018,558.0,1687.0
45875,141.0,1676.0
27536,147.0,944.0
41701,164.0,235.0
21550,62.0,361.0
19036,238.0,439.0
27028,425.0,2164.0
30525,4.0,328.0
28371,58.0,508.0
49065,44.0,713.0
57049,98.0,565.0
15537,72.0,539.0
00735,40.0,425.0
26354,262.0,364.0
03077,183.0,826.0
86305,61.0,302.0
67060,190.0,1653.0
24333,140.0,1604.0
83316,128.0,470.0
56093,114.0,1568.0
35957,89.0,1432.0
46975,324.0,1880.0
54017,308.0,1732.0
34234,201.0,461.0
30125,251.0,2497.0
60134,694.0,1679.0
38116,583.0,1661.0
49304,12.0,137.0
54499,47.0,313.0
23950,41.0,198.0
66534,21.0,446.0
28555,43.0,96.0
62286,63.0,553.0
54923,82.0,1348.0
66043,52.0,222.0
78076,0.0,82.0
00920,257.0,223.0
44420,174.0,1049.0
45344,227.0,1078.0
77713,265.0,1091.0
99203,268.0,674.0
38118,493.0,1557.0
00976,700.0,1079.0
27944,73.0,261.0
29812,88.0,834.0
95360,144.0,859.0
47006,96.0,1234.0
28574,0.0,294.0
43205,101.0,280.0
25401,179.0,477.0
80603,175.0,573.0
53959,204.0,1564.0
87410,243.0,247.0
76574,203.0,1133.0
33803,377.0,969.0
Query:
SHOW DATABASES;
Answer:
Too long, hard cut:
created_on,name,is_default,is_current,origin,owner,comment,options,retention_time,kind,budget,owner_role_type,object_visibility
2024-10-23 19:34:13.495000-07:00,ADVENTUREWORKS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:14.040000-07:00,AIRLINES,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-09-20 06:48:25.172000-07:00,AMAZON_VENDOR_ANALYTICS__SAMPLE_DATASET,N,N,REASONAUTOMATION.AMAZON.VENDOR + DSP + SPONSORED ADS + BRAND STORE,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-10-23 19:18:41.171000-07:00,AUSTIN,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:02.763000-07:00,BANK_SALES_TRADING,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2025-02-09 13:31:35.259000-08:00,BASEBALL,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:19:12.611000-07:00,BBC,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:07:35.194000-07:00,BLS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:08.939000-07:00,BOWLINGLEAGUE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-09-20 06:46:45.396000-07:00,BRAZE_USER_EVENT_DEMO_DATASET,N,N,BRAZE.SNOWFLAKE_MANAGED$PUBLIC_AWS_US_WEST_2.BRAZE_SAMPLE_DATASET_MARKETPLACE_SHARE,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-10-23 19:33:34.009000-07:00,BRAZILIAN_E_COMMERCE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:18.772000-07:00,CALIFORNIA_TRAFFIC_COLLISION,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:03:37.651000-07:00,CENSUS_BUREAU_ACS_1,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:03:44.093000-07:00,CENSUS_BUREAU_ACS_2,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:53:28.533000-07:00,CENSUS_BUREAU_INTERNATIONAL,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:59:56.395000-07:00,CENSUS_BUREAU_USA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-11-01 07:19:35.912000-07:00,CENSUS_GALAXY__AIML_MODEL_DATA_ENRICHMENT_SAMPLE,N,N,NNTCJGB.AUTO_FULFILLMENT_AREA$PUBLIC_AWS_US_WEST_2.CENSUS_GALAXY_SAMPLE_NY_AI_ML,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-09-20 06:55:45.006000-07:00,CENSUS_GALAXY__ZIP_CODE_TO_BLOCK_GROUP_SAMPLE,N,N,NNTCJGB.AUTO_FULFILLMENT_AREA$PUBLIC_AWS_US_WEST_2.CENSUS_GALAXY_SAMPLE_NY_ZIP_CODE_TO_BLOCK_GROUP,ACCOUNTADMIN,,,0,IMPORTED DATABASE,,ROLE,
2024-10-23 17:10:10.968000-07:00,CHICAGO,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:54.989000-07:00,CHINOOK,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:01.691000-07:00,CITY_LEGISLATION,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:22:34.891000-07:00,CMS_DATA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:58.487000-07:00,COMPLEX_ORACLE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:55:15.502000-07:00,COVID19_JHU_WORLD_BANK,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:56:13.175000-07:00,COVID19_NYT,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:54:37.484000-07:00,COVID19_OPEN_DATA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:54:38.797000-07:00,COVID19_OPEN_WORLD_BANK,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:57:59.262000-07:00,COVID19_SYMPTOM_SEARCH,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:59:09.813000-07:00,COVID19_USA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:07:15.772000-07:00,CPTAC_PDC,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:50:41.084000-07:00,CRYPTO,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:12:59.173000-07:00,CYMBAL_INVESTMENTS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-25 23:53:34.128000-07:00,DB_IMDB,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:26:36.344000-07:00,DEATH,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:15.599000-07:00,DELIVERY_CENTER,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 17:09:05.420000-07:00,DEPS_DEV_V1,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:19:39.354000-07:00,DIMENSIONS_AI_COVID19,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:19:46.307000-07:00,EBI_CHEMBL,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 18:47:27.448000-07:00,ECLIPSE_MEGAMOVIE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:25:49.638000-07:00,ECOMMERCE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:33:57.376000-07:00,EDUCATION_BUSINESS,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:23.702000-07:00,ELECTRONIC_SALES,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:11.454000-07:00,ENTERTAINMENTAGENCY,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 18:54:11.005000-07:00,EPA_HISTORICAL_AIR_QUALITY,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 16:50:57.201000-07:00,ETHEREUM_BLOCKCHAIN,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:18.319000-07:00,EU_SOCCER,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:32:56.185000-07:00,E_COMMERCE,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:34:35.859000-07:00,F1,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:21:53.253000-07:00,FDA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 19:21:41.453000-07:00,FEC,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-10-23 18:28:49.309000-07:00,FHIR_SYNTHEA,N,N,,ACCOUNTADMIN,,,1,STANDARD,,ROLE,
2024-09-20 06:20:49.552000-07:00,FINANCE__ECONOMIC
Query:
-- Query 5: Calculate median income difference per ZIP code between 2015 and 2018
SELECT
    t2015."geo_id",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
LIMIT 100
Answer:
geo_id,median_income_difference
98304,1013.0
22714,18292.0
69128,-18346.0
97908,1429.0
37228,13579.0
97486,-8690.0
04491,10000.0
11005,4099.0
04936,
12195,
63102,15198.0
06793,18150.0
44669,-12668.0
96109,12244.0
15638,-6637.0
36263,-15721.0
16853,
08352,1246.0
72536,6515.0
59926,
96084,6518.0
97011,2049.0
12444,19688.0
15561,4026.0
58488,3646.0
52219,4687.0
26852,28724.0
06091,
38588,3185.0
47584,792.0
31038,8138.0
37326,15000.0
95560,42579.0
88348,
97484,3378.0
66850,-34896.0
59755,10000.0
72136,16338.0
17101,1324.0
27556,
80830,3912.0
99638,1250.0
95443,560.0
14881,
59731,11488.0
68416,-5500.0
57766,
13404,10250.0
95497,2752.0
37219,46717.0
73556,-13125.0
54948,4375.0
19436,375.0
18503,2462.0
31527,8422.0
86444,-1345.0
23153,18073.0
94970,27132.0
12481,302.0
25879,19195.0
65335,-9000.0
81121,1746.0
59927,-1563.0
12548,-256.0
94569,43403.0
95728,
04063,
60661,8363.0
14480,7663.0
93517,-372.0
29202,
66944,31250.0
77002,4954.0
21766,6866.0
99153,1727.0
97145,28819.0
34289,12471.0
29614,-7065.0
20006,12194.0
87531,
98134,21792.0
05034,-17852.0
12517,
17027,5834.0
23968,2889.0
71970,8214.0
16691,-7250.0
12847,-3542.0
78215,12983.0
49918,17500.0
93424,-3473.0
21734,-15719.0
67202,-1662.0
21872,
41180,13831.0
21130,5473.0
84334,12275.0
49628,9821.0
99131,13958.0
65064,13716.0
Query:
-- Query 6: Calculate vulnerable workers per ZIP code based on 2017 employment figures
SELECT
    "geo_id",
    "employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
    "employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR"
LIMIT 100
Answer:
geo_id,vulnerable_wholesale_trade_workers,vulnerable_manufacturing_workers
14521,4.94,31.159999999999997
43942,5.32,105.77999999999999
56097,16.34,135.70999999999998
14837,11.02,168.51
35218,26.22,93.89
12721,66.5,97.16999999999999
80924,15.58,84.46
85607,23.94,53.709999999999994
40210,51.68,273.88
46040,66.5,418.60999999999996
70525,61.56,142.67999999999998
29582,63.46,84.86999999999999
32534,22.8,183.26999999999998
01569,69.92,537.1
41001,102.6,437.06
14217,98.8,401.79999999999995
48040,44.84,371.46
77836,99.56,239.02999999999997
63110,98.8,309.14
55927,37.62,134.89
28705,24.7,216.89
25560,58.9,222.63
35115,64.22,205.82
49345,102.22,600.65
15801,35.72,372.28
55398,130.34,702.3299999999999
40353,41.42,1002.8599999999999
28681,117.42,1592.4399999999998
59711,24.32,53.709999999999994
52060,50.160000000000004,281.66999999999996
60033,28.5,590.4
00637,8.74,243.54
29627,69.92,573.18
47111,42.18,617.4599999999999
76067,87.02,476.83
74653,13.68,59.04
85550,5.32,26.24
43080,23.18,175.07
47031,2.2800000000000002,292.74
56101,15.96,278.8
37347,29.26,305.85999999999996
03042,53.58,215.66
17842,35.72,366.95
17241,43.32,266.5
38652,26.98,814.67
18018,212.04,691.67
45875,53.58,687.16
27536,55.86,387.03999999999996
41701,62.32,96.35
21550,23.56,148.01
19036,90.44,179.98999999999998
27028,161.5,887.2399999999999
30525,1.52,134.48
28371,22.04,208.28
49065,16.72,292.33
57049,37.24,231.64999999999998
15537,27.36,220.98999999999998
00735,15.2,174.25
26354,99.56,149.23999999999998
03077,69.54,338.65999999999997
86305,23.18,123.82
67060,72.2,677.7299999999999
24333,53.2,657.64
83316,48.64,192.7
56093,43.32,642.88
35957,33.82,587.12
46975,123.12,770.8
54017,117.04,710.12
34234,76.38,189.01
30125,95.38,1023.77
60134,263.72,688.39
38116,221.54,681.01
49304,4.5600000000000005,56.169999999999995
54499,17.86,128.32999999999998
23950,15.58,81.17999999999999
66534,7.98,182.85999999999999
28555,16.34,39.36
62286,23.94,226.73
54923,31.16,552.68
66043,19.76,91.02
78076,0.0,33.62
00920,97.66,91.42999999999999
44420,66.12,430.09
45344,86.26,441.97999999999996
77713,100.7,447.30999999999995
99203,101.84,276.34
38118,187.34,638.37
00976,266.0,442.39
27944,27.740000000000002,107.00999999999999
29812,33.44,341.94
95360,54.72,352.19
47006,36.480000000000004,505.94
28574,0.0,120.53999999999999
43205,38.38,114.8
25401,68.02,195.57
80603,66.5,234.92999999999998
53959,77.52,641.24
87410,92.34,101.27
76574,77.14,464.53
33803,143.26,397.28999999999996
Query:
DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CYCLISTIC"."ZIP_CODES";
Answer:
name,type,kind,null?,default,primary key,unique key,check,expression,comment,policy name,privacy domain
zip,"NUMBER(38,0)",COLUMN,Y,,N,N,,,,,
borough,VARCHAR(16777216),COLUMN,Y,,N,N,,,,,
neighborhood,VARCHAR(16777216),COLUMN,Y,,N,N,,,,,
Query:
-- Corrected Query 8: Sum vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
Answer:
total_vulnerable_wholesale_trade_workers,total_vulnerable_manufacturing_workers
1547150.24,6383624.97
Query:
DESCRIBE TABLE "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."STATE_2017_5YR";
Answer:
Too long, hard cut:
name,type,kind,null?,default,primary key,unique key,check,expression,comment,policy name,privacy domain
geo_id,VARCHAR(16777216),COLUMN,Y,,N,N,,,,,
nonfamily_households,FLOAT,COLUMN,Y,,N,N,,,,,
family_households,FLOAT,COLUMN,Y,,N,N,,,,,
median_year_structure_built,FLOAT,COLUMN,Y,,N,N,,,,,
rent_burden_not_computed,FLOAT,COLUMN,Y,,N,N,,,,,
rent_over_50_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_40_to_50_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_35_to_40_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_30_to_35_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_25_to_30_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_20_to_25_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_15_to_20_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_10_to_15_percent,FLOAT,COLUMN,Y,,N,N,,,,,
rent_under_10_percent,FLOAT,COLUMN,Y,,N,N,,,,,
total_pop,FLOAT,COLUMN,Y,,N,N,,,,,
male_pop,FLOAT,COLUMN,Y,,N,N,,,,,
female_pop,FLOAT,COLUMN,Y,,N,N,,,,,
median_age,FLOAT,COLUMN,Y,,N,N,,,,,
white_pop,FLOAT,COLUMN,Y,,N,N,,,,,
black_pop,FLOAT,COLUMN,Y,,N,N,,,,,
asian_pop,FLOAT,COLUMN,Y,,N,N,,,,,
hispanic_pop,FLOAT,COLUMN,Y,,N,N,,,,,
amerindian_pop,FLOAT,COLUMN,Y,,N,N,,,,,
other_race_pop,FLOAT,COLUMN,Y,,N,N,,,,,
two_or_more_races_pop,FLOAT,COLUMN,Y,,N,N,,,,,
not_hispanic_pop,FLOAT,COLUMN,Y,,N,N,,,,,
commuters_by_public_transportation,FLOAT,COLUMN,Y,,N,N,,,,,
households,FLOAT,COLUMN,Y,,N,N,,,,,
median_income,FLOAT,COLUMN,Y,,N,N,,,,,
income_per_capita,FLOAT,COLUMN,Y,,N,N,,,,,
housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
vacant_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
vacant_housing_units_for_rent,FLOAT,COLUMN,Y,,N,N,,,,,
vacant_housing_units_for_sale,FLOAT,COLUMN,Y,,N,N,,,,,
median_rent,FLOAT,COLUMN,Y,,N,N,,,,,
percent_income_spent_on_rent,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
million_dollar_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
mortgaged_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_father_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_mother_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
two_parents_not_in_labor_force_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
one_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
father_one_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
father_in_labor_force_one_parent_families_with_young_children,FLOAT,COLUMN,Y,,N,N,,,,,
commute_10_14_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_15_19_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_20_24_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_25_29_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_30_34_mins,FLOAT,COLUMN,Y,,N,N,,,,,
commute_45_59_mins,FLOAT,COLUMN,Y,,N,N,,,,,
aggregate_travel_time_to_work,FLOAT,COLUMN,Y,,N,N,,,,,
income_less_10000,FLOAT,COLUMN,Y,,N,N,,,,,
income_10000_14999,FLOAT,COLUMN,Y,,N,N,,,,,
income_15000_19999,FLOAT,COLUMN,Y,,N,N,,,,,
income_20000_24999,FLOAT,COLUMN,Y,,N,N,,,,,
income_25000_29999,FLOAT,COLUMN,Y,,N,N,,,,,
income_30000_34999,FLOAT,COLUMN,Y,,N,N,,,,,
income_35000_39999,FLOAT,COLUMN,Y,,N,N,,,,,
income_40000_44999,FLOAT,COLUMN,Y,,N,N,,,,,
income_45000_49999,FLOAT,COLUMN,Y,,N,N,,,,,
income_50000_59999,FLOAT,COLUMN,Y,,N,N,,,,,
income_60000_74999,FLOAT,COLUMN,Y,,N,N,,,,,
income_75000_99999,FLOAT,COLUMN,Y,,N,N,,,,,
income_100000_124999,FLOAT,COLUMN,Y,,N,N,,,,,
income_125000_149999,FLOAT,COLUMN,Y,,N,N,,,,,
income_150000_199999,FLOAT,COLUMN,Y,,N,N,,,,,
income_200000_or_more,FLOAT,COLUMN,Y,,N,N,,,,,
renter_occupied_housing_units_paying_cash_median_gross_rent,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units_lower_value_quartile,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units_median_value,FLOAT,COLUMN,Y,,N,N,,,,,
owner_occupied_housing_units_upper_value_quartile,FLOAT,COLUMN,Y,,N,N,,,,,
married_households,FLOAT,COLUMN,Y,,N,N,,,,,
occupied_housing_units,FLOAT,COLUMN,Y,,N,N,,,,,
housing_units_renter_occupied,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_1_units_detached,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_1_units_attached,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_2_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_3_to_4_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_5_to_9_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_10_to_19_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_20_to_49_units,FLOAT,COLUMN,Y,,N,N,,,,,
dwellings_50_or_more_units,FLOAT,COLUMN,Y,,N,N,,,,,
mobile_homes,FLOAT,COLUMN,Y,,N,N,,,,,
housing_built_2005_or_later,FLOAT,COLUMN,Y,,N,N,,,,,
housing_built_2000_to_2004,FLOAT,COLUMN,Y,,N,N,,,,,
housing_built_1939_or_earlier,FLOAT,COLUMN,Y,,N,N,,,,,
male_under_5,FLOAT,COLUMN,Y,,N,N,,,,,
male_5_to_9,FLOAT,COLUMN,Y,,N,N,,,,,
male_10_to_14,FLOAT,COLUMN,Y,,N,N,,,,,
male_15_to_17,FLOAT,COLUMN,Y,,N,N,,,,,
male_18_to_19,FLOAT,COLUMN,Y,,N,N,,,,,
male_20,FLOAT,COLUMN,Y,,N,N,,,,,
male_21,FLOAT,COLUMN,Y,,N,N,,,,,
male_22_to_24,FLOAT,COLUMN,Y,,N,N,,,,,
male_25_to_29,FLOAT,COLUMN,Y,,N,N,,,,,
male_30_to_34,FLOAT,COLUMN,Y,,N,N,,,,,
male_35_to_39,FLOAT,COLUMN,Y,,N
Query:
-- Calculate total vulnerable workers nationwide
SELECT
    SUM(emp."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale_trade_workers",
    SUM(emp."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing_workers",
    SUM(
        emp."employed_wholesale_trade" * 0.38 + emp."employed_manufacturing" * 0.41
    ) AS "total_vulnerable_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" emp;
Answer:
total_vulnerable_wholesale_trade_workers,total_vulnerable_manufacturing_workers,total_vulnerable_workers
1547150.24,6383624.97,7930775.21
Query:
-- Additional Queries:

-- Query 11: Identify ZIP codes with a decrease in median income from 2015 to 2018
SELECT
    t2015."geo_id",
    t2015."median_income" AS "median_income_2015",
    t2018."median_income" AS "median_income_2018",
    t2018."median_income" - t2015."median_income" AS "median_income_difference"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" t2015
JOIN
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" t2018
ON
    t2015."geo_id" = t2018."geo_id"
WHERE
    t2018."median_income" - t2015."median_income" < 0
LIMIT 100
Answer:
geo_id,median_income_2015,median_income_2018,median_income_difference
69128,56471.000000000,38125.0,-18346.0
97486,62083.000000000,53393.0,-8690.0
44669,67981.000000000,55313.0,-12668.0
15638,51304.000000000,44667.0,-6637.0
36263,41875.000000000,26154.0,-15721.0
66850,90417.000000000,55521.0,-34896.0
68416,40000.000000000,34500.0,-5500.0
73556,37813.000000000,24688.0,-13125.0
86444,21484.000000000,20139.0,-1345.0
65335,50250.000000000,41250.0,-9000.0
59927,47813.000000000,46250.0,-1563.0
12548,56625.000000000,56369.0,-256.0
93517,61250.000000000,60878.0,-372.0
29614,27065.000000000,20000.0,-7065.0
05034,95833.000000000,77981.0,-17852.0
16691,45000.000000000,37750.0,-7250.0
12847,62917.000000000,59375.0,-3542.0
93424,74563.000000000,71090.0,-3473.0
21734,52969.000000000,37250.0,-15719.0
67202,40273.000000000,38611.0,-1662.0
27862,39375.000000000,37500.0,-1875.0
97108,51250.000000000,43472.0,-7778.0
08212,53125.000000000,47917.0,-5208.0
72201,67441.000000000,59286.0,-8155.0
98588,56855.000000000,46372.0,-10483.0
59844,41458.000000000,41125.0,-333.0
08023,53250.000000000,28708.0,-24542.0
63430,61250.000000000,36875.0,-24375.0
61602,20673.000000000,18958.0,-1715.0
71922,41667.000000000,38438.0,-3229.0
97067,73500.000000000,55038.0,-18462.0
05076,55000.000000000,49688.0,-5312.0
95461,58091.000000000,42250.0,-15841.0
03817,21042.000000000,20577.0,-465.0
17247,70781.000000000,41278.0,-29503.0
96075,26875.000000000,15391.0,-11484.0
56456,43333.000000000,28438.0,-14895.0
04066,90606.000000000,66719.0,-23887.0
37351,59268.000000000,47368.0,-11900.0
97830,39250.000000000,30909.0,-8341.0
97840,100921.000000000,79732.0,-21189.0
15928,46402.000000000,43971.0,-2431.0
93067,75684.000000000,57788.0,-17896.0
99345,66250.000000000,61875.0,-4375.0
93285,44712.000000000,30665.0,-14047.0
60604,151731.000000000,116250.0,-35481.0
12493,85547.000000000,78359.0,-7188.0
87743,29500.000000000,22708.0,-6792.0
95720,50625.000000000,43750.0,-6875.0
57773,90625.000000000,68214.0,-22411.0
77046,98047.000000000,81803.0,-16244.0
03751,56293.000000000,41845.0,-14448.0
02646,66434.000000000,64760.0,-1674.0
89413,115962.000000000,91184.0,-24778.0
04006,33839.000000000,32708.0,-1131.0
15413,36297.000000000,36219.0,-78.0
01088,61750.000000000,47232.0,-14518.0
61416,30156.000000000,21250.0,-8906.0
52166,56705.000000000,46667.0,-10038.0
27915,56406.000000000,33125.0,-23281.0
74427,46625.000000000,41563.0,-5062.0
40915,42556.000000000,29320.0,-13236.0
36205,64167.000000000,59375.0,-4792.0
77446,28542.000000000,25688.0,-2854.0
59484,83750.000000000,65938.0,-17812.0
69161,24688.000000000,19861.0,-4827.0
12752,50781.000000000,41202.0,-9579.0
59710,62083.000000000,36250.0,-25833.0
23879,53077.000000000,42361.0,-10716.0
97543,48140.000000000,31638.0,-16502.0
22959,70075.000000000,59844.0,-10231.0
96742,66250.000000000,61875.0,-4375.0
81029,40000.000000000,34286.0,-5714.0
80801,52708.000000000,48750.0,-3958.0
67332,47000.000000000,46250.0,-750.0
58463,40385.000000000,31550.0,-8835.0
67862,43750.000000000,41071.0,-2679.0
52774,76250.000000000,61250.0,-15000.0
62357,28125.000000000,24931.0,-3194.0
59087,43125.000000000,40417.0,-2708.0
73441,25313.000000000,24688.0,-625.0
97877,18000.000000000,11250.0,-6750.0
65283,58352.000000000,45948.0,-12404.0
01243,73750.000000000,69167.0,-4583.0
52312,30313.000000000,29444.0,-869.0
08738,104375.000000000,84659.0,-19716.0
67631,59875.000000000,43750.0,-16125.0
62965,38125.000000000,28958.0,-9167.0
27872,30625.000000000,19236.0,-11389.0
95552,32632.000000000,27056.0,-5576.0
64090,44688.000000000,41875.0,-2813.0
44697,50000.000000000,43750.0,-6250.0
54760,48500.000000000,36250.0,-12250.0
59419,52500.000000000,42500.0,-10000.0
28519,54750.000000000,53875.0,-875.0
63458,66250.000000000,29545.0,-36705.0
72152,36364.000000000,18913.0,-17451.0
84763,50000.000000000,46250.0,-3750.0
58752,88594.000000000,60625.0,-27969.0
54844,44500.000000000,43125.0,-1375.0
Query:
-- Corrected Query 12: Aggregate total employment in wholesale trade and manufacturing nationwide
SELECT
    SUM(emp."employed_wholesale_trade") AS "total_wholesale_trade_workers",
    SUM(emp."employed_manufacturing") AS "total_manufacturing_workers"
FROM
    "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp;
Answer:
total_wholesale_trade_workers,total_manufacturing_workers
4071448.0,15569817.0
Query:
-- Corrected Query 13: List states with their median income change and total vulnerable workers

WITH income_diff AS (
    SELECT
        t2015."geo_id",
        t2015."median_income" AS "median_income_2015",
        t2018."median_income" AS "median_income_2018",
        (t2018."median_income" - t2015."median_income") AS "median_income_difference"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
    ON
        t2015."geo_id" = t2018."geo_id"
),
vulnerable_workers AS (
    SELECT
        emp."geo_id",
        (emp."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale_trade_workers",
        (emp."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
)
SELECT
    income_diff."geo_id",
    income_diff."median_income_difference",
    vulnerable_workers."vulnerable_wholesale_trade_workers",
    vulnerable_workers."vulnerable_manufacturing_workers",
    (vulnerable_workers."vulnerable_wholesale_trade_workers" + vulnerable_workers."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_diff
JOIN
    vulnerable_workers
ON
    income_diff."geo_id" = vulnerable_workers."geo_id"
ORDER BY
    "total_vulnerable_workers" DESC
LIMIT 100;
Answer:
geo_id,median_income_difference,vulnerable_wholesale_trade_workers,vulnerable_manufacturing_workers,total_vulnerable_workers
90011,6703.0,905.92,4277.94,5183.86
30721,4453.0,182.02,4649.8099999999995,4831.83
90201,5001.0,1128.98,3039.74,4168.719999999999
95035,24907.0,373.16,3633.0099999999998,4006.1699999999996
90280,6694.0,1149.1200000000001,2691.6499999999996,3840.7699999999995
60629,1307.0,688.1800000000001,3116.0,3804.1800000000003
60804,5621.0,605.72,3159.87,3765.59
60085,2603.0,595.08,3155.3599999999997,3750.4399999999996
49424,6336.0,216.22,3504.68,3720.8999999999996
90255,6664.0,911.24,2800.71,3711.95
77449,7309.0,1168.1200000000001,2540.3599999999997,3708.4799999999996
97124,11665.0,278.16,3390.7,3668.8599999999997
60505,5857.0,580.26,3081.97,3662.2299999999996
45840,4327.0,279.3,3287.3799999999997,3566.68
60639,5352.0,422.56,3112.72,3535.2799999999997
90650,6697.0,1028.28,2485.83,3514.1099999999997
92704,5863.0,408.88,3051.22,3460.1
77494,5544.0,923.4,2531.3399999999997,3454.74
60632,4320.0,561.26,2861.39,3422.6499999999996
75052,8610.0,893.0,2464.1,3357.1
91744,7637.0,680.2,2652.29,3332.49
46514,5657.0,278.54,3023.3399999999997,3301.8799999999997
47201,6026.0,130.72,3158.23,3288.95
92683,8435.0,430.16,2840.89,3271.0499999999997
97229,11633.0,397.48,2838.8399999999997,3236.3199999999997
91331,8374.0,490.2,2703.95,3194.1499999999996
92126,7957.0,309.7,2881.0699999999997,3190.7699999999995
77084,2145.0,830.6800000000001,2331.67,3162.3500000000004
53081,5594.0,122.74,3032.3599999999997,3155.0999999999995
97006,10872.0,356.06,2664.5899999999997,3020.6499999999996
91706,10455.0,849.6800000000001,2142.66,2992.34
97007,10597.0,476.14,2511.25,2987.39
49423,6531.0,136.8,2802.35,2939.15
98208,11453.0,224.96,2681.3999999999996,2906.3599999999997
48044,12663.0,271.32,2618.6699999999996,2889.99
92804,8463.0,576.08,2283.29,2859.37
72764,9078.0,316.54,2538.31,2854.85
94087,27548.0,192.28,2635.89,2828.17
92503,10236.0,499.32,2328.7999999999997,2828.12
60623,3543.0,424.08,2402.6,2826.68
95051,21628.0,292.98,2529.7,2822.68
90805,4555.0,503.12,2300.5099999999998,2803.6299999999997
77429,6950.0,807.12,1982.35,2789.47
54956,3131.0,254.22,2523.14,2777.3599999999997
40324,2665.0,202.54,2573.16,2775.7
60073,7869.0,349.98,2425.1499999999996,2775.1299999999997
92805,9412.0,585.58,2184.48,2770.06
44077,5931.0,240.16,2525.6,2765.7599999999998
44060,2259.0,346.18,2417.77,2763.95
60120,4799.0,336.68,2425.97,2762.6499999999996
84118,5695.0,452.2,2291.8999999999996,2744.0999999999995
53511,4705.0,242.06,2499.77,2741.83
29681,1943.0,404.32,2332.8999999999996,2737.22
95014,23861.0,196.84,2526.42,2723.26
94587,19927.0,382.28000000000003,2337.0,2719.28
30701,3031.0,180.12,2530.1099999999997,2710.2299999999996
11717,6559.0,551.76,2154.96,2706.7200000000003
45011,4563.0,470.44,2229.99,2700.43
84404,8700.0,244.34,2447.29,2691.63
07055,4456.0,425.98,2260.33,2686.31
44256,7494.0,483.36,2201.7,2685.06
77095,6247.0,891.1,1778.58,2669.68
92336,2605.0,809.02,1853.61,2662.63
94536,20047.0,379.24,2283.29,2662.5299999999997
37013,6388.0,596.98,2057.79,2654.77
90262,6570.0,528.96,2114.37,2643.33
28601,4063.0,400.9,2219.33,2620.23
53215,3401.0,329.46,2265.66,2595.12
94538,16265.0,257.64,2336.18,2593.8199999999997
44035,3056.0,234.46,2328.39,2562.85
92882,6851.0,565.82,1994.6499999999999,2560.47
54915,1784.0,363.66,2170.95,2534.6099999999997
54220,6186.0,130.72,2401.7799999999997,2532.4999999999995
93033,7696.0,613.7,1914.6999999999998,2528.3999999999996
78660,7131.0,407.74,2119.29,2527.0299999999997
63376,5937.0,443.08,2078.29,2521.37
94539,24576.0,337.44,2182.02,2519.46
90660,9859.0,680.96,1825.32,2506.2799999999997
77573,9958.0,372.02,2134.0499999999997,2506.0699999999997
17331,2769.0,449.16,2054.5099999999998,2503.6699999999996
77584,9852.0,443.08,2056.97,2500.0499999999997
90631,11703.0,792.3,1698.2199999999998,2490.5199999999995
95123,23633.0,238.26,2250.49,2488.75
30043,11117.0,679.44,1803.1799999999998,2482.62
91342,9745.0,387.98,2090.18,2478.16
92707,14866.0,277.78000000000003,2198.42,2476.2000000000003
48187,5317.0,273.6,2188.17,2461.77
92335,8686.0,511.48,1947.9099999999999,2459.39
91709,7676.0,876.28,1582.1899999999998,2458.47
92703,7773.0,212.8,2224.25,2437.05
91710,6972.0,657.4,1767.1,2424.5
77379,3673.0,565.82,1856.07,2421.89
48307,7641.0,175.18,2242.7,2417.8799999999997
90001,4634.0,464.74,1947.4999999999998,2412.24
42101,5115.0,381.14,2027.86,2409.0
95127,19061.0,212.8,2193.5,2406.3
19446,7457.0,310.46,2094.69,2405.15
46516,9166.0,101.84,2300.5099999999998,2402.35
75070,5474.0,585.2,1810.9699999999998,2396.17
30705,9377.0,103.74,2291.49,2395.2299999999996
End Exploring Related Columns
Task: Using data on ZIP-level median income differences between 2015 and 2018, along with the 2017 ACS employment figures, list each state in descending order of total vulnerable workers, where “vulnerable” is defined as 38% of wholesale trade employees and 41% of manufacturing employees in 2017. Your results should include the state name, the number of vulnerable wholesale trade workers, the number of vulnerable manufacturing workers, and the combined total of these vulnerable workers.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
State_Name,Vulnerable_Wholesale_Trade_Workers,Vulnerable_Manufacturing_Workers,Total_Vulnerable_Workers
state1:str,vul_wholesale1:int,vul_manufacturing1:int,total_vulnerable1:int
state2:str,vul_wholesale2:int,vul_manufacturing2:int,total_vulnerable2:int
...
(Attention: answer in descending order of Total_Vulnerable_Workers)
```

The table above lists each state in descending order based on the total number of vulnerable workers, where vulnerable workers are calculated as 38% of wholesale trade employees and 41% of manufacturing employees in 2017..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'CENSUS_BUREAU_ACS_2': {'CENSUS_BUREAU_ACS': ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2018_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2012_5YR', 'CBSA_2007_1YR', 'CBSA_2007_1YR', 'CBSA_2015_5YR', 'CBSA_2013_5YR', 'CBSA_2019_1YR', 'CBSA_2012_5YR', 'CBSA_2017_5YR', 'CBSA_2008_1YR', 'CBSA_2011_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2015_1YR', 'CBSA_2007_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2011_1YR', 'CBSA_2012_1YR', 'CBSA_2013_3YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2016_5YR', 'CBSA_2013_1YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_5YR', 'CBSA_2011_3YR', 'CBSA_2012_3YR', 'CBSA_2016_1YR', 'CBSA_2017_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CBSA_2008_3YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2020_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'STATE_2013_1YR', 'STATE_2013_1YR', 'STATE_2014_1YR', 'STATE_2016_5YR', 'STATE_2019_1YR', 'STATE_2017_1YR', 'STATE_2019_5YR', 'STATE_2007_1YR', 'STATE_2008_3YR', 'STATE_2011_3YR', 'STATE_2012_1YR', 'STATE_2015_1YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2013_3YR', 'STATE_2014_5YR', 'STATE_2020_5YR', 'STATE_2008_1YR', 'STATE_2012_5YR', 'STATE_2018_5YR', 'STATE_2010_5YR', 'STATE_2012_3YR', 'STATE_2016_1YR', 'STATE_2018_1YR', 'STATE_2013_5YR', 'STATE_2007_3YR', 'STATE_2011_5YR', 'STATE_2010_3YR', 'STATE_2021_1YR', 'STATE_2011_1YR', 'STATE_2010_1YR', 'STATE_2017_5YR', 'STATE_2015_5YR', 'COUNTY_2013_5YR', 'COUNTY_2013_5YR', 'COUNTY_2016_5YR', 'COUNTY_2020_5YR', 'COUNTY_2008_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_5YR', 'COUNTY_2017_1YR', 'COUNTY_2019_1YR', 'COUNTY_2014_5YR', 'COUNTY_2007_1YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2012_3YR', 'COUNTY_2013_1YR', 'COUNTY_2015_1YR', 'COUNTY_2009_1YR', 'COUNTY_2011_5YR', 'COUNTY_2015_5YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2014_1YR', 'COUNTY_2021_1YR', 'COUNTY_2019_5YR', 'COUNTY_2007_3YR', 'COUNTY_2009_3YR', 'COUNTY_2018_5YR', 'COUNTY_2016_1YR', 'COUNTY_2010_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_3YR', 'COUNTY_2008_1YR', 'COUNTY_2012_1YR', 'PLACE_2011_3YR', 'PLACE_2011_3YR', 'PLACE_2018_1YR', 'PLACE_2010_1YR', 'PLACE_2012_5YR', 'PLACE_2011_1YR', 'PLACE_2009_1YR', 'PLACE_2017_5YR', 'PLACE_2014_5YR', 'PLACE_2010_5YR', 'PLACE_2015_5YR', 'PLACE_2007_3YR', 'PLACE_2012_3YR', 'PLACE_2021_1YR', 'PLACE_2013_3YR', 'PLACE_2007_1YR', 'PLACE_2019_5YR', 'PLACE_2010_3YR', 'PLACE_2018_5YR', 'PLACE_2013_1YR', 'PLACE_2020_5YR', 'PLACE_2009_3YR', 'PLACE_2008_3YR', 'PLACE_2013_5YR', 'PLACE_2017_1YR', 'PLACE_2019_1YR', 'PLACE_2014_1YR', 'PLACE_2011_5YR', 'PLACE_2016_5YR', 'PLACE_2008_1YR', 'PLACE_2016_1YR', 'PLACE_2015_1YR', 'PLACE_2012_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'PUMA_2008_3YR', 'PUMA_2008_3YR', 'PUMA_2010_5YR', 'PUMA_2012_1YR', 'PUMA_2021_1YR', 'PUMA_2018_1YR', 'PUMA_2013_3YR', 'PUMA_2020_5YR', 'PUMA_2010_1YR', 'PUMA_2015_5YR', 'PUMA_2017_5YR', 'PUMA_2012_5YR', 'PUMA_2009_1YR', 'PUMA_2010_3YR', 'PUMA_2013_1YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2012_3YR', 'PUMA_2011_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2009_3YR', 'PUMA_2007_1YR', 'PUMA_2017_1YR', 'PUMA_2014_1YR', 'PUMA_2016_5YR', 'PUMA_2018_5YR', 'PUMA_2013_5YR', 'PUMA_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'ZCTA_2019_5YR', 'ZCTA_2019_5YR', 'ZCTA5_2011_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2019_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2012_5YR', 'ZCTA_2020_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR', 'ZIP_CODES_2014_5YR'], 'CYCLISTIC': ['ZIP_CODES', 'STATE_FIPS'], 'GEO_US_BOUNDARIES': ['CBSA', 'ADJACENT_COUNTIES', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'CSA', 'NATIONAL_OUTLINE', 'METROPOLITAN_DIVISIONS', 'RAILWAYS', 'ADJACENT_STATES', 'CNECTA', 'COASTLINE', 'ZIP_CODES', 'COUNTIES', 'NWS_FORECAST_REGIONS', 'STATES', 'URBAN_AREAS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 15:11:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:11:56 - root - INFO - ```sql
WITH income_decreased_zips AS (
    SELECT
        LPAD(TRIM(t2015."geo_id"), 5, '0') AS "zip_code"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
        JOIN "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
            ON t2015."geo_id" = t2018."geo_id"
    WHERE
        t2015."median_income" IS NOT NULL
        AND t2018."median_income" IS NOT NULL
        AND (t2018."median_income" - t2015."median_income") < 0
),
employment_data AS (
    SELECT
        LPAD(TRIM(emp."geo_id"), 5, '0') AS "zip_code",
        emp."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        emp."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
    WHERE
        emp."employed_wholesale_trade" IS NOT NULL
        AND emp."employed_manufacturing" IS NOT NULL
),
zip_state_mapping AS (
    SELECT
        LPAD(TRIM(zc."zip_code"), 5, '0') AS "zip_code",
        zc."state_name"
    FROM
        "GEO_US_BOUNDARIES"."ZIP_CODES" AS zc
    WHERE
        zc."state_name" IS NOT NULL
)
SELECT
    zs."state_name",
    SUM(ed."vulnerable_wholesale_trade_workers") AS "vulnerable_wholesale_trade_workers",
    SUM(ed."vulnerable_manufacturing_workers") AS "vulnerable_manufacturing_workers",
    SUM(ed."vulnerable_wholesale_trade_workers" + ed."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_decreased_zips AS id
    JOIN employment_data AS ed ON id."zip_code" = ed."zip_code"
    JOIN zip_state_mapping AS zs ON id."zip_code" = zs."zip_code"
GROUP BY
    zs."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
NULLS LAST;
```
2025-02-12 15:11:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:11:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:11:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:11:57 - snowflake.connector.connection - INFO - closed
2025-02-12 15:11:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:11:58 - root - INFO - itercount: 1
2025-02-12 15:11:58 - root - INFO - 090105 (22000): 01ba586f-0004-9c12-0001-11c3010f3fa2: Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
2025-02-12 15:11:58 - root - INFO - Input sql:
WITH income_decreased_zips AS (
    SELECT
        LPAD(TRIM(t2015."geo_id"), 5, '0') AS "zip_code"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
        JOIN "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
            ON t2015."geo_id" = t2018."geo_id"
    WHERE
        t2015."median_income" IS NOT NULL
        AND t2018."median_income" IS NOT NULL
        AND (t2018."median_income" - t2015."median_income") < 0
),
employment_data AS (
    SELECT
        LPAD(TRIM(emp."geo_id"), 5, '0') AS "zip_code",
        emp."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        emp."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
    WHERE
        emp."employed_wholesale_trade" IS NOT NULL
        AND emp."employed_manufacturing" IS NOT NULL
),
zip_state_mapping AS (
    SELECT
        LPAD(TRIM(zc."zip_code"), 5, '0') AS "zip_code",
        zc."state_name"
    FROM
        "GEO_US_BOUNDARIES"."ZIP_CODES" AS zc
    WHERE
        zc."state_name" IS NOT NULL
)
SELECT
    zs."state_name",
    SUM(ed."vulnerable_wholesale_trade_workers") AS "vulnerable_wholesale_trade_workers",
    SUM(ed."vulnerable_manufacturing_workers") AS "vulnerable_manufacturing_workers",
    SUM(ed."vulnerable_wholesale_trade_workers" + ed."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_decreased_zips AS id
    JOIN employment_data AS ed ON id."zip_code" = ed."zip_code"
    JOIN zip_state_mapping AS zs ON id."zip_code" = zs."zip_code"
GROUP BY
    zs."state_name"
ORDER BY
    "total_vulnerable_workers" DESC
NULLS LAST;
The error information is:
090105 (22000): 01ba586f-0004-9c12-0001-11c3010f3fa2: Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-02-12 15:12:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:12:36 - root - INFO - ```sql
WITH income_decreased_zips AS (
    SELECT
        LPAD(TRIM(t2015."geo_id"), 5, '0') AS "zip_code"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
        JOIN "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
            ON t2015."geo_id" = t2018."geo_id"
    WHERE
        t2015."median_income" IS NOT NULL
        AND t2018."median_income" IS NOT NULL
        AND (t2018."median_income" - t2015."median_income") < 0
),
employment_data AS (
    SELECT
        LPAD(TRIM(emp."geo_id"), 5, '0') AS "zip_code",
        emp."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        emp."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
    WHERE
        emp."employed_wholesale_trade" IS NOT NULL
        AND emp."employed_manufacturing" IS NOT NULL
),
zip_state_mapping AS (
    SELECT
        LPAD(TRIM(zc."zip_code"), 5, '0') AS "zip_code",
        zc."state_name"
    FROM
        "CENSUS_BUREAU_ACS_2"."GEO_US_BOUNDARIES"."ZIP_CODES" AS zc
    WHERE
        zc."state_name" IS NOT NULL
)
SELECT
    zs."state_name",
    SUM(ed."vulnerable_wholesale_trade_workers") AS "vulnerable_wholesale_trade_workers",
    SUM(ed."vulnerable_manufacturing_workers") AS "vulnerable_manufacturing_workers",
    SUM(ed."vulnerable_wholesale_trade_workers" + ed."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_decreased_zips AS id
    JOIN employment_data AS ed ON id."zip_code" = ed."zip_code"
    JOIN zip_state_mapping AS zs ON id."zip_code" = zs."zip_code"
GROUP BY
    zs."state_name"
ORDER BY
    "total_vulnerable_workers" DESC NULLS LAST;
```
2025-02-12 15:12:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:12:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:12:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:12:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 54
2025-02-12 15:12:38 - snowflake.connector.connection - INFO - closed
2025-02-12 15:12:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:12:38 - root - INFO - itercount: 2
2025-02-12 15:12:38 - root - INFO - 0
2025-02-12 15:12:38 - root - INFO - results: 
state_name,vulnerable_wholesale_trade_workers,vulnerable_manufacturing_workers,total_vulnerable_workers
Texas,9645.92,30513.839999999997,40159.759999999995
Pennsylvania,3441.66,20519.269999999997,23960.93
Ohio,2785.4,21058.829999999998,23844.23
Louisiana,4142.76,17622.21,21764.969999999998
New York,4235.86,15251.179999999998,19487.039999999997
Illinois,3047.6000000000004,14336.47,17384.07
Indiana,1706.58,14766.56,16473.14
New Jersey,4292.1,10622.279999999999,14914.38
Alabama,1851.3600000000001,12878.51,14729.869999999999
Georgia,2430.48,11859.66,14290.14
California,3373.6400000000003,10439.83,13813.47
North Carolina,1675.8,11178.65,12854.449999999999
Tennessee,1719.88,10877.3,12597.18
Iowa,1757.12,10415.64,12172.76
Arkansas,1726.3400000000001,9825.65,11551.989999999998
South Carolina,1377.12,10086.0,11463.119999999999
Puerto Rico,2740.18,8662.48,11402.66
Florida,3441.28,6974.099999999999,10415.38
Kentucky,1402.96,8760.06,10163.02
Virginia,1610.0600000000002,8517.75,10127.81
Mississippi,1149.12,8910.939999999999,10060.06
Michigan,966.34,8445.18,9411.52
Missouri,1239.56,7717.84,8957.4
Minnesota,1420.44,7444.78,8865.22
Massachusetts,1507.46,7227.07,8734.529999999999
West Virginia,1483.1399999999999,5498.099999999999,6981.24
Connecticut,1242.22,5609.62,6851.84
Kansas,1143.8,5568.209999999999,6712.009999999999
Maryland,1413.98,4175.849999999999,5589.829999999999
Oklahoma,914.28,4669.08,5583.360000000001
Wisconsin,551.76,4943.78,5495.54
Arizona,1179.8999999999999,3455.0699999999997,4634.969999999999
New Mexico,1007.76,2838.8399999999997,3846.6
Nebraska,590.52,2931.5,3522.0199999999995
Vermont,575.3199999999999,2610.88,3186.2
Washington,733.02,2387.84,3120.8599999999997
Maine,394.82,2281.24,2676.06
New Hampshire,428.64,2167.67,2596.3099999999995
Oregon,468.16,2025.4,2493.56
Colorado,639.16,1530.5299999999997,2169.6899999999996
North Dakota,717.06,1106.1799999999998,1823.24
Delaware,298.68,1494.04,1792.7199999999998
South Dakota,381.9,1275.92,1657.8200000000002
Utah,403.18000000000006,1227.54,1630.7199999999998
Idaho,325.28,1202.53,1527.81
Alaska,490.2,792.53,1282.73
Wyoming,362.52000000000004,845.83,1208.35
Montana,392.92,641.65,1034.5700000000002
Nevada,324.90000000000003,669.53,994.4300000000001
Hawaii,53.2,107.00999999999999,160.20999999999998
Washington (state),39.14,102.08999999999999,141.23
Rhode Island,41.8,82.82,124.61999999999999
Georgia (U.S. state),23.94,41.41,65.35
District of Columbia,22.8,31.979999999999997,54.78


2025-02-12 15:12:38 - root - INFO - Please check the answer again by reviewing Using data on ZIP-level median income differences between 2015 and 2018, along with the 2017 ACS employment figures, list each state in descending order of total vulnerable workers, where “vulnerable” is defined as 38% of wholesale trade employees and 41% of manufacturing employees in 2017. Your results should include the state name, the number of vulnerable wholesale trade workers, the number of vulnerable manufacturing workers, and the combined total of these vulnerable workers., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
State_Name,Vulnerable_Wholesale_Trade_Workers,Vulnerable_Manufacturing_Workers,Total_Vulnerable_Workers
state1:str,vul_wholesale1:int,vul_manufacturing1:int,total_vulnerable1:int
state2:str,vul_wholesale2:int,vul_manufacturing2:int,total_vulnerable2:int
...
(Attention: answer in descending order of Total_Vulnerable_Workers)
```

The table above lists each state in descending order based on the total number of vulnerable workers, where vulnerable workers are calculated as 38% of wholesale trade employees and 41% of manufacturing employees in 2017. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
state_name,vulnerable_wholesale_trade_workers,vulnerable_manufacturing_workers,total_vulnerable_workers
Texas,9645.92,30513.839999999997,40159.759999999995
Pennsylvania,3441.66,20519.269999999997,23960.93
Ohio,2785.4,21058.829999999998,23844.23
Louisiana,4142.76,17622.21,21764.969999999998
New York,4235.86,15251.179999999998,19487.039999999997
Illinois,3047.6000000000004,14336.47,17384.07
Indiana,1706.58,14766.56,16473.14
New Jersey,4292.1,10622.279999999999,14914.38
Alabama,1851.3600000000001,12878.51,14729.869999999999
Georgia,2430.48,11859.66,14290.14
California,3373.6400000000003,10439.83,13813.47
North Carolina,1675.8,11178.65,12854.449999999999
Tennessee,1719.88,10877.3,12597.18
Iowa,1757.12,10415.64,12172.76
Arkansas,1726.3400000000001,9825.65,11551.989999999998
South Carolina,1377.12,10086.0,11463.119999999999
Puerto Rico,2740.18,8662.48,11402.66
Florida,3441.28,6974.099999999999,10415.38
Kentucky,1402.96,8760.06,10163.02
Virginia,1610.0600000000002,8517.75,10127.81
Mississippi,1149.12,8910.939999999999,10060.06
Michigan,966.34,8445.18,9411.52
Missouri,1239.56,7717.84,8957.4
Minnesota,1420.44,7444.78,8865.22
Massachusetts,1507.46,7227.07,8734.529999999999
West Virginia,1483.1399999999999,5498.099999999999,6981.24
Connecticut,1242.22,5609.62,6851.84
Kansas,1143.8,5568.209999999999,6712.009999999999
Maryland,1413.98,4175.849999999999,5589.829999999999
Oklahoma,914.28,4669.08,5583.360000000001
Wisconsin,551.76,4943.78,5495.54
Arizona,1179.8999999999999,3455.0699999999997,4634.969999999999
New Mexico,1007.76,2838.8399999999997,3846.6
Nebraska,590.52,2931.5,3522.0199999999995
Vermont,575.3199999999999,2610.88,3186.2
Washington,733.02,2387.84,3120.8599999999997
Maine,394.82,2281.24,2676.06
New Hampshire,428.64,2167.67,2596.3099999999995
Oregon,468.16,2025.4,2493.56
Colorado,639.16,1530.5299999999997,2169.6899999999996
North Dakota,717.06,1106.1799999999998,1823.24
Delaware,298.68,1494.04,1792.7199999999998
South Dakota,381.9,1275.92,1657.8200000000002
Utah,403.18000000000006,1227.54,1630.7199999999998
Idaho,325.28,1202.53,1527.81
Alaska,490.2,792.53,1282.73
Wyoming,362.52000000000004,845.83,1208.35
Montana,392.92,641.65,1034.5700000000002
Nevada,324.90000000000003,669.53,994.4300000000001
Hawaii,53.2,107.00999999999999,160.20999999999998
Washington (state),39.14,102.08999999999999,141.23
Rhode Island,41.8,82.82,124.61999999999999
Georgia (U.S. state),23.94,41.41,65.35
District of Columbia,22.8,31.979999999999997,54.78
Current sql:
WITH income_decreased_zips AS (
    SELECT
        LPAD(TRIM(t2015."geo_id"), 5, '0') AS "zip_code"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
        JOIN "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
            ON t2015."geo_id" = t2018."geo_id"
    WHERE
        t2015."median_income" IS NOT NULL
        AND t2018."median_income" IS NOT NULL
        AND (t2018."median_income" - t2015."median_income") < 0
),
employment_data AS (
    SELECT
        LPAD(TRIM(emp."geo_id"), 5, '0') AS "zip_code",
        emp."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale_trade_workers",
        emp."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
    WHERE
        emp."employed_wholesale_trade" IS NOT NULL
        AND emp."employed_manufacturing" IS NOT NULL
),
zip_state_mapping AS (
    SELECT
        LPAD(TRIM(zc."zip_code"), 5, '0') AS "zip_code",
        zc."state_name"
    FROM
        "CENSUS_BUREAU_ACS_2"."GEO_US_BOUNDARIES"."ZIP_CODES" AS zc
    WHERE
        zc."state_name" IS NOT NULL
)
SELECT
    zs."state_name",
    SUM(ed."vulnerable_wholesale_trade_workers") AS "vulnerable_wholesale_trade_workers",
    SUM(ed."vulnerable_manufacturing_workers") AS "vulnerable_manufacturing_workers",
    SUM(ed."vulnerable_wholesale_trade_workers" + ed."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_decreased_zips AS id
    JOIN employment_data AS ed ON id."zip_code" = ed."zip_code"
    JOIN zip_state_mapping AS zs ON id."zip_code" = zs."zip_code"
GROUP BY
    zs."state_name"
ORDER BY
    "total_vulnerable_workers" DESC NULLS LAST;
2025-02-12 15:13:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 15:13:23 - root - INFO - ```sql
WITH income_decreased_zips AS (
    SELECT
        LPAD(TRIM(t2015."geo_id"), 5, '0') AS "zip_code"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2015_5YR" AS t2015
    JOIN
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2018_5YR" AS t2018
        ON t2015."geo_id" = t2018."geo_id"
    WHERE
        t2015."median_income" IS NOT NULL
        AND t2018."median_income" IS NOT NULL
        AND (t2018."median_income" - t2015."median_income") < 0
),
employment_data AS (
    SELECT
        LPAD(TRIM(emp."geo_id"), 5, '0') AS "zip_code",
        ROUND(emp."employed_wholesale_trade" * 0.38, 4) AS "vulnerable_wholesale_trade_workers",
        ROUND(emp."employed_manufacturing" * 0.41, 4) AS "vulnerable_manufacturing_workers"
    FROM
        "CENSUS_BUREAU_ACS_2"."CENSUS_BUREAU_ACS"."ZIP_CODES_2017_5YR" AS emp
    WHERE
        emp."employed_wholesale_trade" IS NOT NULL
        AND emp."employed_manufacturing" IS NOT NULL
),
zip_state_mapping AS (
    SELECT
        LPAD(TRIM(zc."zip_code"), 5, '0') AS "zip_code",
        zc."state_name"
    FROM
        "CENSUS_BUREAU_ACS_2"."GEO_US_BOUNDARIES"."ZIP_CODES" AS zc
    WHERE
        zc."state_name" IS NOT NULL
)
SELECT
    zs."state_name",
    SUM(ed."vulnerable_wholesale_trade_workers") AS "vulnerable_wholesale_trade_workers",
    SUM(ed."vulnerable_manufacturing_workers") AS "vulnerable_manufacturing_workers",
    SUM(ed."vulnerable_wholesale_trade_workers" + ed."vulnerable_manufacturing_workers") AS "total_vulnerable_workers"
FROM
    income_decreased_zips AS id
JOIN
    employment_data AS ed ON id."zip_code" = ed."zip_code"
JOIN
    zip_state_mapping AS zs ON id."zip_code" = zs."zip_code"
GROUP BY
    zs."state_name"
ORDER BY
    "total_vulnerable_workers" DESC NULLS LAST;
```
2025-02-12 15:13:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 15:13:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 15:13:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 15:13:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 54
2025-02-12 15:13:24 - snowflake.connector.connection - INFO - closed
2025-02-12 15:13:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 15:13:25 - root - INFO - itercount: 3
2025-02-12 15:13:25 - root - INFO - 0
2025-02-12 15:13:25 - root - INFO - Total iteration counts: 3
