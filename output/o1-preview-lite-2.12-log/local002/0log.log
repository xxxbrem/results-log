2025-02-10 17:32:18 - openai._base_client - INFO - Retrying request to /chat/completions in 0.403092 seconds
2025-02-10 17:33:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:33:03 - root - INFO - SQL:
-- 1. Get a list of all product categories in English
SELECT DISTINCT "product_category_name_english"
FROM "product_category_name_translation"
LIMIT 100
Results:
product_category_name_english
health_beauty
computers_accessories
auto
bed_bath_table
furniture_decor
sports_leisure
perfumery
housewares
telephony
watches_gifts
food_drink
baby
stationery
tablets_printing_image
toys
fixed_telephony
garden_tools
fashion_bags_accessories
small_appliances
consoles_games
audio
fashion_shoes
cool_stuff
luggage_accessories
air_conditioning
construction_tools_construction
kitchen_dining_laundry_garden_furniture
costruction_tools_garden
fashion_male_clothing
pet_shop
office_furniture
market_place
electronics
home_appliances
party_supplies
home_confort
costruction_tools_tools
agro_industry_and_commerce
furniture_mattress_and_upholstery
books_technical
home_construction
musical_instruments
furniture_living_room
construction_tools_lights
industry_commerce_and_business
food
art
furniture_bedroom
books_general_interest
construction_tools_safety
fashion_underwear_beach
fashion_sport
signaling_and_security
computers
christmas_supplies
fashio_female_clothing
home_appliances_2
books_imported
drinks
cine_photo
la_cuisine
music
home_comfort_2
small_appliances_home_oven_and_coffee
cds_dvds_musicals
dvds_blu_ray
flowers
arts_and_craftmanship
diapers_and_hygiene
fashion_childrens_clothes
security_and_services

2025-02-10 17:33:03 - root - INFO - SQL:
-- 2. Find all products in the 'toys' category
SELECT p."product_id", p."product_category_name"
FROM "products" p
JOIN "product_category_name_translation" t
  ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Results:
product_id,product_category_name
002c6dab60557c48cfd6c2222ef7fd76,brinquedos
00738f5a17ec4450e88915357b085c1e,brinquedos
009af1277432f1a05742df69cdf72d1e,brinquedos
00c744ca2f3b0e76ce227b146095d3f9,brinquedos
0103208eb1ea5a1a7359c0251a65e37a,brinquedos
01078a94cb29913dfda1a962fd4e3400,brinquedos
010c79af51e82f60de174b6da6060c0a,brinquedos
0111ab6fb41da433e0f17d3f4ec2c8f5,brinquedos
01175f0c6182b4410c669417d7e8268f,brinquedos
011ae9863bd5b15e528a16dd8ceb4772,brinquedos
01a977e282d5884149e79181506c0941,brinquedos
01c666c82f414c762ad21bffa56e8b49,brinquedos
01c9a70868bec5b748c67fcc26ce5895,brinquedos
01cf8c7364048b4b6ed0fe400667054d,brinquedos
02335f37af17baf50a91273e4bdc8ef4,brinquedos
0288f8dd74b931b4ec7a468fdd6ed040,brinquedos
029e44e66d4690b45077bee6d76799f6,brinquedos
02f381f455650d4c7b90c96dc50a6206,brinquedos
037c68f178aefdd7a880a951dedc04d1,brinquedos
03e4e6709b7d6415746769c0bc3e9131,brinquedos
03fed41c5e9067007d852ff83d602753,brinquedos
04601b648d7d2dcae6e285a41e276a3f,brinquedos
04869307f7e7dc5b07f1d83406ade1e5,brinquedos
0496f30fa502d5454825087842d7a497,brinquedos
04bd5aedb2f07b8078ef7dcbfb79db00,brinquedos
04f352bc78b371f4392b0077d5648de5,brinquedos
05555b7712bfdb1c0809b44166e33a25,brinquedos
05d26098907b7bd26c0f92feefd10eae,brinquedos
05f97ad4ce078ed1de8882e1824eb07f,brinquedos
05fb095572e53e2a567a685765101704,brinquedos
0645b477d9a79945e55ec6be1605b5a0,brinquedos
067e1aaf685cc3da73e97a0abf22561c,brinquedos
06be2efbc5799c9e578d3f6dd205b569,brinquedos
06bf70b6e1d67d96308235ef350edc61,brinquedos
06c38a87544301cba8b0fb5a0796383d,brinquedos
07133eebda0768a2ad3d68ef4d95b597,brinquedos
074112f674682b5e218463ce1732945b,brinquedos
078cd7c7e05802e62f12b568aa50ed9a,brinquedos
08065cf579a61fed0a11f26426a30d6c,brinquedos
08401f48b67a852d06105725c3013eff,brinquedos
0887a4b7b87c4f53d81db7c95de4a6c3,brinquedos
090a47567475a8de67cdc10ac38d76bf,brinquedos
09258106f546b38b0f817fc3aadf650b,brinquedos
094efc8b088034585ebda1a32da7181d,brinquedos
096e14458100c2b6d10f72d69f80cf34,brinquedos
098c663630a7a81f7d7f42a2ce0b02d7,brinquedos
09a45646f91581af2d515ba02bc0ed94,brinquedos
09d0b4ab2eaebcde59d4dd8bea2c6be6,brinquedos
0a6cf067b01351046739940c8cb7f60f,brinquedos
0a71a1f1eefa516fe0d1121e9ad00f75,brinquedos
0acad8a389d9ac863b63a5bd91d18697,brinquedos
0b871b4731c7bee9332c7c0b9a742f1e,brinquedos
0beb5829bba86b3b5301af11bff8be6a,brinquedos
0c3ed87d108f627980e66e9258f9c305,brinquedos
0c4dd7ab3593c8601e53207e02d16784,brinquedos
0c52fe573de020553e4f524ac4267c92,brinquedos
0cac4325d7aa33ada7ff2ba4d84f8874,brinquedos
0cb8c29f963ae2069fcc3afe95fd93c1,brinquedos
0cc562350ea5915979a9d5f1f888f131,brinquedos
0cd7885ebb79eda16c32c1043681fc19,brinquedos
0ce430e210535c2f40fe2f13ca31b441,brinquedos
0d1d0db051b49daf3c58068768d8fd2d,brinquedos
0d56b4fd97465d99b6ed174ffc7ba133,brinquedos
0d826eba8e0a2ae3bca9e3a947dd756d,brinquedos
0dc7e2749b6f2da894167fc88c86a2cc,brinquedos
0dcbc0d012d42719216ea7dff6b90a6f,brinquedos
0ddee7337ebe743e2d8f2fdfd671729a,brinquedos
0e4ed218b40ef29464d9a9c778ea123f,brinquedos
0e669e3efedd9f3ab75fcbe334e1177e,brinquedos
0e8e65e0044a4d888d422517f545ba2e,brinquedos
0ef539a5334aaf06f2a028d08021f681,brinquedos
0efaf4b155c6545bdc426ec0722cceaa,brinquedos
0f24b7516c5b67c9c686848db9759d88,brinquedos
0f2d139d3c1f8d504bea138f27a2fad0,brinquedos
0f3547f2b32d5660a50961768fe2d929,brinquedos
0f40837cdd9606e43215010f9e8fce41,brinquedos
0f4d27b820e317c951649da022895e0e,brinquedos
0f677d256ee3a3fa0e23419b98573cdb,brinquedos
0f6e2c3bbb97980782ed6cb1506f5d95,brinquedos
0f80705139ce16ea35bb489987399b55,brinquedos
0f840300fe45ba963a5d215b62e6f767,brinquedos
1067af1d38844dcfaa3471839f922c27,brinquedos
10b121bc6ceb3f390402649881a15554,brinquedos
110372508609f644a4ed639c1c9440fa,brinquedos
110e153a52beae118fe6dc43ef592e0b,brinquedos
1114429023023d2546ff428bfda1abcc,brinquedos
11165ade430c6cc010bb0042fe88d150,brinquedos
112dad9870ca76046f327b9c08f00b29,brinquedos
1147151b874f436976ef5ad14a8a7694,brinquedos
118fa7a08a83564776c37433aca3ca71,brinquedos
11b095275420b5d5123e163f058256c3,brinquedos
11d5f8f3c96fff33d7e8bcbb54c8c79e,brinquedos
121a6ac524b24aa5cd62dc2094097a1b,brinquedos
1226cd37bd51c6407009e8fe54f1cf29,brinquedos
1261bcae25b0000829246aa58e284a2f,brinquedos
127b372f0c2ee673b04d38f8a6325a2b,brinquedos
12a947baa3e0ab6254ebfec789934fd5,brinquedos
12f749c76f15e9bf5743bebda92da24a,brinquedos
1341fe21db99218918b57ca553968a50,brinquedos
13641c883402cc251cdb1f7f817e9148,brinquedos

2025-02-10 17:33:03 - root - INFO - SQL:
-- 3. List all orders with their purchase timestamps
SELECT "order_id", "order_purchase_timestamp"
FROM "orders"
LIMIT 100
Results:
Too long, hard cut:
order_id,order_purchase_timestamp
e481f51cbdc54678b7cc49136f2d6af7,2017-10-02 10:56:33
53cdb2fc8bc7dce0b6741e2150273451,2018-07-24 20:41:37
47770eb9100c2d0c44946d9cf07ec65d,2018-08-08 08:38:49
949d5b44dbf5de918fe9c16f97b45f8a,2017-11-18 19:28:06
ad21c59c0840e6cb83a9ceb5573f8159,2018-02-13 21:18:39
a4591c265e18cb1dcee52889e2d8acc3,2017-07-09 21:57:05
136cce7faa42fdb2cefd53fdc79a6098,2017-04-11 12:22:08
6514b8ad8028c9f2cc2374ded245783f,2017-05-16 13:10:30
76c6e866289321a7c93b82b54852dc33,2017-01-23 18:29:09
e69bfb5eb88e0ed6a785585b27e16dbf,2017-07-29 11:55:02
e6ce16cb79ec1d90b1da9085a6118aeb,2017-05-16 19:41:10
34513ce0c4fab462a55830c0989c7edb,2017-07-13 19:58:11
82566a660a982b15fb86e904c8d32918,2018-06-07 10:06:19
5ff96c15d0b717ac6ad1f3d77225a350,2018-07-25 17:44:10
432aaf21d85167c2c86ec9448c4e42cc,2018-03-01 14:14:28
dcb36b511fcac050b97cd5c05de84dc3,2018-06-07 19:03:12
403b97836b0c04a622354cf531062e5f,2018-01-02 19:00:43
116f0b09343b49556bbad5f35bee0cdf,2017-12-26 23:41:31
85ce859fd6dc634de8d2f1e290444043,2017-11-21 00:03:41
83018ec114eee8641c97e08f7b4e926f,2017-10-26 15:54:26
203096f03d82e0dffbc41ebc2e2bcfb7,2017-09-18 14:31:30
f848643eec1d69395095eb3840d2051e,2018-03-15 08:52:40
2807d0e504d6d4894d41672727bc139f,2018-02-03 20:37:35
95266dbfb7e20354baba07964dac78d5,2018-01-08 07:55:29
f3e7c359154d965827355f39d6b1fdac,2018-08-09 11:44:40
fbf9ac61453ac646ce8ad9783d7d0af6,2018-02-20 23:46:53
acce194856392f074dbf9dada14d8d82,2018-06-04 00:00:13
dd78f560c270f1909639c11b925620ea,2018-03-12 01:50:26
91b2a010e1e45e6ba3d133fa997597be,2018-05-02 11:45:38
ecab90c9933c58908d3d6add7c6f5ae3,2018-02-25 13:50:30
f70a0aff17df5a6cdd9a7196128bd354,2017-08-10 11:58:33
1790eea0b567cf50911c057cf20f90f9,2018-04-16 21:15:39
989225ba6d0ebd5873335f7e01de2ae7,2017-12-12 13:56:04
d887b52c6516beb39e8cd44a5f8b60f7,2018-02-03 12:38:58
b276e4f8c0fb86bd82fce576f21713e0,2018-07-29 23:34:51
8563039e855156e48fccee4d611a3196,2018-02-17 15:59:46
60550084e6b4c0cb89a87df1f3e5ebd9,2018-02-21 18:15:12
5acce57f8d9dfd55fa48e212a641a69d,2017-07-31 21:37:10
434d158e96bdd6972ad6e6d73ddcfd22,2018-06-01 12:23:13
7206b86ea789983f7a273ea7fa0bc2a8,2018-03-26 17:12:18
1e7aff52cdbb2451ace09d0f848c3699,2017-05-19 18:53:40
6ea2f835b4556291ffdc53fa0b3b95e8,2017-11-24 21:27:48
948097deef559c742e7ce321e5e58919,2017-08-04 17:10:39
d22e9fa5731b9e30e8b27afcdc2f8563,2018-08-04 23:25:30
ee64d42b8cf066f35eac1cf57de1aa85,2018-06-04 16:44:48
6ebaec694d7025e2ad4a05dba887c032,2017-05-18 13:55:47
d17dc4a904426827ca80f2ccb3a6be56,2017-05-14 20:28:25
25f4376934e13d3508486352e11a5db0,2018-05-17 16:59:11
5820a1100976432c7968a52da59e9364,2018-07-29 11:24:17
2ce1ad82022c1ba30c2079502ac725aa,2017-08-09 20:19:05
138849fd84dff2fb4ca70a0a34c4aa1c,2018-02-01 14:02:19
47aa4816b27ba60ec948cd019cc1afc1,2018-06-26 13:42:52
9faeb9b2746b9d7526aef5acb08e2aa0,2018-07-26 14:39:59
641fb0752bf5b5940c376b3a8bb9dc52,2017-12-15 00:06:10
e425680f760cbc130be3e53a9773c584,2017-08-31 08:15:24
40c5e18f7d112b59b3e5113a59a905b3,2018-06-11 10:25:52
734e7d1bbaeb2ff82521ca0fe6fb6f79,2018-06-11 08:18:19
66e4624ae69e7dc89bd50222b59f581f,2018-03-09 14:50:15
a685d016c8a26f71a0bb67821070e398,2017-03-13 18:14:36
2edfd6d1f0b4cd0db4bf37b1b224d855,2017-06-13 21:11:26
68873cf91053cd11e6b49a766db5af1a,2017-11-30 22:02:15
f346ad4ee8f630e5e4ddaf862a34e6dd,2018-08-05 13:09:48
8f06cc6465925031568537b815f1198d,2017-11-15 11:31:41
ccbabeb0b02433bd0fcbac46e70339f2,2018-02-19 20:31:09
688052146432ef8253587b930b01a06d,2018-04-22 08:48:13
f271576bed568e896f99eb710cd3a6f8,2018-01-07 21:44:54
686541986ecfb7d9296eb67719973bf0,2018-02-10 13:26:59
68e48e68da1f50f7c5838ea75e3a20dd,2018-06-18 16:02:23
b52cc4919de82b4d696a4380d10804a3,2018-06-13 13:47:39
fdf128b3630c21adc9ca4fb8a51b68ec,2018-07-15 08:33:19
a6aeb116d2cb5013eb8a94585b71ffef,2017-09-13 14:27:11
fa516182d28f96f5f5c651026b0749ee,2018-04-13 08:44:17
6abaad69b8b349c3a529b4b91ce18e46,2018-02-15 10:33:30
974c1993ab8024d3ed16229183c2308d,2017-02-20 11:45:39
82bce245b1c9148f8d19a55b9ff70644,2017-04-20 17:15:46
a910f58086d58b3ae6f37aa712d377b9,2017-09-15 09:19:48
bd4bd0194d6d29f83b8557d4b89b572a,2018-07-28 16:52:55
634e8f4c0f6744a626f77f39770ac6aa,2017-08-09 18:32:47
6d25592267349b322799e2beb687871e,2018-08-26 22:04:34
b8801cccd8068de30112e4f49903d74a,2017-07-30 03:06:35
2711a938db643b3f0b62ee2c8a2784aa,2017-12-22 00:17:37
3bc77ce8be27211bac313c2daa402d1a,2017-04-06 22:39:29
10c320f977c6a18f91b2d14be13128c6,2017-05-09 20:48:59
0a4a2fccb27bd83a892fa503987a595b,2017-04-20 20:42:44
e4de6d53ecff736bc68804b0b6e9f635,2017-10-16 14:56:50
6b860b35691d486e45dc98e3514ec5f6,2017-12-08 09:42:43
ec341c54a5ebf8ee0a67a8632aa7579b,2017-08-26 16:53:30
cadbb3657dac2dbbd5b84b12e7b78aad,2018-02-27 12:55:42
9defaf92cff22420e4e8ef7784815a55,2018-05-11 13:10:51
20e0101b20700188cadb288126949685,2018-01-22 19:22:22
0e782c3705510e717d28907746cbda82,2018-05-01 08:12:37
d3d6788577c9592da441752e8a1dd5e3,2017-09-19 22:17:15
86f21bf63784876b9fd6d35f46581d72,2018-04-11 22:32:31
8447ff843b2616c50c0ced28ab1dae03,2017

2025-02-10 17:33:04 - root - INFO - SQL:
-- 4. Get toy product sales with order dates
SELECT oi."order_id", oi."product_id", o."order_purchase_timestamp"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Results:
Too long, hard cut:
order_id,product_id,order_purchase_timestamp
13d5066bb747cafa23f1bb6d1838eee4,002c6dab60557c48cfd6c2222ef7fd76,2018-03-15 10:44:26
3ae3969a6f3d5e57d4f9fd85868ffefc,00738f5a17ec4450e88915357b085c1e,2017-04-26 13:45:25
02e827a9f1e829b50b81eb9e26588ed9,009af1277432f1a05742df69cdf72d1e,2017-08-11 18:32:57
18a3784d31f9cf5e372cd05c15ce1502,009af1277432f1a05742df69cdf72d1e,2017-08-21 13:48:03
466334b9ec76342cf368c99aa06375cc,009af1277432f1a05742df69cdf72d1e,2017-12-04 11:30:44
8dd65fba2478cb614c25783cd1be3449,009af1277432f1a05742df69cdf72d1e,2017-07-08 21:11:41
a5cb9da004bf54e017f20e3c1f8629f7,009af1277432f1a05742df69cdf72d1e,2017-11-06 07:20:25
b0b3dc7e3c7cdba072b4e086dc5c3cec,009af1277432f1a05742df69cdf72d1e,2017-07-14 21:31:30
e37fbd45af4b09e473cb0805b49bdca7,009af1277432f1a05742df69cdf72d1e,2017-08-03 12:48:23
a7881f54a20f4f7547971f089438b078,00c744ca2f3b0e76ce227b146095d3f9,2017-03-22 10:35:21
07629443859f99dfac4443b102f31ead,0103208eb1ea5a1a7359c0251a65e37a,2018-08-20 18:55:21
3bb3f2f93941b43b0eef5618c565d650,01078a94cb29913dfda1a962fd4e3400,2017-12-05 20:11:25
976d9425872f2283bdadfb50fd7e4188,01078a94cb29913dfda1a962fd4e3400,2017-12-25 17:15:40
23185987a928a964abc85b9dec1f39e2,010c79af51e82f60de174b6da6060c0a,2017-09-23 15:31:05
44a0eec1375288c11308ac7d16892f6f,010c79af51e82f60de174b6da6060c0a,2017-10-10 15:14:12
9277d9d48b3a4ca5a90e365f38d095e9,0111ab6fb41da433e0f17d3f4ec2c8f5,2017-10-10 17:04:13
af209eb4f7a3bd965aced8fe559ccd3b,0111ab6fb41da433e0f17d3f4ec2c8f5,2017-09-09 20:06:48
b61f906e4d28111f250cdf42a93a5967,0111ab6fb41da433e0f17d3f4ec2c8f5,2017-11-19 15:38:53
26110592bfcb0c6d20245c860b05f8ee,01175f0c6182b4410c669417d7e8268f,2017-11-27 10:40:11
2eebfe86623a5c27b603e640e96d8c80,011ae9863bd5b15e528a16dd8ceb4772,2017-11-17 22:40:22
4427836afdab8880f5ac2b25c710c822,011ae9863bd5b15e528a16dd8ceb4772,2018-03-09 19:08:29
611a173cc635e8416613dbe247b9408c,011ae9863bd5b15e528a16dd8ceb4772,2018-04-18 18:43:31
a6ba5666a43bd5cdaf4a6b0ea268ecf4,011ae9863bd5b15e528a16dd8ceb4772,2017-11-02 11:36:12
d0efbb6a217254d95a9e6adf0e0454af,011ae9863bd5b15e528a16dd8ceb4772,2017-11-21 16:05:13
e704e063847a3055d24d485db17e30e7,011ae9863bd5b15e528a16dd8ceb4772,2017-11-19 13:06:40
edc2a37b6c40c6ac0a792e46cf248848,011ae9863bd5b15e528a16dd8ceb4772,2017-11-03 07:58:39
a0c9d84c9ca938bbf711acbd940ba416,01a977e282d5884149e79181506c0941,2017-09-20 17:28:45
0029f17cf0e7640c5cb6825af681303f,01c666c82f414c762ad21bffa56e8b49,2018-05-02 11:59:06
06c2f55902daa48386515225a766e7d1,01c9a70868bec5b748c67fcc26ce5895,2017-12-08 19:02:53
2b6f5b5b04f0331895f9e1103ac75fb7,01c9a70868bec5b748c67fcc26ce5895,2017-12-12 08:58:41
386e8a08c195e02dc257e4b0f34780f7,01c9a70868bec5b748c67fcc26ce5895,2017-12-10 12:18:14
3ea1e7f7f7d0b7a56b20aaa1baebc19e,01c9a70868bec5b748c67fcc26ce5895,2017-12-10 15:29:09
43ada20efaad1c2c55197dd39050267f,01c9a70868bec5b748c67fcc26ce5895,2017-12-21 17:01:47
4523eafb93144f31a954666165a59423,01c9a70868bec5b748c67fcc26ce5895,2018-02-20 15:29:03
48fdee20557eb297d2cfecd7df1a82e2,01c9a70868bec5b748c67fcc26ce5895,2018-03-11 22:10:16
4a24776627df4bc781c16431b844580b,01c9a70868bec5b748c67fcc26ce5895,2017-12-18 19:58:34
53c7592439c12d02630c4f0da48614bc,01c9a70868bec5b748c67fcc26ce5895,2017-12-18 12:55:41
61bad37b59417cf4967b83748544fd52,01c9a70868bec5b748c67fcc26ce5895,2017-12-11 19:49:26
7f4e9dd947b8c7493391930878e8b778,01c9a70868bec5b748c67fcc26ce5895,2017-12-05 10:08:56
816b15129b14c066ff4f5755938aefb0,01c9a70868bec5b748c67fcc26ce5895,2018-01-11 15:32:58
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,2017-12-15 22:51:28
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,2017-12-15 22:51:28
b8e17df0f313ac216d29c0683a83b992,01c9a70868bec5b748c67fcc26ce5895,2017-12-11 15:26:43
e808b609d07ef4f022d702b20db24137,01c9a70868bec5b748c67fcc26ce5895,2018-01-14 20:28:50
73eb70779d3a8a4647f8ccf9c43d2623,01cf8c7364048b4b6ed0fe400667054d,2017-05-02 21:03:22
814823738ce02d399f917f00e77393d5,02335f37af17baf50a91273e4bdc8ef4,2018-08-13 17:09:30
1e1bb536916a9964978ee59e6d6d0cca,0288f8dd74b931b4ec7a468fdd6ed040,2017-08-30 11:57:09
467a8138ba602b8e9740eff5e08d1f23,029e44e66d4690b45077bee6d76799f6,2017-12-26 17:14:29
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,2018-05-04 07:29:14
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,2018-05-04 07:29:14
a9ddf1f40e51ec5d1c828564cef4d92e,02f381f455650d4c7b90c96dc50a6206,2017-06-07 11:49:07
8ef25ada03b56cd00e4021ea5b98f58e,037c68f178aefdd7a880a951dedc04d1,2017-10-18 12:56:16
0686d4f89fdf2b3625aa705b7ed7ac95,03e4e6709b7d6415746769c0bc3e9131,2018-03-17 10:41:45
079ad290e98bc46b5d7e0ce9fc15af1b,03e4e6709b7d6415746769c0bc3e9131,2018-04-04 20:49:44
0a3bc687e8cb91f08d67838494a0e396,03e4e6709b7d6415746769c0bc3e9131,2018-03-14 10:58:09
482df43f85d48add2d83b40f3737062d,03e4e6709b7d6415746769c0bc3e9131,2018-04-13 20:40:46
5065c673bd9aed56b2628c56c93d0619,03e4e6709b7d6415746769c0bc3e9131,2018-04-13 09:32:26
63e4d9a8a382e43251ec90778af9db66,03e4e6709b7d64157467

2025-02-10 17:33:05 - root - INFO - SQL:
-- 5. Find toy sales between '2017-01-01' and '2018-08-29'
SELECT oi."order_id", oi."product_id", oi."price", o."order_purchase_timestamp"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
LIMIT 100
Results:
Too long, hard cut:
order_id,product_id,price,order_purchase_timestamp
13d5066bb747cafa23f1bb6d1838eee4,002c6dab60557c48cfd6c2222ef7fd76,79.9,2018-03-15 10:44:26
3ae3969a6f3d5e57d4f9fd85868ffefc,00738f5a17ec4450e88915357b085c1e,23.9,2017-04-26 13:45:25
02e827a9f1e829b50b81eb9e26588ed9,009af1277432f1a05742df69cdf72d1e,59.9,2017-08-11 18:32:57
18a3784d31f9cf5e372cd05c15ce1502,009af1277432f1a05742df69cdf72d1e,59.9,2017-08-21 13:48:03
466334b9ec76342cf368c99aa06375cc,009af1277432f1a05742df69cdf72d1e,60.0,2017-12-04 11:30:44
8dd65fba2478cb614c25783cd1be3449,009af1277432f1a05742df69cdf72d1e,54.9,2017-07-08 21:11:41
a5cb9da004bf54e017f20e3c1f8629f7,009af1277432f1a05742df69cdf72d1e,60.0,2017-11-06 07:20:25
b0b3dc7e3c7cdba072b4e086dc5c3cec,009af1277432f1a05742df69cdf72d1e,54.9,2017-07-14 21:31:30
e37fbd45af4b09e473cb0805b49bdca7,009af1277432f1a05742df69cdf72d1e,54.9,2017-08-03 12:48:23
a7881f54a20f4f7547971f089438b078,00c744ca2f3b0e76ce227b146095d3f9,33.9,2017-03-22 10:35:21
07629443859f99dfac4443b102f31ead,0103208eb1ea5a1a7359c0251a65e37a,759.9,2018-08-20 18:55:21
3bb3f2f93941b43b0eef5618c565d650,01078a94cb29913dfda1a962fd4e3400,79.9,2017-12-05 20:11:25
976d9425872f2283bdadfb50fd7e4188,01078a94cb29913dfda1a962fd4e3400,69.9,2017-12-25 17:15:40
23185987a928a964abc85b9dec1f39e2,010c79af51e82f60de174b6da6060c0a,87.9,2017-09-23 15:31:05
44a0eec1375288c11308ac7d16892f6f,010c79af51e82f60de174b6da6060c0a,87.9,2017-10-10 15:14:12
9277d9d48b3a4ca5a90e365f38d095e9,0111ab6fb41da433e0f17d3f4ec2c8f5,35.0,2017-10-10 17:04:13
af209eb4f7a3bd965aced8fe559ccd3b,0111ab6fb41da433e0f17d3f4ec2c8f5,35.0,2017-09-09 20:06:48
b61f906e4d28111f250cdf42a93a5967,0111ab6fb41da433e0f17d3f4ec2c8f5,35.0,2017-11-19 15:38:53
26110592bfcb0c6d20245c860b05f8ee,01175f0c6182b4410c669417d7e8268f,35.09,2017-11-27 10:40:11
2eebfe86623a5c27b603e640e96d8c80,011ae9863bd5b15e528a16dd8ceb4772,649.9,2017-11-17 22:40:22
4427836afdab8880f5ac2b25c710c822,011ae9863bd5b15e528a16dd8ceb4772,749.9,2018-03-09 19:08:29
611a173cc635e8416613dbe247b9408c,011ae9863bd5b15e528a16dd8ceb4772,749.9,2018-04-18 18:43:31
a6ba5666a43bd5cdaf4a6b0ea268ecf4,011ae9863bd5b15e528a16dd8ceb4772,599.9,2017-11-02 11:36:12
d0efbb6a217254d95a9e6adf0e0454af,011ae9863bd5b15e528a16dd8ceb4772,749.9,2017-11-21 16:05:13
e704e063847a3055d24d485db17e30e7,011ae9863bd5b15e528a16dd8ceb4772,649.9,2017-11-19 13:06:40
edc2a37b6c40c6ac0a792e46cf248848,011ae9863bd5b15e528a16dd8ceb4772,599.9,2017-11-03 07:58:39
a0c9d84c9ca938bbf711acbd940ba416,01a977e282d5884149e79181506c0941,35.0,2017-09-20 17:28:45
0029f17cf0e7640c5cb6825af681303f,01c666c82f414c762ad21bffa56e8b49,94.9,2018-05-02 11:59:06
06c2f55902daa48386515225a766e7d1,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-08 19:02:53
2b6f5b5b04f0331895f9e1103ac75fb7,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-12 08:58:41
386e8a08c195e02dc257e4b0f34780f7,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-10 12:18:14
3ea1e7f7f7d0b7a56b20aaa1baebc19e,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-10 15:29:09
43ada20efaad1c2c55197dd39050267f,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-21 17:01:47
4523eafb93144f31a954666165a59423,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-02-20 15:29:03
48fdee20557eb297d2cfecd7df1a82e2,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-03-11 22:10:16
4a24776627df4bc781c16431b844580b,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-18 19:58:34
53c7592439c12d02630c4f0da48614bc,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-18 12:55:41
61bad37b59417cf4967b83748544fd52,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-11 19:49:26
7f4e9dd947b8c7493391930878e8b778,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-05 10:08:56
816b15129b14c066ff4f5755938aefb0,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-01-11 15:32:58
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-15 22:51:28
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-15 22:51:28
b8e17df0f313ac216d29c0683a83b992,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-11 15:26:43
e808b609d07ef4f022d702b20db24137,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-01-14 20:28:50
73eb70779d3a8a4647f8ccf9c43d2623,01cf8c7364048b4b6ed0fe400667054d,229.9,2017-05-02 21:03:22
814823738ce02d399f917f00e77393d5,02335f37af17baf50a91273e4bdc8ef4,57.99,2018-08-13 17:09:30
1e1bb536916a9964978ee59e6d6d0cca,0288f8dd74b931b4ec7a468fdd6ed040,49.99,2017-08-30 11:57:09
467a8138ba602b8e9740eff5e08d1f23,029e44e66d4690b45077bee6d76799f6,39.9,2017-12-26 17:14:29
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,39.9,2018-05-04 07:29:14
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,39.9,2018-05-04 07:29:14
a9ddf1f40e51ec5d1c828564cef4d92e,02f381f455650d4c7b90c96dc50a6206,18.8,2017-06-07 11:49:07
8ef25ada03b56cd00e4021ea5b98f58e,037c68f178aefdd7a880a951dedc04d1,72.9,2017-10-18 12:56:16
0686d4f89fdf2b3625aa705b7ed7ac95,03e4e6709b7d6415746769c0bc3e9131,59.9,2018-03-17 10:41:45
079ad290e98bc46b5d7e0ce9fc15af1b,03e4e6709b7d6415746769c0bc3e9131,54.9,2018-04-04 20:49:44
0a3bc687e8cb91f08d6

2025-02-10 17:33:05 - root - INFO - SQL:
-- 6. Get daily toy sales totals in the given date range
SELECT DATE(o."order_purchase_timestamp") AS "sale_date", SUM(oi."price") AS "daily_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_date"
LIMIT 100
Results:
sale_date,daily_sales
2017-01-05,43.8
2017-01-06,159.99
2017-01-11,294.89
2017-01-15,159.9
2017-01-17,425.78000000000003
2017-01-18,280.89
2017-01-19,34.9
2017-01-22,197.88
2017-01-23,132.89000000000001
2017-01-24,1116.94
2017-01-25,613.78
2017-01-26,71.65
2017-01-27,456.87
2017-01-28,111.97999999999999
2017-01-29,259.98
2017-01-30,384.98
2017-01-31,66.99
2017-02-01,226.88
2017-02-02,224.99
2017-02-03,1558.78
2017-02-04,229.89
2017-02-06,313.79
2017-02-07,194.94
2017-02-08,249.75
2017-02-09,88.3
2017-02-10,436.78000000000003
2017-02-11,272.69
2017-02-12,1913.88
2017-02-13,244.7
2017-02-14,94.39
2017-02-15,99.80000000000001
2017-02-16,194.8
2017-02-18,938.78
2017-02-19,414.89
2017-02-20,178.49
2017-02-21,201.3
2017-02-23,147.84
2017-02-24,254.99
2017-02-28,922.6899999999999
2017-03-01,633.34
2017-03-02,89.9
2017-03-03,364.66
2017-03-04,408.78
2017-03-05,104.99
2017-03-06,517.66
2017-03-07,1239.8700000000001
2017-03-08,101.88999999999999
2017-03-09,64.9
2017-03-10,238.78
2017-03-11,872.88
2017-03-12,237.37
2017-03-13,544.77
2017-03-14,269.97
2017-03-15,491.59000000000003
2017-03-16,441.78000000000003
2017-03-18,298.89
2017-03-19,273.8
2017-03-20,49.9
2017-03-21,431.6
2017-03-22,162.79
2017-03-23,284.88
2017-03-24,1049.68
2017-03-25,899.8
2017-03-26,84.99
2017-03-27,171.79
2017-03-28,739.9
2017-03-29,123.97999999999999
2017-03-30,347.68
2017-03-31,886.6600000000001
2017-04-01,54.9
2017-04-02,639.49
2017-04-03,73.89
2017-04-04,116.88999999999999
2017-04-05,1269.17
2017-04-06,413.7
2017-04-07,668.49
2017-04-08,382.70000000000005
2017-04-09,153.76999999999998
2017-04-10,689.77
2017-04-11,295.68
2017-04-12,812.78
2017-04-13,478.99
2017-04-14,64.9
2017-04-15,172.89000000000001
2017-04-16,36.9
2017-04-17,542.78
2017-04-18,335.99
2017-04-19,434.79
2017-04-20,189.8
2017-04-21,149.79
2017-04-22,1046.59
2017-04-23,216.9
2017-04-24,319.99
2017-04-25,204.7
2017-04-26,1048.77
2017-04-27,153.98000000000002
2017-04-28,1350.66
2017-04-29,249.99
2017-04-30,469.79
2017-05-01,716.4

2025-02-10 17:33:06 - root - INFO - SQL:
-- 7. List distinct dates when toy sales occurred
SELECT DISTINCT DATE(o."order_purchase_timestamp") AS "sale_date"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Results:
sale_date
2018-03-15
2017-04-26
2017-08-11
2017-08-21
2017-12-04
2017-07-08
2017-11-06
2017-07-14
2017-08-03
2017-03-22
2018-08-20
2017-12-05
2017-12-25
2017-09-23
2017-10-10
2017-09-09
2017-11-19
2017-11-27
2017-11-17
2018-03-09
2018-04-18
2017-11-02
2017-11-21
2017-11-03
2017-09-20
2018-05-02
2017-12-08
2017-12-12
2017-12-10
2017-12-21
2018-02-20
2018-03-11
2017-12-18
2017-12-11
2018-01-11
2017-12-15
2018-01-14
2017-05-02
2018-08-13
2017-08-30
2017-12-26
2018-05-04
2017-06-07
2017-10-18
2018-03-17
2018-04-04
2018-03-14
2018-04-13
2018-04-26
2018-03-16
2018-02-08
2018-02-16
2018-03-18
2018-02-21
2018-02-19
2018-04-21
2018-06-12
2018-07-06
2018-05-13
2018-07-21
2018-05-25
2018-04-17
2017-12-06
2017-11-26
2017-11-29
2017-11-24
2017-09-11
2018-07-01
2018-08-02
2018-08-03
2017-08-16
2018-04-03
2018-02-24
2018-08-19
2017-05-12
2017-07-09
2017-09-10
2017-09-13
2018-06-04
2018-01-25
2018-02-01
2017-10-06
2018-05-09
2018-01-08
2018-04-11
2018-03-30
2018-02-07
2017-10-22
2018-04-24
2018-08-27
2018-03-13
2017-05-20
2017-08-10
2017-06-08
2017-05-15
2017-06-09
2017-05-19
2017-05-13
2017-06-11
2017-06-13

2025-02-10 17:33:06 - root - INFO - SQL:
-- 8. Retrieve prices of toy products
SELECT DISTINCT p."product_id", oi."price"
FROM "order_items" oi
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Results:
product_id,price
002c6dab60557c48cfd6c2222ef7fd76,79.9
00738f5a17ec4450e88915357b085c1e,23.9
009af1277432f1a05742df69cdf72d1e,54.9
009af1277432f1a05742df69cdf72d1e,59.9
009af1277432f1a05742df69cdf72d1e,60.0
00c744ca2f3b0e76ce227b146095d3f9,33.9
0103208eb1ea5a1a7359c0251a65e37a,759.9
01078a94cb29913dfda1a962fd4e3400,69.9
01078a94cb29913dfda1a962fd4e3400,79.9
010c79af51e82f60de174b6da6060c0a,87.9
0111ab6fb41da433e0f17d3f4ec2c8f5,35.0
01175f0c6182b4410c669417d7e8268f,35.09
011ae9863bd5b15e528a16dd8ceb4772,599.9
011ae9863bd5b15e528a16dd8ceb4772,649.9
011ae9863bd5b15e528a16dd8ceb4772,749.9
01a977e282d5884149e79181506c0941,35.0
01c666c82f414c762ad21bffa56e8b49,94.9
01c9a70868bec5b748c67fcc26ce5895,99.9
01c9a70868bec5b748c67fcc26ce5895,110.9
01cf8c7364048b4b6ed0fe400667054d,229.9
02335f37af17baf50a91273e4bdc8ef4,57.99
0288f8dd74b931b4ec7a468fdd6ed040,49.99
029e44e66d4690b45077bee6d76799f6,39.9
02f381f455650d4c7b90c96dc50a6206,18.8
037c68f178aefdd7a880a951dedc04d1,72.9
03e4e6709b7d6415746769c0bc3e9131,54.9
03e4e6709b7d6415746769c0bc3e9131,57.39
03e4e6709b7d6415746769c0bc3e9131,57.99
03e4e6709b7d6415746769c0bc3e9131,58.5
03e4e6709b7d6415746769c0bc3e9131,58.7
03e4e6709b7d6415746769c0bc3e9131,59.9
03e4e6709b7d6415746769c0bc3e9131,65.9
03fed41c5e9067007d852ff83d602753,139.99
03fed41c5e9067007d852ff83d602753,149.99
04601b648d7d2dcae6e285a41e276a3f,49.9
04869307f7e7dc5b07f1d83406ade1e5,139.9
0496f30fa502d5454825087842d7a497,38.0
0496f30fa502d5454825087842d7a497,39.0
04bd5aedb2f07b8078ef7dcbfb79db00,159.9
04f352bc78b371f4392b0077d5648de5,134.0
04f352bc78b371f4392b0077d5648de5,134.9
05555b7712bfdb1c0809b44166e33a25,129.0
05d26098907b7bd26c0f92feefd10eae,94.5
05f97ad4ce078ed1de8882e1824eb07f,39.99
05fb095572e53e2a567a685765101704,138.9
0645b477d9a79945e55ec6be1605b5a0,49.7
067e1aaf685cc3da73e97a0abf22561c,75.0
06be2efbc5799c9e578d3f6dd205b569,79.0
06bf70b6e1d67d96308235ef350edc61,69.9
06bf70b6e1d67d96308235ef350edc61,79.9
06bf70b6e1d67d96308235ef350edc61,89.9
06c38a87544301cba8b0fb5a0796383d,52.9
07133eebda0768a2ad3d68ef4d95b597,174.0
07133eebda0768a2ad3d68ef4d95b597,259.0
074112f674682b5e218463ce1732945b,320.0
078cd7c7e05802e62f12b568aa50ed9a,149.9
08065cf579a61fed0a11f26426a30d6c,84.99
08401f48b67a852d06105725c3013eff,25.0
0887a4b7b87c4f53d81db7c95de4a6c3,349.99
090a47567475a8de67cdc10ac38d76bf,44.9
09258106f546b38b0f817fc3aadf650b,48.5
094efc8b088034585ebda1a32da7181d,71.99
096e14458100c2b6d10f72d69f80cf34,269.99
096e14458100c2b6d10f72d69f80cf34,279.99
096e14458100c2b6d10f72d69f80cf34,299.99
098c663630a7a81f7d7f42a2ce0b02d7,115.0
098c663630a7a81f7d7f42a2ce0b02d7,119.0
09a45646f91581af2d515ba02bc0ed94,24.9
09d0b4ab2eaebcde59d4dd8bea2c6be6,81.2
0a6cf067b01351046739940c8cb7f60f,36.75
0a71a1f1eefa516fe0d1121e9ad00f75,23.9
0acad8a389d9ac863b63a5bd91d18697,82.9
0b871b4731c7bee9332c7c0b9a742f1e,342.0
0beb5829bba86b3b5301af11bff8be6a,109.99
0c3ed87d108f627980e66e9258f9c305,99.9
0c4dd7ab3593c8601e53207e02d16784,78.9
0c52fe573de020553e4f524ac4267c92,89.9
0cac4325d7aa33ada7ff2ba4d84f8874,39.0
0cb8c29f963ae2069fcc3afe95fd93c1,134.9
0cc562350ea5915979a9d5f1f888f131,529.9
0cd7885ebb79eda16c32c1043681fc19,269.99
0ce430e210535c2f40fe2f13ca31b441,349.9
0d1d0db051b49daf3c58068768d8fd2d,59.9
0d56b4fd97465d99b6ed174ffc7ba133,38.49
0d826eba8e0a2ae3bca9e3a947dd756d,149.0
0dc7e2749b6f2da894167fc88c86a2cc,87.9
0dcbc0d012d42719216ea7dff6b90a6f,199.99
0ddee7337ebe743e2d8f2fdfd671729a,27.49
0e4ed218b40ef29464d9a9c778ea123f,68.9
0e669e3efedd9f3ab75fcbe334e1177e,127.89
0e669e3efedd9f3ab75fcbe334e1177e,129.8
0e669e3efedd9f3ab75fcbe334e1177e,133.99
0e669e3efedd9f3ab75fcbe334e1177e,134.0
0e669e3efedd9f3ab75fcbe334e1177e,138.99
0e669e3efedd9f3ab75fcbe334e1177e,149.0
0e8e65e0044a4d888d422517f545ba2e,159.9
0ef539a5334aaf06f2a028d08021f681,469.9
0efaf4b155c6545bdc426ec0722cceaa,112.0
0f24b7516c5b67c9c686848db9759d88,119.9
0f2d139d3c1f8d504bea138f27a2fad0,129.9

2025-02-10 17:33:07 - root - INFO - SQL:
-- 9. Count the number of toy sales per day
SELECT DATE(o."order_purchase_timestamp") AS "sale_date", COUNT(*) AS "num_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_date"
LIMIT 100
Results:
sale_date,num_sales
2017-01-05,2
2017-01-06,1
2017-01-11,2
2017-01-15,1
2017-01-17,5
2017-01-18,3
2017-01-19,1
2017-01-22,3
2017-01-23,2
2017-01-24,6
2017-01-25,4
2017-01-26,2
2017-01-27,4
2017-01-28,2
2017-01-29,2
2017-01-30,2
2017-01-31,1
2017-02-01,3
2017-02-02,2
2017-02-03,5
2017-02-04,2
2017-02-06,3
2017-02-07,2
2017-02-08,4
2017-02-09,2
2017-02-10,4
2017-02-11,4
2017-02-12,3
2017-02-13,5
2017-02-14,2
2017-02-15,2
2017-02-16,2
2017-02-18,4
2017-02-19,2
2017-02-20,3
2017-02-21,4
2017-02-23,3
2017-02-24,2
2017-02-28,4
2017-03-01,7
2017-03-02,1
2017-03-03,5
2017-03-04,5
2017-03-05,1
2017-03-06,7
2017-03-07,4
2017-03-08,2
2017-03-09,1
2017-03-10,3
2017-03-11,3
2017-03-12,4
2017-03-13,6
2017-03-14,3
2017-03-15,4
2017-03-16,4
2017-03-18,3
2017-03-19,3
2017-03-20,1
2017-03-21,5
2017-03-22,3
2017-03-23,3
2017-03-24,5
2017-03-25,2
2017-03-26,1
2017-03-27,3
2017-03-28,1
2017-03-29,2
2017-03-30,5
2017-03-31,6
2017-04-01,1
2017-04-02,6
2017-04-03,2
2017-04-04,2
2017-04-05,9
2017-04-06,4
2017-04-07,9
2017-04-08,4
2017-04-09,3
2017-04-10,7
2017-04-11,4
2017-04-12,5
2017-04-13,4
2017-04-14,1
2017-04-15,2
2017-04-16,1
2017-04-17,4
2017-04-18,2
2017-04-19,3
2017-04-20,3
2017-04-21,3
2017-04-22,5
2017-04-23,2
2017-04-24,5
2017-04-25,3
2017-04-26,5
2017-04-27,3
2017-04-28,6
2017-04-29,1
2017-04-30,4
2017-05-01,8

2025-02-10 17:33:08 - root - INFO - SQL:
-- 10. Get monthly toy sales totals
SELECT strftime('%Y-%m', o."order_purchase_timestamp") AS "sale_month", SUM(oi."price") AS "monthly_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_month"
LIMIT 100
Results:
sale_month,monthly_sales
2017-01,4814.09
2017-02,9403.34
2017-03,12429.47
2017-04,13039.43
2017-05,22626.95
2017-06,15476.35
2017-07,24511.72
2017-08,18126.87
2017-09,31399.22
2017-10,34633.01
2017-11,64320.89
2017-12,57194.14
2018-01,21948.23
2018-02,14778.93
2018-03,23407.4
2018-04,23352.38
2018-05,31767.3
2018-06,21221.45
2018-07,17277.29
2018-08,17689.15

2025-02-10 17:33:08 - root - INFO - SQL:
-- 11. Get average daily toy sales
SELECT AVG(daily_sales) AS "average_daily_sales"
FROM (
  SELECT DATE(o."order_purchase_timestamp") AS "sale_date", SUM(oi."price") AS "daily_sales"
  FROM "order_items" oi
  JOIN "orders" o ON oi."order_id" = o."order_id"
  JOIN "products" p ON oi."product_id" = p."product_id"
  JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
  WHERE t."product_category_name_english" = 'toys'
    AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
  GROUP BY "sale_date"
)
LIMIT 100
Results:
average_daily_sales
825.1593975903614

2025-02-10 17:33:08 - root - INFO - itercount: 0
2025-02-10 17:33:08 - root - INFO - Table: product_category_name_translationDDL:
CREATE TABLE "product_category_name_translation" (
"product_category_name" TEXT,
  "product_category_name_english" TEXT
)
Table: sellersDDL:
CREATE TABLE "sellers" (
"seller_id" TEXT,
  "seller_zip_code_prefix" INTEGER,
  "seller_city" TEXT,
  "seller_state" TEXT
)
Table: customersDDL:
CREATE TABLE "customers" (
"customer_id" TEXT,
  "customer_unique_id" TEXT,
  "customer_zip_code_prefix" INTEGER,
  "customer_city" TEXT,
  "customer_state" TEXT
)
Table: geolocationDDL:
CREATE TABLE "geolocation" (
"geolocation_zip_code_prefix" INTEGER,
  "geolocation_lat" REAL,
  "geolocation_lng" REAL,
  "geolocation_city" TEXT,
  "geolocation_state" TEXT
)
Table: order_itemsDDL:
CREATE TABLE "order_items" (
"order_id" TEXT,
  "order_item_id" INTEGER,
  "product_id" TEXT,
  "seller_id" TEXT,
  "shipping_limit_date" TEXT,
  "price" REAL,
  "freight_value" REAL
)
Table: order_paymentsDDL:
CREATE TABLE "order_payments" (
"order_id" TEXT,
  "payment_sequential" INTEGER,
  "payment_type" TEXT,
  "payment_installments" INTEGER,
  "payment_value" REAL
)
Table: order_reviewsDDL:
CREATE TABLE "order_reviews" (
"review_id" TEXT,
  "order_id" TEXT,
  "review_score" INTEGER,
  "review_comment_title" TEXT,
  "review_comment_message" TEXT,
  "review_creation_date" TEXT,
  "review_answer_timestamp" TEXT
)
Table: ordersDDL:
CREATE TABLE "orders" (
"order_id" TEXT,
  "customer_id" TEXT,
  "order_status" TEXT,
  "order_purchase_timestamp" TEXT,
  "order_approved_at" TEXT,
  "order_delivered_carrier_date" TEXT,
  "order_delivered_customer_date" TEXT,
  "order_estimated_delivery_date" TEXT
)
Table: productsDDL:
CREATE TABLE "products" (
"product_id" TEXT,
  "product_category_name" TEXT,
  "product_name_lenght" REAL,
  "product_description_lenght" REAL,
  "product_photos_qty" REAL,
  "product_weight_g" REAL,
  "product_length_cm" REAL,
  "product_height_cm" REAL,
  "product_width_cm" REAL
)
Table: leads_qualifiedDDL:
CREATE TABLE "leads_qualified" (
"mql_id" TEXT,
  "first_contact_date" TEXT,
  "landing_page_id" TEXT,
  "origin" TEXT
)
Table: leads_closedDDL:
CREATE TABLE "leads_closed" (
"mql_id" TEXT,
  "seller_id" TEXT,
  "sdr_id" TEXT,
  "sr_id" TEXT,
  "won_date" TEXT,
  "business_segment" TEXT,
  "lead_type" TEXT,
  "lead_behaviour_profile" TEXT,
  "has_company" INTEGER,
  "has_gtin" INTEGER,
  "average_stock" TEXT,
  "business_type" TEXT,
  "declared_product_catalog_size" REAL,
  "declared_monthly_revenue" REAL
)
External knowledge that might be helpful: 
None
The table structure information is (table names): 
['product_category_name_translation', 'sellers', 'customers', 'geolocation', 'order_items', 'order_payments', 'order_reviews', 'orders', 'products', 'leads_qualified', 'leads_closed']
Begin Exploring Related Columns
**Relevant columns and their potential usage:**

- **"orders"."order_id"**: Used to join with "order_items" to connect orders with their items.
- **"orders"."order_purchase_timestamp"**: Date when the order was placed; used to obtain daily sales data and filter by date range.
- **"order_items"."order_id"**: Used to join with "orders" to get the purchase date.
- **"order_items"."product_id"**: Used to join with "products" to get product details.
- **"order_items"."price"**: Price of the item; used to calculate sales amounts.
- **"products"."product_id"**: Used to join with "order_items".
- **"products"."product_category_name"**: Identifies the category of the product.
- **"product_category_name_translation"."product_category_name"**: Used to join with "products" to translate category names.
- **"product_category_name_translation"."product_category_name_english"**: English translation of the product category name; used to filter for 'toys'.

**Conditions that may be used:**

- Filter orders where **"product_category_name_english" = 'toys'** to focus on toy sales.
- Filter dates between **'2017-01-01'** and **'2018-08-29'** in **"order_purchase_timestamp"**.
- Use dates in **December 2018** to predict and calculate moving averages for **December 5 to 8, 2018**.

---

**SQL queries to explore the data:**

```sql
-- 1. Get a list of all product categories in English
SELECT DISTINCT "product_category_name_english"
FROM "product_category_name_translation"
LIMIT 100;

-- 2. Find all products in the 'toys' category
SELECT p."product_id", p."product_category_name"
FROM "products" p
JOIN "product_category_name_translation" t
  ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100;

-- 3. List all orders with their purchase timestamps
SELECT "order_id", "order_purchase_timestamp"
FROM "orders"
LIMIT 100;

-- 4. Get toy product sales with order dates
SELECT oi."order_id", oi."product_id", o."order_purchase_timestamp"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100;

-- 5. Find toy sales between '2017-01-01' and '2018-08-29'
SELECT oi."order_id", oi."product_id", oi."price", o."order_purchase_timestamp"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
LIMIT 100;

-- 6. Get daily toy sales totals in the given date range
SELECT DATE(o."order_purchase_timestamp") AS "sale_date", SUM(oi."price") AS "daily_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_date"
LIMIT 100;

-- 7. List distinct dates when toy sales occurred
SELECT DISTINCT DATE(o."order_purchase_timestamp") AS "sale_date"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100;

-- 8. Retrieve prices of toy products
SELECT DISTINCT p."product_id", oi."price"
FROM "order_items" oi
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100;

-- 9. Count the number of toy sales per day
SELECT DATE(o."order_purchase_timestamp") AS "sale_date", COUNT(*) AS "num_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_date"
LIMIT 100;

-- 10. Get monthly toy sales totals
SELECT strftime('%Y-%m', o."order_purchase_timestamp") AS "sale_month", SUM(oi."price") AS "monthly_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_month"
LIMIT 100;

-- 11. Get average daily toy sales
SELECT AVG(daily_sales) AS "average_daily_sales"
FROM (
  SELECT DATE(o."order_purchase_timestamp") AS "sale_date", SUM(oi."price") AS "daily_sales"
  FROM "order_items" oi
  JOIN "orders" o ON oi."order_id" = o."order_id"
  JOIN "products" p ON oi."product_id" = p."product_id"
  JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
  WHERE t."product_category_name_english" = 'toys'
    AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
  GROUP BY "sale_date"
)
LIMIT 100;
```

---

These queries help in understanding the data related to toy sales, which is essential for building the simple linear regression model to predict future sales and calculate the 5-day symmetric moving averages for December 5 to 8, 2018.Query:
-- 1. Get a list of all product categories in English
SELECT DISTINCT "product_category_name_english"
FROM "product_category_name_translation"
LIMIT 100
Answer:
product_category_name_english
health_beauty
computers_accessories
auto
bed_bath_table
furniture_decor
sports_leisure
perfumery
housewares
telephony
watches_gifts
food_drink
baby
stationery
tablets_printing_image
toys
fixed_telephony
garden_tools
fashion_bags_accessories
small_appliances
consoles_games
audio
fashion_shoes
cool_stuff
luggage_accessories
air_conditioning
construction_tools_construction
kitchen_dining_laundry_garden_furniture
costruction_tools_garden
fashion_male_clothing
pet_shop
office_furniture
market_place
electronics
home_appliances
party_supplies
home_confort
costruction_tools_tools
agro_industry_and_commerce
furniture_mattress_and_upholstery
books_technical
home_construction
musical_instruments
furniture_living_room
construction_tools_lights
industry_commerce_and_business
food
art
furniture_bedroom
books_general_interest
construction_tools_safety
fashion_underwear_beach
fashion_sport
signaling_and_security
computers
christmas_supplies
fashio_female_clothing
home_appliances_2
books_imported
drinks
cine_photo
la_cuisine
music
home_comfort_2
small_appliances_home_oven_and_coffee
cds_dvds_musicals
dvds_blu_ray
flowers
arts_and_craftmanship
diapers_and_hygiene
fashion_childrens_clothes
security_and_services
Query:
-- 2. Find all products in the 'toys' category
SELECT p."product_id", p."product_category_name"
FROM "products" p
JOIN "product_category_name_translation" t
  ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Answer:
product_id,product_category_name
002c6dab60557c48cfd6c2222ef7fd76,brinquedos
00738f5a17ec4450e88915357b085c1e,brinquedos
009af1277432f1a05742df69cdf72d1e,brinquedos
00c744ca2f3b0e76ce227b146095d3f9,brinquedos
0103208eb1ea5a1a7359c0251a65e37a,brinquedos
01078a94cb29913dfda1a962fd4e3400,brinquedos
010c79af51e82f60de174b6da6060c0a,brinquedos
0111ab6fb41da433e0f17d3f4ec2c8f5,brinquedos
01175f0c6182b4410c669417d7e8268f,brinquedos
011ae9863bd5b15e528a16dd8ceb4772,brinquedos
01a977e282d5884149e79181506c0941,brinquedos
01c666c82f414c762ad21bffa56e8b49,brinquedos
01c9a70868bec5b748c67fcc26ce5895,brinquedos
01cf8c7364048b4b6ed0fe400667054d,brinquedos
02335f37af17baf50a91273e4bdc8ef4,brinquedos
0288f8dd74b931b4ec7a468fdd6ed040,brinquedos
029e44e66d4690b45077bee6d76799f6,brinquedos
02f381f455650d4c7b90c96dc50a6206,brinquedos
037c68f178aefdd7a880a951dedc04d1,brinquedos
03e4e6709b7d6415746769c0bc3e9131,brinquedos
03fed41c5e9067007d852ff83d602753,brinquedos
04601b648d7d2dcae6e285a41e276a3f,brinquedos
04869307f7e7dc5b07f1d83406ade1e5,brinquedos
0496f30fa502d5454825087842d7a497,brinquedos
04bd5aedb2f07b8078ef7dcbfb79db00,brinquedos
04f352bc78b371f4392b0077d5648de5,brinquedos
05555b7712bfdb1c0809b44166e33a25,brinquedos
05d26098907b7bd26c0f92feefd10eae,brinquedos
05f97ad4ce078ed1de8882e1824eb07f,brinquedos
05fb095572e53e2a567a685765101704,brinquedos
0645b477d9a79945e55ec6be1605b5a0,brinquedos
067e1aaf685cc3da73e97a0abf22561c,brinquedos
06be2efbc5799c9e578d3f6dd205b569,brinquedos
06bf70b6e1d67d96308235ef350edc61,brinquedos
06c38a87544301cba8b0fb5a0796383d,brinquedos
07133eebda0768a2ad3d68ef4d95b597,brinquedos
074112f674682b5e218463ce1732945b,brinquedos
078cd7c7e05802e62f12b568aa50ed9a,brinquedos
08065cf579a61fed0a11f26426a30d6c,brinquedos
08401f48b67a852d06105725c3013eff,brinquedos
0887a4b7b87c4f53d81db7c95de4a6c3,brinquedos
090a47567475a8de67cdc10ac38d76bf,brinquedos
09258106f546b38b0f817fc3aadf650b,brinquedos
094efc8b088034585ebda1a32da7181d,brinquedos
096e14458100c2b6d10f72d69f80cf34,brinquedos
098c663630a7a81f7d7f42a2ce0b02d7,brinquedos
09a45646f91581af2d515ba02bc0ed94,brinquedos
09d0b4ab2eaebcde59d4dd8bea2c6be6,brinquedos
0a6cf067b01351046739940c8cb7f60f,brinquedos
0a71a1f1eefa516fe0d1121e9ad00f75,brinquedos
0acad8a389d9ac863b63a5bd91d18697,brinquedos
0b871b4731c7bee9332c7c0b9a742f1e,brinquedos
0beb5829bba86b3b5301af11bff8be6a,brinquedos
0c3ed87d108f627980e66e9258f9c305,brinquedos
0c4dd7ab3593c8601e53207e02d16784,brinquedos
0c52fe573de020553e4f524ac4267c92,brinquedos
0cac4325d7aa33ada7ff2ba4d84f8874,brinquedos
0cb8c29f963ae2069fcc3afe95fd93c1,brinquedos
0cc562350ea5915979a9d5f1f888f131,brinquedos
0cd7885ebb79eda16c32c1043681fc19,brinquedos
0ce430e210535c2f40fe2f13ca31b441,brinquedos
0d1d0db051b49daf3c58068768d8fd2d,brinquedos
0d56b4fd97465d99b6ed174ffc7ba133,brinquedos
0d826eba8e0a2ae3bca9e3a947dd756d,brinquedos
0dc7e2749b6f2da894167fc88c86a2cc,brinquedos
0dcbc0d012d42719216ea7dff6b90a6f,brinquedos
0ddee7337ebe743e2d8f2fdfd671729a,brinquedos
0e4ed218b40ef29464d9a9c778ea123f,brinquedos
0e669e3efedd9f3ab75fcbe334e1177e,brinquedos
0e8e65e0044a4d888d422517f545ba2e,brinquedos
0ef539a5334aaf06f2a028d08021f681,brinquedos
0efaf4b155c6545bdc426ec0722cceaa,brinquedos
0f24b7516c5b67c9c686848db9759d88,brinquedos
0f2d139d3c1f8d504bea138f27a2fad0,brinquedos
0f3547f2b32d5660a50961768fe2d929,brinquedos
0f40837cdd9606e43215010f9e8fce41,brinquedos
0f4d27b820e317c951649da022895e0e,brinquedos
0f677d256ee3a3fa0e23419b98573cdb,brinquedos
0f6e2c3bbb97980782ed6cb1506f5d95,brinquedos
0f80705139ce16ea35bb489987399b55,brinquedos
0f840300fe45ba963a5d215b62e6f767,brinquedos
1067af1d38844dcfaa3471839f922c27,brinquedos
10b121bc6ceb3f390402649881a15554,brinquedos
110372508609f644a4ed639c1c9440fa,brinquedos
110e153a52beae118fe6dc43ef592e0b,brinquedos
1114429023023d2546ff428bfda1abcc,brinquedos
11165ade430c6cc010bb0042fe88d150,brinquedos
112dad9870ca76046f327b9c08f00b29,brinquedos
1147151b874f436976ef5ad14a8a7694,brinquedos
118fa7a08a83564776c37433aca3ca71,brinquedos
11b095275420b5d5123e163f058256c3,brinquedos
11d5f8f3c96fff33d7e8bcbb54c8c79e,brinquedos
121a6ac524b24aa5cd62dc2094097a1b,brinquedos
1226cd37bd51c6407009e8fe54f1cf29,brinquedos
1261bcae25b0000829246aa58e284a2f,brinquedos
127b372f0c2ee673b04d38f8a6325a2b,brinquedos
12a947baa3e0ab6254ebfec789934fd5,brinquedos
12f749c76f15e9bf5743bebda92da24a,brinquedos
1341fe21db99218918b57ca553968a50,brinquedos
13641c883402cc251cdb1f7f817e9148,brinquedos
Query:
-- 3. List all orders with their purchase timestamps
SELECT "order_id", "order_purchase_timestamp"
FROM "orders"
LIMIT 100
Answer:
Too long, hard cut:
order_id,order_purchase_timestamp
e481f51cbdc54678b7cc49136f2d6af7,2017-10-02 10:56:33
53cdb2fc8bc7dce0b6741e2150273451,2018-07-24 20:41:37
47770eb9100c2d0c44946d9cf07ec65d,2018-08-08 08:38:49
949d5b44dbf5de918fe9c16f97b45f8a,2017-11-18 19:28:06
ad21c59c0840e6cb83a9ceb5573f8159,2018-02-13 21:18:39
a4591c265e18cb1dcee52889e2d8acc3,2017-07-09 21:57:05
136cce7faa42fdb2cefd53fdc79a6098,2017-04-11 12:22:08
6514b8ad8028c9f2cc2374ded245783f,2017-05-16 13:10:30
76c6e866289321a7c93b82b54852dc33,2017-01-23 18:29:09
e69bfb5eb88e0ed6a785585b27e16dbf,2017-07-29 11:55:02
e6ce16cb79ec1d90b1da9085a6118aeb,2017-05-16 19:41:10
34513ce0c4fab462a55830c0989c7edb,2017-07-13 19:58:11
82566a660a982b15fb86e904c8d32918,2018-06-07 10:06:19
5ff96c15d0b717ac6ad1f3d77225a350,2018-07-25 17:44:10
432aaf21d85167c2c86ec9448c4e42cc,2018-03-01 14:14:28
dcb36b511fcac050b97cd5c05de84dc3,2018-06-07 19:03:12
403b97836b0c04a622354cf531062e5f,2018-01-02 19:00:43
116f0b09343b49556bbad5f35bee0cdf,2017-12-26 23:41:31
85ce859fd6dc634de8d2f1e290444043,2017-11-21 00:03:41
83018ec114eee8641c97e08f7b4e926f,2017-10-26 15:54:26
203096f03d82e0dffbc41ebc2e2bcfb7,2017-09-18 14:31:30
f848643eec1d69395095eb3840d2051e,2018-03-15 08:52:40
2807d0e504d6d4894d41672727bc139f,2018-02-03 20:37:35
95266dbfb7e20354baba07964dac78d5,2018-01-08 07:55:29
f3e7c359154d965827355f39d6b1fdac,2018-08-09 11:44:40
fbf9ac61453ac646ce8ad9783d7d0af6,2018-02-20 23:46:53
acce194856392f074dbf9dada14d8d82,2018-06-04 00:00:13
dd78f560c270f1909639c11b925620ea,2018-03-12 01:50:26
91b2a010e1e45e6ba3d133fa997597be,2018-05-02 11:45:38
ecab90c9933c58908d3d6add7c6f5ae3,2018-02-25 13:50:30
f70a0aff17df5a6cdd9a7196128bd354,2017-08-10 11:58:33
1790eea0b567cf50911c057cf20f90f9,2018-04-16 21:15:39
989225ba6d0ebd5873335f7e01de2ae7,2017-12-12 13:56:04
d887b52c6516beb39e8cd44a5f8b60f7,2018-02-03 12:38:58
b276e4f8c0fb86bd82fce576f21713e0,2018-07-29 23:34:51
8563039e855156e48fccee4d611a3196,2018-02-17 15:59:46
60550084e6b4c0cb89a87df1f3e5ebd9,2018-02-21 18:15:12
5acce57f8d9dfd55fa48e212a641a69d,2017-07-31 21:37:10
434d158e96bdd6972ad6e6d73ddcfd22,2018-06-01 12:23:13
7206b86ea789983f7a273ea7fa0bc2a8,2018-03-26 17:12:18
1e7aff52cdbb2451ace09d0f848c3699,2017-05-19 18:53:40
6ea2f835b4556291ffdc53fa0b3b95e8,2017-11-24 21:27:48
948097deef559c742e7ce321e5e58919,2017-08-04 17:10:39
d22e9fa5731b9e30e8b27afcdc2f8563,2018-08-04 23:25:30
ee64d42b8cf066f35eac1cf57de1aa85,2018-06-04 16:44:48
6ebaec694d7025e2ad4a05dba887c032,2017-05-18 13:55:47
d17dc4a904426827ca80f2ccb3a6be56,2017-05-14 20:28:25
25f4376934e13d3508486352e11a5db0,2018-05-17 16:59:11
5820a1100976432c7968a52da59e9364,2018-07-29 11:24:17
2ce1ad82022c1ba30c2079502ac725aa,2017-08-09 20:19:05
138849fd84dff2fb4ca70a0a34c4aa1c,2018-02-01 14:02:19
47aa4816b27ba60ec948cd019cc1afc1,2018-06-26 13:42:52
9faeb9b2746b9d7526aef5acb08e2aa0,2018-07-26 14:39:59
641fb0752bf5b5940c376b3a8bb9dc52,2017-12-15 00:06:10
e425680f760cbc130be3e53a9773c584,2017-08-31 08:15:24
40c5e18f7d112b59b3e5113a59a905b3,2018-06-11 10:25:52
734e7d1bbaeb2ff82521ca0fe6fb6f79,2018-06-11 08:18:19
66e4624ae69e7dc89bd50222b59f581f,2018-03-09 14:50:15
a685d016c8a26f71a0bb67821070e398,2017-03-13 18:14:36
2edfd6d1f0b4cd0db4bf37b1b224d855,2017-06-13 21:11:26
68873cf91053cd11e6b49a766db5af1a,2017-11-30 22:02:15
f346ad4ee8f630e5e4ddaf862a34e6dd,2018-08-05 13:09:48
8f06cc6465925031568537b815f1198d,2017-11-15 11:31:41
ccbabeb0b02433bd0fcbac46e70339f2,2018-02-19 20:31:09
688052146432ef8253587b930b01a06d,2018-04-22 08:48:13
f271576bed568e896f99eb710cd3a6f8,2018-01-07 21:44:54
686541986ecfb7d9296eb67719973bf0,2018-02-10 13:26:59
68e48e68da1f50f7c5838ea75e3a20dd,2018-06-18 16:02:23
b52cc4919de82b4d696a4380d10804a3,2018-06-13 13:47:39
fdf128b3630c21adc9ca4fb8a51b68ec,2018-07-15 08:33:19
a6aeb116d2cb5013eb8a94585b71ffef,2017-09-13 14:27:11
fa516182d28f96f5f5c651026b0749ee,2018-04-13 08:44:17
6abaad69b8b349c3a529b4b91ce18e46,2018-02-15 10:33:30
974c1993ab8024d3ed16229183c2308d,2017-02-20 11:45:39
82bce245b1c9148f8d19a55b9ff70644,2017-04-20 17:15:46
a910f58086d58b3ae6f37aa712d377b9,2017-09-15 09:19:48
bd4bd0194d6d29f83b8557d4b89b572a,2018-07-28 16:52:55
634e8f4c0f6744a626f77f39770ac6aa,2017-08-09 18:32:47
6d25592267349b322799e2beb687871e,2018-08-26 22:04:34
b8801cccd8068de30112e4f49903d74a,2017-07-30 03:06:35
2711a938db643b3f0b62ee2c8a2784aa,2017-12-22 00:17:37
3bc77ce8be27211bac313c2daa402d1a,2017-04-06 22:39:29
10c320f977c6a18f91b2d14be13128c6,2017-05-09 20:48:59
0a4a2fccb27bd83a892fa503987a595b,2017-04-20 20:42:44
e4de6d53ecff736bc68804b0b6e9f635,2017-10-16 14:56:50
6b860b35691d486e45dc98e3514ec5f6,2017-12-08 09:42:43
ec341c54a5ebf8ee0a67a8632aa7579b,2017-08-26 16:53:30
cadbb3657dac2dbbd5b84b12e7b78aad,2018-02-27 12:55:42
9defaf92cff22420e4e8ef7784815a55,2018-05-11 13:10:51
20e0101b20700188cadb288126949685,2018-01-22 19:22:22
0e782c3705510e717d28907746cbda82,2018-05-01 08:12:37
d3d6788577c9592da441752e8a1dd5e3,2017-09-19 22:17:15
86f21bf63784876b9fd6d35f46581d72,2018-04-11 22:32:31
8447ff843b2616c50c0ced28ab1dae03,2017
Query:
-- 4. Get toy product sales with order dates
SELECT oi."order_id", oi."product_id", o."order_purchase_timestamp"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Answer:
Too long, hard cut:
order_id,product_id,order_purchase_timestamp
13d5066bb747cafa23f1bb6d1838eee4,002c6dab60557c48cfd6c2222ef7fd76,2018-03-15 10:44:26
3ae3969a6f3d5e57d4f9fd85868ffefc,00738f5a17ec4450e88915357b085c1e,2017-04-26 13:45:25
02e827a9f1e829b50b81eb9e26588ed9,009af1277432f1a05742df69cdf72d1e,2017-08-11 18:32:57
18a3784d31f9cf5e372cd05c15ce1502,009af1277432f1a05742df69cdf72d1e,2017-08-21 13:48:03
466334b9ec76342cf368c99aa06375cc,009af1277432f1a05742df69cdf72d1e,2017-12-04 11:30:44
8dd65fba2478cb614c25783cd1be3449,009af1277432f1a05742df69cdf72d1e,2017-07-08 21:11:41
a5cb9da004bf54e017f20e3c1f8629f7,009af1277432f1a05742df69cdf72d1e,2017-11-06 07:20:25
b0b3dc7e3c7cdba072b4e086dc5c3cec,009af1277432f1a05742df69cdf72d1e,2017-07-14 21:31:30
e37fbd45af4b09e473cb0805b49bdca7,009af1277432f1a05742df69cdf72d1e,2017-08-03 12:48:23
a7881f54a20f4f7547971f089438b078,00c744ca2f3b0e76ce227b146095d3f9,2017-03-22 10:35:21
07629443859f99dfac4443b102f31ead,0103208eb1ea5a1a7359c0251a65e37a,2018-08-20 18:55:21
3bb3f2f93941b43b0eef5618c565d650,01078a94cb29913dfda1a962fd4e3400,2017-12-05 20:11:25
976d9425872f2283bdadfb50fd7e4188,01078a94cb29913dfda1a962fd4e3400,2017-12-25 17:15:40
23185987a928a964abc85b9dec1f39e2,010c79af51e82f60de174b6da6060c0a,2017-09-23 15:31:05
44a0eec1375288c11308ac7d16892f6f,010c79af51e82f60de174b6da6060c0a,2017-10-10 15:14:12
9277d9d48b3a4ca5a90e365f38d095e9,0111ab6fb41da433e0f17d3f4ec2c8f5,2017-10-10 17:04:13
af209eb4f7a3bd965aced8fe559ccd3b,0111ab6fb41da433e0f17d3f4ec2c8f5,2017-09-09 20:06:48
b61f906e4d28111f250cdf42a93a5967,0111ab6fb41da433e0f17d3f4ec2c8f5,2017-11-19 15:38:53
26110592bfcb0c6d20245c860b05f8ee,01175f0c6182b4410c669417d7e8268f,2017-11-27 10:40:11
2eebfe86623a5c27b603e640e96d8c80,011ae9863bd5b15e528a16dd8ceb4772,2017-11-17 22:40:22
4427836afdab8880f5ac2b25c710c822,011ae9863bd5b15e528a16dd8ceb4772,2018-03-09 19:08:29
611a173cc635e8416613dbe247b9408c,011ae9863bd5b15e528a16dd8ceb4772,2018-04-18 18:43:31
a6ba5666a43bd5cdaf4a6b0ea268ecf4,011ae9863bd5b15e528a16dd8ceb4772,2017-11-02 11:36:12
d0efbb6a217254d95a9e6adf0e0454af,011ae9863bd5b15e528a16dd8ceb4772,2017-11-21 16:05:13
e704e063847a3055d24d485db17e30e7,011ae9863bd5b15e528a16dd8ceb4772,2017-11-19 13:06:40
edc2a37b6c40c6ac0a792e46cf248848,011ae9863bd5b15e528a16dd8ceb4772,2017-11-03 07:58:39
a0c9d84c9ca938bbf711acbd940ba416,01a977e282d5884149e79181506c0941,2017-09-20 17:28:45
0029f17cf0e7640c5cb6825af681303f,01c666c82f414c762ad21bffa56e8b49,2018-05-02 11:59:06
06c2f55902daa48386515225a766e7d1,01c9a70868bec5b748c67fcc26ce5895,2017-12-08 19:02:53
2b6f5b5b04f0331895f9e1103ac75fb7,01c9a70868bec5b748c67fcc26ce5895,2017-12-12 08:58:41
386e8a08c195e02dc257e4b0f34780f7,01c9a70868bec5b748c67fcc26ce5895,2017-12-10 12:18:14
3ea1e7f7f7d0b7a56b20aaa1baebc19e,01c9a70868bec5b748c67fcc26ce5895,2017-12-10 15:29:09
43ada20efaad1c2c55197dd39050267f,01c9a70868bec5b748c67fcc26ce5895,2017-12-21 17:01:47
4523eafb93144f31a954666165a59423,01c9a70868bec5b748c67fcc26ce5895,2018-02-20 15:29:03
48fdee20557eb297d2cfecd7df1a82e2,01c9a70868bec5b748c67fcc26ce5895,2018-03-11 22:10:16
4a24776627df4bc781c16431b844580b,01c9a70868bec5b748c67fcc26ce5895,2017-12-18 19:58:34
53c7592439c12d02630c4f0da48614bc,01c9a70868bec5b748c67fcc26ce5895,2017-12-18 12:55:41
61bad37b59417cf4967b83748544fd52,01c9a70868bec5b748c67fcc26ce5895,2017-12-11 19:49:26
7f4e9dd947b8c7493391930878e8b778,01c9a70868bec5b748c67fcc26ce5895,2017-12-05 10:08:56
816b15129b14c066ff4f5755938aefb0,01c9a70868bec5b748c67fcc26ce5895,2018-01-11 15:32:58
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,2017-12-15 22:51:28
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,2017-12-15 22:51:28
b8e17df0f313ac216d29c0683a83b992,01c9a70868bec5b748c67fcc26ce5895,2017-12-11 15:26:43
e808b609d07ef4f022d702b20db24137,01c9a70868bec5b748c67fcc26ce5895,2018-01-14 20:28:50
73eb70779d3a8a4647f8ccf9c43d2623,01cf8c7364048b4b6ed0fe400667054d,2017-05-02 21:03:22
814823738ce02d399f917f00e77393d5,02335f37af17baf50a91273e4bdc8ef4,2018-08-13 17:09:30
1e1bb536916a9964978ee59e6d6d0cca,0288f8dd74b931b4ec7a468fdd6ed040,2017-08-30 11:57:09
467a8138ba602b8e9740eff5e08d1f23,029e44e66d4690b45077bee6d76799f6,2017-12-26 17:14:29
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,2018-05-04 07:29:14
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,2018-05-04 07:29:14
a9ddf1f40e51ec5d1c828564cef4d92e,02f381f455650d4c7b90c96dc50a6206,2017-06-07 11:49:07
8ef25ada03b56cd00e4021ea5b98f58e,037c68f178aefdd7a880a951dedc04d1,2017-10-18 12:56:16
0686d4f89fdf2b3625aa705b7ed7ac95,03e4e6709b7d6415746769c0bc3e9131,2018-03-17 10:41:45
079ad290e98bc46b5d7e0ce9fc15af1b,03e4e6709b7d6415746769c0bc3e9131,2018-04-04 20:49:44
0a3bc687e8cb91f08d67838494a0e396,03e4e6709b7d6415746769c0bc3e9131,2018-03-14 10:58:09
482df43f85d48add2d83b40f3737062d,03e4e6709b7d6415746769c0bc3e9131,2018-04-13 20:40:46
5065c673bd9aed56b2628c56c93d0619,03e4e6709b7d6415746769c0bc3e9131,2018-04-13 09:32:26
63e4d9a8a382e43251ec90778af9db66,03e4e6709b7d64157467
Query:
-- 5. Find toy sales between '2017-01-01' and '2018-08-29'
SELECT oi."order_id", oi."product_id", oi."price", o."order_purchase_timestamp"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
LIMIT 100
Answer:
Too long, hard cut:
order_id,product_id,price,order_purchase_timestamp
13d5066bb747cafa23f1bb6d1838eee4,002c6dab60557c48cfd6c2222ef7fd76,79.9,2018-03-15 10:44:26
3ae3969a6f3d5e57d4f9fd85868ffefc,00738f5a17ec4450e88915357b085c1e,23.9,2017-04-26 13:45:25
02e827a9f1e829b50b81eb9e26588ed9,009af1277432f1a05742df69cdf72d1e,59.9,2017-08-11 18:32:57
18a3784d31f9cf5e372cd05c15ce1502,009af1277432f1a05742df69cdf72d1e,59.9,2017-08-21 13:48:03
466334b9ec76342cf368c99aa06375cc,009af1277432f1a05742df69cdf72d1e,60.0,2017-12-04 11:30:44
8dd65fba2478cb614c25783cd1be3449,009af1277432f1a05742df69cdf72d1e,54.9,2017-07-08 21:11:41
a5cb9da004bf54e017f20e3c1f8629f7,009af1277432f1a05742df69cdf72d1e,60.0,2017-11-06 07:20:25
b0b3dc7e3c7cdba072b4e086dc5c3cec,009af1277432f1a05742df69cdf72d1e,54.9,2017-07-14 21:31:30
e37fbd45af4b09e473cb0805b49bdca7,009af1277432f1a05742df69cdf72d1e,54.9,2017-08-03 12:48:23
a7881f54a20f4f7547971f089438b078,00c744ca2f3b0e76ce227b146095d3f9,33.9,2017-03-22 10:35:21
07629443859f99dfac4443b102f31ead,0103208eb1ea5a1a7359c0251a65e37a,759.9,2018-08-20 18:55:21
3bb3f2f93941b43b0eef5618c565d650,01078a94cb29913dfda1a962fd4e3400,79.9,2017-12-05 20:11:25
976d9425872f2283bdadfb50fd7e4188,01078a94cb29913dfda1a962fd4e3400,69.9,2017-12-25 17:15:40
23185987a928a964abc85b9dec1f39e2,010c79af51e82f60de174b6da6060c0a,87.9,2017-09-23 15:31:05
44a0eec1375288c11308ac7d16892f6f,010c79af51e82f60de174b6da6060c0a,87.9,2017-10-10 15:14:12
9277d9d48b3a4ca5a90e365f38d095e9,0111ab6fb41da433e0f17d3f4ec2c8f5,35.0,2017-10-10 17:04:13
af209eb4f7a3bd965aced8fe559ccd3b,0111ab6fb41da433e0f17d3f4ec2c8f5,35.0,2017-09-09 20:06:48
b61f906e4d28111f250cdf42a93a5967,0111ab6fb41da433e0f17d3f4ec2c8f5,35.0,2017-11-19 15:38:53
26110592bfcb0c6d20245c860b05f8ee,01175f0c6182b4410c669417d7e8268f,35.09,2017-11-27 10:40:11
2eebfe86623a5c27b603e640e96d8c80,011ae9863bd5b15e528a16dd8ceb4772,649.9,2017-11-17 22:40:22
4427836afdab8880f5ac2b25c710c822,011ae9863bd5b15e528a16dd8ceb4772,749.9,2018-03-09 19:08:29
611a173cc635e8416613dbe247b9408c,011ae9863bd5b15e528a16dd8ceb4772,749.9,2018-04-18 18:43:31
a6ba5666a43bd5cdaf4a6b0ea268ecf4,011ae9863bd5b15e528a16dd8ceb4772,599.9,2017-11-02 11:36:12
d0efbb6a217254d95a9e6adf0e0454af,011ae9863bd5b15e528a16dd8ceb4772,749.9,2017-11-21 16:05:13
e704e063847a3055d24d485db17e30e7,011ae9863bd5b15e528a16dd8ceb4772,649.9,2017-11-19 13:06:40
edc2a37b6c40c6ac0a792e46cf248848,011ae9863bd5b15e528a16dd8ceb4772,599.9,2017-11-03 07:58:39
a0c9d84c9ca938bbf711acbd940ba416,01a977e282d5884149e79181506c0941,35.0,2017-09-20 17:28:45
0029f17cf0e7640c5cb6825af681303f,01c666c82f414c762ad21bffa56e8b49,94.9,2018-05-02 11:59:06
06c2f55902daa48386515225a766e7d1,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-08 19:02:53
2b6f5b5b04f0331895f9e1103ac75fb7,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-12 08:58:41
386e8a08c195e02dc257e4b0f34780f7,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-10 12:18:14
3ea1e7f7f7d0b7a56b20aaa1baebc19e,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-10 15:29:09
43ada20efaad1c2c55197dd39050267f,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-21 17:01:47
4523eafb93144f31a954666165a59423,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-02-20 15:29:03
48fdee20557eb297d2cfecd7df1a82e2,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-03-11 22:10:16
4a24776627df4bc781c16431b844580b,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-18 19:58:34
53c7592439c12d02630c4f0da48614bc,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-18 12:55:41
61bad37b59417cf4967b83748544fd52,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-11 19:49:26
7f4e9dd947b8c7493391930878e8b778,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-05 10:08:56
816b15129b14c066ff4f5755938aefb0,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-01-11 15:32:58
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-15 22:51:28
8cc424a5c8314e99e6e6027b99655b0f,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-15 22:51:28
b8e17df0f313ac216d29c0683a83b992,01c9a70868bec5b748c67fcc26ce5895,99.9,2017-12-11 15:26:43
e808b609d07ef4f022d702b20db24137,01c9a70868bec5b748c67fcc26ce5895,110.9,2018-01-14 20:28:50
73eb70779d3a8a4647f8ccf9c43d2623,01cf8c7364048b4b6ed0fe400667054d,229.9,2017-05-02 21:03:22
814823738ce02d399f917f00e77393d5,02335f37af17baf50a91273e4bdc8ef4,57.99,2018-08-13 17:09:30
1e1bb536916a9964978ee59e6d6d0cca,0288f8dd74b931b4ec7a468fdd6ed040,49.99,2017-08-30 11:57:09
467a8138ba602b8e9740eff5e08d1f23,029e44e66d4690b45077bee6d76799f6,39.9,2017-12-26 17:14:29
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,39.9,2018-05-04 07:29:14
51d714716b4df5d56ae92f97bf5a327d,029e44e66d4690b45077bee6d76799f6,39.9,2018-05-04 07:29:14
a9ddf1f40e51ec5d1c828564cef4d92e,02f381f455650d4c7b90c96dc50a6206,18.8,2017-06-07 11:49:07
8ef25ada03b56cd00e4021ea5b98f58e,037c68f178aefdd7a880a951dedc04d1,72.9,2017-10-18 12:56:16
0686d4f89fdf2b3625aa705b7ed7ac95,03e4e6709b7d6415746769c0bc3e9131,59.9,2018-03-17 10:41:45
079ad290e98bc46b5d7e0ce9fc15af1b,03e4e6709b7d6415746769c0bc3e9131,54.9,2018-04-04 20:49:44
0a3bc687e8cb91f08d6
Query:
-- 6. Get daily toy sales totals in the given date range
SELECT DATE(o."order_purchase_timestamp") AS "sale_date", SUM(oi."price") AS "daily_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_date"
LIMIT 100
Answer:
sale_date,daily_sales
2017-01-05,43.8
2017-01-06,159.99
2017-01-11,294.89
2017-01-15,159.9
2017-01-17,425.78000000000003
2017-01-18,280.89
2017-01-19,34.9
2017-01-22,197.88
2017-01-23,132.89000000000001
2017-01-24,1116.94
2017-01-25,613.78
2017-01-26,71.65
2017-01-27,456.87
2017-01-28,111.97999999999999
2017-01-29,259.98
2017-01-30,384.98
2017-01-31,66.99
2017-02-01,226.88
2017-02-02,224.99
2017-02-03,1558.78
2017-02-04,229.89
2017-02-06,313.79
2017-02-07,194.94
2017-02-08,249.75
2017-02-09,88.3
2017-02-10,436.78000000000003
2017-02-11,272.69
2017-02-12,1913.88
2017-02-13,244.7
2017-02-14,94.39
2017-02-15,99.80000000000001
2017-02-16,194.8
2017-02-18,938.78
2017-02-19,414.89
2017-02-20,178.49
2017-02-21,201.3
2017-02-23,147.84
2017-02-24,254.99
2017-02-28,922.6899999999999
2017-03-01,633.34
2017-03-02,89.9
2017-03-03,364.66
2017-03-04,408.78
2017-03-05,104.99
2017-03-06,517.66
2017-03-07,1239.8700000000001
2017-03-08,101.88999999999999
2017-03-09,64.9
2017-03-10,238.78
2017-03-11,872.88
2017-03-12,237.37
2017-03-13,544.77
2017-03-14,269.97
2017-03-15,491.59000000000003
2017-03-16,441.78000000000003
2017-03-18,298.89
2017-03-19,273.8
2017-03-20,49.9
2017-03-21,431.6
2017-03-22,162.79
2017-03-23,284.88
2017-03-24,1049.68
2017-03-25,899.8
2017-03-26,84.99
2017-03-27,171.79
2017-03-28,739.9
2017-03-29,123.97999999999999
2017-03-30,347.68
2017-03-31,886.6600000000001
2017-04-01,54.9
2017-04-02,639.49
2017-04-03,73.89
2017-04-04,116.88999999999999
2017-04-05,1269.17
2017-04-06,413.7
2017-04-07,668.49
2017-04-08,382.70000000000005
2017-04-09,153.76999999999998
2017-04-10,689.77
2017-04-11,295.68
2017-04-12,812.78
2017-04-13,478.99
2017-04-14,64.9
2017-04-15,172.89000000000001
2017-04-16,36.9
2017-04-17,542.78
2017-04-18,335.99
2017-04-19,434.79
2017-04-20,189.8
2017-04-21,149.79
2017-04-22,1046.59
2017-04-23,216.9
2017-04-24,319.99
2017-04-25,204.7
2017-04-26,1048.77
2017-04-27,153.98000000000002
2017-04-28,1350.66
2017-04-29,249.99
2017-04-30,469.79
2017-05-01,716.4
Query:
-- 7. List distinct dates when toy sales occurred
SELECT DISTINCT DATE(o."order_purchase_timestamp") AS "sale_date"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Answer:
sale_date
2018-03-15
2017-04-26
2017-08-11
2017-08-21
2017-12-04
2017-07-08
2017-11-06
2017-07-14
2017-08-03
2017-03-22
2018-08-20
2017-12-05
2017-12-25
2017-09-23
2017-10-10
2017-09-09
2017-11-19
2017-11-27
2017-11-17
2018-03-09
2018-04-18
2017-11-02
2017-11-21
2017-11-03
2017-09-20
2018-05-02
2017-12-08
2017-12-12
2017-12-10
2017-12-21
2018-02-20
2018-03-11
2017-12-18
2017-12-11
2018-01-11
2017-12-15
2018-01-14
2017-05-02
2018-08-13
2017-08-30
2017-12-26
2018-05-04
2017-06-07
2017-10-18
2018-03-17
2018-04-04
2018-03-14
2018-04-13
2018-04-26
2018-03-16
2018-02-08
2018-02-16
2018-03-18
2018-02-21
2018-02-19
2018-04-21
2018-06-12
2018-07-06
2018-05-13
2018-07-21
2018-05-25
2018-04-17
2017-12-06
2017-11-26
2017-11-29
2017-11-24
2017-09-11
2018-07-01
2018-08-02
2018-08-03
2017-08-16
2018-04-03
2018-02-24
2018-08-19
2017-05-12
2017-07-09
2017-09-10
2017-09-13
2018-06-04
2018-01-25
2018-02-01
2017-10-06
2018-05-09
2018-01-08
2018-04-11
2018-03-30
2018-02-07
2017-10-22
2018-04-24
2018-08-27
2018-03-13
2017-05-20
2017-08-10
2017-06-08
2017-05-15
2017-06-09
2017-05-19
2017-05-13
2017-06-11
2017-06-13
Query:
-- 8. Retrieve prices of toy products
SELECT DISTINCT p."product_id", oi."price"
FROM "order_items" oi
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
LIMIT 100
Answer:
product_id,price
002c6dab60557c48cfd6c2222ef7fd76,79.9
00738f5a17ec4450e88915357b085c1e,23.9
009af1277432f1a05742df69cdf72d1e,54.9
009af1277432f1a05742df69cdf72d1e,59.9
009af1277432f1a05742df69cdf72d1e,60.0
00c744ca2f3b0e76ce227b146095d3f9,33.9
0103208eb1ea5a1a7359c0251a65e37a,759.9
01078a94cb29913dfda1a962fd4e3400,69.9
01078a94cb29913dfda1a962fd4e3400,79.9
010c79af51e82f60de174b6da6060c0a,87.9
0111ab6fb41da433e0f17d3f4ec2c8f5,35.0
01175f0c6182b4410c669417d7e8268f,35.09
011ae9863bd5b15e528a16dd8ceb4772,599.9
011ae9863bd5b15e528a16dd8ceb4772,649.9
011ae9863bd5b15e528a16dd8ceb4772,749.9
01a977e282d5884149e79181506c0941,35.0
01c666c82f414c762ad21bffa56e8b49,94.9
01c9a70868bec5b748c67fcc26ce5895,99.9
01c9a70868bec5b748c67fcc26ce5895,110.9
01cf8c7364048b4b6ed0fe400667054d,229.9
02335f37af17baf50a91273e4bdc8ef4,57.99
0288f8dd74b931b4ec7a468fdd6ed040,49.99
029e44e66d4690b45077bee6d76799f6,39.9
02f381f455650d4c7b90c96dc50a6206,18.8
037c68f178aefdd7a880a951dedc04d1,72.9
03e4e6709b7d6415746769c0bc3e9131,54.9
03e4e6709b7d6415746769c0bc3e9131,57.39
03e4e6709b7d6415746769c0bc3e9131,57.99
03e4e6709b7d6415746769c0bc3e9131,58.5
03e4e6709b7d6415746769c0bc3e9131,58.7
03e4e6709b7d6415746769c0bc3e9131,59.9
03e4e6709b7d6415746769c0bc3e9131,65.9
03fed41c5e9067007d852ff83d602753,139.99
03fed41c5e9067007d852ff83d602753,149.99
04601b648d7d2dcae6e285a41e276a3f,49.9
04869307f7e7dc5b07f1d83406ade1e5,139.9
0496f30fa502d5454825087842d7a497,38.0
0496f30fa502d5454825087842d7a497,39.0
04bd5aedb2f07b8078ef7dcbfb79db00,159.9
04f352bc78b371f4392b0077d5648de5,134.0
04f352bc78b371f4392b0077d5648de5,134.9
05555b7712bfdb1c0809b44166e33a25,129.0
05d26098907b7bd26c0f92feefd10eae,94.5
05f97ad4ce078ed1de8882e1824eb07f,39.99
05fb095572e53e2a567a685765101704,138.9
0645b477d9a79945e55ec6be1605b5a0,49.7
067e1aaf685cc3da73e97a0abf22561c,75.0
06be2efbc5799c9e578d3f6dd205b569,79.0
06bf70b6e1d67d96308235ef350edc61,69.9
06bf70b6e1d67d96308235ef350edc61,79.9
06bf70b6e1d67d96308235ef350edc61,89.9
06c38a87544301cba8b0fb5a0796383d,52.9
07133eebda0768a2ad3d68ef4d95b597,174.0
07133eebda0768a2ad3d68ef4d95b597,259.0
074112f674682b5e218463ce1732945b,320.0
078cd7c7e05802e62f12b568aa50ed9a,149.9
08065cf579a61fed0a11f26426a30d6c,84.99
08401f48b67a852d06105725c3013eff,25.0
0887a4b7b87c4f53d81db7c95de4a6c3,349.99
090a47567475a8de67cdc10ac38d76bf,44.9
09258106f546b38b0f817fc3aadf650b,48.5
094efc8b088034585ebda1a32da7181d,71.99
096e14458100c2b6d10f72d69f80cf34,269.99
096e14458100c2b6d10f72d69f80cf34,279.99
096e14458100c2b6d10f72d69f80cf34,299.99
098c663630a7a81f7d7f42a2ce0b02d7,115.0
098c663630a7a81f7d7f42a2ce0b02d7,119.0
09a45646f91581af2d515ba02bc0ed94,24.9
09d0b4ab2eaebcde59d4dd8bea2c6be6,81.2
0a6cf067b01351046739940c8cb7f60f,36.75
0a71a1f1eefa516fe0d1121e9ad00f75,23.9
0acad8a389d9ac863b63a5bd91d18697,82.9
0b871b4731c7bee9332c7c0b9a742f1e,342.0
0beb5829bba86b3b5301af11bff8be6a,109.99
0c3ed87d108f627980e66e9258f9c305,99.9
0c4dd7ab3593c8601e53207e02d16784,78.9
0c52fe573de020553e4f524ac4267c92,89.9
0cac4325d7aa33ada7ff2ba4d84f8874,39.0
0cb8c29f963ae2069fcc3afe95fd93c1,134.9
0cc562350ea5915979a9d5f1f888f131,529.9
0cd7885ebb79eda16c32c1043681fc19,269.99
0ce430e210535c2f40fe2f13ca31b441,349.9
0d1d0db051b49daf3c58068768d8fd2d,59.9
0d56b4fd97465d99b6ed174ffc7ba133,38.49
0d826eba8e0a2ae3bca9e3a947dd756d,149.0
0dc7e2749b6f2da894167fc88c86a2cc,87.9
0dcbc0d012d42719216ea7dff6b90a6f,199.99
0ddee7337ebe743e2d8f2fdfd671729a,27.49
0e4ed218b40ef29464d9a9c778ea123f,68.9
0e669e3efedd9f3ab75fcbe334e1177e,127.89
0e669e3efedd9f3ab75fcbe334e1177e,129.8
0e669e3efedd9f3ab75fcbe334e1177e,133.99
0e669e3efedd9f3ab75fcbe334e1177e,134.0
0e669e3efedd9f3ab75fcbe334e1177e,138.99
0e669e3efedd9f3ab75fcbe334e1177e,149.0
0e8e65e0044a4d888d422517f545ba2e,159.9
0ef539a5334aaf06f2a028d08021f681,469.9
0efaf4b155c6545bdc426ec0722cceaa,112.0
0f24b7516c5b67c9c686848db9759d88,119.9
0f2d139d3c1f8d504bea138f27a2fad0,129.9
Query:
-- 9. Count the number of toy sales per day
SELECT DATE(o."order_purchase_timestamp") AS "sale_date", COUNT(*) AS "num_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_date"
LIMIT 100
Answer:
sale_date,num_sales
2017-01-05,2
2017-01-06,1
2017-01-11,2
2017-01-15,1
2017-01-17,5
2017-01-18,3
2017-01-19,1
2017-01-22,3
2017-01-23,2
2017-01-24,6
2017-01-25,4
2017-01-26,2
2017-01-27,4
2017-01-28,2
2017-01-29,2
2017-01-30,2
2017-01-31,1
2017-02-01,3
2017-02-02,2
2017-02-03,5
2017-02-04,2
2017-02-06,3
2017-02-07,2
2017-02-08,4
2017-02-09,2
2017-02-10,4
2017-02-11,4
2017-02-12,3
2017-02-13,5
2017-02-14,2
2017-02-15,2
2017-02-16,2
2017-02-18,4
2017-02-19,2
2017-02-20,3
2017-02-21,4
2017-02-23,3
2017-02-24,2
2017-02-28,4
2017-03-01,7
2017-03-02,1
2017-03-03,5
2017-03-04,5
2017-03-05,1
2017-03-06,7
2017-03-07,4
2017-03-08,2
2017-03-09,1
2017-03-10,3
2017-03-11,3
2017-03-12,4
2017-03-13,6
2017-03-14,3
2017-03-15,4
2017-03-16,4
2017-03-18,3
2017-03-19,3
2017-03-20,1
2017-03-21,5
2017-03-22,3
2017-03-23,3
2017-03-24,5
2017-03-25,2
2017-03-26,1
2017-03-27,3
2017-03-28,1
2017-03-29,2
2017-03-30,5
2017-03-31,6
2017-04-01,1
2017-04-02,6
2017-04-03,2
2017-04-04,2
2017-04-05,9
2017-04-06,4
2017-04-07,9
2017-04-08,4
2017-04-09,3
2017-04-10,7
2017-04-11,4
2017-04-12,5
2017-04-13,4
2017-04-14,1
2017-04-15,2
2017-04-16,1
2017-04-17,4
2017-04-18,2
2017-04-19,3
2017-04-20,3
2017-04-21,3
2017-04-22,5
2017-04-23,2
2017-04-24,5
2017-04-25,3
2017-04-26,5
2017-04-27,3
2017-04-28,6
2017-04-29,1
2017-04-30,4
2017-05-01,8
Query:
-- 10. Get monthly toy sales totals
SELECT strftime('%Y-%m', o."order_purchase_timestamp") AS "sale_month", SUM(oi."price") AS "monthly_sales"
FROM "order_items" oi
JOIN "orders" o ON oi."order_id" = o."order_id"
JOIN "products" p ON oi."product_id" = p."product_id"
JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
WHERE t."product_category_name_english" = 'toys'
  AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
GROUP BY "sale_month"
LIMIT 100
Answer:
sale_month,monthly_sales
2017-01,4814.09
2017-02,9403.34
2017-03,12429.47
2017-04,13039.43
2017-05,22626.95
2017-06,15476.35
2017-07,24511.72
2017-08,18126.87
2017-09,31399.22
2017-10,34633.01
2017-11,64320.89
2017-12,57194.14
2018-01,21948.23
2018-02,14778.93
2018-03,23407.4
2018-04,23352.38
2018-05,31767.3
2018-06,21221.45
2018-07,17277.29
2018-08,17689.15
Query:
-- 11. Get average daily toy sales
SELECT AVG(daily_sales) AS "average_daily_sales"
FROM (
  SELECT DATE(o."order_purchase_timestamp") AS "sale_date", SUM(oi."price") AS "daily_sales"
  FROM "order_items" oi
  JOIN "orders" o ON oi."order_id" = o."order_id"
  JOIN "products" p ON oi."product_id" = p."product_id"
  JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
  WHERE t."product_category_name_english" = 'toys'
    AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
  GROUP BY "sale_date"
)
LIMIT 100
Answer:
average_daily_sales
825.1593975903614
End Exploring Related Columns
Task: Can you calculate the 5-day symmetric moving average of predicted toy sales for December 5 to 8, 2018, using daily sales data from January 1, 2017, to August 29, 2018, with a simple linear regression model? Finally provide the sum of those four 5-day moving averages?

Please answer only one complete SQL in sqlite dialect in ```sql``` format.
Usage example: ```sql
SELECT DISTINCT "column_name" FROM "table_name" WHERE ... ``` (Replace "table_name" with the actual table name. Enclose table and column names with double quotations if they contain special characters or match reserved keywords.)
Follow the answer format like: ```csv
Sum_of_5-day_Symmetric_Moving_Averages
sum:float
(Attention: answer in one row)
```
To calculate the 5-day symmetric moving average of predicted toy sales for December 5 to 8, 2018, we first extracted daily toy sales data from January 1, 2017, to August 29, 2018. Using this data, we built a simple linear regression model to predict toy sales for December 3 to 10, 2018. We then calculated the 5-day symmetric moving averages for December 5 to 8 by averaging the predicted sales over a 5-day window centered on each date. The sum of these four moving averages provides the final result..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is (table names): 
['product_category_name_translation', 'sellers', 'customers', 'geolocation', 'order_items', 'order_payments', 'order_reviews', 'orders', 'products', 'leads_qualified', 'leads_closed']

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-10 17:34:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:34:36 - root - INFO - ```sql
WITH daily_sales AS (
    SELECT 
        DATE(o."order_purchase_timestamp") AS sale_date, 
        SUM(oi."price") AS daily_sales,
        (JULIANDAY(DATE(o."order_purchase_timestamp")) - JULIANDAY('2017-01-01')) AS day_number
    FROM "order_items" oi
    JOIN "orders" o ON oi."order_id" = o."order_id"
    JOIN "products" p ON oi."product_id" = p."product_id"
    JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
    WHERE t."product_category_name_english" = 'toys'
      AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
    GROUP BY sale_date
),
summaries AS (
    SELECT 
        COUNT(*) AS n,
        SUM(day_number) AS sum_x,
        SUM(daily_sales) AS sum_y,
        SUM(day_number * day_number) AS sum_xx,
        SUM(day_number * daily_sales) AS sum_xy
    FROM daily_sales
),
regression AS (
    SELECT
        (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x) AS m,
        (sum_y - ((n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)) * sum_x) / n AS b
    FROM summaries
),
dates_to_predict AS (
    SELECT '2018-12-03' AS sale_date, JULIANDAY('2018-12-03') - JULIANDAY('2017-01-01') AS day_number UNION ALL
    SELECT '2018-12-04', JULIANDAY('2018-12-04') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-05', JULIANDAY('2018-12-05') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-06', JULIANDAY('2018-12-06') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-07', JULIANDAY('2018-12-07') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-08', JULIANDAY('2018-12-08') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-09', JULIANDAY('2018-12-09') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-10', JULIANDAY('2018-12-10') - JULIANDAY('2017-01-01')
),
predictions AS (
    SELECT 
        d.sale_date,
        d.day_number,
        regression.m * d.day_number + regression.b AS predicted_sales
    FROM dates_to_predict d
    CROSS JOIN regression
),
target_dates AS (
    SELECT '2018-12-05' AS sale_date UNION ALL
    SELECT '2018-12-06' UNION ALL
    SELECT '2018-12-07' UNION ALL
    SELECT '2018-12-08'
),
moving_averages AS (
    SELECT td.sale_date AS target_date, AVG(p2.predicted_sales) AS moving_average
    FROM target_dates td
    JOIN predictions p1 ON td.sale_date = p1.sale_date
    JOIN predictions p2 ON ABS(p2.day_number - p1.day_number) <= 2
    GROUP BY td.sale_date
),
sum_moving_averages AS (
    SELECT SUM(moving_average) AS sum_of_moving_averages
    FROM moving_averages
)
SELECT sum_of_moving_averages AS "Sum_of_5-day_Symmetric_Moving_Averages"
FROM sum_moving_averages;
```
2025-02-10 17:34:37 - root - INFO - itercount: 1
2025-02-10 17:34:37 - root - INFO - 0
2025-02-10 17:34:37 - root - INFO - results: 
Sum_of_5-day_Symmetric_Moving_Averages
4187.692072072989


2025-02-10 17:34:37 - root - INFO - Please check the answer again by reviewing Can you calculate the 5-day symmetric moving average of predicted toy sales for December 5 to 8, 2018, using daily sales data from January 1, 2017, to August 29, 2018, with a simple linear regression model? Finally provide the sum of those four 5-day moving averages?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Sum_of_5-day_Symmetric_Moving_Averages
sum:float
(Attention: answer in one row)
```
To calculate the 5-day symmetric moving average of predicted toy sales for December 5 to 8, 2018, we first extracted daily toy sales data from January 1, 2017, to August 29, 2018. Using this data, we built a simple linear regression model to predict toy sales for December 3 to 10, 2018. We then calculated the 5-day symmetric moving averages for December 5 to 8 by averaging the predicted sales over a 5-day window centered on each date. The sum of these four moving averages provides the final result. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Sum_of_5-day_Symmetric_Moving_Averages
4187.692072072989
Current sql:
WITH daily_sales AS (
    SELECT 
        DATE(o."order_purchase_timestamp") AS sale_date, 
        SUM(oi."price") AS daily_sales,
        (JULIANDAY(DATE(o."order_purchase_timestamp")) - JULIANDAY('2017-01-01')) AS day_number
    FROM "order_items" oi
    JOIN "orders" o ON oi."order_id" = o."order_id"
    JOIN "products" p ON oi."product_id" = p."product_id"
    JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
    WHERE t."product_category_name_english" = 'toys'
      AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
    GROUP BY sale_date
),
summaries AS (
    SELECT 
        COUNT(*) AS n,
        SUM(day_number) AS sum_x,
        SUM(daily_sales) AS sum_y,
        SUM(day_number * day_number) AS sum_xx,
        SUM(day_number * daily_sales) AS sum_xy
    FROM daily_sales
),
regression AS (
    SELECT
        (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x) AS m,
        (sum_y - ((n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)) * sum_x) / n AS b
    FROM summaries
),
dates_to_predict AS (
    SELECT '2018-12-03' AS sale_date, JULIANDAY('2018-12-03') - JULIANDAY('2017-01-01') AS day_number UNION ALL
    SELECT '2018-12-04', JULIANDAY('2018-12-04') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-05', JULIANDAY('2018-12-05') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-06', JULIANDAY('2018-12-06') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-07', JULIANDAY('2018-12-07') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-08', JULIANDAY('2018-12-08') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-09', JULIANDAY('2018-12-09') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-10', JULIANDAY('2018-12-10') - JULIANDAY('2017-01-01')
),
predictions AS (
    SELECT 
        d.sale_date,
        d.day_number,
        regression.m * d.day_number + regression.b AS predicted_sales
    FROM dates_to_predict d
    CROSS JOIN regression
),
target_dates AS (
    SELECT '2018-12-05' AS sale_date UNION ALL
    SELECT '2018-12-06' UNION ALL
    SELECT '2018-12-07' UNION ALL
    SELECT '2018-12-08'
),
moving_averages AS (
    SELECT td.sale_date AS target_date, AVG(p2.predicted_sales) AS moving_average
    FROM target_dates td
    JOIN predictions p1 ON td.sale_date = p1.sale_date
    JOIN predictions p2 ON ABS(p2.day_number - p1.day_number) <= 2
    GROUP BY td.sale_date
),
sum_moving_averages AS (
    SELECT SUM(moving_average) AS sum_of_moving_averages
    FROM moving_averages
)
SELECT sum_of_moving_averages AS "Sum_of_5-day_Symmetric_Moving_Averages"
FROM sum_moving_averages;
2025-02-10 17:35:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 17:35:15 - root - INFO - ```sql
WITH daily_sales AS (
    SELECT 
        DATE(o."order_purchase_timestamp") AS sale_date, 
        SUM(oi."price") AS daily_sales,
        (JULIANDAY(DATE(o."order_purchase_timestamp")) - JULIANDAY('2017-01-01')) AS day_number
    FROM "order_items" oi
    JOIN "orders" o ON oi."order_id" = o."order_id"
    JOIN "products" p ON oi."product_id" = p."product_id"
    JOIN "product_category_name_translation" t ON p."product_category_name" = t."product_category_name"
    WHERE t."product_category_name_english" = 'toys'
      AND o."order_purchase_timestamp" BETWEEN '2017-01-01' AND '2018-08-29'
    GROUP BY sale_date
),
summaries AS (
    SELECT 
        COUNT(*) AS n,
        SUM(day_number) AS sum_x,
        SUM(daily_sales) AS sum_y,
        SUM(day_number * day_number) AS sum_xx,
        SUM(day_number * daily_sales) AS sum_xy
    FROM daily_sales
),
regression AS (
    SELECT
        (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x) AS m,
        (sum_y - ((n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)) * sum_x) / n AS b
    FROM summaries
),
dates_to_predict AS (
    SELECT '2018-12-03' AS sale_date, JULIANDAY('2018-12-03') - JULIANDAY('2017-01-01') AS day_number UNION ALL
    SELECT '2018-12-04', JULIANDAY('2018-12-04') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-05', JULIANDAY('2018-12-05') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-06', JULIANDAY('2018-12-06') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-07', JULIANDAY('2018-12-07') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-08', JULIANDAY('2018-12-08') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-09', JULIANDAY('2018-12-09') - JULIANDAY('2017-01-01') UNION ALL
    SELECT '2018-12-10', JULIANDAY('2018-12-10') - JULIANDAY('2017-01-01')
),
predictions AS (
    SELECT 
        d.sale_date,
        d.day_number,
        regression.m * d.day_number + regression.b AS predicted_sales
    FROM dates_to_predict d
    CROSS JOIN regression
),
target_dates AS (
    SELECT '2018-12-05' AS sale_date UNION ALL
    SELECT '2018-12-06' UNION ALL
    SELECT '2018-12-07' UNION ALL
    SELECT '2018-12-08'
),
moving_averages AS (
    SELECT td.sale_date AS target_date, AVG(p2.predicted_sales) AS moving_average
    FROM target_dates td
    JOIN predictions p1 ON td.sale_date = p1.sale_date
    JOIN predictions p2 ON ABS(p2.day_number - p1.day_number) <= 2
    GROUP BY td.sale_date
),
sum_moving_averages AS (
    SELECT SUM(moving_average) AS sum_of_moving_averages
    FROM moving_averages
)
SELECT ROUND(sum_of_moving_averages, 4) AS "Sum_of_5-day_Symmetric_Moving_Averages"
FROM sum_moving_averages;
```
2025-02-10 17:35:16 - root - INFO - itercount: 2
2025-02-10 17:35:16 - root - INFO - 0
2025-02-10 17:35:16 - root - INFO - Total iteration counts: 2
