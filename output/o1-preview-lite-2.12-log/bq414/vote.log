```plaintext
1result.sql
```

**Reasoning:**

Between the two SQL queries provided, **`1result.sql`** and **`2result.sql`**, we need to determine which one better fulfills the task requirements:

- **Retrieve the object_id, title, and the formatted metadata date (as 'YYYY-MM-DD')**
- **From objects in "The Libraries" department**
- **Where the cropConfidence is greater than 0.5**
- **And the object's title contains the word "book" (case-insensitive)**

**Comparison:**

1. **Case Sensitivity in Title Filtering:**
   - Both queries use `o.title LIKE '%book%'`, which is **case-sensitive**. However, the requirement specifies a **case-insensitive** search.
   - Ideally, the queries should use `LOWER(o.title) LIKE '%book%'` to make the search case-insensitive. However, since the sample outputs contain titles with "book" in lowercase, and both queries return the correct titles, this issue doesn't significantly affect the results in this context.

2. **Formatting of `metadata_date`:**
   - **`1result.sql`** uses `FORMAT_DATE('%Y-%m-%d', DATE(o.metadata_date))`, which is appropriate if `metadata_date` is of `TIMESTAMP` or `DATETIME` type and ensures the date is formatted correctly.
   - **`2result.sql`** uses `FORMAT_TIMESTAMP('%Y-%m-%d', o.metadata_date)`, which also formats the timestamp correctly. Both methods yield the same result in this case.

3. **Use of `DISTINCT`:**
   - **`1result.sql`** includes `SELECT DISTINCT`, which removes any duplicate records that might arise due to joins or multiple cropHints.
   - **`2result.sql`** does not use `DISTINCT`, which could lead to duplicate rows if an object has multiple `cropHints` with `confidence > 0.5`.

4. **Ordering and Limiting Results:**
   - **`1result.sql`** includes `ORDER BY metadata_date DESC LIMIT 100`, which orders the results by the most recent `metadata_date` and limits the output to 100 records as per the task's potential implicit requirement.
   - **`2result.sql`** does not include an `ORDER BY` or `LIMIT`, which might result in unordered and potentially too many results.

**Conclusion:**

Considering the reasons above, **`1result.sql`** better satisfies the task requirements due to its use of `DISTINCT` to eliminate duplicates, ordering of results, and limiting the output to 100 records. 

It provides a cleaner and more precise result set, adhering closely to the given task.