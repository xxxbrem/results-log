2025-01-28 04:27:48 - openai._base_client - INFO - Retrying request to /chat/completions in 0.386337 seconds
2025-01-28 04:28:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 04:28:32 - root - INFO - SQL:
-- 1. List distinct seasons
SELECT DISTINCT "season_id"
FROM "match"
LIMIT 100
Results:
season_id
1
2
3
4
5
6
7
8
9

2025-01-28 04:28:32 - root - INFO - SQL:
-- 2. Get the names and IDs of all players
SELECT "player_id", "player_name"
FROM "player"
LIMIT 100
Results:
player_id,player_name
1,SC Ganguly
2,BB McCullum
3,RT Ponting
4,DJ Hussey
5,Mohammad Hafeez
6,R Dravid
7,W Jaffer
8,V Kohli
9,JH Kallis
10,CL White
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
16,SB Joshi
17,PA Patel
18,ML Hayden
19,MEK Hussey
20,MS Dhoni
21,SK Raina
22,JDP Oram
23,S Badrinath
24,K Goel
25,JR Hopes
26,KC Sangakkara
27,Yuvraj Singh
28,SM Katich
29,IK Pathan
30,T Kohli
31,YK Pathan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
40,G Gambhir
41,V Sehwag
42,S Dhawan
43,L Ronchi
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
51,S Chanderpaul
52,LRPL Taylor
53,AC Gilchrist
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
59,SB Bangar
60,WPUJC Vaas
61,RP Singh
62,WP Saha
63,LR Shukla
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
69,Kamran Akmal
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
76,RR Sarwan
77,S Sreesanth
78,VRV Singh
79,SS Tiwary
80,DS Kulkarni
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
90,MF Maharoof
91,VY Mahesh
92,TM Srivastava
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
100,SE Marsh
101,SA Asnodkar

2025-01-28 04:28:32 - root - INFO - SQL:
-- 3. Retrieve all types of dismissals
SELECT DISTINCT "kind_out"
FROM "wicket_taken"
LIMIT 100
Results:
kind_out
caught
bowled
run out
lbw
retired hurt
stumped
caught and bowled
hit wicket
obstructing the field

2025-01-28 04:28:32 - root - INFO - SQL:
-- 4. List the matches with their corresponding seasons
SELECT "match_id", "season_id"
FROM "match"
LIMIT 100
Results:
match_id,season_id
335987,1
335988,1
335989,1
335990,1
335991,1
335992,1
335993,1
335994,1
335995,1
335996,1
335997,1
335998,1
335999,1
336000,1
336001,1
336002,1
336003,1
336004,1
336005,1
336006,1
336007,1
336008,1
336009,1
336010,1
336011,1
336012,1
336013,1
336014,1
336015,1
336016,1
336017,1
336018,1
336019,1
336020,1
336021,1
336022,1
336023,1
336024,1
336025,1
336026,1
336027,1
336028,1
336029,1
336030,1
336031,1
336032,1
336033,1
336034,1
336036,1
336037,1
336038,1
336039,1
336040,1
336041,1
336042,1
336043,1
336044,1
336045,1
392186,2
392187,2
392188,2
392189,2
392190,2
392191,2
392193,2
392194,2
392196,2
392197,2
392199,2
392200,2
392201,2
392202,2
392203,2
392204,2
392205,2
392206,2
392207,2
392208,2
392209,2
392210,2
392211,2
392212,2
392213,2
392214,2
392215,2
392216,2
392217,2
392218,2
392219,2
392220,2
392221,2
392222,2
392223,2
392224,2
392225,2
392226,2
392227,2
392228,2
392229,2
392230,2

2025-01-28 04:28:32 - root - INFO - SQL:
-- 5. Find total runs scored by each batsman in all matches
SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."striker"
ORDER BY total_runs DESC
LIMIT 100
Results:
striker,total_runs
21,4083
8,3987
57,3874
40,3589
46,3390
162,3356
187,3339
20,3270
110,3161
42,3082
31,2719
41,2702
85,2529
88,2515
185,2490
32,2469
2,2431
9,2414
133,2329
208,2325
27,2281
6,2170
100,2148
147,2146
53,2069
19,1977
221,1959
154,1926
17,1868
96,1800
64,1771
26,1656
35,1552
183,1466
23,1439
320,1426
104,1395
87,1324
4,1322
254,1304
62,1304
1,1303
303,1287
71,1262
306,1212
79,1205
135,1154
29,1079
18,1074
52,1017
351,1015
158,1001
54,985
56,974
109,962
10,949
383,942
305,917
236,897
97,886
339,842
216,789
214,788
50,783
260,781
44,768
345,728
74,724
354,713
191,691
255,676
178,676
48,672
197,663
355,657
163,648
157,604
237,597
334,574
161,530
171,514
204,506
67,505
167,496
308,472
310,470
276,468
393,449
101,423
25,417
280,414
192,409
266,401
11,394
203,390
321,388
63,386
372,379
112,375
65,368

2025-01-28 04:28:32 - root - INFO - SQL:
-- 6. Find total runs scored by each batsman per season
SELECT m."season_id", bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
JOIN "match" AS m ON
    bb."match_id" = m."match_id"
GROUP BY m."season_id", bb."striker"
ORDER BY m."season_id", total_runs DESC
LIMIT 100
Results:
season_id,striker,total_runs
1,100,616
1,40,534
1,44,514
1,32,468
1,74,441
1,53,436
1,31,435
1,21,421
1,20,414
1,41,406
1,57,404
1,6,371
1,1,349
1,42,340
1,46,320
1,26,320
1,4,319
1,101,311
1,17,302
1,27,299
1,54,288
1,109,241
1,11,225
1,25,221
1,48,206
1,9,199
1,107,196
1,103,193
1,23,192
1,18,189
1,133,188
1,2,188
1,64,179
1,71,178
1,33,176
1,19,168
1,97,167
1,8,165
1,56,161
1,62,159
1,63,157
1,55,155
1,139,152
1,52,149
1,49,147
1,108,145
1,88,145
1,35,135
1,29,131
1,69,128
1,90,125
1,113,117
1,7,115
1,10,114
1,58,112
1,14,112
1,112,109
1,135,104
1,87,104
1,138,103
1,95,103
1,28,96
1,110,95
1,67,90
1,132,82
1,70,81
1,24,76
1,76,73
1,114,70
1,38,70
1,5,64
1,82,54
1,86,52
1,232,49
1,59,47
1,12,46
1,147,45
1,128,42
1,111,40
1,105,39
1,45,39
1,3,39
1,136,37
1,102,36
1,120,35
1,89,34
1,47,34
1,43,34
1,36,34
1,15,34
1,37,33
1,129,31
1,83,30
1,50,30
1,153,28
1,61,27
1,79,26
1,68,26
1,81,25
1,51,25

2025-01-28 04:28:32 - root - INFO - SQL:
-- 7. Find the number of wickets taken by each bowler, excluding certain dismissal types
SELECT bb."bowler", COUNT(*) AS wickets
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
GROUP BY bb."bowler"
ORDER BY wickets DESC
LIMIT 100
Results:
bowler,wickets
194,143
136,123
71,122
67,119
50,118
201,100
81,97
73,97
15,92
94,90
61,90
131,89
315,85
299,85
14,84
109,82
32,81
29,79
35,77
190,75
151,75
232,72
126,72
80,72
364,70
106,68
89,68
39,65
9,65
121,59
221,56
38,55
382,54
84,53
367,52
357,51
310,49
186,47
188,45
124,45
276,42
374,40
350,40
270,40
235,40
31,40
333,39
140,38
77,38
248,37
120,37
166,36
163,35
403,34
378,34
27,34
309,33
334,31
296,31
83,31
293,30
280,30
116,30
386,29
321,29
311,29
82,29
346,28
223,28
196,28
175,28
267,27
256,27
191,27
90,27
375,26
370,25
192,25
66,25
147,24
21,24
316,23
238,23
154,23
451,22
102,22
177,21
91,21
371,20
56,20
258,19
253,19
359,18
356,18
162,18
137,18
60,18
460,17
377,17
363,17

2025-01-28 04:28:32 - root - INFO - SQL:
-- 8. Find the number of wickets taken by each bowler per season, excluding certain dismissal types
SELECT m."season_id", bb."bowler", COUNT(*) AS wickets
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
JOIN "match" AS m ON
    bb."match_id" = m."match_id"
WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
GROUP BY m."season_id", bb."bowler"
ORDER BY m."season_id", wickets DESC
LIMIT 100
Results:
season_id,bowler,wickets
1,102,22
1,38,19
1,120,17
1,109,17
1,77,17
1,67,17
1,32,17
1,91,16
1,90,15
1,61,15
1,29,15
1,126,14
1,39,13
1,15,13
1,118,12
1,105,12
1,73,12
1,151,11
1,136,11
1,131,11
1,121,11
1,80,11
1,78,11
1,71,11
1,49,11
1,14,11
1,149,10
1,94,10
1,106,9
1,70,9
1,119,8
1,117,8
1,82,8
1,31,8
1,435,7
1,124,7
1,122,7
1,84,7
1,25,7
1,89,6
1,63,6
1,1,6
1,147,5
1,144,5
1,116,5
1,115,5
1,81,5
1,60,5
1,50,5
1,143,4
1,66,4
1,59,4
1,44,4
1,9,4
1,437,3
1,153,3
1,83,3
1,58,3
1,45,3
1,41,3
1,27,3
1,22,3
1,175,2
1,148,2
1,137,2
1,99,2
1,98,2
1,86,2
1,72,2
1,54,2
1,12,2
1,8,2
1,5,2
1,4,2
1,438,1
1,436,1
1,174,1
1,142,1
1,135,1
1,112,1
1,108,1
1,68,1
1,57,1
1,48,1
1,37,1
1,21,1
1,16,1
1,13,1
2,61,23
2,124,21
2,73,19
2,194,18
2,131,18
2,29,17
2,223,15
2,126,15
2,116,15
2,215,14
2,136,14
2,121,14

2025-01-28 04:28:32 - root - INFO - SQL:
-- 9. List bowler IDs with their player names
SELECT DISTINCT bb."bowler", p."player_name"
FROM "ball_by_ball" AS bb
JOIN "player" AS p ON
    bb."bowler" = p."player_id"
LIMIT 100
Results:
bowler,player_name
106,AB Dinda
14,P Kumar
15,Z Khan
84,I Sharma
13,AA Noffke
82,AB Agarkar
1,SC Ganguly
9,JH Kallis
16,SB Joshi
63,LR Shukla
10,CL White
66,B Lee
22,JDP Oram
77,S Sreesanth
120,MS Gony
25,JR Hopes
29,IK Pathan
121,M Muralitharan
435,P Amarnath
119,Joginder Sharma
24,K Goel
67,PP Chawla
68,WA Mota
118,GD McGrath
126,MM Patel
436,B Geeves
32,SR Watson
90,MF Maharoof
39,SK Trivedi
89,R Bhatia
38,SK Warne
31,YK Pathan
175,DL Vettori
37,D Salunkhe
73,A Nehra
49,SM Pollock
80,DS Kulkarni
81,R Vinay Kumar
12,B Akhil
44,ST Jayasuriya
50,Harbhajan Singh
48,AM Nayar
60,WPUJC Vaas
61,RP Singh
58,SB Styris
83,M Kartik
59,SB Bangar
5,Mohammad Hafeez
56,A Symonds
4,DJ Hussey
131,PP Ojha
75,Pankaj Singh
117,Mohammad Asif
70,Shahid Afridi
91,VY Mahesh
71,DJ Bravo
150,VS Yeligati
72,MA Khote
99,D Kalyankrishna
78,VRV Singh
102,Sohail Tanvir
124,A Kumble
98,DNT Zoysa
148,SD Chitnis
86,Shoaib Malik
27,Yuvraj Singh
94,DW Steyn
109,JA Morkel
149,CRD Fernando
8,V Kohli
41,V Sehwag
54,Y Venugopal Rao
437,Gagandeep Singh
105,Umar Gul
122,M Ntini
116,PJ Sangwan
143,DP Vijaykumar
112,DB Ravi Teja
111,LPC Silva
45,DJ Thornely
115,RR Raje
21,SK Raina
108,S Vidyut
151,L Balaji
127,CK Kapugedera
147,DR Smith
137,AD Mascarenhas
136,A Mishra
144,Shoaib Akhtar
140,Iqbal Abdulla
153,RR Powar
142,PM Sarvesh Kumar
145,Abdur Razzak
135,TM Dilshan
57,RG Sharma
438,A Nel
174,BAW Mendis
194,SL Malinga
156,T Thushara
155,A Flintoff

2025-01-28 04:28:32 - root - INFO - SQL:
-- 10. List batsman IDs with their player names
SELECT DISTINCT bb."striker", p."player_name"
FROM "ball_by_ball" AS bb
JOIN "player" AS p ON
    bb."striker" = p."player_id"
LIMIT 100
Results:
striker,player_name
6,R Dravid
2,BB McCullum
7,W Jaffer
8,V Kohli
1,SC Ganguly
9,JH Kallis
10,CL White
3,RT Ponting
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
4,DJ Hussey
16,SB Joshi
5,Mohammad Hafeez
17,PA Patel
24,K Goel
18,ML Hayden
25,JR Hopes
19,MEK Hussey
26,KC Sangakkara
20,MS Dhoni
21,SK Raina
27,Yuvraj Singh
22,JDP Oram
28,SM Katich
23,S Badrinath
29,IK Pathan
30,T Kohli
40,G Gambhir
31,YK Pathan
41,V Sehwag
42,S Dhawan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
43,L Ronchi
51,S Chanderpaul
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
52,LRPL Taylor
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
53,AC Gilchrist
62,WP Saha
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
232,UT Yadav
59,SB Bangar
63,LR Shukla
60,WPUJC Vaas
61,RP Singh
69,Kamran Akmal
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
79,SS Tiwary
76,RR Sarwan
80,DS Kulkarni
77,S Sreesanth
78,VRV Singh
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
92,TM Srivastava
90,MF Maharoof
91,VY Mahesh
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
100,SE Marsh
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna

2025-01-28 04:28:32 - root - INFO - SQL:
-- 11. Get the total runs conceded by each bowler
SELECT bb."bowler", SUM(bs."runs_scored") AS runs_conceded
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."bowler"
ORDER BY runs_conceded DESC
LIMIT 100
Results:
bowler,runs_conceded
50,3030
67,2967
14,2966
136,2831
81,2733
71,2658
29,2475
194,2407
15,2383
201,2377
131,2261
109,2233
9,2218
73,2200
232,2185
61,2183
94,2163
35,2102
32,2027
190,1939
151,1924
89,1905
84,1889
299,1880
39,1840
106,1835
221,1659
364,1637
121,1599
80,1585
126,1578
315,1566
38,1385
310,1383
186,1376
83,1317
31,1286
357,1253
120,1201
382,1185
293,1153
367,1131
374,1129
77,1112
166,1102
82,1099
235,1075
66,1042
124,1027
276,1018
140,1015
333,999
191,999
188,998
296,997
27,996
280,978
21,975
163,959
350,947
375,931
346,930
116,916
311,874
334,870
175,870
403,787
192,777
154,766
377,762
370,745
270,739
223,734
309,725
256,698
321,681
248,663
56,656
347,654
267,651
162,644
147,643
378,622
258,611
356,606
196,603
386,598
359,584
322,584
255,566
238,557
316,552
25,539
78,531
210,520
90,494
177,486
153,480
91,478
371,476

2025-01-28 04:28:32 - root - INFO - SQL:
-- 12. Find the dismissed batsmen and their dismissal types
SELECT wt."player_out", wt."kind_out"
FROM "wicket_taken" AS wt
LIMIT 100
Results:
player_out,kind_out
154,caught
46,caught
8,caught
96,caught
208,caught
18,caught
21,caught
53,caught
178,caught
57,caught
20,caught
109,caught
56,caught
188,caught
131,caught
125,caught
53,caught
57,caught
56,caught
54,caught
131,caught
42,caught
185,caught
18,caught
23,caught
133,caught
79,caught
154,caught
20,caught
221,caught
185,caught
21,caught
9,caught
20,caught
63,caught
42,caught
26,caught
252,caught
257,caught
154,caught
258,caught
112,caught
94,caught
135,caught
55,caught
260,caught
2,caught
79,caught
259,caught
254,caught
183,caught
106,caught
74,caught
53,caught
100,caught
167,caught
88,caught
171,caught
48,caught
157,caught
67,caught
14,caught
26,caught
154,caught
9,caught
93,caught
258,caught
112,caught
31,caught
41,caught
254,caught
262,caught
183,caught
6,caught
266,caught
187,caught
54,caught
8,caught
21,caught
53,caught
264,caught
2,caught
64,caught
17,caught
74,caught
171,caught
27,caught
104,caught
35,caught
135,caught
42,caught
260,caught
110,caught
65,caught
79,caught
26,caught
203,caught
268,caught
269,caught
154,caught

2025-01-28 04:28:32 - root - INFO - SQL:
-- 13. Retrieve matches where a specific player took wickets
SELECT DISTINCT bb."match_id"
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
WHERE bb."bowler" = 1 -- Replace 1 with a specific player_id
LIMIT 100
Results:
match_id
335987
336015
336019
336032
392191
548338

2025-01-28 04:28:32 - root - INFO - SQL:
-- 14. List the top scoring batsmen in each match
SELECT bb."match_id", bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."match_id", bb."striker"
ORDER BY bb."match_id", total_runs DESC
LIMIT 100
Results:
match_id,striker,total_runs
335987,2,158
335987,3,20
335987,14,18
335987,4,12
335987,1,10
335987,13,9
335987,9,8
335987,11,7
335987,10,6
335987,7,6
335987,5,5
335987,16,3
335987,15,3
335987,6,2
335987,8,1
335987,12,0
335988,19,116
335988,25,71
335988,26,54
335988,21,32
335988,23,31
335988,18,25
335988,24,24
335988,27,23
335988,28,21
335988,17,15
335988,22,13
335988,29,3
335988,20,2
335989,40,58
335989,42,52
335989,35,29
335989,37,26
335989,32,17
335989,38,14
335989,41,12
335989,31,10
335989,33,9
335989,30,7
335989,39,3
335989,36,2
335989,34,1
335990,46,48
335990,11,39
335990,6,32
335990,44,29
335990,49,28
335990,9,25
335990,52,23
335990,8,23
335990,48,20
335990,47,19
335990,51,16
335990,43,8
335990,12,3
335990,50,2
335990,45,0
335991,4,38
335991,56,32
335991,53,23
335991,59,14
335991,54,14
335991,1,14
335991,5,13
335991,232,10
335991,62,10
335991,58,6
335991,2,5
335991,63,4
335991,61,1
335991,60,0
335991,57,0
335991,55,0
335991,3,0
335992,32,76
335992,27,57
335992,35,36
335992,24,26
335992,67,24
335992,26,20
335992,34,17
335992,25,16
335992,69,15
335992,29,12
335992,31,7
335992,33,5
335992,65,4
335992,64,2
335992,68,1
335992,66,0
335993,41,94
335993,57,66
335993,42,25
335993,54,14
335993,232,12
335993,60,12
335993,56,12
335993,40,12
335993,59,8
335993,53,8

2025-01-28 04:28:32 - root - INFO - SQL:
-- 15. Find the number of matches played by each player
SELECT "player_id", COUNT(DISTINCT "match_id") AS matches_played
FROM "player_match"
GROUP BY "player_id"
LIMIT 100
Results:
player_id,matches_played
1,57
2,91
3,10
4,64
5,8
6,89
7,8
8,134
9,97
10,46
11,31
12,15
13,1
14,113
15,87
16,4
17,101
18,31
19,59
20,142
21,145
22,18
23,93
24,22
25,20
26,69
27,105
28,11
29,99
30,4
31,133
32,91
33,28
34,2
35,124
36,17
37,6
38,54
39,76
40,130
41,102
42,113
43,5
44,30
45,6
46,133
47,16
48,60
49,13
50,125
51,3
52,55
53,80
54,64
55,20
56,39
57,142
58,12
59,11
60,13
61,81
62,88
63,46
64,78
65,22
66,38
67,121
68,12
69,6
70,10
71,105
72,4
73,81
74,28
75,17
76,4
77,44
78,19
79,78
80,65
81,98
82,41
83,55
84,68
85,92
86,7
87,78
88,136
89,91
90,20
91,17
92,7
93,23
94,89
95,31
96,87
97,36
98,3
99,3
100,61

2025-01-28 04:28:32 - root - INFO - itercount: 0
2025-01-28 04:28:32 - root - INFO - Table: playerDDL:
CREATE TABLE player(
        player_id INTEGER PRIMARY KEY,
        player_name TEXT,
        dob DATE,
        batting_hand TEXT,
        bowling_skill TEXT,
        country_name TEXT
    )
Table: teamDDL:
CREATE TABLE team(
        team_id INTEGER PRIMARY KEY,
        name TEXT
    )
Table: matchDDL:
CREATE TABLE match(
        match_id INTEGER PRIMARY KEY,
        team_1 INTEGER,
        team_2 INTEGER,
        match_date DATE,
        season_id INTEGER,
        venue TEXT,
        toss_winner INTEGER,
        toss_decision TEXT,
        win_type TEXT,
        win_margin INTEGER,
        outcome_type TEXT,
        match_winner INTEGER,
        man_of_the_match INTEGER
    )
Table: player_matchDDL:
CREATE TABLE player_match(
        match_id INTEGER NOT NULL,
        player_id INTEGER NOT NULL,
        role TEXT,
        team_id INTEGER,
        PRIMARY KEY(match_id, player_id)
    )
Table: ball_by_ballDDL:
CREATE TABLE ball_by_ball(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        innings_no INTEGER NOT NULL,
        team_batting INTEGER,
        team_bowling INTEGER,
        striker_batting_position INTEGER,
        striker INTEGER,
        non_striker INTEGER,
        bowler INTEGER,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: batsman_scoredDDL:
CREATE TABLE batsman_scored(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        runs_scored INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: wicket_takenDDL:
CREATE TABLE wicket_taken(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        player_out INTEGER,
        kind_out TEXT,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: extra_runsDDL:
CREATE TABLE extra_runs(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        extra_type TEXT,
        extra_runs INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
External knowledge that might be helpful: 
None
The table structure information is (table names): 
['player', 'team', 'match', 'player_match', 'ball_by_ball', 'batsman_scored', 'wicket_taken', 'extra_runs']
Begin Exploring Related Columns
Columns and their potential usage:

- `"match"."match_id"`: Used to identify each match.
- `"match"."season_id"`: Used to group matches by season.
- `"ball_by_ball"."match_id"`: To link ball-by-ball data to specific matches.
- `"ball_by_ball"."striker"`: Player ID of the batsman facing the ball.
- `"ball_by_ball"."bowler"`: Player ID of the bowler delivering the ball.
- `"batsman_scored"."match_id"`, `"over_id"`, `"ball_id"`, `"innings_no"`: To link runs scored to specific deliveries.
- `"batsman_scored"."runs_scored"`: Number of runs scored on a delivery.
- `"wicket_taken"."match_id"`, `"over_id"`, `"ball_id"`, `"innings_no"`: To link wickets taken to specific deliveries.
- `"wicket_taken"."player_out"`: Player ID of the batsman dismissed.
- `"wicket_taken"."kind_out"`: Type of dismissal (e.g., 'bowled', 'caught', etc.).
- `"player"."player_id"`: To link player IDs to player names.
- `"player"."player_name"`: Name of the player.

Conditions that may be used:

- Exclude `kind_out` values of 'run out', 'hit wicket', and 'retired hurt' when counting wickets for bowlers.
- Prioritize players with lower `player_id` in case of ties.
- Group data by `"season_id"` to calculate stats per season.

Here are at least 10 SQLite SQL queries to understand values in related columns:

```sql
-- 1. List distinct seasons
SELECT DISTINCT "season_id"
FROM "match"
LIMIT 100;

-- 2. Get the names and IDs of all players
SELECT "player_id", "player_name"
FROM "player"
LIMIT 100;

-- 3. Retrieve all types of dismissals
SELECT DISTINCT "kind_out"
FROM "wicket_taken"
LIMIT 100;

-- 4. List the matches with their corresponding seasons
SELECT "match_id", "season_id"
FROM "match"
LIMIT 100;

-- 5. Find total runs scored by each batsman in all matches
SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."striker"
ORDER BY total_runs DESC
LIMIT 100;

-- 6. Find total runs scored by each batsman per season
SELECT m."season_id", bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
JOIN "match" AS m ON
    bb."match_id" = m."match_id"
GROUP BY m."season_id", bb."striker"
ORDER BY m."season_id", total_runs DESC
LIMIT 100;

-- 7. Find the number of wickets taken by each bowler, excluding certain dismissal types
SELECT bb."bowler", COUNT(*) AS wickets
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
GROUP BY bb."bowler"
ORDER BY wickets DESC
LIMIT 100;

-- 8. Find the number of wickets taken by each bowler per season, excluding certain dismissal types
SELECT m."season_id", bb."bowler", COUNT(*) AS wickets
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
JOIN "match" AS m ON
    bb."match_id" = m."match_id"
WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
GROUP BY m."season_id", bb."bowler"
ORDER BY m."season_id", wickets DESC
LIMIT 100;

-- 9. List bowler IDs with their player names
SELECT DISTINCT bb."bowler", p."player_name"
FROM "ball_by_ball" AS bb
JOIN "player" AS p ON
    bb."bowler" = p."player_id"
LIMIT 100;

-- 10. List batsman IDs with their player names
SELECT DISTINCT bb."striker", p."player_name"
FROM "ball_by_ball" AS bb
JOIN "player" AS p ON
    bb."striker" = p."player_id"
LIMIT 100;

-- 11. Get the total runs conceded by each bowler
SELECT bb."bowler", SUM(bs."runs_scored") AS runs_conceded
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."bowler"
ORDER BY runs_conceded DESC
LIMIT 100;

-- 12. Find the dismissed batsmen and their dismissal types
SELECT wt."player_out", wt."kind_out"
FROM "wicket_taken" AS wt
LIMIT 100;

-- 13. Retrieve matches where a specific player took wickets
SELECT DISTINCT bb."match_id"
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
WHERE bb."bowler" = 1 -- Replace 1 with a specific player_id
LIMIT 100;

-- 14. List the top scoring batsmen in each match
SELECT bb."match_id", bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."match_id", bb."striker"
ORDER BY bb."match_id", total_runs DESC
LIMIT 100;

-- 15. Find the number of matches played by each player
SELECT "player_id", COUNT(DISTINCT "match_id") AS matches_played
FROM "player_match"
GROUP BY "player_id"
LIMIT 100;
```

Each of these queries explores different aspects of the data to help understand the values in the related columns and how they might be used to accomplish the task.Query:
-- 1. List distinct seasons
SELECT DISTINCT "season_id"
FROM "match"
LIMIT 100
Answer:
season_id
1
2
3
4
5
6
7
8
9
Query:
-- 2. Get the names and IDs of all players
SELECT "player_id", "player_name"
FROM "player"
LIMIT 100
Answer:
player_id,player_name
1,SC Ganguly
2,BB McCullum
3,RT Ponting
4,DJ Hussey
5,Mohammad Hafeez
6,R Dravid
7,W Jaffer
8,V Kohli
9,JH Kallis
10,CL White
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
16,SB Joshi
17,PA Patel
18,ML Hayden
19,MEK Hussey
20,MS Dhoni
21,SK Raina
22,JDP Oram
23,S Badrinath
24,K Goel
25,JR Hopes
26,KC Sangakkara
27,Yuvraj Singh
28,SM Katich
29,IK Pathan
30,T Kohli
31,YK Pathan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
40,G Gambhir
41,V Sehwag
42,S Dhawan
43,L Ronchi
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
51,S Chanderpaul
52,LRPL Taylor
53,AC Gilchrist
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
59,SB Bangar
60,WPUJC Vaas
61,RP Singh
62,WP Saha
63,LR Shukla
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
69,Kamran Akmal
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
76,RR Sarwan
77,S Sreesanth
78,VRV Singh
79,SS Tiwary
80,DS Kulkarni
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
90,MF Maharoof
91,VY Mahesh
92,TM Srivastava
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
100,SE Marsh
101,SA Asnodkar
Query:
-- 3. Retrieve all types of dismissals
SELECT DISTINCT "kind_out"
FROM "wicket_taken"
LIMIT 100
Answer:
kind_out
caught
bowled
run out
lbw
retired hurt
stumped
caught and bowled
hit wicket
obstructing the field
Query:
-- 4. List the matches with their corresponding seasons
SELECT "match_id", "season_id"
FROM "match"
LIMIT 100
Answer:
match_id,season_id
335987,1
335988,1
335989,1
335990,1
335991,1
335992,1
335993,1
335994,1
335995,1
335996,1
335997,1
335998,1
335999,1
336000,1
336001,1
336002,1
336003,1
336004,1
336005,1
336006,1
336007,1
336008,1
336009,1
336010,1
336011,1
336012,1
336013,1
336014,1
336015,1
336016,1
336017,1
336018,1
336019,1
336020,1
336021,1
336022,1
336023,1
336024,1
336025,1
336026,1
336027,1
336028,1
336029,1
336030,1
336031,1
336032,1
336033,1
336034,1
336036,1
336037,1
336038,1
336039,1
336040,1
336041,1
336042,1
336043,1
336044,1
336045,1
392186,2
392187,2
392188,2
392189,2
392190,2
392191,2
392193,2
392194,2
392196,2
392197,2
392199,2
392200,2
392201,2
392202,2
392203,2
392204,2
392205,2
392206,2
392207,2
392208,2
392209,2
392210,2
392211,2
392212,2
392213,2
392214,2
392215,2
392216,2
392217,2
392218,2
392219,2
392220,2
392221,2
392222,2
392223,2
392224,2
392225,2
392226,2
392227,2
392228,2
392229,2
392230,2
Query:
-- 5. Find total runs scored by each batsman in all matches
SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."striker"
ORDER BY total_runs DESC
LIMIT 100
Answer:
striker,total_runs
21,4083
8,3987
57,3874
40,3589
46,3390
162,3356
187,3339
20,3270
110,3161
42,3082
31,2719
41,2702
85,2529
88,2515
185,2490
32,2469
2,2431
9,2414
133,2329
208,2325
27,2281
6,2170
100,2148
147,2146
53,2069
19,1977
221,1959
154,1926
17,1868
96,1800
64,1771
26,1656
35,1552
183,1466
23,1439
320,1426
104,1395
87,1324
4,1322
254,1304
62,1304
1,1303
303,1287
71,1262
306,1212
79,1205
135,1154
29,1079
18,1074
52,1017
351,1015
158,1001
54,985
56,974
109,962
10,949
383,942
305,917
236,897
97,886
339,842
216,789
214,788
50,783
260,781
44,768
345,728
74,724
354,713
191,691
255,676
178,676
48,672
197,663
355,657
163,648
157,604
237,597
334,574
161,530
171,514
204,506
67,505
167,496
308,472
310,470
276,468
393,449
101,423
25,417
280,414
192,409
266,401
11,394
203,390
321,388
63,386
372,379
112,375
65,368
Query:
-- 6. Find total runs scored by each batsman per season
SELECT m."season_id", bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
JOIN "match" AS m ON
    bb."match_id" = m."match_id"
GROUP BY m."season_id", bb."striker"
ORDER BY m."season_id", total_runs DESC
LIMIT 100
Answer:
season_id,striker,total_runs
1,100,616
1,40,534
1,44,514
1,32,468
1,74,441
1,53,436
1,31,435
1,21,421
1,20,414
1,41,406
1,57,404
1,6,371
1,1,349
1,42,340
1,46,320
1,26,320
1,4,319
1,101,311
1,17,302
1,27,299
1,54,288
1,109,241
1,11,225
1,25,221
1,48,206
1,9,199
1,107,196
1,103,193
1,23,192
1,18,189
1,133,188
1,2,188
1,64,179
1,71,178
1,33,176
1,19,168
1,97,167
1,8,165
1,56,161
1,62,159
1,63,157
1,55,155
1,139,152
1,52,149
1,49,147
1,108,145
1,88,145
1,35,135
1,29,131
1,69,128
1,90,125
1,113,117
1,7,115
1,10,114
1,58,112
1,14,112
1,112,109
1,135,104
1,87,104
1,138,103
1,95,103
1,28,96
1,110,95
1,67,90
1,132,82
1,70,81
1,24,76
1,76,73
1,114,70
1,38,70
1,5,64
1,82,54
1,86,52
1,232,49
1,59,47
1,12,46
1,147,45
1,128,42
1,111,40
1,105,39
1,45,39
1,3,39
1,136,37
1,102,36
1,120,35
1,89,34
1,47,34
1,43,34
1,36,34
1,15,34
1,37,33
1,129,31
1,83,30
1,50,30
1,153,28
1,61,27
1,79,26
1,68,26
1,81,25
1,51,25
Query:
-- 7. Find the number of wickets taken by each bowler, excluding certain dismissal types
SELECT bb."bowler", COUNT(*) AS wickets
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
GROUP BY bb."bowler"
ORDER BY wickets DESC
LIMIT 100
Answer:
bowler,wickets
194,143
136,123
71,122
67,119
50,118
201,100
81,97
73,97
15,92
94,90
61,90
131,89
315,85
299,85
14,84
109,82
32,81
29,79
35,77
190,75
151,75
232,72
126,72
80,72
364,70
106,68
89,68
39,65
9,65
121,59
221,56
38,55
382,54
84,53
367,52
357,51
310,49
186,47
188,45
124,45
276,42
374,40
350,40
270,40
235,40
31,40
333,39
140,38
77,38
248,37
120,37
166,36
163,35
403,34
378,34
27,34
309,33
334,31
296,31
83,31
293,30
280,30
116,30
386,29
321,29
311,29
82,29
346,28
223,28
196,28
175,28
267,27
256,27
191,27
90,27
375,26
370,25
192,25
66,25
147,24
21,24
316,23
238,23
154,23
451,22
102,22
177,21
91,21
371,20
56,20
258,19
253,19
359,18
356,18
162,18
137,18
60,18
460,17
377,17
363,17
Query:
-- 8. Find the number of wickets taken by each bowler per season, excluding certain dismissal types
SELECT m."season_id", bb."bowler", COUNT(*) AS wickets
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
JOIN "match" AS m ON
    bb."match_id" = m."match_id"
WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
GROUP BY m."season_id", bb."bowler"
ORDER BY m."season_id", wickets DESC
LIMIT 100
Answer:
season_id,bowler,wickets
1,102,22
1,38,19
1,120,17
1,109,17
1,77,17
1,67,17
1,32,17
1,91,16
1,90,15
1,61,15
1,29,15
1,126,14
1,39,13
1,15,13
1,118,12
1,105,12
1,73,12
1,151,11
1,136,11
1,131,11
1,121,11
1,80,11
1,78,11
1,71,11
1,49,11
1,14,11
1,149,10
1,94,10
1,106,9
1,70,9
1,119,8
1,117,8
1,82,8
1,31,8
1,435,7
1,124,7
1,122,7
1,84,7
1,25,7
1,89,6
1,63,6
1,1,6
1,147,5
1,144,5
1,116,5
1,115,5
1,81,5
1,60,5
1,50,5
1,143,4
1,66,4
1,59,4
1,44,4
1,9,4
1,437,3
1,153,3
1,83,3
1,58,3
1,45,3
1,41,3
1,27,3
1,22,3
1,175,2
1,148,2
1,137,2
1,99,2
1,98,2
1,86,2
1,72,2
1,54,2
1,12,2
1,8,2
1,5,2
1,4,2
1,438,1
1,436,1
1,174,1
1,142,1
1,135,1
1,112,1
1,108,1
1,68,1
1,57,1
1,48,1
1,37,1
1,21,1
1,16,1
1,13,1
2,61,23
2,124,21
2,73,19
2,194,18
2,131,18
2,29,17
2,223,15
2,126,15
2,116,15
2,215,14
2,136,14
2,121,14
Query:
-- 9. List bowler IDs with their player names
SELECT DISTINCT bb."bowler", p."player_name"
FROM "ball_by_ball" AS bb
JOIN "player" AS p ON
    bb."bowler" = p."player_id"
LIMIT 100
Answer:
bowler,player_name
106,AB Dinda
14,P Kumar
15,Z Khan
84,I Sharma
13,AA Noffke
82,AB Agarkar
1,SC Ganguly
9,JH Kallis
16,SB Joshi
63,LR Shukla
10,CL White
66,B Lee
22,JDP Oram
77,S Sreesanth
120,MS Gony
25,JR Hopes
29,IK Pathan
121,M Muralitharan
435,P Amarnath
119,Joginder Sharma
24,K Goel
67,PP Chawla
68,WA Mota
118,GD McGrath
126,MM Patel
436,B Geeves
32,SR Watson
90,MF Maharoof
39,SK Trivedi
89,R Bhatia
38,SK Warne
31,YK Pathan
175,DL Vettori
37,D Salunkhe
73,A Nehra
49,SM Pollock
80,DS Kulkarni
81,R Vinay Kumar
12,B Akhil
44,ST Jayasuriya
50,Harbhajan Singh
48,AM Nayar
60,WPUJC Vaas
61,RP Singh
58,SB Styris
83,M Kartik
59,SB Bangar
5,Mohammad Hafeez
56,A Symonds
4,DJ Hussey
131,PP Ojha
75,Pankaj Singh
117,Mohammad Asif
70,Shahid Afridi
91,VY Mahesh
71,DJ Bravo
150,VS Yeligati
72,MA Khote
99,D Kalyankrishna
78,VRV Singh
102,Sohail Tanvir
124,A Kumble
98,DNT Zoysa
148,SD Chitnis
86,Shoaib Malik
27,Yuvraj Singh
94,DW Steyn
109,JA Morkel
149,CRD Fernando
8,V Kohli
41,V Sehwag
54,Y Venugopal Rao
437,Gagandeep Singh
105,Umar Gul
122,M Ntini
116,PJ Sangwan
143,DP Vijaykumar
112,DB Ravi Teja
111,LPC Silva
45,DJ Thornely
115,RR Raje
21,SK Raina
108,S Vidyut
151,L Balaji
127,CK Kapugedera
147,DR Smith
137,AD Mascarenhas
136,A Mishra
144,Shoaib Akhtar
140,Iqbal Abdulla
153,RR Powar
142,PM Sarvesh Kumar
145,Abdur Razzak
135,TM Dilshan
57,RG Sharma
438,A Nel
174,BAW Mendis
194,SL Malinga
156,T Thushara
155,A Flintoff
Query:
-- 10. List batsman IDs with their player names
SELECT DISTINCT bb."striker", p."player_name"
FROM "ball_by_ball" AS bb
JOIN "player" AS p ON
    bb."striker" = p."player_id"
LIMIT 100
Answer:
striker,player_name
6,R Dravid
2,BB McCullum
7,W Jaffer
8,V Kohli
1,SC Ganguly
9,JH Kallis
10,CL White
3,RT Ponting
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
4,DJ Hussey
16,SB Joshi
5,Mohammad Hafeez
17,PA Patel
24,K Goel
18,ML Hayden
25,JR Hopes
19,MEK Hussey
26,KC Sangakkara
20,MS Dhoni
21,SK Raina
27,Yuvraj Singh
22,JDP Oram
28,SM Katich
23,S Badrinath
29,IK Pathan
30,T Kohli
40,G Gambhir
31,YK Pathan
41,V Sehwag
42,S Dhawan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
43,L Ronchi
51,S Chanderpaul
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
52,LRPL Taylor
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
53,AC Gilchrist
62,WP Saha
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
232,UT Yadav
59,SB Bangar
63,LR Shukla
60,WPUJC Vaas
61,RP Singh
69,Kamran Akmal
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
79,SS Tiwary
76,RR Sarwan
80,DS Kulkarni
77,S Sreesanth
78,VRV Singh
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
92,TM Srivastava
90,MF Maharoof
91,VY Mahesh
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
100,SE Marsh
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
Query:
-- 11. Get the total runs conceded by each bowler
SELECT bb."bowler", SUM(bs."runs_scored") AS runs_conceded
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."bowler"
ORDER BY runs_conceded DESC
LIMIT 100
Answer:
bowler,runs_conceded
50,3030
67,2967
14,2966
136,2831
81,2733
71,2658
29,2475
194,2407
15,2383
201,2377
131,2261
109,2233
9,2218
73,2200
232,2185
61,2183
94,2163
35,2102
32,2027
190,1939
151,1924
89,1905
84,1889
299,1880
39,1840
106,1835
221,1659
364,1637
121,1599
80,1585
126,1578
315,1566
38,1385
310,1383
186,1376
83,1317
31,1286
357,1253
120,1201
382,1185
293,1153
367,1131
374,1129
77,1112
166,1102
82,1099
235,1075
66,1042
124,1027
276,1018
140,1015
333,999
191,999
188,998
296,997
27,996
280,978
21,975
163,959
350,947
375,931
346,930
116,916
311,874
334,870
175,870
403,787
192,777
154,766
377,762
370,745
270,739
223,734
309,725
256,698
321,681
248,663
56,656
347,654
267,651
162,644
147,643
378,622
258,611
356,606
196,603
386,598
359,584
322,584
255,566
238,557
316,552
25,539
78,531
210,520
90,494
177,486
153,480
91,478
371,476
Query:
-- 12. Find the dismissed batsmen and their dismissal types
SELECT wt."player_out", wt."kind_out"
FROM "wicket_taken" AS wt
LIMIT 100
Answer:
player_out,kind_out
154,caught
46,caught
8,caught
96,caught
208,caught
18,caught
21,caught
53,caught
178,caught
57,caught
20,caught
109,caught
56,caught
188,caught
131,caught
125,caught
53,caught
57,caught
56,caught
54,caught
131,caught
42,caught
185,caught
18,caught
23,caught
133,caught
79,caught
154,caught
20,caught
221,caught
185,caught
21,caught
9,caught
20,caught
63,caught
42,caught
26,caught
252,caught
257,caught
154,caught
258,caught
112,caught
94,caught
135,caught
55,caught
260,caught
2,caught
79,caught
259,caught
254,caught
183,caught
106,caught
74,caught
53,caught
100,caught
167,caught
88,caught
171,caught
48,caught
157,caught
67,caught
14,caught
26,caught
154,caught
9,caught
93,caught
258,caught
112,caught
31,caught
41,caught
254,caught
262,caught
183,caught
6,caught
266,caught
187,caught
54,caught
8,caught
21,caught
53,caught
264,caught
2,caught
64,caught
17,caught
74,caught
171,caught
27,caught
104,caught
35,caught
135,caught
42,caught
260,caught
110,caught
65,caught
79,caught
26,caught
203,caught
268,caught
269,caught
154,caught
Query:
-- 13. Retrieve matches where a specific player took wickets
SELECT DISTINCT bb."match_id"
FROM "ball_by_ball" AS bb
JOIN "wicket_taken" AS wt ON
    bb."match_id" = wt."match_id" AND
    bb."over_id" = wt."over_id" AND
    bb."ball_id" = wt."ball_id" AND
    bb."innings_no" = wt."innings_no"
WHERE bb."bowler" = 1 -- Replace 1 with a specific player_id
LIMIT 100
Answer:
match_id
335987
336015
336019
336032
392191
548338
Query:
-- 14. List the top scoring batsmen in each match
SELECT bb."match_id", bb."striker", SUM(bs."runs_scored") AS total_runs
FROM "ball_by_ball" AS bb
JOIN "batsman_scored" AS bs ON
    bb."match_id" = bs."match_id" AND
    bb."over_id" = bs."over_id" AND
    bb."ball_id" = bs."ball_id" AND
    bb."innings_no" = bs."innings_no"
GROUP BY bb."match_id", bb."striker"
ORDER BY bb."match_id", total_runs DESC
LIMIT 100
Answer:
match_id,striker,total_runs
335987,2,158
335987,3,20
335987,14,18
335987,4,12
335987,1,10
335987,13,9
335987,9,8
335987,11,7
335987,10,6
335987,7,6
335987,5,5
335987,16,3
335987,15,3
335987,6,2
335987,8,1
335987,12,0
335988,19,116
335988,25,71
335988,26,54
335988,21,32
335988,23,31
335988,18,25
335988,24,24
335988,27,23
335988,28,21
335988,17,15
335988,22,13
335988,29,3
335988,20,2
335989,40,58
335989,42,52
335989,35,29
335989,37,26
335989,32,17
335989,38,14
335989,41,12
335989,31,10
335989,33,9
335989,30,7
335989,39,3
335989,36,2
335989,34,1
335990,46,48
335990,11,39
335990,6,32
335990,44,29
335990,49,28
335990,9,25
335990,52,23
335990,8,23
335990,48,20
335990,47,19
335990,51,16
335990,43,8
335990,12,3
335990,50,2
335990,45,0
335991,4,38
335991,56,32
335991,53,23
335991,59,14
335991,54,14
335991,1,14
335991,5,13
335991,232,10
335991,62,10
335991,58,6
335991,2,5
335991,63,4
335991,61,1
335991,60,0
335991,57,0
335991,55,0
335991,3,0
335992,32,76
335992,27,57
335992,35,36
335992,24,26
335992,67,24
335992,26,20
335992,34,17
335992,25,16
335992,69,15
335992,29,12
335992,31,7
335992,33,5
335992,65,4
335992,64,2
335992,68,1
335992,66,0
335993,41,94
335993,57,66
335993,42,25
335993,54,14
335993,232,12
335993,60,12
335993,56,12
335993,40,12
335993,59,8
335993,53,8
Query:
-- 15. Find the number of matches played by each player
SELECT "player_id", COUNT(DISTINCT "match_id") AS matches_played
FROM "player_match"
GROUP BY "player_id"
LIMIT 100
Answer:
player_id,matches_played
1,57
2,91
3,10
4,64
5,8
6,89
7,8
8,134
9,97
10,46
11,31
12,15
13,1
14,113
15,87
16,4
17,101
18,31
19,59
20,142
21,145
22,18
23,93
24,22
25,20
26,69
27,105
28,11
29,99
30,4
31,133
32,91
33,28
34,2
35,124
36,17
37,6
38,54
39,76
40,130
41,102
42,113
43,5
44,30
45,6
46,133
47,16
48,60
49,13
50,125
51,3
52,55
53,80
54,64
55,20
56,39
57,142
58,12
59,11
60,13
61,81
62,88
63,46
64,78
65,22
66,38
67,121
68,12
69,6
70,10
71,105
72,4
73,81
74,28
75,17
76,4
77,44
78,19
79,78
80,65
81,98
82,41
83,55
84,68
85,92
86,7
87,78
88,136
89,91
90,20
91,17
92,7
93,23
94,89
95,31
96,87
97,36
98,3
99,3
100,61
End Exploring Related Columns
Task: Identify the top three batsmen with the most runs and the top three bowlers with the most wickets in each season, displaying them in the same row for each season. In case of ties, prioritize players with lower player_ids. Exclude 'run out', 'hit wicket', and 'retired hurt' as out_types for bowlers.

Please answer only one complete SQL in sqlite dialect in ```sql``` format.
Usage example: ```sql
SELECT DISTINCT "column_name" FROM "table_name" WHERE ... ``` (Replace "table_name" with the actual table name. Enclose table and column names with double quotations if they contain special characters or match reserved keywords.)
Follow the answer format like: ```csv
Season,Batsman1,Batsman2,Batsman3,Bowler1,Bowler2,Bowler3
season1:int,batsman1:str,batsman2:str,batsman3:str,bowler1:str,bowler2:str,bowler3:str
season2:int,batsman1:str,batsman2:str,batsman3:str,bowler1:str,bowler2:str,bowler3:str
...
```

In the table above, for each season, the top three batsmen with the most runs and the top three bowlers with the most wickets are listed in the same row. Batsmen are ranked based on the total runs scored, while bowlers are ranked based on the number of wickets taken, excluding dismissals of type 'run out', 'hit wicket', and 'retired hurt'. In case of ties, players with lower `player_id`s are given priority..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: 

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-28 04:29:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 04:29:28 - root - INFO - ```sql
WITH batsman_runs AS (
    SELECT 
        m."season_id", 
        bb."striker" AS "player_id", 
        SUM(bs."runs_scored") AS total_runs
    FROM "ball_by_ball" AS bb
    JOIN "batsman_scored" AS bs
        ON bb."match_id" = bs."match_id" AND
           bb."over_id" = bs."over_id" AND
           bb."ball_id" = bs."ball_id" AND
           bb."innings_no" = bs."innings_no"
    JOIN "match" AS m
        ON bb."match_id" = m."match_id"
    GROUP BY m."season_id", bb."striker"
),
batsman_ranked AS (
    SELECT 
        "season_id", 
        "player_id",
        "total_runs",
        ROW_NUMBER() OVER (
            PARTITION BY "season_id" 
            ORDER BY "total_runs" DESC, "player_id" ASC
        ) AS rank
    FROM batsman_runs
),
top_batsmen AS (
    SELECT 
        "season_id", 
        "player_id",
        rank
    FROM batsman_ranked
    WHERE rank <= 3
),
bowler_wickets AS (
    SELECT 
        m."season_id", 
        bb."bowler" AS "player_id", 
        COUNT(*) AS wickets
    FROM "ball_by_ball" AS bb
    JOIN "wicket_taken" AS wt
        ON bb."match_id" = wt."match_id" AND
           bb."over_id" = wt."over_id" AND
           bb."ball_id" = wt."ball_id" AND
           bb."innings_no" = wt."innings_no"
    JOIN "match" AS m
        ON bb."match_id" = m."match_id"
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY m."season_id", bb."bowler"
),
bowler_ranked AS (
    SELECT 
        "season_id", 
        "player_id",
        "wickets",
        ROW_NUMBER() OVER (
            PARTITION BY "season_id" 
            ORDER BY "wickets" DESC, "player_id" ASC
        ) AS rank
    FROM bowler_wickets
),
top_bowlers AS (
    SELECT 
        "season_id", 
        "player_id",
        rank
    FROM bowler_ranked
    WHERE rank <=3
)
SELECT
    s."season_id" AS Season,
    b1."player_name" AS Batsman1,
    b2."player_name" AS Batsman2,
    b3."player_name" AS Batsman3,
    bow1."player_name" AS Bowler1,
    bow2."player_name" AS Bowler2,
    bow3."player_name" AS Bowler3
FROM (
    SELECT DISTINCT "season_id" FROM "match"
) AS s
LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 1
) AS tb1 ON s."season_id" = tb1."season_id"
LEFT JOIN "player" AS b1 ON tb1."player_id" = b1."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 2
) AS tb2 ON s."season_id" = tb2."season_id"
LEFT JOIN "player" AS b2 ON tb2."player_id" = b2."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 3
) AS tb3 ON s."season_id" = tb3."season_id"
LEFT JOIN "player" AS b3 ON tb3."player_id" = b3."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 1
) AS tbow1 ON s."season_id" = tbow1."season_id"
LEFT JOIN "player" AS bow1 ON tbow1."player_id" = bow1."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 2
) AS tbow2 ON s."season_id" = tbow2."season_id"
LEFT JOIN "player" AS bow2 ON tbow2."player_id" = bow2."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 3
) AS tbow3 ON s."season_id" = tbow3."season_id"
LEFT JOIN "player" AS bow3 ON tbow3."player_id" = bow3."player_id"

ORDER BY s."season_id" ASC;
```
2025-01-28 04:29:28 - root - INFO - itercount: 1
2025-01-28 04:29:28 - root - INFO - 0
2025-01-28 04:29:28 - root - INFO - results: 
Season,Batsman1,Batsman2,Batsman3,Bowler1,Bowler2,Bowler3
1,SE Marsh,G Gambhir,ST Jayasuriya,Sohail Tanvir,SK Warne,SR Watson
2,ML Hayden,AC Gilchrist,AB de Villiers,RP Singh,A Kumble,A Nehra
3,SR Tendulkar,JH Kallis,SK Raina,PP Ojha,Harbhajan Singh,A Kumble
4,CH Gayle,V Kohli,SR Tendulkar,SL Malinga,MM Patel,S Aravind
5,CH Gayle,G Gambhir,S Dhawan,M Morkel,SP Narine,SL Malinga
6,MEK Hussey,CH Gayle,SK Raina,DJ Bravo,JP Faulkner,Harbhajan Singh
7,RV Uthappa,DR Smith,GJ Maxwell,MM Sharma,SP Narine,B Kumar
8,DA Warner,LMP Simmons,V Kohli,DJ Bravo,SL Malinga,A Nehra
9,V Kohli,DA Warner,AB de Villiers,B Kumar,YS Chahal,SR Watson


2025-01-28 04:29:28 - root - INFO - Please check the answer again by reviewing Identify the top three batsmen with the most runs and the top three bowlers with the most wickets in each season, displaying them in the same row for each season. In case of ties, prioritize players with lower player_ids. Exclude 'run out', 'hit wicket', and 'retired hurt' as out_types for bowlers., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Season,Batsman1,Batsman2,Batsman3,Bowler1,Bowler2,Bowler3
season1:int,batsman1:str,batsman2:str,batsman3:str,bowler1:str,bowler2:str,bowler3:str
season2:int,batsman1:str,batsman2:str,batsman3:str,bowler1:str,bowler2:str,bowler3:str
...
```

In the table above, for each season, the top three batsmen with the most runs and the top three bowlers with the most wickets are listed in the same row. Batsmen are ranked based on the total runs scored, while bowlers are ranked based on the number of wickets taken, excluding dismissals of type 'run out', 'hit wicket', and 'retired hurt'. In case of ties, players with lower `player_id`s are given priority. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Season,Batsman1,Batsman2,Batsman3,Bowler1,Bowler2,Bowler3
1,SE Marsh,G Gambhir,ST Jayasuriya,Sohail Tanvir,SK Warne,SR Watson
2,ML Hayden,AC Gilchrist,AB de Villiers,RP Singh,A Kumble,A Nehra
3,SR Tendulkar,JH Kallis,SK Raina,PP Ojha,Harbhajan Singh,A Kumble
4,CH Gayle,V Kohli,SR Tendulkar,SL Malinga,MM Patel,S Aravind
5,CH Gayle,G Gambhir,S Dhawan,M Morkel,SP Narine,SL Malinga
6,MEK Hussey,CH Gayle,SK Raina,DJ Bravo,JP Faulkner,Harbhajan Singh
7,RV Uthappa,DR Smith,GJ Maxwell,MM Sharma,SP Narine,B Kumar
8,DA Warner,LMP Simmons,V Kohli,DJ Bravo,SL Malinga,A Nehra
9,V Kohli,DA Warner,AB de Villiers,B Kumar,YS Chahal,SR Watson
Current sql:
WITH batsman_runs AS (
    SELECT 
        m."season_id", 
        bb."striker" AS "player_id", 
        SUM(bs."runs_scored") AS total_runs
    FROM "ball_by_ball" AS bb
    JOIN "batsman_scored" AS bs
        ON bb."match_id" = bs."match_id" AND
           bb."over_id" = bs."over_id" AND
           bb."ball_id" = bs."ball_id" AND
           bb."innings_no" = bs."innings_no"
    JOIN "match" AS m
        ON bb."match_id" = m."match_id"
    GROUP BY m."season_id", bb."striker"
),
batsman_ranked AS (
    SELECT 
        "season_id", 
        "player_id",
        "total_runs",
        ROW_NUMBER() OVER (
            PARTITION BY "season_id" 
            ORDER BY "total_runs" DESC, "player_id" ASC
        ) AS rank
    FROM batsman_runs
),
top_batsmen AS (
    SELECT 
        "season_id", 
        "player_id",
        rank
    FROM batsman_ranked
    WHERE rank <= 3
),
bowler_wickets AS (
    SELECT 
        m."season_id", 
        bb."bowler" AS "player_id", 
        COUNT(*) AS wickets
    FROM "ball_by_ball" AS bb
    JOIN "wicket_taken" AS wt
        ON bb."match_id" = wt."match_id" AND
           bb."over_id" = wt."over_id" AND
           bb."ball_id" = wt."ball_id" AND
           bb."innings_no" = wt."innings_no"
    JOIN "match" AS m
        ON bb."match_id" = m."match_id"
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY m."season_id", bb."bowler"
),
bowler_ranked AS (
    SELECT 
        "season_id", 
        "player_id",
        "wickets",
        ROW_NUMBER() OVER (
            PARTITION BY "season_id" 
            ORDER BY "wickets" DESC, "player_id" ASC
        ) AS rank
    FROM bowler_wickets
),
top_bowlers AS (
    SELECT 
        "season_id", 
        "player_id",
        rank
    FROM bowler_ranked
    WHERE rank <=3
)
SELECT
    s."season_id" AS Season,
    b1."player_name" AS Batsman1,
    b2."player_name" AS Batsman2,
    b3."player_name" AS Batsman3,
    bow1."player_name" AS Bowler1,
    bow2."player_name" AS Bowler2,
    bow3."player_name" AS Bowler3
FROM (
    SELECT DISTINCT "season_id" FROM "match"
) AS s
LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 1
) AS tb1 ON s."season_id" = tb1."season_id"
LEFT JOIN "player" AS b1 ON tb1."player_id" = b1."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 2
) AS tb2 ON s."season_id" = tb2."season_id"
LEFT JOIN "player" AS b2 ON tb2."player_id" = b2."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 3
) AS tb3 ON s."season_id" = tb3."season_id"
LEFT JOIN "player" AS b3 ON tb3."player_id" = b3."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 1
) AS tbow1 ON s."season_id" = tbow1."season_id"
LEFT JOIN "player" AS bow1 ON tbow1."player_id" = bow1."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 2
) AS tbow2 ON s."season_id" = tbow2."season_id"
LEFT JOIN "player" AS bow2 ON tbow2."player_id" = bow2."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 3
) AS tbow3 ON s."season_id" = tbow3."season_id"
LEFT JOIN "player" AS bow3 ON tbow3."player_id" = bow3."player_id"

ORDER BY s."season_id" ASC;
2025-01-28 04:30:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 04:30:07 - root - INFO - ```sql
WITH batsman_runs AS (
    SELECT 
        m."season_id", 
        bb."striker" AS "player_id", 
        SUM(bs."runs_scored") AS total_runs
    FROM "ball_by_ball" AS bb
    JOIN "batsman_scored" AS bs
        ON bb."match_id" = bs."match_id" AND
           bb."over_id" = bs."over_id" AND
           bb."ball_id" = bs."ball_id" AND
           bb."innings_no" = bs."innings_no"
    JOIN "match" AS m
        ON bb."match_id" = m."match_id"
    GROUP BY m."season_id", bb."striker"
),
batsman_ranked AS (
    SELECT 
        "season_id", 
        "player_id",
        "total_runs",
        ROW_NUMBER() OVER (
            PARTITION BY "season_id" 
            ORDER BY "total_runs" DESC, "player_id" ASC
        ) AS rank
    FROM batsman_runs
),
top_batsmen AS (
    SELECT 
        "season_id", 
        "player_id",
        rank
    FROM batsman_ranked
    WHERE rank <= 3
),
bowler_wickets AS (
    SELECT 
        m."season_id", 
        bb."bowler" AS "player_id", 
        COUNT(*) AS wickets
    FROM "ball_by_ball" AS bb
    JOIN "wicket_taken" AS wt
        ON bb."match_id" = wt."match_id" AND
           bb."over_id" = wt."over_id" AND
           bb."ball_id" = wt."ball_id" AND
           bb."innings_no" = wt."innings_no"
    JOIN "match" AS m
        ON bb."match_id" = m."match_id"
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY m."season_id", bb."bowler"
),
bowler_ranked AS (
    SELECT 
        "season_id", 
        "player_id",
        "wickets",
        ROW_NUMBER() OVER (
            PARTITION BY "season_id" 
            ORDER BY "wickets" DESC, "player_id" ASC
        ) AS rank
    FROM bowler_wickets
),
top_bowlers AS (
    SELECT 
        "season_id", 
        "player_id",
        rank
    FROM bowler_ranked
    WHERE rank <=3
)
SELECT
    s."season_id" AS Season,
    b1."player_name" AS Batsman1,
    b2."player_name" AS Batsman2,
    b3."player_name" AS Batsman3,
    bow1."player_name" AS Bowler1,
    bow2."player_name" AS Bowler2,
    bow3."player_name" AS Bowler3
FROM (
    SELECT DISTINCT "season_id" FROM "match"
) AS s
LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 1
) AS tb1 ON s."season_id" = tb1."season_id"
LEFT JOIN "player" AS b1 ON tb1."player_id" = b1."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 2
) AS tb2 ON s."season_id" = tb2."season_id"
LEFT JOIN "player" AS b2 ON tb2."player_id" = b2."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_batsmen
    WHERE rank = 3
) AS tb3 ON s."season_id" = tb3."season_id"
LEFT JOIN "player" AS b3 ON tb3."player_id" = b3."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 1
) AS tbow1 ON s."season_id" = tbow1."season_id"
LEFT JOIN "player" AS bow1 ON tbow1."player_id" = bow1."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 2
) AS tbow2 ON s."season_id" = tbow2."season_id"
LEFT JOIN "player" AS bow2 ON tbow2."player_id" = bow2."player_id"

LEFT JOIN (
    SELECT "season_id", "player_id"
    FROM top_bowlers
    WHERE rank = 3
) AS tbow3 ON s."season_id" = tbow3."season_id"
LEFT JOIN "player" AS bow3 ON tbow3."player_id" = bow3."player_id"

ORDER BY s."season_id" ASC;
```
2025-01-28 04:30:07 - root - INFO - itercount: 2
2025-01-28 04:30:07 - root - INFO - 0
2025-01-28 04:30:07 - root - INFO - Total iteration counts: 2
