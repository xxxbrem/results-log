2025-01-28 02:46:05 - openai._base_client - INFO - Retrying request to /chat/completions in 0.456076 seconds
2025-01-28 02:46:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:46:46 - root - INFO - SQL:
SELECT tax_pd, ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Results:
tax_pd,ein,totrevenue,totfuncexpns
201112,250972074,615689,411785
201112,222094018,123398,32238
201205,382494084,339132,311067
201112,166094236,184876,207063
201106,231491160,194999,297198
201112,391449048,208324,212964
201112,382494635,110370,107165
201112,942412714,294294,297732
201112,510340553,252440,284339
201012,431860643,231889,187672
201106,411773248,816862,815407
201206,330316219,374605,389064
201105,720924871,2176110,151050
201112,133394305,57648,59937
201012,311090052,250907,284529
201106,911025090,326516,359690
201106,880181824,565417,618228
201106,860673370,6191901,6218539
201106,431110061,1259941,1250365
201112,221554536,368550,324536
201112,431488916,6263,8214
201112,133737760,887518,1001492
201112,742328963,554010,497729
201112,311617260,1160268,1271154
201112,593089562,217092,208543
201112,841496701,402615,230297
201112,450339622,267402,251667
201112,841476613,142654,117215
201112,061427346,3985749,4102352
201112,450233749,1014987,1021620
201112,742544243,214898,160544
201112,351830590,132489,160207
201112,020468137,404491,391474
201206,860673370,6853798,6799007
201109,931141006,48737,43220
201110,562663346,205291,225232
201110,742208935,239009,190988
201112,562487490,799303,270969
201112,510183465,68693,35754
201112,161454215,41147,36410
201112,752434783,101615,96660
201112,020624596,117983,68471
201112,112727514,592366,513896
201112,841534209,246612,244557
201112,330776377,242673,233804
201210,742208935,245441,223841
201109,042429428,123757,141771
201112,141625139,106452,79804
201012,600001118,634918,362207
201012,042210747,1193694,1303953
201012,160866061,391600,294020
201012,132548780,2334422,2485470
201012,237331116,247695,216432
201012,350899077,162491,172476
201012,591312245,4679679,4859870
201012,231365194,3711792,3472054
201012,541136097,235470,226950
201012,132596500,2898551,5896441
201012,526054081,153916,169319

2025-01-28 02:46:48 - root - INFO - SQL:
SELECT DISTINCT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year
FROM `bigquery-public-data.irs_990.irs_990_2013`
LIMIT 100;
Results:
year
2012
2011
2010
2013
2008
2009
2001
2007

2025-01-28 02:46:49 - root - INFO - SQL:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue > 1000000
LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
272345009,3069541,3252617
371371059,9206536,9781870
350589385,1877740,2047004
930825790,5037778,5948494
376304539,1890814,1938100
350830295,1479623,1436426
650004016,5973792,6846597
940745005,6164194,6283230
135007460,2844627,2211949
560172993,6260207,7108078
41200680,4649694,4200765
880087294,58123650,-1824273
946080365,19907790,19557915
383782755,7615823,5866294
366947279,1605234,1418794
221010190,6098197,5765228
203825348,6151686,4780278
351694366,1074093,1055651
264683543,146569081,136900651
550173315,1438181,1065061
231428823,2004567,1951109
41662000,11590973,10589990
411725229,4805993,5075148
941558464,3633532,3097156
580198114,4008217,3725420
990345010,1115947,398953
742301528,4779386,4266174
640714754,12616017,13395162
741883156,1105436,977831
311205596,17252450,14581406
530259366,6463088,6017170
750918872,1229292,1317997
610591008,1825215,707604
546004683,4009379,4979499
221128510,1709715,1632206
61369657,3272652,3269593
920139334,1084658,1092214
951948865,1001702,886904
621766996,34182088,36772413
616222164,3987347,2980525
581584613,35346594,31019694
741593195,1075496,1079899
416367654,3229921,4462036
310676582,649224664,623005115
810641625,2104612,0
741361102,2488952,2561425
56010637,20972361,21630217
50493920,3631647,3939582
416367653,3971171,3337905
941076364,1619851,2012565
630185430,1542502,1462945
591395087,2095795,2222520
940376375,1055529,1068121
270500843,9780677,13937
274018006,3914732,2378842
223183386,66150340,102083094
582170261,1293854,1173881
381162670,2001299,2352127
942535992,17920639,17633821
776138153,86753338,12282080
592603700,49073714,48625895
133443127,173408717,156577244
133718642,105346843,41542481
262732890,1105880,1120156
540537788,1281108,1304609
232122939,9320312,9349859
521844783,1217252,0
530159345,14553913,15045847
522156601,6969885,6736772
616156163,13901866,13789887
957055654,2645127616,2646670886
416037362,12039779,13173275
111569376,7300739,7909849
202313717,2648099,0

2025-01-28 02:46:51 - root - INFO - SQL:
SELECT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year, COUNT(*) AS filings_count
FROM `bigquery-public-data.irs_990.irs_990_2015`
GROUP BY year
LIMIT 100;
Results:
year,filings_count
2014,237026
2013,12756
2015,42427
2012,1496
2009,155
2010,288
2008,77
2011,548
2003,3
2004,1
2007,3
2006,1
2002,1

2025-01-28 02:46:53 - root - INFO - SQL:
SELECT AVG(totrevenue) AS average_revenue, AVG(totfuncexpns) AS average_expenses
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Results:
average_revenue,average_expenses
7938932.445891336,7446167.297222881

2025-01-28 02:46:55 - root - INFO - SQL:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2017`
ORDER BY totrevenue DESC
LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
941340523,51065716534,50977670187
941105628,24251778809,21975818733
208295721,11695858422,11350122975
900656139,11297001725,11237538826
941196203,10193378790,10162159265
390123480,9680842150,8910541696
390123480,9587415035,9031607225
912153073,8907956801,8486267857
113153422,8438339064,8127257741
720502505,7216705808,7159545591
941156365,6965956577,5280669257
311143265,6440829493,6625506461
450233470,6326720478,5774727529
231352685,6286195000,5642149000
520595110,6046472000,5654342000
135562308,6043438258,5910463741
133783732,6011909761,6044053170
510216586,5953431215,7250274546
941461312,5859550187,5712597562
942854057,5619049200,5059249614
133957095,5317043380,4929181210
416011702,5152134383,4894713095
980380092,5128139561,4264242960
131828429,4931402574,5180469745
951642394,4895423051,4467340135
60646973,4807997730,3681608494
314379427,4789153691,4910674794
110303001,4780943595,3273269905
135598093,4708225588,4392793832
753052953,4658343974,4450607395
611649250,4629361219,4286990330
364724966,4620705638,4141774961
362169147,4581585962,4327880986
42103580,4458905923,4930905851
431491162,4381625623,4987363888
150532082,4369242548,4202180199
741152597,4282066839,4093368978
710569421,4236821221,4217453968
311161086,4226007193,4152138131
363261413,4103552249,4072739258
42103594,3961420000,3604394000
912154267,3938149398,3781247199
840591617,3805780718,3782056678
930798039,3757404559,3665722639
351955872,3721532076,3063851013
946174066,3705341644,3504040944
453791176,3621661130,3409148116
580566256,3589561177,3478441635
131740114,3583255101,3568724443
980123241,3557087000,2845156000
440545275,3539081870,3514055494
900059117,3535304000,3277088000
382359234,3509403557,3420285116
133971298,3507764725,3268322761
410991680,3487488197,3254688711
362154936,3452950120,2791774302
520954463,3414413304,3406721585
951644600,3319765238,2928262195
590624458,3316774822,3244211941
362177139,3244736644,3422030480
160743209,3231905703,3258606172
311774905,3231802694,324162296
910511770,3229090548,3211581153
430653611,3185323683,2994711670
562070036,3133177470,2745774597
203674498,3126468204,3128822213
611740292,3046771758,2845440897
351330472,2877065236,2685141515

2025-01-28 02:46:56 - root - INFO - SQL:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE totrevenue < totfuncexpns
LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
166094236,184876,207063
231491160,194999,297198
391449048,208324,212964
942412714,294294,297732
510340553,252440,284339
330316219,374605,389064
133394305,57648,59937
311090052,250907,284529
911025090,326516,359690
880181824,565417,618228
860673370,6191901,6218539
431488916,6263,8214
133737760,887518,1001492
311617260,1160268,1271154
061427346,3985749,4102352
450233749,1014987,1021620
351830590,132489,160207
562663346,205291,225232
042429428,123757,141771
042210747,1193694,1303953
132548780,2334422,2485470
350899077,162491,172476
591312245,4679679,4859870
132596500,2898551,5896441
526054081,153916,169319
231628480,527281,620516
020664475,1104162,1123922
340819149,4805178,5291470
560579600,652855,654718
237087247,1192197,1208690
630480594,160381,284045
541870905,2727976,3553978
952788856,7554730,8188232
237357226,1250968,1486237
362512404,24018285,25819923
620511893,2221319,3254942
580633971,105775719,117647554
952543028,19299093,19402388
941702753,3183041,3410875
610444762,2788432,2870740
131624100,205587007,231386633
111630813,2783164,3971812
520403670,2458179,3641992
133234632,19397930,25850094
221514241,2603875,3429379
133888641,30670637,33042409
232915952,547441,651242
520591664,7523085,7633466
362167004,9610322,14269644
860390558,7204217,8020486
362167823,62720757,71174919
620479192,4213422,5276345
860133718,8940169,9151138
237115801,95028,113961
311005850,4094881,5865850
741195277,3211302,4359343
421322071,322665,333335
940997140,62579782,63668891
954242175,2876662,3923772
131632519,8578263,8898799
951664113,4107410,4781874
581606182,799983,879245
521398151,7358617,7645911
941262434,2012538,2710177
620674646,235770,236611
426090398,2004250,2278006
112495664,5639787,6984511
540788933,3716945,3723410
131985514,1882944,2282729
237393771,953888,1167842
036011271,836177,976276
237182423,555958,741673
860665712,3429018,3604341
830245647,531399,575366
941415298,40237683,43933692

2025-01-28 02:46:58 - root - INFO - SQL:
SELECT ein, (totrevenue - totfuncexpns) AS revenue_minus_expenses
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Results:
ein,revenue_minus_expenses
237244328,81341
522385104,-80881
311017154,37046
521135824,9599
237222193,-116873
246021385,-11313
990213908,-167755
716076840,654930
866052021,-460979
237122650,-382898
436158894,-424648
592719781,-14440
200946697,-1165879
561412117,-26299
411376272,17291
651300847,97925
460253627,38764
363183692,41212
222842803,1563575
636050522,23146
362987519,-667054
251559261,-15284
316064918,-2272856
450493921,-172928
656088549,-403982
990269654,136081
436921041,661335
363489253,19157940
776224948,-750128
876128290,142574
910853746,95555
521937919,25928
203631134,10527
386090659,2494
300397278,64754
750275625,20625
043821981,-5034
630759180,13230
916037678,343456
237373972,49235
341385441,-980
911766944,3514
591986067,12780
346528417,-626
050382356,29427
391848508,29255
721060866,19480
956107034,-12393
943048491,14594
237069111,-5796
486110616,-609
382319307,42401
486107677,22334
236265518,-7365
586055206,1528
486111957,-34134
931077620,-15795
203109607,9262
231944161,47838
366191936,4555
942375212,-32404
522305267,163190
571140642,13452
376044257,-8262
130970295,-124536
931204757,1674643
596134291,42218
920018710,-330458
237348596,-84930
996046220,204770
133810146,9574742
526047277,157317
841103552,23009
593131383,-40416
351101396,34735
237104346,244397
481165594,5875081
363978082,63677670
956049026,-598267
562295120,22478
431790141,-12927
943039825,-4877
550572568,-121416
460404634,5988
161353961,91804
237371642,-995673
560652336,-17668
382896174,20513
132623436,14599
910834167,249448
470789065,-42661
753188156,2107
231736288,61379
770645010,-4609

2025-01-28 02:47:00 - root - INFO - SQL:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
ORDER BY RAND()
LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
311366316,939800,260596
953209582,305628,644282
264800023,15163,6454
911353222,216745,247953
204062828,224800,275300
760570086,1121676,953589
371538417,116330,122808
830232664,495421,477619
201328128,92495,2573552
421572723,160735,223961
953510055,232617162,179800155
271234120,456188,458800
710336855,207389,221680
232953796,779874,612973
223621312,158526,92390
251804763,235172,211044
620726909,1444756,1570542
954049720,920746,960683
366083639,90381,79049
520796950,469058,577460
271146144,50544,49987
741897502,8308523,7281037
911215739,460463,419260
330833763,25572,25503
522300984,362560,488897
720515239,1003624,1050197
431659423,268081,228717
391792143,712170,851398
236235335,193584,220384
271825679,962474,700149
840532394,1246859,1171306
310963147,88721,32727
610723605,74718534,77076318
860312162,4551108,4635208
582123670,169382,119793
740693540,17434260,17041290
752638966,55899,92706
421291415,204959,189444
316083820,452326,539685
201978483,1343028,1204198
113364427,214542,250525
262367774,3724549,3643015
640702223,244690,209655
351706782,1586146,1524764
561698181,365983,155843
591229583,5098291,4877666
480375890,471103,461447
221633157,133865,113012
237024930,729953,723047
371306860,220293,287906
200964369,148939,143277
300521104,108282,75081
232277329,703115,702293
741536482,2741776,2806475
232097632,168224,184648
43473631,193894,55260
330660277,1444029,1448049
560652312,224702,218575
111805355,849736,829518
146039217,233655,256568
133126533,517122,475924
911405342,258337,260742
351966459,1059568,894703
941672782,18801461,19051132
310713350,54760950,51698527
481070953,794481,776529
450314283,224297,74080
710811347,63705,63666
340604415,247935,233016
731210460,460823,378472
920145501,2153579,2338295
611354311,2472852,2472852
237354328,6026508,3218707
850113191,1806704,1136553
150618030,238259,208954
362709048,3727220,3597196

2025-01-28 02:47:01 - root - INFO - SQL:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE totrevenue = totfuncexpns
LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
30420548,174181,174181
113083762,219389,219389
43497609,2053408,2053408
46052046,44169,44169
232481500,2097430,2097430
392039341,0,0
464064067,271875,271875
621715089,615391,615391
720945796,7360952,7360952
260335902,0,0
450537391,33214334,33214334
113083762,128938,128938
136065171,70780,70780
237060602,0,0
311653393,699100,699100
640783323,1423756,1423756
450448164,2501136,2501136
311195036,7035098,7035098
43174501,10116273,10116273
316029574,49184,49184
581641714,521127,521127
770492134,139218,139218
201634783,3735326,3735326
452765573,713545,713545
455562018,0,0
261712580,1631386,1631386
742336439,1371314,1371314
593553820,0,0
471194849,11517803,11517803
42721269,23126,23126
202234836,0,0
464929486,0,0
222765486,5725322,5725322
460808466,0,0
520962244,0,0
455490584,2990304,2990304
134032925,208448,208448
486283449,35059,35059
510136264,0,0
461340679,0,0
133929066,3106904,3106904
352506275,0,0
464519557,0,0
455384648,10891175,10891175
205901644,195662,195662
900006114,2732372,2732372
43520478,2394141,2394141
272377326,5758498,5758498
273560102,622779,622779
520882914,0,0
640468113,0,0
320182181,2603806,2603806
752806289,768520,768520
236423359,45484,45484
452526738,4754379,4754379
392023357,0,0
943193387,1262021,1262021
522029558,0,0
770046961,0,0
270301399,0,0
311699455,0,0
261584681,106505,106505
611670989,0,0
311681446,1887855,1887855
300204506,173429,173429
631134720,5005383,5005383
660407714,0,0
810479512,4263200,4263200
750399805,0,0
943209613,928870,928870
311629717,6006682,6006682
471093527,0,0
452540612,2494619,2494619
943240353,555758,555758
133281507,0,0
270722038,314951,314951
261590078,2344890,2344890
300062362,0,0
581752871,0,0
161541221,1738814,1738814

2025-01-28 02:47:03 - root - INFO - SQL:
SELECT ein, ABS(totrevenue - totfuncexpns) AS absolute_difference
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Results:
ein,absolute_difference
751562334,232878
391613624,723764
42665867,36213
840532684,178578
581814803,18595
270733750,115473
43508315,28587
263891535,3001
522336109,89285
542057512,60094
223115046,26025
743236898,12254
840564570,11716
463773419,23384
263566862,18022
341940863,561449
341896807,48579
742912461,77133
261318597,17257288
464504901,12444211
351742559,26774031
352197019,616782
760454516,17932
60692379,1729084
236446266,31505
454129451,33317
561957642,61978
541772269,16660
840445578,447467
363200465,140690
770530703,1571622
10467869,26358
251842046,4811875
42428837,8881
210733990,110771
42692275,109855
232325059,174676
381360545,1681545
421333052,14199
731721398,20774
510182452,48274
550232273,33458
274594523,12374
141338575,165917
264032355,306051
816012488,30485
42104326,67986
363342448,132792
650179159,136488
742966731,241174
270047915,2610
10932846,2871057
200195564,99854
592445906,57960
382052726,1013346
450398104,1975815
363297853,19970224
880387136,0
810109712,1024796
591989832,859495
510230538,312940
43263656,3138305
237278865,130129
205812260,22549
352122608,45320
230684193,14921
710294390,25814862
710689680,283401
680138507,28680
381367319,364215
753243082,59378
453617168,30644
562602254,17313
112157078,7548960
380901080,30205
592135073,33290
846039412,84188
710891642,1353413
800015698,155882
521993376,3130203
262051048,14043
161733646,62673
271529439,128061
911529442,22431
463181940,36320
710585312,12473
743019849,1187285
463752110,27359
141551083,26723
50355848,1938
351170473,19368
330997433,13319
251896200,3317
363914084,227904
520808480,151267
363332852,78980
475111581,328644
411389317,336322
916009716,104049
462993223,38945

2025-01-28 02:47:05 - root - INFO - SQL:
SELECT ein, totrevenue, totfuncexpns, (totrevenue - totfuncexpns) AS net_income
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND (totrevenue - totfuncexpns) < 0
LIMIT 100;
Results:
ein,totrevenue,totfuncexpns,net_income
356042156,305087,327877,-22790
362202370,136782,162179,-25397
60646753,98973,123407,-24434
710845972,88315,90730,-2415
260146595,23224,27590,-4366
223348540,12226484,12250496,-24012
956050121,831732,898309,-66577
263653751,49570,54222,-4652
42383933,375241,382133,-6892
352246162,2845066,4186957,-1341891
232616113,12451,20712,-8261
954612730,404235,439815,-35580
951652837,148802,188035,-39233
420186460,626634,633118,-6484
131825916,26640,50232,-23592
363507635,329378,407577,-78199
742728646,981983,1134366,-152383
382132707,185935,201483,-15548
134255387,142052,145799,-3747
330288930,5356304,6383829,-1027525
471129960,99505,100479,-974
720573879,917614,971980,-54366
510182993,312691,318531,-5840
133439360,34582,61984,-27402
430549665,714109,727258,-13149
451457029,1540734,2244941,-704207
204780320,37326,323169,-285843
870749129,176269,226631,-50362
310999025,119645,123012,-3367
60868436,3110164,3158598,-48434
521234660,65707,86936,-21229
43208934,112512,116707,-4195
223619206,21428,34575,-13147
592263083,109340,118628,-9288
592828707,8866624,10840266,-1973642
363783549,1024862,1410096,-385234
452670332,126878,136689,-9811
561677831,3275680,3313042,-37362
841284735,2082525,2159286,-76761
136119199,37296,51211,-13915
346545105,5817296,6057264,-239968
204252337,0,9102,-9102
113219630,619094,643053,-23959
271424101,143568,143674,-106
470494182,37349,41487,-4138
742720125,88813,112503,-23690
382058667,488287,499554,-11267
474205261,420586,541328,-120742
237178736,19239,34847,-15608
260152339,725422,770696,-45274
453127256,192070,414693,-222623
232022702,770263,840371,-70108
580590521,285250,286097,-847
221659502,12147824,12322238,-174414
382959299,884941,886708,-1767
621859820,13682,16539,-2857
841158933,361602,1597515,-1235913
370662532,201299,298150,-96851

2025-01-28 02:47:06 - root - INFO - SQL:
SELECT DISTINCT ein, totrevenue
FROM `bigquery-public-data.irs_990.irs_990_2012`
LIMIT 100;
Results:
ein,totrevenue
250972074,615689
222094018,123398
382494084,339132
166094236,184876
231491160,194999
391449048,208324
382494635,110370
942412714,294294
510340553,252440
431860643,231889
411773248,816862
330316219,374605
720924871,2176110
133394305,57648
311090052,250907
911025090,326516
880181824,565417
860673370,6191901
431110061,1259941
221554536,368550
431488916,6263
133737760,887518
742328963,554010
311617260,1160268
593089562,217092
841496701,402615
450339622,267402
841476613,142654
061427346,3985749
450233749,1014987
742544243,214898
351830590,132489
020468137,404491
860673370,6853798
931141006,48737
562663346,205291
742208935,239009
562487490,799303
510183465,68693
161454215,41147
752434783,101615
020624596,117983
112727514,592366
841534209,246612
330776377,242673
742208935,245441
042429428,123757
141625139,106452
600001118,634918
042210747,1193694
160866061,391600
132548780,2334422
237331116,247695
350899077,162491
591312245,4679679
231365194,3711792
541136097,235470
132596500,2898551
526054081,153916
231628480,527281
020664475,1104162
580566123,19557978
391394068,1951296
340819149,4805178
560579600,652855
742340423,2125329
237042553,13852889
237087247,1192197
346516654,42612778
720542138,2812483
630480594,160381
160743245,1857316
911806943,346849
541870905,2727976
952788856,7554730
810367205,774388
112667021,11156787
237357226,1250968
042105780,21248493
010207716,493438
362512404,24018285
131624146,24409280
020260158,2730287
060653120,22424056
742431071,10006131
620511893,2221319
580633971,105775719
952543028,19299093
590917284,17980075
951648180,70036549
237120898,33508177
941702753,3183041
610444762,2788432
131624100,205587007
530242652,997037763
111630813,2783164
941156300,49034556
351043456,694874
131675082,21623111
520403670,2458179

2025-01-28 02:48:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:48:19 - root - INFO - ```sql
WITH all_data AS (
  SELECT '2012' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2013' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2014' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2015' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2016' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2017' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 100)[OFFSET(50)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 100)[OFFSET(50)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 100)[OFFSET(50)] - APPROX_QUANTILES(totfuncexpns, 100)[OFFSET(50)]) AS difference
FROM all_data
GROUP BY year
ORDER BY difference ASC
LIMIT 3;
```
2025-01-28 02:49:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:49:27 - root - INFO - SQL:
WITH all_data AS (
  SELECT '2012' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2013' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2014' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2015' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2016' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2017' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 100)[OFFSET(50)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 100)[OFFSET(50)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 100)[OFFSET(50)] - APPROX_QUANTILES(totfuncexpns, 100)[OFFSET(50)]) AS difference
FROM all_data
GROUP BY year
ORDER BY difference ASC
LIMIT 3;
Results:
year,median_revenue,median_expenses,difference
2012,395212,374580,20632
2013,402968,381852,21116
2017,419597,393560,26037

2025-01-28 02:49:29 - root - INFO - SQL:
-- Corrected SQL for Query 2:
SELECT DISTINCT
  SAFE_CAST(SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS INT64) AS year
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE tax_pd IS NOT NULL
LIMIT 100
Results:
year
2012
2011
2010
2013
2008
2009
2001
2007

2025-01-28 02:49:31 - root - INFO - SQL:
-- Corrected SQL for Query 4:
SELECT
  SAFE_CAST(SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS INT64) AS year,
  COUNT(*) AS filings_count
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE tax_pd IS NOT NULL
GROUP BY year
LIMIT 100
Results:
year,filings_count
2014,237026
2013,12756
2015,42427
2012,1496
2009,155
2010,288
2008,77
2011,548
2003,3
2004,1
2007,3
2006,1
2002,1

2025-01-28 02:49:33 - root - INFO - SQL:
-- Corrected SQL for Query 15:
SELECT
  SAFE_CAST(SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS INT64) AS year,
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND tax_pd IS NOT NULL
LIMIT 100
Results:
year,ein,totrevenue,totfuncexpns
2012,272345009,3069541,3252617
2013,470269340,466889,485897
2012,371371059,9206536,9781870
2012,43319995,18388,10460
2012,350589385,1877740,2047004
2012,521714096,397282,351874
2012,256378878,204308,6197250
2012,720885687,650511,639515
2012,930825790,5037778,5948494
2012,581651059,46891,88550
2012,376304539,1890814,1938100
2012,350830295,1479623,1436426
2013,942761360,465054,387125
2013,251715419,24492,22376
2013,650004016,5973792,6846597
2012,940745005,6164194,6283230
2012,135007460,2844627,2211949
2013,942681692,11995,9040
2012,454557001,246139,206548
2013,570331111,450616,477241
2012,200061207,448953,168118
2012,560172993,6260207,7108078
2012,41200680,4649694,4200765
2012,256064060,147335,149907
2013,942393010,233705,221097
2013,273687294,407398,358063
2012,720885153,83563,74496
2012,341801832,457,661695
2013,954112810,6735,6351
2013,20441757,113078,140646
2012,880496827,45289,68135
2012,880087294,58123650,-1824273
2012,946080365,19907790,19557915
2013,237540970,15266,14246
2013,237107987,30752,19574
2012,453838460,474748,94062
2012,383782755,7615823,5866294
2012,204744523,93263,4431
2012,752549767,358987,0
2013,426060971,264253,305773
2012,66051304,178190,132213
2012,366947279,1605234,1418794
2013,237109085,315435,329149
2012,221010190,6098197,5765228
2012,356028131,780696,792399
2013,150624585,390299,306390
2012,452820014,0,850
2012,203825348,6151686,4780278
2012,237082160,436981,452702
2013,237142298,125328,100562
2012,61295903,40413,40161
2012,351694366,1074093,1055651
2012,860749972,191428,184487
2012,264683543,146569081,136900651
2013,550173315,1438181,1065061
2012,66020309,11968,69057
2012,237325086,796971,835739
2012,231428823,2004567,1951109
2012,560709313,984617,979023
2012,452527170,168913,150419
2012,756036775,296459,276194
2012,521861766,715836,2409251
2012,41662000,11590973,10589990

2025-01-28 02:50:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:50:22 - root - INFO - ```sql
WITH all_data AS (
  SELECT '2012' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2013' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2014' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2015' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2016' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2017' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] - APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]) AS difference
FROM all_data
GROUP BY year
ORDER BY difference ASC
LIMIT 3;
```
2025-01-28 02:51:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:51:04 - root - INFO - SQL:
WITH all_data AS (
  SELECT '2012' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2013' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2014' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2015' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2016' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2017' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] - APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]) AS difference
FROM all_data
GROUP BY year
ORDER BY difference ASC
LIMIT 3;
Results:
year,median_revenue,median_expenses,difference
2012,406380,396976,9404
2013,422651,403538,19113
2017,423484,400113,23371

2025-01-28 02:51:06 - root - INFO - SQL:
-- Corrected SQL for Query 1:
SELECT
  tax_pd,
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND tax_pd IS NOT NULL
LIMIT 100
Results:
tax_pd,ein,totrevenue,totfuncexpns
201112,250972074,615689,411785
201112,222094018,123398,32238
201205,382494084,339132,311067
201112,166094236,184876,207063
201106,231491160,194999,297198
201112,391449048,208324,212964
201112,382494635,110370,107165
201112,942412714,294294,297732
201112,510340553,252440,284339
201012,431860643,231889,187672
201106,411773248,816862,815407
201206,330316219,374605,389064
201105,720924871,2176110,151050
201112,133394305,57648,59937
201012,311090052,250907,284529
201106,911025090,326516,359690
201106,880181824,565417,618228
201106,860673370,6191901,6218539
201106,431110061,1259941,1250365
201112,221554536,368550,324536
201112,431488916,6263,8214
201112,133737760,887518,1001492
201112,742328963,554010,497729
201112,311617260,1160268,1271154
201112,593089562,217092,208543
201112,841496701,402615,230297
201112,450339622,267402,251667
201112,841476613,142654,117215
201112,061427346,3985749,4102352
201112,450233749,1014987,1021620
201112,742544243,214898,160544
201112,351830590,132489,160207
201112,020468137,404491,391474
201206,860673370,6853798,6799007
201109,931141006,48737,43220
201110,562663346,205291,225232
201110,742208935,239009,190988
201112,562487490,799303,270969
201112,510183465,68693,35754
201112,161454215,41147,36410
201112,752434783,101615,96660
201112,020624596,117983,68471
201112,112727514,592366,513896
201112,841534209,246612,244557
201112,330776377,242673,233804
201210,742208935,245441,223841
201109,042429428,123757,141771
201112,141625139,106452,79804
201012,600001118,634918,362207
201012,042210747,1193694,1303953
201012,160866061,391600,294020
201012,132548780,2334422,2485470
201012,237331116,247695,216432
201012,350899077,162491,172476
201012,591312245,4679679,4859870
201012,231365194,3711792,3472054
201012,541136097,235470,226950
201012,132596500,2898551,5896441
201012,526054081,153916,169319

2025-01-28 02:51:07 - root - INFO - SQL:
-- Corrected SQL for Query 3:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE
  totrevenue > 1000000
  AND totfuncexpns IS NOT NULL
LIMIT 100
Results:
ein,totrevenue,totfuncexpns
272345009,3069541,3252617
371371059,9206536,9781870
350589385,1877740,2047004
930825790,5037778,5948494
376304539,1890814,1938100
350830295,1479623,1436426
650004016,5973792,6846597
940745005,6164194,6283230
135007460,2844627,2211949
560172993,6260207,7108078
41200680,4649694,4200765
880087294,58123650,-1824273
946080365,19907790,19557915
383782755,7615823,5866294
366947279,1605234,1418794
221010190,6098197,5765228
203825348,6151686,4780278
351694366,1074093,1055651
264683543,146569081,136900651
550173315,1438181,1065061
231428823,2004567,1951109
41662000,11590973,10589990
411725229,4805993,5075148
941558464,3633532,3097156
580198114,4008217,3725420
990345010,1115947,398953
742301528,4779386,4266174
640714754,12616017,13395162
741883156,1105436,977831
311205596,17252450,14581406
530259366,6463088,6017170
750918872,1229292,1317997
610591008,1825215,707604
546004683,4009379,4979499
221128510,1709715,1632206
61369657,3272652,3269593
920139334,1084658,1092214
951948865,1001702,886904
621766996,34182088,36772413
616222164,3987347,2980525
581584613,35346594,31019694
741593195,1075496,1079899
416367654,3229921,4462036
310676582,649224664,623005115
810641625,2104612,0
741361102,2488952,2561425
56010637,20972361,21630217
50493920,3631647,3939582
416367653,3971171,3337905
941076364,1619851,2012565
630185430,1542502,1462945
591395087,2095795,2222520
940376375,1055529,1068121
270500843,9780677,13937
274018006,3914732,2378842
223183386,66150340,102083094
582170261,1293854,1173881
381162670,2001299,2352127
942535992,17920639,17633821
776138153,86753338,12282080
592603700,49073714,48625895
133443127,173408717,156577244
133718642,105346843,41542481
262732890,1105880,1120156
540537788,1281108,1304609
232122939,9320312,9349859
521844783,1217252,0
530159345,14553913,15045847
522156601,6969885,6736772
616156163,13901866,13789887
957055654,2645127616,2646670886
416037362,12039779,13173275
111569376,7300739,7909849
202313717,2648099,0

2025-01-28 02:51:09 - root - INFO - SQL:
-- Corrected SQL for Query 5:
SELECT
  AVG(totrevenue) AS average_revenue,
  AVG(totfuncexpns) AS average_expenses
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND totrevenue > 0
  AND totfuncexpns > 0
Results:
average_revenue,average_expenses
8089683.536650629,7588959.658661872

2025-01-28 02:51:11 - root - INFO - SQL:
-- Corrected SQL for Query 6:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE
  totrevenue IS NOT NULL
  AND totrevenue > 0
ORDER BY totrevenue DESC
LIMIT 100
Results:
ein,totrevenue,totfuncexpns
941340523,51065716534,50977670187
941105628,24251778809,21975818733
208295721,11695858422,11350122975
900656139,11297001725,11237538826
941196203,10193378790,10162159265
390123480,9680842150,8910541696
390123480,9587415035,9031607225
912153073,8907956801,8486267857
113153422,8438339064,8127257741
720502505,7216705808,7159545591
941156365,6965956577,5280669257
311143265,6440829493,6625506461
450233470,6326720478,5774727529
231352685,6286195000,5642149000
520595110,6046472000,5654342000
135562308,6043438258,5910463741
133783732,6011909761,6044053170
510216586,5953431215,7250274546
941461312,5859550187,5712597562
942854057,5619049200,5059249614
133957095,5317043380,4929181210
416011702,5152134383,4894713095
980380092,5128139561,4264242960
131828429,4931402574,5180469745
951642394,4895423051,4467340135
60646973,4807997730,3681608494
314379427,4789153691,4910674794
110303001,4780943595,3273269905
135598093,4708225588,4392793832
753052953,4658343974,4450607395
611649250,4629361219,4286990330
364724966,4620705638,4141774961
362169147,4581585962,4327880986
42103580,4458905923,4930905851
431491162,4381625623,4987363888
150532082,4369242548,4202180199
741152597,4282066839,4093368978
710569421,4236821221,4217453968
311161086,4226007193,4152138131
363261413,4103552249,4072739258
42103594,3961420000,3604394000
912154267,3938149398,3781247199
840591617,3805780718,3782056678
930798039,3757404559,3665722639
351955872,3721532076,3063851013
946174066,3705341644,3504040944
453791176,3621661130,3409148116
580566256,3589561177,3478441635
131740114,3583255101,3568724443
980123241,3557087000,2845156000
440545275,3539081870,3514055494
900059117,3535304000,3277088000
382359234,3509403557,3420285116
133971298,3507764725,3268322761
410991680,3487488197,3254688711
362154936,3452950120,2791774302
520954463,3414413304,3406721585
951644600,3319765238,2928262195
590624458,3316774822,3244211941
362177139,3244736644,3422030480
160743209,3231905703,3258606172
311774905,3231802694,324162296
910511770,3229090548,3211581153
430653611,3185323683,2994711670
562070036,3133177470,2745774597
203674498,3126468204,3128822213
611740292,3046771758,2845440897
351330472,2877065236,2685141515

2025-01-28 02:51:12 - root - INFO - SQL:
-- Corrected SQL for Query 7:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND totrevenue < totfuncexpns
  AND totrevenue > 0
  AND totfuncexpns > 0
LIMIT 100
Results:
ein,totrevenue,totfuncexpns
166094236,184876,207063
231491160,194999,297198
391449048,208324,212964
942412714,294294,297732
510340553,252440,284339
330316219,374605,389064
133394305,57648,59937
311090052,250907,284529
911025090,326516,359690
880181824,565417,618228
860673370,6191901,6218539
431488916,6263,8214
133737760,887518,1001492
311617260,1160268,1271154
061427346,3985749,4102352
450233749,1014987,1021620
351830590,132489,160207
562663346,205291,225232
042429428,123757,141771
042210747,1193694,1303953
132548780,2334422,2485470
350899077,162491,172476
591312245,4679679,4859870
132596500,2898551,5896441
526054081,153916,169319
231628480,527281,620516
020664475,1104162,1123922
340819149,4805178,5291470
560579600,652855,654718
237087247,1192197,1208690
630480594,160381,284045
541870905,2727976,3553978
952788856,7554730,8188232
237357226,1250968,1486237
362512404,24018285,25819923
620511893,2221319,3254942
580633971,105775719,117647554
952543028,19299093,19402388
941702753,3183041,3410875
610444762,2788432,2870740
131624100,205587007,231386633
111630813,2783164,3971812
520403670,2458179,3641992
133234632,19397930,25850094
221514241,2603875,3429379
133888641,30670637,33042409
232915952,547441,651242
520591664,7523085,7633466
362167004,9610322,14269644
860390558,7204217,8020486
362167823,62720757,71174919
620479192,4213422,5276345
860133718,8940169,9151138
237115801,95028,113961
311005850,4094881,5865850
741195277,3211302,4359343
421322071,322665,333335
940997140,62579782,63668891
954242175,2876662,3923772
131632519,8578263,8898799
951664113,4107410,4781874
581606182,799983,879245
521398151,7358617,7645911
941262434,2012538,2710177
620674646,235770,236611
426090398,2004250,2278006
112495664,5639787,6984511
540788933,3716945,3723410
131985514,1882944,2282729
237393771,953888,1167842
036011271,836177,976276
237182423,555958,741673
860665712,3429018,3604341
830245647,531399,575366
941415298,40237683,43933692

2025-01-28 02:51:14 - root - INFO - SQL:
-- Corrected SQL for Query 8:
SELECT
  ein,
  (totrevenue - totfuncexpns) AS revenue_minus_expenses
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
LIMIT 100
Results:
ein,revenue_minus_expenses
237244328,81341
522385104,-80881
311017154,37046
521135824,9599
237222193,-116873
246021385,-11313
990213908,-167755
716076840,654930
866052021,-460979
237122650,-382898
436158894,-424648
592719781,-14440
200946697,-1165879
561412117,-26299
411376272,17291
651300847,97925
460253627,38764
363183692,41212
222842803,1563575
636050522,23146
362987519,-667054
251559261,-15284
316064918,-2272856
450493921,-172928
656088549,-403982
990269654,136081
436921041,661335
363489253,19157940
776224948,-750128
876128290,142574
910853746,95555
521937919,25928
203631134,10527
386090659,2494
300397278,64754
750275625,20625
043821981,-5034
630759180,13230
916037678,343456
237373972,49235
341385441,-980
911766944,3514
591986067,12780
346528417,-626
050382356,29427
391848508,29255
721060866,19480
956107034,-12393
943048491,14594
237069111,-5796
486110616,-609
382319307,42401
486107677,22334
236265518,-7365
586055206,1528
486111957,-34134
931077620,-15795
203109607,9262
231944161,47838
366191936,4555
942375212,-32404
522305267,163190
571140642,13452
376044257,-8262
130970295,-124536
931204757,1674643
596134291,42218
920018710,-330458
237348596,-84930
996046220,204770
133810146,9574742
526047277,157317
841103552,23009
593131383,-40416
351101396,34735
237104346,244397
481165594,5875081
363978082,63677670
956049026,-598267
562295120,22478
431790141,-12927
943039825,-4877
550572568,-121416
460404634,5988
161353961,91804
237371642,-995673
560652336,-17668
382896174,20513
132623436,14599
910834167,249448
470789065,-42661
753188156,2107
231736288,61379
770645010,-4609

2025-01-28 02:51:15 - root - INFO - SQL:
-- Corrected SQL for Query 9:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
ORDER BY RAND()
LIMIT 100
Results:
ein,totrevenue,totfuncexpns
840782569,984421,1208957
392005163,2553206,1201771
953972422,294130,344260
205540955,1041644,900816
630413753,1214276,1329624
956128178,186104,189441
364473509,167086,158279
943028162,98078,77852
203459311,379335,342514
840564484,1644634,1709955
956042868,127844160,144345211
237107022,216237,96516
251201246,239692,230706
410665606,822028,730669
204532991,442008,383336
431486035,3603374,3585639
237181444,8780680,8283896
391602445,622385,703381
112642556,1138307,1303357
731703831,176770,110639
460797226,1695,857
201051272,545494,551852
953532367,2844982,2433062
43571721,212745,251283
380726930,75892,103300
141925138,1382767,1468099
381463671,293753,438848
222191674,1975267,2057446
946123312,1113612,965632
20679589,445998,340948
263890560,216211,211595
942985552,2844419,3881170
621604218,247950,328606
560632962,244758,229533
731712284,1036895,1154206
261406886,41014,14248
382914277,381950,408357
237367340,438661,490937
521849336,348578,402531
640254740,25563913,20274308
330553626,473589,623287
237209864,248317,139559
200529309,358472,370103
50374154,561735,662527
430630164,78525,53676
521121163,44162715,41248443
351414723,261901,258276
941079379,875763,882825
161628464,6070804,366274
590685087,260986,250215
208495615,530090,418097
562320868,126365,126515
820289075,57534,78756
310883858,277655,242791
742899050,32630,18030
10114110,381286,380756
450649209,5077250,4954958
522165814,82730,89338
141790964,194012,132878
621533189,33479901,33490215
861130456,2317431,2555020
20226828,6403862,5911081
650221331,8042869,8666004
550393244,21599850,18984277
542014680,189665,101549
237284092,9725749,8294693
751217500,366544,355901
560343025,284727,287873
841366535,331863,333692
223575823,668665,684767
237456553,44331,44043
330718596,390265,359362
941358439,917176,995793
251474974,503081,387781
620347580,462283352,405840584
650838753,531015,527188

2025-01-28 02:51:17 - root - INFO - SQL:
-- Corrected SQL for Query 10:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE
  totrevenue = totfuncexpns
  AND totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
LIMIT 100
Results:
ein,totrevenue,totfuncexpns
30420548,174181,174181
113083762,219389,219389
43497609,2053408,2053408
46052046,44169,44169
232481500,2097430,2097430
392039341,0,0
464064067,271875,271875
621715089,615391,615391
720945796,7360952,7360952
260335902,0,0
450537391,33214334,33214334
113083762,128938,128938
136065171,70780,70780
237060602,0,0
311653393,699100,699100
640783323,1423756,1423756
450448164,2501136,2501136
311195036,7035098,7035098
43174501,10116273,10116273
316029574,49184,49184
581641714,521127,521127
770492134,139218,139218
201634783,3735326,3735326
452765573,713545,713545
455562018,0,0
261712580,1631386,1631386
742336439,1371314,1371314
593553820,0,0
471194849,11517803,11517803
42721269,23126,23126
202234836,0,0
464929486,0,0
222765486,5725322,5725322
460808466,0,0
520962244,0,0
455490584,2990304,2990304
134032925,208448,208448
486283449,35059,35059
510136264,0,0
461340679,0,0
133929066,3106904,3106904
352506275,0,0
464519557,0,0
455384648,10891175,10891175
205901644,195662,195662
900006114,2732372,2732372
43520478,2394141,2394141
272377326,5758498,5758498
273560102,622779,622779
520882914,0,0
640468113,0,0
320182181,2603806,2603806
752806289,768520,768520
236423359,45484,45484
452526738,4754379,4754379
392023357,0,0
943193387,1262021,1262021
522029558,0,0
770046961,0,0
270301399,0,0
311699455,0,0
261584681,106505,106505
611670989,0,0
311681446,1887855,1887855
300204506,173429,173429
631134720,5005383,5005383
660407714,0,0
810479512,4263200,4263200
750399805,0,0
943209613,928870,928870
311629717,6006682,6006682
471093527,0,0
452540612,2494619,2494619
943240353,555758,555758
133281507,0,0
270722038,314951,314951
261590078,2344890,2344890
300062362,0,0
581752871,0,0
161541221,1738814,1738814

2025-01-28 02:51:19 - root - INFO - SQL:
-- Corrected SQL for Query 11:
SELECT
  ein,
  ABS(totrevenue - totfuncexpns) AS absolute_difference
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
LIMIT 100
Results:
ein,absolute_difference
751562334,232878
391613624,723764
42665867,36213
840532684,178578
581814803,18595
270733750,115473
43508315,28587
263891535,3001
522336109,89285
542057512,60094
223115046,26025
743236898,12254
840564570,11716
463773419,23384
263566862,18022
341940863,561449
341896807,48579
742912461,77133
261318597,17257288
464504901,12444211
351742559,26774031
352197019,616782
760454516,17932
60692379,1729084
236446266,31505
454129451,33317
561957642,61978
541772269,16660
840445578,447467
363200465,140690
770530703,1571622
10467869,26358
251842046,4811875
42428837,8881
210733990,110771
42692275,109855
232325059,174676
381360545,1681545
421333052,14199
731721398,20774
510182452,48274
550232273,33458
274594523,12374
141338575,165917
264032355,306051
816012488,30485
42104326,67986
363342448,132792
650179159,136488
742966731,241174
270047915,2610
10932846,2871057
200195564,99854
592445906,57960
382052726,1013346
450398104,1975815
363297853,19970224
880387136,0
810109712,1024796
591989832,859495
510230538,312940
43263656,3138305
237278865,130129
205812260,22549
352122608,45320
230684193,14921
710294390,25814862
710689680,283401
680138507,28680
381367319,364215
753243082,59378
453617168,30644
562602254,17313
112157078,7548960
380901080,30205
592135073,33290
846039412,84188
710891642,1353413
800015698,155882
521993376,3130203
262051048,14043
161733646,62673
271529439,128061
911529442,22431
463181940,36320
710585312,12473
743019849,1187285
463752110,27359
141551083,26723
50355848,1938
351170473,19368
330997433,13319
251896200,3317
363914084,227904
520808480,151267
363332852,78980
475111581,328644
411389317,336322
916009716,104049
462993223,38945

2025-01-28 02:51:20 - root - INFO - SQL:
-- Corrected SQL for Query 12:
SELECT
  ein,
  totrevenue,
  totfuncexpns,
  (totrevenue - totfuncexpns) AS net_income
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND (totrevenue - totfuncexpns) < 0
LIMIT 100
Results:
ein,totrevenue,totfuncexpns,net_income
356042156,305087,327877,-22790
362202370,136782,162179,-25397
60646753,98973,123407,-24434
710845972,88315,90730,-2415
260146595,23224,27590,-4366
223348540,12226484,12250496,-24012
956050121,831732,898309,-66577
263653751,49570,54222,-4652
42383933,375241,382133,-6892
352246162,2845066,4186957,-1341891
232616113,12451,20712,-8261
954612730,404235,439815,-35580
951652837,148802,188035,-39233
420186460,626634,633118,-6484
131825916,26640,50232,-23592
363507635,329378,407577,-78199
742728646,981983,1134366,-152383
382132707,185935,201483,-15548
134255387,142052,145799,-3747
330288930,5356304,6383829,-1027525
471129960,99505,100479,-974
720573879,917614,971980,-54366
510182993,312691,318531,-5840
133439360,34582,61984,-27402
430549665,714109,727258,-13149
451457029,1540734,2244941,-704207
204780320,37326,323169,-285843
870749129,176269,226631,-50362
310999025,119645,123012,-3367
60868436,3110164,3158598,-48434
521234660,65707,86936,-21229
43208934,112512,116707,-4195
223619206,21428,34575,-13147
592263083,109340,118628,-9288
592828707,8866624,10840266,-1973642
363783549,1024862,1410096,-385234
452670332,126878,136689,-9811
561677831,3275680,3313042,-37362
841284735,2082525,2159286,-76761
136119199,37296,51211,-13915
346545105,5817296,6057264,-239968
204252337,0,9102,-9102
113219630,619094,643053,-23959
271424101,143568,143674,-106
470494182,37349,41487,-4138
742720125,88813,112503,-23690
382058667,488287,499554,-11267
474205261,420586,541328,-120742
237178736,19239,34847,-15608
260152339,725422,770696,-45274
453127256,192070,414693,-222623
232022702,770263,840371,-70108
580590521,285250,286097,-847
221659502,12147824,12322238,-174414
382959299,884941,886708,-1767
621859820,13682,16539,-2857
841158933,361602,1597515,-1235913
370662532,201299,298150,-96851

2025-01-28 02:51:20 - root - INFO - itercount: 0
2025-01-28 02:51:20 - root - INFO - Database Name: bigquery-public-data
Schema Name: irs_990
DDL describes table information.
,0
table_name,irs_990_2016
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_2016`
(
  ein STRING NOT NULL,
  elf STRING,
  tax_pd INT64,
  subseccd INT64,
  s501c3or4947a1cd STRING,
  schdbind STRING,
  politicalactvtscd STRING,
  lbbyingactvtscd STRING,
  subjto6033cd STRING,
  dnradvisedfundscd STRING,
  prptyintrcvdcd STRING,
  maintwrkofartcd STRING,
  crcounselingqstncd STRING,
  hldassetsintermpermcd STRING,
  rptlndbldgeqptcd STRING,
  rptinvstothsecd STRING,
  rptinvstprgrelcd STRING,
  rptothasstcd STRING,
  rptothliabcd STRING,
  sepcnsldtfinstmtcd STRING,
  sepindaudfinstmtcd STRING,
  inclinfinstmtcd STRING,
  operateschools170cd STRING,
  frgnofficecd STRING,
  frgnrevexpnscd STRING,
  frgngrntscd STRING,
  frgnaggragrntscd STRING,
  rptprofndrsngfeescd STRING,
  rptincfnndrsngcd STRING,
  rptincgamingcd STRING,
  operatehosptlcd STRING,
  hospaudfinstmtcd STRING,
  rptgrntstogovtcd STRING,
  rptgrntstoindvcd STRING,
  rptyestocompnstncd STRING,
  txexmptbndcd STRING,
  invstproceedscd STRING,
  maintescrwaccntcd STRING,
  actonbehalfcd STRING,
  engageexcessbnftcd STRING,
  awarexcessbnftcd STRING,
  loantofficercd STRING,
  grantoofficercd STRING,
  dirbusnreltdcd STRING,
  fmlybusnreltdcd STRING,
  servasofficercd STRING,
  recvnoncashcd STRING,
  recvartcd STRING,
  ceaseoperationscd STRING,
  sellorexchcd STRING,
  ownsepentcd STRING,
  reltdorgcd STRING,
  intincntrlcd STRING,
  orgtrnsfrcd STRING,
  conduct5percentcd STRING,
  compltschocd STRING,
  f1096cnt INT64,
  fw2gcnt INT64,
  wthldngrulescd STRING,
  noemplyeesw3cnt INT64,
  filerqrdrtnscd STRING,
  unrelbusinccd STRING,
  filedf990tcd STRING,
  frgnacctcd STRING,
  prohibtdtxshltrcd STRING,
  prtynotifyorgcd STRING,
  filedf8886tcd STRING,
  solicitcntrbcd STRING,
  exprstmntcd STRING,
  providegoodscd STRING,
  notfydnrvalcd STRING,
  filedf8282cd STRING,
  f8282cnt INT64,
  fndsrcvdcd STRING,
  premiumspaidcd STRING,
  filedf8899cd STRING,
  filedf1098ccd STRING,
  excbushldngscd STRING,
  s4966distribcd STRING,
  distribtodonorcd STRING,
  initiationfees INT64,
  grsrcptspublicuse INT64,
  grsincmembers INT64,
  grsincother INT64,
  filedlieuf1041cd STRING,
  txexmptint INT64,
  qualhlthplncd STRING,
  qualhlthreqmntn INT64,
  qualhlthonhnd INT64,
  rcvdpdtngcd STRING,
  filedf720cd STRING,
  totreprtabled INT64,
  totcomprelatede INT64,
  totestcompf INT64,
  noindiv100kcnt INT64,
  nocontractor100kcnt INT64,
  totcntrbgfts INT64,
  prgmservcode2acd INT64,
  totrev2acola INT64,
  prgmservcode2bcd INT64,
  totrev2bcola INT64,
  prgmservcode2ccd INT64,
  totrev2ccola INT64,
  prgmservcode2dcd INT64,
  totrev2dcola INT64,
  prgmservcode2ecd INT64,
  totrev2ecola INT64,
  totrev2fcola INT64,
  totprgmrevnue INT64,
  invstmntinc INT64,
  txexmptbndsproceeds INT64,
  royaltsinc INT64,
  grsrntsreal INT64,
  grsrntsprsnl INT64,
  rntlexpnsreal INT64,
  rntlexpnsprsnl INT64,
  rntlincreal INT64,
  rntlincprsnl INT64,
  netrntlinc INT64,
  grsalesecur INT64,
  grsalesothr INT64,
  cstbasisecur INT64,
  cstbasisothr INT64,
  gnlsecur INT64,
  gnlsothr INT64,
  netgnls INT64,
  grsincfndrsng INT64,
  lessdirfndrsng INT64,
  netincfndrsng INT64,
  grsincgaming INT64,
  lessdirgaming INT64,
  netincgaming INT64,
  grsalesinvent INT64,
  lesscstofgoods INT64,
  netincsales INT64,
  miscrev11acd INT64,
  miscrevtota INT64,
  miscrev11bcd INT64,
  miscrevtot11b INT64,
  miscrev11ccd INT64,
  miscrevtot11c INT64,
  miscrevtot11d INT64,
  miscrevtot11e INT64,
  totrevenue INT64,
  grntstogovt INT64,
  grnsttoindiv INT64,
  grntstofrgngovt INT64,
  benifitsmembrs INT64,
  compnsatncurrofcr INT64,
  compnsatnandothr INT64,
  othrsalwages INT64,
  pensionplancontrb INT64,
  othremplyeebenef INT64,
  payrolltx INT64,
  feesforsrvcmgmt INT64,
  legalfees INT64,
  accntingfees INT64,
  feesforsrvclobby INT64,
  profndraising INT64,
  feesforsrvcinvstmgmt INT64,
  feesforsrvcothr INT64,
  advrtpromo INT64,
  officexpns INT64,
  infotech INT64,
  royaltsexpns INT64,
  occupancy INT64,
  travel INT64,
  travelofpublicoffcl INT64,
  converconventmtng INT64,
  interestamt INT64,
  pymtoaffiliates INT64,
  deprcatndepletn INT64,
  insurance INT64,
  othrexpnsa INT64,
  othrexpnsb INT64,
  othrexpnsc INT64,
  othrexpnsd INT64,
  othrexpnse INT64,
  othrexpnsf INT64,
  totfuncexpns INT64,
  nonintcashend INT64,
  svngstempinvend INT64,
  pldgegrntrcvblend INT64,
  accntsrcvblend INT64,
  currfrmrcvblend INT64,
  rcvbldisqualend INT64,
  notesloansrcvblend INT64,
  invntriesalesend INT64,
  prepaidexpnsend INT64,
  lndbldgsequipend INT64,
  invstmntsend INT64,
  invstmntsothrend INT64,
  invstmntsprgmend INT64,
  intangibleassetsend INT64,
  othrassetsend INT64,
  totassetsend INT64,
  accntspayableend INT64,
  grntspayableend INT64,
  deferedrevnuend INT64,
  txexmptbndsend INT64,
  escrwaccntliabend INT64,
  paybletoffcrsend INT64,
  secrdmrtgsend INT64,
  unsecurednotesend INT64,
  othrliabend INT64,
  totliabend INT64,
  unrstrctnetasstsend INT64,
  temprstrctnetasstsend INT64,
  permrstrctnetasstsend INT64,
  capitalstktrstend INT64,
  paidinsurplusend INT64,
  retainedearnend INT64,
  totnetassetend INT64,
  totnetliabastend INT64,
  nonpfrea INT64,
  totnooforgscnt INT64,
  totsupport INT64,
  gftgrntsrcvd170 INT64,
  txrevnuelevied170 INT64,
  srvcsval170 INT64,
  pubsuppsubtot170 INT64,
  exceeds2pct170 INT64,
  pubsupplesspct170 INT64,
  samepubsuppsubtot170 INT64,
  grsinc170 INT64,
  netincunreltd170 INT64,
  othrinc170 INT64,
  totsupp170 INT64,
  grsrcptsrelated170 INT64,
  totgftgrntrcvd509 INT64,
  grsrcptsadmissn509 INT64,
  grsrcptsactivities509 INT64,
  txrevnuelevied509 INT64,
  srvcsval509 INT64,
  pubsuppsubtot509 INT64,
  rcvdfrmdisqualsub509 INT64,
  exceeds1pct509 INT64,
  subtotpub509 INT64,
  pubsupplesub509 INT64,
  samepubsuppsubtot509 INT64,
  grsinc509 INT64,
  unreltxincls511tx509 INT64,
  subtotsuppinc509 INT64,
  netincunrelatd509 INT64,
  othrinc509 INT64,
  totsupp509 INT64
)
OPTIONS(
  description=""IRS 990 2016 dataset""
);"

Some other tables have the similar structure: ['irs_990_2016', 'irs_990_2012', 'irs_990_2017', 'irs_990_2014', 'irs_990_2015', 'irs_990_2013']
,1
table_name,irs_990_ez_2017
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_ez_2017`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number""),
  elf STRING OPTIONS(description=""E-file indicator""),
  tax_pd INT64 OPTIONS(description=""Tax period""),
  subseccd INT64 OPTIONS(description=""Subsection code""),
  totcntrbs INT64 OPTIONS(description=""Contributions gifts grants etc received""),
  prgmservrev INT64 OPTIONS(description=""Program service revenue""),
  duesassesmnts INT64 OPTIONS(description=""Membership dues and assessments""),
  othrinvstinc INT64 OPTIONS(description=""Investment income""),
  grsamtsalesastothr INT64 OPTIONS(description=""Gross amount from sale of assets""),
  basisalesexpnsothr INT64 OPTIONS(description=""Cost or other basis and sales expenses""),
  gnsaleofastothr INT64 OPTIONS(description=""Gain or (loss) from sale of assets""),
  grsincgaming INT64 OPTIONS(description=""Gross income from gaming""),
  grsrevnuefndrsng INT64 OPTIONS(description=""Special events gross revenue""),
  direxpns INT64 OPTIONS(description=""Special events direct expenses""),
  netincfndrsng INT64 OPTIONS(description=""Special events net income (or loss)""),
  grsalesminusret INT64 OPTIONS(description=""Gross sales of inventory""),
  costgoodsold INT64 OPTIONS(description=""Less: cost of goods sold""),
  grsprft INT64 OPTIONS(description=""Gross profit (or loss) from sales of inventory""),
  othrevnue INT64 OPTIONS(description=""Other revenue - total""),
  totrevnue INT64 OPTIONS(description=""Total revenue""),
  totexpns INT64 OPTIONS(description=""Total expenses""),
  totexcessyr INT64 OPTIONS(description=""Excess or deficit""),
  othrchgsnetassetfnd INT64 OPTIONS(description=""Other changes in net assets""),
  networthend INT64 OPTIONS(description=""Net assets EOY""),
  totassetsend INT64 OPTIONS(description=""Total assets e-o-y""),
  totliabend INT64 OPTIONS(description=""Total liabilities e-o-y""),
  totnetassetsend INT64 OPTIONS(description=""Total net worth e-o-y""),
  actvtynotprevrptcd STRING OPTIONS(description=""Activity not previously reported?""),
  chngsinorgcd STRING OPTIONS(description=""Significant changes to governing docs?""),
  unrelbusincd STRING OPTIONS(description=""UBI over $1000?""),
  filedf990tcd STRING OPTIONS(description=""Organization Filed 990T""),
  contractioncd STRING OPTIONS(description=""Liquidation dissolution termination or contraction""),
  politicalexpend INT64 OPTIONS(description=""Direct or indirect political expenditures""),
  filedf1120polcd STRING OPTIONS(description=""File Form 1120-POL?""),
  loanstoofficerscd STRING OPTIONS(description=""Loans to/from officers directors or trustees?""),
  loanstoofficers INT64 OPTIONS(description=""Amount of loans to/from officers""),
  initiationfee INT64 OPTIONS(description=""Initiation fees and capital contributions""),
  grspublicrcpts INT64 OPTIONS(description=""Gross receipts for public use of club facilities""),
  s4958excessbenefcd STRING OPTIONS(description=""Section 4958 excess benefit transactions?""),
  prohibtdtxshltrcd STRING OPTIONS(description=""Party to a prohibited tax shelter transaction?""),
  nonpfrea INT64 OPTIONS(description=""Reason for non-PF status""),
  totnooforgscnt INT64 OPTIONS(description=""Number of organizations supported""),
  totsupport INT64 OPTIONS(description=""Sum of amounts of support""),
  gftgrntsrcvd170 INT64 OPTIONS(description=""Gifts grants membership fees received (170)""),
  txrevnuelevied170 INT64 OPTIONS(description=""Tax revenues levied (170)""),
  srvcsval170 INT64 OPTIONS(description=""Services or facilities furnished by gov (170)""),
  pubsuppsubtot170 INT64 OPTIONS(description=""Public support subtotal (170)""),
  exceeds2pct170 INT64 OPTIONS(description=""Amount support exceeds total (170)""),
  pubsupplesspct170 INT64 OPTIONS(description=""Public support (170)""),
  samepubsuppsubtot170 INT64 OPTIONS(description=""Public support from line 4 (170)""),
  grsinc170 INT64 OPTIONS(description=""Gross income from interest etc (170)""),
  netincunreltd170 INT64 OPTIONS(description=""Net UBI (170)""),
  othrinc170 INT64 OPTIONS(description=""Other income (170)""),
  totsupp170 INT64 OPTIONS(description=""Total support (170)""),
  grsrcptsrelated170 INT64 OPTIONS(description=""Gross receipts from related activities (170)""),
  totgftgrntrcvd509 INT64 OPTIONS(description=""Gifts grants membership fees received (509)""),
  grsrcptsadmissn509 INT64 OPTIONS(description=""Receipts from admissions merchandise etc (509)""),
  grsrcptsactivities509 INT64 OPTIONS(description=""Gross receipts from related activities (509)""),
  txrevnuelevied509 INT64 OPTIONS(description=""Tax revenues levied (509)""),
  srvcsval509 INT64 OPTIONS(description=""Services or facilities furnished by gov (509)""),
  pubsuppsubtot509 INT64 OPTIONS(description=""Public support subtotal (509)""),
  rcvdfrmdisqualsub509 INT64 OPTIONS(description=""Amounts from disqualified persons (509)""),
  exceeds1pct509 INT64 OPTIONS(description=""Amount support exceeds total (509)""),
  subtotpub509 INT64 OPTIONS(description=""Public support subtotal (509)""),
  pubsupplesub509 INT64 OPTIONS(description=""Public support (509)""),
  samepubsuppsubtot509 INT64 OPTIONS(description=""Public support from line 6 (509)""),
  grsinc509 INT64 OPTIONS(description=""Gross income from interest etc (509)""),
  unreltxincls511tx509 INT64 OPTIONS(description=""Net UBI (509)""),
  subtotsuppinc509 INT64 OPTIONS(description=""Subtotal total support (509)""),
  netincunrelatd509 INT64 OPTIONS(description=""Net income from UBI not in 10b (509)""),
  othrinc509 INT64 OPTIONS(description=""Other income (509)""),
  totsupp509 INT64 OPTIONS(description=""Total support (509)"")
)
OPTIONS(
  description=""IRS 990 EZ 2017 dataset""
);"

Some other tables have the similar structure: ['irs_990_ez_2017', 'irs_990_ez_2016', 'irs_990_ez_2013', 'irs_990_ez_2015', 'irs_990_ez_2014', 'irs_990_ez_2012']
,2
table_name,irs_990_pf_2013
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_pf_2013`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number""),
  tax_prd STRING OPTIONS(description=""Tax period (YYYYMM format)""),
  eostatus STRING OPTIONS(description=""EO Status Code""),
  tax_yr INT64 OPTIONS(description=""SOI Year""),
  operatingcd STRING OPTIONS(description=""Operating foundation code""),
  subcd STRING OPTIONS(description=""Subsection code""),
  fairmrktvalamt INT64 OPTIONS(description=""Total assets – e-o-y fair market value""),
  grscontrgifts INT64 OPTIONS(description=""Contributions received""),
  schedbind STRING OPTIONS(description=""Schedule B indicator""),
  intrstrvnue INT64 OPTIONS(description=""Interest revenue""),
  dividndsamt INT64 OPTIONS(description=""Dividends""),
  grsrents INT64 OPTIONS(description=""Gross rents""),
  grsslspramt INT64 OPTIONS(description=""Gross sales price for assets""),
  costsold INT64 OPTIONS(description=""Cost-of-goods-sold""),
  grsprofitbus INT64 OPTIONS(description=""Gross profit""),
  otherincamt INT64 OPTIONS(description=""Other income""),
  totrcptperbks INT64 OPTIONS(description=""Total revenue""),
  compofficers INT64 OPTIONS(description=""Compensation of officers""),
  pensplemplbenf INT64 OPTIONS(description=""Pension plans, employee benefits""),
  legalfeesamt INT64 OPTIONS(description=""Legal fees""),
  accountingfees INT64 OPTIONS(description=""Accounting fees""),
  interestamt INT64 OPTIONS(description=""Interest""),
  depreciationamt INT64 OPTIONS(description=""Depreciation and depletion""),
  occupancyamt INT64 OPTIONS(description=""Occupancy""),
  travlconfmtngs INT64 OPTIONS(description=""Travel, conferences, and meetings""),
  printingpubl INT64 OPTIONS(description=""Printing and publications""),
  topradmnexpnsa INT64 OPTIONS(description=""Total operating and administrative expenses column a""),
  contrpdpbks INT64 OPTIONS(description=""Contributions, gifts, grants paid""),
  totexpnspbks INT64 OPTIONS(description=""Total expenses""),
  excessrcpts INT64 OPTIONS(description=""Net income less deficit""),
  totrcptnetinc INT64 OPTIONS(description=""Total receipts net investment income""),
  topradmnexpnsb INT64 OPTIONS(description=""Total operating and administrative expenses column b""),
  totexpnsnetinc INT64 OPTIONS(description=""Total expenses net investment income""),
  netinvstinc INT64 OPTIONS(description=""Net investment income""),
  trcptadjnetinc INT64 OPTIONS(description=""Total receipts adjusted net income""),
  totexpnsadjnet INT64 OPTIONS(description=""Total expenses adjusted net income""),
  adjnetinc INT64 OPTIONS(description=""Adjusted net income""),
  topradmnexpnsd INT64 OPTIONS(description=""Total operating and administrative expenses column d""),
  totexpnsexempt INT64 OPTIONS(description=""Total expenses – exempt purpose""),
  othrcashamt INT64 OPTIONS(description=""Cash non-interest-bearing – e-o-y book value""),
  invstgovtoblig INT64 OPTIONS(description=""Investments in U.S. & state government obligations – e-o-y book value""),
  invstcorpstk INT64 OPTIONS(description=""Investments in corporate stock – e-o-y book value""),
  invstcorpbnd INT64 OPTIONS(description=""Investments in corporate bonds– e-o-y book value""),
  totinvstsec INT64 OPTIONS(description=""Total investments in securities – e-o-y book value""),
  mrtgloans INT64 OPTIONS(description=""Investments mortgage loans – e-o-y book value""),
  othrinvstend INT64 OPTIONS(description=""Other investments – e-o-y book value""),
  othrassetseoy INT64 OPTIONS(description=""Other assets – e-o-y book value""),
  totassetsend INT64 OPTIONS(description=""Total assets – e-o-y book value""),
  mrtgnotespay INT64 OPTIONS(description=""Mortgage loans payable – e-o-y book value""),
  othrliabltseoy INT64 OPTIONS(description=""Other liabilities – e-o-y book value""),
  totliabend INT64 OPTIONS(description=""Total liabilities – e-o-y book value""),
  tfundnworth INT64 OPTIONS(description=""Total fund net worth – e-o-y book value""),
  fairmrktvaleoy INT64 OPTIONS(description=""Total assets – e-o-y fair market value""),
  totexcapgnls INT64 OPTIONS(description=""Capital gain net income""),
  totexcapgn INT64 OPTIONS(description=""Net gain – sales of assets""),
  totexcapls INT64 OPTIONS(description=""Net loss – sales of assets""),
  invstexcisetx INT64 OPTIONS(description=""Excise tax on net investment income""),
  sec4940notxcd STRING OPTIONS(description=""Section 4940 – no tax""),
  sec4940redtxcd STRING OPTIONS(description=""Section 4940 – 1 % tax""),
  sect511tx INT64 OPTIONS(description=""Section 511 tax""),
  subtitleatx INT64 OPTIONS(description=""Subtitle A tax""),
  totaxpyr INT64 OPTIONS(description=""Total excise tax""),
  esttaxcr INT64 OPTIONS(description=""Estimated tax credit""),
  txwithldsrc INT64 OPTIONS(description=""Tax withheld at source""),
  txpaidf2758 INT64 OPTIONS(description=""Tax paid with Form 2758 (filing extension)""),
  erronbkupwthld INT64 OPTIONS(description=""Erroneous backup withholding credit amount""),
  estpnlty INT64 OPTIONS(description=""Estimated tax penalty""),
  taxdue INT64 OPTIONS(description=""Tax due""),
  overpay INT64 OPTIONS(description=""Overpayment""),
  crelamt INT64 OPTIONS(description=""Credit elect amount""),
  infleg STRING OPTIONS(description=""Influence legislation question""),
  actnotpr STRING OPTIONS(description=""Activities not previously reported question""),
  chgnprvrptcd STRING OPTIONS(description=""Changes not previously reported question""),
  filedf990tcd STRING OPTIONS(description=""Filed 990-T question""),
  contractncd STRING OPTIONS(description=""Contraction question""),
  furnishcpycd STRING OPTIONS(description=""Furnished copy to Attorney General question""),
  claimstatcd STRING OPTIONS(description=""Claiming status question""),
  cntrbtrstxyrcd STRING OPTIONS(description=""Substantial contributors question""),
  acqdrindrintcd STRING OPTIONS(description=""Acquire interest in applicable insurance contract question""),
  orgcmplypubcd STRING OPTIONS(description=""Comply with public inspection question""),
  filedlf1041ind STRING OPTIONS(description=""Section 4947(a)(1) filing in lieu of Form 1041 question""),
  propexchcd STRING OPTIONS(description=""Property exchange question""),
  brwlndmnycd STRING OPTIONS(description=""Borrow lend money question""),
  furngoodscd STRING OPTIONS(description=""Furnished goods question""),
  paidcmpncd STRING OPTIONS(description=""Paid compensation question""),
  transfercd STRING OPTIONS(description=""Transfer question""),
  agremkpaycd STRING OPTIONS(description=""Agree to make pay question""),
  exceptactsind STRING OPTIONS(description=""Acts fail to qualify under section 53.4941(d)-3 question""),
  prioractvcd STRING OPTIONS(description=""Engage in acts in prior year question""),
  undistrinccd STRING OPTIONS(description=""Undistributed income question""),
  applyprovind STRING OPTIONS(description=""Not applying section 4942(a)(2) provisions question""),
  dirindirintcd STRING OPTIONS(description=""Direct indirect interest question""),
  excesshldcd STRING OPTIONS(description=""Excess business holdings question""),
  invstjexmptcd STRING OPTIONS(description=""Jeopardizing investments question""),
  prevjexmptcd STRING OPTIONS(description=""Prior year jeopardizing investments question""),
  propgndacd STRING OPTIONS(description=""Propaganda question""),
  ipubelectcd STRING OPTIONS(description=""Influence public election question""),
  grntindivcd STRING OPTIONS(description=""Grant individual question""),
  nchrtygrntcd STRING OPTIONS(description=""Non-charity grant question""),
  nreligiouscd STRING OPTIONS(description=""Non-religious question""),
  excptransind STRING OPTIONS(description=""Transactions fail to qualify under section 53.4945 question""),
  rfprsnlbnftind STRING OPTIONS(description=""Receive funds to pay premiums on personal benefit contract question""),
  pyprsnlbnftind STRING OPTIONS(description=""Pay premiums on personal benefit contract question""),
  tfairmrktunuse INT64 OPTIONS(description=""Fair market value of assets not used for charitable purposes""),
  valncharitassets INT64 OPTIONS(description=""Net value of noncharitable-use assets""),
  cmpmininvstret INT64 OPTIONS(description=""Minimum investment return""),
  distribamt INT64 OPTIONS(description=""Distributable amount""),
  undistribincyr INT64 OPTIONS(description=""Undistributed income""),
  adjnetinccola INT64 OPTIONS(description=""Adjusted net income column a""),
  adjnetinccolb INT64 OPTIONS(description=""Adjusted net income column b""),
  adjnetinccolc INT64 OPTIONS(description=""Adjusted net income column c""),
  adjnetinccold INT64 OPTIONS(description=""Adjusted net income column d""),
  adjnetinctot INT64 OPTIONS(description=""Adjusted net income total""),
  qlfydistriba INT64 OPTIONS(description=""Qualifying distributions column a""),
  qlfydistribb INT64 OPTIONS(description=""Qualifying distributions column b""),
  qlfydistribc INT64 OPTIONS(description=""Qualifying distributions column c""),
  qlfydistribd INT64 OPTIONS(description=""Qualifying distributions column d""),
  qlfydistribtot INT64 OPTIONS(description=""Qualifying distributions total""),
  valassetscola INT64 OPTIONS(description=""Value assets column a""),
  valassetscolb INT64 OPTIONS(description=""Value assets column b""),
  valassetscolc INT64 OPTIONS(description=""Value assets column c""),
  valassetscold INT64 OPTIONS(description=""Value assets column d""),
  valassetstot INT64 OPTIONS(description=""Value assets total""),
  qlfyasseta INT64 OPTIONS(description=""Qualifying assets column a""),
  qlfyassetb INT64 OPTIONS(description=""Qualifying assets column b""),
  qlfyassetc INT64 OPTIONS(description=""Qualifying assets column c""),
  qlfyassetd INT64 OPTIONS(description=""Qualifying assets column d""),
  qlfyassettot INT64 OPTIONS(description=""Qualifying assets total""),
  endwmntscola INT64 OPTIONS(description=""Endowments column a""),
  endwmntscolb INT64 OPTIONS(description=""Endowments column b""),
  endwmntscolc INT64 OPTIONS(description=""Endowments column c""),
  endwmntscold INT64 OPTIONS(description=""Endowments column d""),
  endwmntstot INT64 OPTIONS(description=""Endowments total""),
  totsuprtcola INT64 OPTIONS(description=""Total support column a""),
  totsuprtcolb INT64 OPTIONS(description=""Total support column b""),
  totsuprtcolc INT64 OPTIONS(description=""Total support column c""),
  totsuprtcold INT64 OPTIONS(description=""Total support column d""),
  totsuprttot INT64 OPTIONS(description=""Total support total""),
  pubsuprtcola INT64 OPTIONS(description=""Public support column a""),
  pubsuprtcolb INT64 OPTIONS(description=""Public support column b""),
  pubsuprtcolc INT64 OPTIONS(description=""Public support column c""),
  pubsuprtcold INT64 OPTIONS(description=""Public support column d""),
  pubsuprttot INT64 OPTIONS(description=""Public support total""),
  grsinvstinca INT64 OPTIONS(description=""Gross investment income column a""),
  grsinvstincb INT64 OPTIONS(description=""Gross investment income column b""),
  grsinvstincc INT64 OPTIONS(description=""Gross investment income column c""),
  grsinvstincd INT64 OPTIONS(description=""Gross investment income column d""),
  grsinvstinctot INT64 OPTIONS(description=""Gross investment income total""),
  grntapprvfut INT64 OPTIONS(description=""Grants approved for future payment""),
  progsrvcacold INT64 OPTIONS(description=""Program service revenue line 1a (excluded)""),
  progsrvcacole INT64 OPTIONS(description=""Program service revenue line 1a (exempt)""),
  progsrvcbcold INT64 OPTIONS(description=""Program service revenue line 1b (excluded)""),
  progsrvcbcole INT64 OPTIONS(description=""Program service revenue line 1b (exempt)""),
  progsrvcccold INT64 OPTIONS(description=""Program service revenue line 1c (excluded)""),
  progsrvcccole INT64 OPTIONS(description=""Program service revenue line 1c (exempt)""),
  progsrvcdcold INT64 OPTIONS(description=""Program service revenue line 1d (excluded)""),
  progsrvcdcole INT64 OPTIONS(description=""Program service revenue line 1d (exempt)""),
  progsrvcecold INT64 OPTIONS(description=""Program service revenue line 1e (excluded)""),
  progsrvcecole INT64 OPTIONS(description=""Program service revenue line 1e (exempt)""),
  progsrvcfcold INT64 OPTIONS(description=""Program service revenue line 1f (excluded)""),
  progsrvcfcole INT64 OPTIONS(description=""Program service revenue line 1f (exempt)""),
  progsrvcgcold INT64 OPTIONS(description=""Program service revenue--fees and contracts from government line 1g (excluded)""),
  progsrvcgcole INT64 OPTIONS(description=""Program service revenue--fees and contracts from government line 1g (exempt)""),
  membershpduesd INT64 OPTIONS(description=""Membership dues and assessments (excluded)""),
  membershpduese INT64 OPTIONS(description=""Membership dues and assessments (exempt)""),
  intonsvngsd INT64 OPTIONS(description=""Interest on savings and temporary cash investments (excluded)""),
  intonsvngse INT64 OPTIONS(description=""Interest on savings and temporary cash investments (exempt)""),
  dvdndsintd INT64 OPTIONS(description=""Dividends and interest from securities (excluded)""),
  dvdndsinte INT64 OPTIONS(description=""Dividends and interest from securities (exempt)""),
  trnsfrcashcd STRING OPTIONS(description=""Transfer cash to noncharitable exempt organization question""),
  trnsothasstscd STRING OPTIONS(description=""Transfer other assets to noncharitable exempt organization question""),
  salesasstscd STRING OPTIONS(description=""Sale of assets to noncharitable exempt organization question""),
  prchsasstscd STRING OPTIONS(description=""Purchase of assets from noncharitable exempt organization question""),
  rentlsfacltscd STRING OPTIONS(description=""Rental of facilities or other assets question""),
  reimbrsmntscd STRING OPTIONS(description=""Reimbursements arrangements question""),
  loansguarcd STRING OPTIONS(description=""Loans or other guarantees question""),
  perfservicescd STRING OPTIONS(description=""Performance of services or membership or fundraising solicitations question""),
  sharngasstscd STRING OPTIONS(description=""Sharing of facilities, equipment, mailing lists, other assets, or paid employees question"")
);"

Some other tables have the similar structure: ['irs_990_pf_2013', 'irs_990_pf_2012', 'irs_990_pf_2016', 'irs_990_pf_2014', 'irs_990_pf_2015']
,3
table_name,irs_990_ein
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_ein`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number (EIN)""),
  name STRING OPTIONS(description=""Primary Name of Organization""),
  ico STRING OPTIONS(description=""In Care of Name""),
  street STRING OPTIONS(description=""Street Address""),
  city STRING OPTIONS(description=""City""),
  state STRING OPTIONS(description=""State""),
  zip STRING OPTIONS(description=""Zip Code""),
  `group` INT64 OPTIONS(description=""Group Exemption Number""),
  subsection INT64 OPTIONS(description=""Subsection Code""),
  affiliation INT64 OPTIONS(description=""Affiliation Code""),
  classification INT64 OPTIONS(description=""Classification Code(s)""),
  ruling INT64 OPTIONS(description=""Ruling Date""),
  deductibility INT64 OPTIONS(description=""Deductibility Code""),
  foundation INT64 OPTIONS(description=""Foundation Code""),
  activity INT64 OPTIONS(description=""Activity Codes""),
  organization INT64 OPTIONS(description=""Organization Code""),
  status INT64 OPTIONS(description=""Exempt Organization Status Code""),
  tax_period INT64 OPTIONS(description=""Tax Period""),
  asset_cd INT64 OPTIONS(description=""Asset Code""),
  income_cd INT64 OPTIONS(description=""Income Code""),
  filing_req_cd INT64 OPTIONS(description=""Filing Requirement Code""),
  pf_filing_req_cd INT64 OPTIONS(description=""PF Filing Requirement Code""),
  acct_pd INT64 OPTIONS(description=""Accounting Period""),
  asset_amt INT64 OPTIONS(description=""Asset Amount""),
  income_amt INT64 OPTIONS(description=""Income Amount (includes negative sign if amount is negative)""),
  revenue_amt INT64 OPTIONS(description=""Form 990 Revenue Amount (includes negative sign if amount is negative)""),
  ntee_cd STRING OPTIONS(description=""National Taxonomy of Exempt Entities (NTEE) Code""),
  sort_name STRING OPTIONS(description=""Sort Name (Secondary Name Line)"")
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'irs_990': ['irs_990_2012', 'irs_990_2013', 'irs_990_2014', 'irs_990_2015', 'irs_990_2016', 'irs_990_2017', 'irs_990_ein', 'irs_990_ez_2012', 'irs_990_ez_2013', 'irs_990_ez_2014', 'irs_990_ez_2015', 'irs_990_ez_2016', 'irs_990_ez_2017', 'irs_990_pf_2012', 'irs_990_pf_2013', 'irs_990_pf_2014', 'irs_990_pf_2015', 'irs_990_pf_2016']}}
Begin Exploring Related Columns
**Relevant Columns and Potential Usage:**

- `totrevenue`: Total revenue. *Potential usage*: To calculate the median revenue for each year.
- `totfuncexpns`: Total functional expenses. *Potential usage*: To calculate the median functional expenses for each year.
- `tax_pd`: Tax period in YYYYMM format. *Potential usage*: To extract the year of filing.
- `ein`: Employer Identification Number. *Potential usage*: To identify unique organizations.

**Conditions that may be used:**

- Exclude records where `totrevenue` or `totfuncexpns` is `NULL`.
- Exclude records where `totrevenue` or `totfuncexpns` are negative or zero (if appropriate).
- Extract the year from `tax_pd` by taking the first four digits.

---

**SQL Queries:**

1. **Retrieve total revenue and expenses from the 2012 filings:**
```sql
SELECT tax_pd, ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
```

2. **List distinct years present in `tax_pd` from the 2013 data:**
```sql
SELECT DISTINCT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year
FROM `bigquery-public-data.irs_990.irs_990_2013`
LIMIT 100;
```

3. **Retrieve organizations with total revenue greater than $1,000,000 in 2014:**
```sql
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue > 1000000
LIMIT 100;
```

4. **Count the number of filings per year in the 2015 dataset:**
```sql
SELECT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year, COUNT(*) AS filings_count
FROM `bigquery-public-data.irs_990.irs_990_2015`
GROUP BY year
LIMIT 100;
```

5. **Find average total revenue and expenses for 2016 filings:**
```sql
SELECT AVG(totrevenue) AS average_revenue, AVG(totfuncexpns) AS average_expenses
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
```

6. **List top 100 organizations by total revenue in 2017:**
```sql
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2017`
ORDER BY totrevenue DESC
LIMIT 100;
```

7. **Retrieve filings where expenses exceeded revenue in 2012:**
```sql
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE totrevenue < totfuncexpns
LIMIT 100;
```

8. **Calculate the difference between total revenue and expenses for 2013 filings:**
```sql
SELECT ein, (totrevenue - totfuncexpns) AS revenue_minus_expenses
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
```

9. **Select random sample of total revenue and expenses from 2014:**
```sql
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
ORDER BY RAND()
LIMIT 100;
```

10. **List organizations where total revenue equals total functional expenses in 2015:**
```sql
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE totrevenue = totfuncexpns
LIMIT 100;
```

11. **Calculate absolute difference between revenue and expenses for 2016 filings:**
```sql
SELECT ein, ABS(totrevenue - totfuncexpns) AS absolute_difference
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
```

12. **Identify organizations with negative net income in 2017 (expenses exceed revenue):**
```sql
SELECT ein, totrevenue, totfuncexpns, (totrevenue - totfuncexpns) AS net_income
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND (totrevenue - totfuncexpns) < 0
LIMIT 100;
```

13. **List distinct EINs and their total revenue in 2012 filings:**
```sql
SELECT DISTINCT ein, totrevenue
FROM `bigquery-public-data.irs_990.irs_990_2012`
LIMIT 100;
```

14. **Retrieve filings with missing total revenue or expenses in 2013:**
```sql
SELECT ein, tax_pd, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE totrevenue IS NULL OR totfuncexpns IS NULL
LIMIT 100;
```

15. **Extract year from `tax_pd` and list total revenue and expenses for 2014:**
```sql
SELECT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
```

---

These queries help in understanding the distribution and relationship of total revenue and total functional expenses across different years for organizations filing IRS 990 forms. By analyzing the data retrieved from these queries, one can proceed to calculate the median values and determine the three years with the smallest absolute differences between median revenue and median functional expenses.Query:
SELECT tax_pd, ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Answer:
tax_pd,ein,totrevenue,totfuncexpns
201112,250972074,615689,411785
201112,222094018,123398,32238
201205,382494084,339132,311067
201112,166094236,184876,207063
201106,231491160,194999,297198
201112,391449048,208324,212964
201112,382494635,110370,107165
201112,942412714,294294,297732
201112,510340553,252440,284339
201012,431860643,231889,187672
201106,411773248,816862,815407
201206,330316219,374605,389064
201105,720924871,2176110,151050
201112,133394305,57648,59937
201012,311090052,250907,284529
201106,911025090,326516,359690
201106,880181824,565417,618228
201106,860673370,6191901,6218539
201106,431110061,1259941,1250365
201112,221554536,368550,324536
201112,431488916,6263,8214
201112,133737760,887518,1001492
201112,742328963,554010,497729
201112,311617260,1160268,1271154
201112,593089562,217092,208543
201112,841496701,402615,230297
201112,450339622,267402,251667
201112,841476613,142654,117215
201112,061427346,3985749,4102352
201112,450233749,1014987,1021620
201112,742544243,214898,160544
201112,351830590,132489,160207
201112,020468137,404491,391474
201206,860673370,6853798,6799007
201109,931141006,48737,43220
201110,562663346,205291,225232
201110,742208935,239009,190988
201112,562487490,799303,270969
201112,510183465,68693,35754
201112,161454215,41147,36410
201112,752434783,101615,96660
201112,020624596,117983,68471
201112,112727514,592366,513896
201112,841534209,246612,244557
201112,330776377,242673,233804
201210,742208935,245441,223841
201109,042429428,123757,141771
201112,141625139,106452,79804
201012,600001118,634918,362207
201012,042210747,1193694,1303953
201012,160866061,391600,294020
201012,132548780,2334422,2485470
201012,237331116,247695,216432
201012,350899077,162491,172476
201012,591312245,4679679,4859870
201012,231365194,3711792,3472054
201012,541136097,235470,226950
201012,132596500,2898551,5896441
201012,526054081,153916,169319
Query:
SELECT DISTINCT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year
FROM `bigquery-public-data.irs_990.irs_990_2013`
LIMIT 100;
Answer:
year
2012
2011
2010
2013
2008
2009
2001
2007
Query:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue > 1000000
LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
272345009,3069541,3252617
371371059,9206536,9781870
350589385,1877740,2047004
930825790,5037778,5948494
376304539,1890814,1938100
350830295,1479623,1436426
650004016,5973792,6846597
940745005,6164194,6283230
135007460,2844627,2211949
560172993,6260207,7108078
41200680,4649694,4200765
880087294,58123650,-1824273
946080365,19907790,19557915
383782755,7615823,5866294
366947279,1605234,1418794
221010190,6098197,5765228
203825348,6151686,4780278
351694366,1074093,1055651
264683543,146569081,136900651
550173315,1438181,1065061
231428823,2004567,1951109
41662000,11590973,10589990
411725229,4805993,5075148
941558464,3633532,3097156
580198114,4008217,3725420
990345010,1115947,398953
742301528,4779386,4266174
640714754,12616017,13395162
741883156,1105436,977831
311205596,17252450,14581406
530259366,6463088,6017170
750918872,1229292,1317997
610591008,1825215,707604
546004683,4009379,4979499
221128510,1709715,1632206
61369657,3272652,3269593
920139334,1084658,1092214
951948865,1001702,886904
621766996,34182088,36772413
616222164,3987347,2980525
581584613,35346594,31019694
741593195,1075496,1079899
416367654,3229921,4462036
310676582,649224664,623005115
810641625,2104612,0
741361102,2488952,2561425
56010637,20972361,21630217
50493920,3631647,3939582
416367653,3971171,3337905
941076364,1619851,2012565
630185430,1542502,1462945
591395087,2095795,2222520
940376375,1055529,1068121
270500843,9780677,13937
274018006,3914732,2378842
223183386,66150340,102083094
582170261,1293854,1173881
381162670,2001299,2352127
942535992,17920639,17633821
776138153,86753338,12282080
592603700,49073714,48625895
133443127,173408717,156577244
133718642,105346843,41542481
262732890,1105880,1120156
540537788,1281108,1304609
232122939,9320312,9349859
521844783,1217252,0
530159345,14553913,15045847
522156601,6969885,6736772
616156163,13901866,13789887
957055654,2645127616,2646670886
416037362,12039779,13173275
111569376,7300739,7909849
202313717,2648099,0
Query:
SELECT SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS year, COUNT(*) AS filings_count
FROM `bigquery-public-data.irs_990.irs_990_2015`
GROUP BY year
LIMIT 100;
Answer:
year,filings_count
2014,237026
2013,12756
2015,42427
2012,1496
2009,155
2010,288
2008,77
2011,548
2003,3
2004,1
2007,3
2006,1
2002,1
Query:
SELECT AVG(totrevenue) AS average_revenue, AVG(totfuncexpns) AS average_expenses
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Answer:
average_revenue,average_expenses
7938932.445891336,7446167.297222881
Query:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2017`
ORDER BY totrevenue DESC
LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
941340523,51065716534,50977670187
941105628,24251778809,21975818733
208295721,11695858422,11350122975
900656139,11297001725,11237538826
941196203,10193378790,10162159265
390123480,9680842150,8910541696
390123480,9587415035,9031607225
912153073,8907956801,8486267857
113153422,8438339064,8127257741
720502505,7216705808,7159545591
941156365,6965956577,5280669257
311143265,6440829493,6625506461
450233470,6326720478,5774727529
231352685,6286195000,5642149000
520595110,6046472000,5654342000
135562308,6043438258,5910463741
133783732,6011909761,6044053170
510216586,5953431215,7250274546
941461312,5859550187,5712597562
942854057,5619049200,5059249614
133957095,5317043380,4929181210
416011702,5152134383,4894713095
980380092,5128139561,4264242960
131828429,4931402574,5180469745
951642394,4895423051,4467340135
60646973,4807997730,3681608494
314379427,4789153691,4910674794
110303001,4780943595,3273269905
135598093,4708225588,4392793832
753052953,4658343974,4450607395
611649250,4629361219,4286990330
364724966,4620705638,4141774961
362169147,4581585962,4327880986
42103580,4458905923,4930905851
431491162,4381625623,4987363888
150532082,4369242548,4202180199
741152597,4282066839,4093368978
710569421,4236821221,4217453968
311161086,4226007193,4152138131
363261413,4103552249,4072739258
42103594,3961420000,3604394000
912154267,3938149398,3781247199
840591617,3805780718,3782056678
930798039,3757404559,3665722639
351955872,3721532076,3063851013
946174066,3705341644,3504040944
453791176,3621661130,3409148116
580566256,3589561177,3478441635
131740114,3583255101,3568724443
980123241,3557087000,2845156000
440545275,3539081870,3514055494
900059117,3535304000,3277088000
382359234,3509403557,3420285116
133971298,3507764725,3268322761
410991680,3487488197,3254688711
362154936,3452950120,2791774302
520954463,3414413304,3406721585
951644600,3319765238,2928262195
590624458,3316774822,3244211941
362177139,3244736644,3422030480
160743209,3231905703,3258606172
311774905,3231802694,324162296
910511770,3229090548,3211581153
430653611,3185323683,2994711670
562070036,3133177470,2745774597
203674498,3126468204,3128822213
611740292,3046771758,2845440897
351330472,2877065236,2685141515
Query:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE totrevenue < totfuncexpns
LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
166094236,184876,207063
231491160,194999,297198
391449048,208324,212964
942412714,294294,297732
510340553,252440,284339
330316219,374605,389064
133394305,57648,59937
311090052,250907,284529
911025090,326516,359690
880181824,565417,618228
860673370,6191901,6218539
431488916,6263,8214
133737760,887518,1001492
311617260,1160268,1271154
061427346,3985749,4102352
450233749,1014987,1021620
351830590,132489,160207
562663346,205291,225232
042429428,123757,141771
042210747,1193694,1303953
132548780,2334422,2485470
350899077,162491,172476
591312245,4679679,4859870
132596500,2898551,5896441
526054081,153916,169319
231628480,527281,620516
020664475,1104162,1123922
340819149,4805178,5291470
560579600,652855,654718
237087247,1192197,1208690
630480594,160381,284045
541870905,2727976,3553978
952788856,7554730,8188232
237357226,1250968,1486237
362512404,24018285,25819923
620511893,2221319,3254942
580633971,105775719,117647554
952543028,19299093,19402388
941702753,3183041,3410875
610444762,2788432,2870740
131624100,205587007,231386633
111630813,2783164,3971812
520403670,2458179,3641992
133234632,19397930,25850094
221514241,2603875,3429379
133888641,30670637,33042409
232915952,547441,651242
520591664,7523085,7633466
362167004,9610322,14269644
860390558,7204217,8020486
362167823,62720757,71174919
620479192,4213422,5276345
860133718,8940169,9151138
237115801,95028,113961
311005850,4094881,5865850
741195277,3211302,4359343
421322071,322665,333335
940997140,62579782,63668891
954242175,2876662,3923772
131632519,8578263,8898799
951664113,4107410,4781874
581606182,799983,879245
521398151,7358617,7645911
941262434,2012538,2710177
620674646,235770,236611
426090398,2004250,2278006
112495664,5639787,6984511
540788933,3716945,3723410
131985514,1882944,2282729
237393771,953888,1167842
036011271,836177,976276
237182423,555958,741673
860665712,3429018,3604341
830245647,531399,575366
941415298,40237683,43933692
Query:
SELECT ein, (totrevenue - totfuncexpns) AS revenue_minus_expenses
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Answer:
ein,revenue_minus_expenses
237244328,81341
522385104,-80881
311017154,37046
521135824,9599
237222193,-116873
246021385,-11313
990213908,-167755
716076840,654930
866052021,-460979
237122650,-382898
436158894,-424648
592719781,-14440
200946697,-1165879
561412117,-26299
411376272,17291
651300847,97925
460253627,38764
363183692,41212
222842803,1563575
636050522,23146
362987519,-667054
251559261,-15284
316064918,-2272856
450493921,-172928
656088549,-403982
990269654,136081
436921041,661335
363489253,19157940
776224948,-750128
876128290,142574
910853746,95555
521937919,25928
203631134,10527
386090659,2494
300397278,64754
750275625,20625
043821981,-5034
630759180,13230
916037678,343456
237373972,49235
341385441,-980
911766944,3514
591986067,12780
346528417,-626
050382356,29427
391848508,29255
721060866,19480
956107034,-12393
943048491,14594
237069111,-5796
486110616,-609
382319307,42401
486107677,22334
236265518,-7365
586055206,1528
486111957,-34134
931077620,-15795
203109607,9262
231944161,47838
366191936,4555
942375212,-32404
522305267,163190
571140642,13452
376044257,-8262
130970295,-124536
931204757,1674643
596134291,42218
920018710,-330458
237348596,-84930
996046220,204770
133810146,9574742
526047277,157317
841103552,23009
593131383,-40416
351101396,34735
237104346,244397
481165594,5875081
363978082,63677670
956049026,-598267
562295120,22478
431790141,-12927
943039825,-4877
550572568,-121416
460404634,5988
161353961,91804
237371642,-995673
560652336,-17668
382896174,20513
132623436,14599
910834167,249448
470789065,-42661
753188156,2107
231736288,61379
770645010,-4609
Query:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
ORDER BY RAND()
LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
311366316,939800,260596
953209582,305628,644282
264800023,15163,6454
911353222,216745,247953
204062828,224800,275300
760570086,1121676,953589
371538417,116330,122808
830232664,495421,477619
201328128,92495,2573552
421572723,160735,223961
953510055,232617162,179800155
271234120,456188,458800
710336855,207389,221680
232953796,779874,612973
223621312,158526,92390
251804763,235172,211044
620726909,1444756,1570542
954049720,920746,960683
366083639,90381,79049
520796950,469058,577460
271146144,50544,49987
741897502,8308523,7281037
911215739,460463,419260
330833763,25572,25503
522300984,362560,488897
720515239,1003624,1050197
431659423,268081,228717
391792143,712170,851398
236235335,193584,220384
271825679,962474,700149
840532394,1246859,1171306
310963147,88721,32727
610723605,74718534,77076318
860312162,4551108,4635208
582123670,169382,119793
740693540,17434260,17041290
752638966,55899,92706
421291415,204959,189444
316083820,452326,539685
201978483,1343028,1204198
113364427,214542,250525
262367774,3724549,3643015
640702223,244690,209655
351706782,1586146,1524764
561698181,365983,155843
591229583,5098291,4877666
480375890,471103,461447
221633157,133865,113012
237024930,729953,723047
371306860,220293,287906
200964369,148939,143277
300521104,108282,75081
232277329,703115,702293
741536482,2741776,2806475
232097632,168224,184648
43473631,193894,55260
330660277,1444029,1448049
560652312,224702,218575
111805355,849736,829518
146039217,233655,256568
133126533,517122,475924
911405342,258337,260742
351966459,1059568,894703
941672782,18801461,19051132
310713350,54760950,51698527
481070953,794481,776529
450314283,224297,74080
710811347,63705,63666
340604415,247935,233016
731210460,460823,378472
920145501,2153579,2338295
611354311,2472852,2472852
237354328,6026508,3218707
850113191,1806704,1136553
150618030,238259,208954
362709048,3727220,3597196
Query:
SELECT ein, totrevenue, totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE totrevenue = totfuncexpns
LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
30420548,174181,174181
113083762,219389,219389
43497609,2053408,2053408
46052046,44169,44169
232481500,2097430,2097430
392039341,0,0
464064067,271875,271875
621715089,615391,615391
720945796,7360952,7360952
260335902,0,0
450537391,33214334,33214334
113083762,128938,128938
136065171,70780,70780
237060602,0,0
311653393,699100,699100
640783323,1423756,1423756
450448164,2501136,2501136
311195036,7035098,7035098
43174501,10116273,10116273
316029574,49184,49184
581641714,521127,521127
770492134,139218,139218
201634783,3735326,3735326
452765573,713545,713545
455562018,0,0
261712580,1631386,1631386
742336439,1371314,1371314
593553820,0,0
471194849,11517803,11517803
42721269,23126,23126
202234836,0,0
464929486,0,0
222765486,5725322,5725322
460808466,0,0
520962244,0,0
455490584,2990304,2990304
134032925,208448,208448
486283449,35059,35059
510136264,0,0
461340679,0,0
133929066,3106904,3106904
352506275,0,0
464519557,0,0
455384648,10891175,10891175
205901644,195662,195662
900006114,2732372,2732372
43520478,2394141,2394141
272377326,5758498,5758498
273560102,622779,622779
520882914,0,0
640468113,0,0
320182181,2603806,2603806
752806289,768520,768520
236423359,45484,45484
452526738,4754379,4754379
392023357,0,0
943193387,1262021,1262021
522029558,0,0
770046961,0,0
270301399,0,0
311699455,0,0
261584681,106505,106505
611670989,0,0
311681446,1887855,1887855
300204506,173429,173429
631134720,5005383,5005383
660407714,0,0
810479512,4263200,4263200
750399805,0,0
943209613,928870,928870
311629717,6006682,6006682
471093527,0,0
452540612,2494619,2494619
943240353,555758,555758
133281507,0,0
270722038,314951,314951
261590078,2344890,2344890
300062362,0,0
581752871,0,0
161541221,1738814,1738814
Query:
SELECT ein, ABS(totrevenue - totfuncexpns) AS absolute_difference
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
LIMIT 100;
Answer:
ein,absolute_difference
751562334,232878
391613624,723764
42665867,36213
840532684,178578
581814803,18595
270733750,115473
43508315,28587
263891535,3001
522336109,89285
542057512,60094
223115046,26025
743236898,12254
840564570,11716
463773419,23384
263566862,18022
341940863,561449
341896807,48579
742912461,77133
261318597,17257288
464504901,12444211
351742559,26774031
352197019,616782
760454516,17932
60692379,1729084
236446266,31505
454129451,33317
561957642,61978
541772269,16660
840445578,447467
363200465,140690
770530703,1571622
10467869,26358
251842046,4811875
42428837,8881
210733990,110771
42692275,109855
232325059,174676
381360545,1681545
421333052,14199
731721398,20774
510182452,48274
550232273,33458
274594523,12374
141338575,165917
264032355,306051
816012488,30485
42104326,67986
363342448,132792
650179159,136488
742966731,241174
270047915,2610
10932846,2871057
200195564,99854
592445906,57960
382052726,1013346
450398104,1975815
363297853,19970224
880387136,0
810109712,1024796
591989832,859495
510230538,312940
43263656,3138305
237278865,130129
205812260,22549
352122608,45320
230684193,14921
710294390,25814862
710689680,283401
680138507,28680
381367319,364215
753243082,59378
453617168,30644
562602254,17313
112157078,7548960
380901080,30205
592135073,33290
846039412,84188
710891642,1353413
800015698,155882
521993376,3130203
262051048,14043
161733646,62673
271529439,128061
911529442,22431
463181940,36320
710585312,12473
743019849,1187285
463752110,27359
141551083,26723
50355848,1938
351170473,19368
330997433,13319
251896200,3317
363914084,227904
520808480,151267
363332852,78980
475111581,328644
411389317,336322
916009716,104049
462993223,38945
Query:
SELECT ein, totrevenue, totfuncexpns, (totrevenue - totfuncexpns) AS net_income
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND (totrevenue - totfuncexpns) < 0
LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns,net_income
356042156,305087,327877,-22790
362202370,136782,162179,-25397
60646753,98973,123407,-24434
710845972,88315,90730,-2415
260146595,23224,27590,-4366
223348540,12226484,12250496,-24012
956050121,831732,898309,-66577
263653751,49570,54222,-4652
42383933,375241,382133,-6892
352246162,2845066,4186957,-1341891
232616113,12451,20712,-8261
954612730,404235,439815,-35580
951652837,148802,188035,-39233
420186460,626634,633118,-6484
131825916,26640,50232,-23592
363507635,329378,407577,-78199
742728646,981983,1134366,-152383
382132707,185935,201483,-15548
134255387,142052,145799,-3747
330288930,5356304,6383829,-1027525
471129960,99505,100479,-974
720573879,917614,971980,-54366
510182993,312691,318531,-5840
133439360,34582,61984,-27402
430549665,714109,727258,-13149
451457029,1540734,2244941,-704207
204780320,37326,323169,-285843
870749129,176269,226631,-50362
310999025,119645,123012,-3367
60868436,3110164,3158598,-48434
521234660,65707,86936,-21229
43208934,112512,116707,-4195
223619206,21428,34575,-13147
592263083,109340,118628,-9288
592828707,8866624,10840266,-1973642
363783549,1024862,1410096,-385234
452670332,126878,136689,-9811
561677831,3275680,3313042,-37362
841284735,2082525,2159286,-76761
136119199,37296,51211,-13915
346545105,5817296,6057264,-239968
204252337,0,9102,-9102
113219630,619094,643053,-23959
271424101,143568,143674,-106
470494182,37349,41487,-4138
742720125,88813,112503,-23690
382058667,488287,499554,-11267
474205261,420586,541328,-120742
237178736,19239,34847,-15608
260152339,725422,770696,-45274
453127256,192070,414693,-222623
232022702,770263,840371,-70108
580590521,285250,286097,-847
221659502,12147824,12322238,-174414
382959299,884941,886708,-1767
621859820,13682,16539,-2857
841158933,361602,1597515,-1235913
370662532,201299,298150,-96851
Query:
SELECT DISTINCT ein, totrevenue
FROM `bigquery-public-data.irs_990.irs_990_2012`
LIMIT 100;
Answer:
ein,totrevenue
250972074,615689
222094018,123398
382494084,339132
166094236,184876
231491160,194999
391449048,208324
382494635,110370
942412714,294294
510340553,252440
431860643,231889
411773248,816862
330316219,374605
720924871,2176110
133394305,57648
311090052,250907
911025090,326516
880181824,565417
860673370,6191901
431110061,1259941
221554536,368550
431488916,6263
133737760,887518
742328963,554010
311617260,1160268
593089562,217092
841496701,402615
450339622,267402
841476613,142654
061427346,3985749
450233749,1014987
742544243,214898
351830590,132489
020468137,404491
860673370,6853798
931141006,48737
562663346,205291
742208935,239009
562487490,799303
510183465,68693
161454215,41147
752434783,101615
020624596,117983
112727514,592366
841534209,246612
330776377,242673
742208935,245441
042429428,123757
141625139,106452
600001118,634918
042210747,1193694
160866061,391600
132548780,2334422
237331116,247695
350899077,162491
591312245,4679679
231365194,3711792
541136097,235470
132596500,2898551
526054081,153916
231628480,527281
020664475,1104162
580566123,19557978
391394068,1951296
340819149,4805178
560579600,652855
742340423,2125329
237042553,13852889
237087247,1192197
346516654,42612778
720542138,2812483
630480594,160381
160743245,1857316
911806943,346849
541870905,2727976
952788856,7554730
810367205,774388
112667021,11156787
237357226,1250968
042105780,21248493
010207716,493438
362512404,24018285
131624146,24409280
020260158,2730287
060653120,22424056
742431071,10006131
620511893,2221319
580633971,105775719
952543028,19299093
590917284,17980075
951648180,70036549
237120898,33508177
941702753,3183041
610444762,2788432
131624100,205587007
530242652,997037763
111630813,2783164
941156300,49034556
351043456,694874
131675082,21623111
520403670,2458179
Query:
WITH all_data AS (
  SELECT '2012' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2013' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2014' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2015' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2016' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
  UNION ALL
  SELECT '2017' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 100)[OFFSET(50)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 100)[OFFSET(50)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 100)[OFFSET(50)] - APPROX_QUANTILES(totfuncexpns, 100)[OFFSET(50)]) AS difference
FROM all_data
GROUP BY year
ORDER BY difference ASC
LIMIT 3;
Answer:
year,median_revenue,median_expenses,difference
2012,395212,374580,20632
2013,402968,381852,21116
2017,419597,393560,26037
Query:
-- Corrected SQL for Query 2:
SELECT DISTINCT
  SAFE_CAST(SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS INT64) AS year
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE tax_pd IS NOT NULL
LIMIT 100
Answer:
year
2012
2011
2010
2013
2008
2009
2001
2007
Query:
-- Corrected SQL for Query 4:
SELECT
  SAFE_CAST(SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS INT64) AS year,
  COUNT(*) AS filings_count
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE tax_pd IS NOT NULL
GROUP BY year
LIMIT 100
Answer:
year,filings_count
2014,237026
2013,12756
2015,42427
2012,1496
2009,155
2010,288
2008,77
2011,548
2003,3
2004,1
2007,3
2006,1
2002,1
Query:
-- Corrected SQL for Query 15:
SELECT
  SAFE_CAST(SUBSTR(CAST(tax_pd AS STRING), 1, 4) AS INT64) AS year,
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND tax_pd IS NOT NULL
LIMIT 100
Answer:
year,ein,totrevenue,totfuncexpns
2012,272345009,3069541,3252617
2013,470269340,466889,485897
2012,371371059,9206536,9781870
2012,43319995,18388,10460
2012,350589385,1877740,2047004
2012,521714096,397282,351874
2012,256378878,204308,6197250
2012,720885687,650511,639515
2012,930825790,5037778,5948494
2012,581651059,46891,88550
2012,376304539,1890814,1938100
2012,350830295,1479623,1436426
2013,942761360,465054,387125
2013,251715419,24492,22376
2013,650004016,5973792,6846597
2012,940745005,6164194,6283230
2012,135007460,2844627,2211949
2013,942681692,11995,9040
2012,454557001,246139,206548
2013,570331111,450616,477241
2012,200061207,448953,168118
2012,560172993,6260207,7108078
2012,41200680,4649694,4200765
2012,256064060,147335,149907
2013,942393010,233705,221097
2013,273687294,407398,358063
2012,720885153,83563,74496
2012,341801832,457,661695
2013,954112810,6735,6351
2013,20441757,113078,140646
2012,880496827,45289,68135
2012,880087294,58123650,-1824273
2012,946080365,19907790,19557915
2013,237540970,15266,14246
2013,237107987,30752,19574
2012,453838460,474748,94062
2012,383782755,7615823,5866294
2012,204744523,93263,4431
2012,752549767,358987,0
2013,426060971,264253,305773
2012,66051304,178190,132213
2012,366947279,1605234,1418794
2013,237109085,315435,329149
2012,221010190,6098197,5765228
2012,356028131,780696,792399
2013,150624585,390299,306390
2012,452820014,0,850
2012,203825348,6151686,4780278
2012,237082160,436981,452702
2013,237142298,125328,100562
2012,61295903,40413,40161
2012,351694366,1074093,1055651
2012,860749972,191428,184487
2012,264683543,146569081,136900651
2013,550173315,1438181,1065061
2012,66020309,11968,69057
2012,237325086,796971,835739
2012,231428823,2004567,1951109
2012,560709313,984617,979023
2012,452527170,168913,150419
2012,756036775,296459,276194
2012,521861766,715836,2409251
2012,41662000,11590973,10589990
Query:
WITH all_data AS (
  SELECT '2012' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2013' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2014' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2015' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2016' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT '2017' AS year, totrevenue, totfuncexpns
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] - APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]) AS difference
FROM all_data
GROUP BY year
ORDER BY difference ASC
LIMIT 3;
Answer:
year,median_revenue,median_expenses,difference
2012,406380,396976,9404
2013,422651,403538,19113
2017,423484,400113,23371
Query:
-- Corrected SQL for Query 1:
SELECT
  tax_pd,
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND tax_pd IS NOT NULL
LIMIT 100
Answer:
tax_pd,ein,totrevenue,totfuncexpns
201112,250972074,615689,411785
201112,222094018,123398,32238
201205,382494084,339132,311067
201112,166094236,184876,207063
201106,231491160,194999,297198
201112,391449048,208324,212964
201112,382494635,110370,107165
201112,942412714,294294,297732
201112,510340553,252440,284339
201012,431860643,231889,187672
201106,411773248,816862,815407
201206,330316219,374605,389064
201105,720924871,2176110,151050
201112,133394305,57648,59937
201012,311090052,250907,284529
201106,911025090,326516,359690
201106,880181824,565417,618228
201106,860673370,6191901,6218539
201106,431110061,1259941,1250365
201112,221554536,368550,324536
201112,431488916,6263,8214
201112,133737760,887518,1001492
201112,742328963,554010,497729
201112,311617260,1160268,1271154
201112,593089562,217092,208543
201112,841496701,402615,230297
201112,450339622,267402,251667
201112,841476613,142654,117215
201112,061427346,3985749,4102352
201112,450233749,1014987,1021620
201112,742544243,214898,160544
201112,351830590,132489,160207
201112,020468137,404491,391474
201206,860673370,6853798,6799007
201109,931141006,48737,43220
201110,562663346,205291,225232
201110,742208935,239009,190988
201112,562487490,799303,270969
201112,510183465,68693,35754
201112,161454215,41147,36410
201112,752434783,101615,96660
201112,020624596,117983,68471
201112,112727514,592366,513896
201112,841534209,246612,244557
201112,330776377,242673,233804
201210,742208935,245441,223841
201109,042429428,123757,141771
201112,141625139,106452,79804
201012,600001118,634918,362207
201012,042210747,1193694,1303953
201012,160866061,391600,294020
201012,132548780,2334422,2485470
201012,237331116,247695,216432
201012,350899077,162491,172476
201012,591312245,4679679,4859870
201012,231365194,3711792,3472054
201012,541136097,235470,226950
201012,132596500,2898551,5896441
201012,526054081,153916,169319
Query:
-- Corrected SQL for Query 3:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE
  totrevenue > 1000000
  AND totfuncexpns IS NOT NULL
LIMIT 100
Answer:
ein,totrevenue,totfuncexpns
272345009,3069541,3252617
371371059,9206536,9781870
350589385,1877740,2047004
930825790,5037778,5948494
376304539,1890814,1938100
350830295,1479623,1436426
650004016,5973792,6846597
940745005,6164194,6283230
135007460,2844627,2211949
560172993,6260207,7108078
41200680,4649694,4200765
880087294,58123650,-1824273
946080365,19907790,19557915
383782755,7615823,5866294
366947279,1605234,1418794
221010190,6098197,5765228
203825348,6151686,4780278
351694366,1074093,1055651
264683543,146569081,136900651
550173315,1438181,1065061
231428823,2004567,1951109
41662000,11590973,10589990
411725229,4805993,5075148
941558464,3633532,3097156
580198114,4008217,3725420
990345010,1115947,398953
742301528,4779386,4266174
640714754,12616017,13395162
741883156,1105436,977831
311205596,17252450,14581406
530259366,6463088,6017170
750918872,1229292,1317997
610591008,1825215,707604
546004683,4009379,4979499
221128510,1709715,1632206
61369657,3272652,3269593
920139334,1084658,1092214
951948865,1001702,886904
621766996,34182088,36772413
616222164,3987347,2980525
581584613,35346594,31019694
741593195,1075496,1079899
416367654,3229921,4462036
310676582,649224664,623005115
810641625,2104612,0
741361102,2488952,2561425
56010637,20972361,21630217
50493920,3631647,3939582
416367653,3971171,3337905
941076364,1619851,2012565
630185430,1542502,1462945
591395087,2095795,2222520
940376375,1055529,1068121
270500843,9780677,13937
274018006,3914732,2378842
223183386,66150340,102083094
582170261,1293854,1173881
381162670,2001299,2352127
942535992,17920639,17633821
776138153,86753338,12282080
592603700,49073714,48625895
133443127,173408717,156577244
133718642,105346843,41542481
262732890,1105880,1120156
540537788,1281108,1304609
232122939,9320312,9349859
521844783,1217252,0
530159345,14553913,15045847
522156601,6969885,6736772
616156163,13901866,13789887
957055654,2645127616,2646670886
416037362,12039779,13173275
111569376,7300739,7909849
202313717,2648099,0
Query:
-- Corrected SQL for Query 5:
SELECT
  AVG(totrevenue) AS average_revenue,
  AVG(totfuncexpns) AS average_expenses
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND totrevenue > 0
  AND totfuncexpns > 0
Answer:
average_revenue,average_expenses
8089683.536650629,7588959.658661872
Query:
-- Corrected SQL for Query 6:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE
  totrevenue IS NOT NULL
  AND totrevenue > 0
ORDER BY totrevenue DESC
LIMIT 100
Answer:
ein,totrevenue,totfuncexpns
941340523,51065716534,50977670187
941105628,24251778809,21975818733
208295721,11695858422,11350122975
900656139,11297001725,11237538826
941196203,10193378790,10162159265
390123480,9680842150,8910541696
390123480,9587415035,9031607225
912153073,8907956801,8486267857
113153422,8438339064,8127257741
720502505,7216705808,7159545591
941156365,6965956577,5280669257
311143265,6440829493,6625506461
450233470,6326720478,5774727529
231352685,6286195000,5642149000
520595110,6046472000,5654342000
135562308,6043438258,5910463741
133783732,6011909761,6044053170
510216586,5953431215,7250274546
941461312,5859550187,5712597562
942854057,5619049200,5059249614
133957095,5317043380,4929181210
416011702,5152134383,4894713095
980380092,5128139561,4264242960
131828429,4931402574,5180469745
951642394,4895423051,4467340135
60646973,4807997730,3681608494
314379427,4789153691,4910674794
110303001,4780943595,3273269905
135598093,4708225588,4392793832
753052953,4658343974,4450607395
611649250,4629361219,4286990330
364724966,4620705638,4141774961
362169147,4581585962,4327880986
42103580,4458905923,4930905851
431491162,4381625623,4987363888
150532082,4369242548,4202180199
741152597,4282066839,4093368978
710569421,4236821221,4217453968
311161086,4226007193,4152138131
363261413,4103552249,4072739258
42103594,3961420000,3604394000
912154267,3938149398,3781247199
840591617,3805780718,3782056678
930798039,3757404559,3665722639
351955872,3721532076,3063851013
946174066,3705341644,3504040944
453791176,3621661130,3409148116
580566256,3589561177,3478441635
131740114,3583255101,3568724443
980123241,3557087000,2845156000
440545275,3539081870,3514055494
900059117,3535304000,3277088000
382359234,3509403557,3420285116
133971298,3507764725,3268322761
410991680,3487488197,3254688711
362154936,3452950120,2791774302
520954463,3414413304,3406721585
951644600,3319765238,2928262195
590624458,3316774822,3244211941
362177139,3244736644,3422030480
160743209,3231905703,3258606172
311774905,3231802694,324162296
910511770,3229090548,3211581153
430653611,3185323683,2994711670
562070036,3133177470,2745774597
203674498,3126468204,3128822213
611740292,3046771758,2845440897
351330472,2877065236,2685141515
Query:
-- Corrected SQL for Query 7:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2012`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND totrevenue < totfuncexpns
  AND totrevenue > 0
  AND totfuncexpns > 0
LIMIT 100
Answer:
ein,totrevenue,totfuncexpns
166094236,184876,207063
231491160,194999,297198
391449048,208324,212964
942412714,294294,297732
510340553,252440,284339
330316219,374605,389064
133394305,57648,59937
311090052,250907,284529
911025090,326516,359690
880181824,565417,618228
860673370,6191901,6218539
431488916,6263,8214
133737760,887518,1001492
311617260,1160268,1271154
061427346,3985749,4102352
450233749,1014987,1021620
351830590,132489,160207
562663346,205291,225232
042429428,123757,141771
042210747,1193694,1303953
132548780,2334422,2485470
350899077,162491,172476
591312245,4679679,4859870
132596500,2898551,5896441
526054081,153916,169319
231628480,527281,620516
020664475,1104162,1123922
340819149,4805178,5291470
560579600,652855,654718
237087247,1192197,1208690
630480594,160381,284045
541870905,2727976,3553978
952788856,7554730,8188232
237357226,1250968,1486237
362512404,24018285,25819923
620511893,2221319,3254942
580633971,105775719,117647554
952543028,19299093,19402388
941702753,3183041,3410875
610444762,2788432,2870740
131624100,205587007,231386633
111630813,2783164,3971812
520403670,2458179,3641992
133234632,19397930,25850094
221514241,2603875,3429379
133888641,30670637,33042409
232915952,547441,651242
520591664,7523085,7633466
362167004,9610322,14269644
860390558,7204217,8020486
362167823,62720757,71174919
620479192,4213422,5276345
860133718,8940169,9151138
237115801,95028,113961
311005850,4094881,5865850
741195277,3211302,4359343
421322071,322665,333335
940997140,62579782,63668891
954242175,2876662,3923772
131632519,8578263,8898799
951664113,4107410,4781874
581606182,799983,879245
521398151,7358617,7645911
941262434,2012538,2710177
620674646,235770,236611
426090398,2004250,2278006
112495664,5639787,6984511
540788933,3716945,3723410
131985514,1882944,2282729
237393771,953888,1167842
036011271,836177,976276
237182423,555958,741673
860665712,3429018,3604341
830245647,531399,575366
941415298,40237683,43933692
Query:
-- Corrected SQL for Query 8:
SELECT
  ein,
  (totrevenue - totfuncexpns) AS revenue_minus_expenses
FROM `bigquery-public-data.irs_990.irs_990_2013`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
LIMIT 100
Answer:
ein,revenue_minus_expenses
237244328,81341
522385104,-80881
311017154,37046
521135824,9599
237222193,-116873
246021385,-11313
990213908,-167755
716076840,654930
866052021,-460979
237122650,-382898
436158894,-424648
592719781,-14440
200946697,-1165879
561412117,-26299
411376272,17291
651300847,97925
460253627,38764
363183692,41212
222842803,1563575
636050522,23146
362987519,-667054
251559261,-15284
316064918,-2272856
450493921,-172928
656088549,-403982
990269654,136081
436921041,661335
363489253,19157940
776224948,-750128
876128290,142574
910853746,95555
521937919,25928
203631134,10527
386090659,2494
300397278,64754
750275625,20625
043821981,-5034
630759180,13230
916037678,343456
237373972,49235
341385441,-980
911766944,3514
591986067,12780
346528417,-626
050382356,29427
391848508,29255
721060866,19480
956107034,-12393
943048491,14594
237069111,-5796
486110616,-609
382319307,42401
486107677,22334
236265518,-7365
586055206,1528
486111957,-34134
931077620,-15795
203109607,9262
231944161,47838
366191936,4555
942375212,-32404
522305267,163190
571140642,13452
376044257,-8262
130970295,-124536
931204757,1674643
596134291,42218
920018710,-330458
237348596,-84930
996046220,204770
133810146,9574742
526047277,157317
841103552,23009
593131383,-40416
351101396,34735
237104346,244397
481165594,5875081
363978082,63677670
956049026,-598267
562295120,22478
431790141,-12927
943039825,-4877
550572568,-121416
460404634,5988
161353961,91804
237371642,-995673
560652336,-17668
382896174,20513
132623436,14599
910834167,249448
470789065,-42661
753188156,2107
231736288,61379
770645010,-4609
Query:
-- Corrected SQL for Query 9:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2014`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
ORDER BY RAND()
LIMIT 100
Answer:
ein,totrevenue,totfuncexpns
840782569,984421,1208957
392005163,2553206,1201771
953972422,294130,344260
205540955,1041644,900816
630413753,1214276,1329624
956128178,186104,189441
364473509,167086,158279
943028162,98078,77852
203459311,379335,342514
840564484,1644634,1709955
956042868,127844160,144345211
237107022,216237,96516
251201246,239692,230706
410665606,822028,730669
204532991,442008,383336
431486035,3603374,3585639
237181444,8780680,8283896
391602445,622385,703381
112642556,1138307,1303357
731703831,176770,110639
460797226,1695,857
201051272,545494,551852
953532367,2844982,2433062
43571721,212745,251283
380726930,75892,103300
141925138,1382767,1468099
381463671,293753,438848
222191674,1975267,2057446
946123312,1113612,965632
20679589,445998,340948
263890560,216211,211595
942985552,2844419,3881170
621604218,247950,328606
560632962,244758,229533
731712284,1036895,1154206
261406886,41014,14248
382914277,381950,408357
237367340,438661,490937
521849336,348578,402531
640254740,25563913,20274308
330553626,473589,623287
237209864,248317,139559
200529309,358472,370103
50374154,561735,662527
430630164,78525,53676
521121163,44162715,41248443
351414723,261901,258276
941079379,875763,882825
161628464,6070804,366274
590685087,260986,250215
208495615,530090,418097
562320868,126365,126515
820289075,57534,78756
310883858,277655,242791
742899050,32630,18030
10114110,381286,380756
450649209,5077250,4954958
522165814,82730,89338
141790964,194012,132878
621533189,33479901,33490215
861130456,2317431,2555020
20226828,6403862,5911081
650221331,8042869,8666004
550393244,21599850,18984277
542014680,189665,101549
237284092,9725749,8294693
751217500,366544,355901
560343025,284727,287873
841366535,331863,333692
223575823,668665,684767
237456553,44331,44043
330718596,390265,359362
941358439,917176,995793
251474974,503081,387781
620347580,462283352,405840584
650838753,531015,527188
Query:
-- Corrected SQL for Query 10:
SELECT
  ein,
  totrevenue,
  totfuncexpns
FROM `bigquery-public-data.irs_990.irs_990_2015`
WHERE
  totrevenue = totfuncexpns
  AND totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
LIMIT 100
Answer:
ein,totrevenue,totfuncexpns
30420548,174181,174181
113083762,219389,219389
43497609,2053408,2053408
46052046,44169,44169
232481500,2097430,2097430
392039341,0,0
464064067,271875,271875
621715089,615391,615391
720945796,7360952,7360952
260335902,0,0
450537391,33214334,33214334
113083762,128938,128938
136065171,70780,70780
237060602,0,0
311653393,699100,699100
640783323,1423756,1423756
450448164,2501136,2501136
311195036,7035098,7035098
43174501,10116273,10116273
316029574,49184,49184
581641714,521127,521127
770492134,139218,139218
201634783,3735326,3735326
452765573,713545,713545
455562018,0,0
261712580,1631386,1631386
742336439,1371314,1371314
593553820,0,0
471194849,11517803,11517803
42721269,23126,23126
202234836,0,0
464929486,0,0
222765486,5725322,5725322
460808466,0,0
520962244,0,0
455490584,2990304,2990304
134032925,208448,208448
486283449,35059,35059
510136264,0,0
461340679,0,0
133929066,3106904,3106904
352506275,0,0
464519557,0,0
455384648,10891175,10891175
205901644,195662,195662
900006114,2732372,2732372
43520478,2394141,2394141
272377326,5758498,5758498
273560102,622779,622779
520882914,0,0
640468113,0,0
320182181,2603806,2603806
752806289,768520,768520
236423359,45484,45484
452526738,4754379,4754379
392023357,0,0
943193387,1262021,1262021
522029558,0,0
770046961,0,0
270301399,0,0
311699455,0,0
261584681,106505,106505
611670989,0,0
311681446,1887855,1887855
300204506,173429,173429
631134720,5005383,5005383
660407714,0,0
810479512,4263200,4263200
750399805,0,0
943209613,928870,928870
311629717,6006682,6006682
471093527,0,0
452540612,2494619,2494619
943240353,555758,555758
133281507,0,0
270722038,314951,314951
261590078,2344890,2344890
300062362,0,0
581752871,0,0
161541221,1738814,1738814
Query:
-- Corrected SQL for Query 11:
SELECT
  ein,
  ABS(totrevenue - totfuncexpns) AS absolute_difference
FROM `bigquery-public-data.irs_990.irs_990_2016`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
LIMIT 100
Answer:
ein,absolute_difference
751562334,232878
391613624,723764
42665867,36213
840532684,178578
581814803,18595
270733750,115473
43508315,28587
263891535,3001
522336109,89285
542057512,60094
223115046,26025
743236898,12254
840564570,11716
463773419,23384
263566862,18022
341940863,561449
341896807,48579
742912461,77133
261318597,17257288
464504901,12444211
351742559,26774031
352197019,616782
760454516,17932
60692379,1729084
236446266,31505
454129451,33317
561957642,61978
541772269,16660
840445578,447467
363200465,140690
770530703,1571622
10467869,26358
251842046,4811875
42428837,8881
210733990,110771
42692275,109855
232325059,174676
381360545,1681545
421333052,14199
731721398,20774
510182452,48274
550232273,33458
274594523,12374
141338575,165917
264032355,306051
816012488,30485
42104326,67986
363342448,132792
650179159,136488
742966731,241174
270047915,2610
10932846,2871057
200195564,99854
592445906,57960
382052726,1013346
450398104,1975815
363297853,19970224
880387136,0
810109712,1024796
591989832,859495
510230538,312940
43263656,3138305
237278865,130129
205812260,22549
352122608,45320
230684193,14921
710294390,25814862
710689680,283401
680138507,28680
381367319,364215
753243082,59378
453617168,30644
562602254,17313
112157078,7548960
380901080,30205
592135073,33290
846039412,84188
710891642,1353413
800015698,155882
521993376,3130203
262051048,14043
161733646,62673
271529439,128061
911529442,22431
463181940,36320
710585312,12473
743019849,1187285
463752110,27359
141551083,26723
50355848,1938
351170473,19368
330997433,13319
251896200,3317
363914084,227904
520808480,151267
363332852,78980
475111581,328644
411389317,336322
916009716,104049
462993223,38945
Query:
-- Corrected SQL for Query 12:
SELECT
  ein,
  totrevenue,
  totfuncexpns,
  (totrevenue - totfuncexpns) AS net_income
FROM `bigquery-public-data.irs_990.irs_990_2017`
WHERE
  totrevenue IS NOT NULL
  AND totfuncexpns IS NOT NULL
  AND (totrevenue - totfuncexpns) < 0
LIMIT 100
Answer:
ein,totrevenue,totfuncexpns,net_income
356042156,305087,327877,-22790
362202370,136782,162179,-25397
60646753,98973,123407,-24434
710845972,88315,90730,-2415
260146595,23224,27590,-4366
223348540,12226484,12250496,-24012
956050121,831732,898309,-66577
263653751,49570,54222,-4652
42383933,375241,382133,-6892
352246162,2845066,4186957,-1341891
232616113,12451,20712,-8261
954612730,404235,439815,-35580
951652837,148802,188035,-39233
420186460,626634,633118,-6484
131825916,26640,50232,-23592
363507635,329378,407577,-78199
742728646,981983,1134366,-152383
382132707,185935,201483,-15548
134255387,142052,145799,-3747
330288930,5356304,6383829,-1027525
471129960,99505,100479,-974
720573879,917614,971980,-54366
510182993,312691,318531,-5840
133439360,34582,61984,-27402
430549665,714109,727258,-13149
451457029,1540734,2244941,-704207
204780320,37326,323169,-285843
870749129,176269,226631,-50362
310999025,119645,123012,-3367
60868436,3110164,3158598,-48434
521234660,65707,86936,-21229
43208934,112512,116707,-4195
223619206,21428,34575,-13147
592263083,109340,118628,-9288
592828707,8866624,10840266,-1973642
363783549,1024862,1410096,-385234
452670332,126878,136689,-9811
561677831,3275680,3313042,-37362
841284735,2082525,2159286,-76761
136119199,37296,51211,-13915
346545105,5817296,6057264,-239968
204252337,0,9102,-9102
113219630,619094,643053,-23959
271424101,143568,143674,-106
470494182,37349,41487,-4138
742720125,88813,112503,-23690
382058667,488287,499554,-11267
474205261,420586,541328,-120742
237178736,19239,34847,-15608
260152339,725422,770696,-45274
453127256,192070,414693,-222623
232022702,770263,840371,-70108
580590521,285250,286097,-847
221659502,12147824,12322238,-174414
382959299,884941,886708,-1767
621859820,13682,16539,-2857
841158933,361602,1597515,-1235913
370662532,201299,298150,-96851
End Exploring Related Columns
Task: Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'irs_990': ['irs_990_2012', 'irs_990_2013', 'irs_990_2014', 'irs_990_2015', 'irs_990_2016', 'irs_990_2017', 'irs_990_ein', 'irs_990_ez_2012', 'irs_990_ez_2013', 'irs_990_ez_2014', 'irs_990_ez_2015', 'irs_990_ez_2016', 'irs_990_ez_2017', 'irs_990_pf_2012', 'irs_990_pf_2013', 'irs_990_pf_2014', 'irs_990_pf_2015', 'irs_990_pf_2016']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-28 02:52:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:52:09 - root - INFO - ```sql
WITH all_data AS (
  SELECT
    2012 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2012`
  UNION ALL
  SELECT
    2013 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2013`
  UNION ALL
  SELECT
    2014 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2014`
  UNION ALL
  SELECT
    2015 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2015`
  UNION ALL
  SELECT
    2016 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2016`
  UNION ALL
  SELECT
    2017 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2017`
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] - APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)]) AS difference
FROM
  all_data
WHERE
  totrevenue > 0 AND totfuncexpns > 0
GROUP BY
  year
ORDER BY
  difference ASC
LIMIT 3;
```
2025-01-28 02:52:11 - root - INFO - itercount: 1
2025-01-28 02:52:11 - root - INFO - 0
2025-01-28 02:52:11 - root - INFO - results: 
year,median_revenue,median_expenses,difference
2012,408159,387479,20680
2013,416288,394712,21576
2017,433563,406433,27130


2025-01-28 02:52:11 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
year,median_revenue,median_expenses,difference
2012,408159,387479,20680
2013,416288,394712,21576
2017,433563,406433,27130
Current sql:
WITH all_data AS (
  SELECT
    2012 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2012`
  UNION ALL
  SELECT
    2013 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2013`
  UNION ALL
  SELECT
    2014 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2014`
  UNION ALL
  SELECT
    2015 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2015`
  UNION ALL
  SELECT
    2016 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2016`
  UNION ALL
  SELECT
    2017 AS year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2017`
)
SELECT
  year,
  APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] AS median_revenue,
  APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)] AS median_expenses,
  ABS(APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] - APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)]) AS difference
FROM
  all_data
WHERE
  totrevenue > 0 AND totfuncexpns > 0
GROUP BY
  year
ORDER BY
  difference ASC
LIMIT 3;
2025-01-28 02:52:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:52:40 - root - INFO - ```sql
WITH all_data AS (
  SELECT
    2012 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2012`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2013 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2013`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2014 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2014`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2015 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2015`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2016 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2016`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2017 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2017`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(
    APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] -
    APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)]), 4) AS Difference
FROM
  all_data
GROUP BY
  Year
ORDER BY
  Difference ASC
LIMIT 3;
```
2025-01-28 02:52:42 - root - INFO - itercount: 2
2025-01-28 02:52:42 - root - INFO - 0
2025-01-28 02:52:42 - root - INFO - results: 
Year,Difference
2012,20680.0
2013,21576.0
2017,27130.0


2025-01-28 02:52:42 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,20680.0
2013,21576.0
2017,27130.0
Current sql:
WITH all_data AS (
  SELECT
    2012 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2012`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2013 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2013`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2014 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2014`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2015 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2015`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2016 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2016`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2017 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2017`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(
    APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] -
    APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)]), 4) AS Difference
FROM
  all_data
GROUP BY
  Year
ORDER BY
  Difference ASC
LIMIT 3;
2025-01-28 02:53:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 400 model_error"
2025-01-28 02:53:27 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,20680.0
2013,21576.0
2017,27130.0
Current sql:
WITH all_data AS (
  SELECT
    2012 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2012`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2013 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2013`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2014 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2014`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2015 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2015`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2016 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2016`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2017 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2017`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(
    APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] -
    APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)]), 4) AS Difference
FROM
  all_data
GROUP BY
  Year
ORDER BY
  Difference ASC
LIMIT 3;
2025-01-28 02:53:27 - root - INFO - Exceeded
2025-01-28 02:53:27 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,20680.0
2013,21576.0
2017,27130.0
Current sql:
WITH all_data AS (
  SELECT
    2012 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2012`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2013 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2013`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2014 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2014`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2015 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2015`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2016 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2016`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2017 AS Year,
    totrevenue,
    totfuncexpns
  FROM
    `bigquery-public-data.irs_990.irs_990_2017`
  WHERE
    totrevenue IS NOT NULL AND totfuncexpns IS NOT NULL AND totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(
    APPROX_QUANTILES(totrevenue, 100)[SAFE_OFFSET(50)] -
    APPROX_QUANTILES(totfuncexpns, 100)[SAFE_OFFSET(50)]), 4) AS Difference
FROM
  all_data
GROUP BY
  Year
ORDER BY
  Difference ASC
LIMIT 3;
2025-01-28 02:53:27 - root - INFO - Total iteration counts: 2
