2025-01-27 11:40:02 - openai._base_client - INFO - Retrying request to /chat/completions in 0.446085 seconds
2025-01-27 11:40:43 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:40:43 - root - INFO - SQL:
SELECT DISTINCT match_id
   FROM ball_by_ball
   LIMIT 100;
Results:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT DISTINCT over_id
   FROM ball_by_ball
   ORDER BY over_id
   LIMIT 100;
Results:
over_id
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT DISTINCT innings_no
   FROM ball_by_ball
   ORDER BY innings_no
   LIMIT 100;
Results:
innings_no
1
2

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT runs_scored
   FROM batsman_scored
   LIMIT 100;
Results:
runs_scored
1
0
0
0
1
0
1
0
0
0
0
0
0
4
0
4
0
6
1
4
0
0
0
0
0
0
0
0
1
4
0
1
0
0
1
2
6
1
0
0
4
0
0
0
1
0
6
4
1
1
1
4
0
0
6
1
0
0
0
1
0
0
0
0
0
0
1
0
1
0
0
1
0
1
0
1
1
2
1
1
0
0
4
0
1
1
0
1
1
1
2
1
0
1
0
0
0
0
0
0

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT DISTINCT extra_type
   FROM extra_runs
   LIMIT 100;
Results:
extra_type
legbyes
wides
byes
noballs
penalty

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT extra_runs
   FROM extra_runs
   LIMIT 100;
Results:
extra_runs
1
1
4
1
1
4
1
1
1
4
1
1
1
1
1
1
2
2
4
1
1
1
1
1
1
1
1
1
1
1
1
4
1
1
1
1
4
1
2
4
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
1
4
1
1
1
1
1
1
1
1
2
1
1
1
1
1
1
4
1
1
1
1
1
1
1
1
1
1

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, ball_id, runs_scored
   FROM batsman_scored
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, ball_id, extra_runs
   FROM extra_runs
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,extra_runs
501229,1,16,3,1
501229,2,18,1,1
501229,2,18,6,4
392239,2,18,6,1
501229,1,20,3,1
501230,1,1,4,4
829714,1,18,4,1
829816,2,3,3,1
501230,2,3,4,1
829816,1,2,3,4
980962,2,18,2,1
829714,2,18,1,1
829714,1,9,6,1
501231,2,1,1,1
335994,2,4,6,1
501231,2,2,6,1
829714,1,9,3,2
980962,2,17,5,2
336045,2,3,5,4
392240,1,3,7,1
336045,1,4,1,1
829714,1,3,6,1
501231,2,20,5,1
501232,2,1,1,1
501232,1,1,2,1
336045,1,8,3,1
336017,2,4,4,1
829814,1,18,1,1
501232,2,4,3,1
501232,1,4,6,1
501232,2,7,2,1
829714,1,1,1,4
336045,2,9,3,1
501232,2,14,3,1
501232,1,14,7,1
829712,1,18,5,1
829712,1,3,1,4
829712,1,2,6,1
392240,1,10,2,2
829712,1,1,3,4
392240,1,11,2,1
335991,1,2,1,1
980962,2,14,1,1
335988,2,17,1,1
392240,1,13,3,1
829814,1,14,3,1
501232,1,20,7,1
829812,1,4,5,1
392240,1,15,3,1
980960,1,7,5,1
829710,2,4,2,1
501233,2,6,1,1
501233,2,6,3,1
981018,2,2,1,1
336045,2,18,8,1
501233,1,13,1,1
829812,1,1,4,1
392241,2,3,6,1
392241,2,4,6,1
981018,1,1,3,1
829810,1,12,6,1
501234,2,2,1,1
980958,1,3,2,1
829710,1,1,5,1
829710,2,1,3,1
392241,2,8,3,1
980956,1,20,3,1
336017,2,7,5,1
392186,1,2,1,1
501234,2,14,5,2
501234,1,16,2,1
336001,2,20,3,1
734054,1,19,6,1
392186,2,6,1,4
392241,1,19,4,1
392186,2,6,2,1
980986,1,18,2,1
392186,2,10,3,1
501235,1,12,3,1
734054,1,17,6,1
829808,1,9,2,1
335994,1,9,3,1
829808,2,8,2,2
829808,2,7,3,1
829808,2,7,1,1
734054,1,13,2,1
501235,1,18,4,1
980956,1,16,2,1
335994,1,10,2,1
335991,2,2,5,4
501236,1,13,2,1
392187,1,2,2,1
501236,1,13,5,1
501236,1,15,1,1
829808,2,3,1,1
501236,2,17,2,1
392243,1,4,4,1
829806,1,19,6,1
392243,2,10,1,1
501237,2,5,6,1

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, ball_id, extra_type, extra_runs
   FROM extra_runs
   WHERE extra_runs > 0
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,extra_type,extra_runs
501229,1,16,3,legbyes,1
501229,2,18,1,legbyes,1
501229,2,18,6,legbyes,4
392239,2,18,6,legbyes,1
501229,1,20,3,legbyes,1
501230,1,1,4,legbyes,4
829714,1,18,4,legbyes,1
829816,2,3,3,legbyes,1
501230,2,3,4,legbyes,1
829816,1,2,3,legbyes,4
980962,2,18,2,legbyes,1
829714,2,18,1,legbyes,1
829714,1,9,6,legbyes,1
501231,2,1,1,legbyes,1
335994,2,4,6,legbyes,1
501231,2,2,6,legbyes,1
829714,1,9,3,legbyes,2
980962,2,17,5,legbyes,2
336045,2,3,5,legbyes,4
392240,1,3,7,legbyes,1
336045,1,4,1,legbyes,1
829714,1,3,6,legbyes,1
501231,2,20,5,legbyes,1
501232,2,1,1,legbyes,1
501232,1,1,2,legbyes,1
336045,1,8,3,legbyes,1
336017,2,4,4,legbyes,1
829814,1,18,1,legbyes,1
501232,2,4,3,legbyes,1
501232,1,4,6,legbyes,1
501232,2,7,2,legbyes,1
829714,1,1,1,legbyes,4
336045,2,9,3,legbyes,1
501232,2,14,3,legbyes,1
501232,1,14,7,legbyes,1
829712,1,18,5,legbyes,1
829712,1,3,1,legbyes,4
829712,1,2,6,legbyes,1
392240,1,10,2,legbyes,2
829712,1,1,3,legbyes,4
392240,1,11,2,legbyes,1
335991,1,2,1,legbyes,1
980962,2,14,1,legbyes,1
335988,2,17,1,legbyes,1
392240,1,13,3,legbyes,1
829814,1,14,3,legbyes,1
501232,1,20,7,legbyes,1
829812,1,4,5,legbyes,1
392240,1,15,3,legbyes,1
980960,1,7,5,legbyes,1
829710,2,4,2,legbyes,1
501233,2,6,1,legbyes,1
501233,2,6,3,legbyes,1
981018,2,2,1,legbyes,1
336045,2,18,8,legbyes,1
501233,1,13,1,legbyes,1
829812,1,1,4,legbyes,1
392241,2,3,6,legbyes,1
392241,2,4,6,legbyes,1
981018,1,1,3,legbyes,1
829810,1,12,6,legbyes,1
501234,2,2,1,legbyes,1
980958,1,3,2,legbyes,1
829710,1,1,5,legbyes,1
829710,2,1,3,legbyes,1
392241,2,8,3,legbyes,1
980956,1,20,3,legbyes,1
336017,2,7,5,legbyes,1
392186,1,2,1,legbyes,1
501234,2,14,5,legbyes,2
501234,1,16,2,legbyes,1
336001,2,20,3,legbyes,1
734054,1,19,6,legbyes,1
392186,2,6,1,legbyes,4
392241,1,19,4,legbyes,1
392186,2,6,2,legbyes,1
980986,1,18,2,legbyes,1
392186,2,10,3,legbyes,1
501235,1,12,3,legbyes,1
734054,1,17,6,legbyes,1
829808,1,9,2,legbyes,1
335994,1,9,3,legbyes,1
829808,2,8,2,legbyes,2
829808,2,7,3,legbyes,1
829808,2,7,1,legbyes,1
734054,1,13,2,legbyes,1
501235,1,18,4,legbyes,1
980956,1,16,2,legbyes,1
335994,1,10,2,legbyes,1
335991,2,2,5,legbyes,4
501236,1,13,2,legbyes,1
392187,1,2,2,legbyes,1
501236,1,13,5,legbyes,1
501236,1,15,1,legbyes,1
829808,2,3,1,legbyes,1
501236,2,17,2,legbyes,1
392243,1,4,4,legbyes,1
829806,1,19,6,legbyes,1
392243,2,10,1,legbyes,1
501237,2,5,6,legbyes,1

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT b.match_id, b.innings_no, b.over_id, b.ball_id,
           b.runs_scored, COALESCE(e.extra_runs, 0) AS extra_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs
335987,2,1,1,1,0
335987,1,1,2,0,0
335987,2,1,3,0,0
335987,1,1,4,0,0
335987,2,1,4,1,0
335987,1,1,5,0,0
335987,2,1,5,1,0
335987,1,1,6,0,0
335987,2,1,6,0,0
335987,1,1,7,0,1
335987,2,1,7,0,0
335987,1,2,1,0,0
335987,2,2,1,0,0
335987,1,2,2,4,0
335987,2,2,2,0,0
335987,1,2,3,4,0
335987,2,2,3,0,4
335987,1,2,4,6,0
335987,2,2,4,1,0
335987,1,2,5,4,0
335987,2,2,5,0,0
335987,1,2,6,0,0
335987,2,2,6,0,0
335987,1,3,1,0,0
335987,2,3,1,0,0
335987,1,3,2,0,0
335987,2,3,2,0,0
335987,1,3,3,0,1
335987,2,3,3,1,0
335987,1,3,4,4,0
335987,2,3,4,0,0
335987,1,3,5,1,0
335987,1,3,6,0,0
335987,2,3,6,0,0
335987,2,3,7,1,0
335987,2,4,1,2,0
335987,1,4,2,6,0
335987,2,4,2,1,0
335987,1,4,3,0,1
335987,2,4,3,0,0
335987,1,4,4,4,0
335987,2,4,4,0,1
335987,1,4,5,0,0
335987,2,4,5,0,0
335987,1,4,6,1,0
335987,2,4,6,0,0
335987,1,4,7,6,0
335987,1,5,1,4,0
335987,2,5,1,1,0
335987,1,5,2,1,0
335987,2,5,2,1,0
335987,1,5,3,4,0
335987,2,5,3,0,0
335987,1,5,4,0,0
335987,2,5,4,6,0
335987,1,5,5,1,0
335987,2,5,5,0,0
335987,1,5,6,0,0
335987,2,5,6,0,0
335987,1,6,1,1,0
335987,2,6,1,0,0
335987,1,6,2,0,0
335987,2,6,2,0,0
335987,1,6,3,0,0
335987,2,6,3,0,0
335987,1,6,4,0,0
335987,2,6,4,1,0
335987,1,6,5,0,0
335987,2,6,5,1,0
335987,1,6,6,0,0
335987,2,6,6,0,0
335987,1,7,1,1,0
335987,2,7,1,0,0
335987,1,7,2,1,0
335987,2,7,2,0,0
335987,1,7,3,1,0
335987,2,7,3,1,0
335987,1,7,4,2,0
335987,1,7,5,1,0
335987,1,7,6,1,0
335987,2,7,6,0,0
335987,2,7,7,0,0
335987,2,7,8,4,0
335987,1,8,1,0,0
335987,2,8,1,1,0
335987,1,8,2,1,0
335987,2,8,2,0,1
335987,1,8,3,1,0
335987,2,8,3,1,0
335987,1,8,4,1,0
335987,2,8,4,2,0
335987,1,8,5,1,0
335987,2,8,5,0,0
335987,1,8,6,1,0
335987,2,8,6,0,0
335987,1,9,1,0,0
335987,2,9,1,0,0
335987,1,9,2,0,0
335987,2,9,2,0,0
335987,1,9,3,0,0

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, SUM(runs_scored) AS total_runs_scored
    FROM batsman_scored
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
Results:
match_id,innings_no,over_id,total_runs_scored
335987,1,1,0
335987,1,2,18
335987,1,3,5
335987,1,4,17
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,11
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,1
335987,2,3,2
335987,2,4,3
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,4
335987,2,9,3
335987,2,10,6
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,2
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,6
335988,1,4,6
335988,1,5,8
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,9
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,5
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,12
335988,2,14,9
335988,2,15,13
335988,2,16,10
335988,2,17,9
335988,2,18,4
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,2
335989,1,7,4
335989,1,8,3
335989,1,9,2
335989,1,10,5
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, SUM(extra_runs) AS total_extra_runs
    FROM extra_runs
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
Results:
match_id,innings_no,over_id,total_extra_runs
335987,1,1,3
335987,1,3,1
335987,1,4,6
335987,1,11,4
335987,1,13,1
335987,1,15,2
335987,2,1,1
335987,2,2,4
335987,2,3,1
335987,2,4,1
335987,2,7,2
335987,2,8,1
335987,2,9,2
335987,2,10,2
335987,2,13,2
335987,2,15,2
335987,2,16,1
335988,1,2,1
335988,1,3,1
335988,1,5,1
335988,1,13,2
335988,1,14,1
335988,2,6,2
335988,2,7,1
335988,2,9,1
335988,2,13,2
335988,2,14,2
335988,2,16,1
335988,2,17,1
335988,2,18,1
335989,1,1,1
335989,1,6,1
335989,1,8,1
335989,1,9,1
335989,1,10,1
335989,1,13,2
335989,2,2,1
335989,2,6,1
335989,2,8,1
335989,2,10,1
335989,2,13,5
335989,2,15,1
335990,1,2,4
335990,1,3,1
335990,1,5,1
335990,1,9,1
335990,1,10,1
335990,1,14,1
335990,1,16,1
335990,1,17,1
335990,2,5,1
335990,2,9,1
335990,2,14,2
335990,2,20,1
335991,1,1,1
335991,1,2,3
335991,1,8,1
335991,1,10,2
335991,1,14,1
335991,1,16,1
335991,1,17,1
335991,2,2,4
335991,2,3,1
335991,2,7,5
335991,2,9,1
335991,2,10,1
335991,2,12,11
335991,2,13,2
335991,2,15,1
335991,2,18,1
335991,2,19,1
335992,1,8,3
335992,1,20,1
335992,2,1,1
335992,2,2,2
335992,2,3,1
335992,2,4,2
335992,2,5,1
335992,2,6,1
335992,2,8,1
335992,2,12,1
335992,2,14,1
335992,2,18,1
335993,1,1,1
335993,1,10,1
335993,1,16,1
335993,1,20,2
335993,2,6,1
335993,2,9,1
335993,2,12,9
335993,2,14,1
335994,1,1,1
335994,1,3,4
335994,1,6,2
335994,1,7,1
335994,1,9,1
335994,1,10,1
335994,1,12,5
335994,1,16,1
335994,1,19,1

2025-01-27 11:40:43 - root - INFO - SQL:
SELECT b.match_id, b.innings_no, b.over_id,
           SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    GROUP BY b.match_id, b.innings_no, b.over_id
    LIMIT 100;
Results:
match_id,innings_no,over_id,total_runs
335987,1,1,1
335987,1,2,18
335987,1,3,6
335987,1,4,18
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,15
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,5
335987,2,3,2
335987,2,4,4
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,5
335987,2,9,3
335987,2,10,7
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,3
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,7
335988,1,4,6
335988,1,5,9
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,10
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,6
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,14
335988,2,14,9
335988,2,15,13
335988,2,16,11
335988,2,17,10
335988,2,18,5
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,3
335989,1,7,4
335989,1,8,4
335989,1,9,3
335989,1,10,6
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10

2025-01-27 11:40:44 - root - INFO - SQL:
SELECT match_id, MAX(total_runs) AS max_runs_in_over
    FROM (
      SELECT b.match_id, b.innings_no, b.over_id,
             SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
      FROM batsman_scored b
      LEFT JOIN extra_runs e
        ON b.match_id = e.match_id
       AND b.innings_no = e.innings_no
       AND b.over_id = e.over_id
       AND b.ball_id = e.ball_id
      GROUP BY b.match_id, b.innings_no, b.over_id
    ) sub
    GROUP BY match_id
    LIMIT 100;
Results:
match_id,max_runs_in_over
335987,22
335988,25
335989,12
335990,20
335991,19
335992,17
335993,30
335994,21
335995,22
335996,22
335997,26
335998,16
335999,23
336000,15
336001,23
336002,15
336003,19
336004,18
336005,16
336006,19
336007,21
336008,21
336009,20
336010,17
336011,14
336012,21
336013,17
336014,23
336015,15
336016,17
336017,18
336018,19
336019,22
336020,27
336021,20
336022,11
336023,26
336024,24
336025,19
336026,23
336027,22
336028,18
336029,19
336030,16
336031,24
336032,17
336033,22
336034,15
336036,21
336037,19
336038,20
336039,16
336040,18
336041,25
336042,14
336043,20
336044,16
336045,15
392186,22
392187,15
392188,18
392189,16
392190,20
392191,16
392193,20
392194,22
392196,19
392197,19
392199,18
392200,12
392201,20
392202,17
392203,19
392204,14
392205,13
392206,20
392207,24
392208,16
392209,21
392210,17
392211,16
392212,22
392213,18
392214,19
392215,23
392216,21
392217,15
392218,15
392219,24
392220,19
392221,20
392222,20
392223,15
392224,15
392225,17
392226,20
392227,21
392228,24
392229,15
392230,19

2025-01-27 11:40:44 - root - INFO - SQL:
SELECT b.match_id, b.innings_no, b.over_id,
           SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    GROUP BY b.match_id, b.innings_no, b.over_id
    HAVING total_runs > 20
    LIMIT 100;
Results:
match_id,innings_no,over_id,total_runs
335987,1,15,22
335987,1,19,21
335987,1,20,22
335988,1,20,25
335993,1,18,26
335993,2,9,22
335993,2,13,30
335994,2,17,21
335995,2,5,22
335996,2,12,22
335997,2,14,26
335999,2,7,23
335999,2,10,21
336001,1,19,23
336007,2,19,21
336008,1,20,21
336012,2,18,21
336014,2,14,23
336019,2,14,22
336020,1,19,27
336020,2,9,22
336023,2,14,26
336024,1,17,24
336024,2,14,23
336026,2,3,23
336027,1,6,22
336027,2,5,21
336031,1,20,24
336033,2,2,22
336036,1,17,21
336041,1,20,25
392186,1,18,22
392194,1,19,22
392207,1,18,24
392209,1,18,21
392212,1,20,21
392212,2,4,22
392215,1,19,23
392216,1,3,21
392219,1,15,24
392219,1,17,22
392227,2,5,21
392228,1,6,24
392233,1,19,28
392233,2,20,25
392235,1,19,25
392236,2,6,22
392238,1,1,22
392241,1,20,23
392241,2,5,21
392242,2,6,25
419112,2,12,25
419112,2,18,21
419115,1,20,22
419117,2,13,25
419117,2,18,23
419121,2,8,21
419122,1,2,23
419122,2,17,21
419128,1,19,24
419132,1,20,21
419134,2,5,24
419138,2,3,24
419142,1,14,22
419142,1,16,26
419142,2,15,23
419144,1,13,26
419150,1,17,22
419153,1,5,21
419153,2,17,21
419157,1,20,25
419162,1,15,21
419170,2,18,22
501211,1,18,22
501217,2,5,22
501218,1,6,21
501218,1,20,25
501219,2,14,21
501225,1,3,25
501225,1,14,21
501229,1,20,24
501237,1,18,23
501241,1,19,21
501243,2,4,22
501246,1,19,25
501247,1,20,22
501248,2,8,23
501249,1,4,21
501249,1,8,22
501252,2,3,37
501253,2,15,21
501260,2,2,23
501261,1,20,23
501262,1,13,25
501265,1,8,21
501265,1,10,21
501265,1,15,30
501272,2,20,23
501273,2,13,22
501273,2,19,21

2025-01-27 11:40:44 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, COUNT(ball_id) AS deliveries
    FROM ball_by_ball
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
Results:
match_id,innings_no,over_id,deliveries
335987,1,1,6
335987,1,2,6
335987,1,3,6
335987,1,4,7
335987,1,5,6
335987,1,6,6
335987,1,7,6
335987,1,8,6
335987,1,9,6
335987,1,10,6
335987,1,11,6
335987,1,12,6
335987,1,13,7
335987,1,14,6
335987,1,15,7
335987,1,16,6
335987,1,17,6
335987,1,18,6
335987,1,19,6
335987,1,20,6
335987,2,1,7
335987,2,2,6
335987,2,3,7
335987,2,4,6
335987,2,5,6
335987,2,6,6
335987,2,7,8
335987,2,8,6
335987,2,9,8
335987,2,10,7
335987,2,11,6
335987,2,12,6
335987,2,13,7
335987,2,14,6
335987,2,15,7
335987,2,16,2
335988,1,1,6
335988,1,2,7
335988,1,3,7
335988,1,4,6
335988,1,5,6
335988,1,6,6
335988,1,7,6
335988,1,8,6
335988,1,9,6
335988,1,10,6
335988,1,11,6
335988,1,12,6
335988,1,13,8
335988,1,14,6
335988,1,15,6
335988,1,16,6
335988,1,17,6
335988,1,18,6
335988,1,19,6
335988,1,20,6
335988,2,1,6
335988,2,2,6
335988,2,3,6
335988,2,4,6
335988,2,5,6
335988,2,6,8
335988,2,7,6
335988,2,8,6
335988,2,9,7
335988,2,10,6
335988,2,11,6
335988,2,12,6
335988,2,13,6
335988,2,14,7
335988,2,15,6
335988,2,16,6
335988,2,17,6
335988,2,18,6
335988,2,19,6
335988,2,20,6
335989,1,1,7
335989,1,2,6
335989,1,3,6
335989,1,4,6
335989,1,5,6
335989,1,6,6
335989,1,7,6
335989,1,8,6
335989,1,9,6
335989,1,10,6
335989,1,11,6
335989,1,12,6
335989,1,13,7
335989,1,14,6
335989,1,15,6
335989,1,16,6
335989,1,17,6
335989,1,18,6
335989,1,19,6
335989,1,20,6
335989,2,1,6
335989,2,2,7
335989,2,3,6
335989,2,4,6

2025-01-27 11:40:44 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, bowler
    FROM ball_by_ball
    GROUP BY match_id, innings_no, over_id, bowler
    LIMIT 100;
Results:
match_id,innings_no,over_id,bowler
335987,1,1,14
335987,1,2,15
335987,1,3,14
335987,1,4,13
335987,1,5,14
335987,1,6,15
335987,1,7,13
335987,1,8,15
335987,1,9,9
335987,1,10,16
335987,1,11,9
335987,1,12,16
335987,1,13,9
335987,1,14,16
335987,1,15,10
335987,1,16,13
335987,1,17,15
335987,1,18,13
335987,1,19,9
335987,1,20,14
335987,2,1,106
335987,2,2,84
335987,2,3,106
335987,2,4,84
335987,2,5,82
335987,2,6,106
335987,2,7,82
335987,2,8,1
335987,2,9,82
335987,2,10,1
335987,2,11,82
335987,2,12,1
335987,2,13,63
335987,2,14,1
335987,2,15,84
335987,2,16,63
335988,1,1,66
335988,1,2,77
335988,1,3,66
335988,1,4,77
335988,1,5,66
335988,1,6,25
335988,1,7,29
335988,1,8,25
335988,1,9,29
335988,1,10,24
335988,1,11,67
335988,1,12,24
335988,1,13,68
335988,1,14,25
335988,1,15,68
335988,1,16,29
335988,1,17,77
335988,1,18,29
335988,1,19,66
335988,1,20,25
335988,2,1,22
335988,2,2,120
335988,2,3,22
335988,2,4,120
335988,2,5,22
335988,2,6,120
335988,2,7,121
335988,2,8,435
335988,2,9,119
335988,2,10,121
335988,2,11,435
335988,2,12,119
335988,2,13,435
335988,2,14,121
335988,2,15,119
335988,2,16,435
335988,2,17,120
335988,2,18,121
335988,2,19,22
335988,2,20,119
335989,1,1,118
335989,1,2,436
335989,1,3,118
335989,1,4,436
335989,1,5,118
335989,1,6,90
335989,1,7,89
335989,1,8,90
335989,1,9,89
335989,1,10,90
335989,1,11,89
335989,1,12,175
335989,1,13,89
335989,1,14,436
335989,1,15,175
335989,1,16,436
335989,1,17,175
335989,1,18,90
335989,1,19,175
335989,1,20,118
335989,2,1,126
335989,2,2,32
335989,2,3,126
335989,2,4,32

2025-01-27 11:40:44 - root - INFO - SQL:
SELECT DISTINCT striker
    FROM ball_by_ball
    LIMIT 100;
Results:
striker
6
2
7
8
1
9
10
3
11
12
13
14
15
4
16
5
17
24
18
25
19
26
20
21
27
22
28
23
29
30
40
31
41
42
32
33
34
35
36
37
38
39
43
51
44
45
46
52
47
48
49
50
53
62
54
55
56
57
58
232
59
63
60
61
69
64
65
66
67
68
70
71
72
73
74
75
79
76
80
77
78
81
82
83
84
85
86
87
88
89
92
90
91
93
94
95
96
100
97
98

2025-01-27 11:40:44 - root - INFO - SQL:
SELECT match_id, innings_no, over_id, SUM(extra_runs) AS total_extra_runs
    FROM extra_runs
    GROUP BY match_id, innings_no, over_id
    ORDER BY total_extra_runs DESC
    LIMIT 100;
Results:
match_id,innings_no,over_id,total_extra_runs
336010,2,7,12
598039,2,1,12
335991,2,12,11
548337,1,15,10
598047,1,10,10
335993,2,12,9
980964,2,14,9
501243,2,1,8
548334,2,7,8
548382,2,7,8
598077,1,20,8
729294,1,1,8
829714,1,9,8
829790,2,1,8
336031,1,2,7
336033,2,1,7
392191,1,12,7
392215,2,8,7
419117,2,4,7
419119,1,10,7
419144,1,13,7
501218,2,6,7
501227,1,1,7
501275,1,1,7
548331,1,4,7
548358,1,4,7
548362,2,17,7
734018,2,7,7
734038,1,20,7
829716,1,3,7
829724,2,17,7
829728,1,1,7
981006,2,7,7
335987,1,4,6
336007,1,1,6
336017,2,5,6
336029,1,19,6
336034,2,3,6
392186,2,6,6
392202,1,3,6
392209,2,18,6
392224,2,4,6
392230,2,9,6
392240,2,11,6
419124,1,3,6
419139,1,18,6
419147,1,3,6
419153,1,7,6
419153,2,9,6
419154,1,7,6
419158,1,18,6
419166,2,13,6
501205,1,13,6
501212,1,20,6
501214,1,20,6
501215,1,2,6
501228,1,6,6
501229,2,8,6
501232,2,3,6
501246,1,6,6
501257,1,19,6
501259,1,1,6
501259,1,8,6
501264,2,4,6
501269,1,2,6
501276,1,4,6
548335,2,16,6
548344,1,14,6
548353,1,17,6
548364,2,6,6
548366,2,19,6
598011,2,13,6
598051,2,14,6
598055,1,20,6
598066,2,1,6
598066,2,2,6
598072,2,1,6
598074,2,13,6
733988,1,8,6
733994,1,20,6
829724,1,7,6
829742,1,2,6
829744,1,7,6
829758,1,7,6
829770,1,10,6
829780,2,1,6
980906,1,6,6
980926,2,1,6
980934,2,2,6
980936,1,16,6
980956,2,10,6
980994,2,5,6
981008,2,1,6
981018,2,1,6
335989,2,13,5
335991,2,7,5
335994,1,12,5
335998,2,3,5
335998,2,16,5
336002,2,9,5

2025-01-27 11:41:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:41:05 - root - INFO - I see that you're receiving an error when running the SQL query:

```sql
SELECT DISTINCT match_id
FROM ball_by_ball
WHERE bowler = [player_id]
LIMIT 100;
```

The error message "no such column: player_id" occurs because `[player_id]` is a placeholder meant to be replaced with an actual value, and including it directly in the SQL query causes the database to look for a column named `player_id`, which doesn't exist in the `ball_by_ball` table.

To fix this error, you need to replace `[player_id]` with the actual numerical ID of the player you're interested in. For example, if you want to find matches where the bowler has `player_id` **84**, the query would be:

```sql
SELECT DISTINCT match_id
FROM ball_by_ball
WHERE bowler = 84
LIMIT 100;
```

If you're not sure about the player IDs, you can retrieve a list of bowlers from the `ball_by_ball` table:

**Retrieve a list of bowler IDs:**

```sql
SELECT DISTINCT bowler
FROM ball_by_ball
LIMIT 100;
```

This will give you a list of `bowler` IDs that you can use in your query.

**Retrieve bowler IDs with player names:**

To map bowler IDs to player names, you can join the `ball_by_ball` table with the `player` table:

```sql
SELECT DISTINCT b.bowler, p.player_name
FROM ball_by_ball b
JOIN player p ON b.bowler = p.player_id
LIMIT 100;
```

This will help you find the `player_id` of the bowler by name.

**Example: Find matches where a specific bowler played:**

If you want to find matches where a bowler named **"James Anderson"** played, you can do the following:

```sql
SELECT DISTINCT b.match_id
FROM ball_by_ball b
JOIN player p ON b.bowler = p.player_id
WHERE p.player_name = 'James Anderson'
LIMIT 100;
```

**Summary:**

- Replace `[player_id]` with the actual numeric `player_id` of the bowler.
- Use the above queries to find the correct `player_id` if you're unsure.
- Ensure that you're using valid player IDs present in the `ball_by_ball` and `player` tables.

Let me know if you need any further assistance!
2025-01-27 11:41:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:41:28 - root - INFO - I understand that you're still encountering the error when running the SQL query:

```sql
SELECT DISTINCT match_id
FROM ball_by_ball
WHERE bowler = [player_id]
LIMIT 100;
```

**Error Message:**

```
no such column: player_id
```

The reason for this error is that the SQL engine is interpreting `[player_id]` as a column name, not as a placeholder for a value. Square brackets `[]` are not recognized as placeholder syntax in SQL. As a result, it looks for a column named `player_id` in the `ball_by_ball` table, which doesn't exist, hence the error.

### **How to Fix the Error**

To resolve this issue, you need to replace `[player_id]` with an actual numeric player ID. For example:

1. **Identify the `player_id` of the bowler you're interested in.**

   - If you already know the `player_id`, you can proceed to step 2.
   - If not, you can find `player_id`s and corresponding player names using the following query:

     ```sql
     SELECT DISTINCT b.bowler, p.player_name
     FROM ball_by_ball b
     JOIN player p ON b.bowler = p.player_id
     LIMIT 100;
     ```

     **Sample Output:**

     | bowler | player_name       |
     |--------|-------------------|
     | 84     | Albie Morkel      |
     | 82     | Manpreet Gony     |
     | 106    | Joginder Sharma   |
     | 15     | Zaheer Khan       |
     | 14     | Praveen Kumar     |
     | 16     | Jacques Kallis    |
     | 13     | Sreesanth         |
     | 9      | Vikram Singh      |
     | 10     | Ajit Agarkar      |
     | 63     | Muttiah Muralitharan |
     | ...    | ...               |

     *(Replace `LIMIT 100` with a higher value if needed to see more players.)*

2. **Use the specific player ID in your query.**

   For example, if you want to find matches where **Albie Morkel** (whose `player_id` is **84**) was the bowler, your query would be:

   ```sql
   SELECT DISTINCT match_id
   FROM ball_by_ball
   WHERE bowler = 84
   LIMIT 100;
   ```

   **Sample Results:**

   | match_id |
   |----------|
   | 335987   |
   | 335988   |
   | 335992   |
   | ...      |

3. **Run the corrected query.**

### **Understanding the Issue**

- **Placeholders in SQL Queries:**

  SQL does not use square brackets `[]` for placeholders. Instead, you should directly insert the required value or use parameterized queries if supported by your programming environment.

- **Avoiding Misinterpretation:**

  Including `[player_id]` without replacing it causes SQL to look for a column named `player_id`, leading to the "no such column" error.

### **Additional Tips**

- **Listing All Bowlers:**

  To see a list of all bowlers and their `player_id`s:

  ```sql
  SELECT DISTINCT b.bowler AS player_id, p.player_name
  FROM ball_by_ball b
  JOIN player p ON b.bowler = p.player_id
  ORDER BY b.bowler
  LIMIT 100;
  ```

- **Finding Bowler IDs by Name:**

  If you are looking for a specific bowler by name:

  ```sql
  SELECT player_id
  FROM player
  WHERE player_name = 'Albie Morkel';
  ```

  Replace `'Albie Morkel'` with the name of the bowler you're interested in.

- **Example with a Different Bowler:**

  Suppose you want to find matches where **Praveen Kumar** bowled. First, find his `player_id`:

  ```sql
  SELECT player_id
  FROM player
  WHERE player_name = 'Praveen Kumar';
  ```

  If the result is `14`, then your query would be:

  ```sql
  SELECT DISTINCT match_id
  FROM ball_by_ball
  WHERE bowler = 14
  LIMIT 100;
  ```

### **Final Remarks**

- **Consistency in SQL Syntax:**

  Ensure that you use correct SQL syntax by replacing placeholders with actual values.

- **Parameterized Queries:**

  If you're using a programming language to execute SQL queries, consider using parameterized queries to prevent SQL injection attacks and to handle variables properly.

- **Error Handling:**

  Always read error messages carefully. They often provide clues about what's wrong in your query.

---

Let me know if you need further assistance or have questions about retrieving other data!
2025-01-27 11:42:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:42:11 - root - INFO - ```csv
average_highest_runs_conceded_per_over
19.53
(Attention: answer in one row)
```
2025-01-27 11:42:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:42:59 - root - INFO - SQL:
SELECT DISTINCT match_id
   FROM ball_by_ball
   WHERE bowler = 14  -- Replace 14 with the actual bowler's player_id you're interested in
   LIMIT 100
Results:
match_id
335987
335990
335997
336001
336003
336011
336015
336017
336021
336028
336031
336034
336039
392187
392190
392193
392196
392204
392209
392213
392218
392229
392237
392241
392243
392244
419114
419117
419120
419124
419128
419133
419138
419141
419150
419153
419167
419169
501207
501211
501217
501225
501228
501239
501242
501249
501253
501256
501262
501265
501269
548314
548318
548324
548328
548333
548336
548339
548344
548348
548355
548359
548364
548371
548374
548376
548379
598008
598012
598019
598021
598026
598030
598033
598036
598042
598046
598057
598061
598064
598069
598071
734000
734030
734050
829724
829732
829736
829748
829756
829764
829778
829786
829792
829798
829812
829820
980910
980916
980922

2025-01-27 11:42:59 - root - INFO - itercount: 0
2025-01-27 11:42:59 - root - INFO - Table: playerDDL:
CREATE TABLE player(
        player_id INTEGER PRIMARY KEY,
        player_name TEXT,
        dob DATE,
        batting_hand TEXT,
        bowling_skill TEXT,
        country_name TEXT
    )
Table: teamDDL:
CREATE TABLE team(
        team_id INTEGER PRIMARY KEY,
        name TEXT
    )
Table: matchDDL:
CREATE TABLE match(
        match_id INTEGER PRIMARY KEY,
        team_1 INTEGER,
        team_2 INTEGER,
        match_date DATE,
        season_id INTEGER,
        venue TEXT,
        toss_winner INTEGER,
        toss_decision TEXT,
        win_type TEXT,
        win_margin INTEGER,
        outcome_type TEXT,
        match_winner INTEGER,
        man_of_the_match INTEGER
    )
Table: player_matchDDL:
CREATE TABLE player_match(
        match_id INTEGER NOT NULL,
        player_id INTEGER NOT NULL,
        role TEXT,
        team_id INTEGER,
        PRIMARY KEY(match_id, player_id)
    )
Table: ball_by_ballDDL:
CREATE TABLE ball_by_ball(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        innings_no INTEGER NOT NULL,
        team_batting INTEGER,
        team_bowling INTEGER,
        striker_batting_position INTEGER,
        striker INTEGER,
        non_striker INTEGER,
        bowler INTEGER,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: batsman_scoredDDL:
CREATE TABLE batsman_scored(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        runs_scored INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: wicket_takenDDL:
CREATE TABLE wicket_taken(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        player_out INTEGER,
        kind_out TEXT,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: extra_runsDDL:
CREATE TABLE extra_runs(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        extra_type TEXT,
        extra_runs INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
External knowledge that might be helpful: 
None
The table structure information is (table names): 
['player', 'team', 'match', 'player_match', 'ball_by_ball', 'batsman_scored', 'wicket_taken', 'extra_runs']
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **`ball_by_ball`**
   - **`match_id`**: Identifies each match.
   - **`over_id`**: Groups deliveries into overs within a match.
   - **`ball_id`**: Identifies each delivery within an over.
   - **`innings_no`**: Distinguishes between innings in a match.

2. **`batsman_scored`**
   - **`match_id`**: Relates to the match.
   - **`over_id`**: Identifies the over in which runs were scored.
   - **`ball_id`**: Associates runs with a specific delivery.
   - **`runs_scored`**: Number of runs scored by the batsman on that delivery.
   - **`innings_no`**: Matches the innings.

3. **`extra_runs`**
   - **`match_id`**: Relates to the match.
   - **`over_id`**: Identifies the over in which extra runs were conceded.
   - **`ball_id`**: Associates extra runs with a specific delivery.
   - **`extra_runs`**: Number of extra runs conceded on that delivery.
   - **`innings_no`**: Matches the innings.

**Conditions That May Be Used:**

- Joining **`batsman_scored`** and **`extra_runs`** on **`match_id`**, **`over_id`**, **`ball_id`**, and **`innings_no`** to calculate total runs per delivery.
- Grouping by **`match_id`**, **`innings_no`**, and **`over_id`** to calculate total runs per over.
- Using **`COALESCE`** to handle NULL values when summing runs.

---

**SQL Queries:**

1. **Retrieve distinct match IDs from `ball_by_ball`:**

   ```sql
   SELECT DISTINCT match_id
   FROM ball_by_ball
   LIMIT 100;
   ```

2. **Retrieve distinct over IDs from `ball_by_ball`:**

   ```sql
   SELECT DISTINCT over_id
   FROM ball_by_ball
   ORDER BY over_id
   LIMIT 100;
   ```

3. **Retrieve distinct innings numbers from `ball_by_ball`:**

   ```sql
   SELECT DISTINCT innings_no
   FROM ball_by_ball
   ORDER BY innings_no
   LIMIT 100;
   ```

4. **List runs scored per delivery from `batsman_scored`:**

   ```sql
   SELECT runs_scored
   FROM batsman_scored
   LIMIT 100;
   ```

5. **Retrieve distinct extra run types from `extra_runs`:**

   ```sql
   SELECT DISTINCT extra_type
   FROM extra_runs
   LIMIT 100;
   ```

6. **Retrieve total extra runs conceded per delivery from `extra_runs`:**

   ```sql
   SELECT extra_runs
   FROM extra_runs
   LIMIT 100;
   ```

7. **Retrieve match, over, ball, and runs scored from `batsman_scored`:**

   ```sql
   SELECT match_id, innings_no, over_id, ball_id, runs_scored
   FROM batsman_scored
   LIMIT 100;
   ```

8. **Retrieve match, over, ball, and extra runs from `extra_runs`:**

   ```sql
   SELECT match_id, innings_no, over_id, ball_id, extra_runs
   FROM extra_runs
   LIMIT 100;
   ```

9. **Retrieve deliveries where extra runs were conceded:**

   ```sql
   SELECT match_id, innings_no, over_id, ball_id, extra_type, extra_runs
   FROM extra_runs
   WHERE extra_runs > 0
   LIMIT 100;
   ```

10. **Retrieve total runs per delivery by joining `batsman_scored` and `extra_runs`:**

    ```sql
    SELECT b.match_id, b.innings_no, b.over_id, b.ball_id,
           b.runs_scored, COALESCE(e.extra_runs, 0) AS extra_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    LIMIT 100;
    ```

11. **Sum runs scored per over from `batsman_scored`:**

    ```sql
    SELECT match_id, innings_no, over_id, SUM(runs_scored) AS total_runs_scored
    FROM batsman_scored
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
    ```

12. **Sum extra runs per over from `extra_runs`:**

    ```sql
    SELECT match_id, innings_no, over_id, SUM(extra_runs) AS total_extra_runs
    FROM extra_runs
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
    ```

13. **Calculate total runs per over by combining runs and extra runs:**

    ```sql
    SELECT b.match_id, b.innings_no, b.over_id,
           SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    GROUP BY b.match_id, b.innings_no, b.over_id
    LIMIT 100;
    ```

14. **Identify the maximum runs conceded in a single over per match:**

    (Note: This query is for understanding purposes.)

    ```sql
    SELECT match_id, MAX(total_runs) AS max_runs_in_over
    FROM (
      SELECT b.match_id, b.innings_no, b.over_id,
             SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
      FROM batsman_scored b
      LEFT JOIN extra_runs e
        ON b.match_id = e.match_id
       AND b.innings_no = e.innings_no
       AND b.over_id = e.over_id
       AND b.ball_id = e.ball_id
      GROUP BY b.match_id, b.innings_no, b.over_id
    ) sub
    GROUP BY match_id
    LIMIT 100;
    ```

15. **List all overs where more than 20 runs were conceded:**

    ```sql
    SELECT b.match_id, b.innings_no, b.over_id,
           SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    GROUP BY b.match_id, b.innings_no, b.over_id
    HAVING total_runs > 20
    LIMIT 100;
    ```

16. **Retrieve the number of deliveries per over (should typically be 6):**

    ```sql
    SELECT match_id, innings_no, over_id, COUNT(ball_id) AS deliveries
    FROM ball_by_ball
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
    ```

17. **Get the list of bowlers for each over:**

    ```sql
    SELECT match_id, innings_no, over_id, bowler
    FROM ball_by_ball
    GROUP BY match_id, innings_no, over_id, bowler
    LIMIT 100;
    ```

18. **Retrieve distinct batsmen who scored runs:**

    ```sql
    SELECT DISTINCT striker
    FROM ball_by_ball
    LIMIT 100;
    ```

19. **Find overs with the highest number of extra runs conceded:**

    ```sql
    SELECT match_id, innings_no, over_id, SUM(extra_runs) AS total_extra_runs
    FROM extra_runs
    GROUP BY match_id, innings_no, over_id
    ORDER BY total_extra_runs DESC
    LIMIT 100;
    ```

20. **Identify matches where a specific player was the bowler:**

    ```sql
    SELECT DISTINCT match_id
    FROM ball_by_ball
    WHERE bowler = [player_id]
    LIMIT 100;
    ```

    *(Replace `[player_id]` with the actual player ID.)*

---

These queries help in understanding the data related to runs scored, extra runs, overs, matches, and players. By examining these outputs, we can formulate the final query to calculate the average of the highest runs conceded in a single over for each match.

**Note:** Since we are working without actual data, the queries are designed to explore the structure and relationships of the relevant tables and columns.Query:
SELECT DISTINCT match_id
   FROM ball_by_ball
   LIMIT 100;
Answer:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230
Query:
SELECT DISTINCT over_id
   FROM ball_by_ball
   ORDER BY over_id
   LIMIT 100;
Answer:
over_id
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
Query:
SELECT DISTINCT innings_no
   FROM ball_by_ball
   ORDER BY innings_no
   LIMIT 100;
Answer:
innings_no
1
2
Query:
SELECT runs_scored
   FROM batsman_scored
   LIMIT 100;
Answer:
runs_scored
1
0
0
0
1
0
1
0
0
0
0
0
0
4
0
4
0
6
1
4
0
0
0
0
0
0
0
0
1
4
0
1
0
0
1
2
6
1
0
0
4
0
0
0
1
0
6
4
1
1
1
4
0
0
6
1
0
0
0
1
0
0
0
0
0
0
1
0
1
0
0
1
0
1
0
1
1
2
1
1
0
0
4
0
1
1
0
1
1
1
2
1
0
1
0
0
0
0
0
0
Query:
SELECT DISTINCT extra_type
   FROM extra_runs
   LIMIT 100;
Answer:
extra_type
legbyes
wides
byes
noballs
penalty
Query:
SELECT extra_runs
   FROM extra_runs
   LIMIT 100;
Answer:
extra_runs
1
1
4
1
1
4
1
1
1
4
1
1
1
1
1
1
2
2
4
1
1
1
1
1
1
1
1
1
1
1
1
4
1
1
1
1
4
1
2
4
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
1
4
1
1
1
1
1
1
1
1
2
1
1
1
1
1
1
4
1
1
1
1
1
1
1
1
1
1
Query:
SELECT match_id, innings_no, over_id, ball_id, runs_scored
   FROM batsman_scored
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0
Query:
SELECT match_id, innings_no, over_id, ball_id, extra_runs
   FROM extra_runs
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,extra_runs
501229,1,16,3,1
501229,2,18,1,1
501229,2,18,6,4
392239,2,18,6,1
501229,1,20,3,1
501230,1,1,4,4
829714,1,18,4,1
829816,2,3,3,1
501230,2,3,4,1
829816,1,2,3,4
980962,2,18,2,1
829714,2,18,1,1
829714,1,9,6,1
501231,2,1,1,1
335994,2,4,6,1
501231,2,2,6,1
829714,1,9,3,2
980962,2,17,5,2
336045,2,3,5,4
392240,1,3,7,1
336045,1,4,1,1
829714,1,3,6,1
501231,2,20,5,1
501232,2,1,1,1
501232,1,1,2,1
336045,1,8,3,1
336017,2,4,4,1
829814,1,18,1,1
501232,2,4,3,1
501232,1,4,6,1
501232,2,7,2,1
829714,1,1,1,4
336045,2,9,3,1
501232,2,14,3,1
501232,1,14,7,1
829712,1,18,5,1
829712,1,3,1,4
829712,1,2,6,1
392240,1,10,2,2
829712,1,1,3,4
392240,1,11,2,1
335991,1,2,1,1
980962,2,14,1,1
335988,2,17,1,1
392240,1,13,3,1
829814,1,14,3,1
501232,1,20,7,1
829812,1,4,5,1
392240,1,15,3,1
980960,1,7,5,1
829710,2,4,2,1
501233,2,6,1,1
501233,2,6,3,1
981018,2,2,1,1
336045,2,18,8,1
501233,1,13,1,1
829812,1,1,4,1
392241,2,3,6,1
392241,2,4,6,1
981018,1,1,3,1
829810,1,12,6,1
501234,2,2,1,1
980958,1,3,2,1
829710,1,1,5,1
829710,2,1,3,1
392241,2,8,3,1
980956,1,20,3,1
336017,2,7,5,1
392186,1,2,1,1
501234,2,14,5,2
501234,1,16,2,1
336001,2,20,3,1
734054,1,19,6,1
392186,2,6,1,4
392241,1,19,4,1
392186,2,6,2,1
980986,1,18,2,1
392186,2,10,3,1
501235,1,12,3,1
734054,1,17,6,1
829808,1,9,2,1
335994,1,9,3,1
829808,2,8,2,2
829808,2,7,3,1
829808,2,7,1,1
734054,1,13,2,1
501235,1,18,4,1
980956,1,16,2,1
335994,1,10,2,1
335991,2,2,5,4
501236,1,13,2,1
392187,1,2,2,1
501236,1,13,5,1
501236,1,15,1,1
829808,2,3,1,1
501236,2,17,2,1
392243,1,4,4,1
829806,1,19,6,1
392243,2,10,1,1
501237,2,5,6,1
Query:
SELECT match_id, innings_no, over_id, ball_id, extra_type, extra_runs
   FROM extra_runs
   WHERE extra_runs > 0
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,extra_type,extra_runs
501229,1,16,3,legbyes,1
501229,2,18,1,legbyes,1
501229,2,18,6,legbyes,4
392239,2,18,6,legbyes,1
501229,1,20,3,legbyes,1
501230,1,1,4,legbyes,4
829714,1,18,4,legbyes,1
829816,2,3,3,legbyes,1
501230,2,3,4,legbyes,1
829816,1,2,3,legbyes,4
980962,2,18,2,legbyes,1
829714,2,18,1,legbyes,1
829714,1,9,6,legbyes,1
501231,2,1,1,legbyes,1
335994,2,4,6,legbyes,1
501231,2,2,6,legbyes,1
829714,1,9,3,legbyes,2
980962,2,17,5,legbyes,2
336045,2,3,5,legbyes,4
392240,1,3,7,legbyes,1
336045,1,4,1,legbyes,1
829714,1,3,6,legbyes,1
501231,2,20,5,legbyes,1
501232,2,1,1,legbyes,1
501232,1,1,2,legbyes,1
336045,1,8,3,legbyes,1
336017,2,4,4,legbyes,1
829814,1,18,1,legbyes,1
501232,2,4,3,legbyes,1
501232,1,4,6,legbyes,1
501232,2,7,2,legbyes,1
829714,1,1,1,legbyes,4
336045,2,9,3,legbyes,1
501232,2,14,3,legbyes,1
501232,1,14,7,legbyes,1
829712,1,18,5,legbyes,1
829712,1,3,1,legbyes,4
829712,1,2,6,legbyes,1
392240,1,10,2,legbyes,2
829712,1,1,3,legbyes,4
392240,1,11,2,legbyes,1
335991,1,2,1,legbyes,1
980962,2,14,1,legbyes,1
335988,2,17,1,legbyes,1
392240,1,13,3,legbyes,1
829814,1,14,3,legbyes,1
501232,1,20,7,legbyes,1
829812,1,4,5,legbyes,1
392240,1,15,3,legbyes,1
980960,1,7,5,legbyes,1
829710,2,4,2,legbyes,1
501233,2,6,1,legbyes,1
501233,2,6,3,legbyes,1
981018,2,2,1,legbyes,1
336045,2,18,8,legbyes,1
501233,1,13,1,legbyes,1
829812,1,1,4,legbyes,1
392241,2,3,6,legbyes,1
392241,2,4,6,legbyes,1
981018,1,1,3,legbyes,1
829810,1,12,6,legbyes,1
501234,2,2,1,legbyes,1
980958,1,3,2,legbyes,1
829710,1,1,5,legbyes,1
829710,2,1,3,legbyes,1
392241,2,8,3,legbyes,1
980956,1,20,3,legbyes,1
336017,2,7,5,legbyes,1
392186,1,2,1,legbyes,1
501234,2,14,5,legbyes,2
501234,1,16,2,legbyes,1
336001,2,20,3,legbyes,1
734054,1,19,6,legbyes,1
392186,2,6,1,legbyes,4
392241,1,19,4,legbyes,1
392186,2,6,2,legbyes,1
980986,1,18,2,legbyes,1
392186,2,10,3,legbyes,1
501235,1,12,3,legbyes,1
734054,1,17,6,legbyes,1
829808,1,9,2,legbyes,1
335994,1,9,3,legbyes,1
829808,2,8,2,legbyes,2
829808,2,7,3,legbyes,1
829808,2,7,1,legbyes,1
734054,1,13,2,legbyes,1
501235,1,18,4,legbyes,1
980956,1,16,2,legbyes,1
335994,1,10,2,legbyes,1
335991,2,2,5,legbyes,4
501236,1,13,2,legbyes,1
392187,1,2,2,legbyes,1
501236,1,13,5,legbyes,1
501236,1,15,1,legbyes,1
829808,2,3,1,legbyes,1
501236,2,17,2,legbyes,1
392243,1,4,4,legbyes,1
829806,1,19,6,legbyes,1
392243,2,10,1,legbyes,1
501237,2,5,6,legbyes,1
Query:
SELECT b.match_id, b.innings_no, b.over_id, b.ball_id,
           b.runs_scored, COALESCE(e.extra_runs, 0) AS extra_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs
335987,2,1,1,1,0
335987,1,1,2,0,0
335987,2,1,3,0,0
335987,1,1,4,0,0
335987,2,1,4,1,0
335987,1,1,5,0,0
335987,2,1,5,1,0
335987,1,1,6,0,0
335987,2,1,6,0,0
335987,1,1,7,0,1
335987,2,1,7,0,0
335987,1,2,1,0,0
335987,2,2,1,0,0
335987,1,2,2,4,0
335987,2,2,2,0,0
335987,1,2,3,4,0
335987,2,2,3,0,4
335987,1,2,4,6,0
335987,2,2,4,1,0
335987,1,2,5,4,0
335987,2,2,5,0,0
335987,1,2,6,0,0
335987,2,2,6,0,0
335987,1,3,1,0,0
335987,2,3,1,0,0
335987,1,3,2,0,0
335987,2,3,2,0,0
335987,1,3,3,0,1
335987,2,3,3,1,0
335987,1,3,4,4,0
335987,2,3,4,0,0
335987,1,3,5,1,0
335987,1,3,6,0,0
335987,2,3,6,0,0
335987,2,3,7,1,0
335987,2,4,1,2,0
335987,1,4,2,6,0
335987,2,4,2,1,0
335987,1,4,3,0,1
335987,2,4,3,0,0
335987,1,4,4,4,0
335987,2,4,4,0,1
335987,1,4,5,0,0
335987,2,4,5,0,0
335987,1,4,6,1,0
335987,2,4,6,0,0
335987,1,4,7,6,0
335987,1,5,1,4,0
335987,2,5,1,1,0
335987,1,5,2,1,0
335987,2,5,2,1,0
335987,1,5,3,4,0
335987,2,5,3,0,0
335987,1,5,4,0,0
335987,2,5,4,6,0
335987,1,5,5,1,0
335987,2,5,5,0,0
335987,1,5,6,0,0
335987,2,5,6,0,0
335987,1,6,1,1,0
335987,2,6,1,0,0
335987,1,6,2,0,0
335987,2,6,2,0,0
335987,1,6,3,0,0
335987,2,6,3,0,0
335987,1,6,4,0,0
335987,2,6,4,1,0
335987,1,6,5,0,0
335987,2,6,5,1,0
335987,1,6,6,0,0
335987,2,6,6,0,0
335987,1,7,1,1,0
335987,2,7,1,0,0
335987,1,7,2,1,0
335987,2,7,2,0,0
335987,1,7,3,1,0
335987,2,7,3,1,0
335987,1,7,4,2,0
335987,1,7,5,1,0
335987,1,7,6,1,0
335987,2,7,6,0,0
335987,2,7,7,0,0
335987,2,7,8,4,0
335987,1,8,1,0,0
335987,2,8,1,1,0
335987,1,8,2,1,0
335987,2,8,2,0,1
335987,1,8,3,1,0
335987,2,8,3,1,0
335987,1,8,4,1,0
335987,2,8,4,2,0
335987,1,8,5,1,0
335987,2,8,5,0,0
335987,1,8,6,1,0
335987,2,8,6,0,0
335987,1,9,1,0,0
335987,2,9,1,0,0
335987,1,9,2,0,0
335987,2,9,2,0,0
335987,1,9,3,0,0
Query:
SELECT match_id, innings_no, over_id, SUM(runs_scored) AS total_runs_scored
    FROM batsman_scored
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
Answer:
match_id,innings_no,over_id,total_runs_scored
335987,1,1,0
335987,1,2,18
335987,1,3,5
335987,1,4,17
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,11
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,1
335987,2,3,2
335987,2,4,3
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,4
335987,2,9,3
335987,2,10,6
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,2
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,6
335988,1,4,6
335988,1,5,8
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,9
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,5
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,12
335988,2,14,9
335988,2,15,13
335988,2,16,10
335988,2,17,9
335988,2,18,4
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,2
335989,1,7,4
335989,1,8,3
335989,1,9,2
335989,1,10,5
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10
Query:
SELECT match_id, innings_no, over_id, SUM(extra_runs) AS total_extra_runs
    FROM extra_runs
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
Answer:
match_id,innings_no,over_id,total_extra_runs
335987,1,1,3
335987,1,3,1
335987,1,4,6
335987,1,11,4
335987,1,13,1
335987,1,15,2
335987,2,1,1
335987,2,2,4
335987,2,3,1
335987,2,4,1
335987,2,7,2
335987,2,8,1
335987,2,9,2
335987,2,10,2
335987,2,13,2
335987,2,15,2
335987,2,16,1
335988,1,2,1
335988,1,3,1
335988,1,5,1
335988,1,13,2
335988,1,14,1
335988,2,6,2
335988,2,7,1
335988,2,9,1
335988,2,13,2
335988,2,14,2
335988,2,16,1
335988,2,17,1
335988,2,18,1
335989,1,1,1
335989,1,6,1
335989,1,8,1
335989,1,9,1
335989,1,10,1
335989,1,13,2
335989,2,2,1
335989,2,6,1
335989,2,8,1
335989,2,10,1
335989,2,13,5
335989,2,15,1
335990,1,2,4
335990,1,3,1
335990,1,5,1
335990,1,9,1
335990,1,10,1
335990,1,14,1
335990,1,16,1
335990,1,17,1
335990,2,5,1
335990,2,9,1
335990,2,14,2
335990,2,20,1
335991,1,1,1
335991,1,2,3
335991,1,8,1
335991,1,10,2
335991,1,14,1
335991,1,16,1
335991,1,17,1
335991,2,2,4
335991,2,3,1
335991,2,7,5
335991,2,9,1
335991,2,10,1
335991,2,12,11
335991,2,13,2
335991,2,15,1
335991,2,18,1
335991,2,19,1
335992,1,8,3
335992,1,20,1
335992,2,1,1
335992,2,2,2
335992,2,3,1
335992,2,4,2
335992,2,5,1
335992,2,6,1
335992,2,8,1
335992,2,12,1
335992,2,14,1
335992,2,18,1
335993,1,1,1
335993,1,10,1
335993,1,16,1
335993,1,20,2
335993,2,6,1
335993,2,9,1
335993,2,12,9
335993,2,14,1
335994,1,1,1
335994,1,3,4
335994,1,6,2
335994,1,7,1
335994,1,9,1
335994,1,10,1
335994,1,12,5
335994,1,16,1
335994,1,19,1
Query:
SELECT b.match_id, b.innings_no, b.over_id,
           SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    GROUP BY b.match_id, b.innings_no, b.over_id
    LIMIT 100;
Answer:
match_id,innings_no,over_id,total_runs
335987,1,1,1
335987,1,2,18
335987,1,3,6
335987,1,4,18
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,15
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,5
335987,2,3,2
335987,2,4,4
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,5
335987,2,9,3
335987,2,10,7
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,3
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,7
335988,1,4,6
335988,1,5,9
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,10
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,6
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,14
335988,2,14,9
335988,2,15,13
335988,2,16,11
335988,2,17,10
335988,2,18,5
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,3
335989,1,7,4
335989,1,8,4
335989,1,9,3
335989,1,10,6
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10
Query:
SELECT match_id, MAX(total_runs) AS max_runs_in_over
    FROM (
      SELECT b.match_id, b.innings_no, b.over_id,
             SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
      FROM batsman_scored b
      LEFT JOIN extra_runs e
        ON b.match_id = e.match_id
       AND b.innings_no = e.innings_no
       AND b.over_id = e.over_id
       AND b.ball_id = e.ball_id
      GROUP BY b.match_id, b.innings_no, b.over_id
    ) sub
    GROUP BY match_id
    LIMIT 100;
Answer:
match_id,max_runs_in_over
335987,22
335988,25
335989,12
335990,20
335991,19
335992,17
335993,30
335994,21
335995,22
335996,22
335997,26
335998,16
335999,23
336000,15
336001,23
336002,15
336003,19
336004,18
336005,16
336006,19
336007,21
336008,21
336009,20
336010,17
336011,14
336012,21
336013,17
336014,23
336015,15
336016,17
336017,18
336018,19
336019,22
336020,27
336021,20
336022,11
336023,26
336024,24
336025,19
336026,23
336027,22
336028,18
336029,19
336030,16
336031,24
336032,17
336033,22
336034,15
336036,21
336037,19
336038,20
336039,16
336040,18
336041,25
336042,14
336043,20
336044,16
336045,15
392186,22
392187,15
392188,18
392189,16
392190,20
392191,16
392193,20
392194,22
392196,19
392197,19
392199,18
392200,12
392201,20
392202,17
392203,19
392204,14
392205,13
392206,20
392207,24
392208,16
392209,21
392210,17
392211,16
392212,22
392213,18
392214,19
392215,23
392216,21
392217,15
392218,15
392219,24
392220,19
392221,20
392222,20
392223,15
392224,15
392225,17
392226,20
392227,21
392228,24
392229,15
392230,19
Query:
SELECT b.match_id, b.innings_no, b.over_id,
           SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
    FROM batsman_scored b
    LEFT JOIN extra_runs e
      ON b.match_id = e.match_id
     AND b.innings_no = e.innings_no
     AND b.over_id = e.over_id
     AND b.ball_id = e.ball_id
    GROUP BY b.match_id, b.innings_no, b.over_id
    HAVING total_runs > 20
    LIMIT 100;
Answer:
match_id,innings_no,over_id,total_runs
335987,1,15,22
335987,1,19,21
335987,1,20,22
335988,1,20,25
335993,1,18,26
335993,2,9,22
335993,2,13,30
335994,2,17,21
335995,2,5,22
335996,2,12,22
335997,2,14,26
335999,2,7,23
335999,2,10,21
336001,1,19,23
336007,2,19,21
336008,1,20,21
336012,2,18,21
336014,2,14,23
336019,2,14,22
336020,1,19,27
336020,2,9,22
336023,2,14,26
336024,1,17,24
336024,2,14,23
336026,2,3,23
336027,1,6,22
336027,2,5,21
336031,1,20,24
336033,2,2,22
336036,1,17,21
336041,1,20,25
392186,1,18,22
392194,1,19,22
392207,1,18,24
392209,1,18,21
392212,1,20,21
392212,2,4,22
392215,1,19,23
392216,1,3,21
392219,1,15,24
392219,1,17,22
392227,2,5,21
392228,1,6,24
392233,1,19,28
392233,2,20,25
392235,1,19,25
392236,2,6,22
392238,1,1,22
392241,1,20,23
392241,2,5,21
392242,2,6,25
419112,2,12,25
419112,2,18,21
419115,1,20,22
419117,2,13,25
419117,2,18,23
419121,2,8,21
419122,1,2,23
419122,2,17,21
419128,1,19,24
419132,1,20,21
419134,2,5,24
419138,2,3,24
419142,1,14,22
419142,1,16,26
419142,2,15,23
419144,1,13,26
419150,1,17,22
419153,1,5,21
419153,2,17,21
419157,1,20,25
419162,1,15,21
419170,2,18,22
501211,1,18,22
501217,2,5,22
501218,1,6,21
501218,1,20,25
501219,2,14,21
501225,1,3,25
501225,1,14,21
501229,1,20,24
501237,1,18,23
501241,1,19,21
501243,2,4,22
501246,1,19,25
501247,1,20,22
501248,2,8,23
501249,1,4,21
501249,1,8,22
501252,2,3,37
501253,2,15,21
501260,2,2,23
501261,1,20,23
501262,1,13,25
501265,1,8,21
501265,1,10,21
501265,1,15,30
501272,2,20,23
501273,2,13,22
501273,2,19,21
Query:
SELECT match_id, innings_no, over_id, COUNT(ball_id) AS deliveries
    FROM ball_by_ball
    GROUP BY match_id, innings_no, over_id
    LIMIT 100;
Answer:
match_id,innings_no,over_id,deliveries
335987,1,1,6
335987,1,2,6
335987,1,3,6
335987,1,4,7
335987,1,5,6
335987,1,6,6
335987,1,7,6
335987,1,8,6
335987,1,9,6
335987,1,10,6
335987,1,11,6
335987,1,12,6
335987,1,13,7
335987,1,14,6
335987,1,15,7
335987,1,16,6
335987,1,17,6
335987,1,18,6
335987,1,19,6
335987,1,20,6
335987,2,1,7
335987,2,2,6
335987,2,3,7
335987,2,4,6
335987,2,5,6
335987,2,6,6
335987,2,7,8
335987,2,8,6
335987,2,9,8
335987,2,10,7
335987,2,11,6
335987,2,12,6
335987,2,13,7
335987,2,14,6
335987,2,15,7
335987,2,16,2
335988,1,1,6
335988,1,2,7
335988,1,3,7
335988,1,4,6
335988,1,5,6
335988,1,6,6
335988,1,7,6
335988,1,8,6
335988,1,9,6
335988,1,10,6
335988,1,11,6
335988,1,12,6
335988,1,13,8
335988,1,14,6
335988,1,15,6
335988,1,16,6
335988,1,17,6
335988,1,18,6
335988,1,19,6
335988,1,20,6
335988,2,1,6
335988,2,2,6
335988,2,3,6
335988,2,4,6
335988,2,5,6
335988,2,6,8
335988,2,7,6
335988,2,8,6
335988,2,9,7
335988,2,10,6
335988,2,11,6
335988,2,12,6
335988,2,13,6
335988,2,14,7
335988,2,15,6
335988,2,16,6
335988,2,17,6
335988,2,18,6
335988,2,19,6
335988,2,20,6
335989,1,1,7
335989,1,2,6
335989,1,3,6
335989,1,4,6
335989,1,5,6
335989,1,6,6
335989,1,7,6
335989,1,8,6
335989,1,9,6
335989,1,10,6
335989,1,11,6
335989,1,12,6
335989,1,13,7
335989,1,14,6
335989,1,15,6
335989,1,16,6
335989,1,17,6
335989,1,18,6
335989,1,19,6
335989,1,20,6
335989,2,1,6
335989,2,2,7
335989,2,3,6
335989,2,4,6
Query:
SELECT match_id, innings_no, over_id, bowler
    FROM ball_by_ball
    GROUP BY match_id, innings_no, over_id, bowler
    LIMIT 100;
Answer:
match_id,innings_no,over_id,bowler
335987,1,1,14
335987,1,2,15
335987,1,3,14
335987,1,4,13
335987,1,5,14
335987,1,6,15
335987,1,7,13
335987,1,8,15
335987,1,9,9
335987,1,10,16
335987,1,11,9
335987,1,12,16
335987,1,13,9
335987,1,14,16
335987,1,15,10
335987,1,16,13
335987,1,17,15
335987,1,18,13
335987,1,19,9
335987,1,20,14
335987,2,1,106
335987,2,2,84
335987,2,3,106
335987,2,4,84
335987,2,5,82
335987,2,6,106
335987,2,7,82
335987,2,8,1
335987,2,9,82
335987,2,10,1
335987,2,11,82
335987,2,12,1
335987,2,13,63
335987,2,14,1
335987,2,15,84
335987,2,16,63
335988,1,1,66
335988,1,2,77
335988,1,3,66
335988,1,4,77
335988,1,5,66
335988,1,6,25
335988,1,7,29
335988,1,8,25
335988,1,9,29
335988,1,10,24
335988,1,11,67
335988,1,12,24
335988,1,13,68
335988,1,14,25
335988,1,15,68
335988,1,16,29
335988,1,17,77
335988,1,18,29
335988,1,19,66
335988,1,20,25
335988,2,1,22
335988,2,2,120
335988,2,3,22
335988,2,4,120
335988,2,5,22
335988,2,6,120
335988,2,7,121
335988,2,8,435
335988,2,9,119
335988,2,10,121
335988,2,11,435
335988,2,12,119
335988,2,13,435
335988,2,14,121
335988,2,15,119
335988,2,16,435
335988,2,17,120
335988,2,18,121
335988,2,19,22
335988,2,20,119
335989,1,1,118
335989,1,2,436
335989,1,3,118
335989,1,4,436
335989,1,5,118
335989,1,6,90
335989,1,7,89
335989,1,8,90
335989,1,9,89
335989,1,10,90
335989,1,11,89
335989,1,12,175
335989,1,13,89
335989,1,14,436
335989,1,15,175
335989,1,16,436
335989,1,17,175
335989,1,18,90
335989,1,19,175
335989,1,20,118
335989,2,1,126
335989,2,2,32
335989,2,3,126
335989,2,4,32
Query:
SELECT DISTINCT striker
    FROM ball_by_ball
    LIMIT 100;
Answer:
striker
6
2
7
8
1
9
10
3
11
12
13
14
15
4
16
5
17
24
18
25
19
26
20
21
27
22
28
23
29
30
40
31
41
42
32
33
34
35
36
37
38
39
43
51
44
45
46
52
47
48
49
50
53
62
54
55
56
57
58
232
59
63
60
61
69
64
65
66
67
68
70
71
72
73
74
75
79
76
80
77
78
81
82
83
84
85
86
87
88
89
92
90
91
93
94
95
96
100
97
98
Query:
SELECT match_id, innings_no, over_id, SUM(extra_runs) AS total_extra_runs
    FROM extra_runs
    GROUP BY match_id, innings_no, over_id
    ORDER BY total_extra_runs DESC
    LIMIT 100;
Answer:
match_id,innings_no,over_id,total_extra_runs
336010,2,7,12
598039,2,1,12
335991,2,12,11
548337,1,15,10
598047,1,10,10
335993,2,12,9
980964,2,14,9
501243,2,1,8
548334,2,7,8
548382,2,7,8
598077,1,20,8
729294,1,1,8
829714,1,9,8
829790,2,1,8
336031,1,2,7
336033,2,1,7
392191,1,12,7
392215,2,8,7
419117,2,4,7
419119,1,10,7
419144,1,13,7
501218,2,6,7
501227,1,1,7
501275,1,1,7
548331,1,4,7
548358,1,4,7
548362,2,17,7
734018,2,7,7
734038,1,20,7
829716,1,3,7
829724,2,17,7
829728,1,1,7
981006,2,7,7
335987,1,4,6
336007,1,1,6
336017,2,5,6
336029,1,19,6
336034,2,3,6
392186,2,6,6
392202,1,3,6
392209,2,18,6
392224,2,4,6
392230,2,9,6
392240,2,11,6
419124,1,3,6
419139,1,18,6
419147,1,3,6
419153,1,7,6
419153,2,9,6
419154,1,7,6
419158,1,18,6
419166,2,13,6
501205,1,13,6
501212,1,20,6
501214,1,20,6
501215,1,2,6
501228,1,6,6
501229,2,8,6
501232,2,3,6
501246,1,6,6
501257,1,19,6
501259,1,1,6
501259,1,8,6
501264,2,4,6
501269,1,2,6
501276,1,4,6
548335,2,16,6
548344,1,14,6
548353,1,17,6
548364,2,6,6
548366,2,19,6
598011,2,13,6
598051,2,14,6
598055,1,20,6
598066,2,1,6
598066,2,2,6
598072,2,1,6
598074,2,13,6
733988,1,8,6
733994,1,20,6
829724,1,7,6
829742,1,2,6
829744,1,7,6
829758,1,7,6
829770,1,10,6
829780,2,1,6
980906,1,6,6
980926,2,1,6
980934,2,2,6
980936,1,16,6
980956,2,10,6
980994,2,5,6
981008,2,1,6
981018,2,1,6
335989,2,13,5
335991,2,7,5
335994,1,12,5
335998,2,3,5
335998,2,16,5
336002,2,9,5
Query:
SELECT DISTINCT match_id
   FROM ball_by_ball
   WHERE bowler = 14  -- Replace 14 with the actual bowler's player_id you're interested in
   LIMIT 100
Answer:
match_id
335987
335990
335997
336001
336003
336011
336015
336017
336021
336028
336031
336034
336039
392187
392190
392193
392196
392204
392209
392213
392218
392229
392237
392241
392243
392244
419114
419117
419120
419124
419128
419133
419138
419141
419150
419153
419167
419169
501207
501211
501217
501225
501228
501239
501242
501249
501253
501256
501262
501265
501269
548314
548318
548324
548328
548333
548336
548339
548344
548348
548355
548359
548364
548371
548374
548376
548379
598008
598012
598019
598021
598026
598030
598033
598036
598042
598046
598057
598061
598064
598069
598071
734000
734030
734050
829724
829732
829736
829748
829756
829764
829778
829786
829792
829798
829812
829820
980910
980916
980922
End Exploring Related Columns
Task: Please calculate the average of the highest runs conceded in a single over for each match.

Please answer only one complete SQL in sqlite dialect in ```sql``` format.
Usage example: ```sql
SELECT DISTINCT "column_name" FROM "table_name" WHERE ... ``` (Replace "table_name" with the actual table name. Enclose table and column names with double quotations if they contain special characters or match reserved keywords.)
Follow the answer format like: To calculate the average of the highest runs conceded in a single over for each match, we need to:

1. For each match, identify the over where the maximum number of runs were conceded (including both runs scored and extra runs).
2. Sum these maximum runs conceded from all matches.
3. Divide the total by the number of matches to find the average.

Since we don't have actual data to compute this, we can represent the expected output as follows:

```csv
average_highest_runs_conceded_per_over
value:float
(Attention: answer in one row)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: 

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 11:43:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:43:12 - root - INFO - ```sql
SELECT
    AVG(max_runs_in_over) AS average_highest_runs_conceded_per_over
FROM
    (
        SELECT
            match_id,
            MAX(total_runs) AS max_runs_in_over
        FROM
            (
                SELECT
                    b.match_id,
                    b.innings_no,
                    b.over_id,
                    SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
                FROM
                    batsman_scored b
                LEFT JOIN
                    extra_runs e
                ON
                    b.match_id = e.match_id AND
                    b.innings_no = e.innings_no AND
                    b.over_id = e.over_id AND
                    b.ball_id = e.ball_id
                GROUP BY
                    b.match_id,
                    b.innings_no,
                    b.over_id
            ) AS over_totals
        GROUP BY
            match_id
    ) AS match_maxes;
```
2025-01-27 11:43:12 - root - INFO - itercount: 1
2025-01-27 11:43:12 - root - INFO - 0
2025-01-27 11:43:12 - root - INFO - results: 
average_highest_runs_conceded_per_over
19.086267605633804


2025-01-27 11:43:12 - root - INFO - Please check the answer again by reviewing Please calculate the average of the highest runs conceded in a single over for each match., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To calculate the average of the highest runs conceded in a single over for each match, we need to:

1. For each match, identify the over where the maximum number of runs were conceded (including both runs scored and extra runs).
2. Sum these maximum runs conceded from all matches.
3. Divide the total by the number of matches to find the average.

Since we don't have actual data to compute this, we can represent the expected output as follows:

```csv
average_highest_runs_conceded_per_over
value:float
(Attention: answer in one row)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
average_highest_runs_conceded_per_over
19.086267605633804
Current sql:
SELECT
    AVG(max_runs_in_over) AS average_highest_runs_conceded_per_over
FROM
    (
        SELECT
            match_id,
            MAX(total_runs) AS max_runs_in_over
        FROM
            (
                SELECT
                    b.match_id,
                    b.innings_no,
                    b.over_id,
                    SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
                FROM
                    batsman_scored b
                LEFT JOIN
                    extra_runs e
                ON
                    b.match_id = e.match_id AND
                    b.innings_no = e.innings_no AND
                    b.over_id = e.over_id AND
                    b.ball_id = e.ball_id
                GROUP BY
                    b.match_id,
                    b.innings_no,
                    b.over_id
            ) AS over_totals
        GROUP BY
            match_id
    ) AS match_maxes;
2025-01-27 11:43:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:43:34 - root - INFO - ```sql
SELECT
    AVG(max_runs_in_over) AS average_highest_runs_conceded_per_over
FROM
    (
        SELECT
            match_id,
            MAX(total_runs) AS max_runs_in_over
        FROM
            (
                SELECT
                    b.match_id,
                    b.innings_no,
                    b.over_id,
                    SUM(b.runs_scored + COALESCE(e.extra_runs, 0)) AS total_runs
                FROM
                    batsman_scored b
                LEFT JOIN
                    extra_runs e
                ON
                    b.match_id = e.match_id AND
                    b.innings_no = e.innings_no AND
                    b.over_id = e.over_id AND
                    b.ball_id = e.ball_id
                GROUP BY
                    b.match_id,
                    b.innings_no,
                    b.over_id
            ) AS over_totals
        GROUP BY
            match_id
    ) AS match_maxes;
```
2025-01-27 11:43:34 - root - INFO - itercount: 2
2025-01-27 11:43:34 - root - INFO - 0
2025-01-27 11:43:34 - root - INFO - Total iteration counts: 2
