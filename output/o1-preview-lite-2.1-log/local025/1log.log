2025-01-27 11:40:02 - openai._base_client - INFO - Retrying request to /chat/completions in 0.435633 seconds
2025-01-27 11:41:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:41:21 - root - INFO - SQL:
SELECT DISTINCT "match_id"
    FROM "ball_by_ball"
    LIMIT 100;
Results:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
    FROM "batsman_scored"
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "extra_runs", "extra_type"
    FROM "extra_runs"
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,extra_runs,extra_type
501229,1,16,3,1,legbyes
501229,2,18,1,1,legbyes
501229,2,18,6,4,legbyes
392239,2,18,6,1,legbyes
501229,1,20,3,1,legbyes
501230,1,1,4,4,legbyes
829714,1,18,4,1,legbyes
829816,2,3,3,1,legbyes
501230,2,3,4,1,legbyes
829816,1,2,3,4,legbyes
980962,2,18,2,1,legbyes
829714,2,18,1,1,legbyes
829714,1,9,6,1,legbyes
501231,2,1,1,1,legbyes
335994,2,4,6,1,legbyes
501231,2,2,6,1,legbyes
829714,1,9,3,2,legbyes
980962,2,17,5,2,legbyes
336045,2,3,5,4,legbyes
392240,1,3,7,1,legbyes
336045,1,4,1,1,legbyes
829714,1,3,6,1,legbyes
501231,2,20,5,1,legbyes
501232,2,1,1,1,legbyes
501232,1,1,2,1,legbyes
336045,1,8,3,1,legbyes
336017,2,4,4,1,legbyes
829814,1,18,1,1,legbyes
501232,2,4,3,1,legbyes
501232,1,4,6,1,legbyes
501232,2,7,2,1,legbyes
829714,1,1,1,4,legbyes
336045,2,9,3,1,legbyes
501232,2,14,3,1,legbyes
501232,1,14,7,1,legbyes
829712,1,18,5,1,legbyes
829712,1,3,1,4,legbyes
829712,1,2,6,1,legbyes
392240,1,10,2,2,legbyes
829712,1,1,3,4,legbyes
392240,1,11,2,1,legbyes
335991,1,2,1,1,legbyes
980962,2,14,1,1,legbyes
335988,2,17,1,1,legbyes
392240,1,13,3,1,legbyes
829814,1,14,3,1,legbyes
501232,1,20,7,1,legbyes
829812,1,4,5,1,legbyes
392240,1,15,3,1,legbyes
980960,1,7,5,1,legbyes
829710,2,4,2,1,legbyes
501233,2,6,1,1,legbyes
501233,2,6,3,1,legbyes
981018,2,2,1,1,legbyes
336045,2,18,8,1,legbyes
501233,1,13,1,1,legbyes
829812,1,1,4,1,legbyes
392241,2,3,6,1,legbyes
392241,2,4,6,1,legbyes
981018,1,1,3,1,legbyes
829810,1,12,6,1,legbyes
501234,2,2,1,1,legbyes
980958,1,3,2,1,legbyes
829710,1,1,5,1,legbyes
829710,2,1,3,1,legbyes
392241,2,8,3,1,legbyes
980956,1,20,3,1,legbyes
336017,2,7,5,1,legbyes
392186,1,2,1,1,legbyes
501234,2,14,5,2,legbyes
501234,1,16,2,1,legbyes
336001,2,20,3,1,legbyes
734054,1,19,6,1,legbyes
392186,2,6,1,4,legbyes
392241,1,19,4,1,legbyes
392186,2,6,2,1,legbyes
980986,1,18,2,1,legbyes
392186,2,10,3,1,legbyes
501235,1,12,3,1,legbyes
734054,1,17,6,1,legbyes
829808,1,9,2,1,legbyes
335994,1,9,3,1,legbyes
829808,2,8,2,2,legbyes
829808,2,7,3,1,legbyes
829808,2,7,1,1,legbyes
734054,1,13,2,1,legbyes
501235,1,18,4,1,legbyes
980956,1,16,2,1,legbyes
335994,1,10,2,1,legbyes
335991,2,2,5,4,legbyes
501236,1,13,2,1,legbyes
392187,1,2,2,1,legbyes
501236,1,13,5,1,legbyes
501236,1,15,1,1,legbyes
829808,2,3,1,1,legbyes
501236,2,17,2,1,legbyes
392243,1,4,4,1,legbyes
829806,1,19,6,1,legbyes
392243,2,10,1,1,legbyes
501237,2,5,6,1,legbyes

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
           bs."runs_scored", er."extra_runs"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs
335987,2,1,1,1,
335987,1,1,2,0,
335987,2,1,3,0,
335987,1,1,4,0,
335987,2,1,4,1,
335987,1,1,5,0,
335987,2,1,5,1,
335987,1,1,6,0,
335987,2,1,6,0,
335987,1,1,7,0,1.0
335987,2,1,7,0,
335987,1,2,1,0,
335987,2,2,1,0,
335987,1,2,2,4,
335987,2,2,2,0,
335987,1,2,3,4,
335987,2,2,3,0,4.0
335987,1,2,4,6,
335987,2,2,4,1,
335987,1,2,5,4,
335987,2,2,5,0,
335987,1,2,6,0,
335987,2,2,6,0,
335987,1,3,1,0,
335987,2,3,1,0,
335987,1,3,2,0,
335987,2,3,2,0,
335987,1,3,3,0,1.0
335987,2,3,3,1,
335987,1,3,4,4,
335987,2,3,4,0,
335987,1,3,5,1,
335987,1,3,6,0,
335987,2,3,6,0,
335987,2,3,7,1,
335987,2,4,1,2,
335987,1,4,2,6,
335987,2,4,2,1,
335987,1,4,3,0,1.0
335987,2,4,3,0,
335987,1,4,4,4,
335987,2,4,4,0,1.0
335987,1,4,5,0,
335987,2,4,5,0,
335987,1,4,6,1,
335987,2,4,6,0,
335987,1,4,7,6,
335987,1,5,1,4,
335987,2,5,1,1,
335987,1,5,2,1,
335987,2,5,2,1,
335987,1,5,3,4,
335987,2,5,3,0,
335987,1,5,4,0,
335987,2,5,4,6,
335987,1,5,5,1,
335987,2,5,5,0,
335987,1,5,6,0,
335987,2,5,6,0,
335987,1,6,1,1,
335987,2,6,1,0,
335987,1,6,2,0,
335987,2,6,2,0,
335987,1,6,3,0,
335987,2,6,3,0,
335987,1,6,4,0,
335987,2,6,4,1,
335987,1,6,5,0,
335987,2,6,5,1,
335987,1,6,6,0,
335987,2,6,6,0,
335987,1,7,1,1,
335987,2,7,1,0,
335987,1,7,2,1,
335987,2,7,2,0,
335987,1,7,3,1,
335987,2,7,3,1,
335987,1,7,4,2,
335987,1,7,5,1,
335987,1,7,6,1,
335987,2,7,6,0,
335987,2,7,7,0,
335987,2,7,8,4,
335987,1,8,1,0,
335987,2,8,1,1,
335987,1,8,2,1,
335987,2,8,2,0,1.0
335987,1,8,3,1,
335987,2,8,3,1,
335987,1,8,4,1,
335987,2,8,4,2,
335987,1,8,5,1,
335987,2,8,5,0,
335987,1,8,6,1,
335987,2,8,6,0,
335987,1,9,1,0,
335987,2,9,1,0,
335987,1,9,2,0,
335987,2,9,2,0,
335987,1,9,3,0,

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
           bs."runs_scored",
           IFNULL(er."extra_runs", 0) AS "extra_runs",
           (bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "total_runs"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs,total_runs
335987,2,1,1,1,0,1
335987,1,1,2,0,0,0
335987,2,1,3,0,0,0
335987,1,1,4,0,0,0
335987,2,1,4,1,0,1
335987,1,1,5,0,0,0
335987,2,1,5,1,0,1
335987,1,1,6,0,0,0
335987,2,1,6,0,0,0
335987,1,1,7,0,1,1
335987,2,1,7,0,0,0
335987,1,2,1,0,0,0
335987,2,2,1,0,0,0
335987,1,2,2,4,0,4
335987,2,2,2,0,0,0
335987,1,2,3,4,0,4
335987,2,2,3,0,4,4
335987,1,2,4,6,0,6
335987,2,2,4,1,0,1
335987,1,2,5,4,0,4
335987,2,2,5,0,0,0
335987,1,2,6,0,0,0
335987,2,2,6,0,0,0
335987,1,3,1,0,0,0
335987,2,3,1,0,0,0
335987,1,3,2,0,0,0
335987,2,3,2,0,0,0
335987,1,3,3,0,1,1
335987,2,3,3,1,0,1
335987,1,3,4,4,0,4
335987,2,3,4,0,0,0
335987,1,3,5,1,0,1
335987,1,3,6,0,0,0
335987,2,3,6,0,0,0
335987,2,3,7,1,0,1
335987,2,4,1,2,0,2
335987,1,4,2,6,0,6
335987,2,4,2,1,0,1
335987,1,4,3,0,1,1
335987,2,4,3,0,0,0
335987,1,4,4,4,0,4
335987,2,4,4,0,1,1
335987,1,4,5,0,0,0
335987,2,4,5,0,0,0
335987,1,4,6,1,0,1
335987,2,4,6,0,0,0
335987,1,4,7,6,0,6
335987,1,5,1,4,0,4
335987,2,5,1,1,0,1
335987,1,5,2,1,0,1
335987,2,5,2,1,0,1
335987,1,5,3,4,0,4
335987,2,5,3,0,0,0
335987,1,5,4,0,0,0
335987,2,5,4,6,0,6
335987,1,5,5,1,0,1
335987,2,5,5,0,0,0
335987,1,5,6,0,0,0
335987,2,5,6,0,0,0
335987,1,6,1,1,0,1
335987,2,6,1,0,0,0
335987,1,6,2,0,0,0
335987,2,6,2,0,0,0
335987,1,6,3,0,0,0
335987,2,6,3,0,0,0
335987,1,6,4,0,0,0
335987,2,6,4,1,0,1
335987,1,6,5,0,0,0
335987,2,6,5,1,0,1
335987,1,6,6,0,0,0
335987,2,6,6,0,0,0
335987,1,7,1,1,0,1
335987,2,7,1,0,0,0
335987,1,7,2,1,0,1
335987,2,7,2,0,0,0
335987,1,7,3,1,0,1
335987,2,7,3,1,0,1
335987,1,7,4,2,0,2
335987,1,7,5,1,0,1
335987,1,7,6,1,0,1
335987,2,7,6,0,0,0
335987,2,7,7,0,0,0
335987,2,7,8,4,0,4
335987,1,8,1,0,0,0
335987,2,8,1,1,0,1
335987,1,8,2,1,0,1
335987,2,8,2,0,1,1
335987,1,8,3,1,0,1
335987,2,8,3,1,0,1
335987,1,8,4,1,0,1
335987,2,8,4,2,0,2
335987,1,8,5,1,0,1
335987,2,8,5,0,0,0
335987,1,8,6,1,0,1
335987,2,8,6,0,0,0
335987,1,9,1,0,0,0
335987,2,9,1,0,0,0
335987,1,9,2,0,0,0
335987,2,9,2,0,0,0
335987,1,9,3,0,0,0

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    LIMIT 100;
Results:
match_id,innings_no,over_id,runs_in_over
335987,1,1,1
335987,1,2,18
335987,1,3,6
335987,1,4,18
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,15
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,5
335987,2,3,2
335987,2,4,4
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,5
335987,2,9,3
335987,2,10,7
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,3
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,7
335988,1,4,6
335988,1,5,9
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,10
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,6
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,14
335988,2,14,9
335988,2,15,13
335988,2,16,11
335988,2,17,10
335988,2,18,5
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,3
335989,1,7,4
335989,1,8,4
335989,1,9,3
335989,1,10,6
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    ORDER BY "runs_in_over" DESC
    LIMIT 100;
Results:
match_id,innings_no,over_id,runs_in_over
501252,2,3,37
734052,2,6,33
548332,2,13,31
335993,2,13,30
501265,1,15,30
980992,1,18,30
980992,1,19,30
598032,1,8,29
598065,2,17,29
392233,1,19,28
548323,2,19,28
598032,1,5,28
980912,1,19,28
336020,1,19,27
548318,1,19,27
548344,2,19,27
598032,1,15,27
729296,2,18,27
335993,1,18,26
335997,2,14,26
336023,2,14,26
419142,1,16,26
419144,1,13,26
598034,1,1,26
598042,1,20,26
598047,1,20,26
729322,2,17,26
734010,1,20,26
734012,1,5,26
734042,2,13,26
980928,1,14,26
335988,1,20,25
336041,1,20,25
392233,2,20,25
392235,1,19,25
392242,2,6,25
419112,2,12,25
419117,2,13,25
419157,1,20,25
501218,1,20,25
501225,1,3,25
501246,1,19,25
501262,1,13,25
548353,1,18,25
548353,1,19,25
548367,1,6,25
548385,1,19,25
598069,2,15,25
729300,1,13,25
733988,2,3,25
733996,1,16,25
734012,1,19,25
829794,2,19,25
829800,1,17,25
980936,2,18,25
336024,1,17,24
336031,1,20,24
392207,1,18,24
392219,1,15,24
392228,1,6,24
419128,1,19,24
419134,2,5,24
419138,2,3,24
501229,1,20,24
548329,1,14,24
548329,1,17,24
548332,2,20,24
548360,1,5,24
548372,1,20,24
548381,2,2,24
598004,2,17,24
598059,1,18,24
598072,1,19,24
733982,2,19,24
733988,1,19,24
734032,1,15,24
734034,1,20,24
734052,1,4,24
829734,1,14,24
829742,1,17,24
829790,1,3,24
829812,2,2,24
980964,2,17,24
981024,1,20,24
335999,2,7,23
336001,1,19,23
336014,2,14,23
336024,2,14,23
336026,2,3,23
392215,1,19,23
392241,1,20,23
419117,2,18,23
419122,1,2,23
419142,2,15,23
501237,1,18,23
501248,2,8,23
501260,2,2,23
501261,1,20,23
501272,2,20,23
548316,1,20,23

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    HAVING "runs_in_over" > 30
    LIMIT 100;
Results:
match_id,innings_no,over_id,runs_in_over
501252,2,3,37
548332,2,13,31
734052,2,6,33

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT DISTINCT "extra_type"
    FROM "extra_runs"
    LIMIT 100;
Results:
extra_type
legbyes
wides
byes
noballs
penalty

2025-01-27 11:41:21 - root - INFO - SQL:
SELECT bs."match_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "total_runs_in_match"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id"
    LIMIT 100;
Results:
match_id,total_runs_in_match
335987,283
335988,439
335989,244
335990,323
335991,203
335992,326
335993,277
335994,395
335995,424
335996,290
335997,268
335998,283
335999,302
336000,310
336001,334
336002,259
336003,371
336004,325
336005,337
336006,334
336007,328
336008,337
336009,292
336010,203
336011,237
336012,286
336013,192
336014,365
336015,249
336016,270
336017,227
336018,332
336019,372
336020,306
336021,275
336022,229
336023,293
336024,397
336025,369
336026,125
336027,203
336028,305
336029,322
336030,198
336031,298
336032,291
336033,359
336034,229
336036,347
336037,347
336038,408
336039,305
336040,335
336041,280
336042,280
336043,272
336044,222
336045,319
392186,307
392187,182
392188,155
392189,203
392190,254
392191,222
392193,337
392194,360
392196,329
392197,313
392199,290
392200,237
392201,327
392202,272
392203,284
392204,268
392205,216
392206,289
392207,285
392208,275
392209,275
392210,276
392211,303
392212,295
392213,289
392214,271
392215,331
392216,301
392217,266
392218,205
392219,355
392220,220
392221,331
392222,272
392223,283
392224,237
392225,275
392226,341
392227,225
392228,320
392229,257
392230,270

2025-01-27 11:41:21 - root - INFO - itercount: 0
2025-01-27 11:41:21 - root - INFO - Table: playerDDL:
CREATE TABLE player(
        player_id INTEGER PRIMARY KEY,
        player_name TEXT,
        dob DATE,
        batting_hand TEXT,
        bowling_skill TEXT,
        country_name TEXT
    )
Table: teamDDL:
CREATE TABLE team(
        team_id INTEGER PRIMARY KEY,
        name TEXT
    )
Table: matchDDL:
CREATE TABLE match(
        match_id INTEGER PRIMARY KEY,
        team_1 INTEGER,
        team_2 INTEGER,
        match_date DATE,
        season_id INTEGER,
        venue TEXT,
        toss_winner INTEGER,
        toss_decision TEXT,
        win_type TEXT,
        win_margin INTEGER,
        outcome_type TEXT,
        match_winner INTEGER,
        man_of_the_match INTEGER
    )
Table: player_matchDDL:
CREATE TABLE player_match(
        match_id INTEGER NOT NULL,
        player_id INTEGER NOT NULL,
        role TEXT,
        team_id INTEGER,
        PRIMARY KEY(match_id, player_id)
    )
Table: ball_by_ballDDL:
CREATE TABLE ball_by_ball(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        innings_no INTEGER NOT NULL,
        team_batting INTEGER,
        team_bowling INTEGER,
        striker_batting_position INTEGER,
        striker INTEGER,
        non_striker INTEGER,
        bowler INTEGER,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: batsman_scoredDDL:
CREATE TABLE batsman_scored(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        runs_scored INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: wicket_takenDDL:
CREATE TABLE wicket_taken(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        player_out INTEGER,
        kind_out TEXT,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: extra_runsDDL:
CREATE TABLE extra_runs(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        extra_type TEXT,
        extra_runs INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
External knowledge that might be helpful: 
None
The table structure information is (table names): 
['player', 'team', 'match', 'player_match', 'ball_by_ball', 'batsman_scored', 'wicket_taken', 'extra_runs']
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `ball_by_ball`
  - `match_id`: Used to identify each match for grouping.
  - `over_id`: Used to identify each over within an innings.
  - `ball_id`: Used to identify each ball within an over.
  - `innings_no`: Used to distinguish between different innings in a match.

- **Table:** `batsman_scored`
  - `match_id`: To join with `ball_by_ball`.
  - `over_id`: To join with `ball_by_ball`.
  - `ball_id`: To join with `ball_by_ball`.
  - `innings_no`: To join with `ball_by_ball`.
  - `runs_scored`: Runs scored by the batsman on that ball.

- **Table:** `extra_runs`
  - `match_id`: To join with `ball_by_ball`.
  - `over_id`: To join with `ball_by_ball`.
  - `ball_id`: To join with `ball_by_ball`.
  - `innings_no`: To join with `ball_by_ball`.
  - `extra_runs`: Extra runs conceded on that ball.
  - `extra_type`: Type of extra run (e.g., wide, no-ball), which may affect calculations.

**Potential Conditions and Usage:**

- **Joins**: Join `batsman_scored` and `extra_runs` with `ball_by_ball` on `match_id`, `over_id`, `ball_id`, and `innings_no` to combine data for each ball.
- **Calculating Total Runs per Ball**: Sum `runs_scored` and `extra_runs` (handling `NULL` values appropriately).
- **Calculating Total Runs per Over**: Group by `match_id`, `innings_no`, and `over_id` to sum total runs per over.
- **Finding Highest Runs per Over per Match**: For each match, identify the over with the maximum total runs conceded.
- **Conditions**: Use `LEFT JOIN` to handle balls without extra runs and consider `IFNULL` or `COALESCE` for `NULL` values.

---

**SQL Queries:**

1. **Retrieve distinct match IDs from the `ball_by_ball` table:**

    ```sql
    SELECT DISTINCT "match_id"
    FROM "ball_by_ball"
    LIMIT 100;
    ```

2. **List the runs scored by batsmen for each ball from the `batsman_scored` table:**

    ```sql
    SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
    FROM "batsman_scored"
    LIMIT 100;
    ```

3. **Retrieve extra runs conceded for each ball from the `extra_runs` table:**

    ```sql
    SELECT "match_id", "innings_no", "over_id", "ball_id", "extra_runs", "extra_type"
    FROM "extra_runs"
    LIMIT 100;
    ```

4. **Join `batsman_scored` and `extra_runs` to view runs per ball:**

    ```sql
    SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
           bs."runs_scored", er."extra_runs"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    LIMIT 100;
    ```

5. **Calculate total runs per ball by summing `runs_scored` and `extra_runs`:**

    ```sql
    SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
           bs."runs_scored",
           IFNULL(er."extra_runs", 0) AS "extra_runs",
           (bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "total_runs"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    LIMIT 100;
    ```

6. **Sum total runs per over per match:**

    ```sql
    SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    LIMIT 100;
    ```

7. **Order overs by total runs conceded to identify high-scoring overs:**

    ```sql
    SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    ORDER BY "runs_in_over" DESC
    LIMIT 100;
    ```

8. **Identify overs where total runs exceeded 30 runs:**

    ```sql
    SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    HAVING "runs_in_over" > 30
    LIMIT 100;
    ```

9. **List distinct types of extras from the `extra_runs` table:**

    ```sql
    SELECT DISTINCT "extra_type"
    FROM "extra_runs"
    LIMIT 100;
    ```

10. **Calculate total runs conceded in each match:**

    ```sql
    SELECT bs."match_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "total_runs_in_match"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id"
    LIMIT 100;
    ```

These queries help in understanding the data distribution and relationships between the tables. They provide insights into how runs are accumulated per ball, over, and match, which is essential for calculating the average of the highest runs conceded in a single over for each match.Query:
SELECT DISTINCT "match_id"
    FROM "ball_by_ball"
    LIMIT 100;
Answer:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
    FROM "batsman_scored"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "extra_runs", "extra_type"
    FROM "extra_runs"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,extra_runs,extra_type
501229,1,16,3,1,legbyes
501229,2,18,1,1,legbyes
501229,2,18,6,4,legbyes
392239,2,18,6,1,legbyes
501229,1,20,3,1,legbyes
501230,1,1,4,4,legbyes
829714,1,18,4,1,legbyes
829816,2,3,3,1,legbyes
501230,2,3,4,1,legbyes
829816,1,2,3,4,legbyes
980962,2,18,2,1,legbyes
829714,2,18,1,1,legbyes
829714,1,9,6,1,legbyes
501231,2,1,1,1,legbyes
335994,2,4,6,1,legbyes
501231,2,2,6,1,legbyes
829714,1,9,3,2,legbyes
980962,2,17,5,2,legbyes
336045,2,3,5,4,legbyes
392240,1,3,7,1,legbyes
336045,1,4,1,1,legbyes
829714,1,3,6,1,legbyes
501231,2,20,5,1,legbyes
501232,2,1,1,1,legbyes
501232,1,1,2,1,legbyes
336045,1,8,3,1,legbyes
336017,2,4,4,1,legbyes
829814,1,18,1,1,legbyes
501232,2,4,3,1,legbyes
501232,1,4,6,1,legbyes
501232,2,7,2,1,legbyes
829714,1,1,1,4,legbyes
336045,2,9,3,1,legbyes
501232,2,14,3,1,legbyes
501232,1,14,7,1,legbyes
829712,1,18,5,1,legbyes
829712,1,3,1,4,legbyes
829712,1,2,6,1,legbyes
392240,1,10,2,2,legbyes
829712,1,1,3,4,legbyes
392240,1,11,2,1,legbyes
335991,1,2,1,1,legbyes
980962,2,14,1,1,legbyes
335988,2,17,1,1,legbyes
392240,1,13,3,1,legbyes
829814,1,14,3,1,legbyes
501232,1,20,7,1,legbyes
829812,1,4,5,1,legbyes
392240,1,15,3,1,legbyes
980960,1,7,5,1,legbyes
829710,2,4,2,1,legbyes
501233,2,6,1,1,legbyes
501233,2,6,3,1,legbyes
981018,2,2,1,1,legbyes
336045,2,18,8,1,legbyes
501233,1,13,1,1,legbyes
829812,1,1,4,1,legbyes
392241,2,3,6,1,legbyes
392241,2,4,6,1,legbyes
981018,1,1,3,1,legbyes
829810,1,12,6,1,legbyes
501234,2,2,1,1,legbyes
980958,1,3,2,1,legbyes
829710,1,1,5,1,legbyes
829710,2,1,3,1,legbyes
392241,2,8,3,1,legbyes
980956,1,20,3,1,legbyes
336017,2,7,5,1,legbyes
392186,1,2,1,1,legbyes
501234,2,14,5,2,legbyes
501234,1,16,2,1,legbyes
336001,2,20,3,1,legbyes
734054,1,19,6,1,legbyes
392186,2,6,1,4,legbyes
392241,1,19,4,1,legbyes
392186,2,6,2,1,legbyes
980986,1,18,2,1,legbyes
392186,2,10,3,1,legbyes
501235,1,12,3,1,legbyes
734054,1,17,6,1,legbyes
829808,1,9,2,1,legbyes
335994,1,9,3,1,legbyes
829808,2,8,2,2,legbyes
829808,2,7,3,1,legbyes
829808,2,7,1,1,legbyes
734054,1,13,2,1,legbyes
501235,1,18,4,1,legbyes
980956,1,16,2,1,legbyes
335994,1,10,2,1,legbyes
335991,2,2,5,4,legbyes
501236,1,13,2,1,legbyes
392187,1,2,2,1,legbyes
501236,1,13,5,1,legbyes
501236,1,15,1,1,legbyes
829808,2,3,1,1,legbyes
501236,2,17,2,1,legbyes
392243,1,4,4,1,legbyes
829806,1,19,6,1,legbyes
392243,2,10,1,1,legbyes
501237,2,5,6,1,legbyes
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
           bs."runs_scored", er."extra_runs"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs
335987,2,1,1,1,
335987,1,1,2,0,
335987,2,1,3,0,
335987,1,1,4,0,
335987,2,1,4,1,
335987,1,1,5,0,
335987,2,1,5,1,
335987,1,1,6,0,
335987,2,1,6,0,
335987,1,1,7,0,1.0
335987,2,1,7,0,
335987,1,2,1,0,
335987,2,2,1,0,
335987,1,2,2,4,
335987,2,2,2,0,
335987,1,2,3,4,
335987,2,2,3,0,4.0
335987,1,2,4,6,
335987,2,2,4,1,
335987,1,2,5,4,
335987,2,2,5,0,
335987,1,2,6,0,
335987,2,2,6,0,
335987,1,3,1,0,
335987,2,3,1,0,
335987,1,3,2,0,
335987,2,3,2,0,
335987,1,3,3,0,1.0
335987,2,3,3,1,
335987,1,3,4,4,
335987,2,3,4,0,
335987,1,3,5,1,
335987,1,3,6,0,
335987,2,3,6,0,
335987,2,3,7,1,
335987,2,4,1,2,
335987,1,4,2,6,
335987,2,4,2,1,
335987,1,4,3,0,1.0
335987,2,4,3,0,
335987,1,4,4,4,
335987,2,4,4,0,1.0
335987,1,4,5,0,
335987,2,4,5,0,
335987,1,4,6,1,
335987,2,4,6,0,
335987,1,4,7,6,
335987,1,5,1,4,
335987,2,5,1,1,
335987,1,5,2,1,
335987,2,5,2,1,
335987,1,5,3,4,
335987,2,5,3,0,
335987,1,5,4,0,
335987,2,5,4,6,
335987,1,5,5,1,
335987,2,5,5,0,
335987,1,5,6,0,
335987,2,5,6,0,
335987,1,6,1,1,
335987,2,6,1,0,
335987,1,6,2,0,
335987,2,6,2,0,
335987,1,6,3,0,
335987,2,6,3,0,
335987,1,6,4,0,
335987,2,6,4,1,
335987,1,6,5,0,
335987,2,6,5,1,
335987,1,6,6,0,
335987,2,6,6,0,
335987,1,7,1,1,
335987,2,7,1,0,
335987,1,7,2,1,
335987,2,7,2,0,
335987,1,7,3,1,
335987,2,7,3,1,
335987,1,7,4,2,
335987,1,7,5,1,
335987,1,7,6,1,
335987,2,7,6,0,
335987,2,7,7,0,
335987,2,7,8,4,
335987,1,8,1,0,
335987,2,8,1,1,
335987,1,8,2,1,
335987,2,8,2,0,1.0
335987,1,8,3,1,
335987,2,8,3,1,
335987,1,8,4,1,
335987,2,8,4,2,
335987,1,8,5,1,
335987,2,8,5,0,
335987,1,8,6,1,
335987,2,8,6,0,
335987,1,9,1,0,
335987,2,9,1,0,
335987,1,9,2,0,
335987,2,9,2,0,
335987,1,9,3,0,
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
           bs."runs_scored",
           IFNULL(er."extra_runs", 0) AS "extra_runs",
           (bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "total_runs"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs,total_runs
335987,2,1,1,1,0,1
335987,1,1,2,0,0,0
335987,2,1,3,0,0,0
335987,1,1,4,0,0,0
335987,2,1,4,1,0,1
335987,1,1,5,0,0,0
335987,2,1,5,1,0,1
335987,1,1,6,0,0,0
335987,2,1,6,0,0,0
335987,1,1,7,0,1,1
335987,2,1,7,0,0,0
335987,1,2,1,0,0,0
335987,2,2,1,0,0,0
335987,1,2,2,4,0,4
335987,2,2,2,0,0,0
335987,1,2,3,4,0,4
335987,2,2,3,0,4,4
335987,1,2,4,6,0,6
335987,2,2,4,1,0,1
335987,1,2,5,4,0,4
335987,2,2,5,0,0,0
335987,1,2,6,0,0,0
335987,2,2,6,0,0,0
335987,1,3,1,0,0,0
335987,2,3,1,0,0,0
335987,1,3,2,0,0,0
335987,2,3,2,0,0,0
335987,1,3,3,0,1,1
335987,2,3,3,1,0,1
335987,1,3,4,4,0,4
335987,2,3,4,0,0,0
335987,1,3,5,1,0,1
335987,1,3,6,0,0,0
335987,2,3,6,0,0,0
335987,2,3,7,1,0,1
335987,2,4,1,2,0,2
335987,1,4,2,6,0,6
335987,2,4,2,1,0,1
335987,1,4,3,0,1,1
335987,2,4,3,0,0,0
335987,1,4,4,4,0,4
335987,2,4,4,0,1,1
335987,1,4,5,0,0,0
335987,2,4,5,0,0,0
335987,1,4,6,1,0,1
335987,2,4,6,0,0,0
335987,1,4,7,6,0,6
335987,1,5,1,4,0,4
335987,2,5,1,1,0,1
335987,1,5,2,1,0,1
335987,2,5,2,1,0,1
335987,1,5,3,4,0,4
335987,2,5,3,0,0,0
335987,1,5,4,0,0,0
335987,2,5,4,6,0,6
335987,1,5,5,1,0,1
335987,2,5,5,0,0,0
335987,1,5,6,0,0,0
335987,2,5,6,0,0,0
335987,1,6,1,1,0,1
335987,2,6,1,0,0,0
335987,1,6,2,0,0,0
335987,2,6,2,0,0,0
335987,1,6,3,0,0,0
335987,2,6,3,0,0,0
335987,1,6,4,0,0,0
335987,2,6,4,1,0,1
335987,1,6,5,0,0,0
335987,2,6,5,1,0,1
335987,1,6,6,0,0,0
335987,2,6,6,0,0,0
335987,1,7,1,1,0,1
335987,2,7,1,0,0,0
335987,1,7,2,1,0,1
335987,2,7,2,0,0,0
335987,1,7,3,1,0,1
335987,2,7,3,1,0,1
335987,1,7,4,2,0,2
335987,1,7,5,1,0,1
335987,1,7,6,1,0,1
335987,2,7,6,0,0,0
335987,2,7,7,0,0,0
335987,2,7,8,4,0,4
335987,1,8,1,0,0,0
335987,2,8,1,1,0,1
335987,1,8,2,1,0,1
335987,2,8,2,0,1,1
335987,1,8,3,1,0,1
335987,2,8,3,1,0,1
335987,1,8,4,1,0,1
335987,2,8,4,2,0,2
335987,1,8,5,1,0,1
335987,2,8,5,0,0,0
335987,1,8,6,1,0,1
335987,2,8,6,0,0,0
335987,1,9,1,0,0,0
335987,2,9,1,0,0,0
335987,1,9,2,0,0,0
335987,2,9,2,0,0,0
335987,1,9,3,0,0,0
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,runs_in_over
335987,1,1,1
335987,1,2,18
335987,1,3,6
335987,1,4,18
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,15
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,5
335987,2,3,2
335987,2,4,4
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,5
335987,2,9,3
335987,2,10,7
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,3
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,7
335988,1,4,6
335988,1,5,9
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,10
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,6
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,14
335988,2,14,9
335988,2,15,13
335988,2,16,11
335988,2,17,10
335988,2,18,5
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,3
335989,1,7,4
335989,1,8,4
335989,1,9,3
335989,1,10,6
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    ORDER BY "runs_in_over" DESC
    LIMIT 100;
Answer:
match_id,innings_no,over_id,runs_in_over
501252,2,3,37
734052,2,6,33
548332,2,13,31
335993,2,13,30
501265,1,15,30
980992,1,18,30
980992,1,19,30
598032,1,8,29
598065,2,17,29
392233,1,19,28
548323,2,19,28
598032,1,5,28
980912,1,19,28
336020,1,19,27
548318,1,19,27
548344,2,19,27
598032,1,15,27
729296,2,18,27
335993,1,18,26
335997,2,14,26
336023,2,14,26
419142,1,16,26
419144,1,13,26
598034,1,1,26
598042,1,20,26
598047,1,20,26
729322,2,17,26
734010,1,20,26
734012,1,5,26
734042,2,13,26
980928,1,14,26
335988,1,20,25
336041,1,20,25
392233,2,20,25
392235,1,19,25
392242,2,6,25
419112,2,12,25
419117,2,13,25
419157,1,20,25
501218,1,20,25
501225,1,3,25
501246,1,19,25
501262,1,13,25
548353,1,18,25
548353,1,19,25
548367,1,6,25
548385,1,19,25
598069,2,15,25
729300,1,13,25
733988,2,3,25
733996,1,16,25
734012,1,19,25
829794,2,19,25
829800,1,17,25
980936,2,18,25
336024,1,17,24
336031,1,20,24
392207,1,18,24
392219,1,15,24
392228,1,6,24
419128,1,19,24
419134,2,5,24
419138,2,3,24
501229,1,20,24
548329,1,14,24
548329,1,17,24
548332,2,20,24
548360,1,5,24
548372,1,20,24
548381,2,2,24
598004,2,17,24
598059,1,18,24
598072,1,19,24
733982,2,19,24
733988,1,19,24
734032,1,15,24
734034,1,20,24
734052,1,4,24
829734,1,14,24
829742,1,17,24
829790,1,3,24
829812,2,2,24
980964,2,17,24
981024,1,20,24
335999,2,7,23
336001,1,19,23
336014,2,14,23
336024,2,14,23
336026,2,3,23
392215,1,19,23
392241,1,20,23
419117,2,18,23
419122,1,2,23
419142,2,15,23
501237,1,18,23
501248,2,8,23
501260,2,2,23
501261,1,20,23
501272,2,20,23
548316,1,20,23
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "runs_in_over"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    HAVING "runs_in_over" > 30
    LIMIT 100;
Answer:
match_id,innings_no,over_id,runs_in_over
501252,2,3,37
548332,2,13,31
734052,2,6,33
Query:
SELECT DISTINCT "extra_type"
    FROM "extra_runs"
    LIMIT 100;
Answer:
extra_type
legbyes
wides
byes
noballs
penalty
Query:
SELECT bs."match_id",
           SUM(bs."runs_scored" + IFNULL(er."extra_runs", 0)) AS "total_runs_in_match"
    FROM "batsman_scored" AS bs
    LEFT JOIN "extra_runs" AS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id"
    LIMIT 100;
Answer:
match_id,total_runs_in_match
335987,283
335988,439
335989,244
335990,323
335991,203
335992,326
335993,277
335994,395
335995,424
335996,290
335997,268
335998,283
335999,302
336000,310
336001,334
336002,259
336003,371
336004,325
336005,337
336006,334
336007,328
336008,337
336009,292
336010,203
336011,237
336012,286
336013,192
336014,365
336015,249
336016,270
336017,227
336018,332
336019,372
336020,306
336021,275
336022,229
336023,293
336024,397
336025,369
336026,125
336027,203
336028,305
336029,322
336030,198
336031,298
336032,291
336033,359
336034,229
336036,347
336037,347
336038,408
336039,305
336040,335
336041,280
336042,280
336043,272
336044,222
336045,319
392186,307
392187,182
392188,155
392189,203
392190,254
392191,222
392193,337
392194,360
392196,329
392197,313
392199,290
392200,237
392201,327
392202,272
392203,284
392204,268
392205,216
392206,289
392207,285
392208,275
392209,275
392210,276
392211,303
392212,295
392213,289
392214,271
392215,331
392216,301
392217,266
392218,205
392219,355
392220,220
392221,331
392222,272
392223,283
392224,237
392225,275
392226,341
392227,225
392228,320
392229,257
392230,270
End Exploring Related Columns
Task: Please calculate the average of the highest runs conceded in a single over for each match.

Please answer only one complete SQL in sqlite dialect in ```sql``` format.
Usage example: ```sql
SELECT DISTINCT "column_name" FROM "table_name" WHERE ... ``` (Replace "table_name" with the actual table name. Enclose table and column names with double quotations if they contain special characters or match reserved keywords.)
Follow the answer format like: To calculate the average of the highest runs conceded in a single over for each match, we need to:

1. For each match, identify the over where the maximum number of runs were conceded (including both runs scored and extra runs).
2. Sum these maximum runs conceded from all matches.
3. Divide the total by the number of matches to find the average.

Since we don't have actual data to compute this, we can represent the expected output as follows:

```csv
average_highest_runs_conceded_per_over
value:float
(Attention: answer in one row)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: 

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 11:41:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:41:51 - root - INFO - ```sql
SELECT
    AVG(max_runs_in_single_over) AS average_highest_runs_conceded_per_over
FROM (
    SELECT
        match_id,
        MAX(runs_in_over) AS max_runs_in_single_over
    FROM (
        SELECT
            bs.match_id,
            bs.innings_no,
            bs.over_id,
            SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS runs_in_over
        FROM
            "batsman_scored" AS bs
            LEFT JOIN "extra_runs" AS er
                ON bs.match_id = er.match_id
                AND bs.innings_no = er.innings_no
                AND bs.over_id = er.over_id
                AND bs.ball_id = er.ball_id
        GROUP BY
            bs.match_id,
            bs.innings_no,
            bs.over_id
    ) AS over_runs
    GROUP BY
        match_id
);
```
2025-01-27 11:41:51 - root - INFO - itercount: 1
2025-01-27 11:41:51 - root - INFO - 0
2025-01-27 11:41:51 - root - INFO - results: 
average_highest_runs_conceded_per_over
19.086267605633804


2025-01-27 11:41:51 - root - INFO - Please check the answer again by reviewing Please calculate the average of the highest runs conceded in a single over for each match., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To calculate the average of the highest runs conceded in a single over for each match, we need to:

1. For each match, identify the over where the maximum number of runs were conceded (including both runs scored and extra runs).
2. Sum these maximum runs conceded from all matches.
3. Divide the total by the number of matches to find the average.

Since we don't have actual data to compute this, we can represent the expected output as follows:

```csv
average_highest_runs_conceded_per_over
value:float
(Attention: answer in one row)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
average_highest_runs_conceded_per_over
19.086267605633804
Current sql:
SELECT
    AVG(max_runs_in_single_over) AS average_highest_runs_conceded_per_over
FROM (
    SELECT
        match_id,
        MAX(runs_in_over) AS max_runs_in_single_over
    FROM (
        SELECT
            bs.match_id,
            bs.innings_no,
            bs.over_id,
            SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS runs_in_over
        FROM
            "batsman_scored" AS bs
            LEFT JOIN "extra_runs" AS er
                ON bs.match_id = er.match_id
                AND bs.innings_no = er.innings_no
                AND bs.over_id = er.over_id
                AND bs.ball_id = er.ball_id
        GROUP BY
            bs.match_id,
            bs.innings_no,
            bs.over_id
    ) AS over_runs
    GROUP BY
        match_id
);
2025-01-27 11:42:14 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 11:42:14 - root - INFO - To calculate the average of the highest runs conceded in a single over for each match, we need to:

1. For each match, identify the over where the maximum number of runs were conceded (including both runs scored and extra runs).
2. Sum these maximum runs conceded from all matches.
3. Divide the total by the number of matches to find the average.

We can use the following SQL query:

```sql
SELECT
    ROUND(AVG(max_runs_in_single_over), 4) AS average_highest_runs_conceded_per_over
FROM (
    SELECT
        match_id,
        MAX(runs_in_over) AS max_runs_in_single_over
    FROM (
        SELECT
            bs.match_id,
            bs.innings_no,
            bs.over_id,
            SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS runs_in_over
        FROM
            "batsman_scored" AS bs
        LEFT JOIN
            "extra_runs" AS er
            ON bs.match_id = er.match_id
            AND bs.innings_no = er.innings_no
            AND bs.over_id = er.over_id
            AND bs.ball_id = er.ball_id
        GROUP BY
            bs.match_id,
            bs.innings_no,
            bs.over_id
    ) AS over_runs
    GROUP BY
        match_id
) AS max_over_runs;
```

Since we don't have actual data to compute this, we can represent the expected output as follows:

```csv
average_highest_runs_conceded_per_over
value:float
```
2025-01-27 11:42:14 - root - INFO - itercount: 2
2025-01-27 11:42:14 - root - INFO - 0
2025-01-27 11:42:14 - root - INFO - Total iteration counts: 2
