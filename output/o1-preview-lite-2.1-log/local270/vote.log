```plaintext
2result.sql
```

**Reasoning:**

Between the two SQL queries, `0result.sql` and `2result.sql`, the more suitable query to answer the question is `2result.sql`.

**Explanation:**

- **`0result.sql`:**
  - This query calculates the total quantities for each packaging container by summing the quantities of **all items**, including both base items (like the bottles) and other containers.
  - It does not filter or differentiate between base items and containers; therefore, the total quantities may include counts of sub-containers, which might not represent the actual quantities of the items we're interested in (e.g., the bottles).

- **`2result.sql`:**
  - This query specifically targets the total quantities of **base items** (items that are not containers themselves) within each packaging container.
  - In the query, `pc.contains_id IN (501, 502)` filters the items to only include the base items with IDs `501` and `502` (which are "Bottle 330cl" and "Bottle 500cl").
  - By focusing on these base items, the query accurately sums the quantities of the actual products, considering all levels of nesting within the packaging containers.
  - The result reflects the total number of bottles contained within each container, which aligns precisely with the question's intent: to find containers that include items (actual products) in quantities greater than 500, considering all nested contents.

**Conclusion:**

Since `2result.sql` calculates the total quantities of the base items (bottles) within each container, considering nested relationships, it directly answers the question. It provides the total number of actual items contained within each packaging container, allowing us to identify which containers include items in quantities greater than 500.

Therefore, the correct SQL query is:

```plaintext
2result.sql
```