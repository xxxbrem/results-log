2025-01-23 22:42:56 - openai._base_client - INFO - Retrying request to /chat/completions in 0.392854 seconds
2025-01-23 22:44:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 22:44:04 - root - INFO - SQL:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
LIMIT 100;
Results:
user_pseudo_id
1003046.9452926974
1023282.4639847710
1026043.4481623879
1026409.1551860912
1032138.1796039159
1037928.9294661675
1045950.7099606829
1051288.9523352374
1054372.6755770068
1064574.6224708641
1066655.6240997015
1080064.0071613184
1082746.7285674512
1097358.9593491100
1104313.9641823605
1107198.5152483918
1112823.8475775772
1116587.1725520171
1127824.3503063268
1134825.6533092350
1138692.0103796281
1160488.2375923167
1164648.0319944302
1168297.2853699605
1170405.4925804370
1174066.6437027818
1178889.6850461952
1188134.8498680538
1205590.2516186397
1211099.8247563235
1213932.4846099850
1215465.1474478000
1218586.5350251990
1240786.8917310160
1246063.3665874179
1255322.2973246181
1259302.9069938124
1269423.6724500672
1275797.1936238018
1277765.6068129494
1296701.2382814729
1308776.9803994658
1318624.9067804638
1320187.6719997668
1326289.2331853598
1333091.0887566663
1352892.5937639189
1375005.2583322863
1382535.7283137323
1385112.5897617274
1396456.6482506733
1401649.9529464111
1422161.0871788362
1437260.5988606411
1448835.0934102497
1453555.6810069410
1453951.1387928223
1456890.1673716823
1459436.8826692932
1473136.1149103090
1485472.4390061373
1499810.5142637849
1501018.3808301483
1503421.5168556763
1515646.3111272928
1518831.1475327211
1519124.8641457524
1534689.9343310805
1539940.5253610440
1543004.7243225422
1550901.3980286554
1564015.6880680172
1575061.4789497906
1582390.8206269591
1616136.8949543878
1619900.3195973863
1620024.8966870933
1646722.0078157231
1674937.2501954408
1677450.9117017807
1680043.1145812114
1684301.4109152707
1688147.2939632391
1693134.9790437518
1694910.7733232660
1699037.5870634483
1707918.4797422153
1713530.3382800695
1719564.6333875501
1729803.5105688857
1734528.1974041204
1745072.0004799132
1745171.2191701968
1749246.8534368616
1759212.2216007988
1762263.6990880514
1765594.3047173009
1784794.0627143380
1804199.2014328535
1820733.6464417466

2025-01-23 22:44:05 - root - INFO - SQL:
SELECT `event_date`, `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
LIMIT 100;
Results:
event_date,user_pseudo_id
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1054184.5156674867
20210102,1054184.5156674867
20210102,1054184.5156674867
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303

2025-01-23 22:44:07 - root - INFO - SQL:
SELECT DISTINCT `event_date`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
LIMIT 100;
Results:
event_date
20210103

2025-01-23 22:44:09 - root - INFO - SQL:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
LIMIT 100;
Results:
user_pseudo_id
1006764.2593478041
1011730.5937310445
1025554.7155857902
1028337.8871283783
1031058.2518048614
1032606.3576924541
1056329.7612609650
1068701.3018406914
1071257.2904972531
1075223.2681702246
1079374.1910653935
1082920.8892141550
1086535.4875940498
1087808.3711873816
1089575.2761256602
1096553.1505774248
1102947.5096330985
1113194.4596973553
1115003.4680616065
1117874.3324542795
1122855.4085911936
1124854.6111785259
1129742.7402804867
1132555.2301002365
1133964.7947497780
1141770.2200021598
1153093.0119048067
1160488.2375923167
1172217.8534916097
1182923.0909175622
1186112.8377343718
1187482.7824786316
1192643.6460701245
1197568.4892852272
1203853.5073281021
1204844.2691721789
1215841.5184851096
1218242.9191016186
1222409.1951536768
1225314.7220680786
1226878.4100446319
1241220.1441674551
1241629.8724178917
1243376.8542545034
1244606.6899321311
1247686.2070404262
1254011.7545907964
1258911.4567959870
1260992.5282234785
1261100.0843906075
1264306.5410019941
1264993.3645153639
1272248.3527408128
1274495.5184398589
1275384.3626297214
1276342.9126460945
1278427.6141690556
1280266.1333397958
1284133.7579148747
1285418.4651557245
1286945.3645505196
1291228.5655196810
1292185.5593921414
1301862.0758294607
1304296.6040710271
1304588.7510213626
1306493.1469289903
1307038.3688504236
1307807.0071561878
1309149.1848587742
1318068.2020052683
1318879.8038263711
1321029.7577861325
1321742.4551192896
1325482.4574108673
1325688.1519909745
1326179.1742099424
1336694.6432583433
1342157.7728855384
1345509.3936713223
1348068.1593058656
1352587.0117468163
1356010.8691002356
1360671.0435504959
1379775.2562814073
1397822.5235180436
1399527.2790058720
1404886.4182310055
1406007.4609789626
1414193.2963567157
1432451.2006018969
1434548.8581092193
1439687.4557873700
1455644.0190003959
1455809.7208111760
1457888.4327764965
1460768.9286238752
1469643.2045997031
1474066.3112067437
1484308.7242312753

2025-01-23 22:44:11 - root - INFO - SQL:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
LIMIT 100;
Results:
user_pseudo_id
1001303.4827739208
1014060.1100191558
1015239.8458513676
1023213.5350684501
1025773.0920505617
1033020.5841925327
1042140.6802444773
1045720.9269650087
1049106.9990499157
1049739.7909391395
1060274.1098179258
1065322.6541302193
1069165.2811408476
1069494.0113686800
1072513.2161702512
1075240.7394043586
1075333.9269112947
1078788.8328338285
1081165.5314971225
1083792.6034832516
1084471.2677471598
1086668.0925005810
1086843.9052907013
1087271.0550084610
1087808.3711873816
1095740.4839642689
1111626.7442894456
1114964.3576383224
1115377.5526866793
1118833.2974558782
1126378.6956818362
1128261.6033595713
1128289.3662024583
1130911.8567954377
1133313.1103337373
1133962.3740970739
1135774.0646413552
1141870.4386338572
1144150.5821344535
1144792.8191246270
1146837.4730107711
1148615.3691736909
1151687.1996189042
1153093.0119048067
1160488.2375923167
1163998.9977514528
1169456.0744217795
1170673.0496256889
1173439.7311015929
1175417.7164964556
1177018.6074439798
1180762.6954492448
1185502.9456478888
1185607.4529846208
1211099.8247563235
1213730.2023854144
1214408.9886831537
1214882.5762650867
1216128.7020381390
1218031.2772164166
1221611.6181416961
1223402.7111643409
1224512.5360000287
1230929.5891057900
1243180.2889994882
1245742.1517954276
1250075.3055872841
1251677.0033366371
1252675.9812778248
1253621.4143036992
1255130.2864074728
1256871.5825332697
1257670.9852008771
1259037.7018534149
1264306.5410019941
1270650.6052564575
1274840.8216292245
1278990.5126400811
1280885.4587684428
1282586.4517477452
1283422.3494279515
1285418.4651557245
1285421.1033375628
1291684.5715903210
1295893.9741062295
1304296.6040710271
1304588.7510213626
1304912.9788917690
1306493.1469289903
1311409.7691253264
1312237.6155331000
1314525.6769250991
1318199.4944291645
1324330.4963761152
1324723.7882312578
1325005.1519738149
1326729.2901375460
1328537.2795814770
1332716.7234827218
1357835.0893556888

2025-01-23 22:44:13 - root - INFO - SQL:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
WHERE `user_pseudo_id` NOT IN (
  SELECT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION DISTINCT
  SELECT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
)
LIMIT 100;
Results:
user_pseudo_id
1003046.9452926974
1023282.4639847710
1026043.4481623879
1026409.1551860912
1032138.1796039159
1037928.9294661675
1045950.7099606829
1051288.9523352374
1054372.6755770068
1064574.6224708641
1066655.6240997015
1080064.0071613184
1082746.7285674512
1097358.9593491100
1104313.9641823605
1107198.5152483918
1112823.8475775772
1116587.1725520171
1127824.3503063268
1134825.6533092350
1138692.0103796281
1164648.0319944302
1168297.2853699605
1170405.4925804370
1174066.6437027818
1178889.6850461952
1188134.8498680538
1205590.2516186397
1213932.4846099850
1215465.1474478000
1218586.5350251990
1240786.8917310160
1246063.3665874179
1255322.2973246181
1259302.9069938124
1269423.6724500672
1275797.1936238018
1277765.6068129494
1296701.2382814729
1308776.9803994658
1318624.9067804638
1320187.6719997668
1326289.2331853598
1333091.0887566663
1352892.5937639189
1375005.2583322863
1382535.7283137323
1385112.5897617274
1396456.6482506733
1401649.9529464111
1422161.0871788362
1437260.5988606411
1448835.0934102497
1453555.6810069410
1453951.1387928223
1456890.1673716823
1459436.8826692932
1473136.1149103090
1485472.4390061373
1499810.5142637849
1501018.3808301483
1503421.5168556763
1515646.3111272928
1518831.1475327211
1519124.8641457524
1534689.9343310805
1539940.5253610440
1543004.7243225422
1550901.3980286554
1564015.6880680172
1575061.4789497906
1582390.8206269591
1616136.8949543878
1619900.3195973863
1620024.8966870933
1646722.0078157231
1674937.2501954408
1677450.9117017807
1680043.1145812114
1684301.4109152707
1688147.2939632391
1693134.9790437518
1694910.7733232660
1699037.5870634483
1707918.4797422153
1713530.3382800695
1719564.6333875501
1729803.5105688857
1734528.1974041204
1745072.0004799132
1745171.2191701968
1749246.8534368616
1759212.2216007988
1762263.6990880514
1765594.3047173009
1784794.0627143380
1804199.2014328535
1820733.6464417466
1829763.3860332334
1846974.0316175078

2025-01-23 22:44:14 - root - INFO - SQL:
SELECT t.`user_pseudo_id`, f.key AS param_key, f.value.string_value AS param_value
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105` AS t,
UNNEST(t.`event_params`) AS f
LIMIT 100;
Results:
user_pseudo_id,param_key,param_value
1006764.2593478041,percent_scrolled,
1006764.2593478041,debug_mode,
1006764.2593478041,page_title,Google Online Store
1006764.2593478041,page_referrer,
1006764.2593478041,page_location,https://googlemerchandisestore.com/
1006764.2593478041,engaged_session_event,
1006764.2593478041,engagement_time_msec,
1006764.2593478041,ga_session_number,
1006764.2593478041,ga_session_id,
1006764.2593478041,session_engaged,1
1006764.2593478041,engaged_session_event,
1006764.2593478041,ga_session_number,
1006764.2593478041,page_title,Google Online Store
1006764.2593478041,engagement_time_msec,
1006764.2593478041,session_engaged,1
1006764.2593478041,page_referrer,
1006764.2593478041,page_location,https://googlemerchandisestore.com/
1006764.2593478041,debug_mode,
1006764.2593478041,ga_session_id,
1006764.2593478041,page_location,https://shop.googlemerchandisestore.com/Google+Redesign/Apparel/Stan+and+Friends+Onesie+Green
1006764.2593478041,session_engaged,1
1006764.2593478041,ga_session_id,
1006764.2593478041,page_title,Stan and Friends Onesie Green
1006764.2593478041,debug_mode,
1006764.2593478041,page_referrer,https://shop.googlemerchandisestore.com/store.html?
1006764.2593478041,engagement_time_msec,
1006764.2593478041,ga_session_number,
1006764.2593478041,engaged_session_event,
1006764.2593478041,source,shop.googlemerchandisestore.com
1006764.2593478041,ga_session_number,
1006764.2593478041,page_location,https://shop.googlemerchandisestore.com/Google+Redesign/Apparel/Stan+and+Friends+Onesie+Green
1006764.2593478041,page_referrer,https://shop.googlemerchandisestore.com/store.html?
1006764.2593478041,session_engaged,1
1006764.2593478041,medium,referral
1006764.2593478041,ga_session_id,
1006764.2593478041,engagement_time_msec,
1006764.2593478041,campaign,(referral)
1006764.2593478041,page_title,Stan and Friends Onesie Green
1006764.2593478041,engaged_session_event,
1006764.2593478041,debug_mode,
1006764.2593478041,page_referrer,
1006764.2593478041,ga_session_number,
1006764.2593478041,ga_session_id,
1006764.2593478041,page_title,Google Online Store
1006764.2593478041,page_location,https://googlemerchandisestore.com/
1006764.2593478041,engaged_session_event,
1006764.2593478041,debug_mode,
1006764.2593478041,session_engaged,1
1006764.2593478041,engaged_session_event,

2025-01-23 22:44:16 - root - INFO - SQL:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
WHERE LOWER(`event_name`) = 'purchase'
LIMIT 100;
Results:
user_pseudo_id
3048586.2373315420
5257023.2131424569
7634450.7489916014
7828968.5532093675
17494077.2658372366
22300841.9909876299
33280841.1628915296
47439165.5147551041
49456942.0436829148
2885429.0157235569
8894775.5253595050
62524109.3161787418
18161607.9002799024
24207018.3974015161

2025-01-23 22:44:18 - root - INFO - SQL:
SELECT `user_pseudo_id`, `event_name`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
LIMIT 100;
Results:
user_pseudo_id,event_name
1008499.5928445086,session_start
1008499.5928445086,page_view
1008499.5928445086,page_view
1008499.5928445086,scroll
1008499.5928445086,first_visit
1013760.9231029745,scroll
1013760.9231029745,session_start
1013760.9231029745,user_engagement
1013760.9231029745,first_visit
1013760.9231029745,page_view
1013760.9231029745,page_view
1013760.9231029745,page_view
1013760.9231029745,user_engagement
1014209.5295344253,page_view
1014209.5295344253,user_engagement
1014209.5295344253,page_view
1014209.5295344253,first_visit
1014209.5295344253,session_start
1026137.2290719007,page_view
1026137.2290719007,first_visit
1026137.2290719007,session_start
1028167.1226079449,page_view
1028167.1226079449,first_visit
1028167.1226079449,page_view
1028167.1226079449,session_start
1028167.1226079449,user_engagement
1032092.5249707229,first_visit
1032092.5249707229,session_start
1032092.5249707229,user_engagement
1032092.5249707229,page_view
1032092.5249707229,page_view
1053193.3273260382,page_view
1053193.3273260382,session_start
1053193.3273260382,user_engagement
1053193.3273260382,user_engagement
1053193.3273260382,first_visit
1053193.3273260382,page_view
1053193.3273260382,page_view
1057066.6724870774,session_start
1057066.6724870774,page_view
1057066.6724870774,first_visit
1057265.5844727802,first_visit
1057265.5844727802,scroll
1057265.5844727802,user_engagement
1057265.5844727802,page_view
1057265.5844727802,page_view
1057265.5844727802,page_view
1057265.5844727802,user_engagement
1057265.5844727802,session_start
1065673.0722289663,user_engagement
1065673.0722289663,page_view
1065673.0722289663,user_engagement
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,first_visit
1065673.0722289663,view_item
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,user_engagement
1065673.0722289663,user_engagement
1065673.0722289663,scroll
1065673.0722289663,session_start
1065673.0722289663,user_engagement
1065673.0722289663,add_shipping_info
1065673.0722289663,page_view
1065673.0722289663,user_engagement
1065673.0722289663,user_engagement
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,scroll
1065673.0722289663,user_engagement
1065673.0722289663,page_view

2025-01-23 22:44:20 - root - INFO - SQL:
-- Users active from Jan 1 to Jan 5, 2021
SELECT DISTINCT active_users.`user_pseudo_id`
FROM (
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
-- Excluding users active on Jan 6 and Jan 7, 2021
WHERE active_users.`user_pseudo_id` NOT IN (
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
)
LIMIT 100;
Results:
user_pseudo_id
1002909.5490808649
1005317.0661766703
1019755.1505990457
1040686.3843613593
1052352.6374592258
1063831.2287636950
1064723.3587773894
1078657.7431630909
1090942.3656035032
1091029.8690027225
1100538.7303282538
1110565.1782268698
1113469.1950253831
1115892.5784150898
1122585.7488321709
1128307.8804338977
1134613.7634894426
1146873.1391018144
1150237.3795733230
1152407.0498719030
1158176.7649664163
1161321.2837154002
1162127.7258009994
1193163.2977185902
1215085.1365476037
1224962.9088243391
1227555.8440964013
1240998.2484233559
1252850.0331551815
1254635.4374785888
1272248.3527408128
1273436.8995766746
1276909.6538469251
1281967.0612172650
1315804.4711170020
1322015.5018667302
1323571.6093451149
1337333.7376655274
1337545.1457768752
1346788.0845555279
1349503.8334692563
1351515.4448203569
1359122.4451792116
1364311.9400187078
1367121.2892216686
1373665.5021657907
1380451.8811229172
1392466.8272664309
1396652.0099177607
1402138.5184246691
1405673.2837970999
1411153.8126169951
1412894.3157340807
1421827.9572513749
1421905.2876669825
1431100.3601536868
1441310.9435193216
1447357.9474081641
1467491.0144424693
1469872.0658596547
1472350.0867244313
1479460.0711186525
1481380.1920064669
1486145.0830518341
1492257.1138270046
1493438.1834934820
1499585.9084564597
1506421.3254179692
1514731.7040098386
1517389.5868953250
1520148.2433623014
1524148.6665316369
1532892.3620003291
1537627.2287708814
1540189.8503303096
1540840.8307652027
1541674.7751153834
1542935.3233857088
1543001.0061190370
1549534.8666555998
1559691.3070864144
1561053.3911726952
1572749.7611592304
1581352.9819384508
1592849.2265519225
1594198.5163900495
1605564.2171778452
1614191.8941227146
1620024.8966870933
1638888.9196983491
1663045.9404115911
1676361.4249094214
1680228.3236339760
1682124.6448806669
1695754.0063712697
1701171.7891319767
1722821.4828861908
1725061.6799620601
1726193.3100477031
1738826.5362245141

2025-01-23 22:44:20 - root - INFO - itercount: 0
2025-01-23 22:44:20 - root - INFO - Database Name: bigquery-public-data
Schema Name: ga4_obfuscated_sample_ecommerce
DDL describes table information.
,0
table_name,events_20210109
ddl,"CREATE TABLE `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210109`
(
  event_date STRING,
  event_timestamp INT64,
  event_name STRING,
  event_params ARRAY<STRUCT<key STRING, value STRUCT<string_value STRING, int_value INT64, float_value FLOAT64, double_value FLOAT64>>>,
  event_previous_timestamp INT64,
  event_value_in_usd FLOAT64,
  event_bundle_sequence_id INT64,
  event_server_timestamp_offset INT64,
  user_id STRING,
  user_pseudo_id STRING,
  privacy_info STRUCT<analytics_storage INT64, ads_storage INT64, uses_transient_token STRING>,
  user_properties ARRAY<STRUCT<key INT64, value STRUCT<string_value INT64, int_value INT64, float_value INT64, double_value INT64, set_timestamp_micros INT64>>>,
  user_first_touch_timestamp INT64,
  user_ltv STRUCT<revenue FLOAT64, currency STRING>,
  device STRUCT<category STRING, mobile_brand_name STRING, mobile_model_name STRING, mobile_marketing_name STRING, mobile_os_hardware_model INT64, operating_system STRING, operating_system_version STRING, vendor_id INT64, advertising_id INT64, language STRING, is_limited_ad_tracking STRING, time_zone_offset_seconds INT64, web_info STRUCT<browser STRING, browser_version STRING>>,
  geo STRUCT<continent STRING, sub_continent STRING, country STRING, region STRING, city STRING, metro STRING>,
  app_info STRUCT<id STRING, version STRING, install_store STRING, firebase_app_id STRING, install_source STRING>,
  traffic_source STRUCT<medium STRING, name STRING, source STRING>,
  stream_id INT64,
  platform STRING,
  event_dimensions STRUCT<hostname STRING>,
  ecommerce STRUCT<total_item_quantity INT64, purchase_revenue_in_usd FLOAT64, purchase_revenue FLOAT64, refund_value_in_usd FLOAT64, refund_value FLOAT64, shipping_value_in_usd FLOAT64, shipping_value FLOAT64, tax_value_in_usd FLOAT64, tax_value FLOAT64, unique_items INT64, transaction_id STRING>,
  items ARRAY<STRUCT<item_id STRING, item_name STRING, item_brand STRING, item_variant STRING, item_category STRING, item_category2 STRING, item_category3 STRING, item_category4 STRING, item_category5 STRING, price_in_usd FLOAT64, price FLOAT64, quantity INT64, item_revenue_in_usd FLOAT64, item_revenue FLOAT64, item_refund_in_usd FLOAT64, item_refund FLOAT64, coupon STRING, affiliation STRING, location_id STRING, item_list_id STRING, item_list_name STRING, item_list_index STRING, promotion_id STRING, promotion_name STRING, creative_name STRING, creative_slot STRING>>
);"

Some other tables have the similar structure: ['events_20210109', 'events_20201109', 'events_20210110', 'events_20210123', 'events_20201107', 'events_20201111', 'events_20201228', 'events_20201224', 'events_20210119', 'events_20201105', 'events_20210131', 'events_20201218', 'events_20210124', 'events_20201222', 'events_20210103', 'events_20210127', 'events_20210108', 'events_20201120', 'events_20201130', 'events_20201124', 'events_20210104', 'events_20201115', 'events_20210128', 'events_20210121', 'events_20201114', 'events_20201127', 'events_20210111', 'events_20210118', 'events_20210113', 'events_20201212', 'events_20201113', 'events_20201221', 'events_20210112', 'events_20210120', 'events_20210101', 'events_20201209', 'events_20201206', 'events_20201225', 'events_20201129', 'events_20201112', 'events_20201230', 'events_20210115', 'events_20210107', 'events_20201210', 'events_20201121', 'events_20201215', 'events_20201229', 'events_20201123', 'events_20201204', 'events_20201201', 'events_20210102', 'events_20210106', 'events_20201205', 'events_20201226', 'events_20201211', 'events_20201203', 'events_20201102', 'events_20201106', 'events_20201213', 'events_20201128', 'events_20210105', 'events_20201220', 'events_20201117', 'events_20201231', 'events_20201208', 'events_20201108', 'events_20201214', 'events_20201207', 'events_20201223', 'events_20210117', 'events_20201219', 'events_20201110', 'events_20201122', 'events_20210130', 'events_20201216', 'events_20210126', 'events_20210129', 'events_20210125', 'events_20201227', 'events_20201126', 'events_20201217', 'events_20201101', 'events_20201116', 'events_20201103', 'events_20210122', 'events_20201104', 'events_20210114', 'events_20210116', 'events_20201119', 'events_20201125', 'events_20201118', 'events_20201202']
External knowledge that might be helpful: 
# GA4 - BigQuery Export schema

This article explains the format and schema of the Google Analytics 4 property data and the Google Analytics for Firebase data that is exported to BigQuery.

## Datasets

For each Google Analytics 4 property and each Firebase project that is linked to BigQuery, a single dataset named "analytics_<property_id>" is added to your BigQuery project. Property ID refers to your Analytics Property ID, which you can find in the property settings for your Google Analytics 4 property, and in App Analytics Settings in Firebase. Each Google Analytics 4 property and each app for which BigQuery exporting is enabled will export its data to that single dataset.

## Tables

Within each dataset, a table named `events_YYYYMMDD` is created each day if the Daily export option is enabled.

If the Streaming export option is enabled, a table named`events_intraday_YYYYMMDD`is created. This table is populated continuously as events are recorded throughout the day. This table is deleted at the end of each day once `events_YYYYMMDD` is complete.

Not all devices on which events are triggered send their data to Analytics on the same day the events are triggered. To account for this latency, Analytics will update the daily tables (`events_YYYYMMDD`) with events for those dates for up to three days after the dates of the events. Events will have the correct time stamp regardless of arriving late. Events that arrive after that three-day window are not recorded.

## Columns

Each column in the `events_YYYYMMDD`table represents an event-specific parameter. Note that some parameters are nested within RECORDS, and some RECORDS such as
`[items](https://support.google.com/analytics/answer/7029846?hl=en&ref_topic=9359001&sjid=16041154979191290935-EU#items)`
and
`[event_params](https://support.google.com/analytics/answer/7029846?hl=en&ref_topic=9359001&sjid=16041154979191290935-EU#event_params)`
are repeatable. Table columns are described below.

### event

The event fields contain information that uniquely identifies an event.

| Field name | Data type | Description |
|---|---|---|
| batch_event_index | INTEGER | A number indicating the sequential order of each event within a batch based on their order of occurrence on the device. |
| batch_ordering_id | INTEGER | A monotonically increasing number that is incremented each time a network request is sent from a given page. |
| batch_page_id | INTEGER | A sequential number assigned to a page that increases for each subsequent page within an engagement. |
| event_date | STRING | The date when the event was logged (YYYYMMDD format in the registered timezone of your app). |
| event_timestamp | INTEGER | The time (in microseconds, UTC) when the event was logged on the client. |
| event_previous_timestamp | INTEGER | The time (in microseconds, UTC) when the event was previously logged on the client. |
| event_name | STRING | The name of the event. |
| event_value_in_usd | FLOAT | The currency-converted value (in USD) of the event's "value" parameter. |
| event_bundle_sequence_id | INTEGER | The sequential ID of the bundle in which these events were uploaded. |
| event_server_timestamp_offset | INTEGER | Timestamp offset between collection time and upload time in micros. |

#### event_params RECORD

The event_params RECORD can store campaign-level and contextual event parameters as well as any user-defined event parameters. The event_params RECORD is repeated for each key that is associated with an event. The set of parameters stored in the event_params RECORD is unique to each implementation. To see the complete list of event parameters for your implementation, query the event parameter list.

| Field name | Data type | Description |
|---|---|---|
| event_params.key | STRING | The name of the event parameter. |
| event_params.value | RECORD | A record containing the event parameter's value. |
| event_params.value.string_value | STRING | If the event parameter is represented by a string, such as a URL or campaign name, it is populated in this field. |
| event_params.value.int_value | INTEGER | If the event parameter is represented by an integer, it is populated in this field. |
| event_params.value.double_value | FLOAT | If the event parameter is represented by a double value, it is populated in this field. |
| event_params.value.float_value | FLOAT | If the event parameter is represented by a floating point value, it is populated in this field. This field is not currently in use. |

#### item_params RECORD

The item_params RECORD can store item parameters as well as any user-defined item parameters. The set of parameters stored in the item_params RECORD is unique to each implementation.

| Field name | Data type | Description |
|---|---|---|
| item_params.key | STRING | The name of the item parameter. |
| item_params.value | RECORD | A record containing the item parameter’s value. |
| item_params.value.string_value | STRING | If the item parameter is represented by a string, it is populated in this field. |
| item_params.value.int_value | INTEGER | If the item parameter is represented by an integer, it is populated in this field. |
| item_params.value.double_value | FLOAT | If the item parameter is represented by a double value, it is populated in this field. |
| item_params.value.float_value | FLOAT | If the item parameter is represented by a floating point value, it is populated in this field. | 

### user

The user fields contain information that uniquely identifies the user associated with the event.

| Field name | Data type | Description |
|---|---|---|
| is_active_user | BOOLEAN | Whether the user was active (True) or inactive (False) at any point in the calendar day Included in only the daily tables ( events_YYYYMMDD) . |
| user_id | STRING | The unique ID assigned to a user. |
| user_pseudo_id | STRING | The pseudonymous id (e.g., app instance ID) for the user. |
| user_first_touch_timestamp | INTEGER | The time (in microseconds) at which the user first opened the app or visited the site. |

#### privacy_info fields

The privacy_info fields contain information based on the consent status of a user when consent mode is enabled .

| Field name | Data type | Description |
|---|---|---|
| privacy_info.ads_storage | STRING | Whether ad targeting is enabled for a user. Possible values: Yes, No, Unset |
| privacy_info.analytics_storage | STRING | Whether Analytics storage is enabled for the user. Possible values: Yes, No, Unset |
| privacy_info.uses_transient_token | STRING | Whether a web user has denied Analytics storage and the developer has enabled measurement without cookies based on transient tokens in server data. Possible values: Yes, No, Unset |

#### user_properties RECORD

The user_properties RECORD contains any user properties that you have set. It is repeated for each key that is associated with a user.

| Field name | Data type | Description |
|---|---|---|
| user_properties.key | STRING | The name of the user property. |
| user_properties.value | RECORD | A record for the user property value. |
| user_properties.value.string_value | STRING | The string value of the user property. |
| user_properties.value.int_value | INTEGER | The integer value of the user property. |
| user_properties.value.double_value | FLOAT | The double value of the user property. |
| user_properties.value.float_value | FLOAT | This field is currently unused. |
| user_properties.value.set_timestamp_micros | INTEGER | The time (in microseconds) at which the user property was last set. |

#### user_ltv RECORD

The user_ltv RECORD contains Lifetime Value information about the user. This RECORD is not populated in intraday tables.

| Field name | Data type | Description |
|---|---|---|
| user_ltv.revenue | FLOAT | The Lifetime Value (revenue) of the user. This field is not populated in intraday tables. |
| user_ltv.currency | STRING | The Lifetime Value (currency) of the user. This field is not populated in intraday tables. | 

### device

The device RECORD contains information about the device from which the event originated.

| Field name | Data type | Description |
|---|---|---|
| device.category | STRING | The device category (mobile, tablet, desktop). |
| device.mobile_brand_name | STRING | The device brand name. |
| device.mobile_model_name | STRING | The device model name. |
| device.mobile_marketing_name | STRING | The device marketing name. |
| device.mobile_os_hardware_model | STRING | The device model information retrieved directly from the operating system. |
| device.operating_system | STRING | The operating system of the device. |
| device.operating_system_version | STRING | The OS version. |
| device.vendor_id | STRING | IDFV (present only if IDFA is not collected). |
| device.advertising_id | STRING | Advertising ID/IDFA. |
| device.language | STRING | The OS language. |
| device.time_zone_offset_seconds | INTEGER | The offset from GMT in seconds. |
| device.is_limited_ad_tracking | BOOLEAN | The device's Limit Ad Tracking setting. On iOS14+, returns false if the IDFA is non-zero. |
| device.web_info.browser | STRING | The browser in which the user viewed content. |
| device.web_info.browser_version | STRING | The version of the browser in which the user viewed content. |
| device.web_info.hostname | STRING | The hostname associated with the logged event. | 

### geo

The geo RECORD contains information about the geographic location where the event was initiated.

| Field name | Data type | Description |
|---|---|---|
| geo.continent | STRING | The continent from which events were reported, based on IP address. |
| geo.sub_continent | STRING | The subcontinent from which events were reported, based on IP address. |
| geo.country | STRING | The country from which events were reported, based on IP address. |
| geo.region | STRING | The region from which events were reported, based on IP address. |
| geo.metro | STRING | The metro from which events were reported, based on IP address. |
| geo.city | STRING | The city from which events were reported, based on IP address. | 

### app_info

The app_info RECORD contains information about the app in which the event was initiated. | Field name | Data type | Description |
|---|---|---|
| app_info.id | STRING | The package name or bundle ID of the app. |
| app_info.firebase_app_id | STRING | The Firebase App ID associated with the app |
| app_info.install_source | STRING | The store that installed the app. |
| app_info.version | STRING | The app's versionName (Android) or short bundle version. | 

### collected_traffic_source

The collected_traffic_source RECORD contains the traffic source data that was collected with the event.

| Field name | Data type | Description |
|---|---|---|
| manual_campaign_id | STRING | The manual campaign id (utm_id) that was collected with the event. |
| manual_campaign_name | STRING | The manual campaign name (utm_campaign) that was collected with the event. |
| manual_source | STRING | The manual campaign source (utm_source) that was collected with the event. Also includes parsed parameters from referral params, not just UTM values. |
| manual_medium | STRING | The manual campaign medium (utm_medium) that was collected with the event. Also includes parsed parameters from referral params, not just UTM values. |
| manual_term | STRING | The manual campaign keyword/term (utm_term) that was collected with the event. |
| manual_content | STRING | The additional manual campaign metadata (utm_content) that was collected with the event. |
| manual_creative_format | STRING | The manual campaign creative format (utm_creative_format) that was collected with the event. |
| manual_marketing_tactic | STRING | The manual campaign marketing tactic (utm_marketing_tactic) that was collected with the event. |
| manual_source_platform | STRING | The manual campaign source platform (utm_source_platform) that was collected with the event. |
| gclid | STRING | The Google click identifier that was collected with the event. |
| dclid | STRING | The DoubleClick Click Identifier for Display and Video 360 and Campaign Manager 360 that was collected with the event. |
| srsltid | STRING | The Google Merchant Center identifier that was collected with the event. | 

### session_traffic_source_last_click

The session_traffic_source_last_click RECORD contains the last-click attributed session traffic source data across Google ads and manual contexts, where available.

| Field Name | Data Type | Description |
|---|---|---|
| session_traffic_source_last_click. manual_campaign.campaign_id | STRING | The ID of the last clicked manual campaign |
| session_traffic_source_last_click. manual_campaign.campaign_name | STRING | The name of the last clicked manual campaign |
| session_traffic_source_last_click. manual_campaign.medium | STRING | The medium of the last clicked manual campaign (e.g., paid search, organic search, email) |
| session_traffic_source_last_click. manual_campaign.term | STRING | The keyword/search term of the last clicked manual campaign |
| session_traffic_source_last_click. manual_campaign.content | STRING | Additional metadata of the last clicked manual campaign |
| session_traffic_source_last_click. manual_campaign.source_platform | STRING | The platform of the last clicked manual campaign (e.g., search engine, social media) |
| session_traffic_source_last_click. manual_campaign.source | STRING | The specific source within the platform of the last clicked manual campaign |
| session_traffic_source_last_click. manual_campaign.creative_format | STRING | The format of the creative of the last clicked manual campaign |
| session_traffic_source_last_click. manual_campaign.marketing_tactic | STRING | The marketing tactic of the last clicked manual campaign |
| session_traffic_source_last_click. google_ads_campaign.customer_id | STRING | The customer ID associated with the Google Ads account |
| session_traffic_source_last_click. google_ads_campaign.account_name | STRING | The name of the Google Ads account |
| session_traffic_source_last_click. google_ads_campaign.campaign_id | STRING | The ID of the Google Ads campaign |
| session_traffic_source_last_click. google_ads_campaign.campaign_name | STRING | The name of the Google Ads campaign |
| session_traffic_source_last_click. google_ads_campaign.ad_group_id | STRING | The ID of the ad group within the Google Ads campaign |
| session_traffic_source_last_click. google_ads_campaign.ad_group_name | STRING | The name of the ad group within the Google Ads campaign | 

### traffic_source

The traffic_source RECORD contains information about the traffic source that first acquired the user. This record is not populated in intraday tables. Note: The traffic_source values do not change if the user interacts with subsequent campaigns after installation.

| Field name | Data type | Description |
|---|---|---|
| traffic_source.name | STRING | Name of the marketing campaign that first acquired the user. This field is not populated in intraday tables. |
| traffic_source.medium | STRING | Name of the medium (paid search, organic search, email, etc.) that first acquired the user. This field is not populated in intraday tables. |
| traffic_source.source | STRING | Name of the network that first acquired the user. This field is not populated in intraday tables. | 

### stream and platform

The stream and platform fields contain information about the stream and the app platform.

| Field name | Data type | Description |
|---|---|---|
| stream_id | STRING | The numeric ID of the data stream from which the event originated. |
| platform | STRING | The data stream platform (Web, IOS or Android) from which the event originated. | 

### ecommerce

This ecommerce RECORD contains information about any ecommerce events that have been setup on a website or app.

| Field name | Data type | Description |
|---|---|---|
| ecommerce.total_item_quantity | INTEGER | Total number of items in this event, which is the sum of items.quantity. |
| ecommerce.purchase_revenue_in_usd | FLOAT | Purchase revenue of this event, represented in USD with standard unit. Populated for purchase event only. |
| ecommerce.purchase_revenue | FLOAT | Purchase revenue of this event, represented in local currency with standard unit. Populated for purchase event only. |
| ecommerce.refund_value_in_usd | FLOAT | The amount of refund in this event, represented in USD with standard unit. Populated for refund event only. |
| ecommerce.refund_value | FLOAT | The amount of refund in this event, represented in local currency with standard unit. Populated for refund event only. |
| ecommerce.shipping_value_in_usd | FLOAT | The shipping cost in this event, represented in USD with standard unit. |
| ecommerce.shipping_value | FLOAT | The shipping cost in this event, represented in local currency. |
| ecommerce.tax_value_in_usd | FLOAT | The tax value in this event, represented in USD with standard unit. |
| ecommerce.tax_value | FLOAT | The tax value in this event, represented in local currency with standard unit. |
| ecommerce.transaction_id | STRING | The transaction ID of the ecommerce transaction. |
| ecommerce.unique_items | INTEGER | The number of unique items in this event, based on item_id, item_name, and item_brand. | 

### items

The items RECORD contains information about items included in an event. It is repeated for each item.

| Field name | Data type | Description |
|---|---|---|
| items.item_id | STRING | The ID of the item. |
| items.item_name | STRING | The name of the item. |
| items.item_brand | STRING | The brand of the item. |
| items.item_variant | STRING | The variant of the item. |
| items.item_category | STRING | The category of the item. |
| items.item_category2 | STRING | The sub category of the item. |
| items.item_category3 | STRING | The sub category of the item. |
| items.item_category4 | STRING | The sub category of the item. |
| items.item_category5 | STRING | The sub category of the item. |
| items.price_in_usd | FLOAT | The price of the item, in USD with standard unit. |
| items.price | FLOAT | The price of the item in local currency. |
| items.quantity | INTEGER | The quantity of the item. Quantity set to 1 if not specified. |
| items.item_revenue_in_usd | FLOAT | The revenue of this item, calculated as price_in_usd * quantity. It is populated for purchase events only, in USD with standard unit. |
| items.item_revenue | FLOAT | The revenue of this item, calculated as price * quantity. It is populated for purchase events only, in local currency with standard unit. |
| items.item_refund_in_usd | FLOAT | The refund value of this item, calculated as price_in_usd * quantity. It is populated for refund events only, in USD with standard unit. |
| items.item_refund | FLOAT | The refund value of this item, calculated as price * quantity. It is populated for refund events only, in local currency with standard unit. |
| items.coupon | STRING | Coupon code applied to this item. |
| items.affiliation | STRING | A product affiliation to designate a supplying company or brick and mortar store location. |
| items.location_id | STRING | The location associated with the item. |
| items.item_list_id | STRING | The ID of the list in which the item was presented to the user. |
| items.item_list_name | STRING | The name of the list in which the item was presented to the user. |
| Items.item_list_index | STRING | The position of the item in a list. |
| items.promotion_id | STRING | The ID of a product promotion. |
| items.promotion_name | STRING | The name of a product promotion. |
| items.creative_name | STRING | The name of a creative used in a promotional spot. |
| items.creative_slot | STRING | The name of a creative slot. |

#### item_params RECORD

The item_params RECORD stores the custom item parameters that you defined. Note that predefined item parameters like item_id, item_name etc, are not included here, instead they are exported as explicit fields. The set of parameters stored in the item_params RECORD is unique to each implementation. To learn more about ecommerce implementations and the Google Analytics 4 items array, see Measure ecommerce .

| Field name | Data type | Description |
|---|---|---|
| items.item_params.key | STRING | The name of the item parameter. |
| items.item_params.value | RECORD | A record containing the item parameter’s value. |
| items.item_params.value.string_value | STRING | If the item parameter is represented by a string, it is populated in this field. |
| items.item_params.value.int_value | INTEGER | If the item parameter is represented by an integer, it is populated in this field. |
| items.item_params.value.double_value | FLOAT | If the item parameter is represented by a double value, it is populated in this field. |
| items.item_params.value.float_value | FLOAT | If the item parameter is represented by a floating point value, it is populated in this field. | 

## Rows

Data for a single event may be represented in one or multiple rows, depending on whether it contains repeated RECORDS. A `page_view` event with multiple
`[event_params](https://support.google.com/analytics/answer/7029846?hl=en&ref_topic=9359001&sjid=16041154979191290935-EU#event_params)`,
for example, would look similar to the following table. The initial row contains the event name, date, timestamp and other non-repeated data items. The
`[event_params](https://support.google.com/analytics/answer/7029846?hl=en&ref_topic=9359001&sjid=16041154979191290935-EU#event_params)`
RECORD is repeated for each parameter associated with the event. These repeated RECORDS are populated in subsequent rows directly under the initial event row.

| event_date | event_timestamp | event_name | event_params.key | event_params_value.string_value |
|---|---|---|---|---|
| 20220222 | 1643673600483790 | page_view | page_location | https://example.com |
| - | - | - | page_title | Home |
| - | - | - | medium | referral |
| - | - | - | source | google |
| - | - | - | page_referrer | https://www.google.com |
| - | - | - | parameters... | values... |
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'ga4_obfuscated_sample_ecommerce': ['events_20201101', 'events_20201102', 'events_20201103', 'events_20201104', 'events_20201105', 'events_20201106', 'events_20201107', 'events_20201108', 'events_20201109', 'events_20201110', 'events_20201111', 'events_20201112', 'events_20201113', 'events_20201114', 'events_20201115', 'events_20201116', 'events_20201117', 'events_20201118', 'events_20201119', 'events_20201120', 'events_20201121', 'events_20201122', 'events_20201123', 'events_20201124', 'events_20201125', 'events_20201126', 'events_20201127', 'events_20201128', 'events_20201129', 'events_20201130', 'events_20201201', 'events_20201202', 'events_20201203', 'events_20201204', 'events_20201205', 'events_20201206', 'events_20201207', 'events_20201208', 'events_20201209', 'events_20201210', 'events_20201211', 'events_20201212', 'events_20201213', 'events_20201214', 'events_20201215', 'events_20201216', 'events_20201217', 'events_20201218', 'events_20201219', 'events_20201220', 'events_20201221', 'events_20201222', 'events_20201223', 'events_20201224', 'events_20201225', 'events_20201226', 'events_20201227', 'events_20201228', 'events_20201229', 'events_20201230', 'events_20201231', 'events_20210101', 'events_20210102', 'events_20210103', 'events_20210104', 'events_20210105', 'events_20210106', 'events_20210107', 'events_20210108', 'events_20210109', 'events_20210110', 'events_20210111', 'events_20210112', 'events_20210113', 'events_20210114', 'events_20210115', 'events_20210116', 'events_20210117', 'events_20210118', 'events_20210119', 'events_20210120', 'events_20210121', 'events_20210122', 'events_20210123', 'events_20210124', 'events_20210125', 'events_20210126', 'events_20210127', 'events_20210128', 'events_20210129', 'events_20210130', 'events_20210131']}}
Begin Exploring Related Columns
**Relevant Columns and their Potential Usage:**

- `event_date`: Used to filter events by specific dates.
- `user_pseudo_id`: Used to identify unique pseudo users.
- `event_name`: Could be used to analyze specific events if needed.

**Conditions that may be used:**

- `event_date` between '20210101' and '20210105' to find users active in the last 7 days excluding the last 2 days as of January 7, 2021.
- `event_date` in ('20210106', '20210107') to check for inactivity in the last 2 days as of January 7, 2021.

---

**SQL Queries:**

1. **List distinct `user_pseudo_id` active on January 1, 2021.**

```sql
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
LIMIT 100;
```

2. **Retrieve `event_date` and `user_pseudo_id` from events on January 2, 2021.**

```sql
SELECT `event_date`, `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
LIMIT 100;
```

3. **Get unique `event_date` values from events on January 3, 2021.**

```sql
SELECT DISTINCT `event_date`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
LIMIT 100;
```

4. **Find unique `user_pseudo_id` who were active between January 1 and January 5, 2021.**

*(Note: Since each day's data is in a separate table, we'll need to UNION the results.)*

```sql
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
LIMIT 100;
```

5. **List `user_pseudo_id` who were active on January 6, 2021.**

```sql
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
LIMIT 100;
```

6. **Identify `user_pseudo_id` inactive on January 6 and 7, 2021.**

*(We can check for absence by excluding the users found in these dates.)*

```sql
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
WHERE `user_pseudo_id` NOT IN (
  SELECT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION DISTINCT
  SELECT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
)
LIMIT 100;
```

7. **Extract `event_params` keys and values for events on January 5, 2021.**

```sql
SELECT t.`user_pseudo_id`, f.key AS param_key, f.value.string_value AS param_value
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105` AS t,
UNNEST(t.`event_params`) AS f
LIMIT 100;
```

8. **Find users who performed a 'purchase' event on January 3, 2021.**

```sql
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
WHERE LOWER(`event_name`) = 'purchase'
LIMIT 100;
```

9. **Retrieve `user_pseudo_id` and `event_name` from events on January 4, 2021.**

```sql
SELECT `user_pseudo_id`, `event_name`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
LIMIT 100;
```

10. **List `user_pseudo_id` active in the last 7 days but inactive in the last 2 days as of January 7, 2021.**

*(Combining data to find the required users.)*

```sql
-- Users active from Jan 1 to Jan 5, 2021
SELECT DISTINCT active_users.`user_pseudo_id`
FROM (
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
-- Excluding users active on Jan 6 and Jan 7, 2021
WHERE active_users.`user_pseudo_id` NOT IN (
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
)
LIMIT 100;
```

---

These queries help in understanding the values and structure of relevant columns and assist in formulating the final query to answer the task.Query:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
LIMIT 100;
Answer:
user_pseudo_id
1003046.9452926974
1023282.4639847710
1026043.4481623879
1026409.1551860912
1032138.1796039159
1037928.9294661675
1045950.7099606829
1051288.9523352374
1054372.6755770068
1064574.6224708641
1066655.6240997015
1080064.0071613184
1082746.7285674512
1097358.9593491100
1104313.9641823605
1107198.5152483918
1112823.8475775772
1116587.1725520171
1127824.3503063268
1134825.6533092350
1138692.0103796281
1160488.2375923167
1164648.0319944302
1168297.2853699605
1170405.4925804370
1174066.6437027818
1178889.6850461952
1188134.8498680538
1205590.2516186397
1211099.8247563235
1213932.4846099850
1215465.1474478000
1218586.5350251990
1240786.8917310160
1246063.3665874179
1255322.2973246181
1259302.9069938124
1269423.6724500672
1275797.1936238018
1277765.6068129494
1296701.2382814729
1308776.9803994658
1318624.9067804638
1320187.6719997668
1326289.2331853598
1333091.0887566663
1352892.5937639189
1375005.2583322863
1382535.7283137323
1385112.5897617274
1396456.6482506733
1401649.9529464111
1422161.0871788362
1437260.5988606411
1448835.0934102497
1453555.6810069410
1453951.1387928223
1456890.1673716823
1459436.8826692932
1473136.1149103090
1485472.4390061373
1499810.5142637849
1501018.3808301483
1503421.5168556763
1515646.3111272928
1518831.1475327211
1519124.8641457524
1534689.9343310805
1539940.5253610440
1543004.7243225422
1550901.3980286554
1564015.6880680172
1575061.4789497906
1582390.8206269591
1616136.8949543878
1619900.3195973863
1620024.8966870933
1646722.0078157231
1674937.2501954408
1677450.9117017807
1680043.1145812114
1684301.4109152707
1688147.2939632391
1693134.9790437518
1694910.7733232660
1699037.5870634483
1707918.4797422153
1713530.3382800695
1719564.6333875501
1729803.5105688857
1734528.1974041204
1745072.0004799132
1745171.2191701968
1749246.8534368616
1759212.2216007988
1762263.6990880514
1765594.3047173009
1784794.0627143380
1804199.2014328535
1820733.6464417466
Query:
SELECT `event_date`, `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
LIMIT 100;
Answer:
event_date,user_pseudo_id
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1005484.1092567297
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1019468.5334749980
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1020695.6921096883
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1034552.3956022963
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1035433.9962487028
20210102,1054184.5156674867
20210102,1054184.5156674867
20210102,1054184.5156674867
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
20210102,1055969.5872512303
Query:
SELECT DISTINCT `event_date`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
LIMIT 100;
Answer:
event_date
20210103
Query:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
UNION DISTINCT
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
LIMIT 100;
Answer:
user_pseudo_id
1006764.2593478041
1011730.5937310445
1025554.7155857902
1028337.8871283783
1031058.2518048614
1032606.3576924541
1056329.7612609650
1068701.3018406914
1071257.2904972531
1075223.2681702246
1079374.1910653935
1082920.8892141550
1086535.4875940498
1087808.3711873816
1089575.2761256602
1096553.1505774248
1102947.5096330985
1113194.4596973553
1115003.4680616065
1117874.3324542795
1122855.4085911936
1124854.6111785259
1129742.7402804867
1132555.2301002365
1133964.7947497780
1141770.2200021598
1153093.0119048067
1160488.2375923167
1172217.8534916097
1182923.0909175622
1186112.8377343718
1187482.7824786316
1192643.6460701245
1197568.4892852272
1203853.5073281021
1204844.2691721789
1215841.5184851096
1218242.9191016186
1222409.1951536768
1225314.7220680786
1226878.4100446319
1241220.1441674551
1241629.8724178917
1243376.8542545034
1244606.6899321311
1247686.2070404262
1254011.7545907964
1258911.4567959870
1260992.5282234785
1261100.0843906075
1264306.5410019941
1264993.3645153639
1272248.3527408128
1274495.5184398589
1275384.3626297214
1276342.9126460945
1278427.6141690556
1280266.1333397958
1284133.7579148747
1285418.4651557245
1286945.3645505196
1291228.5655196810
1292185.5593921414
1301862.0758294607
1304296.6040710271
1304588.7510213626
1306493.1469289903
1307038.3688504236
1307807.0071561878
1309149.1848587742
1318068.2020052683
1318879.8038263711
1321029.7577861325
1321742.4551192896
1325482.4574108673
1325688.1519909745
1326179.1742099424
1336694.6432583433
1342157.7728855384
1345509.3936713223
1348068.1593058656
1352587.0117468163
1356010.8691002356
1360671.0435504959
1379775.2562814073
1397822.5235180436
1399527.2790058720
1404886.4182310055
1406007.4609789626
1414193.2963567157
1432451.2006018969
1434548.8581092193
1439687.4557873700
1455644.0190003959
1455809.7208111760
1457888.4327764965
1460768.9286238752
1469643.2045997031
1474066.3112067437
1484308.7242312753
Query:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
LIMIT 100;
Answer:
user_pseudo_id
1001303.4827739208
1014060.1100191558
1015239.8458513676
1023213.5350684501
1025773.0920505617
1033020.5841925327
1042140.6802444773
1045720.9269650087
1049106.9990499157
1049739.7909391395
1060274.1098179258
1065322.6541302193
1069165.2811408476
1069494.0113686800
1072513.2161702512
1075240.7394043586
1075333.9269112947
1078788.8328338285
1081165.5314971225
1083792.6034832516
1084471.2677471598
1086668.0925005810
1086843.9052907013
1087271.0550084610
1087808.3711873816
1095740.4839642689
1111626.7442894456
1114964.3576383224
1115377.5526866793
1118833.2974558782
1126378.6956818362
1128261.6033595713
1128289.3662024583
1130911.8567954377
1133313.1103337373
1133962.3740970739
1135774.0646413552
1141870.4386338572
1144150.5821344535
1144792.8191246270
1146837.4730107711
1148615.3691736909
1151687.1996189042
1153093.0119048067
1160488.2375923167
1163998.9977514528
1169456.0744217795
1170673.0496256889
1173439.7311015929
1175417.7164964556
1177018.6074439798
1180762.6954492448
1185502.9456478888
1185607.4529846208
1211099.8247563235
1213730.2023854144
1214408.9886831537
1214882.5762650867
1216128.7020381390
1218031.2772164166
1221611.6181416961
1223402.7111643409
1224512.5360000287
1230929.5891057900
1243180.2889994882
1245742.1517954276
1250075.3055872841
1251677.0033366371
1252675.9812778248
1253621.4143036992
1255130.2864074728
1256871.5825332697
1257670.9852008771
1259037.7018534149
1264306.5410019941
1270650.6052564575
1274840.8216292245
1278990.5126400811
1280885.4587684428
1282586.4517477452
1283422.3494279515
1285418.4651557245
1285421.1033375628
1291684.5715903210
1295893.9741062295
1304296.6040710271
1304588.7510213626
1304912.9788917690
1306493.1469289903
1311409.7691253264
1312237.6155331000
1314525.6769250991
1318199.4944291645
1324330.4963761152
1324723.7882312578
1325005.1519738149
1326729.2901375460
1328537.2795814770
1332716.7234827218
1357835.0893556888
Query:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
WHERE `user_pseudo_id` NOT IN (
  SELECT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION DISTINCT
  SELECT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
)
LIMIT 100;
Answer:
user_pseudo_id
1003046.9452926974
1023282.4639847710
1026043.4481623879
1026409.1551860912
1032138.1796039159
1037928.9294661675
1045950.7099606829
1051288.9523352374
1054372.6755770068
1064574.6224708641
1066655.6240997015
1080064.0071613184
1082746.7285674512
1097358.9593491100
1104313.9641823605
1107198.5152483918
1112823.8475775772
1116587.1725520171
1127824.3503063268
1134825.6533092350
1138692.0103796281
1164648.0319944302
1168297.2853699605
1170405.4925804370
1174066.6437027818
1178889.6850461952
1188134.8498680538
1205590.2516186397
1213932.4846099850
1215465.1474478000
1218586.5350251990
1240786.8917310160
1246063.3665874179
1255322.2973246181
1259302.9069938124
1269423.6724500672
1275797.1936238018
1277765.6068129494
1296701.2382814729
1308776.9803994658
1318624.9067804638
1320187.6719997668
1326289.2331853598
1333091.0887566663
1352892.5937639189
1375005.2583322863
1382535.7283137323
1385112.5897617274
1396456.6482506733
1401649.9529464111
1422161.0871788362
1437260.5988606411
1448835.0934102497
1453555.6810069410
1453951.1387928223
1456890.1673716823
1459436.8826692932
1473136.1149103090
1485472.4390061373
1499810.5142637849
1501018.3808301483
1503421.5168556763
1515646.3111272928
1518831.1475327211
1519124.8641457524
1534689.9343310805
1539940.5253610440
1543004.7243225422
1550901.3980286554
1564015.6880680172
1575061.4789497906
1582390.8206269591
1616136.8949543878
1619900.3195973863
1620024.8966870933
1646722.0078157231
1674937.2501954408
1677450.9117017807
1680043.1145812114
1684301.4109152707
1688147.2939632391
1693134.9790437518
1694910.7733232660
1699037.5870634483
1707918.4797422153
1713530.3382800695
1719564.6333875501
1729803.5105688857
1734528.1974041204
1745072.0004799132
1745171.2191701968
1749246.8534368616
1759212.2216007988
1762263.6990880514
1765594.3047173009
1784794.0627143380
1804199.2014328535
1820733.6464417466
1829763.3860332334
1846974.0316175078
Query:
SELECT t.`user_pseudo_id`, f.key AS param_key, f.value.string_value AS param_value
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105` AS t,
UNNEST(t.`event_params`) AS f
LIMIT 100;
Answer:
user_pseudo_id,param_key,param_value
1006764.2593478041,percent_scrolled,
1006764.2593478041,debug_mode,
1006764.2593478041,page_title,Google Online Store
1006764.2593478041,page_referrer,
1006764.2593478041,page_location,https://googlemerchandisestore.com/
1006764.2593478041,engaged_session_event,
1006764.2593478041,engagement_time_msec,
1006764.2593478041,ga_session_number,
1006764.2593478041,ga_session_id,
1006764.2593478041,session_engaged,1
1006764.2593478041,engaged_session_event,
1006764.2593478041,ga_session_number,
1006764.2593478041,page_title,Google Online Store
1006764.2593478041,engagement_time_msec,
1006764.2593478041,session_engaged,1
1006764.2593478041,page_referrer,
1006764.2593478041,page_location,https://googlemerchandisestore.com/
1006764.2593478041,debug_mode,
1006764.2593478041,ga_session_id,
1006764.2593478041,page_location,https://shop.googlemerchandisestore.com/Google+Redesign/Apparel/Stan+and+Friends+Onesie+Green
1006764.2593478041,session_engaged,1
1006764.2593478041,ga_session_id,
1006764.2593478041,page_title,Stan and Friends Onesie Green
1006764.2593478041,debug_mode,
1006764.2593478041,page_referrer,https://shop.googlemerchandisestore.com/store.html?
1006764.2593478041,engagement_time_msec,
1006764.2593478041,ga_session_number,
1006764.2593478041,engaged_session_event,
1006764.2593478041,source,shop.googlemerchandisestore.com
1006764.2593478041,ga_session_number,
1006764.2593478041,page_location,https://shop.googlemerchandisestore.com/Google+Redesign/Apparel/Stan+and+Friends+Onesie+Green
1006764.2593478041,page_referrer,https://shop.googlemerchandisestore.com/store.html?
1006764.2593478041,session_engaged,1
1006764.2593478041,medium,referral
1006764.2593478041,ga_session_id,
1006764.2593478041,engagement_time_msec,
1006764.2593478041,campaign,(referral)
1006764.2593478041,page_title,Stan and Friends Onesie Green
1006764.2593478041,engaged_session_event,
1006764.2593478041,debug_mode,
1006764.2593478041,page_referrer,
1006764.2593478041,ga_session_number,
1006764.2593478041,ga_session_id,
1006764.2593478041,page_title,Google Online Store
1006764.2593478041,page_location,https://googlemerchandisestore.com/
1006764.2593478041,engaged_session_event,
1006764.2593478041,debug_mode,
1006764.2593478041,session_engaged,1
1006764.2593478041,engaged_session_event,
Query:
SELECT DISTINCT `user_pseudo_id`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
WHERE LOWER(`event_name`) = 'purchase'
LIMIT 100;
Answer:
user_pseudo_id
3048586.2373315420
5257023.2131424569
7634450.7489916014
7828968.5532093675
17494077.2658372366
22300841.9909876299
33280841.1628915296
47439165.5147551041
49456942.0436829148
2885429.0157235569
8894775.5253595050
62524109.3161787418
18161607.9002799024
24207018.3974015161
Query:
SELECT `user_pseudo_id`, `event_name`
FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
LIMIT 100;
Answer:
user_pseudo_id,event_name
1008499.5928445086,session_start
1008499.5928445086,page_view
1008499.5928445086,page_view
1008499.5928445086,scroll
1008499.5928445086,first_visit
1013760.9231029745,scroll
1013760.9231029745,session_start
1013760.9231029745,user_engagement
1013760.9231029745,first_visit
1013760.9231029745,page_view
1013760.9231029745,page_view
1013760.9231029745,page_view
1013760.9231029745,user_engagement
1014209.5295344253,page_view
1014209.5295344253,user_engagement
1014209.5295344253,page_view
1014209.5295344253,first_visit
1014209.5295344253,session_start
1026137.2290719007,page_view
1026137.2290719007,first_visit
1026137.2290719007,session_start
1028167.1226079449,page_view
1028167.1226079449,first_visit
1028167.1226079449,page_view
1028167.1226079449,session_start
1028167.1226079449,user_engagement
1032092.5249707229,first_visit
1032092.5249707229,session_start
1032092.5249707229,user_engagement
1032092.5249707229,page_view
1032092.5249707229,page_view
1053193.3273260382,page_view
1053193.3273260382,session_start
1053193.3273260382,user_engagement
1053193.3273260382,user_engagement
1053193.3273260382,first_visit
1053193.3273260382,page_view
1053193.3273260382,page_view
1057066.6724870774,session_start
1057066.6724870774,page_view
1057066.6724870774,first_visit
1057265.5844727802,first_visit
1057265.5844727802,scroll
1057265.5844727802,user_engagement
1057265.5844727802,page_view
1057265.5844727802,page_view
1057265.5844727802,page_view
1057265.5844727802,user_engagement
1057265.5844727802,session_start
1065673.0722289663,user_engagement
1065673.0722289663,page_view
1065673.0722289663,user_engagement
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,first_visit
1065673.0722289663,view_item
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,user_engagement
1065673.0722289663,user_engagement
1065673.0722289663,scroll
1065673.0722289663,session_start
1065673.0722289663,user_engagement
1065673.0722289663,add_shipping_info
1065673.0722289663,page_view
1065673.0722289663,user_engagement
1065673.0722289663,user_engagement
1065673.0722289663,page_view
1065673.0722289663,page_view
1065673.0722289663,scroll
1065673.0722289663,user_engagement
1065673.0722289663,page_view
Query:
-- Users active from Jan 1 to Jan 5, 2021
SELECT DISTINCT active_users.`user_pseudo_id`
FROM (
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
-- Excluding users active on Jan 6 and Jan 7, 2021
WHERE active_users.`user_pseudo_id` NOT IN (
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION DISTINCT
  SELECT DISTINCT `user_pseudo_id`
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
)
LIMIT 100;
Answer:
user_pseudo_id
1002909.5490808649
1005317.0661766703
1019755.1505990457
1040686.3843613593
1052352.6374592258
1063831.2287636950
1064723.3587773894
1078657.7431630909
1090942.3656035032
1091029.8690027225
1100538.7303282538
1110565.1782268698
1113469.1950253831
1115892.5784150898
1122585.7488321709
1128307.8804338977
1134613.7634894426
1146873.1391018144
1150237.3795733230
1152407.0498719030
1158176.7649664163
1161321.2837154002
1162127.7258009994
1193163.2977185902
1215085.1365476037
1224962.9088243391
1227555.8440964013
1240998.2484233559
1252850.0331551815
1254635.4374785888
1272248.3527408128
1273436.8995766746
1276909.6538469251
1281967.0612172650
1315804.4711170020
1322015.5018667302
1323571.6093451149
1337333.7376655274
1337545.1457768752
1346788.0845555279
1349503.8334692563
1351515.4448203569
1359122.4451792116
1364311.9400187078
1367121.2892216686
1373665.5021657907
1380451.8811229172
1392466.8272664309
1396652.0099177607
1402138.5184246691
1405673.2837970999
1411153.8126169951
1412894.3157340807
1421827.9572513749
1421905.2876669825
1431100.3601536868
1441310.9435193216
1447357.9474081641
1467491.0144424693
1469872.0658596547
1472350.0867244313
1479460.0711186525
1481380.1920064669
1486145.0830518341
1492257.1138270046
1493438.1834934820
1499585.9084564597
1506421.3254179692
1514731.7040098386
1517389.5868953250
1520148.2433623014
1524148.6665316369
1532892.3620003291
1537627.2287708814
1540189.8503303096
1540840.8307652027
1541674.7751153834
1542935.3233857088
1543001.0061190370
1549534.8666555998
1559691.3070864144
1561053.3911726952
1572749.7611592304
1581352.9819384508
1592849.2265519225
1594198.5163900495
1605564.2171778452
1614191.8941227146
1620024.8966870933
1638888.9196983491
1663045.9404115911
1676361.4249094214
1680228.3236339760
1682124.6448806669
1695754.0063712697
1701171.7891319767
1722821.4828861908
1725061.6799620601
1726193.3100477031
1738826.5362245141
End Exploring Related Columns
Task: How many pseudo users were active in the last 7 days but inactive in the last 2 days as of January 7, 2021?

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Number_of_pseudo_users
num:int
(Attention: answer in one row)
```

This represents the number of unique pseudo users (`user_pseudo_id`) who were active between December 31, 2020, and January 5, 2021 (the last 7 days as of January 7, 2021), but inactive on January 6 and January 7, 2021 (the last 2 days as of January 7, 2021)..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'ga4_obfuscated_sample_ecommerce': ['events_20201101', 'events_20201102', 'events_20201103', 'events_20201104', 'events_20201105', 'events_20201106', 'events_20201107', 'events_20201108', 'events_20201109', 'events_20201110', 'events_20201111', 'events_20201112', 'events_20201113', 'events_20201114', 'events_20201115', 'events_20201116', 'events_20201117', 'events_20201118', 'events_20201119', 'events_20201120', 'events_20201121', 'events_20201122', 'events_20201123', 'events_20201124', 'events_20201125', 'events_20201126', 'events_20201127', 'events_20201128', 'events_20201129', 'events_20201130', 'events_20201201', 'events_20201202', 'events_20201203', 'events_20201204', 'events_20201205', 'events_20201206', 'events_20201207', 'events_20201208', 'events_20201209', 'events_20201210', 'events_20201211', 'events_20201212', 'events_20201213', 'events_20201214', 'events_20201215', 'events_20201216', 'events_20201217', 'events_20201218', 'events_20201219', 'events_20201220', 'events_20201221', 'events_20201222', 'events_20201223', 'events_20201224', 'events_20201225', 'events_20201226', 'events_20201227', 'events_20201228', 'events_20201229', 'events_20201230', 'events_20201231', 'events_20210101', 'events_20210102', 'events_20210103', 'events_20210104', 'events_20210105', 'events_20210106', 'events_20210107', 'events_20210108', 'events_20210109', 'events_20210110', 'events_20210111', 'events_20210112', 'events_20210113', 'events_20210114', 'events_20210115', 'events_20210116', 'events_20210117', 'events_20210118', 'events_20210119', 'events_20210120', 'events_20210121', 'events_20210122', 'events_20210123', 'events_20210124', 'events_20210125', 'events_20210126', 'events_20210127', 'events_20210128', 'events_20210129', 'events_20210130', 'events_20210131']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 22:44:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 22:44:34 - root - INFO - ```sql
SELECT COUNT(DISTINCT active_users.user_pseudo_id) AS Number_of_pseudo_users
FROM (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
WHERE active_users.user_pseudo_id NOT IN (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
);
```
2025-01-23 22:44:37 - root - INFO - itercount: 1
2025-01-23 22:44:37 - root - INFO - 0
2025-01-23 22:44:37 - root - INFO - results: 
Number_of_pseudo_users
13442


2025-01-23 22:44:37 - root - INFO - Please check the answer again by reviewing How many pseudo users were active in the last 7 days but inactive in the last 2 days as of January 7, 2021?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Number_of_pseudo_users
num:int
(Attention: answer in one row)
```

This represents the number of unique pseudo users (`user_pseudo_id`) who were active between December 31, 2020, and January 5, 2021 (the last 7 days as of January 7, 2021), but inactive on January 6 and January 7, 2021 (the last 2 days as of January 7, 2021). The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Number_of_pseudo_users
13442
Current sql:
SELECT COUNT(DISTINCT active_users.user_pseudo_id) AS Number_of_pseudo_users
FROM (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
WHERE active_users.user_pseudo_id NOT IN (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
);
2025-01-23 22:45:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 22:45:23 - root - INFO - ```sql
SELECT COUNT(DISTINCT active_users.user_pseudo_id) AS Number_of_pseudo_users
FROM (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20201231`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
WHERE active_users.user_pseudo_id NOT IN (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
);
```
2025-01-23 22:45:25 - root - INFO - itercount: 2
2025-01-23 22:45:25 - root - INFO - 0
2025-01-23 22:45:25 - root - INFO - results: 
Number_of_pseudo_users
15717


2025-01-23 22:45:25 - root - INFO - Please check the answer again by reviewing How many pseudo users were active in the last 7 days but inactive in the last 2 days as of January 7, 2021?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Number_of_pseudo_users
num:int
(Attention: answer in one row)
```

This represents the number of unique pseudo users (`user_pseudo_id`) who were active between December 31, 2020, and January 5, 2021 (the last 7 days as of January 7, 2021), but inactive on January 6 and January 7, 2021 (the last 2 days as of January 7, 2021). The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Number_of_pseudo_users
15717
Current sql:
SELECT COUNT(DISTINCT active_users.user_pseudo_id) AS Number_of_pseudo_users
FROM (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20201231`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
WHERE active_users.user_pseudo_id NOT IN (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
);
2025-01-23 22:46:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 22:46:05 - root - INFO - ```sql
SELECT COUNT(DISTINCT active_users.user_pseudo_id) AS Number_of_pseudo_users
FROM (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20201231`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210101`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210102`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210103`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210104`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210105`
) AS active_users
WHERE active_users.user_pseudo_id NOT IN (
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210106`
  UNION ALL
  SELECT user_pseudo_id
  FROM `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_20210107`
);
```
2025-01-23 22:46:07 - root - INFO - itercount: 3
2025-01-23 22:46:07 - root - INFO - 0
2025-01-23 22:46:07 - root - INFO - Total iteration counts: 3
