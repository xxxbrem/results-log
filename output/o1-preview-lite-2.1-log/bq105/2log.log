2025-01-27 04:30:36 - openai._base_client - INFO - Retrying request to /chat/completions in 0.380022 seconds
2025-01-27 04:32:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:32:17 - root - INFO - SQL:
SELECT DISTINCT driver_distracted_by_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
Results:
driver_distracted_by_name
Not Distracted
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Not Reported
Lost In Thought/Day Dreaming
Other Distraction
Unknown if Distracted

2025-01-27 04:32:19 - root - INFO - SQL:
SELECT DISTINCT driver_distracted_by_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   LIMIT 100;
Results:
driver_distracted_by_name
Not Distracted
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Not Reported
Lost In Thought/Day Dreaming
Other Distraction
Unknown if Distracted

2025-01-27 04:33:20 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:33:20 - root - INFO - I apologize for the confusion earlier. The error occurs because the `state_name` column does not exist in the `distract_2015` or `distract_2016` tables. Instead, these tables contain a `state_number` column, which is a numeric code representing each state.

To map `state_number` to the actual state names, we can use the `state_fips_code` and `state_name` columns from the `bigquery-public-data.utility_us.us_states_area` table. Here's how we can proceed:

---

**Tables and Columns Relevant to the Task:**

1. **Accident Data:**

   - **`distract_2015` and `distract_2016` tables:**
     - `state_number` (INT64): Numeric code for each state where the accident occurred.
     - `consecutive_number` (INT64): Unique identifier for each accident.
     - `driver_distracted_by_name` (STRING): Description of the driver's distraction status.

2. **State Mapping:**

   - **`us_states_area` table:**
     - `state_fips_code` (STRING): FIPS code for each state (as a string, e.g., '01' for Alabama).
     - `state_name` (STRING): Full name of the state.

3. **Population Data:**

   - **`population_by_zip_2010` table:**
     - `zipcode` (STRING): ZIP code identifier.
     - `population` (INT64): Population count per ZIP code.

   - **`zipcode_area` table:**
     - `zipcode` (STRING): ZIP code identifier.
     - `state_name` (STRING): Name of the state corresponding to the ZIP code.

**Conditions Applied:**

- Exclude accidents where `driver_distracted_by_name` is 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.'

---

**Revised SQL Queries:**

1. **List Distinct `state_number` Values in `distract_2015`:**

   ```sql
   SELECT DISTINCT state_number
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
   ```

2. **Map `state_number` to `state_name` Using `us_states_area`:**

   ```sql
   SELECT
     CAST(state_fips_code AS INT64) AS state_number,
     state_name
   FROM `bigquery-public-data.utility_us.us_states_area`
   LIMIT 100;
   ```

3. **Count Accidents Involving Driver Distraction per State in 2015:**

   ```sql
   SELECT
     s.state_name,
     COUNT(DISTINCT d.consecutive_number) AS accident_count
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
   JOIN `bigquery-public-data.utility_us.us_states_area` AS s
     ON d.state_number = CAST(s.state_fips_code AS INT64)
   WHERE LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
   GROUP BY s.state_name
   ORDER BY accident_count DESC
   LIMIT 100;
   ```

4. **Count Accidents Involving Driver Distraction per State in 2016:**

   ```sql
   SELECT
     s.state_name,
     COUNT(DISTINCT d.consecutive_number) AS accident_count
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
   JOIN `bigquery-public-data.utility_us.us_states_area` AS s
     ON d.state_number = CAST(s.state_fips_code AS INT64)
   WHERE LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
   GROUP BY s.state_name
   ORDER BY accident_count DESC
   LIMIT 100;
   ```

5. **Aggregate Total Population per State Using `population_by_zip_2010` and `zipcode_area`:**

   ```sql
   SELECT
     z.state_name,
     SUM(p.population) AS total_population
   FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
   JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
     ON p.zipcode = z.zipcode
   GROUP BY z.state_name
   ORDER BY total_population DESC
   LIMIT 100;
   ```

6. **Calculate Accident Rates per 100,000 People for Each State in 2015:**

   ```sql
   WITH accidents AS (
     SELECT
       d.state_number,
       COUNT(DISTINCT d.consecutive_number) AS accident_count
     FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
     WHERE LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
     GROUP BY d.state_number
   ),
   states AS (
     SELECT
       CAST(state_fips_code AS INT64) AS state_number,
       state_name
     FROM `bigquery-public-data.utility_us.us_states_area`
   ),
   population AS (
     SELECT
       z.state_name,
       SUM(p.population) AS total_population
     FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
     JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
       ON p.zipcode = z.zipcode
     GROUP BY z.state_name
   )
   SELECT
     s.state_name,
     a.accident_count,
     p.total_population,
     (a.accident_count * 100000.0) / p.total_population AS accidents_per_100000_people
   FROM accidents a
   JOIN states s ON a.state_number = s.state_number
   JOIN population p ON s.state_name = p.state_name
   ORDER BY accidents_per_100000_people DESC
   LIMIT 5;
   ```

7. **Calculate Accident Rates per 100,000 People for Each State in 2016:**

   ```sql
   WITH accidents AS (
     SELECT
       d.state_number,
       COUNT(DISTINCT d.consecutive_number) AS accident_count
     FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
     WHERE LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
     GROUP BY d.state_number
   ),
   states AS (
     SELECT
       CAST(state_fips_code AS INT64) AS state_number,
       state_name
     FROM `bigquery-public-data.utility_us.us_states_area`
   ),
   population AS (
     SELECT
       z.state_name,
       SUM(p.population) AS total_population
     FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
     JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
       ON p.zipcode = z.zipcode
     GROUP BY z.state_name
   )
   SELECT
     s.state_name,
     a.accident_count,
     p.total_population,
     (a.accident_count * 100000.0) / p.total_population AS accidents_per_100000_people
   FROM accidents a
   JOIN states s ON a.state_number = s.state_number
   JOIN population p ON s.state_name = p.state_name
   ORDER BY accidents_per_100000_people DESC
   LIMIT 5;
   ```

8. **Identify Top Five States Each Year with Highest Accident Rates:**

   The queries above already limit the results to the top five states (`LIMIT 5`) ordered by `accidents_per_100000_people` in descending order.

---

**Explanation of Corrections:**

- **Using `state_number` and `state_fips_code`:** Since `state_name` is not present in the `distract_2015` and `distract_2016` tables, we use `state_number` to represent states. The `state_fips_code` in `us_states_area` corresponds to `state_number` when cast to `INT64`.

- **Casting `state_fips_code` to `INT64`:** The `state_fips_code` is stored as a string (e.g., '01' for Alabama). We cast it to `INT64` to match with `state_number` in the `distract` tables.

- **Joining Tables:** We join the accident data with the `us_states_area` table to get the state names. We also join with the population data to calculate accident rates.

- **Excluding Specified Distraction Statuses:** We use the `LOWER()` function to ensure case-insensitive matching when excluding 'Not Distracted,' 'Unknown if Distracted,' and 'Not Reported.'

- **Calculating Accident Rates:** We compute the number of accidents per 100,000 people by using the formula:

  \[
  \text{Accidents per 100,000 people} = \left( \frac{\text{accident\_count} \times 100,000}{\text{total\_population}} \right)
  \]

---

By executing these queries, you will obtain the number of traffic accidents per 100,000 people due to driver distraction for each state in the years 2015 and 2016. The results will identify the top five states each year with the highest rates.

**Note:** Ensure that you have access to all the mentioned tables and that the necessary permissions are in place to execute these queries on the BigQuery platform.
2025-01-27 04:35:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:35:08 - root - INFO - SQL:
SELECT DISTINCT state_number
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
Results:
state_number
38
56
10
1
4
5
6
8
9
12
13
17
18
19
20
21
22
24
26
27
29
30
32
34
35
36
37
39
40
41
42
47
48
49
51
53
54
55
33
50
46
44
11
2
23
15
16
25
28
31
45

2025-01-27 04:35:10 - root - INFO - SQL:
-- Corrected Query 1
SELECT DISTINCT s.state_name
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.utility_us.us_states_area` AS s
  ON d.state_number = CAST(s.state_fips_code AS INT64)
LIMIT 100
Results:
state_name
New Hampshire
Wyoming
Rhode Island
Delaware
Alaska
Maine
Alabama
Arizona
Arkansas
California
Colorado
Connecticut
Florida
Georgia
Illinois
Indiana
Kentucky
Louisiana
Maryland
Michigan
Minnesota
Nebraska
Nevada
New Jersey
New York
North Carolina
Ohio
Oklahoma
Pennsylvania
South Carolina
Tennessee
Texas
Utah
Virginia
Washington
West Virginia
Wisconsin
North Dakota
Montana
Vermont
South Dakota
District of Columbia
Hawaii
Idaho
Iowa
Kansas
Massachusetts
Mississippi
New Mexico
Oregon
Missouri

2025-01-27 04:35:12 - root - INFO - SQL:
-- Corrected Query 2
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.utility_us.us_states_area` AS s
  ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 100
Results:
state_name,accident_count
Texas,441
Florida,235
California,206
Kentucky,200
New York,163
Washington,158
North Carolina,157
Louisiana,154
New Jersey,146
Virginia,129
New Mexico,124
Arizona,118
Tennessee,112
Maryland,104
Wisconsin,102
Missouri,97
Georgia,76
Kansas,73
Pennsylvania,72
Colorado,70
Michigan,67
South Carolina,67
Massachusetts,65
Minnesota,60
Ohio,59
Alabama,57
Indiana,56
Oklahoma,54
Illinois,52
Montana,39
Arkansas,35
Idaho,35
Utah,32
Iowa,31
New Hampshire,18
Hawaii,17
Nebraska,16
Nevada,16
Wyoming,15
Delaware,15
South Dakota,14
Connecticut,14
Maine,14
Oregon,12
Alaska,12
West Virginia,8
Mississippi,7
Vermont,5
North Dakota,2
Rhode Island,1

2025-01-27 04:35:14 - root - INFO - SQL:
-- Corrected Query 3
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.utility_us.us_states_area` AS s
  ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 100
Results:
state_name,accident_count
Texas,389
Florida,233
California,227
New Jersey,193
Kentucky,192
North Carolina,157
Washington,147
New Mexico,147
Louisiana,143
New York,143
Virginia,141
Tennessee,132
Wisconsin,117
Arizona,102
Kansas,95
Georgia,88
Missouri,80
Colorado,77
Illinois,68
Ohio,68
Maryland,67
Pennsylvania,62
Michigan,61
Alabama,57
Oklahoma,55
South Carolina,52
Idaho,51
Indiana,48
Massachusetts,47
Iowa,40
Minnesota,37
Utah,25
Arkansas,23
Montana,20
Hawaii,19
Delaware,16
Wyoming,14
Connecticut,13
Nebraska,13
Oregon,11
North Dakota,11
South Dakota,10
Nevada,8
New Hampshire,6
West Virginia,5
Vermont,4
Rhode Island,3
Maine,3
Mississippi,3
District of Columbia,1
Alaska,1

2025-01-27 04:35:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:35:39 - root - INFO - ```sql
SELECT
  z.state_name,
  SUM(p.population) AS total_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
  ON p.zipcode = z.zipcode
WHERE
  p.population IS NOT NULL
GROUP BY
  z.state_name
ORDER BY
  total_population DESC
LIMIT 100;
```

**Explanation:**

In this corrected query, we've added a `WHERE` clause to ensure that only rows where the `population` column is not `NULL` are included in the aggregation. This addresses the issue of empty or missing values in the `population` column. Here's what each part does:

- **SELECT Clause:**
  - `z.state_name`: Selects the state name from the `zipcode_area` table.
  - `SUM(p.population) AS total_population`: Sums the population for each state.

- **FROM Clause:**
  - Specifies the `population_by_zip_2010` table aliased as `p`.

- **JOIN Clause:**
  - Joins the `zipcode_area` table (`z`) on the `zipcode` field to map ZIP codes to state names.

- **WHERE Clause:**
  - `p.population IS NOT NULL`: Filters out rows where the population is `NULL`.

- **GROUP BY Clause:**
  - Groups the results by `z.state_name` to aggregate population totals per state.

- **ORDER BY Clause:**
  - Orders the results by `total_population` in descending order.

- **LIMIT Clause:**
  - Limits the output to the top 100 states (though there are only 50 states plus territories, so this effectively includes all).

This query will provide the total population per state based on the ZIP code populations from the 2010 census data, excluding any entries where the population data is missing.
2025-01-27 04:37:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:37:03 - root - INFO - SQL:
SELECT
  z.state_name,
  SUM(p.population) AS total_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
  ON p.zipcode = z.zipcode
WHERE
  p.population IS NOT NULL
GROUP BY
  z.state_name
ORDER BY
  total_population DESC
LIMIT 100;
Results:
state_name,total_population
California,111748626
Texas,75434313
New York,58133523
Florida,56403678
Illinois,38491743
Pennsylvania,38107125
Ohio,34609542
Michigan,29650836
North Carolina,28606431
Georgia,28280514
Virginia,24003717
Indiana,19451376
Washington,19240062
Arizona,19127649
Tennessee,19003095
Missouri,17961405
Maryland,17320683
Wisconsin,17061036
Minnesota,15904047
Colorado,15088122
Alabama,14338764
South Carolina,13876092
Louisiana,13598490
Kentucky,12977133
Oregon,11490705
Oklahoma,11249850
Mississippi,9200223
Iowa,9131034
Arkansas,8733537
Kansas,8551884
Utah,8285430
Nevada,8099424
New Mexico,6161043
West Virginia,5558322
Nebraska,5480298
Idaho,4702578
Hawaii,4080903
Montana,2965035
Delaware,2693775
South Dakota,2434629
Alaska,2129790
North Dakota,2015343
District of Columbia,1780488
Wyoming,1683354
Washington (state),809694
Georgia (U.S. state),456018
"Oregon, Washington",123168
"Kentucky, Tennessee",76242
"Arizona, New Mexico",41208
"Alabama, Mississippi",28347
"Washington, D.C.",24681
"Arizona, Utah",17115
"Arkansas, Missouri",12783
"Arizona, New Mexico, Utah",9951
"Iowa, Missouri",9801
"Arkansas, Louisiana",7785
"Kansas, Oklahoma",7674
"North Dakota, South Dakota",5763
"Iowa, Minnesota",5130
"Oklahoma, Texas",5064
"Montana, North Dakota",4974
"Nebraska, Wyoming",4818
"California, Nevada",4251
"Minnesota, South Dakota",3246
"Idaho, Oregon",1923
"Idaho, Wyoming",1413
"Idaho, Washington",963
"California, Oregon",867
"Colorado, Wyoming",300

2025-01-27 04:37:04 - root - INFO - SQL:
-- Corrected Query 5 (No correction needed)
SELECT DISTINCT zipcode, state_name
FROM `bigquery-public-data.utility_us.zipcode_area`
LIMIT 100
Results:
zipcode,state_name
96950,Guam
96952,Guam
96951,Guam
96910,Guam
96929,Guam
96921,Guam
96913,Guam
96932,Guam
50012,Iowa
52352,Iowa
51243,Iowa
50036,Iowa
50531,Iowa
50151,Iowa
51027,Iowa
50670,Iowa
50609,Iowa
52077,Iowa
52074,Iowa
51354,Iowa
51461,Iowa
50130,Iowa
51557,Iowa
50545,Iowa
50529,Iowa
51056,Iowa
52574,Iowa
52232,Iowa
50242,Iowa
50469,Iowa
51577,Iowa
51433,Iowa
50169,Iowa
50058,Iowa
50313,Iowa
50263,Iowa
50535,Iowa
51301,Iowa
52215,Iowa
50223,Iowa
52323,Iowa
50238,Iowa
50660,Iowa
50038,Iowa
52591,Iowa
51646,Iowa
51401,Iowa
50144,Iowa
50108,Iowa
52001,Iowa
52164,Iowa
50222,Iowa
52530,Iowa
50558,Iowa
52580,Iowa
52353,Iowa
50309,Iowa
52571,Iowa
51106,Iowa
52247,Iowa
50117,Iowa
52650,Iowa
52227,Iowa
52253,Iowa
52314,Iowa
52403,Iowa
51238,Iowa
50010,Iowa
50055,Iowa
50801,Iowa
50511,Iowa
50530,Iowa
51031,Iowa
51004,Iowa
52635,Iowa
50581,Iowa
50071,Iowa
50265,Iowa
50321,Iowa
52639,Iowa
52625,Iowa
50173,Iowa
50149,Iowa
52576,Iowa
52640,Iowa
50001,Iowa
52003,Iowa
52142,Iowa
51648,Iowa
50522,Iowa
52555,Iowa
52132,Iowa
52133,Iowa
51525,Iowa
50320,Iowa
50250,Iowa
50466,Iowa
52747,Iowa
50171,Iowa
51053,Iowa

2025-01-27 04:37:06 - root - INFO - SQL:
-- Corrected Query 6
SELECT
  z.state_name,
  SUM(p.population) AS total_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
ON
  p.zipcode = z.zipcode
WHERE
  p.population IS NOT NULL
GROUP BY
  z.state_name
ORDER BY
  total_population DESC
LIMIT 100
Results:
state_name,total_population
California,111748626
Texas,75434313
New York,58133523
Florida,56403678
Illinois,38491743
Pennsylvania,38107125
Ohio,34609542
Michigan,29650836
North Carolina,28606431
Georgia,28280514
Virginia,24003717
Indiana,19451376
Washington,19240062
Arizona,19127649
Tennessee,19003095
Missouri,17961405
Maryland,17320683
Wisconsin,17061036
Minnesota,15904047
Colorado,15088122
Alabama,14338764
South Carolina,13876092
Louisiana,13598490
Kentucky,12977133
Oregon,11490705
Oklahoma,11249850
Mississippi,9200223
Iowa,9131034
Arkansas,8733537
Kansas,8551884
Utah,8285430
Nevada,8099424
New Mexico,6161043
West Virginia,5558322
Nebraska,5480298
Idaho,4702578
Hawaii,4080903
Montana,2965035
Delaware,2693775
South Dakota,2434629
Alaska,2129790
North Dakota,2015343
District of Columbia,1780488
Wyoming,1683354
Washington (state),809694
Georgia (U.S. state),456018
"Oregon, Washington",123168
"Kentucky, Tennessee",76242
"Arizona, New Mexico",41208
"Alabama, Mississippi",28347
"Washington, D.C.",24681
"Arizona, Utah",17115
"Arkansas, Missouri",12783
"Arizona, New Mexico, Utah",9951
"Iowa, Missouri",9801
"Arkansas, Louisiana",7785
"Kansas, Oklahoma",7674
"North Dakota, South Dakota",5763
"Iowa, Minnesota",5130
"Oklahoma, Texas",5064
"Montana, North Dakota",4974
"Nebraska, Wyoming",4818
"California, Nevada",4251
"Minnesota, South Dakota",3246
"Idaho, Oregon",1923
"Idaho, Wyoming",1413
"Idaho, Washington",963
"California, Oregon",867
"Colorado, Wyoming",300

2025-01-27 04:37:08 - root - INFO - SQL:
-- Corrected Query 7 (No correction needed)
SELECT
  p.zipcode
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
LEFT JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
ON
  p.zipcode = z.zipcode
WHERE
  z.zipcode IS NULL
LIMIT 100
Results:
zipcode
6475
1505
1378
5156
5673
727
2653
8036
7310
2090
4441
6498
5827
2907
4043
5766
3243
1742
5701
1257
4003
1098
723
8889
2720
3464
3084
2908
8833
4646
4108
4654
5650
8825
5862
7830
2827
5739
2446
3034
7105
7621
8202
6750
4234
6811
1520
961
1026
5301
8501
5033
6355
1338
2110
5875
7077
4276
2812
4769
1330
8320
3222
1463
4231
1230
3031
2571
8330
7853
719
4490
6331
2802
8069
8809
2852
5747
8322
1301
7307
2840
3878
7112
4072
7747
2129
1007
1349
8328
8240
1093
6335
1343
3082
5359
6016
5052
6778
3887

2025-01-27 04:37:09 - root - INFO - SQL:
-- Corrected Query 8
SELECT
  SUM(population) AS total_us_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
WHERE
  population IS NOT NULL
LIMIT 100
Results:
total_us_population
937388991

2025-01-27 04:37:11 - root - INFO - SQL:
-- Corrected Query 9 (No correction needed)
SELECT DISTINCT state_name
FROM `bigquery-public-data.utility_us.us_states_area`
LIMIT 100
Results:
state_name
United States Virgin Islands
Commonwealth of the Northern Mariana Islands
Guam
American Samoa
Puerto Rico
Rhode Island
New Hampshire
Vermont
Connecticut
Maine
Massachusetts
New Jersey
Pennsylvania
New York
Illinois
Wisconsin
Ohio
Michigan
Indiana
Minnesota
Nebraska
North Dakota
Missouri
Kansas
South Dakota
Iowa
West Virginia
Florida
Maryland
North Carolina
Delaware
Georgia
South Carolina
Virginia
District of Columbia
Alabama
Tennessee
Kentucky
Mississippi
Louisiana
Texas
Oklahoma
Arkansas
Idaho
New Mexico
Utah
Colorado
Wyoming
Nevada
Montana
Arizona
California
Oregon
Washington
Hawaii
Alaska

2025-01-27 04:37:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:37:37 - root - INFO - ```sql
SELECT
  state_number,
  consecutive_number,
  vehicle_number,
  driver_distracted_by,
  driver_distracted_by_name
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE
  driver_distracted_by_name IS NOT NULL AND
  driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported') AND
  state_number IS NOT NULL AND
  consecutive_number IS NOT NULL AND
  vehicle_number IS NOT NULL AND
  driver_distracted_by IS NOT NULL
LIMIT 100;
```
2025-01-27 04:38:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:38:30 - root - INFO - SQL:
SELECT
  state_number,
  consecutive_number,
  vehicle_number,
  driver_distracted_by,
  driver_distracted_by_name
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE
  driver_distracted_by_name IS NOT NULL AND
  driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported') AND
  state_number IS NOT NULL AND
  consecutive_number IS NOT NULL AND
  vehicle_number IS NOT NULL AND
  driver_distracted_by IS NOT NULL
LIMIT 100;
Results:
state_number,consecutive_number,vehicle_number,driver_distracted_by,driver_distracted_by_name
48,481729,8,1,Looked But Did Not See
46,460112,1,1,Looked But Did Not See
46,460065,1,1,Looked But Did Not See
56,560051,1,1,Looked But Did Not See
33,330082,1,1,Looked But Did Not See
33,330076,1,1,Looked But Did Not See
33,330065,1,1,Looked But Did Not See
33,330052,1,1,Looked But Did Not See
33,330040,1,1,Looked But Did Not See
33,330027,1,1,Looked But Did Not See
1,10320,1,1,Looked But Did Not See
1,10754,1,1,Looked But Did Not See
1,10478,1,1,Looked But Did Not See
1,10349,1,1,Looked But Did Not See
1,10049,1,1,Looked But Did Not See
4,40690,1,1,Looked But Did Not See
4,40843,1,1,Looked But Did Not See
4,40840,1,1,Looked But Did Not See
4,40821,1,1,Looked But Did Not See
4,40799,1,1,Looked But Did Not See
4,40792,1,1,Looked But Did Not See
4,40778,1,1,Looked But Did Not See
4,40777,1,1,Looked But Did Not See
4,40773,1,1,Looked But Did Not See
4,40770,1,1,Looked But Did Not See
4,40761,1,1,Looked But Did Not See
4,40731,1,1,Looked But Did Not See
4,40689,1,1,Looked But Did Not See
4,40685,1,1,Looked But Did Not See
4,40652,1,1,Looked But Did Not See
4,40646,1,1,Looked But Did Not See
4,40643,1,1,Looked But Did Not See
4,40635,1,1,Looked But Did Not See

2025-01-27 04:38:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:38:54 - root - INFO - ```sql
SELECT
  state_number,
  consecutive_number,
  vehicle_number,
  driver_distracted_by,
  driver_distracted_by_name
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE
  driver_distracted_by_name IS NOT NULL AND
  TRIM(driver_distracted_by_name) <> '' AND
  LOWER(TRIM(driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported') AND
  state_number IS NOT NULL AND
  consecutive_number IS NOT NULL AND
  vehicle_number IS NOT NULL AND
  driver_distracted_by IS NOT NULL
LIMIT 100;
```
2025-01-27 04:39:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:39:41 - root - INFO - SQL:
SELECT
  state_number,
  consecutive_number,
  vehicle_number,
  driver_distracted_by,
  driver_distracted_by_name
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE
  driver_distracted_by_name IS NOT NULL AND
  TRIM(driver_distracted_by_name) <> '' AND
  LOWER(TRIM(driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported') AND
  state_number IS NOT NULL AND
  consecutive_number IS NOT NULL AND
  vehicle_number IS NOT NULL AND
  driver_distracted_by IS NOT NULL
LIMIT 100;
Results:
state_number,consecutive_number,vehicle_number,driver_distracted_by,driver_distracted_by_name
48,481729,8,1,Looked But Did Not See
46,460112,1,1,Looked But Did Not See
46,460065,1,1,Looked But Did Not See
56,560051,1,1,Looked But Did Not See
33,330082,1,1,Looked But Did Not See
33,330076,1,1,Looked But Did Not See
33,330065,1,1,Looked But Did Not See
33,330052,1,1,Looked But Did Not See
33,330040,1,1,Looked But Did Not See
33,330027,1,1,Looked But Did Not See
1,10320,1,1,Looked But Did Not See
1,10754,1,1,Looked But Did Not See
1,10478,1,1,Looked But Did Not See
1,10349,1,1,Looked But Did Not See
1,10049,1,1,Looked But Did Not See
4,40690,1,1,Looked But Did Not See
4,40843,1,1,Looked But Did Not See
4,40840,1,1,Looked But Did Not See
4,40821,1,1,Looked But Did Not See
4,40799,1,1,Looked But Did Not See
4,40792,1,1,Looked But Did Not See
4,40778,1,1,Looked But Did Not See
4,40777,1,1,Looked But Did Not See
4,40773,1,1,Looked But Did Not See
4,40770,1,1,Looked But Did Not See
4,40761,1,1,Looked But Did Not See
4,40731,1,1,Looked But Did Not See
4,40689,1,1,Looked But Did Not See
4,40685,1,1,Looked But Did Not See
4,40652,1,1,Looked But Did Not See
4,40646,1,1,Looked But Did Not See
4,40643,1,1,Looked But Did Not See
4,40635,1,1,Looked But Did Not See

2025-01-27 04:39:43 - root - INFO - SQL:
-- Corrected Query 12
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS total_accidents
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> ''
GROUP BY
  s.state_name
ORDER BY
  total_accidents DESC
LIMIT 100
Results:
state_name,total_accidents
Texas,3190
California,3123
Florida,2699
Georgia,1329
North Carolina,1275
Pennsylvania,1102
New York,1061
Ohio,1029
Illinois,914
South Carolina,911
Michigan,896
Tennessee,888
Arizona,811
Missouri,803
Alabama,784
Indiana,752
Virginia,712
Louisiana,698
Kentucky,694
Mississippi,604
Oklahoma,590
Wisconsin,523
New Jersey,521
Colorado,507
Washington,499
Arkansas,491
Maryland,479
Oregon,411
Minnesota,375
Massachusetts,327
Kansas,322
Nevada,297
Iowa,282
New Mexico,269
Utah,258
Connecticut,257
West Virginia,246
Nebraska,218
Montana,204
Idaho,198
Maine,144
Wyoming,129
Delaware,127
South Dakota,116
North Dakota,111
New Hampshire,103
Hawaii,85
Alaska,60
Vermont,50
Rhode Island,41
District of Columbia,23

2025-01-27 04:39:45 - root - INFO - SQL:
-- Corrected Query 13
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS total_accidents
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> ''
GROUP BY
  s.state_name
ORDER BY
  total_accidents DESC
LIMIT 100
Results:
state_name,total_accidents
California,3540
Texas,3427
Florida,2935
Georgia,1424
North Carolina,1348
Pennsylvania,1088
Ohio,1053
Illinois,1000
Michigan,981
New York,981
Alabama,979
Tennessee,962
South Carolina,941
Missouri,872
Arizona,856
Indiana,776
Kentucky,763
Virginia,722
Louisiana,704
Oklahoma,628
Mississippi,625
New Jersey,570
Colorado,558
Wisconsin,544
Arkansas,504
Washington,504
Maryland,484
Oregon,448
Kansas,381
New Mexico,361
Minnesota,357
Massachusetts,356
Iowa,355
Nevada,304
Connecticut,292
Utah,259
West Virginia,250
Idaho,232
Nebraska,194
Montana,171
Maine,150
New Hampshire,130
Delaware,116
Hawaii,109
South Dakota,103
North Dakota,102
Wyoming,100
Alaska,78
Vermont,57
Rhode Island,48
District of Columbia,26

2025-01-27 04:39:47 - root - INFO - SQL:
-- Corrected Query 14
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> '' AND
  d.driver_distracted_by_name IS NOT NULL AND
  TRIM(d.driver_distracted_by_name) <> '' AND
  LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5
Results:
state_name,accident_count
Texas,441
Florida,235
California,206
Kentucky,200
New York,163

2025-01-27 04:39:48 - root - INFO - SQL:
-- Corrected Query 15
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> '' AND
  d.driver_distracted_by_name IS NOT NULL AND
  TRIM(d.driver_distracted_by_name) <> '' AND
  LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5
Results:
state_name,accident_count
Texas,389
Florida,233
California,227
New Jersey,193
Kentucky,192

2025-01-27 04:40:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:40:25 - root - INFO - ```sql
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5;
```
2025-01-27 04:40:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:40:55 - root - INFO - SQL:
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5;
Results:
state_name,accident_count
Texas,389
Florida,233
California,227
New Jersey,193
Kentucky,192

2025-01-27 04:40:57 - root - INFO - SQL:
-- Corrected Query 17
SELECT
  state_name,
  SUM(accident_count) AS total_accidents,
  SUM(total_population) AS total_population
FROM (
  SELECT
    z.state_name,
    0 AS accident_count,
    SUM(p.population) AS total_population
  FROM
    `bigquery-public-data.utility_us.zipcode_area` AS z
  JOIN
    `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
    ON z.zipcode = p.zipcode
  GROUP BY
    z.state_name

  UNION ALL

  SELECT
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count,
    0 AS total_population
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY
    s.state_name
)
GROUP BY
  state_name
ORDER BY
  total_accidents DESC
LIMIT 100
Results:
state_name,total_accidents,total_population
Texas,441,75434313
Florida,235,56403678
California,206,111748626
Kentucky,200,12977133
New York,163,58133523
Washington,158,19240062
North Carolina,157,28606431
Louisiana,154,13598490
New Jersey,146,0
Virginia,129,24003717
New Mexico,124,6161043
Arizona,118,19127649
Tennessee,112,19003095
Maryland,104,17320683
Wisconsin,102,17061036
Missouri,97,17961405
Georgia,76,28280514
Kansas,73,8551884
Pennsylvania,72,38107125
Colorado,70,15088122
Michigan,67,29650836
South Carolina,67,13876092
Massachusetts,65,0
Minnesota,60,15904047
Ohio,59,34609542
Alabama,57,14338764
Indiana,56,19451376
Oklahoma,54,11249850
Illinois,52,38491743
Montana,39,2965035
Arkansas,35,8733537
Idaho,35,4702578
Utah,32,8285430
Iowa,31,9131034
New Hampshire,18,0
Hawaii,17,4080903
Nebraska,16,5480298
Nevada,16,8099424
Delaware,15,2693775
Wyoming,15,1683354
South Dakota,14,2434629
Connecticut,14,0
Maine,14,0
Oregon,12,11490705
Alaska,12,2129790
West Virginia,8,5558322
Mississippi,7,9200223
Vermont,5,0
North Dakota,2,2015343
Rhode Island,1,0
"Washington, D.C.",0,24681
Georgia (U.S. state),0,456018
District of Columbia,0,1780488
"Iowa, Minnesota",0,5130
"Idaho, Oregon",0,1923
"Oregon, Washington",0,123168
"Arkansas, Louisiana",0,7785
"Idaho, Washington",0,963
"Colorado, Wyoming",0,300
"Arizona, New Mexico",0,41208
"Alabama, Mississippi",0,28347
"Kentucky, Tennessee",0,76242
Washington (state),0,809694

2025-01-27 04:40:57 - root - INFO - itercount: 0
2025-01-27 04:40:57 - root - INFO - Database Name: bigquery-public-data
Schema Name: census_bureau_usa
DDL describes table information.
,0
table_name,population_by_zip_2010
ddl,"CREATE TABLE `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
(
  geo_id STRING ,
  zipcode STRING NOT NULL ,
  population INT64 ,
  minimum_age INT64 ,
  maximum_age INT64  or the row is a total of the male, female, or overall population.""),
  gender STRING 
)
OPTIONS(
  labels=[(""freebqcovid"", """")]
);"

Some other tables have the similar structure: ['population_by_zip_2010', 'population_by_zip_2000']
Database Name: bigquery-public-data
Schema Name: nhtsa_traffic_fatalities
DDL describes table information.
,0
table_name, factor_2018
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. factor_2018`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  contributing_circumstances_motor_vehicle INT64 ,
  contributing_circumstances_motor_vehicle_name STRING 
);"

Some other tables have the similar structure: [' factor_2018', ' factor_2016', ' factor_2020', ' factor_2015', ' factor_2019', ' factor_2017']
,1
table_name,maneuver_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.maneuver_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_maneuvered_to_avoid INT64  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle. For more info on the codes, please look at <PC15 Driver Maneuvered to Avoid> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_maneuvered_to_avoid_name STRING  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle."")
);"

Some other tables have the similar structure: ['maneuver_2016', 'maneuver_2015']
,2
table_name,vsoe_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vsoe_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number INT64 ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  area_of_Impact_associated_with_the_event INT64 ,
  area_of_Impact_associated_with_the_event_name STRING 
);"

Some other tables have the similar structure: ['vsoe_2016', 'vsoe_2015']
,3
table_name,safetyeq_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.safetyeq_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_safety_equipment_use STRING  3 Reflective Clothing (Jacket, Backpack, etc.) 4 Protective Pads (Elbows, Knees, Shins, etc.) 5 Lighting 7 Other Safety Equipment 8 Not Reported 9 Unknown if Used"")
);"

Some other tables have the similar structure: ['safetyeq_2016', 'safetyeq_2015']
,4
table_name, drimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. drimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  condition_impairment_at_time_of_crash_driver INT64  at Time of Crash- Driver> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_driver_name STRING 
);"

Some other tables have the similar structure: [' drimpair_2016', ' drimpair_2015', ' drimpair_2019', ' drimpair_2017', ' drimpair_2020', ' drimpair_2018']
,5
table_name, safetyeq_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. safetyeq_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  nm_helmet STRING ,
  nm_helmet_name STRING ,
  nm_propad STRING  from injury.""),
  nm_propad_name STRING  from injury.""),
  nm_othpro STRING .""),
  nm_othpro_name STRING .""),
  nm_refclo STRING .""),
  nm_refclo_name STRING .""),
  nm_light STRING ,
  nm_light_name STRING ,
  nm_othpre STRING .""),
  nm_othpre_name STRING ."")
);"

Some other tables have the similar structure: [' safetyeq_2017', ' safetyeq_2020', ' safetyeq_2015', ' safetyeq_2016', ' safetyeq_2019', ' safetyeq_2018']
,6
table_name,nmcrash_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.nmcrash_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_contributing_circumstances INT64  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash. For more info on the codes, please look at <NM12 Non-Motorist Contributing Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_contributing_circumstances_name STRING  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash."")
)
OPTIONS(
  description=""This data file contains information about any contributing\ncircumstances or improper actions of people who are not occupants of motor vehicles\n(e.g., pedestrians and bicyclists) noted on the PAR. There is one record per action and\nthere is at least one record for each person who is not an occupant of a motor vehicle.""
);"

Some other tables have the similar structure: ['nmcrash_2015', 'nmcrash_2016']
,7
table_name, maneuver_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. maneuver_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_maneuvered_to_avoid INT64  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle. For more info on the codes, please look at <PC15 Driver Maneuvered to Avoid> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_maneuvered_to_avoid_name STRING  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle."")
);"

Some other tables have the similar structure: [' maneuver_2015', ' maneuver_2020', ' maneuver_2018', ' maneuver_2016', ' maneuver_2019', ' maneuver_2017']
,8
table_name,drimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.drimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  condition_impairment_at_time_of_crash_driver INT64  at Time of Crash- Driver> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_driver_name STRING 
);"

Some other tables have the similar structure: ['drimpair_2016', 'drimpair_2015']
,9
table_name, vsoe_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vsoe_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number INT64 ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  area_of_Impact_associated_with_the_event INT64 ,
  area_of_Impact_associated_with_the_event_name STRING 
);"

Some other tables have the similar structure: [' vsoe_2017', ' vsoe_2015', ' vsoe_2016', ' vsoe_2018', ' vsoe_2020', ' vsoe_2019']
,10
table_name, damage_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. damage_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  damaged_areas INT64 ,
  damaged_areas_name STRING 
);"

Some other tables have the similar structure: [' damage_2017', ' damage_2020', ' damage_2019', ' damage_2015', ' damage_2018', ' damage_2016']
,11
table_name, accident_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. accident_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  number_of_vehicle_forms_submitted_all INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_parked_working_vehicles INT64 ,
  number_of_forms_submitted_for_persons_not_in_motor_vehicles INT64  that are applicable to this case (i.e., non-occupants). 00-99 Number of Persons Not in Motor Vehicles""),
  number_of_forms_submitted_for_persons_in_motor_vehicles INT64  Forms that are applicable to this case (i.e., occupants). 000-999 Number of Person Forms""),
  number_of_persons_in_motor_vehicles_in_transport_mvit INT64 ,
  number_of_persons_not_in_motor_vehicles_in_transport_mvit INT64 , or an other non-motorist (e.g., person outside a trafficway, person in a house). 0-98 Number of Persons Not in Motor Vehicles in Transport""),
  county INT64  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  county_name STRING  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  city INT64  publication of worldwide Geographic Location Codes (GLC). 0000 Not Applicable 0001-9996 GSA Geographical Codes 9997 Other 9898 Not Reported 9999 Unknown""),
  city_name STRING  publication of worldwide Geographic Location Codes (GLC). 0000 Not Applicable 0001-9996 GSA Geographical Codes 9997 Other 9898 Not Reported 9999 Unknown""),
  day_of_crash INT64 ,
  day_name STRING ,
  month_of_crash INT64 ,
  month_of_crash_name STRING ,
  year_of_crash INT64 ,
  day_of_week INT64 ,
  day_of_week_name STRING ,
  hour_of_crash INT64 ,
  hour_of_crash_name STRING ,
  minute_of_crash INT64 ,
  minute_of_crash_name STRING ,
  national_highway_system INT64 ,
  national_highway_system_name STRING ,
  route_signing INT64  8 Other 9 Unknown""),
  route_signing_name STRING ,
  trafficway_identifier STRING  999999999999999999999999999999 Unknown""),
  trafficway_identifier_2 STRING  999999999999999999999999999999 Unknown""),
  land_use INT64 , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  land_use_name STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  functional_system INT64 , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  functional_system_name STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  ownership INT64 ,
  ownership_name STRING ,
  milepoint INT64  99998 Not Reported 99999 Unknown""),
  milepoint_name STRING  99998 Not Reported 99999 Unknown""),
  latitude FLOAT64  DD.DDDD Actual Degrees 77.7777 Not Reported 88.8888 Not Available (If State Exempt) 99.9999 Unknown""),
  latitude_name STRING  DD.DDDD Actual Degrees 77.7777 Not Reported 88.8888 Not Available (If State Exempt) 99.9999 Unknown""),
  longitude FLOAT64  DDD.DDDD Actual Degrees 777.7777 Not Reported 888.8888 Not Available (If State Exempt) 999.9999 Unknown""),
  longitude_name STRING  DDD.DDDD Actual Degrees 777.7777 Not Reported 888.8888 Not Available (If State Exempt) 999.9999 Unknown""),
  special_jurisdiction INT64 . 0 No Special Jurisdiction (Includes National Forests Since 2008) 1 National Park Service 2 Military 3 Indian Reservation 4 College/University Campus 5 Other Federal Properties (Since 1977) 8 Other (Since 1976) 9 Unknown""),
  special_jurisdiction_name STRING .""),
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  relation_to_junction_within_interchange_area INT64  and is based on the location of the “First Harmful Event” of the crash. 0 No 1 Yes 8 Not Reported 9 Unknown""),
  relation_to_junction_within_interchange_area_name STRING  and is based on the location of the “First Harmful Event” of the crash. 0 No 1 Yes 8 Not Reported 9 Unknown""),
  relation_to_junction_specific_location INT64  and is based on the location of the “First Harmful Event” of the crash. For more info on the codes, please look at <C21B Relation to Junction- Specific Location> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  relation_to_junction_specific_location_name STRING  and is based on the location of the “First Harmful Event” of the crash.""),
  type_of_intersection INT64 ,
  type_of_intersection_name STRING ,
  work_zone INT64 ,
  work_zone_name STRING ,
  relation_to_trafficway INT64 ,
  relation_to_trafficway_name STRING ,
  light_condition INT64 ,
  light_condition_name STRING ,
  atmospheric_conditions_1 INT64 ,
  atmospheric_conditions_1_name STRING ,
  atmospheric_conditions_2 INT64 ,
  atmospheric_conditions_2_name STRING ,
  atmospheric_conditions INT64 ,
  atmospheric_conditions_name STRING ,
  school_bus_related INT64 ,
  school_bus_related_name STRING ,
  rail_grade_crossing_identifier STRING ,
  rail_grade_crossing_identifier_name STRING ,
  hour_of_notification INT64  88 Not Applicable or Not Notified 99 Unknown Hour 99 Unknown if Notified (when NOT_MIN = 98)""),
  hour_of_notification_name STRING  88 Not Applicable or Not Notified 99 Unknown Hour 99 Unknown if Notified (when NOT_MIN = 98)""),
  minute_of_notification INT64  88 Not Applicable or Not Notified 98 Unknown if Notified 99 Unknown Minutes""),
  minute_of_notification_name STRING  88 Not Applicable or Not Notified 98 Unknown if Notified 99 Unknown Minutes""),
  hour_of_arrival_at_scene INT64  -- Not Notified (when ARR_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when ARR_MIN = 97) 99 Unknown if Arrived (when ARR_MIN = 98)""),
  hour_of_arrival_at_scene_name STRING  -- Not Notified (when ARR_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when ARR_MIN = 97) 99 Unknown if Arrived (when ARR_MIN = 98)""),
  minute_of_arrival_at_scene INT64  -- Not Notified (when ARR_HOUR = 00) 88 Not Applicable or Not Notified 97 Officially Cancelled 98 Unknown if Arrived 99 Unknown Minutes""),
  minute_of_arrival_at_scene_name STRING  -- Not Notified (when ARR_HOUR = 00) 88 Not Applicable or Not Notified 97 Officially Cancelled 98 Unknown if Arrived 99 Unknown Minutes""),
  hour_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when HOSP_MIN = 97) 99 Unknown if Transported (when HOSP_MIN = 98)""),
  hour_of_ems_arrival_at_hospital_name STRING  -- Not Notified or Not Transported (when HOSP_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when HOSP_MIN = 97) 99 Unknown if Transported (when HOSP_MIN = 98)""),
  minute_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_HR = 00) 88 Not Applicable or Not Notified 96 Terminated Transport 97 Officially Cancelled 98 Unknown if Transported 99 Unknown Minutes""),
  minute_of_ems_arrival_at_hospital_name STRING  -- Not Notified or Not Transported (when HOSP_HR = 00) 88 Not Applicable or Not Notified 96 Terminated Transport 97 Officially Cancelled 98 Unknown if Transported 99 Unknown Minutes""),
  related_factors_crash_level_1 INT64 ,
  related_factors_crash_level_1_name STRING ,
  related_factors_crash_level_2 INT64 ,
  related_factors_crash_level_2_name STRING ,
  related_factors_crash_level_3 INT64 ,
  related_factors_crash_level_3_name STRING ,
  number_of_fatalities INT64 ,
  number_of_drunk_drivers INT64 ,
  timestamp_of_crash TIMESTAMP 
);"

Some other tables have the similar structure: [' accident_2016', ' accident_2020', ' accident_2015', ' accident_2017', ' accident_2018', ' accident_2019']
,12
table_name, pbtype_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. pbtype_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  person_type INT64 ,
  person_type_name STRING ,
  age INT64 ,
  age_name STRING ,
  sex STRING ,
  sex_name STRING ,
  marked_crosswalk_present STRING ,
  marked_crosswalk_present_name STRING ,
  sidewalk_present STRING ,
  sidewalk_present_name STRING ,
  school_zone STRING ,
  school_zone_name STRING ,
  crash_type_pedestrian INT64 ,
  crash_type_pedestrian_name STRING ,
  crash_type_bicycle INT64 ,
  crash_type_bicycle_name STRING ,
  crash_location_pedestrian STRING ,
  crash_location_pedestrian_name STRING ,
  crash_location_bicycle STRING ,
  crash_location_bicycle_name STRING ,
  pedestrian_position STRING ,
  pedestrian_position_name STRING ,
  bicyclist_position STRING ,
  bicyclist_position_name STRING ,
  pedestrian_initial_direction_of_travel STRING ,
  pedestrian_initial_direction_of_travel_name STRING ,
  bicyclist_initial_direction_of_travel STRING ,
  bicyclist_initial_direction_of_travel_name STRING ,
  motorist_initial_direction_of_travel STRING ,
  motorist_initial_direction_of_travel_name STRING ,
  motorist_maneuver STRING ,
  motorist_maneuver_name STRING ,
  intersection_leg STRING ,
  intersection_leg_name STRING ,
  pedestrian_scenario STRING ,
  pedestrian_scenario_name STRING ,
  crash_group_pedestrian INT64 ,
  crash_group_pedestrian_name STRING ,
  crash_group_bicycle INT64 ,
  crash_group_bicycle_name STRING 
);"

Some other tables have the similar structure: [' pbtype_2015', ' pbtype_2020', ' pbtype_2017', ' pbtype_2016', ' pbtype_2018', ' pbtype_2019']
,13
table_name,distract_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_distracted_by INT64  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur. For more info on the codes, please look at <PC16 Driver Distracted By> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_distracted_by_name STRING  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur."")
);"

Some other tables have the similar structure: ['distract_2016', 'distract_2015']
,14
table_name, violatn_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. violatn_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  violations_charged STRING ,
  violations_charged_name STRING 
);"

Some other tables have the similar structure: [' violatn_2017', ' violatn_2018', ' violatn_2020', ' violatn_2016', ' violatn_2019', ' violatn_2015']
,15
table_name, nmcrash_2018
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. nmcrash_2018`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_contributing_circumstances INT64  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash. For more info on the codes, please look at <NM12 Non-Motorist Contributing Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_contributing_circumstances_name STRING  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash."")
);"

Some other tables have the similar structure: [' nmcrash_2018', ' nmcrash_2019', ' nmcrash_2017', ' nmcrash_2016', ' nmcrash_2020', ' nmcrash_2015']
,16
table_name,person_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.person_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  number_of_motor_vehicle_striking_non_motorist INT64  of the in-transport vehicle that made contact with this non-motorist. 000 Occupant of a Motor Vehicle 001-998 Vehicle Number of Striking Vehicle 999 Unknown""),
  county INT64  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  land_use STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  land_use_name STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  functional_system STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  functional_system_name STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  school_bus_related STRING ,
  vehicle_make INT64  of this vehicle. For more info on the codes, please look at <V9 Vehicle Make> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle.""),
  make_model_combined INT64  followed by the 3-digit “Vehicle Model” code (MODEL). See the current FARS/NASS GES Coding and Validation Manual for vehicle make and model codes.""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_trailing STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use STRING ,
  rollover STRING ,
  initial_contact_point INT64 ,
  initial_contact_point_name STRING ,
  fire_occurrence STRING ,
  age INT64 ,
  sex STRING ,
  person_type INT64 ,
  person_type_name STRING ,
  injury_severity INT64 ,
  injury_severity_name STRING ,
  seating_position INT64 ,
  seating_position_name STRING ,
  restraint_system_helmet_use INT64 ,
  restraint_system_helmet_use_name STRING ,
  indication_of_misuse_of_restraint_system_helmet STRING ,
  air_bag_deployed INT64 ,
  air_bag_deployed_name STRING ,
  ejection INT64  7 Not Reported 8 Not Applicable -- Unknown (2007-2008) 9 Unknown if Ejected (Since 2009)""),
  ejection_name STRING ,
  ejection_path INT64 ,
  ejection_path_name STRING ,
  extrication STRING ,
  police_reported_alcohol_involvement STRING  1 Yes (Alcohol Involved) 8 Not Reported 9 Unknown (Police Reported)""),
  method_of_alcohol_determination_by_police STRING  2 Preliminary Breath Test (PBT) 3 Behavioral 4 Passive Alcohol Sensor (PAS) 5 Observed 8 Other (e.g., Saliva Test) 9 Not Reported""),
  alcohol_test_status1 STRING ,
  alcohol_test_status2 STRING ,
  alcohol_test_status3 STRING   Test Refused (1991-2008) 995 Not Reported 996 None Given 997 AC Test Performed, Results Unknown 998 PBT Positive Reading with No Actual Value (Since 2004) -- Unknown if Tested/Not Reported 999 Unknown if Tested""),
  alcohol_test_status3_name STRING   Test Refused (1991-2008) 995 Not Reported 996 None Given 997 AC Test Performed, Results Unknown 998 PBT Positive Reading with No Actual Value (Since 2004) -- Unknown if Tested/Not Reported 999 Unknown if Tested""),
  police_reported_drug_involvement STRING  1 Yes (Drugs Involved) 8 Not Reported 9 Unknown (Police Reported)""),
  method_of_drug_determination_by_police STRING  2 Drug Recognition Technician (DRT) Determination 3 Behavioral 7 Other 8 Not Reported""),
  drug_test_status STRING ,
  drug_test_type1 STRING ,
  drug_test_type2 STRING ,
  drug_test_type3 STRING ,
  drug_test_type4 INT64 ,
  drug_test_type4_name STRING ,
  drug_test_type5 INT64 ,
  drug_test_type5_name STRING ,
  drug_test_type6 INT64 ,
  drug_test_type6_name STRING ,
  transported_to_first_treatment_facility INT64 ,
  transported_to_first_treatment_facility_name STRING ,
  died_at_scene_en_route STRING ,
  day_of_death INT64  01-31 Day of the Month of the Death 99 Unknown (Since 2008)""),
  month_of_death INT64 ,
  year_of_death INT64  xxxx Year of the Death 9999 Unknown""),
  hour_of_death INT64 ,
  minute_of_death INT64 ,
  death_time INT64  9999 Unknown""),
  lag_hours INT64 ,
  lag_minutes INT64 , between the time of the crash and this person’s time of death. 00-59 Minutes 99 Unknown""),
  related_factors_person_level1 INT64 ,
  related_factors_person_level2 INT64 ,
  related_factors_person_level3 INT64 ,
  fatal_injury_at_work STRING  1 Yes (The Injury Was At Work) 8 Not Applicable (Not A Fatality) 9 Unknown""),
  hispanic_origin INT64 ,
  hispanic_origin_name STRING ,
  race INT64 ,
  race_name STRING ,
  non_motorist_location_at_time_of_crash INT64 ,
  non_motorist_location_at_time_of_crash_name STRING ,
  timestamp_of_crash TIMESTAMP 
)
OPTIONS(
  description=""This data file contains information describing all persons\ninvolved in the crash including motorists (i.e., drivers and passengers of in-transport\nmotor vehicles) and non-motorists (e.g., pedestrians and pedalcyclists). It provides\ninformation such as age, sex, vehicle occupant restraint use, and injury severity. There\nis one record per person.""
);"

Some other tables have the similar structure: ['person_2015', 'person_2016']
,17
table_name,factor_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.factor_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  contributing_circumstances_motor_vehicle INT64 ,
  contributing_circumstances_motor_vehicle_name STRING 
);"

Some other tables have the similar structure: ['factor_2016', 'factor_2015']
,18
table_name,damage_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.damage_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  damaged_areas INT64 ,
  damaged_areas_name STRING 
);"

Some other tables have the similar structure: ['damage_2016', 'damage_2015']
,19
table_name,accident_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  number_of_vehicle_forms_submitted_all INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_parked_working_vehicles INT64 ,
  number_of_forms_submitted_for_persons_not_in_motor_vehicles INT64  that are applicable to this case (i.e., non-occupants). 00-99 Number of Persons Not in Motor Vehicles""),
  number_of_persons_not_in_motor_vehicles_in_transport_mvit INT64 , or an other non-motorist (e.g., person outside a trafficway, person in a house). 0-98 Number of Persons Not in Motor Vehicles in Transport""),
  number_of_persons_in_motor_vehicles_in_transport_mvit INT64 ,
  number_of_forms_submitted_for_persons_in_motor_vehicles INT64  Forms that are applicable to this case (i.e., occupants). 000-999 Number of Person Forms""),
  county INT64  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  city INT64  publication of worldwide Geographic Location Codes (GLC). 0000 Not Applicable 0001-9996 GSA Geographical Codes 9997 Other 9898 Not Reported 9999 Unknown""),
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  year_of_crash INT64 ,
  day_of_week INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  national_highway_system INT64 ,
  land_use INT64 , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  land_use_name STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  functional_system INT64 , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  functional_system_name STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  ownership INT64 ,
  ownership_name STRING ,
  route_signing INT64  8 Other 9 Unknown""),
  route_signing_name STRING ,
  trafficway_identifier STRING  999999999999999999999999999999 Unknown""),
  trafficway_identifier_2 STRING  999999999999999999999999999999 Unknown""),
  milepoint INT64  99998 Not Reported 99999 Unknown""),
  latitude FLOAT64  DD.DDDD Actual Degrees 77.7777 Not Reported 88.8888 Not Available (If State Exempt) 99.9999 Unknown""),
  longitude FLOAT64  DDD.DDDD Actual Degrees 777.7777 Not Reported 888.8888 Not Available (If State Exempt) 999.9999 Unknown""),
  special_jurisdiction INT64 . 0 No Special Jurisdiction (Includes National Forests Since 2008) 1 National Park Service 2 Military 3 Indian Reservation 4 College/University Campus 5 Other Federal Properties (Since 1977) 8 Other (Since 1976) 9 Unknown""),
  special_jurisdiction_name STRING .""),
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  relation_to_junction_within_interchange_area STRING  and is based on the location of the “First Harmful Event” of the crash. 0 No 1 Yes 8 Not Reported 9 Unknown""),
  relation_to_junction_specific_location INT64  and is based on the location of the “First Harmful Event” of the crash. For more info on the codes, please look at <C21B Relation to Junction- Specific Location> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  relation_to_junction_specific_location_name STRING  and is based on the location of the “First Harmful Event” of the crash.""),
  type_of_intersection STRING ,
  work_zone STRING ,
  relation_to_trafficway INT64 ,
  relation_to_trafficway_name STRING ,
  light_condition INT64 ,
  light_condition_name STRING ,
  atmospheric_conditions_1 INT64 ,
  atmospheric_conditions_1_name STRING ,
  atmospheric_conditions_2 INT64 ,
  atmospheric_conditions_2_name STRING ,
  atmospheric_conditions INT64 ,
  atmospheric_conditions_name STRING ,
  school_bus_related STRING ,
  rail_grade_crossing_identifier STRING ,
  hour_of_notification INT64  88 Not Applicable or Not Notified 99 Unknown Hour 99 Unknown if Notified (when NOT_MIN = 98)""),
  minute_of_notification INT64  88 Not Applicable or Not Notified 98 Unknown if Notified 99 Unknown Minutes""),
  hour_of_arrival_at_scene INT64  -- Not Notified (when ARR_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when ARR_MIN = 97) 99 Unknown if Arrived (when ARR_MIN = 98)""),
  minute_of_arrival_at_scene INT64  -- Not Notified (when ARR_HOUR = 00) 88 Not Applicable or Not Notified 97 Officially Cancelled 98 Unknown if Arrived 99 Unknown Minutes""),
  hour_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when HOSP_MIN = 97) 99 Unknown if Transported (when HOSP_MIN = 98)""),
  minute_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_HR = 00) 88 Not Applicable or Not Notified 96 Terminated Transport 97 Officially Cancelled 98 Unknown if Transported 99 Unknown Minutes""),
  related_factors_crash_level_1 INT64 ,
  related_factors_crash_level_1_name STRING ,
  related_factors_crash_level_2 INT64 ,
  related_factors_crash_level_2_name STRING ,
  related_factors_crash_level_3 INT64 ,
  related_factors_crash_level_3_name STRING ,
  number_of_fatalities INT64 ,
  number_of_drunk_drivers INT64 ,
  timestamp_of_crash TIMESTAMP 
);"

Some other tables have the similar structure: ['accident_2016', 'accident_2015']
,20
table_name, cevent_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. cevent_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  vehicle_number_other_vehicle_name STRING  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING 
);"

Some other tables have the similar structure: [' cevent_2019', ' cevent_2017', ' cevent_2016', ' cevent_2020', ' cevent_2018', ' cevent_2015']
,21
table_name, distract_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. distract_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_distracted_by INT64  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur. For more info on the codes, please look at <PC16 Driver Distracted By> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_distracted_by_name STRING  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur."")
);"

Some other tables have the similar structure: [' distract_2015', ' distract_2017', ' distract_2018', ' distract_2016', ' distract_2019', ' distract_2020']
,22
table_name, nmimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. nmimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  condition_impairment_at_time_of_crash_non_motorist INT64  at Time of Crash- Non-Motorist> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_non_motorist_name STRING 
);"

Some other tables have the similar structure: [' nmimpair_2016', ' nmimpair_2015', ' nmimpair_2018', ' nmimpair_2019', ' nmimpair_2017', ' nmimpair_2020']
,23
table_name,pbtype_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.pbtype_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  person_type INT64 ,
  person_type_name STRING ,
  age INT64 ,
  sex STRING ,
  marked_crosswalk_present STRING ,
  sidewalk_present STRING ,
  school_zone STRING ,
  crash_type_pedestrian INT64 ,
  crash_type_pedestrian_name STRING ,
  crash_type_bicycle INT64 ,
  crash_type_bicycle_name STRING ,
  crash_location_pedestrian STRING ,
  crash_location_bicycle STRING ,
  pedestrian_position STRING ,
  bicyclist_position STRING ,
  pedestrian_initial_direction_of_travel STRING ,
  bicyclist_initial_direction_of_travel STRING ,
  motorist_initial_direction_of_travel STRING ,
  motorist_maneuver STRING ,
  intersection_leg STRING ,
  pedestrian_scenario STRING ,
  pedestrian_scenario_name STRING ,
  crash_group_pedestrian INT64 ,
  crash_group_pedestrian_name STRING ,
  crash_group_bicycle INT64 ,
  crash_group_bicycle_name STRING 
)
OPTIONS(
  description=""This data file contains information about crashes between\nmotor vehicles and pedestrians, people on personal conveyances and bicyclists. Data\nfrom the crash are enter into the Pedestrian and Bicycle Crash Analysis Tool (PBCAT).\nThe output fields from PBCAT, including the pre-crash actions of the parties involved\n(crash type), are included in this data set. There is one record for each pedestrian,\nbicyclist or person on a personal conveyance.""
);"

Some other tables have the similar structure: ['pbtype_2015', 'pbtype_2016']
,24
table_name, nmprior_2018
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. nmprior_2018`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_action_circumstances INT64  of the non-motorist immediately prior to their involvement in the crash. For more info on the codes, please look at <NM11 Non-Motorist Action/Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_action_circumstances_name STRING  of the non-motorist immediately prior to their involvement in the crash."")
);"

Some other tables have the similar structure: [' nmprior_2018', ' nmprior_2019', ' nmprior_2020', ' nmprior_2015', ' nmprior_2017', ' nmprior_2016']
,25
table_name, vevent_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vevent_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number STRING ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  vehicle_number_other_vehicle_name STRING  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315"")
);"

Some other tables have the similar structure: [' vevent_2019', ' vevent_2017', ' vevent_2016', ' vevent_2018', ' vevent_2020', ' vevent_2015']
,26
table_name,violatn_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.violatn_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  violations_charged STRING ,
  violations_charged_name STRING 
);"

Some other tables have the similar structure: ['violatn_2016', 'violatn_2015']
,27
table_name, parkwork_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. parkwork_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_occupants INT64 ,
  number_of_occupants_name STRING ,
  day_of_crash INT64 ,
  day_of_crash_name STRING ,
  month_of_crash INT64 ,
  month_of_crash_name STRING ,
  hour_of_crash INT64 ,
  hour_of_crash_name STRING ,
  minute_of_crash INT64 ,
  minute_of_crash_name STRING ,
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  unit_type INT64 ""),
  unit_type_name STRING ""),
  hit_and_run INT64 . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0 No / No Hit-and-Run -- Hit Motor Vehicle in Transport 1 Yes -- Hit Pedestrian or Non-Motorist -- Hit Parked Vehicle (Working Vehicle, Since 2004) or Object -- Other Involved Person, not a driver, left Scene (2005-2006) -- Hit-and-Run, Other Involved Person Left Scene (2007-2008) -- Not Reported 9 Unknown""),
  hit_and_run_name STRING . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0 No / No Hit-and-Run -- Hit Motor Vehicle in Transport 1 Yes -- Hit Pedestrian or Non-Motorist -- Hit Parked Vehicle (Working Vehicle, Since 2004) or Object -- Other Involved Person, not a driver, left Scene (2005-2006) -- Hit-and-Run, Other Involved Person Left Scene (2007-2008) -- Not Reported 9 Unknown""),
  registration_state INT64 ,
  registration_state_name STRING ,
  registered_vehicle_owner INT64  Was Registered Owner 2 Driver (of This Vehicle) Not Registered Owner (Other Private Owner) 3 Vehicle Registered as Business/Company/Government Vehicle 4 Vehicle Registered as Rental Vehicle 5 Vehicle Was Stolen (Reported By Police) -- Driverless Vehicle 6 Driverless/Motor Vehicle Parked/Stopped Off Roadway 9 Unknown""),
  registered_vehicle_owner_name STRING ,
  vehicle_make INT64  of this vehicle.For more info on the codes, please look at <V9 Vehicle Make> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle.""),
  vehicle_model INT64 ,
  make_model_combined STRING  followed by the 3-digit “Vehicle Model” code (MODEL).See the current FARS/NASS GES Coding and Validation Manual for vehicle make and model codes.""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_model_year INT64 ,
  vehicle_model_year_name STRING ,
  vehicle_identification_number_vin STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc.-- First 10 Characters xxxxxxxxxxxx First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vehicle_identification_number_vin_name STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc.-- First 10 Characters xxxxxxxxxxxx First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vin_character_1 STRING ,
  vin_character_2 STRING ,
  vin_character_3 STRING ,
  vin_character_4 STRING ,
  vin_character_5 STRING ,
  vin_character_6 STRING ,
  vin_character_7 STRING ,
  vin_character_8 STRING ,
  vin_character_9 STRING ,
  vin_character_10 STRING ,
  vin_character_11 STRING ,
  vin_character_12 STRING ,
  vehicle_trailing INT64 ,
  vehicle_trailing_name STRING ,
  mcid_issuing_authority INT64  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_issuing_authority_name STRING  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_identification_number STRING ,
  mcid_identification_number_name STRING ,
  motor_carrier_identification_number STRING ,
  motor_carrier_identification_number_name STRING ,
  gross_vehicle_weight_rating INT64 ,
  gross_vehicle_weight_rating_name STRING ,
  vehicle_configuration INT64 ,
  vehicle_configuration_name STRING ,
  cargo_body_type INT64 ,
  cargo_body_type_name STRING ,
  hazardous_material_involvement INT64 ,
  hazardous_material_involvement_name STRING ,
  hazardous_material_placard INT64 ,
  hazardous_material_placard_name STRING ,
  hazardous_material_identification_number INT64 ,
  hazardous_material_identification_number_name STRING ,
  hazardous_material_class_number INT64 ,
  hazardous_material_class_number_name STRING ,
  release_of_hazardous_material_from_the_cargo_compartment INT64 ,
  release_of_hazardous_material_from_the_cargo_compartment_name STRING ,
  bus_use INT64 ,
  bus_use_name STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use INT64 ,
  emergency_motor_vehicle_use_name STRING ,
  underride_override INT64 ,
  underride_override_name STRING ,
  initial_contact_point INT64 ,
  initial_contact_point_name STRING ,
  extent_of_damage INT64 ,
  extent_of_damage_name STRING ,
  vehicle_removal INT64 ,
  vehicle_removal_name STRING ,
  most_harmful_event INT64 ,
  most_harmful_event_name STRING ,
  related_factors_vehicle_level1 INT64 ,
  related_factors_vehicle_level1_name STRING ,
  related_factors_vehicle_level2 INT64 ,
  related_factors_vehicle_level2_name STRING ,
  fire_occurrence INT64 ,
  fire_occurrence_name STRING ,
  fatalities_in_vehicle INT64 ,
  ptrlr1vin STRING  of any trailing units of a combination vehicle.""),
  ptrlr1vinname STRING  of any trailing units of a combination vehicle.""),
  ptrlr2vin STRING  of any trailing units of a combination vehicle.""),
  ptrlr2vinname STRING  of any trailing units of a combination vehicle.""),
  ptrlr3vin STRING  of any trailing units of a combination vehicle.""),
  ptrlr3vinname STRING  of any trailing units of a combination vehicle."")
);"

Some other tables have the similar structure: [' parkwork_2019', ' parkwork_2018', ' parkwork_2016', ' parkwork_2015', ' parkwork_2020', ' parkwork_2017']
,28
table_name,vision_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vision_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  drivers_vision_obscured_by INT64 ,
  drivers_vision_obscured_by_name STRING 
)
OPTIONS(
  description=""This data file contains information about circumstances which\nmay have obscured the driver’s vision. There is at least one record per in-transport\nmotor vehicle. Each obstruction is a separate record.""
);"

Some other tables have the similar structure: ['vision_2015', 'vision_2016']
,29
table_name, vision_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vision_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  drivers_vision_obscured_by INT64 ,
  drivers_vision_obscured_by_name STRING 
);"

Some other tables have the similar structure: [' vision_2019', ' vision_2020', ' vision_2017', ' vision_2018', ' vision_2016', ' vision_2015']
,30
table_name, vindecode_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vindecode_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_make STRING ,
  marketing_year INT64 ,
  vehicle_type_code STRING ,
  vehicle_type STRING ,
  make_name STRING  Full name of the make (i.e. Chevrolet)""),
  model_code STRING  description""),
  vehicle_trim STRING ,
  vehicle_trim_1 STRING ,
  vehicle_trim_2 STRING ,
  vehicle_trim_3 STRING ,
  vehicle_trim_4 STRING ,
  body_style_code STRING ,
  body_style STRING ,
  num_of_doors INT64 ,
  number_of_wheels INT64 ,
  num_of_wheels_by_power_train INT64 ,
  vehicle_manufacturer_code STRING  Standard abbreviation of the name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  vehicle_manufacturer_name STRING  The name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  displacement_cid INT64  displacement in cubic inches. This is a rounded, marketing value, like 302 cubic inches, instead of 4967 cc.""),
  displacement_cc INT64  displacement in cubic centimeters. We intend to use this as the definitive, exact displacement value, i.e. 4967 cc.""),
  cylinder_count_code STRING ,
  cycle_count INT64  Refers to the cycle or stroke of an engine. 2-strokes are lightweight and simpler, but they burn oil, by design. Few cars on the road in North America are two-strokes, the last one offered was a 1967 Saab.""),
  fuel_code STRING  What an internal combustion burns to move a piston in a cylinder""),
  fuel STRING  description""),
  type_of_fuel_code STRING ,
  type_of_fuel STRING ,
  carburetion_types_code STRING ,
  carburetion_types STRING ,
  num_of_barrels STRING ,
  gross_vehicle_weights_range_code INT64 ,
  gross_vehicle_weights_range STRING  for trucks. This rating may or may not equal the actual GVW.""),
  distance_between_axles_for_base_model FLOAT64 ,
  distance_between_axles_for_particular_series STRING ,
  front_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  front_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  front_tire_size_code STRING ,
  front_tire_size STRING  As in '17R245'""),
  rear_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  rear_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  rear_tire_size_code STRING ,
  rear_tire_size STRING  As in '17R245'""),
  tonnage_rating STRING  description""),
  shipping_weight STRING ""),
  base_price STRING ,
  drive_type_1 STRING  This element describes type of driving configuration for cars and trucks such as FWD, AWD, RWD.""),
  drive_type_2 STRING  description""),
  country_sold_code STRING  Country where the vehicle is planned to be sold (may have different emissions standards).""),
  country_sold STRING  description""),
  brakes_abs_code STRING  A code that describes whether a vehicle has or does not have anti-lock brakes, and what kind of brakes they are. (Not coded for heavy truck). This is based on the series code that is assigned the vehicle from VINA.""),
  brakes_abs_description STRING  description""),
  security_type_code STRING  Describes the security system (if any) installed on this model.""),
  security_type STRING  description""),
  daytime_running_lights_1 STRING A Polk assigned code that identifies whether or not the vehicle has daytime running lights.""),
  daytime_running_lights_2 STRING  description""),
  restraint_type_code STRING  A Polk assigned code that identifies the type of restraints that a vehicle has based on VIN.""),
  restraint_type STRING  description""),
  cab_configuration_code STRING  Cab Type describes the physical configuration of a truck's cabin.""),
  cab_configuration STRING  medium description""),
  axle_type_front_axle_code STRING  The location of the front axle of a truck tractor. Set forward increases stability on the highway, Setback increases maneuverability in tight spaces.""),
  axle_type_front_axle STRING  short description""),
  axle_type_rear_axle_code STRING  Represents rear axle configuration on a truck tractor. Tandem axles increase load bearing capability.""),
  axle_type_rear_axle STRING  short description""),
  brake_type_code STRING  The type of brakes on the Vehicle (currently commercial truck only). Truck VIN determines this currently""),
  brake_type STRING  description""),
  engine_manufacture_code STRING  A Polk assigned code given to the original equipment manufacture of the within a vehicle""),
  engine_manufacture STRING  description""),
  engine_model STRING  description""),
  duty_type_code STRING  A Polk assigned code that represents the duty type of a truck engine, based on manufacturer information.""),
  duty_type STRING  medium description""),
  bed_length_code STRING  Code representing the manufacturer's description of the relative size of the cargo area of a pickup truck or van. A 'long' Ford Ranger bed (compact pickup) may well be shorter than a 'short' bed on an F350 (large industrial pickup).""),
  bed_length STRING  description""),
  standard_segmentation_code STRING ,
  standard_segmentation STRING ,
  plant_code STRING  Plant code where vehicle was manufactured.""),
  plant_country STRING  This is the country where the plant is located. Example values are USA, Canada and Japan.""),
  plant_city STRING  This is the city where the plant is located.""),
  plant_country_code STRING ,
  plant_state_code STRING ,
  plant_state STRING  This is the state or province (Canada) location of the plant.""),
  origin_code STRING  A code that indicates the origin of a vehicle.""),
  origin STRING  description""),
  displacement_liters FLOAT64  displacement in rounded Liters, where 1,000 cubic centimeters = 1 liter. Even domestic makes will advertise displacement in terms of liters (e.g. 5.0 liter mustang, which equates to a 302 CID or 4967 cc displacement).""),
  block_type STRING  Description""),
  head_configuration_1 STRING  Describes the cylinder head's camshaft/valve configuration.""),
  head_configuration_2 STRING  description""),
  valves_per_cylinder INT64  Number of intake/exhaust valves per cylinder.""),
  valves_total INT64  Total number of intake/exhaust valves.""),
  engine_code STRING  Code derived from the VIN (not the secondary VIN for a motorcycle). Usually a single character, some manufactures give full positions 4-8 and engine information from that; they do not break it down any further.""),
  is_incomplete STRING ""),
  battery_type_code STRING ,
  battery_type STRING ,
  total_battery_power STRING ,
  battery_voltage STRING ,
  supercharge_flag STRING ,
  supercharge_flag_description STRING ,
  turbocharger_flag STRING ,
  turbocharger_flag_description STRING ,
  variable_valve_timing_flag STRING ,
  motorcycles_body_style_code STRING ,
  motorcycles_body_style STRING 
);"

,31
table_name,vevent_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vevent_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number INT64 ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315"")
)
OPTIONS(
  description=""This data file contains the sequence of events for each intransport\nmotor vehicle involved in the crash. This data file has the same data elements\nas the Cevent data file. In addition, this data file has a data element that records the\nsequential event number for each vehicle (VEVENTNUM). There is one record for each\nevent for each in-transport motor vehicle.""
);"

Some other tables have the similar structure: ['vevent_2015', 'vevent_2016']
,32
table_name,vindecode_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vindecode_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_make STRING ,
  marketing_year INT64 ,
  vehicle_type_code STRING ,
  vehicle_type STRING ,
  make_name STRING  Full name of the make (i.e. Chevrolet)""),
  model_code STRING  description""),
  vehicle_trim STRING ,
  vehicle_trim_1 STRING ,
  vehicle_trim_2 STRING ,
  vehicle_trim_3 STRING ,
  vehicle_trim_4 STRING ,
  body_style_code STRING ,
  body_style STRING ,
  num_of_doors INT64 ,
  number_of_wheels INT64 ,
  num_of_wheels_by_power_train INT64 ,
  vehicle_manufacturer_code STRING  Standard abbreviation of the name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  vehicle_manufacturer_name STRING  The name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  displacement_cid INT64  displacement in cubic inches. This is a rounded, marketing value, like 302 cubic inches, instead of 4967 cc.""),
  displacement_cc INT64  displacement in cubic centimeters. We intend to use this as the definitive, exact displacement value, i.e. 4967 cc.""),
  cylinder_count_code STRING ,
  cycle_count INT64  Refers to the cycle or stroke of an engine. 2-strokes are lightweight and simpler, but they burn oil, by design. Few cars on the road in North America are two-strokes, the last one offered was a 1967 Saab.""),
  fuel_code STRING  What an internal combustion burns to move a piston in a cylinder""),
  fuel STRING  description""),
  type_of_fuel_code STRING ,
  type_of_fuel STRING ,
  carburetion_types_code STRING ,
  carburetion_types STRING ,
  num_of_barrels STRING ,
  gross_vehicle_weights_range_code INT64 ,
  gross_vehicle_weights_range STRING  for trucks. This rating may or may not equal the actual GVW.""),
  distance_between_axles_for_base_model FLOAT64 ,
  distance_between_axles_for_particular_series STRING ,
  front_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  front_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  front_tire_size_code STRING ,
  front_tire_size STRING  As in \""17R245\""""),
  rear_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  rear_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  rear_tire_size_code STRING ,
  rear_tire_size STRING  As in \""17R245\""""),
  tonnage_rating STRING  description""),
  shipping_weight INT64 ""),
  base_price STRING ,
  drive_type_1 STRING  This element describes type of driving configuration for cars and trucks such as FWD, AWD, RWD.""),
  drive_type_2 STRING  description""),
  country_sold_code STRING  Country where the vehicle is planned to be sold (may have different emissions standards).""),
  country_sold STRING  description""),
  brakes_abs_code STRING  A code that describes whether a vehicle has or does not have anti-lock brakes, and what kind of brakes they are. (Not coded for heavy truck). This is based on the series code that is assigned the vehicle from VINA.""),
  brakes_abs_description STRING  description""),
  security_type_code STRING  Describes the security system (if any) installed on this model.""),
  security_type STRING  description""),
  daytime_running_lights_1 STRING A Polk assigned code that identifies whether or not the vehicle has daytime running lights.""),
  daytime_running_lights_2 STRING  description""),
  restraint_type_code STRING  A Polk assigned code that identifies the type of restraints that a vehicle has based on VIN.""),
  restraint_type STRING  description""),
  cab_configuration_code STRING  Cab Type describes the physical configuration of a truck's cabin.""),
  cab_configuration STRING  medium description""),
  axle_type_front_axle_code STRING  The location of the front axle of a truck tractor. Set forward increases stability on the highway, Setback increases maneuverability in tight spaces.""),
  axle_type_front_axle STRING  short description""),
  axle_type_rear_axle_code STRING  Represents rear axle configuration on a truck tractor. Tandem axles increase load bearing capability.""),
  axle_type_rear_axle STRING  short description""),
  brake_type_code STRING  The type of brakes on the Vehicle (currently commercial truck only). Truck VIN determines this currently""),
  brake_type STRING  description""),
  engine_manufacture_code STRING  A Polk assigned code given to the original equipment manufacture of the within a vehicle""),
  engine_manufacture STRING  description""),
  engine_model STRING  description""),
  duty_type_code STRING  A Polk assigned code that represents the duty type of a truck engine, based on manufacturer information.""),
  duty_type STRING  medium description""),
  bed_length_code STRING  Code representing the manufacturer's description of the relative size of the cargo area of a pickup truck or van. A \""long\"" Ford Ranger bed (compact pickup) may well be shorter than a \""short\"" bed on an F350 (large industrial pickup).""),
  bed_length STRING  description""),
  standard_segmentation_code STRING ,
  standard_segmentation STRING ,
  plant_code STRING  Plant code where vehicle was manufactured.""),
  plant_country STRING  This is the country where the plant is located. Example values are USA, Canada and Japan.""),
  plant_city STRING  This is the city where the plant is located.""),
  plant_country_code STRING ,
  plant_state_code STRING ,
  plant_state STRING  This is the state or province (Canada) location of the plant.""),
  origin_code STRING  A code that indicates the origin of a vehicle.""),
  origin STRING  description""),
  displacement_liters FLOAT64  displacement in rounded Liters, where 1,000 cubic centimeters = 1 liter. Even domestic makes will advertise displacement in terms of liters (e.g. 5.0 liter mustang, which equates to a 302 CID or 4967 cc displacement).""),
  block_type STRING  Description""),
  head_configuration_1 STRING  Describes the cylinder head's camshaft/valve configuration.""),
  head_configuration_2 STRING  description""),
  valves_per_cylinder INT64  Number of intake/exhaust valves per cylinder.""),
  valves_total INT64  Total number of intake/exhaust valves.""),
  engine_code STRING  Code derived from the VIN (not the secondary VIN for a motorcycle). Usually a single character, some manufactures give full positions 4-8 and engine information from that; they do not break it down any further.""),
  is_incomplete STRING ""),
  battery_type_code STRING ,
  battery_type STRING ,
  total_battery_power STRING ,
  battery_voltage STRING ,
  supercharge_flag STRING ,
  supercharge_flag_description STRING ,
  turbocharger_flag STRING ,
  turbocharger_flag_description STRING ,
  variable_valve_timing_flag STRING ,
  motorcycles_body_style_code STRING ,
  motorcycles_body_style STRING 
);"

Some other tables have the similar structure: ['vindecode_2016', 'vindecode_2015']
,33
table_name,parkwork_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.parkwork_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_occupants INT64 ,
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  unit_type STRING ""),
  hit_and_run STRING . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0  No / No Hit-and-Run -- Hit Motor Vehicle in Transport 1  Yes -- Hit Pedestrian or Non-Motorist -- Hit Parked Vehicle (Working Vehicle, Since 2004) or Object -- Other Involved Person, not a driver, left Scene (2005-2006) -- Hit-and-Run, Other Involved Person Left Scene (2007-2008) -- Not Reported 9  Unknown""),
  registration_state INT64 ,
  registration_state_name STRING ,
  registered_vehicle_owner INT64  Was Registered Owner 2  Driver (of This Vehicle) Not Registered Owner (Other Private Owner) 3  Vehicle Registered as Business/Company/Government Vehicle 4  Vehicle Registered as Rental Vehicle 5  Vehicle Was Stolen (Reported By Police) -- Driverless Vehicle 6  Driverless/Motor Vehicle Parked/Stopped Off Roadway 9  Unknown""),
  registered_vehicle_owner_name STRING ,
  vehicle_make INT64  of this vehicle.For more info on the codes, please look at <V9 Vehicle Make> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle.""),
  vehicle_model INT64 ,
  make_model_combined INT64  followed by the 3-digit “Vehicle Model” code (MODEL).See the current FARS/NASS GES Coding and Validation Manual for vehicle make and model codes.""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_model_year INT64 ,
  vehicle_identification_number_vin STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc.-- First 10 Characters xxxxxxxxxxxx First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vin_character_1 STRING ,
  vin_character_2 STRING ,
  vin_character_3 STRING ,
  vin_character_4 STRING ,
  vin_character_5 STRING ,
  vin_character_6 STRING ,
  vin_character_7 STRING ,
  vin_character_8 STRING ,
  vin_character_9 STRING ,
  vin_character_10 STRING ,
  vin_character_11 STRING ,
  vin_character_12 STRING ,
  vehicle_trailing STRING ,
  mcid_issuing_authority INT64  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_issuing_authority_name STRING  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_identification_number STRING ,
  motor_carrier_identification_number STRING ,
  gross_vehicle_weight_rating INT64 ,
  vehicle_configuration INT64 ,
  cargo_body_type INT64 ,
  hazardous_material_involvement STRING ,
  hazardous_material_placard STRING ,
  hazardous_material_identification_number INT64 ,
  hazardous_material_class_number INT64 ,
  release_of_hazardous_material_from_the_cargo_compartment STRING ,
  bus_use STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use STRING ,
  underride_override INT64 ,
  underride_override_name STRING ,
  initial_contact_point INT64 ,
  extent_of_damage STRING ,
  vehicle_removal STRING ,
  most_harmful_event INT64 ,
  related_factors_vehicle_level1 INT64 ,
  related_factors_vehicle_level2 INT64 ,
  fire_occurrence STRING ,
  fatalities_in_vehicle INT64 
)
OPTIONS(
  description=""This data file contains information about parked and working\nvehicles that were involved in FARS crashes. A parked vehicle is a motor vehicle which\nis stopped off the roadway. A working vehicle is used to indicate that this is a motor\nvehicle that was in the act of performing highway construction, maintenance or utility\nwork related to the trafficway when it became an involved in the crash. Data users are\nstrongly advised to consult the annual FARS/NASS GES Coding and Validation Manuals\nfor a detailed description. There is one record per parked/working vehicle.""
);"

Some other tables have the similar structure: ['parkwork_2015', 'parkwork_2016']
,34
table_name,nmimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.nmimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  condition_impairment_at_time_of_crash_non_motorist INT64  at Time of Crash- Non-Motorist> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_non_motorist_name STRING 
);"

Some other tables have the similar structure: ['nmimpair_2016', 'nmimpair_2015']
,35
table_name,nmprior_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.nmprior_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_action_circumstances INT64  of the non-motorist immediately prior to their involvement in the crash. For more info on the codes, please look at <NM11 Non-Motorist Action/Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_action_circumstances_name STRING  of the non-motorist immediately prior to their involvement in the crash."")
)
OPTIONS(
  description=""This data file contains information about the actions of people\nwho are not occupants of motor vehicles (e.g., pedestrians and bicyclists) at the time of\ntheir involvement in the crash. There is one record per action and there is at least one\nrecord for each person who is not an occupant of a motor vehicle.""
);"

Some other tables have the similar structure: ['nmprior_2015', 'nmprior_2016']
,36
table_name,vehicle_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vehicle_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_occupants INT64  99 Unknown""),
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  unit_type STRING ""),
  hit_and_run STRING . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0 No 1 Yes -- Not Reported 9 Unknown""),
  registration_state INT64 ,
  registration_state_name STRING ,
  registered_vehicle_owner INT64  Was Registered Owner 2 Driver (of This Vehicle) Not Registered Owner (Other Private Owner) 3 Vehicle Registered as Business/Company/Government Vehicle 4 Vehicle Registered as Rental Vehicle 5 Vehicle Was Stolen (Reported By Police) -- Driverless Vehicle 6 Driverless/Motor Vehicle Parked/Stopped Off Roadway 9 Unknown""),
  registered_vehicle_owner_name STRING ,
  vehicle_make INT64  of this vehicle. For more info on the codes, please look at V9 Vehicle Make section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle""),
  vehicle_model INT64 ,
  make_model_combined INT64  followed by the 3-digit “Vehicle Model” code (MODEL). For more info on the codes, please look at V100 Make Model Combined section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_model_year INT64 ,
  vehicle_identification_number_vin STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc. -- First 10 Characters xxxxxxxxxxxx  First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vin_character_1 STRING ,
  vin_character_2 STRING ,
  vin_character_3 STRING ,
  vin_character_4 STRING ,
  vin_character_5 STRING ,
  vin_character_6 STRING ,
  vin_character_7 STRING ,
  vin_character_8 STRING ,
  vin_character_9 STRING ,
  vin_character_10 STRING ,
  vin_character_11 STRING ,
  vin_character_12 STRING ,
  vehicle_trailing STRING ,
  jackknife STRING ,
  mcid_issuing_authority INT64  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_identification_number STRING ,
  motor_carrier_identification_number_mcid STRING ,
  gross_vehicle_weight_rating STRING ,
  vehicle_configuration INT64 ,
  vehicle_configuration_name STRING ,
  cargo_body_type INT64 ,
  cargo_body_type_name STRING ,
  hazardous_material_involvement STRING ,
  hazardous_material_placard INT64 ,
  hazardous_material_identification_number INT64 ,
  hazardous_material_class_number INT64 ,
  release_of_hazardous_material_from_the_cargo_compartment STRING ,
  bus_use STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use STRING ,
  travel_speed INT64 ,
  underride_override INT64 ,
  rollover STRING ,
  location_of_rollover STRING ,
  initial_contact_point INT64 ,
  extent_of_damage STRING ,
  vehicle_removal STRING ,
  most_harmful_event INT64 ,
  related_factors_vehicle_level_1 INT64 ,
  related_factors_vehicle_level_2 INT64 ,
  fire_occurrence STRING ,
  driver_presence STRING  -- Driver Left Scene -- Motor Vehicle not In-Transport (Parked/Stopped Off Roadway/ Working Motor Vehicle/In Motion Outside Trafficway, 2008 Only) -- Motor Vehicle not In-Transport (Parked/Stopped Off Roadway/Working/ In Motion Outside Trafficway, 2005-2007) 9 Unknown""),
  drivers_license_state INT64 ,
  drivers_zip_code INT64 ,
  non_cdl_license_status INT64 ,
  non_cdl_license_type STRING ,
  commercial_motor_vehicle_license_status INT64  if applicable. For more info on the codes, please look at D8 Commercial Motor Vehicle License Status section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  compliance_with_cdl_endorsements STRING  on a Commercial Driver’s License (CDL) and whether this driver was complying with the CDL endorsements. 0 No Endorsements Required For This Vehicle 1 Endorsement(s) Required, Complied With 2 Endorsement(s) Required, Not Complied With 3 Endorsement(s) Required, Compliance Unknown -- 7 No Driver Present/Unknown if Driver Present -- Not Reported 9 Unknown, if Required""),
  license_compliance_with_class_of_vehicle STRING ,
  compliance_with_license_restrictions INT64 ,
  driver_height INT64 . 24-107 Actual Height in Inches 998 No Driver Present/Unknown if Driver Present 999 Unknown""),
  driver_weight INT64 . 40-700 Actual Weight in Pounds 997 No Driver Present/Unknown if Driver Present 998 Other 999 Unknown""),
  previous_recorded_crashes INT64 ,
  previous_recorded_suspensions_and_revocations INT64 ,
  previous_dwi_convictions INT64 ,
  previous_speeding_convictions INT64 ,
  previous_other_moving_violation_convictions INT64 ,
  month_of_first_crash_suspension_or_conviction INT64 ,
  year_of_first_crash_suspension_or_conviction INT64 ,
  month_of_last_crash_suspension_or_conviction INT64 ,
  year_of_last_crash_suspension_or_conviction INT64 ,
  speeding_related STRING ,
  related_factors_driver_level_1 INT64 ,
  related_factors_driver_level_2 INT64 ,
  related_factors_driver_level_3 INT64 ,
  related_factors_driver_level_4 INT64 ,
  trafficway_description STRING  Median 3 Two-Way, Divided, Positive Median Barrier 4 One-Way Trafficway 5 Two-Way, Not Divided With a Continuous Left-Turn Lane 6 Entrance/Exit Ramp 8 Not Reported 9 Unknown""),
  total_lanes_in_roadway INT64 ,
  speed_limit INT64  5-80 Speed Limit (5 mph Increments) 98 Not Reported 99 Unknown""),
  roadway_alignment STRING ,
  roadway_grade STRING  5 Uphill 6 Downhill 8 Not Reported 9 Unknown""),
  roadway_surface_type STRING ,
  roadway_surface_condition INT64 ,
  roadway_surface_condition_name STRING ,
  traffic_control_device INT64 ,
  traffic_control_device_functioning STRING ,
  pre_event_movement_prior_to_recognition_of_critical_event INT64  section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  critical_event_precrash INT64 . For more info on the codes, please look at PC19 Critical Event- Precrash section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  critical_event_precrash_name STRING .""),
  attempted_avoidance_maneuver INT64 ,
  attempted_avoidance_maneuver_name STRING ,
  pre_impact_stability STRING ,
  pre_impact_location INT64 ,
  crash_type INT64 ,
  crash_type_name STRING ,
  fatalities_in_vehicle INT64 ,
  driver_drinking STRING ,
  timestamp_of_crash TIMESTAMP 
)
OPTIONS(
  description=""This data file contains information describing the in-transport\nmotor vehicles and the drivers of in-transport motor vehicle who are involved in the\ncrash. There is one record per in-transport motor vehicle. Parked and working vehicle\ninformation is in the Parkwork data file""
);"

Some other tables have the similar structure: ['vehicle_2015', 'vehicle_2016']
,37
table_name,cevent_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.cevent_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING 
)
OPTIONS(
  description=""This data file contains information for all of the qualifying events (i.e., both harmful and non-harmful involving in-transport motor vehicles) which occurred in the crash. It details the chronological sequence of events resulting from an unstabilized situation that constitutes a motor vehicle traffic crash. There is one record per event. Included in each record is a description of the event or object contacted (e.g.,\nran off road-right, crossed center line, guardrail, parked motor vehicle), the vehicles involved, and the vehicles’ area of impact""
);"

Some other tables have the similar structure: ['cevent_2015', 'cevent_2016']
Database Name: bigquery-public-data
Schema Name: utility_us
DDL describes table information.
,0
table_name,us_states_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_states_area`
(
  region_code STRING ,
  division_code STRING ,
  state_fips_code STRING ,
  state_gnis_code STRING ,
  state_geo_id STRING ,
  state_abbreviation STRING ,
  state_name STRING ,
  legal_area_code STRING ,
  feature_class_code STRING ,
  functional_status_code STRING ,
  area_land_meters INT64 ,
  area_water_meters INT64 ,
  internal_point_lat STRING ,
  internal_point_lon STRING ,
  state_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,1
table_name,us_border_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_border_area`
(
  name STRING,
  geo_id STRING,
  aff_geo_id STRING,
  us_border_geom GEOGRAPHY
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,2
table_name,us_msa_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_msa_area`
(
  csa_code STRING  code of the CSA that contains the metropolitan statistical area/micropolitan statistical area (MSA)""),
  msa_code STRING  code""),
  geo_code STRING ,
  name STRING ,
  lsad_name STRING ,
  lsad_code STRING  code for a given MSA.\n\nM1 indicates a \""metro area (suffix)\""\nM2 indicates a \""micro area (suffix)\""""),
  status_indicator STRING ,
  feature_class_code STRING ,
  area_land_meters NUMERIC ,
  area_water_meters NUMERIC ,
  int_point_lat STRING ,
  int_point_lon STRING ,
  msa_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,3
table_name,us_cities_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_cities_area`
(
  urban_area_code STRING ,
  geo_code STRING ,
  name STRING ,
  lsad_name STRING ,
  lsad_code STRING  code for a given urban area. \n\n75 indicates an \""urbanized area\""\n76 indicates an \""urban cluster\""""),
  feature_class_code STRING ,
  area_type STRING ,
  functional_status STRING ,
  area_land_meters NUMERIC ,
  area_water_meters NUMERIC ,
  int_point_lat STRING ,
  int_point_lon STRING ,
  city_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,4
table_name,zipcode_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.zipcode_area`
(
  zipcode STRING NOT NULL ,
  area_land_meters INT64  - Created for statistical purposes only""),
  area_water_meters INT64  - Created for statistical purposes only""),
  area_land_miles FLOAT64  - Created for statistical purposes only""),
  area_water_miles FLOAT64  - Created for statistical purposes only""),
  latitude FLOAT64  First character is blank or \""-\"" denoting North or South latitude respectively""),
  longitude FLOAT64  First character is blank or \""-\"" denoting East or West longitude respectively""),
  state_code STRING ,
  state_name STRING ,
  city STRING ,
  county STRING ,
  state_fips STRING ,
  zipcode_geom STRING  ZIP Codes as polygons"")
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.\n\nCombining a variety of sources, mainly from the Census Bureau (such as National Places: https://www2.census.gov/geo/docs/reference/codes/files/national_places.txt), we've derived a useful US zipcode and general geographic table.""
);"

,5
table_name,country_code_iso
ddl,"CREATE TABLE `bigquery-public-data.utility_us.country_code_iso`
(
  country_name STRING NOT NULL ,
  fips_code STRING ,
  alpha_2_code STRING ,
  alpha_3_code STRING ,
  numeric_code STRING ,
  stanag_code STRING ,
  cctlds STRING ,
  continent_code STRING ,
  continent_name STRING ,
  sub_continent_name STRING 
);"

,6
table_name,num_999999
ddl,"CREATE TABLE `bigquery-public-data.utility_us.num_999999`
(
  num INT64 
);"

,7
table_name,time
ddl,"CREATE TABLE `bigquery-public-data.utility_us.time`
(
  time TIME ""),
  hour INT64 ,
  minute INT64 ,
  second INT64 ,
  second_in_day INT64 ,
  hour_ampm INT64 ,
  is_pm BOOL 
);"

,8
table_name,date_greg
ddl,"CREATE TABLE `bigquery-public-data.utility_us.date_greg`
(
  date DATE ; [1582-10-15, 2199-12-31]""),
  date_str STRING ,
  date_int INT64 ,
  date_dash STRING ,
  date_slash STRING ,
  day INT64 ,
  day_abbr STRING ,
  dow_mon17 INT64 ""),
  dow_mon06 INT64 ,
  dow_sun17 INT64 ,
  dow_sun06 INT64 ,
  week_mon INT64 ,
  week_sun INT64 ,
  week_iso INT64  - [0, 53] ; https://en.wikipedia.org/wiki/ISO_week_date""),
  month INT64 ,
  month_abbr STRING ,
  month_first_day DATE ,
  quarter INT64 ,
  quarter_first_day DATE ,
  half INT64 ,
  half_first_day DATE ,
  year INT64 ,
  year_iso INT64 ,
  year_first_day DATE 
);"

,9
table_name,us_coastline_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_coastline_area`
(
  name STRING,
  coastline_geom GEOGRAPHY
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,10
table_name,us_county_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_county_area`
(
  state_fips_code STRING ,
  county_fips_code STRING ,
  county_gnis_code STRING . GNIS database contains information about physical and cultural geographic features of all types in the United States, associated areas, and Antarctica, current and historical, but not including roads and highways. The database holds the Federally recognized name of each feature and defines the feature location by state, county, USGS topographic map, and geographic coordinates. Other attributes include names or spellings other than the official name, feature designations, feature classification, historical and descriptive information, and for some categories the geometric boundaries.""),
  aff_geo_code STRING ,
  geo_id STRING ,
  county_name STRING ,
  legal_area_code STRING ,
  area_land_meters INT64 ,
  area_water_meters INT64 ,
  county_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,11
table_name,us_csa_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_csa_area`
(
  csa_code STRING  code""),
  aff_geo_code STRING ,
  geo_code STRING ,
  name STRING ,
  lsad_code STRING  code for a given CSA.\n\nM0 indicates \""CSA (suffix)\"".  A full list of LSAD codes can be found here: https://www.census.gov/geo/reference/lsad.html""),
  area_land_meters INT64 ,
  area_water_meters INT64 ,
  csa_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'census_bureau_usa': ['population_by_zip_2000', 'population_by_zip_2010'], 'nhtsa_traffic_fatalities': [' accident_2020', ' cevent_2017', ' cevent_2019', ' distract_2015', ' drimpair_2017', ' drimpair_2019', ' factor_2020', ' maneuver_2018', ' nmcrash_2018', ' nmcrash_2019', ' nmimpair_2015', ' nmimpair_2016', ' nmimpair_2018', ' safetyeq_2016', ' vsoe_2015', 'accident_2016', 'damage_2016', 'factor_2016', 'nmcrash_2016', 'person_2015'], 'utility_us': ['country_code_iso', 'date_greg', 'num_999999', 'time', 'us_border_area', 'us_cities_area', 'us_coastline_area', 'us_county_area', 'us_csa_area', 'us_msa_area', 'us_states_area', 'zipcode_area']}}
Begin Exploring Related Columns
**Tables and Columns Relevant to the Task:**

1. **`bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`**
   - `state_name`: Identifies the state where the accident occurred.
   - `consecutive_number`: Unique identifier for each accident.
   - `driver_distracted_by_name`: Details the distraction status of the driver.

2. **`bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`**
   - Same columns as above for the year 2016.

3. **`bigquery-public-data.census_bureau_usa.population_by_zip_2010`**
   - `zipcode`: Zip code identifier to link population data.
   - `population`: Population count for each ZIP code.

4. **`bigquery-public-data.utility_us.zipcode_area`**
   - `zipcode`: ZIP code identifier to link with population data.
   - `state_name`: Provides the state associated with each ZIP code.

**Conditions to Apply:**

- Exclude accidents where `driver_distracted_by_name` is 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.'

---

**SQL Queries to Explore the Data:**

1. **List distinct distraction statuses in `distract_2015`:**

   ```sql
   SELECT DISTINCT driver_distracted_by_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
   ```

2. **List distinct distraction statuses in `distract_2016`:**

   ```sql
   SELECT DISTINCT driver_distracted_by_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   LIMIT 100;
   ```

3. **List distinct states in `distract_2015`:**

   ```sql
   SELECT DISTINCT state_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
   ```

4. **List distinct states in `distract_2016`:**

   ```sql
   SELECT DISTINCT state_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   LIMIT 100;
   ```

5. **Count accidents involving driver distraction per state in 2015, excluding specified statuses:**

   ```sql
   SELECT
     state_name,
     COUNT(DISTINCT consecutive_number) AS accident_count
   FROM
     `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   WHERE
     LOWER(driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
   GROUP BY
     state_name
   ORDER BY
     accident_count DESC
   LIMIT 100;
   ```

6. **Count accidents involving driver distraction per state in 2016, excluding specified statuses:**

   ```sql
   SELECT
     state_name,
     COUNT(DISTINCT consecutive_number) AS accident_count
   FROM
     `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   WHERE
     LOWER(driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
   GROUP BY
     state_name
   ORDER BY
     accident_count DESC
   LIMIT 100;
   ```

7. **View sample population data from `population_by_zip_2010`:**

   ```sql
   SELECT *
   FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
   LIMIT 100;
   ```

8. **List distinct ZIP codes and associated states from `zipcode_area`:**

   ```sql
   SELECT DISTINCT zipcode, state_name
   FROM `bigquery-public-data.utility_us.zipcode_area`
   LIMIT 100;
   ```

9. **Aggregate total population per state using `population_by_zip_2010` and `zipcode_area`:**

   ```sql
   SELECT
     z.state_name,
     SUM(p.population) AS total_population
   FROM
     `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
   JOIN
     `bigquery-public-data.utility_us.zipcode_area` AS z
   ON
     p.zipcode = z.zipcode
   GROUP BY
     z.state_name
   ORDER BY
     total_population DESC
   LIMIT 100;
   ```

10. **Check for ZIP codes in `population_by_zip_2010` not present in `zipcode_area`:**

    ```sql
    SELECT
      p.zipcode
    FROM
      `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
    LEFT JOIN
      `bigquery-public-data.utility_us.zipcode_area` AS z
    ON
      p.zipcode = z.zipcode
    WHERE
      z.zipcode IS NULL
    LIMIT 100;
    ```

11. **Find total U.S. population from the 2010 census data:**

    ```sql
    SELECT
      SUM(population) AS total_us_population
    FROM
      `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
    LIMIT 100;
    ```

12. **List distinct states from `us_states_area`:**

    ```sql
    SELECT DISTINCT state_name
    FROM `bigquery-public-data.utility_us.us_states_area`
    LIMIT 100;
    ```

13. **List sample data from `distract_2015` for understanding data structure:**

    ```sql
    SELECT *
    FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
    LIMIT 100;
    ```

14. **List sample data from `distract_2016` for understanding data structure:**

    ```sql
    SELECT *
    FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
    LIMIT 100;
    ```

15. **Count total accidents (regardless of distraction status) per state in 2015:**

    ```sql
    SELECT
      state_name,
      COUNT(DISTINCT consecutive_number) AS total_accidents
    FROM
      `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
    GROUP BY
      state_name
    ORDER BY
      total_accidents DESC
    LIMIT 100;
    ```

16. **Count total accidents (regardless of distraction status) per state in 2016:**

    ```sql
    SELECT
      state_name,
      COUNT(DISTINCT consecutive_number) AS total_accidents
    FROM
      `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
    GROUP BY
      state_name
    ORDER BY
      total_accidents DESC
    LIMIT 100;
    ```

17. **Identify the top five states with the highest number of distracted driving accidents in 2015:**

    ```sql
    SELECT
      state_name,
      COUNT(DISTINCT consecutive_number) AS accident_count
    FROM
      `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
    WHERE
      LOWER(driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
    GROUP BY
      state_name
    ORDER BY
      accident_count DESC
    LIMIT 5;
    ```

18. **Identify the top five states with the highest number of distracted driving accidents in 2016:**

    ```sql
    SELECT
      state_name,
      COUNT(DISTINCT consecutive_number) AS accident_count
    FROM
      `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
    WHERE
      LOWER(driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
    GROUP BY
      state_name
    ORDER BY
      accident_count DESC
    LIMIT 5;
    ```

19. **Calculate accident rate per 100,000 people for a sample state in 2015:**

    Replace `[STATE_NAME]` with the actual state name and `[STATE_POPULATION]` with the state's population from 2010 census data.

    ```sql
    SELECT
      '[STATE_NAME]' AS state_name,
      COUNT(DISTINCT consecutive_number) * 100000.0 / [STATE_POPULATION] AS accidents_per_100000_people
    FROM
      `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
    WHERE
      state_name = '[STATE_NAME]'
      AND LOWER(driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
    LIMIT 100;
    ```

20. **List the population and accident counts together for all states for 2015:**

    ```sql
    SELECT
      state_name,
      SUM(accident_count) AS total_accidents,
      SUM(total_population) AS total_population
    FROM (
      SELECT
        z.state_name,
        0 AS accident_count,
        SUM(p.population) AS total_population
      FROM
        `bigquery-public-data.utility_us.zipcode_area` AS z
      JOIN
        `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
      ON
        z.zipcode = p.zipcode
      GROUP BY
        z.state_name
      UNION ALL
      SELECT
        state_name,
        COUNT(DISTINCT consecutive_number) AS accident_count,
        0 AS total_population
      FROM
        `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
      WHERE
        LOWER(driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
      GROUP BY
        state_name
    )
    GROUP BY
      state_name
    ORDER BY
      total_accidents DESC
    LIMIT 100;
    ```

---

These queries help explore and understand the data relevant to the task, allowing us to:

- Identify the various distraction statuses recorded.
- Determine the states involved in the data.
- Count the number of accidents involving driver distraction per state.
- Aggregate population data per state.
- Prepare the necessary data to calculate the accident rates per 100,000 people.

By running these queries, we can gather the necessary data to compute the accident rates and identify the top five states each year with the highest rates of traffic accidents due to driver distraction.Query:
SELECT DISTINCT driver_distracted_by_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
Answer:
driver_distracted_by_name
Not Distracted
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Not Reported
Lost In Thought/Day Dreaming
Other Distraction
Unknown if Distracted
Query:
SELECT DISTINCT driver_distracted_by_name
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   LIMIT 100;
Answer:
driver_distracted_by_name
Not Distracted
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Not Reported
Lost In Thought/Day Dreaming
Other Distraction
Unknown if Distracted
Query:
SELECT DISTINCT state_number
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   LIMIT 100;
Answer:
state_number
38
56
10
1
4
5
6
8
9
12
13
17
18
19
20
21
22
24
26
27
29
30
32
34
35
36
37
39
40
41
42
47
48
49
51
53
54
55
33
50
46
44
11
2
23
15
16
25
28
31
45
Query:
-- Corrected Query 1
SELECT DISTINCT s.state_name
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.utility_us.us_states_area` AS s
  ON d.state_number = CAST(s.state_fips_code AS INT64)
LIMIT 100
Answer:
state_name
New Hampshire
Wyoming
Rhode Island
Delaware
Alaska
Maine
Alabama
Arizona
Arkansas
California
Colorado
Connecticut
Florida
Georgia
Illinois
Indiana
Kentucky
Louisiana
Maryland
Michigan
Minnesota
Nebraska
Nevada
New Jersey
New York
North Carolina
Ohio
Oklahoma
Pennsylvania
South Carolina
Tennessee
Texas
Utah
Virginia
Washington
West Virginia
Wisconsin
North Dakota
Montana
Vermont
South Dakota
District of Columbia
Hawaii
Idaho
Iowa
Kansas
Massachusetts
Mississippi
New Mexico
Oregon
Missouri
Query:
-- Corrected Query 2
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.utility_us.us_states_area` AS s
  ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 100
Answer:
state_name,accident_count
Texas,441
Florida,235
California,206
Kentucky,200
New York,163
Washington,158
North Carolina,157
Louisiana,154
New Jersey,146
Virginia,129
New Mexico,124
Arizona,118
Tennessee,112
Maryland,104
Wisconsin,102
Missouri,97
Georgia,76
Kansas,73
Pennsylvania,72
Colorado,70
Michigan,67
South Carolina,67
Massachusetts,65
Minnesota,60
Ohio,59
Alabama,57
Indiana,56
Oklahoma,54
Illinois,52
Montana,39
Arkansas,35
Idaho,35
Utah,32
Iowa,31
New Hampshire,18
Hawaii,17
Nebraska,16
Nevada,16
Wyoming,15
Delaware,15
South Dakota,14
Connecticut,14
Maine,14
Oregon,12
Alaska,12
West Virginia,8
Mississippi,7
Vermont,5
North Dakota,2
Rhode Island,1
Query:
-- Corrected Query 3
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.utility_us.us_states_area` AS s
  ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  LOWER(d.driver_distracted_by_name) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 100
Answer:
state_name,accident_count
Texas,389
Florida,233
California,227
New Jersey,193
Kentucky,192
North Carolina,157
Washington,147
New Mexico,147
Louisiana,143
New York,143
Virginia,141
Tennessee,132
Wisconsin,117
Arizona,102
Kansas,95
Georgia,88
Missouri,80
Colorado,77
Illinois,68
Ohio,68
Maryland,67
Pennsylvania,62
Michigan,61
Alabama,57
Oklahoma,55
South Carolina,52
Idaho,51
Indiana,48
Massachusetts,47
Iowa,40
Minnesota,37
Utah,25
Arkansas,23
Montana,20
Hawaii,19
Delaware,16
Wyoming,14
Connecticut,13
Nebraska,13
Oregon,11
North Dakota,11
South Dakota,10
Nevada,8
New Hampshire,6
West Virginia,5
Vermont,4
Rhode Island,3
Maine,3
Mississippi,3
District of Columbia,1
Alaska,1
Query:
SELECT
  z.state_name,
  SUM(p.population) AS total_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
  ON p.zipcode = z.zipcode
WHERE
  p.population IS NOT NULL
GROUP BY
  z.state_name
ORDER BY
  total_population DESC
LIMIT 100;
Answer:
state_name,total_population
California,111748626
Texas,75434313
New York,58133523
Florida,56403678
Illinois,38491743
Pennsylvania,38107125
Ohio,34609542
Michigan,29650836
North Carolina,28606431
Georgia,28280514
Virginia,24003717
Indiana,19451376
Washington,19240062
Arizona,19127649
Tennessee,19003095
Missouri,17961405
Maryland,17320683
Wisconsin,17061036
Minnesota,15904047
Colorado,15088122
Alabama,14338764
South Carolina,13876092
Louisiana,13598490
Kentucky,12977133
Oregon,11490705
Oklahoma,11249850
Mississippi,9200223
Iowa,9131034
Arkansas,8733537
Kansas,8551884
Utah,8285430
Nevada,8099424
New Mexico,6161043
West Virginia,5558322
Nebraska,5480298
Idaho,4702578
Hawaii,4080903
Montana,2965035
Delaware,2693775
South Dakota,2434629
Alaska,2129790
North Dakota,2015343
District of Columbia,1780488
Wyoming,1683354
Washington (state),809694
Georgia (U.S. state),456018
"Oregon, Washington",123168
"Kentucky, Tennessee",76242
"Arizona, New Mexico",41208
"Alabama, Mississippi",28347
"Washington, D.C.",24681
"Arizona, Utah",17115
"Arkansas, Missouri",12783
"Arizona, New Mexico, Utah",9951
"Iowa, Missouri",9801
"Arkansas, Louisiana",7785
"Kansas, Oklahoma",7674
"North Dakota, South Dakota",5763
"Iowa, Minnesota",5130
"Oklahoma, Texas",5064
"Montana, North Dakota",4974
"Nebraska, Wyoming",4818
"California, Nevada",4251
"Minnesota, South Dakota",3246
"Idaho, Oregon",1923
"Idaho, Wyoming",1413
"Idaho, Washington",963
"California, Oregon",867
"Colorado, Wyoming",300
Query:
-- Corrected Query 5 (No correction needed)
SELECT DISTINCT zipcode, state_name
FROM `bigquery-public-data.utility_us.zipcode_area`
LIMIT 100
Answer:
zipcode,state_name
96950,Guam
96952,Guam
96951,Guam
96910,Guam
96929,Guam
96921,Guam
96913,Guam
96932,Guam
50012,Iowa
52352,Iowa
51243,Iowa
50036,Iowa
50531,Iowa
50151,Iowa
51027,Iowa
50670,Iowa
50609,Iowa
52077,Iowa
52074,Iowa
51354,Iowa
51461,Iowa
50130,Iowa
51557,Iowa
50545,Iowa
50529,Iowa
51056,Iowa
52574,Iowa
52232,Iowa
50242,Iowa
50469,Iowa
51577,Iowa
51433,Iowa
50169,Iowa
50058,Iowa
50313,Iowa
50263,Iowa
50535,Iowa
51301,Iowa
52215,Iowa
50223,Iowa
52323,Iowa
50238,Iowa
50660,Iowa
50038,Iowa
52591,Iowa
51646,Iowa
51401,Iowa
50144,Iowa
50108,Iowa
52001,Iowa
52164,Iowa
50222,Iowa
52530,Iowa
50558,Iowa
52580,Iowa
52353,Iowa
50309,Iowa
52571,Iowa
51106,Iowa
52247,Iowa
50117,Iowa
52650,Iowa
52227,Iowa
52253,Iowa
52314,Iowa
52403,Iowa
51238,Iowa
50010,Iowa
50055,Iowa
50801,Iowa
50511,Iowa
50530,Iowa
51031,Iowa
51004,Iowa
52635,Iowa
50581,Iowa
50071,Iowa
50265,Iowa
50321,Iowa
52639,Iowa
52625,Iowa
50173,Iowa
50149,Iowa
52576,Iowa
52640,Iowa
50001,Iowa
52003,Iowa
52142,Iowa
51648,Iowa
50522,Iowa
52555,Iowa
52132,Iowa
52133,Iowa
51525,Iowa
50320,Iowa
50250,Iowa
50466,Iowa
52747,Iowa
50171,Iowa
51053,Iowa
Query:
-- Corrected Query 6
SELECT
  z.state_name,
  SUM(p.population) AS total_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
ON
  p.zipcode = z.zipcode
WHERE
  p.population IS NOT NULL
GROUP BY
  z.state_name
ORDER BY
  total_population DESC
LIMIT 100
Answer:
state_name,total_population
California,111748626
Texas,75434313
New York,58133523
Florida,56403678
Illinois,38491743
Pennsylvania,38107125
Ohio,34609542
Michigan,29650836
North Carolina,28606431
Georgia,28280514
Virginia,24003717
Indiana,19451376
Washington,19240062
Arizona,19127649
Tennessee,19003095
Missouri,17961405
Maryland,17320683
Wisconsin,17061036
Minnesota,15904047
Colorado,15088122
Alabama,14338764
South Carolina,13876092
Louisiana,13598490
Kentucky,12977133
Oregon,11490705
Oklahoma,11249850
Mississippi,9200223
Iowa,9131034
Arkansas,8733537
Kansas,8551884
Utah,8285430
Nevada,8099424
New Mexico,6161043
West Virginia,5558322
Nebraska,5480298
Idaho,4702578
Hawaii,4080903
Montana,2965035
Delaware,2693775
South Dakota,2434629
Alaska,2129790
North Dakota,2015343
District of Columbia,1780488
Wyoming,1683354
Washington (state),809694
Georgia (U.S. state),456018
"Oregon, Washington",123168
"Kentucky, Tennessee",76242
"Arizona, New Mexico",41208
"Alabama, Mississippi",28347
"Washington, D.C.",24681
"Arizona, Utah",17115
"Arkansas, Missouri",12783
"Arizona, New Mexico, Utah",9951
"Iowa, Missouri",9801
"Arkansas, Louisiana",7785
"Kansas, Oklahoma",7674
"North Dakota, South Dakota",5763
"Iowa, Minnesota",5130
"Oklahoma, Texas",5064
"Montana, North Dakota",4974
"Nebraska, Wyoming",4818
"California, Nevada",4251
"Minnesota, South Dakota",3246
"Idaho, Oregon",1923
"Idaho, Wyoming",1413
"Idaho, Washington",963
"California, Oregon",867
"Colorado, Wyoming",300
Query:
-- Corrected Query 7 (No correction needed)
SELECT
  p.zipcode
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
LEFT JOIN
  `bigquery-public-data.utility_us.zipcode_area` AS z
ON
  p.zipcode = z.zipcode
WHERE
  z.zipcode IS NULL
LIMIT 100
Answer:
zipcode
6475
1505
1378
5156
5673
727
2653
8036
7310
2090
4441
6498
5827
2907
4043
5766
3243
1742
5701
1257
4003
1098
723
8889
2720
3464
3084
2908
8833
4646
4108
4654
5650
8825
5862
7830
2827
5739
2446
3034
7105
7621
8202
6750
4234
6811
1520
961
1026
5301
8501
5033
6355
1338
2110
5875
7077
4276
2812
4769
1330
8320
3222
1463
4231
1230
3031
2571
8330
7853
719
4490
6331
2802
8069
8809
2852
5747
8322
1301
7307
2840
3878
7112
4072
7747
2129
1007
1349
8328
8240
1093
6335
1343
3082
5359
6016
5052
6778
3887
Query:
-- Corrected Query 8
SELECT
  SUM(population) AS total_us_population
FROM
  `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
WHERE
  population IS NOT NULL
LIMIT 100
Answer:
total_us_population
937388991
Query:
-- Corrected Query 9 (No correction needed)
SELECT DISTINCT state_name
FROM `bigquery-public-data.utility_us.us_states_area`
LIMIT 100
Answer:
state_name
United States Virgin Islands
Commonwealth of the Northern Mariana Islands
Guam
American Samoa
Puerto Rico
Rhode Island
New Hampshire
Vermont
Connecticut
Maine
Massachusetts
New Jersey
Pennsylvania
New York
Illinois
Wisconsin
Ohio
Michigan
Indiana
Minnesota
Nebraska
North Dakota
Missouri
Kansas
South Dakota
Iowa
West Virginia
Florida
Maryland
North Carolina
Delaware
Georgia
South Carolina
Virginia
District of Columbia
Alabama
Tennessee
Kentucky
Mississippi
Louisiana
Texas
Oklahoma
Arkansas
Idaho
New Mexico
Utah
Colorado
Wyoming
Nevada
Montana
Arizona
California
Oregon
Washington
Hawaii
Alaska
Query:
SELECT
  state_number,
  consecutive_number,
  vehicle_number,
  driver_distracted_by,
  driver_distracted_by_name
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE
  driver_distracted_by_name IS NOT NULL AND
  driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported') AND
  state_number IS NOT NULL AND
  consecutive_number IS NOT NULL AND
  vehicle_number IS NOT NULL AND
  driver_distracted_by IS NOT NULL
LIMIT 100;
Answer:
state_number,consecutive_number,vehicle_number,driver_distracted_by,driver_distracted_by_name
48,481729,8,1,Looked But Did Not See
46,460112,1,1,Looked But Did Not See
46,460065,1,1,Looked But Did Not See
56,560051,1,1,Looked But Did Not See
33,330082,1,1,Looked But Did Not See
33,330076,1,1,Looked But Did Not See
33,330065,1,1,Looked But Did Not See
33,330052,1,1,Looked But Did Not See
33,330040,1,1,Looked But Did Not See
33,330027,1,1,Looked But Did Not See
1,10320,1,1,Looked But Did Not See
1,10754,1,1,Looked But Did Not See
1,10478,1,1,Looked But Did Not See
1,10349,1,1,Looked But Did Not See
1,10049,1,1,Looked But Did Not See
4,40690,1,1,Looked But Did Not See
4,40843,1,1,Looked But Did Not See
4,40840,1,1,Looked But Did Not See
4,40821,1,1,Looked But Did Not See
4,40799,1,1,Looked But Did Not See
4,40792,1,1,Looked But Did Not See
4,40778,1,1,Looked But Did Not See
4,40777,1,1,Looked But Did Not See
4,40773,1,1,Looked But Did Not See
4,40770,1,1,Looked But Did Not See
4,40761,1,1,Looked But Did Not See
4,40731,1,1,Looked But Did Not See
4,40689,1,1,Looked But Did Not See
4,40685,1,1,Looked But Did Not See
4,40652,1,1,Looked But Did Not See
4,40646,1,1,Looked But Did Not See
4,40643,1,1,Looked But Did Not See
4,40635,1,1,Looked But Did Not See
Query:
SELECT
  state_number,
  consecutive_number,
  vehicle_number,
  driver_distracted_by,
  driver_distracted_by_name
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE
  driver_distracted_by_name IS NOT NULL AND
  TRIM(driver_distracted_by_name) <> '' AND
  LOWER(TRIM(driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported') AND
  state_number IS NOT NULL AND
  consecutive_number IS NOT NULL AND
  vehicle_number IS NOT NULL AND
  driver_distracted_by IS NOT NULL
LIMIT 100;
Answer:
state_number,consecutive_number,vehicle_number,driver_distracted_by,driver_distracted_by_name
48,481729,8,1,Looked But Did Not See
46,460112,1,1,Looked But Did Not See
46,460065,1,1,Looked But Did Not See
56,560051,1,1,Looked But Did Not See
33,330082,1,1,Looked But Did Not See
33,330076,1,1,Looked But Did Not See
33,330065,1,1,Looked But Did Not See
33,330052,1,1,Looked But Did Not See
33,330040,1,1,Looked But Did Not See
33,330027,1,1,Looked But Did Not See
1,10320,1,1,Looked But Did Not See
1,10754,1,1,Looked But Did Not See
1,10478,1,1,Looked But Did Not See
1,10349,1,1,Looked But Did Not See
1,10049,1,1,Looked But Did Not See
4,40690,1,1,Looked But Did Not See
4,40843,1,1,Looked But Did Not See
4,40840,1,1,Looked But Did Not See
4,40821,1,1,Looked But Did Not See
4,40799,1,1,Looked But Did Not See
4,40792,1,1,Looked But Did Not See
4,40778,1,1,Looked But Did Not See
4,40777,1,1,Looked But Did Not See
4,40773,1,1,Looked But Did Not See
4,40770,1,1,Looked But Did Not See
4,40761,1,1,Looked But Did Not See
4,40731,1,1,Looked But Did Not See
4,40689,1,1,Looked But Did Not See
4,40685,1,1,Looked But Did Not See
4,40652,1,1,Looked But Did Not See
4,40646,1,1,Looked But Did Not See
4,40643,1,1,Looked But Did Not See
4,40635,1,1,Looked But Did Not See
Query:
-- Corrected Query 12
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS total_accidents
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> ''
GROUP BY
  s.state_name
ORDER BY
  total_accidents DESC
LIMIT 100
Answer:
state_name,total_accidents
Texas,3190
California,3123
Florida,2699
Georgia,1329
North Carolina,1275
Pennsylvania,1102
New York,1061
Ohio,1029
Illinois,914
South Carolina,911
Michigan,896
Tennessee,888
Arizona,811
Missouri,803
Alabama,784
Indiana,752
Virginia,712
Louisiana,698
Kentucky,694
Mississippi,604
Oklahoma,590
Wisconsin,523
New Jersey,521
Colorado,507
Washington,499
Arkansas,491
Maryland,479
Oregon,411
Minnesota,375
Massachusetts,327
Kansas,322
Nevada,297
Iowa,282
New Mexico,269
Utah,258
Connecticut,257
West Virginia,246
Nebraska,218
Montana,204
Idaho,198
Maine,144
Wyoming,129
Delaware,127
South Dakota,116
North Dakota,111
New Hampshire,103
Hawaii,85
Alaska,60
Vermont,50
Rhode Island,41
District of Columbia,23
Query:
-- Corrected Query 13
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS total_accidents
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> ''
GROUP BY
  s.state_name
ORDER BY
  total_accidents DESC
LIMIT 100
Answer:
state_name,total_accidents
California,3540
Texas,3427
Florida,2935
Georgia,1424
North Carolina,1348
Pennsylvania,1088
Ohio,1053
Illinois,1000
Michigan,981
New York,981
Alabama,979
Tennessee,962
South Carolina,941
Missouri,872
Arizona,856
Indiana,776
Kentucky,763
Virginia,722
Louisiana,704
Oklahoma,628
Mississippi,625
New Jersey,570
Colorado,558
Wisconsin,544
Arkansas,504
Washington,504
Maryland,484
Oregon,448
Kansas,381
New Mexico,361
Minnesota,357
Massachusetts,356
Iowa,355
Nevada,304
Connecticut,292
Utah,259
West Virginia,250
Idaho,232
Nebraska,194
Montana,171
Maine,150
New Hampshire,130
Delaware,116
Hawaii,109
South Dakota,103
North Dakota,102
Wyoming,100
Alaska,78
Vermont,57
Rhode Island,48
District of Columbia,26
Query:
-- Corrected Query 14
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> '' AND
  d.driver_distracted_by_name IS NOT NULL AND
  TRIM(d.driver_distracted_by_name) <> '' AND
  LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5
Answer:
state_name,accident_count
Texas,441
Florida,235
California,206
Kentucky,200
New York,163
Query:
-- Corrected Query 15
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.consecutive_number IS NOT NULL AND
  d.state_number IS NOT NULL AND
  s.state_name IS NOT NULL AND
  TRIM(s.state_name) <> '' AND
  d.driver_distracted_by_name IS NOT NULL AND
  TRIM(d.driver_distracted_by_name) <> '' AND
  LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5
Answer:
state_name,accident_count
Texas,389
Florida,233
California,227
New Jersey,193
Kentucky,192
Query:
SELECT
  s.state_name,
  COUNT(DISTINCT d.consecutive_number) AS accident_count
FROM
  `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN
  `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
WHERE
  d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY
  s.state_name
ORDER BY
  accident_count DESC
LIMIT 5;
Answer:
state_name,accident_count
Texas,389
Florida,233
California,227
New Jersey,193
Kentucky,192
Query:
-- Corrected Query 17
SELECT
  state_name,
  SUM(accident_count) AS total_accidents,
  SUM(total_population) AS total_population
FROM (
  SELECT
    z.state_name,
    0 AS accident_count,
    SUM(p.population) AS total_population
  FROM
    `bigquery-public-data.utility_us.zipcode_area` AS z
  JOIN
    `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
    ON z.zipcode = p.zipcode
  GROUP BY
    z.state_name

  UNION ALL

  SELECT
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count,
    0 AS total_population
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
    ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY
    s.state_name
)
GROUP BY
  state_name
ORDER BY
  total_accidents DESC
LIMIT 100
Answer:
state_name,total_accidents,total_population
Texas,441,75434313
Florida,235,56403678
California,206,111748626
Kentucky,200,12977133
New York,163,58133523
Washington,158,19240062
North Carolina,157,28606431
Louisiana,154,13598490
New Jersey,146,0
Virginia,129,24003717
New Mexico,124,6161043
Arizona,118,19127649
Tennessee,112,19003095
Maryland,104,17320683
Wisconsin,102,17061036
Missouri,97,17961405
Georgia,76,28280514
Kansas,73,8551884
Pennsylvania,72,38107125
Colorado,70,15088122
Michigan,67,29650836
South Carolina,67,13876092
Massachusetts,65,0
Minnesota,60,15904047
Ohio,59,34609542
Alabama,57,14338764
Indiana,56,19451376
Oklahoma,54,11249850
Illinois,52,38491743
Montana,39,2965035
Arkansas,35,8733537
Idaho,35,4702578
Utah,32,8285430
Iowa,31,9131034
New Hampshire,18,0
Hawaii,17,4080903
Nebraska,16,5480298
Nevada,16,8099424
Delaware,15,2693775
Wyoming,15,1683354
South Dakota,14,2434629
Connecticut,14,0
Maine,14,0
Oregon,12,11490705
Alaska,12,2129790
West Virginia,8,5558322
Mississippi,7,9200223
Vermont,5,0
North Dakota,2,2015343
Rhode Island,1,0
"Washington, D.C.",0,24681
Georgia (U.S. state),0,456018
District of Columbia,0,1780488
"Iowa, Minnesota",0,5130
"Idaho, Oregon",0,1923
"Oregon, Washington",0,123168
"Arkansas, Louisiana",0,7785
"Idaho, Washington",0,963
"Colorado, Wyoming",0,300
"Arizona, New Mexico",0,41208
"Alabama, Mississippi",0,28347
"Kentucky, Tennessee",0,76242
Washington (state),0,809694
End Exploring Related Columns
Task: How many traffic accidents per 100,000 people, specifically due to driver distraction, were recorded in each state in the years 2015 and 2016? Identify the top five states each year with the highest rates. Exclude accidents where the distraction status of the driver was recorded as 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.' Use state population data from the 2010 census for calculating the rate.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,state1:str,rate1:float
2015,state2:str,rate2:float
2015,state3:str,rate3:float
2015,state4:str,rate4:float
2015,state5:str,rate5:float
2016,state1:str,rate1:float
2016,state2:str,rate2:float
2016,state3:str,rate3:float
2016,state4:str,rate4:float
2016,state5:str,rate5:float
(Attention: answer in ten rows)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'census_bureau_usa': ['population_by_zip_2000', 'population_by_zip_2010'], 'nhtsa_traffic_fatalities': [' accident_2020', ' cevent_2017', ' cevent_2019', ' distract_2015', ' drimpair_2017', ' drimpair_2019', ' factor_2020', ' maneuver_2018', ' nmcrash_2018', ' nmcrash_2019', ' nmimpair_2015', ' nmimpair_2016', ' nmimpair_2018', ' safetyeq_2016', ' vsoe_2015', 'accident_2016', 'damage_2016', 'factor_2016', 'nmcrash_2016', 'person_2015'], 'utility_us': ['country_code_iso', 'date_greg', 'num_999999', 'time', 'us_border_area', 'us_cities_area', 'us_coastline_area', 'us_county_area', 'us_csa_area', 'us_msa_area', 'us_states_area', 'zipcode_area']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 04:41:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:41:37 - root - INFO - ```sql
WITH accidents AS (
  SELECT
    '2015' AS year,
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
      ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
  GROUP BY
    s.state_name

  UNION ALL

  SELECT
    '2016' AS year,
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
      ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
  GROUP BY
    s.state_name
),

state_population AS (
  SELECT
    z.state_name,
    SUM(p.population) AS total_population
  FROM
    `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN
    `bigquery-public-data.utility_us.zipcode_area` AS z
      ON p.zipcode = z.zipcode
  WHERE
    p.population IS NOT NULL
  GROUP BY
    z.state_name
),

accident_rates AS (
  SELECT
    a.year,
    a.state_name,
    a.accident_count,
    s.total_population,
    (a.accident_count / s.total_population) * 100000 AS accidents_per_100000_people,
    ROW_NUMBER() OVER(PARTITION BY a.year ORDER BY (a.accident_count / s.total_population) * 100000 DESC) AS rank
  FROM
    accidents AS a
  JOIN
    state_population AS s
      ON a.state_name = s.state_name
)

SELECT
  year,
  state_name,
  accidents_per_100000_people
FROM
  accident_rates
WHERE
  rank <= 5
ORDER BY
  year, rank;
```
2025-01-27 04:41:39 - root - INFO - itercount: 1
2025-01-27 04:41:39 - root - INFO - 0
2025-01-27 04:41:39 - root - INFO - results: 
year,state_name,accidents_per_100000_people
2015,New Mexico,2.012646235385794
2015,Kentucky,1.541172460820121
2015,Montana,1.3153301731682763
2015,Louisiana,1.1324786796181048
2015,Wyoming,0.8910781689412922
2016,New Mexico,2.3859596500138043
2016,Kentucky,1.4795255623873163
2016,Kansas,1.1108663307406883
2016,Idaho,1.0845115168743613
2016,Louisiana,1.0515873453596685


2025-01-27 04:41:39 - root - INFO - Please check the answer again by reviewing How many traffic accidents per 100,000 people, specifically due to driver distraction, were recorded in each state in the years 2015 and 2016? Identify the top five states each year with the highest rates. Exclude accidents where the distraction status of the driver was recorded as 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.' Use state population data from the 2010 census for calculating the rate., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,state1:str,rate1:float
2015,state2:str,rate2:float
2015,state3:str,rate3:float
2015,state4:str,rate4:float
2015,state5:str,rate5:float
2016,state1:str,rate1:float
2016,state2:str,rate2:float
2016,state3:str,rate3:float
2016,state4:str,rate4:float
2016,state5:str,rate5:float
(Attention: answer in ten rows)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
year,state_name,accidents_per_100000_people
2015,New Mexico,2.012646235385794
2015,Kentucky,1.541172460820121
2015,Montana,1.3153301731682763
2015,Louisiana,1.1324786796181048
2015,Wyoming,0.8910781689412922
2016,New Mexico,2.3859596500138043
2016,Kentucky,1.4795255623873163
2016,Kansas,1.1108663307406883
2016,Idaho,1.0845115168743613
2016,Louisiana,1.0515873453596685
Current sql:
WITH accidents AS (
  SELECT
    '2015' AS year,
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
      ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
  GROUP BY
    s.state_name

  UNION ALL

  SELECT
    '2016' AS year,
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
      ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
  GROUP BY
    s.state_name
),

state_population AS (
  SELECT
    z.state_name,
    SUM(p.population) AS total_population
  FROM
    `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN
    `bigquery-public-data.utility_us.zipcode_area` AS z
      ON p.zipcode = z.zipcode
  WHERE
    p.population IS NOT NULL
  GROUP BY
    z.state_name
),

accident_rates AS (
  SELECT
    a.year,
    a.state_name,
    a.accident_count,
    s.total_population,
    (a.accident_count / s.total_population) * 100000 AS accidents_per_100000_people,
    ROW_NUMBER() OVER(PARTITION BY a.year ORDER BY (a.accident_count / s.total_population) * 100000 DESC) AS rank
  FROM
    accidents AS a
  JOIN
    state_population AS s
      ON a.state_name = s.state_name
)

SELECT
  year,
  state_name,
  accidents_per_100000_people
FROM
  accident_rates
WHERE
  rank <= 5
ORDER BY
  year, rank;
2025-01-27 04:42:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:42:11 - root - INFO - To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: Use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. Exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: Count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: Join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000.

5. **Identify Top Five States**: Rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,New Mexico,2.0126
2015,Kentucky,1.5412
2015,Montana,1.3153
2015,Louisiana,1.1325
2015,Wyoming,0.8911
2016,New Mexico,2.3860
2016,Kentucky,1.4795
2016,Kansas,1.1109
2016,Idaho,1.0845
2016,Louisiana,1.0516
```

```sql
WITH accidents AS (
  SELECT
    '2015' AS year,
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
      ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
  GROUP BY
    s.state_name

  UNION ALL

  SELECT
    '2016' AS year,
    s.state_name,
    COUNT(DISTINCT d.consecutive_number) AS accident_count
  FROM
    `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN
    `bigquery-public-data.utility_us.us_states_area` AS s
      ON d.state_number = CAST(s.state_fips_code AS INT64)
  WHERE
    LOWER(TRIM(d.driver_distracted_by_name)) NOT IN ('not distracted', 'unknown if distracted', 'not reported')
  GROUP BY
    s.state_name
),

state_population AS (
  SELECT
    z.state_name,
    SUM(p.population) AS total_population
  FROM
    `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN
    `bigquery-public-data.utility_us.zipcode_area` AS z
      ON p.zipcode = z.zipcode
  WHERE
    p.population IS NOT NULL
  GROUP BY
    z.state_name
),

accident_rates AS (
  SELECT
    a.year,
    a.state_name,
    a.accident_count,
    s.total_population,
    ROUND((a.accident_count / s.total_population) * 100000, 4) AS accidents_per_100000_people,
    ROW_NUMBER() OVER(PARTITION BY a.year ORDER BY (a.accident_count / s.total_population) * 100000 DESC) AS rank
  FROM
    accidents AS a
  JOIN
    state_population AS s
      ON a.state_name = s.state_name
)

SELECT
  year,
  state_name,
  accidents_per_100000_people
FROM
  accident_rates
WHERE
  rank <= 5
ORDER BY
  year, rank;
```
2025-01-27 04:42:13 - root - INFO - itercount: 2
2025-01-27 04:42:13 - root - INFO - 0
2025-01-27 04:42:13 - root - INFO - Total iteration counts: 2
