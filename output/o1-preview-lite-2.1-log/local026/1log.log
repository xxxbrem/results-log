2025-01-23 15:31:01 - openai._base_client - INFO - Retrying request to /chat/completions in 0.474872 seconds
2025-01-23 15:32:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 15:32:10 - root - INFO - SQL:
SELECT DISTINCT match_id FROM ball_by_ball LIMIT 100;
Results:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT DISTINCT over_id FROM ball_by_ball ORDER BY over_id LIMIT 100;
Results:
over_id
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT DISTINCT bowler FROM ball_by_ball LIMIT 100;
Results:
bowler
106
14
15
84
13
82
1
9
16
63
10
66
22
77
120
25
29
121
435
119
24
67
68
118
126
436
32
90
39
89
38
31
175
37
73
49
80
81
12
44
50
48
60
61
58
83
59
5
56
4
131
75
117
70
91
71
150
72
99
78
102
124
98
148
86
27
94
109
149
8
41
54
437
105
122
116
143
112
111
45
115
21
108
151
127
147
137
136
144
140
153
142
145
35
135
57
438
174
194
156

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT DISTINCT player_name FROM player LIMIT 100;
Results:
player_name
SC Ganguly
BB McCullum
RT Ponting
DJ Hussey
Mohammad Hafeez
R Dravid
W Jaffer
V Kohli
JH Kallis
CL White
MV Boucher
B Akhil
AA Noffke
P Kumar
Z Khan
SB Joshi
PA Patel
ML Hayden
MEK Hussey
MS Dhoni
SK Raina
JDP Oram
S Badrinath
K Goel
JR Hopes
KC Sangakkara
Yuvraj Singh
SM Katich
IK Pathan
T Kohli
YK Pathan
SR Watson
M Kaif
DS Lehmann
M Rawat
D Salunkhe
SK Warne
SK Trivedi
G Gambhir
V Sehwag
S Dhawan
L Ronchi
ST Jayasuriya
DJ Thornely
RV Uthappa
PR Shah
AM Nayar
SM Pollock
Harbhajan Singh
S Chanderpaul
LRPL Taylor
AC Gilchrist
Y Venugopal Rao
VVS Laxman
A Symonds
RG Sharma
SB Styris
SB Bangar
WPUJC Vaas
RP Singh
WP Saha
LR Shukla
DPMD Jayawardene
S Sohal
B Lee
PP Chawla
WA Mota
Kamran Akmal
Shahid Afridi
DJ Bravo
MA Khote
A Nehra
GC Smith
Pankaj Singh
RR Sarwan
S Sreesanth
VRV Singh
SS Tiwary
DS Kulkarni
R Vinay Kumar
AB Agarkar
M Kartik
I Sharma
AM Rahane
Shoaib Malik
MK Tiwary
KD Karthik
R Bhatia
MF Maharoof
VY Mahesh
TM Srivastava
B Chipli
DW Steyn
DB Das
MK Pandey
HH Gibbs
DNT Zoysa
D Kalyankrishna
SE Marsh
SA Asnodkar

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT DISTINCT bb.bowler, p.player_name
   FROM ball_by_ball bb
   JOIN player p ON bb.bowler = p.player_id
   LIMIT 100;
Results:
bowler,player_name
106,AB Dinda
14,P Kumar
15,Z Khan
84,I Sharma
13,AA Noffke
82,AB Agarkar
1,SC Ganguly
9,JH Kallis
16,SB Joshi
63,LR Shukla
10,CL White
66,B Lee
22,JDP Oram
77,S Sreesanth
120,MS Gony
25,JR Hopes
29,IK Pathan
121,M Muralitharan
435,P Amarnath
119,Joginder Sharma
24,K Goel
67,PP Chawla
68,WA Mota
118,GD McGrath
126,MM Patel
436,B Geeves
32,SR Watson
90,MF Maharoof
39,SK Trivedi
89,R Bhatia
38,SK Warne
31,YK Pathan
175,DL Vettori
37,D Salunkhe
73,A Nehra
49,SM Pollock
80,DS Kulkarni
81,R Vinay Kumar
12,B Akhil
44,ST Jayasuriya
50,Harbhajan Singh
48,AM Nayar
60,WPUJC Vaas
61,RP Singh
58,SB Styris
83,M Kartik
59,SB Bangar
5,Mohammad Hafeez
56,A Symonds
4,DJ Hussey
131,PP Ojha
75,Pankaj Singh
117,Mohammad Asif
70,Shahid Afridi
91,VY Mahesh
71,DJ Bravo
150,VS Yeligati
72,MA Khote
99,D Kalyankrishna
78,VRV Singh
102,Sohail Tanvir
124,A Kumble
98,DNT Zoysa
148,SD Chitnis
86,Shoaib Malik
27,Yuvraj Singh
94,DW Steyn
109,JA Morkel
149,CRD Fernando
8,V Kohli
41,V Sehwag
54,Y Venugopal Rao
437,Gagandeep Singh
105,Umar Gul
122,M Ntini
116,PJ Sangwan
143,DP Vijaykumar
112,DB Ravi Teja
111,LPC Silva
45,DJ Thornely
115,RR Raje
21,SK Raina
108,S Vidyut
151,L Balaji
127,CK Kapugedera
147,DR Smith
137,AD Mascarenhas
136,A Mishra
144,Shoaib Akhtar
140,Iqbal Abdulla
153,RR Powar
142,PM Sarvesh Kumar
145,Abdur Razzak
135,TM Dilshan
57,RG Sharma
438,A Nel
174,BAW Mendis
194,SL Malinga
156,T Thushara
155,A Flintoff

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT runs_scored FROM batsman_scored LIMIT 100;
Results:
runs_scored
1
0
0
0
1
0
1
0
0
0
0
0
0
4
0
4
0
6
1
4
0
0
0
0
0
0
0
0
1
4
0
1
0
0
1
2
6
1
0
0
4
0
0
0
1
0
6
4
1
1
1
4
0
0
6
1
0
0
0
1
0
0
0
0
0
0
1
0
1
0
0
1
0
1
0
1
1
2
1
1
0
0
4
0
1
1
0
1
1
1
2
1
0
1
0
0
0
0
0
0

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT extra_type, extra_runs FROM extra_runs LIMIT 100;
Results:
extra_type,extra_runs
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,2
legbyes,2
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,2
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,2
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,2
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT bs.match_id, bs.over_id, bs.ball_id, bs.runs_scored, er.extra_runs
   FROM batsman_scored bs
   LEFT JOIN extra_runs er ON bs.match_id = er.match_id
     AND bs.over_id = er.over_id
     AND bs.ball_id = er.ball_id
     AND bs.innings_no = er.innings_no
   LIMIT 100;
Results:
match_id,over_id,ball_id,runs_scored,extra_runs
335987,1,1,1,
335987,1,2,0,
335987,1,3,0,
335987,1,4,0,
335987,1,4,1,
335987,1,5,0,
335987,1,5,1,
335987,1,6,0,
335987,1,6,0,
335987,1,7,0,1.0
335987,1,7,0,
335987,2,1,0,
335987,2,1,0,
335987,2,2,4,
335987,2,2,0,
335987,2,3,4,
335987,2,3,0,4.0
335987,2,4,6,
335987,2,4,1,
335987,2,5,4,
335987,2,5,0,
335987,2,6,0,
335987,2,6,0,
335987,3,1,0,
335987,3,1,0,
335987,3,2,0,
335987,3,2,0,
335987,3,3,0,1.0
335987,3,3,1,
335987,3,4,4,
335987,3,4,0,
335987,3,5,1,
335987,3,6,0,
335987,3,6,0,
335987,3,7,1,
335987,4,1,2,
335987,4,2,6,
335987,4,2,1,
335987,4,3,0,1.0
335987,4,3,0,
335987,4,4,4,
335987,4,4,0,1.0
335987,4,5,0,
335987,4,5,0,
335987,4,6,1,
335987,4,6,0,
335987,4,7,6,
335987,5,1,4,
335987,5,1,1,
335987,5,2,1,
335987,5,2,1,
335987,5,3,4,
335987,5,3,0,
335987,5,4,0,
335987,5,4,6,
335987,5,5,1,
335987,5,5,0,
335987,5,6,0,
335987,5,6,0,
335987,6,1,1,
335987,6,1,0,
335987,6,2,0,
335987,6,2,0,
335987,6,3,0,
335987,6,3,0,
335987,6,4,0,
335987,6,4,1,
335987,6,5,0,
335987,6,5,1,
335987,6,6,0,
335987,6,6,0,
335987,7,1,1,
335987,7,1,0,
335987,7,2,1,
335987,7,2,0,
335987,7,3,1,
335987,7,3,1,
335987,7,4,2,
335987,7,5,1,
335987,7,6,1,
335987,7,6,0,
335987,7,7,0,
335987,7,8,4,
335987,8,1,0,
335987,8,1,1,
335987,8,2,1,
335987,8,2,0,1.0
335987,8,3,1,
335987,8,3,1,
335987,8,4,1,
335987,8,4,2,
335987,8,5,1,
335987,8,5,0,
335987,8,6,1,
335987,8,6,0,
335987,9,1,0,
335987,9,1,0,
335987,9,2,0,
335987,9,2,0,
335987,9,3,0,

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT bs.match_id, bs.over_id, bs.ball_id, bs.innings_no,
          (bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
   FROM batsman_scored bs
   LEFT JOIN extra_runs er ON bs.match_id = er.match_id
     AND bs.over_id = er.over_id
     AND bs.ball_id = er.ball_id
     AND bs.innings_no = er.innings_no
   LIMIT 100;
Results:
match_id,over_id,ball_id,innings_no,total_runs
335987,1,1,2,1
335987,1,2,1,0
335987,1,3,2,0
335987,1,4,1,0
335987,1,4,2,1
335987,1,5,1,0
335987,1,5,2,1
335987,1,6,1,0
335987,1,6,2,0
335987,1,7,1,1
335987,1,7,2,0
335987,2,1,1,0
335987,2,1,2,0
335987,2,2,1,4
335987,2,2,2,0
335987,2,3,1,4
335987,2,3,2,4
335987,2,4,1,6
335987,2,4,2,1
335987,2,5,1,4
335987,2,5,2,0
335987,2,6,1,0
335987,2,6,2,0
335987,3,1,1,0
335987,3,1,2,0
335987,3,2,1,0
335987,3,2,2,0
335987,3,3,1,1
335987,3,3,2,1
335987,3,4,1,4
335987,3,4,2,0
335987,3,5,1,1
335987,3,6,1,0
335987,3,6,2,0
335987,3,7,2,1
335987,4,1,2,2
335987,4,2,1,6
335987,4,2,2,1
335987,4,3,1,1
335987,4,3,2,0
335987,4,4,1,4
335987,4,4,2,1
335987,4,5,1,0
335987,4,5,2,0
335987,4,6,1,1
335987,4,6,2,0
335987,4,7,1,6
335987,5,1,1,4
335987,5,1,2,1
335987,5,2,1,1
335987,5,2,2,1
335987,5,3,1,4
335987,5,3,2,0
335987,5,4,1,0
335987,5,4,2,6
335987,5,5,1,1
335987,5,5,2,0
335987,5,6,1,0
335987,5,6,2,0
335987,6,1,1,1
335987,6,1,2,0
335987,6,2,1,0
335987,6,2,2,0
335987,6,3,1,0
335987,6,3,2,0
335987,6,4,1,0
335987,6,4,2,1
335987,6,5,1,0
335987,6,5,2,1
335987,6,6,1,0
335987,6,6,2,0
335987,7,1,1,1
335987,7,1,2,0
335987,7,2,1,1
335987,7,2,2,0
335987,7,3,1,1
335987,7,3,2,1
335987,7,4,1,2
335987,7,5,1,1
335987,7,6,1,1
335987,7,6,2,0
335987,7,7,2,0
335987,7,8,2,4
335987,8,1,1,0
335987,8,1,2,1
335987,8,2,1,1
335987,8,2,2,1
335987,8,3,1,1
335987,8,3,2,1
335987,8,4,1,1
335987,8,4,2,2
335987,8,5,1,1
335987,8,5,2,0
335987,8,6,1,1
335987,8,6,2,0
335987,9,1,1,0
335987,9,1,2,0
335987,9,2,1,0
335987,9,2,2,0
335987,9,3,1,0

2025-01-23 15:32:10 - root - INFO - SQL:
SELECT bb.match_id, bb.over_id, bb.bowler,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    LIMIT 100;
Results:
match_id,over_id,bowler,total_runs
335987,1,14,1
335987,1,106,3
335987,2,15,18
335987,2,84,5
335987,3,14,6
335987,3,106,2
335987,4,13,18
335987,4,84,4
335987,5,14,10
335987,5,82,8
335987,6,15,1
335987,6,106,2
335987,7,13,7
335987,7,82,5
335987,8,1,5
335987,8,15,5
335987,9,9,4
335987,9,82,3
335987,10,1,7
335987,10,16,10
335987,11,9,15
335987,11,82,5
335987,12,1,3
335987,12,16,10
335987,13,9,11
335987,13,63,9
335987,14,1,7
335987,14,16,6
335987,15,10,22
335987,15,84,3
335987,16,13,4
335987,16,63,0
335987,17,15,14
335987,18,13,7
335987,19,9,21
335987,20,14,22
335988,1,22,9
335988,1,66,5
335988,2,77,14
335988,2,120,7
335988,3,22,11
335988,3,66,7
335988,4,77,6
335988,4,120,10
335988,5,22,10
335988,5,66,9
335988,6,25,11
335988,6,120,14
335988,7,29,9
335988,7,121,6
335988,8,25,8
335988,8,435,15
335988,9,29,13
335988,9,119,12
335988,10,24,5
335988,10,121,13
335988,11,67,19
335988,11,435,5
335988,12,24,20
335988,12,119,12
335988,13,68,4
335988,13,435,14
335988,14,25,10
335988,14,121,9
335988,15,68,18
335988,15,119,13
335988,16,29,8
335988,16,435,11
335988,17,77,14
335988,17,120,10
335988,18,29,17
335988,18,121,5
335988,19,22,7
335988,19,66,15
335988,20,25,25
335988,20,119,9
335989,1,118,6
335989,1,126,8
335989,2,32,12
335989,2,436,10
335989,3,118,0
335989,3,126,5
335989,4,32,10
335989,4,436,10
335989,5,118,6
335989,5,126,12
335989,6,39,6
335989,6,90,3
335989,7,32,4
335989,7,89,4
335989,8,39,11
335989,8,90,4
335989,9,38,7
335989,9,89,3
335989,10,31,7
335989,10,90,6
335989,11,38,9
335989,11,89,2
335989,12,31,5
335989,12,175,12

2025-01-23 15:32:11 - root - INFO - SQL:
SELECT bb.match_id, bb.over_id, bb.bowler,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
Results:
match_id,over_id,bowler,total_runs
501252,3,294,37
734052,6,333,33
548332,13,235,31
335993,13,56,30
501265,15,268,30
980992,18,71,30
980992,19,432,30
598032,8,254,29
598065,17,280,29
548323,19,8,28
598032,5,253,28
980912,19,299,28
336020,19,38,27
548344,19,67,27
598032,15,286,27
729296,18,80,27
335993,18,90,26
335997,14,14,26
336023,14,127,26
419142,16,226,26
419144,13,161,26
598034,1,50,26
598042,20,4,26
598047,20,106,26
729322,17,136,26
734010,20,342,26
734012,5,367,26
734042,13,94,26
980928,14,228,26
335988,20,25,25
336041,20,32,25
392233,20,195,25
392235,19,126,25
392242,6,41,25
419112,12,209,25
419117,13,77,25
419157,20,198,25
501218,20,106,25
501225,3,39,25
501246,19,274,25
501262,13,249,25
548353,18,1,25
548353,19,73,25
548367,6,299,25
548385,19,296,25
598069,15,61,25
729300,13,136,25
733988,3,453,25
733996,16,311,25
734012,19,367,25
829794,19,322,25
829800,17,375,25
980936,18,311,25
336024,17,75,24
336031,20,89,24
392219,15,78,24
392228,6,179,24
419128,19,151,24
419134,5,226,24
419138,3,14,24
501229,20,258,24
548329,14,270,24
548329,17,81,24
548332,20,73,24
548360,5,126,24
548372,20,126,24
548381,2,120,24
598004,17,258,24
598059,18,232,24
598072,19,232,24
733982,19,94,24
733988,19,296,24
734032,15,382,24
734034,20,94,24
734052,4,359,24
829734,14,35,24
829742,17,246,24
829790,3,367,24
829812,2,299,24
980964,17,32,24
981024,20,32,24
335999,7,49,23
336001,19,94,23
336014,14,41,23
336024,14,77,23
336026,3,144,23
392215,19,77,23
392241,20,61,23
419117,18,228,23
419122,2,77,23
419142,15,121,23
501237,18,282,23
501248,8,290,23
501260,2,346,23
501261,20,126,23
501272,20,151,23
548316,20,120,23
548322,14,192,23
548338,18,293,23
548347,11,221,23

2025-01-23 15:32:11 - root - INFO - SQL:
SELECT bb.match_id, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
Results:
match_id,over_id,bowler_name,total_runs
501252,3,P Parameswaran,37
734052,6,P Awana,33
548332,13,R Sharma,31
335993,13,A Symonds,30
501265,15,JJ van der Wath,30
980992,18,DJ Bravo,30
980992,19,S Kaushik,30
598032,8,AJ Finch,29
598065,17,NLTC Perera,29
548323,19,V Kohli,28
598032,5,MR Marsh,28
980912,19,B Kumar,28
336020,19,SK Warne,27
548344,19,PP Chawla,27
598032,15,AG Murtaza,27
729296,18,DS Kulkarni,27
335993,18,MF Maharoof,26
335997,14,P Kumar,26
336023,14,CK Kapugedera,26
419142,16,S Narwal,26
419144,13,RS Bopara,26
598034,1,Harbhajan Singh,26
598042,20,DJ Hussey,26
598047,20,AB Dinda,26
729322,17,A Mishra,26
734010,20,R Shukla,26
734012,5,Sandeep Sharma,26
734042,13,DW Steyn,26
980928,14,Bipul Sharma,26
335988,20,JR Hopes,25
336041,20,SR Watson,25
392233,20,Mashrafe Mortaza,25
392235,19,MM Patel,25
392242,6,V Sehwag,25
419112,12,R Sathish,25
419117,13,S Sreesanth,25
419157,20,AB McDonald,25
501218,20,AB Dinda,25
501225,3,SK Trivedi,25
501246,19,AC Thomas,25
501262,13,S Sriram,25
548353,18,SC Ganguly,25
548353,19,A Nehra,25
548367,6,B Kumar,25
548385,19,VR Aaron,25
598069,15,RP Singh,25
729300,13,A Mishra,25
733988,3,P Suyal,25
733996,16,HV Patel,25
734012,19,Sandeep Sharma,25
829794,19,P Negi,25
829800,17,JJ Bumrah,25
980936,18,HV Patel,25
336024,17,Pankaj Singh,24
336031,20,R Bhatia,24
392219,15,VRV Singh,24
392228,6,Shoaib Ahmed,24
419128,19,L Balaji,24
419134,5,S Narwal,24
419138,3,P Kumar,24
501229,20,DT Christian,24
548329,14,S Aravind,24
548329,17,R Vinay Kumar,24
548332,20,A Nehra,24
548360,5,MM Patel,24
548372,20,MM Patel,24
548381,2,MS Gony,24
598004,17,DT Christian,24
598059,18,UT Yadav,24
598072,19,UT Yadav,24
733982,19,DW Steyn,24
733988,19,VR Aaron,24
734032,15,YS Chahal,24
734034,20,DW Steyn,24
734052,4,IC Pandey,24
829742,17,AN Ahmed,24
829790,3,Sandeep Sharma,24
829812,2,B Kumar,24
980964,17,SR Watson,24
981024,20,SR Watson,24
335999,7,SM Pollock,23
336001,19,DW Steyn,23
336014,14,V Sehwag,23
336024,14,S Sreesanth,23
336026,3,Shoaib Akhtar,23
392215,19,S Sreesanth,23
392241,20,RP Singh,23
419117,18,Bipul Sharma,23
419122,2,S Sreesanth,23
419142,15,M Muralitharan,23
501237,18,JE Taylor,23
501248,8,I Malhotra,23
501260,2,JD Unadkat,23
501261,20,MM Patel,23
501272,20,L Balaji,23
548316,20,MS Gony,23
548322,14,J Botha,23
548338,18,S Nadeem,23
548347,11,KA Pollard,23
548349,19,R Bhatia,23

2025-01-23 15:32:11 - root - INFO - SQL:
SELECT bb.match_id, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 3;
Results:
match_id,over_id,bowler_name,total_runs
501252,3,P Parameswaran,37
734052,6,P Awana,33
548332,13,R Sharma,31

2025-01-23 15:32:11 - root - INFO - SQL:
SELECT DISTINCT extra_type FROM extra_runs LIMIT 100;
Results:
extra_type
legbyes
wides
byes
noballs
penalty

2025-01-23 15:32:11 - root - INFO - SQL:
SELECT bb.match_id, m.match_date, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN match m ON bb.match_id = m.match_id
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
Results:
match_id,match_date,over_id,bowler_name,total_runs
501252,2011-05-08,3,P Parameswaran,37
734052,2014-05-30,6,P Awana,33
548332,2012-04-17,13,R Sharma,31
335993,2008-04-22,13,A Symonds,30
501265,2011-05-17,15,JJ van der Wath,30
980992,2016-05-14,18,DJ Bravo,30
980992,2016-05-14,19,S Kaushik,30
598032,2013-04-23,8,AJ Finch,29
598065,2013-05-13,17,NLTC Perera,29
548323,2012-04-12,19,V Kohli,28
598032,2013-04-23,5,MR Marsh,28
980912,2016-04-12,19,B Kumar,28
336020,2008-05-11,19,SK Warne,27
548344,2012-04-25,19,PP Chawla,27
598032,2013-04-23,15,AG Murtaza,27
729296,2014-04-20,18,DS Kulkarni,27
335993,2008-04-22,18,MF Maharoof,26
335997,2008-04-26,14,P Kumar,26
336023,2008-05-14,14,CK Kapugedera,26
419142,2010-04-03,16,S Narwal,26
419144,2010-04-04,13,RS Bopara,26
598034,2013-04-24,1,Harbhajan Singh,26
598042,2013-04-29,20,DJ Hussey,26
598047,2013-05-02,20,AB Dinda,26
729322,2014-04-30,17,A Mishra,26
734010,2014-05-13,20,R Shukla,26
734012,2014-05-14,5,Sandeep Sharma,26
734042,2014-05-24,13,DW Steyn,26
980928,2016-04-18,14,Bipul Sharma,26
335988,2008-04-19,20,JR Hopes,25
336041,2008-05-26,20,SR Watson,25
392233,2009-05-16,20,Mashrafe Mortaza,25
392235,2009-05-17,19,MM Patel,25
392242,2009-05-22,6,V Sehwag,25
419112,2010-03-13,12,R Sathish,25
419117,2010-03-16,13,S Sreesanth,25
419157,2010-04-13,20,AB McDonald,25
501218,2011-04-17,20,AB Dinda,25
501225,2011-04-21,3,SK Trivedi,25
501246,2011-05-04,19,AC Thomas,25
501262,2011-05-15,13,S Sriram,25
548353,2012-05-01,18,SC Ganguly,25
548353,2012-05-01,19,A Nehra,25
548367,2012-05-11,6,B Kumar,25
548385,2012-05-25,19,VR Aaron,25
598069,2013-05-06,15,RP Singh,25
729300,2014-04-22,13,A Mishra,25
733988,2014-05-06,3,P Suyal,25
733996,2014-05-09,16,HV Patel,25
734012,2014-05-14,19,Sandeep Sharma,25
829794,2015-05-08,19,P Negi,25
829800,2015-05-10,17,JJ Bumrah,25
980936,2016-04-22,18,HV Patel,25
336024,2008-05-28,17,Pankaj Singh,24
336031,2008-05-19,20,R Bhatia,24
392219,2009-05-07,15,VRV Singh,24
392228,2009-05-13,6,Shoaib Ahmed,24
419128,2010-03-23,19,L Balaji,24
419134,2010-03-28,5,S Narwal,24
419138,2010-03-31,3,P Kumar,24
501229,2011-04-24,20,DT Christian,24
548329,2012-04-15,14,S Aravind,24
548329,2012-04-15,17,R Vinay Kumar,24
548332,2012-04-17,20,A Nehra,24
548360,2012-05-06,5,MM Patel,24
548372,2012-05-14,20,MM Patel,24
548381,2012-05-20,2,MS Gony,24
598004,2013-04-04,17,DT Christian,24
598059,2013-05-10,18,UT Yadav,24
598072,2013-05-19,19,UT Yadav,24
733982,2014-05-04,19,DW Steyn,24
733988,2014-05-06,19,VR Aaron,24
734032,2014-05-22,15,YS Chahal,24
734034,2014-05-22,20,DW Steyn,24
734052,2014-05-30,4,IC Pandey,24
829742,2015-04-19,17,AN Ahmed,24
829790,2015-05-06,3,Sandeep Sharma,24
829812,2015-05-15,2,B Kumar,24
980964,2016-05-02,17,SR Watson,24
981024,2016-05-29,20,SR Watson,24
335999,2008-04-27,7,SM Pollock,23
336001,2008-04-28,19,DW Steyn,23
336014,2008-05-08,14,V Sehwag,23
336024,2008-05-28,14,S Sreesanth,23
336026,2008-05-16,3,Shoaib Akhtar,23
392215,2009-05-05,19,S Sreesanth,23
392241,2009-05-21,20,RP Singh,23
419117,2010-03-16,18,Bipul Sharma,23
419122,2010-03-19,2,S Sreesanth,23
419142,2010-04-03,15,M Muralitharan,23
501237,2011-04-29,18,JE Taylor,23
501248,2011-05-05,8,I Malhotra,23
501260,2011-05-14,2,JD Unadkat,23
501261,2011-05-14,20,MM Patel,23
501272,2011-05-22,20,L Balaji,23
548316,2012-04-07,20,MS Gony,23
548322,2012-04-11,14,J Botha,23
548338,2012-04-21,18,S Nadeem,23
548347,2012-04-27,11,KA Pollard,23
548349,2012-04-28,19,R Bhatia,23

2025-01-23 15:32:11 - root - INFO - itercount: 0
2025-01-23 15:32:11 - root - INFO - Table: playerDDL:
CREATE TABLE player(
        player_id INTEGER PRIMARY KEY,
        player_name TEXT,
        dob DATE,
        batting_hand TEXT,
        bowling_skill TEXT,
        country_name TEXT
    )
Table: teamDDL:
CREATE TABLE team(
        team_id INTEGER PRIMARY KEY,
        name TEXT
    )
Table: matchDDL:
CREATE TABLE match(
        match_id INTEGER PRIMARY KEY,
        team_1 INTEGER,
        team_2 INTEGER,
        match_date DATE,
        season_id INTEGER,
        venue TEXT,
        toss_winner INTEGER,
        toss_decision TEXT,
        win_type TEXT,
        win_margin INTEGER,
        outcome_type TEXT,
        match_winner INTEGER,
        man_of_the_match INTEGER
    )
Table: player_matchDDL:
CREATE TABLE player_match(
        match_id INTEGER NOT NULL,
        player_id INTEGER NOT NULL,
        role TEXT,
        team_id INTEGER,
        PRIMARY KEY(match_id, player_id)
    )
Table: ball_by_ballDDL:
CREATE TABLE ball_by_ball(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        innings_no INTEGER NOT NULL,
        team_batting INTEGER,
        team_bowling INTEGER,
        striker_batting_position INTEGER,
        striker INTEGER,
        non_striker INTEGER,
        bowler INTEGER,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: batsman_scoredDDL:
CREATE TABLE batsman_scored(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        runs_scored INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: wicket_takenDDL:
CREATE TABLE wicket_taken(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        player_out INTEGER,
        kind_out TEXT,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: extra_runsDDL:
CREATE TABLE extra_runs(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        extra_type TEXT,
        extra_runs INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
External knowledge that might be helpful: 
None
The table structure information is (table names): 
['player', 'team', 'match', 'player_match', 'ball_by_ball', 'batsman_scored', 'wicket_taken', 'extra_runs']
Begin Exploring Related Columns
To solve the task of finding the **top 3 bowlers who conceded the maximum runs in a single over**, along with the corresponding matches, we'll begin by identifying the relevant tables, columns, and potential conditions.

---

### **Relevant Tables and Columns:**

1. **`ball_by_ball`**
   - `match_id`: To identify the match.
   - `over_id`: To identify the over.
   - `ball_id`: To identify the specific ball within an over.
   - `innings_no`: To identify the innings.
   - `bowler`: The bowler's `player_id`; we'll use this to get the bowler's name from the `player` table.

2. **`batsman_scored`**
   - `match_id`, `over_id`, `ball_id`, `innings_no`: For joining with the `ball_by_ball` table.
   - `runs_scored`: Runs scored off the bat on each delivery.

3. **`extra_runs`**
   - `match_id`, `over_id`, `ball_id`, `innings_no`: For joining with the `ball_by_ball` table.
   - `extra_runs`: Additional runs conceded (e.g., wides, no-balls).

4. **`player`**
   - `player_id`: To join with `bowler` from the `ball_by_ball` table.
   - `player_name`: The name of the bowler.

---

### **Potential Conditions:**

- **Joining Conditions:** We'll need to join tables on `match_id`, `over_id`, `ball_id`, and `innings_no`.
- **Aggregation:** Sum `runs_scored` and `extra_runs` to get the total runs conceded per ball.
- **Grouping:** Group data by `match_id`, `over_id`, and `bowler` to calculate total runs per over per bowler.
- **Ordering:** Order results in descending order of total runs conceded to find the top overs.
- **Limiting Results:** Use `LIMIT` to restrict the number of rows returned.

---

### **SQL Queries to Explore the Data:**

1. **Retrieve distinct match IDs from the `ball_by_ball` table:**

   ```sql
   SELECT DISTINCT match_id FROM ball_by_ball LIMIT 100;
   ```

2. **Retrieve distinct over numbers from the `ball_by_ball` table:**

   ```sql
   SELECT DISTINCT over_id FROM ball_by_ball ORDER BY over_id LIMIT 100;
   ```

3. **List distinct bowler IDs from the `ball_by_ball` table:**

   ```sql
   SELECT DISTINCT bowler FROM ball_by_ball LIMIT 100;
   ```

4. **Get the names of bowlers from the `player` table:**

   ```sql
   SELECT DISTINCT player_name FROM player LIMIT 100;
   ```

5. **Map bowler IDs to their names by joining `ball_by_ball` and `player`:**

   ```sql
   SELECT DISTINCT bb.bowler, p.player_name
   FROM ball_by_ball bb
   JOIN player p ON bb.bowler = p.player_id
   LIMIT 100;
   ```

6. **Retrieve runs scored off the bat per delivery from `batsman_scored`:**

   ```sql
   SELECT runs_scored FROM batsman_scored LIMIT 100;
   ```

7. **Retrieve extra runs conceded per delivery from `extra_runs`:**

   ```sql
   SELECT extra_type, extra_runs FROM extra_runs LIMIT 100;
   ```

8. **Join `batsman_scored` and `extra_runs` to see total runs per delivery:**

   ```sql
   SELECT bs.match_id, bs.over_id, bs.ball_id, bs.runs_scored, er.extra_runs
   FROM batsman_scored bs
   LEFT JOIN extra_runs er ON bs.match_id = er.match_id
     AND bs.over_id = er.over_id
     AND bs.ball_id = er.ball_id
     AND bs.innings_no = er.innings_no
   LIMIT 100;
   ```

9. **Calculate total runs conceded per delivery (including extras):**

   ```sql
   SELECT bs.match_id, bs.over_id, bs.ball_id, bs.innings_no,
          (bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
   FROM batsman_scored bs
   LEFT JOIN extra_runs er ON bs.match_id = er.match_id
     AND bs.over_id = er.over_id
     AND bs.ball_id = er.ball_id
     AND bs.innings_no = er.innings_no
   LIMIT 100;
   ```

10. **Sum total runs per over per bowler:**

    ```sql
    SELECT bb.match_id, bb.over_id, bb.bowler,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    LIMIT 100;
    ```

11. **Identify overs with the maximum runs conceded by bowlers:**

    ```sql
    SELECT bb.match_id, bb.over_id, bb.bowler,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
    ```

12. **Get the names of bowlers along with total runs conceded per over:**

    ```sql
    SELECT bb.match_id, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
    ```

13. **Retrieve details of top 3 overs with maximum runs conceded:**

    ```sql
    SELECT bb.match_id, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 3;
    ```

14. **List the types of extra runs conceded (for understanding the nature of extras):**

    ```sql
    SELECT DISTINCT extra_type FROM extra_runs LIMIT 100;
    ```

15. **Find matches where the maximum runs were conceded in a single over:**

    ```sql
    SELECT bb.match_id, m.match_date, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN match m ON bb.match_id = m.match_id
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
    ```

---

These queries progressively explore the data, starting from simple retrievals to complex aggregations and joins, allowing us to understand the dataset and work towards identifying the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding matches.Query:
SELECT DISTINCT match_id FROM ball_by_ball LIMIT 100;
Answer:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230
Query:
SELECT DISTINCT over_id FROM ball_by_ball ORDER BY over_id LIMIT 100;
Answer:
over_id
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
Query:
SELECT DISTINCT bowler FROM ball_by_ball LIMIT 100;
Answer:
bowler
106
14
15
84
13
82
1
9
16
63
10
66
22
77
120
25
29
121
435
119
24
67
68
118
126
436
32
90
39
89
38
31
175
37
73
49
80
81
12
44
50
48
60
61
58
83
59
5
56
4
131
75
117
70
91
71
150
72
99
78
102
124
98
148
86
27
94
109
149
8
41
54
437
105
122
116
143
112
111
45
115
21
108
151
127
147
137
136
144
140
153
142
145
35
135
57
438
174
194
156
Query:
SELECT DISTINCT player_name FROM player LIMIT 100;
Answer:
player_name
SC Ganguly
BB McCullum
RT Ponting
DJ Hussey
Mohammad Hafeez
R Dravid
W Jaffer
V Kohli
JH Kallis
CL White
MV Boucher
B Akhil
AA Noffke
P Kumar
Z Khan
SB Joshi
PA Patel
ML Hayden
MEK Hussey
MS Dhoni
SK Raina
JDP Oram
S Badrinath
K Goel
JR Hopes
KC Sangakkara
Yuvraj Singh
SM Katich
IK Pathan
T Kohli
YK Pathan
SR Watson
M Kaif
DS Lehmann
M Rawat
D Salunkhe
SK Warne
SK Trivedi
G Gambhir
V Sehwag
S Dhawan
L Ronchi
ST Jayasuriya
DJ Thornely
RV Uthappa
PR Shah
AM Nayar
SM Pollock
Harbhajan Singh
S Chanderpaul
LRPL Taylor
AC Gilchrist
Y Venugopal Rao
VVS Laxman
A Symonds
RG Sharma
SB Styris
SB Bangar
WPUJC Vaas
RP Singh
WP Saha
LR Shukla
DPMD Jayawardene
S Sohal
B Lee
PP Chawla
WA Mota
Kamran Akmal
Shahid Afridi
DJ Bravo
MA Khote
A Nehra
GC Smith
Pankaj Singh
RR Sarwan
S Sreesanth
VRV Singh
SS Tiwary
DS Kulkarni
R Vinay Kumar
AB Agarkar
M Kartik
I Sharma
AM Rahane
Shoaib Malik
MK Tiwary
KD Karthik
R Bhatia
MF Maharoof
VY Mahesh
TM Srivastava
B Chipli
DW Steyn
DB Das
MK Pandey
HH Gibbs
DNT Zoysa
D Kalyankrishna
SE Marsh
SA Asnodkar
Query:
SELECT DISTINCT bb.bowler, p.player_name
   FROM ball_by_ball bb
   JOIN player p ON bb.bowler = p.player_id
   LIMIT 100;
Answer:
bowler,player_name
106,AB Dinda
14,P Kumar
15,Z Khan
84,I Sharma
13,AA Noffke
82,AB Agarkar
1,SC Ganguly
9,JH Kallis
16,SB Joshi
63,LR Shukla
10,CL White
66,B Lee
22,JDP Oram
77,S Sreesanth
120,MS Gony
25,JR Hopes
29,IK Pathan
121,M Muralitharan
435,P Amarnath
119,Joginder Sharma
24,K Goel
67,PP Chawla
68,WA Mota
118,GD McGrath
126,MM Patel
436,B Geeves
32,SR Watson
90,MF Maharoof
39,SK Trivedi
89,R Bhatia
38,SK Warne
31,YK Pathan
175,DL Vettori
37,D Salunkhe
73,A Nehra
49,SM Pollock
80,DS Kulkarni
81,R Vinay Kumar
12,B Akhil
44,ST Jayasuriya
50,Harbhajan Singh
48,AM Nayar
60,WPUJC Vaas
61,RP Singh
58,SB Styris
83,M Kartik
59,SB Bangar
5,Mohammad Hafeez
56,A Symonds
4,DJ Hussey
131,PP Ojha
75,Pankaj Singh
117,Mohammad Asif
70,Shahid Afridi
91,VY Mahesh
71,DJ Bravo
150,VS Yeligati
72,MA Khote
99,D Kalyankrishna
78,VRV Singh
102,Sohail Tanvir
124,A Kumble
98,DNT Zoysa
148,SD Chitnis
86,Shoaib Malik
27,Yuvraj Singh
94,DW Steyn
109,JA Morkel
149,CRD Fernando
8,V Kohli
41,V Sehwag
54,Y Venugopal Rao
437,Gagandeep Singh
105,Umar Gul
122,M Ntini
116,PJ Sangwan
143,DP Vijaykumar
112,DB Ravi Teja
111,LPC Silva
45,DJ Thornely
115,RR Raje
21,SK Raina
108,S Vidyut
151,L Balaji
127,CK Kapugedera
147,DR Smith
137,AD Mascarenhas
136,A Mishra
144,Shoaib Akhtar
140,Iqbal Abdulla
153,RR Powar
142,PM Sarvesh Kumar
145,Abdur Razzak
135,TM Dilshan
57,RG Sharma
438,A Nel
174,BAW Mendis
194,SL Malinga
156,T Thushara
155,A Flintoff
Query:
SELECT runs_scored FROM batsman_scored LIMIT 100;
Answer:
runs_scored
1
0
0
0
1
0
1
0
0
0
0
0
0
4
0
4
0
6
1
4
0
0
0
0
0
0
0
0
1
4
0
1
0
0
1
2
6
1
0
0
4
0
0
0
1
0
6
4
1
1
1
4
0
0
6
1
0
0
0
1
0
0
0
0
0
0
1
0
1
0
0
1
0
1
0
1
1
2
1
1
0
0
4
0
1
1
0
1
1
1
2
1
0
1
0
0
0
0
0
0
Query:
SELECT extra_type, extra_runs FROM extra_runs LIMIT 100;
Answer:
extra_type,extra_runs
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,2
legbyes,2
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,2
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,2
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,2
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,4
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
legbyes,1
Query:
SELECT bs.match_id, bs.over_id, bs.ball_id, bs.runs_scored, er.extra_runs
   FROM batsman_scored bs
   LEFT JOIN extra_runs er ON bs.match_id = er.match_id
     AND bs.over_id = er.over_id
     AND bs.ball_id = er.ball_id
     AND bs.innings_no = er.innings_no
   LIMIT 100;
Answer:
match_id,over_id,ball_id,runs_scored,extra_runs
335987,1,1,1,
335987,1,2,0,
335987,1,3,0,
335987,1,4,0,
335987,1,4,1,
335987,1,5,0,
335987,1,5,1,
335987,1,6,0,
335987,1,6,0,
335987,1,7,0,1.0
335987,1,7,0,
335987,2,1,0,
335987,2,1,0,
335987,2,2,4,
335987,2,2,0,
335987,2,3,4,
335987,2,3,0,4.0
335987,2,4,6,
335987,2,4,1,
335987,2,5,4,
335987,2,5,0,
335987,2,6,0,
335987,2,6,0,
335987,3,1,0,
335987,3,1,0,
335987,3,2,0,
335987,3,2,0,
335987,3,3,0,1.0
335987,3,3,1,
335987,3,4,4,
335987,3,4,0,
335987,3,5,1,
335987,3,6,0,
335987,3,6,0,
335987,3,7,1,
335987,4,1,2,
335987,4,2,6,
335987,4,2,1,
335987,4,3,0,1.0
335987,4,3,0,
335987,4,4,4,
335987,4,4,0,1.0
335987,4,5,0,
335987,4,5,0,
335987,4,6,1,
335987,4,6,0,
335987,4,7,6,
335987,5,1,4,
335987,5,1,1,
335987,5,2,1,
335987,5,2,1,
335987,5,3,4,
335987,5,3,0,
335987,5,4,0,
335987,5,4,6,
335987,5,5,1,
335987,5,5,0,
335987,5,6,0,
335987,5,6,0,
335987,6,1,1,
335987,6,1,0,
335987,6,2,0,
335987,6,2,0,
335987,6,3,0,
335987,6,3,0,
335987,6,4,0,
335987,6,4,1,
335987,6,5,0,
335987,6,5,1,
335987,6,6,0,
335987,6,6,0,
335987,7,1,1,
335987,7,1,0,
335987,7,2,1,
335987,7,2,0,
335987,7,3,1,
335987,7,3,1,
335987,7,4,2,
335987,7,5,1,
335987,7,6,1,
335987,7,6,0,
335987,7,7,0,
335987,7,8,4,
335987,8,1,0,
335987,8,1,1,
335987,8,2,1,
335987,8,2,0,1.0
335987,8,3,1,
335987,8,3,1,
335987,8,4,1,
335987,8,4,2,
335987,8,5,1,
335987,8,5,0,
335987,8,6,1,
335987,8,6,0,
335987,9,1,0,
335987,9,1,0,
335987,9,2,0,
335987,9,2,0,
335987,9,3,0,
Query:
SELECT bs.match_id, bs.over_id, bs.ball_id, bs.innings_no,
          (bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
   FROM batsman_scored bs
   LEFT JOIN extra_runs er ON bs.match_id = er.match_id
     AND bs.over_id = er.over_id
     AND bs.ball_id = er.ball_id
     AND bs.innings_no = er.innings_no
   LIMIT 100;
Answer:
match_id,over_id,ball_id,innings_no,total_runs
335987,1,1,2,1
335987,1,2,1,0
335987,1,3,2,0
335987,1,4,1,0
335987,1,4,2,1
335987,1,5,1,0
335987,1,5,2,1
335987,1,6,1,0
335987,1,6,2,0
335987,1,7,1,1
335987,1,7,2,0
335987,2,1,1,0
335987,2,1,2,0
335987,2,2,1,4
335987,2,2,2,0
335987,2,3,1,4
335987,2,3,2,4
335987,2,4,1,6
335987,2,4,2,1
335987,2,5,1,4
335987,2,5,2,0
335987,2,6,1,0
335987,2,6,2,0
335987,3,1,1,0
335987,3,1,2,0
335987,3,2,1,0
335987,3,2,2,0
335987,3,3,1,1
335987,3,3,2,1
335987,3,4,1,4
335987,3,4,2,0
335987,3,5,1,1
335987,3,6,1,0
335987,3,6,2,0
335987,3,7,2,1
335987,4,1,2,2
335987,4,2,1,6
335987,4,2,2,1
335987,4,3,1,1
335987,4,3,2,0
335987,4,4,1,4
335987,4,4,2,1
335987,4,5,1,0
335987,4,5,2,0
335987,4,6,1,1
335987,4,6,2,0
335987,4,7,1,6
335987,5,1,1,4
335987,5,1,2,1
335987,5,2,1,1
335987,5,2,2,1
335987,5,3,1,4
335987,5,3,2,0
335987,5,4,1,0
335987,5,4,2,6
335987,5,5,1,1
335987,5,5,2,0
335987,5,6,1,0
335987,5,6,2,0
335987,6,1,1,1
335987,6,1,2,0
335987,6,2,1,0
335987,6,2,2,0
335987,6,3,1,0
335987,6,3,2,0
335987,6,4,1,0
335987,6,4,2,1
335987,6,5,1,0
335987,6,5,2,1
335987,6,6,1,0
335987,6,6,2,0
335987,7,1,1,1
335987,7,1,2,0
335987,7,2,1,1
335987,7,2,2,0
335987,7,3,1,1
335987,7,3,2,1
335987,7,4,1,2
335987,7,5,1,1
335987,7,6,1,1
335987,7,6,2,0
335987,7,7,2,0
335987,7,8,2,4
335987,8,1,1,0
335987,8,1,2,1
335987,8,2,1,1
335987,8,2,2,1
335987,8,3,1,1
335987,8,3,2,1
335987,8,4,1,1
335987,8,4,2,2
335987,8,5,1,1
335987,8,5,2,0
335987,8,6,1,1
335987,8,6,2,0
335987,9,1,1,0
335987,9,1,2,0
335987,9,2,1,0
335987,9,2,2,0
335987,9,3,1,0
Query:
SELECT bb.match_id, bb.over_id, bb.bowler,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    LIMIT 100;
Answer:
match_id,over_id,bowler,total_runs
335987,1,14,1
335987,1,106,3
335987,2,15,18
335987,2,84,5
335987,3,14,6
335987,3,106,2
335987,4,13,18
335987,4,84,4
335987,5,14,10
335987,5,82,8
335987,6,15,1
335987,6,106,2
335987,7,13,7
335987,7,82,5
335987,8,1,5
335987,8,15,5
335987,9,9,4
335987,9,82,3
335987,10,1,7
335987,10,16,10
335987,11,9,15
335987,11,82,5
335987,12,1,3
335987,12,16,10
335987,13,9,11
335987,13,63,9
335987,14,1,7
335987,14,16,6
335987,15,10,22
335987,15,84,3
335987,16,13,4
335987,16,63,0
335987,17,15,14
335987,18,13,7
335987,19,9,21
335987,20,14,22
335988,1,22,9
335988,1,66,5
335988,2,77,14
335988,2,120,7
335988,3,22,11
335988,3,66,7
335988,4,77,6
335988,4,120,10
335988,5,22,10
335988,5,66,9
335988,6,25,11
335988,6,120,14
335988,7,29,9
335988,7,121,6
335988,8,25,8
335988,8,435,15
335988,9,29,13
335988,9,119,12
335988,10,24,5
335988,10,121,13
335988,11,67,19
335988,11,435,5
335988,12,24,20
335988,12,119,12
335988,13,68,4
335988,13,435,14
335988,14,25,10
335988,14,121,9
335988,15,68,18
335988,15,119,13
335988,16,29,8
335988,16,435,11
335988,17,77,14
335988,17,120,10
335988,18,29,17
335988,18,121,5
335988,19,22,7
335988,19,66,15
335988,20,25,25
335988,20,119,9
335989,1,118,6
335989,1,126,8
335989,2,32,12
335989,2,436,10
335989,3,118,0
335989,3,126,5
335989,4,32,10
335989,4,436,10
335989,5,118,6
335989,5,126,12
335989,6,39,6
335989,6,90,3
335989,7,32,4
335989,7,89,4
335989,8,39,11
335989,8,90,4
335989,9,38,7
335989,9,89,3
335989,10,31,7
335989,10,90,6
335989,11,38,9
335989,11,89,2
335989,12,31,5
335989,12,175,12
Query:
SELECT bb.match_id, bb.over_id, bb.bowler,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
Answer:
match_id,over_id,bowler,total_runs
501252,3,294,37
734052,6,333,33
548332,13,235,31
335993,13,56,30
501265,15,268,30
980992,18,71,30
980992,19,432,30
598032,8,254,29
598065,17,280,29
548323,19,8,28
598032,5,253,28
980912,19,299,28
336020,19,38,27
548344,19,67,27
598032,15,286,27
729296,18,80,27
335993,18,90,26
335997,14,14,26
336023,14,127,26
419142,16,226,26
419144,13,161,26
598034,1,50,26
598042,20,4,26
598047,20,106,26
729322,17,136,26
734010,20,342,26
734012,5,367,26
734042,13,94,26
980928,14,228,26
335988,20,25,25
336041,20,32,25
392233,20,195,25
392235,19,126,25
392242,6,41,25
419112,12,209,25
419117,13,77,25
419157,20,198,25
501218,20,106,25
501225,3,39,25
501246,19,274,25
501262,13,249,25
548353,18,1,25
548353,19,73,25
548367,6,299,25
548385,19,296,25
598069,15,61,25
729300,13,136,25
733988,3,453,25
733996,16,311,25
734012,19,367,25
829794,19,322,25
829800,17,375,25
980936,18,311,25
336024,17,75,24
336031,20,89,24
392219,15,78,24
392228,6,179,24
419128,19,151,24
419134,5,226,24
419138,3,14,24
501229,20,258,24
548329,14,270,24
548329,17,81,24
548332,20,73,24
548360,5,126,24
548372,20,126,24
548381,2,120,24
598004,17,258,24
598059,18,232,24
598072,19,232,24
733982,19,94,24
733988,19,296,24
734032,15,382,24
734034,20,94,24
734052,4,359,24
829734,14,35,24
829742,17,246,24
829790,3,367,24
829812,2,299,24
980964,17,32,24
981024,20,32,24
335999,7,49,23
336001,19,94,23
336014,14,41,23
336024,14,77,23
336026,3,144,23
392215,19,77,23
392241,20,61,23
419117,18,228,23
419122,2,77,23
419142,15,121,23
501237,18,282,23
501248,8,290,23
501260,2,346,23
501261,20,126,23
501272,20,151,23
548316,20,120,23
548322,14,192,23
548338,18,293,23
548347,11,221,23
Query:
SELECT bb.match_id, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
Answer:
match_id,over_id,bowler_name,total_runs
501252,3,P Parameswaran,37
734052,6,P Awana,33
548332,13,R Sharma,31
335993,13,A Symonds,30
501265,15,JJ van der Wath,30
980992,18,DJ Bravo,30
980992,19,S Kaushik,30
598032,8,AJ Finch,29
598065,17,NLTC Perera,29
548323,19,V Kohli,28
598032,5,MR Marsh,28
980912,19,B Kumar,28
336020,19,SK Warne,27
548344,19,PP Chawla,27
598032,15,AG Murtaza,27
729296,18,DS Kulkarni,27
335993,18,MF Maharoof,26
335997,14,P Kumar,26
336023,14,CK Kapugedera,26
419142,16,S Narwal,26
419144,13,RS Bopara,26
598034,1,Harbhajan Singh,26
598042,20,DJ Hussey,26
598047,20,AB Dinda,26
729322,17,A Mishra,26
734010,20,R Shukla,26
734012,5,Sandeep Sharma,26
734042,13,DW Steyn,26
980928,14,Bipul Sharma,26
335988,20,JR Hopes,25
336041,20,SR Watson,25
392233,20,Mashrafe Mortaza,25
392235,19,MM Patel,25
392242,6,V Sehwag,25
419112,12,R Sathish,25
419117,13,S Sreesanth,25
419157,20,AB McDonald,25
501218,20,AB Dinda,25
501225,3,SK Trivedi,25
501246,19,AC Thomas,25
501262,13,S Sriram,25
548353,18,SC Ganguly,25
548353,19,A Nehra,25
548367,6,B Kumar,25
548385,19,VR Aaron,25
598069,15,RP Singh,25
729300,13,A Mishra,25
733988,3,P Suyal,25
733996,16,HV Patel,25
734012,19,Sandeep Sharma,25
829794,19,P Negi,25
829800,17,JJ Bumrah,25
980936,18,HV Patel,25
336024,17,Pankaj Singh,24
336031,20,R Bhatia,24
392219,15,VRV Singh,24
392228,6,Shoaib Ahmed,24
419128,19,L Balaji,24
419134,5,S Narwal,24
419138,3,P Kumar,24
501229,20,DT Christian,24
548329,14,S Aravind,24
548329,17,R Vinay Kumar,24
548332,20,A Nehra,24
548360,5,MM Patel,24
548372,20,MM Patel,24
548381,2,MS Gony,24
598004,17,DT Christian,24
598059,18,UT Yadav,24
598072,19,UT Yadav,24
733982,19,DW Steyn,24
733988,19,VR Aaron,24
734032,15,YS Chahal,24
734034,20,DW Steyn,24
734052,4,IC Pandey,24
829742,17,AN Ahmed,24
829790,3,Sandeep Sharma,24
829812,2,B Kumar,24
980964,17,SR Watson,24
981024,20,SR Watson,24
335999,7,SM Pollock,23
336001,19,DW Steyn,23
336014,14,V Sehwag,23
336024,14,S Sreesanth,23
336026,3,Shoaib Akhtar,23
392215,19,S Sreesanth,23
392241,20,RP Singh,23
419117,18,Bipul Sharma,23
419122,2,S Sreesanth,23
419142,15,M Muralitharan,23
501237,18,JE Taylor,23
501248,8,I Malhotra,23
501260,2,JD Unadkat,23
501261,20,MM Patel,23
501272,20,L Balaji,23
548316,20,MS Gony,23
548322,14,J Botha,23
548338,18,S Nadeem,23
548347,11,KA Pollard,23
548349,19,R Bhatia,23
Query:
SELECT bb.match_id, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 3;
Answer:
match_id,over_id,bowler_name,total_runs
501252,3,P Parameswaran,37
734052,6,P Awana,33
548332,13,R Sharma,31
Query:
SELECT DISTINCT extra_type FROM extra_runs LIMIT 100;
Answer:
extra_type
legbyes
wides
byes
noballs
penalty
Query:
SELECT bb.match_id, m.match_date, bb.over_id, p.player_name AS bowler_name,
           SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS total_runs
    FROM ball_by_ball bb
    JOIN match m ON bb.match_id = m.match_id
    JOIN batsman_scored bs ON bb.match_id = bs.match_id
      AND bb.over_id = bs.over_id
      AND bb.ball_id = bs.ball_id
      AND bb.innings_no = bs.innings_no
    LEFT JOIN extra_runs er ON bb.match_id = er.match_id
      AND bb.over_id = er.over_id
      AND bb.ball_id = er.ball_id
      AND bb.innings_no = er.innings_no
    JOIN player p ON bb.bowler = p.player_id
    GROUP BY bb.match_id, bb.over_id, bb.bowler
    ORDER BY total_runs DESC
    LIMIT 100;
Answer:
match_id,match_date,over_id,bowler_name,total_runs
501252,2011-05-08,3,P Parameswaran,37
734052,2014-05-30,6,P Awana,33
548332,2012-04-17,13,R Sharma,31
335993,2008-04-22,13,A Symonds,30
501265,2011-05-17,15,JJ van der Wath,30
980992,2016-05-14,18,DJ Bravo,30
980992,2016-05-14,19,S Kaushik,30
598032,2013-04-23,8,AJ Finch,29
598065,2013-05-13,17,NLTC Perera,29
548323,2012-04-12,19,V Kohli,28
598032,2013-04-23,5,MR Marsh,28
980912,2016-04-12,19,B Kumar,28
336020,2008-05-11,19,SK Warne,27
548344,2012-04-25,19,PP Chawla,27
598032,2013-04-23,15,AG Murtaza,27
729296,2014-04-20,18,DS Kulkarni,27
335993,2008-04-22,18,MF Maharoof,26
335997,2008-04-26,14,P Kumar,26
336023,2008-05-14,14,CK Kapugedera,26
419142,2010-04-03,16,S Narwal,26
419144,2010-04-04,13,RS Bopara,26
598034,2013-04-24,1,Harbhajan Singh,26
598042,2013-04-29,20,DJ Hussey,26
598047,2013-05-02,20,AB Dinda,26
729322,2014-04-30,17,A Mishra,26
734010,2014-05-13,20,R Shukla,26
734012,2014-05-14,5,Sandeep Sharma,26
734042,2014-05-24,13,DW Steyn,26
980928,2016-04-18,14,Bipul Sharma,26
335988,2008-04-19,20,JR Hopes,25
336041,2008-05-26,20,SR Watson,25
392233,2009-05-16,20,Mashrafe Mortaza,25
392235,2009-05-17,19,MM Patel,25
392242,2009-05-22,6,V Sehwag,25
419112,2010-03-13,12,R Sathish,25
419117,2010-03-16,13,S Sreesanth,25
419157,2010-04-13,20,AB McDonald,25
501218,2011-04-17,20,AB Dinda,25
501225,2011-04-21,3,SK Trivedi,25
501246,2011-05-04,19,AC Thomas,25
501262,2011-05-15,13,S Sriram,25
548353,2012-05-01,18,SC Ganguly,25
548353,2012-05-01,19,A Nehra,25
548367,2012-05-11,6,B Kumar,25
548385,2012-05-25,19,VR Aaron,25
598069,2013-05-06,15,RP Singh,25
729300,2014-04-22,13,A Mishra,25
733988,2014-05-06,3,P Suyal,25
733996,2014-05-09,16,HV Patel,25
734012,2014-05-14,19,Sandeep Sharma,25
829794,2015-05-08,19,P Negi,25
829800,2015-05-10,17,JJ Bumrah,25
980936,2016-04-22,18,HV Patel,25
336024,2008-05-28,17,Pankaj Singh,24
336031,2008-05-19,20,R Bhatia,24
392219,2009-05-07,15,VRV Singh,24
392228,2009-05-13,6,Shoaib Ahmed,24
419128,2010-03-23,19,L Balaji,24
419134,2010-03-28,5,S Narwal,24
419138,2010-03-31,3,P Kumar,24
501229,2011-04-24,20,DT Christian,24
548329,2012-04-15,14,S Aravind,24
548329,2012-04-15,17,R Vinay Kumar,24
548332,2012-04-17,20,A Nehra,24
548360,2012-05-06,5,MM Patel,24
548372,2012-05-14,20,MM Patel,24
548381,2012-05-20,2,MS Gony,24
598004,2013-04-04,17,DT Christian,24
598059,2013-05-10,18,UT Yadav,24
598072,2013-05-19,19,UT Yadav,24
733982,2014-05-04,19,DW Steyn,24
733988,2014-05-06,19,VR Aaron,24
734032,2014-05-22,15,YS Chahal,24
734034,2014-05-22,20,DW Steyn,24
734052,2014-05-30,4,IC Pandey,24
829742,2015-04-19,17,AN Ahmed,24
829790,2015-05-06,3,Sandeep Sharma,24
829812,2015-05-15,2,B Kumar,24
980964,2016-05-02,17,SR Watson,24
981024,2016-05-29,20,SR Watson,24
335999,2008-04-27,7,SM Pollock,23
336001,2008-04-28,19,DW Steyn,23
336014,2008-05-08,14,V Sehwag,23
336024,2008-05-28,14,S Sreesanth,23
336026,2008-05-16,3,Shoaib Akhtar,23
392215,2009-05-05,19,S Sreesanth,23
392241,2009-05-21,20,RP Singh,23
419117,2010-03-16,18,Bipul Sharma,23
419122,2010-03-19,2,S Sreesanth,23
419142,2010-04-03,15,M Muralitharan,23
501237,2011-04-29,18,JE Taylor,23
501248,2011-05-05,8,I Malhotra,23
501260,2011-05-14,2,JD Unadkat,23
501261,2011-05-14,20,MM Patel,23
501272,2011-05-22,20,L Balaji,23
548316,2012-04-07,20,MS Gony,23
548322,2012-04-11,14,J Botha,23
548338,2012-04-21,18,S Nadeem,23
548347,2012-04-27,11,KA Pollard,23
548349,2012-04-28,19,R Bhatia,23
End Exploring Related Columns
Task: Please help me find the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding matches.

Please answer only one complete SQL in sqlite dialect in ```sql``` format.
Usage example: ```sql
SELECT DISTINCT "column_name" FROM "table_name" WHERE ... ``` (Replace "table_name" with the actual table name. Enclose table and column names with double quotations if they contain special characters or match reserved keywords.)
Follow the answer format like: ```csv
Bowler_Name,Total_Runs_Conceded_In_Over,Match_ID,Over_ID
bowler1:str,total_runs1:int,match_id1:int,over_id1:int
bowler2:str,total_runs2:int,match_id2:int,over_id2:int
bowler3:str,total_runs3:int,match_id3:int,over_id3:int
(Attention: answer in three rows)
```

We calculated the total runs conceded by each bowler in each over by summing the runs scored off the bat and any extra runs conceded (such as wides or no-balls) during that over. This allowed us to identify the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding match and over information..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: 

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 15:32:43 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 15:32:43 - root - INFO - ```sql
SELECT p.player_name AS Bowler_Name,
       SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS Total_Runs_Conceded_In_Over,
       bb.match_id AS Match_ID,
       bb.over_id AS Over_ID
FROM ball_by_ball bb
JOIN batsman_scored bs
  ON bb.match_id = bs.match_id
  AND bb.over_id = bs.over_id
  AND bb.ball_id = bs.ball_id
  AND bb.innings_no = bs.innings_no
LEFT JOIN extra_runs er
  ON bb.match_id = er.match_id
  AND bb.over_id = er.over_id
  AND bb.ball_id = er.ball_id
  AND bb.innings_no = er.innings_no
JOIN player p
  ON bb.bowler = p.player_id
GROUP BY bb.match_id, bb.over_id, bb.bowler
ORDER BY Total_Runs_Conceded_In_Over DESC
LIMIT 3;
```
2025-01-23 15:32:44 - root - INFO - itercount: 1
2025-01-23 15:32:44 - root - INFO - 0
2025-01-23 15:32:44 - root - INFO - results: 
Bowler_Name,Total_Runs_Conceded_In_Over,Match_ID,Over_ID
P Parameswaran,37,501252,3
P Awana,33,734052,6
R Sharma,31,548332,13


2025-01-23 15:32:44 - root - INFO - Please check the answer again by reviewing Please help me find the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding matches., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Bowler_Name,Total_Runs_Conceded_In_Over,Match_ID,Over_ID
bowler1:str,total_runs1:int,match_id1:int,over_id1:int
bowler2:str,total_runs2:int,match_id2:int,over_id2:int
bowler3:str,total_runs3:int,match_id3:int,over_id3:int
(Attention: answer in three rows)
```

We calculated the total runs conceded by each bowler in each over by summing the runs scored off the bat and any extra runs conceded (such as wides or no-balls) during that over. This allowed us to identify the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding match and over information. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Bowler_Name,Total_Runs_Conceded_In_Over,Match_ID,Over_ID
P Parameswaran,37,501252,3
P Awana,33,734052,6
R Sharma,31,548332,13
Current sql:
SELECT p.player_name AS Bowler_Name,
       SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS Total_Runs_Conceded_In_Over,
       bb.match_id AS Match_ID,
       bb.over_id AS Over_ID
FROM ball_by_ball bb
JOIN batsman_scored bs
  ON bb.match_id = bs.match_id
  AND bb.over_id = bs.over_id
  AND bb.ball_id = bs.ball_id
  AND bb.innings_no = bs.innings_no
LEFT JOIN extra_runs er
  ON bb.match_id = er.match_id
  AND bb.over_id = er.over_id
  AND bb.ball_id = er.ball_id
  AND bb.innings_no = er.innings_no
JOIN player p
  ON bb.bowler = p.player_id
GROUP BY bb.match_id, bb.over_id, bb.bowler
ORDER BY Total_Runs_Conceded_In_Over DESC
LIMIT 3;
2025-01-23 15:33:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 15:33:09 - root - INFO - ```sql
SELECT p.player_name AS Bowler_Name,
       SUM(bs.runs_scored + IFNULL(er.extra_runs, 0)) AS Total_Runs_Conceded_In_Over,
       bb.match_id AS Match_ID,
       bb.over_id AS Over_ID
FROM ball_by_ball bb
JOIN batsman_scored bs
  ON bb.match_id = bs.match_id
  AND bb.over_id = bs.over_id
  AND bb.ball_id = bs.ball_id
  AND bb.innings_no = bs.innings_no
LEFT JOIN extra_runs er
  ON bb.match_id = er.match_id
  AND bb.over_id = er.over_id
  AND bb.ball_id = er.ball_id
  AND bb.innings_no = er.innings_no
JOIN player p
  ON bb.bowler = p.player_id
GROUP BY bb.match_id, bb.over_id, bb.bowler
ORDER BY Total_Runs_Conceded_In_Over DESC
LIMIT 3;
```

```csv
Bowler_Name,Total_Runs_Conceded_In_Over,Match_ID,Over_ID
P Parameswaran,37,501252,3
P Awana,33,734052,6
R Sharma,31,548332,13
```
2025-01-23 15:33:10 - root - INFO - itercount: 2
2025-01-23 15:33:10 - root - INFO - 0
2025-01-23 15:33:10 - root - INFO - Total iteration counts: 2
