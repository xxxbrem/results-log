2025-01-23 23:16:09 - openai._base_client - INFO - Retrying request to /chat/completions in 0.454618 seconds
2025-01-23 23:16:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 23:16:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:16:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:16:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:16:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 46
2025-01-23 23:16:51 - snowflake.connector.connection - INFO - closed
2025-01-23 23:16:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:16:52 - root - INFO - SQL:
SELECT "publication_number", "abstract_localized"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "abstract_localized"::STRING ILIKE '%internet of things%'
   LIMIT 100;
Results:
Too long, hard cut:
publication_number,abstract_localized
WO-2020068499-A1,"[
  {
    ""language"": ""en"",
    ""text"": ""Systems and methods for managing an additive manufacturing production line include an additive manufacturing machine having a first sensor and an auxiliary equipment having a second sensor. A server includes security protocols, a workflow module, an industrial Internet of things (IIoT) module and a machine learning module. The workflow module, IIoT module, machine learning module, additive manufacturing machine and auxiliary equipment are in communication with each other using the security protocols. The machine learning module processes feedback from the first sensor and the second sensor to control operation of the additive manufacturing machine through the workflow module and the IIoT module."",
    ""truncated"": false
  },
  {
    ""language"": ""en"",
    ""text"": ""Systems and methods for managing an additive manufacturing production line include an additive manufacturing machine having a first sensor and an auxiliary equipment having a second sensor. A server includes security protocols, a workflow module, an industrial Internet of things (IIoT) module and a machine learning module. The workflow module, IIoT module, machine learning module, additive manufacturing machine and auxiliary equipment are in communication with each other using the security protocols. The machine learning module processes feedback from the first sensor and the second sensor to control operation of the additive manufacturing machine through the workflow module and the IIoT module."",
    ""truncated"": false
  },
  {
    ""language"": ""fr"",
    ""text"": ""Selon l&#39;invention, des systèmes et des procédés de gestion d&#39;une chaîne de production de fabrication additive comprennent une machine de fabrication additive ayant un premier capteur et un équipement auxiliaire ayant un second capteur. Un serveur comprend des protocoles de sécurité, un module de flux de travail, un module Internet des objets industriel (IIoT) et un module d&#39;apprentissage machine. Le module de flux de travail, le module IIoT, le module d&#39;apprentissage machine, la machine de fabrication additive et l&#39;équipement auxiliaire sont en communication les uns avec les autres à l&#39;aide des protocoles de sécurité. Le module d&#39;apprentissage machine traite une rétroaction provenant du premier capteur et du second capteur pour commander le fonctionnement de la machine de fabrication additive par l&#39;intermédiaire du module de flux de travail et du module IIoT."",
    ""truncated"": false
  },
  {
    ""language"": ""fr"",
    ""text"": ""Selon l&#39;invention, des systèmes et des procédés de gestion d&#39;une chaîne de production de fabrication additive comprennent une machine de fabrication additive ayant un premier capteur et un équipement auxiliaire ayant un second capteur. Un serveur comprend des protocoles de sécurité, un module de flux de travail, un module Internet des objets industriel (IIoT) et un module d&#39;apprentissage machine. Le module de flux de travail, le module IIoT, le module d&#39;apprentissage machine, la machine de fabrication additive et l&#39;équipement auxiliaire sont en communication les uns avec les autres à l&#39;aide des protocoles de sécurité. Le module d&#39;apprentissage machine traite une rétroaction provenant du premier capteur et du second capteur pour commander le fonctionnement de la machine de fabrication additive par l&#39;intermédiaire du module de flux de travail et du module IIoT."",
    ""truncated"": false
  }
]"
KR-20170058339-A,"[
  {
    ""language"": ""en"",
    ""text"": ""Provided is an education system for Internet of things. The system for Internet of things according to an embodiment of the present invention includes a computer having software capable of coding a control program for controlling the operation of a hardware device, wherein the computer is connected to the Internet, transmits and receives data to/from an external device via the Internet, and transfers the data received through the Internet to the software to code the control program; and a hardware device operating based on the control program, wherein the hardware device which includes a plurality of input and output ports, a main board capable of communicating with the computer, and an input module or an output module connected to the main board through the input and output ports. The effectiveness of education can be enhanced because it is possible to learn the operation principle of IOT by connecting home appliances or smart devices used in real life with the educational system, not simply learning with the given public materials."",
    ""truncated"": false
  },
  {
    ""language"": ""ko"",
    ""text"": ""사물 인터넷 교육용 시스템이 제공된다. 본 발명의 일 실시예에 따른 사물 인터넷 교육용 시스템은, 하드웨어 장치의 작동을 제어하기 위한 제어 프로그램을 코딩할 수 있는 소프트웨어를 구비하는 컴퓨터로서, 상기 컴퓨터는 인터넷에 연결되고 인터넷을 통해 외부 디바이스와 데이터를 송수신하고, 인터넷을 통해 수신된 데이터는 상기 소프트웨어에 전달되어 상기 제어 프로그램을 코딩할 때 이

2025-01-23 23:16:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:16:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:16:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:16:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 23:16:53 - snowflake.connector.connection - INFO - closed
2025-01-23 23:16:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:16:54 - root - INFO - SQL:
SELECT "publication_number", "filing_date", "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
Results:
publication_number,filing_date,country_code
US-2019196084-A1,20171222,US
US-2018141325-A1,20171228,US
US-2018187834-A1,20180102,US
US-2018204863-A1,20180116,US
US-2019223595-A1,20180123,US
US-2018155335-A1,20180201,US
US-2018233997-A1,20180209,US
US-2018337677-A1,20180215,US
US-2019266471-A1,20180223,US
US-2019267026-A1,20180227,US
US-2018254937-A1,20180301,US
US-2018277952-A1,20180321,US
US-2018211887-A1,20180322,US
US-2018277686-A1,20180323,US
US-2018279332-A1,20180323,US
US-2019297963-A1,20180402,US
US-2018342366-A1,20180403,US
US-2018239126-A1,20180424,US
US-2019289218-A1,20180426,US
US-2019335520-A1,20180427,US
US-2019140216-A1,20180501,US
US-2018357938-A1,20180508,US
US-2018330780-A1,20180511,US
US-2018370418-A1,20180521,US
US-2018286309-A1,20180604,US
US-2020057100-A1,20180820,US
US-2018294519-A1,20180605,US
US-2018291661-A1,20180611,US
US-2018293364-A1,20180611,US
US-2019157285-A1,20180622,US
US-2019003958-A1,20180626,US
US-2018306523-A1,20180628,US
US-2020015412-A1,20180710,US
US-2019028639-A1,20180716,US
US-2019026669-A1,20180717,US
US-2018327034-A1,20180726,US
US-2018365575-A1,20180730,US
US-2019010977-A1,20161226,US
US-2021194641-A1,20171205,US
US-2021211830-A1,20170214,US
US-2019089625-A1,20170331,US
US-2019131531-A1,20170407,US
US-2020215441-A1,20160711,US
US-2019377516-A1,20180810,US
US-2019058291-A1,20180817,US
US-2020061221-A1,20180821,US
US-2018367810-A1,20180823,US
US-2020065758-A1,20180824,US
US-2020075499-A1,20180828,US
US-2020070846-A1,20180905,US
US-2019021138-A1,20180911,US
US-2019289695-A1,20180912,US
US-2019258410-A1,20180920,US
US-2019159884-A1,20180927,US
US-2020105090-A1,20181002,US
US-2020111592-A1,20181008,US
US-2020072916-A1,20181207,US
US-2020180517-A1,20181210,US
US-2020194059-A1,20181213,US
US-2019186567-A1,20181213,US
US-2020162643-A1,20181214,US
US-2019200474-A1,20181219,US
US-2019231855-A1,20181221,US
US-2019140614-A1,20181228,US
US-2020067339-A1,20190102,US
US-2020217420-A1,20190103,US
US-2019149296-A1,20190116,US
US-2019313538-A1,20190214,US
US-2019177896-A1,20190215,US
US-2020269134-A1,20190221,US
US-2019370625-A1,20190227,US
US-2019278346-A1,20190308,US
US-2019156634-A1,20170515,US
US-2019189294-A1,20160519,US
US-2019361208-A1,20170523,US
US-2019146513-A1,20170628,US
US-2019240122-A1,20170524,US
US-2019237797-A1,20170621,US
US-2021219627-A1,20170628,US
US-2020156909-A1,20170419,US
US-2019172610-A1,20180620,US
US-2020179906-A1,20160912,US
US-2019320367-A1,20170929,US
US-2019365512-A1,20180712,US
US-2020040810-A1,20161011,US
US-2020063085-A1,20171103,US
US-2019262825-A1,20171116,US
US-2020295406-A1,20190314,US
US-2020311734-A1,20190326,US
US-2019307948-A1,20190405,US
US-2020004364-A1,20190405,US
US-2019293875-A1,20190408,US
US-2019319476-A1,20190411,US
US-2019236670-A1,20190412,US
US-2019322036-A1,20190415,US
US-2020334774-A1,20190417,US
US-2019332731-A1,20190417,US
US-2019324130-A1,20190419,US
US-2020070883-A1,20190423,US
US-2020079767-A1,20190425,US

2025-01-23 23:16:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:16:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:16:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:16:55 - snowflake.connector.connection - INFO - closed
2025-01-23 23:16:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:17:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 23:17:34 - root - INFO - The error you're encountering:

```
100097 (22007): 01b9e9d4-0004-809b-0001-11c300f8d93e: Can't parse '0' as date with format 'YYYYMMDD'
```

occurs because some records in the `"filing_date"` column contain invalid or zero values (`0`), which cannot be parsed into a valid date using the `TO_DATE` function with the format `'YYYYMMDD'`.

To fix this issue, you can modify your SQL query to exclude records where the `"filing_date"` is `0` or `NULL`. Here's the corrected query:

```sql
SELECT "publication_number",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "filing_date" IS NOT NULL AND "filing_date" <> 0
LIMIT 100;
```

**Explanation:**

- **Filtering Invalid Dates:** The `WHERE` clause now includes a condition to select only those records where `"filing_date"` is not `NULL` and not equal to `0`. This ensures that the `TO_DATE` function only attempts to parse valid date values.

- **Parsing Dates Correctly:** The `TO_DATE` function converts the `"filing_date"` (which is a number) to a string and then to a date using the format `'YYYYMMDD'`. The `TO_CHAR` function then extracts the year and month components as strings.

**Additional Suggestions:**

If you're still encountering issues, it's possible that there are other non-conforming date values in the `"filing_date"` column. To further filter out invalid dates, you can use a regular expression or a range check:

1. **Using a Range Check:**

   ```sql
   SELECT "publication_number",
          TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
          TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
   ```

   This ensures that only dates within the valid range are processed.

2. **Using TRY_TO_DATE Function:**

   Snowflake provides the `TRY_TO_DATE` function, which returns `NULL` if the conversion fails instead of raising an error. You can use it as follows:

   ```sql
   SELECT "publication_number",
          TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
          TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
   LIMIT 100;
   ```

   **Note:** This approach attempts to parse all `"filing_date"` values and filters out any records where the date conversion fails.

**Handling the Original Task:**

To answer your original task—counting the number of U.S. publications related to IoT filed each month from 2008 to 2022—you can use the following query:

```sql
SELECT TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "year",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.VALUE::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year", "month"
ORDER BY "year", "month";
```

**Explanation:**

- **Flattening `abstract_localized`:** We use `LATERAL FLATTEN` to access the nested `"abstract_localized"` field, allowing us to perform a text search on the `"text"` subfield.

- **String Matching:** The `ILIKE '%internet%of%things%'` condition searches for abstracts that include the phrase 'internet of things', accounting for any variations or additional characters between the words.

- **Date Parsing with `TRY_TO_DATE`:** By using `TRY_TO_DATE`, we avoid errors caused by invalid date formats. Only records with valid filing dates are included.

- **Filtering Date Range and Country Code:** We ensure that only U.S. publications filed between 2008 and 2022 are counted.

- **Grouping and Counting:** The results are grouped by year and month, providing the number of publications per month.

**Including Months with No Filings:**

To include months with zero filings in your results, you can generate a date range and left join it with your counts:

```sql
-- Generate a list of months between 2008 and 2022
WITH date_range AS (
  SELECT
    TO_CHAR(DATEADD(month, seq4(), '2008-01-01'), 'YYYY') AS "year",
    TO_CHAR(DATEADD(month, seq4(), '2008-01-01'), 'MM') AS "month"
  FROM table(generator(rowcount => 12 * (2022 - 2008 + 1)))
),

-- Get counts of publications per month
counts AS (
  SELECT TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "year",
         TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "month",
         COUNT(*) AS "num_publications"
  FROM PATENTS.PATENTS.PUBLICATIONS t,
       LATERAL FLATTEN(input => t."abstract_localized") f
  WHERE f.VALUE::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
    AND t."country_code" = 'US'
    AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
    AND t."filing_date" BETWEEN 20080101 AND 20221231
  GROUP BY "year", "month"
)

-- Join the date range with the counts
SELECT d."year", d."month", COALESCE(c."num_publications", 0) AS "num_publications"
FROM date_range d
LEFT JOIN counts c ON d."year" = c."year" AND d."month" = c."month"
ORDER BY d."year", d."month";
```

**Explanation:**

- **Date Range Generation:** The `date_range` CTE generates all months from January 2008 to December 2022.

- **Counting Publications:** The `counts` CTE computes the number of publications per month as before.

- **Left Join:** By performing a `LEFT JOIN` of `date_range` with `counts`, we ensure that all months are included, even if there are zero publications. The `COALESCE` function replaces `NULL` values with `0`.

**Final Output Format:**

Your final result will be a table like:

```csv
Year,Month,Num_Publications
2008,01,0
2008,02,0
...
2022,12,XX
```

Where `XX` represents the count of publications for that month.

**Additional Notes:**

- **Date Formatting:** Ensure that the date formats used in `TO_DATE` and `TO_CHAR` match the format of your data.

- **Abstract Matching:** If the phrase 'internet of things' may appear in different cases or with additional characters, using `ILIKE` with wildcards (`%`) allows for case-insensitive and partial matches.

- **Testing the Query:** Before running the full query, test it with a smaller date range or `LIMIT` to ensure it works as expected.

**Let me know** if you have any questions or need further assistance!
2025-01-23 23:17:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:17:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:17:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:17:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 23:17:35 - snowflake.connector.connection - INFO - closed
2025-01-23 23:17:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 23:19:22 - root - INFO - SQL:
SELECT "publication_number",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "filing_date" IS NOT NULL AND "filing_date" <> 0
LIMIT 100;
Results:
publication_number,filing_year,filing_month
IE-20080323-A1,2008,04
IT-BG950014-A1,1995,04
IT-FI930220-A1,1993,11
IT-GE990118-A1,1999,09
IT-MI910192-A1,1991,01
IT-MI920940-A1,1992,04
IT-MI952143-A1,1995,10
IT-MI960882-A1,1996,05
IT-PR920011-A1,1992,03
IT-PR990091-A1,1999,12
IT-RM910081-A1,1991,02
IT-RM910858-A1,1991,11
IT-RM920488-A1,1992,06
IT-RM950368-A1,1995,05
IT-RM990366-A1,1999,06
IT-TO910051-A1,1991,01
IT-TO910587-A1,1991,07
IT-TO920549-A1,1992,07
IT-TO960759-A1,1996,09
IT-TO960910-A1,1996,11
IT-TO990769-A1,1999,09
NO-20121361-A1,2012,11
NO-20160990-A1,2016,06
NO-20172049-A1,2017,12
NO-20190919-A1,2019,07
NO-20230234-A1,2020,12
PL-195695-A1,1977,01
PL-204627-A1,1978,02
PL-227073-A1,1980,10
PL-236386-A1,1982,05
PL-244191-A1,1983,10
PL-244469-A1,1983,11
PL-280671-A1,1989,07
PL-282155-A1,1989,11
PL-288538-A1,1990,12
PL-308766-A1,1993,11
PL-326482-A1,1998,05
PL-330412-A1,1997,05
PL-330975-A1,1999,01
PL-337636-A1,1999,12
PL-361095-A1,2001,10
PL-363291-A1,2003,11
PL-364009-A1,2003,12
PL-376372-A1,2003,08
PL-382925-A1,2007,07
PL-383378-A1,2007,09
PL-385077-A1,2008,04
PL-397406-A1,2011,12
PL-399855-A1,2012,07
PL-408741-A1,2014,07
PL-412909-A1,2015,06
PL-425402-A1,2018,04
PL-435587-A1,2020,10
US-2006229833-A1,2005,04
US-2005185880-A1,2005,04
US-2005177854-A1,2005,04
US-2009015570-A1,2008,04
US-2006235936-A1,2005,04
US-2006235799-A1,2005,04
US-2005272646-A1,2005,04
US-2005288596-A1,2005,04
US-2008304526-A1,2008,04
US-2003107059-A1,2002,03
US-2003002051-A1,2002,04
US-2005194166-A1,2005,05
US-2009284890-A1,2008,05
US-2005258052-A1,2005,05
US-2005216705-A1,2005,05
US-2008306051-A1,2008,06
US-2005227077-A1,2005,05
US-2008303670-A1,2008,06
US-2002142896-A1,2002,05
US-2009002100-A1,2008,06
US-2003137437-A1,2002,05
US-2009318082-A1,2008,06
US-2005289407-A1,2005,06
US-2006062466-A1,2005,06
US-2005238497-A1,2005,06
US-2009318123-A1,2006,12
US-2002185597-A1,2002,05
US-2007027605-A1,2005,07
US-2002193157-A1,2002,06
US-2003225975-A1,2002,06
US-2009039487-A1,2008,07
US-2009011281-A1,2008,07
US-2007003640-A1,2005,06
US-2005244602-A1,2005,07
US-2003068429-A1,2001,02
US-2010028040-A1,2008,07
US-2007029404-A1,2005,07
US-2006021877-A1,2005,07
US-2008307919-A1,2008,08
US-2003007483-A1,2002,07
US-2003039048-A1,2002,07
US-2003036156-A1,2002,07
US-2006173445-A1,2005,07
US-2007023586-A1,2005,07
US-2010042129-A1,2008,08
US-2006061254-A1,2005,07
US-2007025944-A1,2005,08

2025-01-23 23:19:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 23:19:23 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:24 - root - INFO - SQL:
SELECT TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY-MM') AS "year_month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND "filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year_month"
ORDER BY "year_month"
LIMIT 100
Results:
year_month,num_publications
2008-01,614
2008-02,692
2008-03,867
2008-04,791
2008-05,676
2008-06,798
2008-07,816
2008-08,729
2008-09,792
2008-10,814
2008-11,819
2008-12,1036
2009-01,609
2009-02,663
2009-03,868
2009-04,728
2009-05,714
2009-06,858
2009-07,743
2009-08,692
2009-09,843
2009-10,757
2009-11,787
2009-12,991
2010-01,577
2010-02,636
2010-03,844
2010-04,697
2010-05,716
2010-06,861
2010-07,781
2010-08,762
2010-09,874
2010-10,764
2010-11,872
2010-12,1131
2011-01,659
2011-02,586
2011-03,864
2011-04,731
2011-05,743
2011-06,834
2011-07,745
2011-08,782
2011-09,915
2011-10,783
2011-11,903
2011-12,1169
2012-01,621
2012-02,722
2012-03,949
2012-04,776
2012-05,882
2012-06,897
2012-07,914
2012-08,868
2012-09,977
2012-10,959
2012-11,1067
2012-12,1319
2013-01,828
2013-02,728
2013-03,1107
2013-04,965
2013-05,1022
2013-06,1104
2013-07,1180
2013-08,1091
2013-09,1211
2013-10,1100
2013-11,1385
2013-12,1672
2014-01,1008
2014-02,840
2014-03,1383
2014-04,1102
2014-05,1128
2014-06,1266
2014-07,1295
2014-08,1153
2014-09,1379
2014-10,1383
2014-11,1522
2014-12,2134
2015-01,1183
2015-02,1043
2015-03,1395
2015-04,1373
2015-05,1306
2015-06,1528
2015-07,1463
2015-08,1403
2015-09,1528
2015-10,1425
2015-11,1791
2015-12,2425
2016-01,1418
2016-02,1155
2016-03,1821
2016-04,1647

2025-01-23 23:19:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 53
2025-01-23 23:19:25 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:26 - root - INFO - SQL:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text", t."country_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
LIMIT 100
Results:
Too long, hard cut:
publication_number,abstract_text,country_code
US-2019268851-A1,"An energy-usage management system continuously monitors energy usage of energy-consuming Internet of Things devices by streaming time-stamped usage data from sensors embedded into the devices. The system infers from the streamed data time-dependent usage patterns for each device. Further meaning is ascribed to these patterns by interpreting them in light of contextual information retrieved from external data sources. The system then predicts each device&#39;s future energy usage as a function of the previous-usage patterns and further refines those predictions to account for environmental changes that will occur if the energy consumer moves to a new location. The system computes total energy costs for the devices for each candidate energy supplier or service plan at the consumer&#39;s final location, selects an optimal candidate that offers the lowest cost, and automatically switches the devices&#39; energy source to the optimal candidate.",US
US-2019268851-A1,"An energy-usage management system continuously monitors energy usage of energy-consuming Internet of Things devices by streaming time-stamped usage data from sensors embedded into the devices. The system infers from the streamed data time-dependent usage patterns for each device. Further meaning is ascribed to these patterns by interpreting them in light of contextual information retrieved from external data sources. The system then predicts each device&#39;s future energy usage as a function of the previous-usage patterns and further refines those predictions to account for environmental changes that will occur if the energy consumer moves to a new location. The system computes total energy costs for the devices for each candidate energy supplier or service plan at the consumer&#39;s final location, selects an optimal candidate that offers the lowest cost, and automatically switches the devices&#39; energy source to the optimal candidate.",US
US-2024204905-A1,"In a system, apparatus, method, and non-transitory computer readable medium related to a New Radio (NR) scheme for managing eavesdroppers of Internet of Things (IoT) devices, a network node may be caused to determine a jamming signal configuration associated with at least one IoT device, the jamming signal configuration including jamming signal parameters, and transmit a jamming signal based on the jamming signal parameters, the jamming signal being transmitted at a time corresponding to a transmission by the at least one IoT device.",US
US-2024204905-A1,"In a system, apparatus, method, and non-transitory computer readable medium related to a New Radio (NR) scheme for managing eavesdroppers of Internet of Things (IoT) devices, a network node may be caused to determine a jamming signal configuration associated with at least one IoT device, the jamming signal configuration including jamming signal parameters, and transmit a jamming signal based on the jamming signal parameters, the jamming signal being transmitted at a time corresponding to a transmission by the at least one IoT device.",US
US-10595268-B2,"The present disclosure relates to a communication scheme and system for converging a 5th generation (5G) communication system for supporting a data rate higher than that of a 4th generation (4G) system with an internet of things (IoT) technology. The present disclosure is applicable to intelligent services (e.g., smart homes, smart buildings, smart cities, smart cars, connected cars, health care, digital education, retails, and security and safety-related services) based on the 5G communication technology and the IoT-related technology. The present disclosure discloses operation methods of a terminal and a network for facilitating a 5G terminal registration procedure in a wireless communication system.",US
US-10595268-B2,"The present disclosure relates to a communication scheme and system for converging a 5 th  generation (5G) communication system for supporting a data rate higher than that of a 4 th  generation (4G) system with an internet of things (IoT) technology. The present disclosure is applicable to intelligent services (e.g., smart homes, smart buildings, smart cities, smart cars, connected cars, health care, digital education, retails, and security and safety-related services) based on the 5G communication technology and the IoT-related technology. The present disclosure discloses operation methods of a terminal and a network for facilitating a 5G terminal registration procedure in a wireless communication system.",US
US-2018102918-A1,"Disclosed is a way to expand the range of Internet of Things devices in a home, office, or structure to the range of a local WiFi network. This is accomplished by generating a network bridge for the devices using machine-to-machine protocols to communicate using the WiFi network backhaul channel. Transmissions in machine-to-machine protocol are tunneled through WiFi communications and extr

2025-01-23 23:19:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 23:19:27 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:28 - root - INFO - SQL:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
LIMIT 100
Results:
Too long, hard cut:
publication_number,abstract_text
US-3929068-A,A stencil is formed from a sheet of substantially paintimpervious material and has a design applied thereto by cuts which extend through the sheet. To permit the stencil to be secured in position to determine the exact location of a design to be painted one surface of the sheet has applied thereto a coating of a water-soluble pressure-sensitive adhesive. The stencil is flexible and can be readily peeled from a surface to which it has been adhered.
US-3891834-A,"A cooling curve computer and computation process for detecting the liquidus and solidus temperatures of a poured sample of iron alloy or other metal alloy and for computing, using electrical signals representative of the magnitudes of the liquidus and solidus temperatures, the percentage or equivalent percentage of one or more constituents of the sample. The computer includes means for generating a first electrical signal proportional to the temperature of the sample as it cools. First circuit means, supplied with the first electrical signal, are provided for detecting the liquidus and solidus temperatures of the sample. Second circuit means are utilized to store the magnitudes of the first electrical signal at the times of occurrence of the liquidus and solidus temperatures in the sample. Also, third circuit means are provided for generating a second electrical signal representative of the percentage or the equivalent percentage of one or more constituents of the sample. The third circuit means utilizes the stored magnitudes of the first electrical signal in the generation of the second electrical signal."
US-3895639-A,"An electrotherapeutic apparatus for producing a beat or interference frequency at a selected body location comprises two pairs of electrodes connected to the body. Alternating current is supplied to each pair of electrodes from the two outputs of an oscillator, with the current paths between the electrodes of each pair crossing each other at the selected body location. A phase shifter rhythmically changes the phase of the current in one of the current paths."
MY-142262-A,"DISCLOSED IS AN ELONGATED ABSORBENT ARTICLE INCLUDING A LIQUID ABSORBENT LAYER (4). IN A REGION WHERE THE LIQUID ABSORBENT LAYER (4) IS PRESENT, COMPRESSED GROOVES (11) ARE DISPOSEDTOEXTENDSYRNRNETRICALLYABOUTALONGITUDINALCENTERLINE (OY-OY), DEFINING A CENTRAL REGION (20) THEREBETWEEN AND SIDE REGIONS LATERALLY OUTSIDE THE CENTRAL REGION (20) AND ADJACENT THE COMPRESSED GROOVES (11). THE CENTRAL REGION (20) INCLUDES FRONT, INTERMEDIATE AND REAR CENTRAL REGIONS (20A, 20B, 20D). THE INTERMEDIATE CENTRAL REGION (20B) HAS A WIDENED PORTION IN WHICH THE SEPARATION DISTANCE IS LARGER THAN IN REGIONS POSITIONED FORWARD AND REARWARD THEREOF. STIFFNESS OF THE SIDE REGIONS IS LOWER IN PORTIONS LATERALLY OUTSIDE THE INTERMEDIATE CENTRAL REGION (20B) THAN IN PORTIONS LATERALLY OUTSIDE THE FRONT AND REAR CENTRAL REGIONS (20A, 20D)."
US-3914097-A,"A sheet guide and cooling apparatus for preventing curl in sheets bearing a developed image, the image being permanently fixed to the sheet by application of heat and pressure. The apparatus is positioned to have a flat thermally conductive surface establishing a path for the sheet, downstream of the fixing area, the path extending in a plane substantially coplanar with the plane of sheet travel in the fixing station. Vacuum means associated with the surface maintains successive incremental portions of a sheet in face-to-face contact with the flat surface as it is being guided for at least a predetermined period as the sheet moves along the path and furthermore, provides a flow of cooling air for the surface."
IN-2014DN07394-A,Magnetic encoder apparatus (2) is described that comprises a plurality of magnetic sensor elements (e.g. Hall sensors) for reading an associated magnetic scale (4; 10) that produces a periodically repeating magnetic pattern. The plurality of magnetic sensor elements produce a plurality of sensor signals and an analyser (7) is provided for analysing the plurality of sensor signals to provide a measure of the position of the magnetic sensor elements relative to the associated magnetic scale (4; 10). The analyser (7) is arranged to use the plurality of sensor signals to assess the period (60) of the periodically repeating magnetic pattern sensed by the plurality of magnetic sensor elements. In this manner the requirement to carefully match the period of the sensor elements with the periodically repeating magnetic pattern of the associated magnetic scale (4; 10) is avoided.
US-3724356-A,"The fire resistant air bar has high temperature resistant side rails for supporting the fire resistant ceiling tiles of a suspended ceiling, and for supporting an air plenum chamber; has high temperature resistant spacer bars located between the side rails with end tabs thereof extending through slots in the side rails to fasten thereto; has lower temperature melting spacers mounted on the

2025-01-23 23:19:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 47
2025-01-23 23:19:29 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:30 - root - INFO - SQL:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
Too long, hard cut:
publication_number,abstract_text
US-9444515-B2,"An 8.1 nJ/bit 2.4 GHz receiver with integrated digital baseband supporting Q-QPSK DSSS modulation compliant with the IEEE 802.15.4 standard is presented that targets short-range, Internet of Things applications (IoTs). The sensitivity of a wireless communication receiver in general trades with power consumption. This receiver exploits this tradeoff to achieve a total power consumption of 2.02 mW including ADCs and digital baseband processing, at a sensitivity of −52.5 dBm at 250 Kbps. The energy-efficiency of the radio frequency (RF) front-end alone is nearly two times better than the prior art. The receiver was fabricated in 65 nm CMOS with an area of 0.86 mm 2 ."
US-11194613-B2,"An exemplary client virtualization system implemented by a multi-access server receives a service request from an Internet of Things (“IoT”) device that is separate from and communicatively coupled to the multi-access server. In response to the service request, the client virtualization system instantiates a virtualized device management client configured to serve the IoT device and that is hosted on the multi-access server. The client virtualization system receives a device management message that is for the IoT device and that is from a centralized device management server. The client virtualization system then delivers the device management message to the IoT device. Corresponding methods and systems are also disclosed."
US-11194613-B2,"An exemplary client virtualization system implemented by a multi-access server receives a service request from an Internet of Things (“IoT”) device that is separate from and communicatively coupled to the multi-access server. In response to the service request, the client virtualization system instantiates a virtualized device management client configured to serve the IoT device and that is hosted on the multi-access server. The client virtualization system receives a device management message that is for the IoT device and that is from a centralized device management server. The client virtualization system then delivers the device management message to the IoT device. Corresponding methods and systems are also disclosed."
US-2020244539-A1,"Internet of Things (IoT) system and method of interfacing arbitrary non-network connected devices to wireless computer networks. The invention provides a configurable wireless communications module, in either fixed or removable formats, with wireless (e.g. WiFi) network connectivity. The invention uses at least one internal processor, which is configured to operate as a sandbox or virtual machine manner to isolate the code used to operate the arbitrary non-network connected device from the code used to operate the communications module."
US-2020244539-A1,"Internet of Things (IoT) system and method of interfacing arbitrary non-network connected devices to wireless computer networks. The invention provides a configurable wireless communications module, in either fixed or removable formats, with wireless (e.g. WiFi) network connectivity. The invention uses at least one internal processor, which is configured to operate as a sandbox or virtual machine manner to isolate the code used to operate the arbitrary non-network connected device from the code used to operate the communications module."
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-2022224518-A1,"This disclosure relates generally to method and system for secure IoT device onboarding using a blockchain network. Internet of Things (IoT) device onboarding is a challenging problem as it needs to be securely connected to its actual final owner, with minimal manual intervention. Onboarding provides provisioning the IoT devices with credentials for accessing a network resource and assigning appropriate permissions. The present disclosure establishes a mutual authentication between at least one IoT device from the one or more IoT devices and 

2025-01-23 23:19:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 23:19:31 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:32 - root - INFO - SQL:
SELECT DISTINCT
       TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
       TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND "filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
filing_year,filing_month
2017,01
2011,10
2022,10
2008,10
2018,05
2020,08
2015,12
2010,04
2013,08
2020,06
2009,03
2009,08
2020,03
2020,09
2022,08
2012,07
2017,05
2008,11
2017,11
2019,03
2013,04
2022,06
2022,07
2022,12
2022,04
2021,04
2011,03
2017,09
2016,08
2018,03
2022,02
2022,03
2013,10
2015,07
2012,12
2009,07
2008,09
2010,12
2009,09
2013,06
2017,02
2019,11
2017,03
2019,05
2009,10
2011,08
2012,03
2022,05
2016,10
2015,05
2013,03
2018,09
2020,05
2021,11
2019,04
2010,02
2014,07
2015,10
2012,09
2014,01
2012,10
2010,06
2015,11
2013,11
2014,11
2018,04
2009,01
2010,09
2018,12
2019,06
2009,12
2014,10
2018,10
2009,06
2018,02
2008,06
2011,01
2021,12
2016,09
2012,02
2016,06
2009,02
2010,08
2010,11
2011,04
2016,03
2021,06
2016,02
2014,12
2017,10
2013,05
2012,08
2020,11
2016,04
2012,11
2016,01
2019,02
2010,07
2014,08
2022,11

2025-01-23 23:19:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 47
2025-01-23 23:19:33 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:34 - root - INFO - SQL:
SELECT t."publication_number", ft.value::VARIANT:"text"::STRING AS "title_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."title_localized") ft,
     LATERAL FLATTEN(input => t."abstract_localized") fa
WHERE fa.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
publication_number,title_text
US-2018279332-A1,Apparatus and method for transmitting/receiving of data in a wireless communication system providing different services
US-2018279332-A1,Apparatus and method for transmitting/receiving of data in a wireless communication system providing different services
US-11175083-B2,Intelligent refrigeration compressor runtime schedule extraction
US-11175083-B2,Intelligent refrigeration compressor runtime schedule extraction
US-9444515-B2,Short-range zigbee compatible receiver with near-threshold digital baseband
US-11194613-B2,Methods and devices for virtualizing a device management client in a multi-access server separate from a device
US-11194613-B2,Methods and devices for virtualizing a device management client in a multi-access server separate from a device
US-10972474-B2,Logical zones for IoT devices
US-10972474-B2,Logical zones for IoT devices
US-10631359-B2,Discontinuous reception (DRX) in a device ready state
US-10631359-B2,Discontinuous reception (DRX) in a device ready state
US-11206611-B2,Method and apparatus for providing service in wireless communication system
US-11206611-B2,Method and apparatus for providing service in wireless communication system
US-2020244539-A1,Modularized control system to enable iot wireless network control and sensing of other devices
US-2020244539-A1,Modularized control system to enable iot wireless network control and sensing of other devices
US-2022224518-A1,METHOD AND SYSTEM FOR SECURE IoT DEVICE ONBOARDING USING A BLOCKCHAIN NETWORK
US-2022224518-A1,METHOD AND SYSTEM FOR SECURE IoT DEVICE ONBOARDING USING A BLOCKCHAIN NETWORK
US-11050495-B2,Electronic device including transceiver for calibrating I/Q imbalance in millimeter wave communication system and method of operating same
US-11050495-B2,Electronic device including transceiver for calibrating I/Q imbalance in millimeter wave communication system and method of operating same
US-11463519-B2,Method and apparatus for selecting a target edge application server in an edge computing environment
US-11463519-B2,Method and apparatus for selecting a target edge application server in an edge computing environment
US-2020186604-A1,Method and apparatus for controlling wireless communication for installing wireless internet in iot devices
US-2020186604-A1,Method and apparatus for controlling wireless communication for installing wireless internet in iot devices
US-2018102918-A1,Distributed multi-band wireless networking system
US-11250481-B2,Blockchain-based resource value evaluation methods and apparatus
US-11250481-B2,Blockchain-based resource value evaluation methods and apparatus
US-2022216992-A1,Systems and methods for enhanced internet of things digital certificate security
US-2022216992-A1,Systems and methods for enhanced internet of things digital certificate security
US-2021075635-A1,Automatic Device Orchestration and Configuration
US-2021075635-A1,Automatic Device Orchestration and Configuration
US-2020005806-A1,"Call quality improvement system, apparatus and method"
US-2020005806-A1,"Call quality improvement system, apparatus and method"
US-2023072026-A1,"Industrial internet of things for identifying and processing manufacturing problems, control methods, and storage medium"
US-2023072026-A1,"Industrial internet of things for identifying and processing manufacturing problems, control methods, and storage medium"
US-2024195750-A1,Dynamic channel allocation of narrowband internet of things and long-term evolution machine communcations
US-2024195750-A1,Dynamic channel allocation of narrowband internet of things and long-term evolution machine communcations
US-10595268-B2,Network slice-available area information acquisition method
US-10595268-B2,Network slice-available area information acquisition method
US-2019268851-A1,Continuously updated iot-based energy-supplier optimization
US-2019268851-A1,Continuously updated iot-based energy-supplier optimization
US-2017329602-A1,Method and apparatus for resource binding
US-11150676-B2,Clothes treating apparatus and method for operating the clothes treating apparatus
US-11150676-B2,Clothes treating apparatus and method for operating the clothes treating apparatus
US-2020335228-A1,"System, method and computer-readable storage medium realizing internet of things for smart city based on street lamps and lamp posts"
US-2020335228-A1,"System, method and computer-readable storage medium realizing internet of things for smart city based on street lamps and lamp posts"
US-2020328500-A1,Antenna module and electronic device including the same
US-2020328500-A1,Antenna module and electronic device including the same

2025-01-23 23:19:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 21
2025-01-23 23:19:35 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:35 - root - INFO - SQL:
SELECT TO_CHAR(TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "year",
       TO_CHAR(TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 100
Results:
year,month,num_publications
2015,04,1
2015,12,2
2017,03,1
2017,04,3
2018,02,2
2018,03,2
2018,04,2
2018,11,2
2019,08,2
2019,09,4
2019,11,2
2020,02,2
2020,04,4
2020,06,4
2020,07,2
2020,11,2
2021,07,2
2021,11,2
2022,03,2
2022,09,2
2022,12,2

2025-01-23 23:19:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 47
2025-01-23 23:19:37 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:37 - root - INFO - SQL:
SELECT t."publication_number", t."application_number"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
publication_number,application_number
US-2018279332-A1,US-201815934269-A
US-2018279332-A1,US-201815934269-A
US-11175083-B2,US-201816182895-A
US-11175083-B2,US-201816182895-A
US-10972474-B2,US-201715490170-A
US-10972474-B2,US-201715490170-A
US-10631359-B2,US-201515557418-A
US-10631359-B2,US-201515557418-A
US-11206611-B2,US-202016900128-A
US-11206611-B2,US-202016900128-A
US-2020005806-A1,US-201916564884-A
US-2020005806-A1,US-201916564884-A
US-11050495-B2,US-202016933190-A
US-11050495-B2,US-202016933190-A
US-11463519-B2,US-202117383268-A
US-11463519-B2,US-202117383268-A
US-2022224518-A1,US-202117528730-A
US-2022224518-A1,US-202117528730-A
US-2020186604-A1,US-201916680525-A
US-2020186604-A1,US-201916680525-A
US-2020328500-A1,US-202016844706-A
US-2020328500-A1,US-202016844706-A
US-2022216992-A1,US-202217706067-A
US-2022216992-A1,US-202217706067-A
US-2023072026-A1,US-202217933102-A
US-2023072026-A1,US-202217933102-A
US-2024195750-A1,US-202218080217-A
US-2024195750-A1,US-202218080217-A
US-2021075635-A1,US-202017099458-A
US-2021075635-A1,US-202017099458-A
US-9444515-B2,US-201514695387-A
US-11194613-B2,US-201916543281-A
US-11194613-B2,US-201916543281-A
US-2020244539-A1,US-202016845240-A
US-2020244539-A1,US-202016845240-A
US-10595268-B2,US-201815965314-A
US-10595268-B2,US-201815965314-A
US-2019268851-A1,US-201815907791-A
US-2019268851-A1,US-201815907791-A
US-11150676-B2,US-201916562246-A
US-11150676-B2,US-201916562246-A
US-2017329602-A1,US-201715496203-A
US-2020335228-A1,US-202016917822-A
US-2020335228-A1,US-202016917822-A
US-11250481-B2,US-202016780221-A
US-11250481-B2,US-202016780221-A
US-2018102918-A1,US-201715464195-A

2025-01-23 23:19:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-23 23:19:39 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:39 - root - INFO - SQL:
SELECT t."publication_number", t."filing_date", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
Too long, hard cut:
publication_number,filing_date,abstract_text
US-2023072026-A1,20220917,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the data of the product manufacturing problems; and the problem solving module is configured to determine problem processing data based on the problem type, and solve the problem based on the problem processing data."
US-2023072026-A1,20220917,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the data of the product manufacturing problems; and the problem solving module is configured to determine problem processing data based on the problem type, and solve the problem based on the problem processing data."
US-2024195750-A1,20221213,"Aspects provided herein provide methods, systems, and a non-transitory computer storage media storing computer-useable instructions for dynamic allocation of internet of things (IoT) device communications. The method begins with determining an amount of unallocated spectrum in a communications channel used by one or more devices attached to a node. Next, it is determined that the IoT device has requested an amount of spectrum from the node that is less than the amount of unallocated spectrum. At least a portion of the amount of unallocated spectrum is dynamically allocated to the IoT device."
US-2024195750-A1,20221213,"Aspects provided herein provide methods, systems, and a non-transitory computer storage media storing computer-useable instructions for dynamic allocation of internet of things (IoT) device communications. The method begins with determining an amount of unallocated spectrum in a communications channel used by one or more devices attached to a node. Next, it is determined that the IoT device has requested an amount of spectrum from the node that is less than the amount of unallocated spectrum. At least a portion of the amount of unallocated spectrum is dynamically allocated to the IoT device."
US-2017339510-A1,20170403,"Communication network architectures, systems and methods for supporting a network of mobile nodes. As a non-limiting example, various aspects of this disclosure provide communication network architectures, systems, and methods for supporting a dynamically configurable communication network comprising a complex array of both static and moving communication nodes (e.g., the Internet of moving things). More specifically, systems and methods for managing the routing and replication of data in the download direction in a network of moving things."
US-11175083-B2,20181107,Embodiments for implementing intelligent refrigeration compressor runtime schedule extraction in an Internet of Things (IoT) computing environment by a processor. Compressor runtime positions of a compressor may be determined according to a single phase signal taken from an energy meter. Performance and health status of the compressor may be established according to the one or more compressor runtime activities determined from the established nominal baseload classifier.
US-11175083-B2,20181107,Embodiments for implementing intelligent refrigeration compressor runtime schedule extraction in an Internet of Things (IoT) computing environment by a processor. Compressor runtime positions of a compressor may be determined according to a single phase signal taken from an energy meter. Performance and health status of the compressor may be established according to the one or more compressor runtime activities determined from the established nominal baseload classifier.
US-2018279332-A1,20180323,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart b

2025-01-23 23:19:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 28
2025-01-23 23:19:41 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:41 - root - INFO - SQL:
SELECT DISTINCT t."publication_number", t."filing_date"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
publication_number,filing_date
US-2020005806-A1,20190909
US-10595268-B2,20180427
US-10972474-B2,20170418
US-2020186604-A1,20191112
US-2017329602-A1,20170425
US-11250481-B2,20200203
US-11175083-B2,20181107
US-2017339510-A1,20170403
US-11194613-B2,20190816
US-11050495-B2,20200720
US-11206611-B2,20200612
US-2022224518-A1,20211117
US-2018279332-A1,20180323
US-2021075635-A1,20201116
US-2022216992-A1,20220328
US-2020244539-A1,20200410
US-2024195750-A1,20221213
US-2019268851-A1,20180228
US-2021067565-A1,20200416
US-2023072026-A1,20220917
US-2018102918-A1,20170320
US-2020335228-A1,20200630
US-10631359-B2,20151202
US-2024199405-A1,20221220
US-11150676-B2,20190905
US-9444515-B2,20150424
US-11463519-B2,20210722
US-2020328500-A1,20200409

2025-01-23 23:19:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 23:19:42 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:43 - root - INFO - SQL:
SELECT TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "year",
       TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "country_code" = 'US'
  AND TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND "filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 100
Results:
year,month,num_publications
2008,01,111
2008,02,130
2008,03,137
2008,04,125
2008,05,116
2008,06,121
2008,07,129
2008,08,118
2008,09,122
2008,10,134
2008,11,105
2008,12,135
2009,01,99
2009,02,96
2009,03,130
2009,04,116
2009,05,88
2009,06,96
2009,07,97
2009,08,100
2009,09,107
2009,10,91
2009,11,69
2009,12,109
2010,01,74
2010,02,70
2010,03,101
2010,04,70
2010,05,85
2010,06,82
2010,07,70
2010,08,70
2010,09,72
2010,10,78
2010,11,64
2010,12,67
2011,01,60
2011,02,65
2011,03,72
2011,04,57
2011,05,65
2011,06,74
2011,07,57
2011,08,56
2011,09,83
2011,10,48
2011,11,54
2011,12,68
2012,01,51
2012,02,42
2012,03,48
2012,04,50
2012,05,49
2012,06,50
2012,07,53
2012,08,45
2012,09,58
2012,10,47
2012,11,57
2012,12,65
2013,01,42
2013,02,50
2013,03,82
2013,04,58
2013,05,47
2013,06,56
2013,07,65
2013,08,52
2013,09,65
2013,10,54
2013,11,75
2013,12,90
2014,01,84
2014,02,71
2014,03,105
2014,04,66
2014,05,88
2014,06,95
2014,07,78
2014,08,73
2014,09,112
2014,10,107
2014,11,83
2014,12,119
2015,01,110
2015,02,102
2015,03,149
2015,04,101
2015,05,105
2015,06,109
2015,07,110
2015,08,114
2015,09,126
2015,10,123
2015,11,101
2015,12,143
2016,01,103
2016,02,135
2016,03,151
2016,04,142

2025-01-23 23:19:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:19:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:19:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:19:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-23 23:19:44 - snowflake.connector.connection - INFO - closed
2025-01-23 23:19:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:19:45 - root - INFO - SQL:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Results:
Too long, hard cut:
publication_number,abstract_text
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-11250481-B2,"A method for dynamically evaluating a resource value is described. Data encoding one or more parameters related to the resource value is accessed, where the one or more parameters are monitored by a plurality of sensors that form an Internet of Things (IoT) and then released by the IoT of the plurality of sensors on a blockchain network. At least one parameter from the data is compared with a predetermined threshold value or a predetermined threshold range. In response to determining that the at least one parameter has exceeded the predetermined threshold value or the predetermined threshold range, a calculation of the resource value is triggered according to evaluation logic described by a smart contract released on the blockchain network in association with the one or more parameters being monitored, such that a consensus is reached on the blockchain network regarding the resource value that has been calculated."
US-11250481-B2,"A method for dynamically evaluating a resource value is described. Data encoding one or more parameters related to the resource value is accessed, where the one or more parameters are monitored by a plurality of sensors that form an Internet of Things (IoT) and then released by the IoT of the plurality of sensors on a blockchain network. At least one parameter from the data is compared with a predetermined threshold value or a predetermined threshold range. In response to determining that the at least one parameter has exceeded the predetermined threshold value or the predetermined threshold range, a calculation of the resource value is triggered according to evaluation logic described by a smart contract released on the blockchain network in association with the one or more parameters being monitored, such that a consensus is reached on the blockchain network regarding the resource value that has been calculated."
US-2018102918-A1,"Disclosed is a way to expand the range of Internet of Things devices in a home, office, or structure to the range of a local WiFi network. This is accomplished by generating a network bridge for the devices using machine-to-machine protocols to communicate using the WiFi network backhaul channel. Transmissions in machine-to-machine protocol are tunneled through WiFi communications and extracted by the closest access point. Access points include radios for both WiFi and machine-to-machine protocols."
US-2023072026-A1,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the data of the product manufacturing problems; and the problem solving module is configured to determine problem processing data based on the problem type, and solve the problem based on the problem processing data."
US-2023072026-A1,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the da

2025-01-23 23:19:45 - root - INFO - itercount: 0
2025-01-23 23:19:45 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
DDL describes table information.
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
**Relevant Table:**

- `PATENTS.PATENTS.PUBLICATIONS`

**Relevant Columns and Potential Usage:**

- `"abstract_localized"`: Contains the abstract of the publication. We can search this column for the phrase 'internet of things'.
- `"filing_date"`: Used to extract the filing year and month (from 2008 to 2022).
- `"country_code"`: To filter for U.S. publications (`"country_code"` = 'US').
- `"publication_number"`: Identifies each publication.
- `"publication_date"`: May be used to compare or validate dates.
- `"application_number"`: Additional identifier for publications.
- `"title_localized"`: Might provide additional context or be useful for verification.

**Conditions That May Be Used:**

- Filtering abstracts that include 'internet of things'.
- Limiting results to U.S. publications (`"country_code"` = 'US').
- Filtering filing dates between 2008 and 2022.
- Extracting year and month from the filing date.
- Handling JSON or VARIANT data types in `"abstract_localized"`.

---

**SQL Queries:**

1. **Retrieve Publications with 'Internet of Things' in Abstract**

   ```sql
   SELECT "publication_number", "abstract_localized"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "abstract_localized"::STRING ILIKE '%internet of things%'
   LIMIT 100;
   ```

2. **Filter U.S. Publications Filed Between 2008 and 2022**

   ```sql
   SELECT "publication_number", "filing_date", "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
   ```

3. **Extract Year and Month from Filing Date**

   ```sql
   SELECT "publication_number",
          TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
          TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 100;
   ```

4. **Count of Publications per Month Between 2008 and 2022**

   ```sql
   SELECT TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY-MM') AS "year_month",
          COUNT(*) AS "num_publications"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "filing_date" BETWEEN 20080101 AND 20221231
   GROUP BY "year_month"
   ORDER BY "year_month"
   LIMIT 100;
   ```

5. **Publications with 'Internet of Things' in Abstract and U.S. Country Code**

   ```sql
   SELECT "publication_number", "abstract_localized", "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "abstract_localized"::STRING ILIKE '%internet of things%'
     AND "country_code" = 'US'
   LIMIT 100;
   ```

6. **Flatten 'abstract_localized' to Access Text**

   ```sql
   SELECT t."publication_number",
          f.value::VARIANT:"text"::STRING AS "abstract_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."abstract_localized") f
   LIMIT 100;
   ```

7. **Filter Publications Using Flattened 'abstract_localized' Text**

   ```sql
   SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."abstract_localized") f
   WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
     AND t."country_code" = 'US'
     AND t."filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
   ```

8. **List Distinct Filing Years and Months**

   ```sql
   SELECT DISTINCT
          TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
          TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
   ```

9. **Retrieve Titles of Relevant Publications**

   ```sql
   SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "title_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."title_localized") f
   WHERE t."abstract_localized"::STRING ILIKE '%internet of things%'
     AND t."country_code" = 'US'
     AND t."filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
   ```

10. **Count Publications per Month with 'Internet of Things'**

    ```sql
    SELECT TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYY')) AS "year",
           TO_CHAR(TO_DATE("filing_date"::STRING, 'MM')) AS "month",
           COUNT(*) AS "num_publications"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
      AND t."country_code" = 'US'
      AND t."filing_date" BETWEEN 20080101 AND 20221231
    GROUP BY "year", "month"
    ORDER BY "year", "month"
    LIMIT 100;
    ```

11. **Retrieve Application Numbers for Relevant Publications**

    ```sql
    SELECT "publication_number", "application_number"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE "abstract_localized"::STRING ILIKE '%internet of things%'
      AND "country_code" = 'US'
      AND "filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 100;
    ```

12. **Publications with Specific Filing Date and Abstract Matching**

    ```sql
    SELECT t."publication_number", t."filing_date", f.value::VARIANT:"text"::STRING AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
      AND t."country_code" = 'US'
      AND t."filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 100;
    ```

13. **Distinct Publications by Filing Date**

    ```sql
    SELECT DISTINCT t."publication_number", t."filing_date"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
      AND t."country_code" = 'US'
      AND t."filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 100;
    ```

14. **Publications Grouped by Year and Month**

    ```sql
    SELECT TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYY')) AS "year",
           TO_CHAR(TO_DATE("filing_date"::STRING, 'MM')) AS "month",
           COUNT(*) AS "num_publications"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE "country_code" = 'US'
      AND "filing_date" BETWEEN 20080101 AND 20221231
    GROUP BY "year", "month"
    ORDER BY "year", "month"
    LIMIT 100;
    ```

15. **Publications with Abstract Matching Using Fuzzy Search**

    ```sql
    SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%things%'
      AND t."country_code" = 'US'
      AND t."filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 100;
    ```

*Note: All column names are enclosed in double quotations as per Snowflake SQL syntax. The queries use various techniques such as flattening JSON structures, extracting date components, and applying string matching with `ILIKE` and wildcards `%` to handle potential variations in the text.*Query:
SELECT "publication_number", "abstract_localized"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "abstract_localized"::STRING ILIKE '%internet of things%'
   LIMIT 100;
Answer:
Too long, hard cut:
publication_number,abstract_localized
WO-2020068499-A1,"[
  {
    ""language"": ""en"",
    ""text"": ""Systems and methods for managing an additive manufacturing production line include an additive manufacturing machine having a first sensor and an auxiliary equipment having a second sensor. A server includes security protocols, a workflow module, an industrial Internet of things (IIoT) module and a machine learning module. The workflow module, IIoT module, machine learning module, additive manufacturing machine and auxiliary equipment are in communication with each other using the security protocols. The machine learning module processes feedback from the first sensor and the second sensor to control operation of the additive manufacturing machine through the workflow module and the IIoT module."",
    ""truncated"": false
  },
  {
    ""language"": ""en"",
    ""text"": ""Systems and methods for managing an additive manufacturing production line include an additive manufacturing machine having a first sensor and an auxiliary equipment having a second sensor. A server includes security protocols, a workflow module, an industrial Internet of things (IIoT) module and a machine learning module. The workflow module, IIoT module, machine learning module, additive manufacturing machine and auxiliary equipment are in communication with each other using the security protocols. The machine learning module processes feedback from the first sensor and the second sensor to control operation of the additive manufacturing machine through the workflow module and the IIoT module."",
    ""truncated"": false
  },
  {
    ""language"": ""fr"",
    ""text"": ""Selon l&#39;invention, des systèmes et des procédés de gestion d&#39;une chaîne de production de fabrication additive comprennent une machine de fabrication additive ayant un premier capteur et un équipement auxiliaire ayant un second capteur. Un serveur comprend des protocoles de sécurité, un module de flux de travail, un module Internet des objets industriel (IIoT) et un module d&#39;apprentissage machine. Le module de flux de travail, le module IIoT, le module d&#39;apprentissage machine, la machine de fabrication additive et l&#39;équipement auxiliaire sont en communication les uns avec les autres à l&#39;aide des protocoles de sécurité. Le module d&#39;apprentissage machine traite une rétroaction provenant du premier capteur et du second capteur pour commander le fonctionnement de la machine de fabrication additive par l&#39;intermédiaire du module de flux de travail et du module IIoT."",
    ""truncated"": false
  },
  {
    ""language"": ""fr"",
    ""text"": ""Selon l&#39;invention, des systèmes et des procédés de gestion d&#39;une chaîne de production de fabrication additive comprennent une machine de fabrication additive ayant un premier capteur et un équipement auxiliaire ayant un second capteur. Un serveur comprend des protocoles de sécurité, un module de flux de travail, un module Internet des objets industriel (IIoT) et un module d&#39;apprentissage machine. Le module de flux de travail, le module IIoT, le module d&#39;apprentissage machine, la machine de fabrication additive et l&#39;équipement auxiliaire sont en communication les uns avec les autres à l&#39;aide des protocoles de sécurité. Le module d&#39;apprentissage machine traite une rétroaction provenant du premier capteur et du second capteur pour commander le fonctionnement de la machine de fabrication additive par l&#39;intermédiaire du module de flux de travail et du module IIoT."",
    ""truncated"": false
  }
]"
KR-20170058339-A,"[
  {
    ""language"": ""en"",
    ""text"": ""Provided is an education system for Internet of things. The system for Internet of things according to an embodiment of the present invention includes a computer having software capable of coding a control program for controlling the operation of a hardware device, wherein the computer is connected to the Internet, transmits and receives data to/from an external device via the Internet, and transfers the data received through the Internet to the software to code the control program; and a hardware device operating based on the control program, wherein the hardware device which includes a plurality of input and output ports, a main board capable of communicating with the computer, and an input module or an output module connected to the main board through the input and output ports. The effectiveness of education can be enhanced because it is possible to learn the operation principle of IOT by connecting home appliances or smart devices used in real life with the educational system, not simply learning with the given public materials."",
    ""truncated"": false
  },
  {
    ""language"": ""ko"",
    ""text"": ""사물 인터넷 교육용 시스템이 제공된다. 본 발명의 일 실시예에 따른 사물 인터넷 교육용 시스템은, 하드웨어 장치의 작동을 제어하기 위한 제어 프로그램을 코딩할 수 있는 소프트웨어를 구비하는 컴퓨터로서, 상기 컴퓨터는 인터넷에 연결되고 인터넷을 통해 외부 디바이스와 데이터를 송수신하고, 인터넷을 통해 수신된 데이터는 상기 소프트웨어에 전달되어 상기 제어 프로그램을 코딩할 때 이
Query:
SELECT "publication_number", "filing_date", "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "filing_date" BETWEEN 20080101 AND 20221231
   LIMIT 100;
Answer:
publication_number,filing_date,country_code
US-2019196084-A1,20171222,US
US-2018141325-A1,20171228,US
US-2018187834-A1,20180102,US
US-2018204863-A1,20180116,US
US-2019223595-A1,20180123,US
US-2018155335-A1,20180201,US
US-2018233997-A1,20180209,US
US-2018337677-A1,20180215,US
US-2019266471-A1,20180223,US
US-2019267026-A1,20180227,US
US-2018254937-A1,20180301,US
US-2018277952-A1,20180321,US
US-2018211887-A1,20180322,US
US-2018277686-A1,20180323,US
US-2018279332-A1,20180323,US
US-2019297963-A1,20180402,US
US-2018342366-A1,20180403,US
US-2018239126-A1,20180424,US
US-2019289218-A1,20180426,US
US-2019335520-A1,20180427,US
US-2019140216-A1,20180501,US
US-2018357938-A1,20180508,US
US-2018330780-A1,20180511,US
US-2018370418-A1,20180521,US
US-2018286309-A1,20180604,US
US-2020057100-A1,20180820,US
US-2018294519-A1,20180605,US
US-2018291661-A1,20180611,US
US-2018293364-A1,20180611,US
US-2019157285-A1,20180622,US
US-2019003958-A1,20180626,US
US-2018306523-A1,20180628,US
US-2020015412-A1,20180710,US
US-2019028639-A1,20180716,US
US-2019026669-A1,20180717,US
US-2018327034-A1,20180726,US
US-2018365575-A1,20180730,US
US-2019010977-A1,20161226,US
US-2021194641-A1,20171205,US
US-2021211830-A1,20170214,US
US-2019089625-A1,20170331,US
US-2019131531-A1,20170407,US
US-2020215441-A1,20160711,US
US-2019377516-A1,20180810,US
US-2019058291-A1,20180817,US
US-2020061221-A1,20180821,US
US-2018367810-A1,20180823,US
US-2020065758-A1,20180824,US
US-2020075499-A1,20180828,US
US-2020070846-A1,20180905,US
US-2019021138-A1,20180911,US
US-2019289695-A1,20180912,US
US-2019258410-A1,20180920,US
US-2019159884-A1,20180927,US
US-2020105090-A1,20181002,US
US-2020111592-A1,20181008,US
US-2020072916-A1,20181207,US
US-2020180517-A1,20181210,US
US-2020194059-A1,20181213,US
US-2019186567-A1,20181213,US
US-2020162643-A1,20181214,US
US-2019200474-A1,20181219,US
US-2019231855-A1,20181221,US
US-2019140614-A1,20181228,US
US-2020067339-A1,20190102,US
US-2020217420-A1,20190103,US
US-2019149296-A1,20190116,US
US-2019313538-A1,20190214,US
US-2019177896-A1,20190215,US
US-2020269134-A1,20190221,US
US-2019370625-A1,20190227,US
US-2019278346-A1,20190308,US
US-2019156634-A1,20170515,US
US-2019189294-A1,20160519,US
US-2019361208-A1,20170523,US
US-2019146513-A1,20170628,US
US-2019240122-A1,20170524,US
US-2019237797-A1,20170621,US
US-2021219627-A1,20170628,US
US-2020156909-A1,20170419,US
US-2019172610-A1,20180620,US
US-2020179906-A1,20160912,US
US-2019320367-A1,20170929,US
US-2019365512-A1,20180712,US
US-2020040810-A1,20161011,US
US-2020063085-A1,20171103,US
US-2019262825-A1,20171116,US
US-2020295406-A1,20190314,US
US-2020311734-A1,20190326,US
US-2019307948-A1,20190405,US
US-2020004364-A1,20190405,US
US-2019293875-A1,20190408,US
US-2019319476-A1,20190411,US
US-2019236670-A1,20190412,US
US-2019322036-A1,20190415,US
US-2020334774-A1,20190417,US
US-2019332731-A1,20190417,US
US-2019324130-A1,20190419,US
US-2020070883-A1,20190423,US
US-2020079767-A1,20190425,US
Query:
SELECT "publication_number",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
       TO_CHAR(TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "filing_date" IS NOT NULL AND "filing_date" <> 0
LIMIT 100;
Answer:
publication_number,filing_year,filing_month
IE-20080323-A1,2008,04
IT-BG950014-A1,1995,04
IT-FI930220-A1,1993,11
IT-GE990118-A1,1999,09
IT-MI910192-A1,1991,01
IT-MI920940-A1,1992,04
IT-MI952143-A1,1995,10
IT-MI960882-A1,1996,05
IT-PR920011-A1,1992,03
IT-PR990091-A1,1999,12
IT-RM910081-A1,1991,02
IT-RM910858-A1,1991,11
IT-RM920488-A1,1992,06
IT-RM950368-A1,1995,05
IT-RM990366-A1,1999,06
IT-TO910051-A1,1991,01
IT-TO910587-A1,1991,07
IT-TO920549-A1,1992,07
IT-TO960759-A1,1996,09
IT-TO960910-A1,1996,11
IT-TO990769-A1,1999,09
NO-20121361-A1,2012,11
NO-20160990-A1,2016,06
NO-20172049-A1,2017,12
NO-20190919-A1,2019,07
NO-20230234-A1,2020,12
PL-195695-A1,1977,01
PL-204627-A1,1978,02
PL-227073-A1,1980,10
PL-236386-A1,1982,05
PL-244191-A1,1983,10
PL-244469-A1,1983,11
PL-280671-A1,1989,07
PL-282155-A1,1989,11
PL-288538-A1,1990,12
PL-308766-A1,1993,11
PL-326482-A1,1998,05
PL-330412-A1,1997,05
PL-330975-A1,1999,01
PL-337636-A1,1999,12
PL-361095-A1,2001,10
PL-363291-A1,2003,11
PL-364009-A1,2003,12
PL-376372-A1,2003,08
PL-382925-A1,2007,07
PL-383378-A1,2007,09
PL-385077-A1,2008,04
PL-397406-A1,2011,12
PL-399855-A1,2012,07
PL-408741-A1,2014,07
PL-412909-A1,2015,06
PL-425402-A1,2018,04
PL-435587-A1,2020,10
US-2006229833-A1,2005,04
US-2005185880-A1,2005,04
US-2005177854-A1,2005,04
US-2009015570-A1,2008,04
US-2006235936-A1,2005,04
US-2006235799-A1,2005,04
US-2005272646-A1,2005,04
US-2005288596-A1,2005,04
US-2008304526-A1,2008,04
US-2003107059-A1,2002,03
US-2003002051-A1,2002,04
US-2005194166-A1,2005,05
US-2009284890-A1,2008,05
US-2005258052-A1,2005,05
US-2005216705-A1,2005,05
US-2008306051-A1,2008,06
US-2005227077-A1,2005,05
US-2008303670-A1,2008,06
US-2002142896-A1,2002,05
US-2009002100-A1,2008,06
US-2003137437-A1,2002,05
US-2009318082-A1,2008,06
US-2005289407-A1,2005,06
US-2006062466-A1,2005,06
US-2005238497-A1,2005,06
US-2009318123-A1,2006,12
US-2002185597-A1,2002,05
US-2007027605-A1,2005,07
US-2002193157-A1,2002,06
US-2003225975-A1,2002,06
US-2009039487-A1,2008,07
US-2009011281-A1,2008,07
US-2007003640-A1,2005,06
US-2005244602-A1,2005,07
US-2003068429-A1,2001,02
US-2010028040-A1,2008,07
US-2007029404-A1,2005,07
US-2006021877-A1,2005,07
US-2008307919-A1,2008,08
US-2003007483-A1,2002,07
US-2003039048-A1,2002,07
US-2003036156-A1,2002,07
US-2006173445-A1,2005,07
US-2007023586-A1,2005,07
US-2010042129-A1,2008,08
US-2006061254-A1,2005,07
US-2007025944-A1,2005,08
Query:
SELECT TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY-MM') AS "year_month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND "filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year_month"
ORDER BY "year_month"
LIMIT 100
Answer:
year_month,num_publications
2008-01,614
2008-02,692
2008-03,867
2008-04,791
2008-05,676
2008-06,798
2008-07,816
2008-08,729
2008-09,792
2008-10,814
2008-11,819
2008-12,1036
2009-01,609
2009-02,663
2009-03,868
2009-04,728
2009-05,714
2009-06,858
2009-07,743
2009-08,692
2009-09,843
2009-10,757
2009-11,787
2009-12,991
2010-01,577
2010-02,636
2010-03,844
2010-04,697
2010-05,716
2010-06,861
2010-07,781
2010-08,762
2010-09,874
2010-10,764
2010-11,872
2010-12,1131
2011-01,659
2011-02,586
2011-03,864
2011-04,731
2011-05,743
2011-06,834
2011-07,745
2011-08,782
2011-09,915
2011-10,783
2011-11,903
2011-12,1169
2012-01,621
2012-02,722
2012-03,949
2012-04,776
2012-05,882
2012-06,897
2012-07,914
2012-08,868
2012-09,977
2012-10,959
2012-11,1067
2012-12,1319
2013-01,828
2013-02,728
2013-03,1107
2013-04,965
2013-05,1022
2013-06,1104
2013-07,1180
2013-08,1091
2013-09,1211
2013-10,1100
2013-11,1385
2013-12,1672
2014-01,1008
2014-02,840
2014-03,1383
2014-04,1102
2014-05,1128
2014-06,1266
2014-07,1295
2014-08,1153
2014-09,1379
2014-10,1383
2014-11,1522
2014-12,2134
2015-01,1183
2015-02,1043
2015-03,1395
2015-04,1373
2015-05,1306
2015-06,1528
2015-07,1463
2015-08,1403
2015-09,1528
2015-10,1425
2015-11,1791
2015-12,2425
2016-01,1418
2016-02,1155
2016-03,1821
2016-04,1647
Query:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text", t."country_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
LIMIT 100
Answer:
Too long, hard cut:
publication_number,abstract_text,country_code
US-2019268851-A1,"An energy-usage management system continuously monitors energy usage of energy-consuming Internet of Things devices by streaming time-stamped usage data from sensors embedded into the devices. The system infers from the streamed data time-dependent usage patterns for each device. Further meaning is ascribed to these patterns by interpreting them in light of contextual information retrieved from external data sources. The system then predicts each device&#39;s future energy usage as a function of the previous-usage patterns and further refines those predictions to account for environmental changes that will occur if the energy consumer moves to a new location. The system computes total energy costs for the devices for each candidate energy supplier or service plan at the consumer&#39;s final location, selects an optimal candidate that offers the lowest cost, and automatically switches the devices&#39; energy source to the optimal candidate.",US
US-2019268851-A1,"An energy-usage management system continuously monitors energy usage of energy-consuming Internet of Things devices by streaming time-stamped usage data from sensors embedded into the devices. The system infers from the streamed data time-dependent usage patterns for each device. Further meaning is ascribed to these patterns by interpreting them in light of contextual information retrieved from external data sources. The system then predicts each device&#39;s future energy usage as a function of the previous-usage patterns and further refines those predictions to account for environmental changes that will occur if the energy consumer moves to a new location. The system computes total energy costs for the devices for each candidate energy supplier or service plan at the consumer&#39;s final location, selects an optimal candidate that offers the lowest cost, and automatically switches the devices&#39; energy source to the optimal candidate.",US
US-2024204905-A1,"In a system, apparatus, method, and non-transitory computer readable medium related to a New Radio (NR) scheme for managing eavesdroppers of Internet of Things (IoT) devices, a network node may be caused to determine a jamming signal configuration associated with at least one IoT device, the jamming signal configuration including jamming signal parameters, and transmit a jamming signal based on the jamming signal parameters, the jamming signal being transmitted at a time corresponding to a transmission by the at least one IoT device.",US
US-2024204905-A1,"In a system, apparatus, method, and non-transitory computer readable medium related to a New Radio (NR) scheme for managing eavesdroppers of Internet of Things (IoT) devices, a network node may be caused to determine a jamming signal configuration associated with at least one IoT device, the jamming signal configuration including jamming signal parameters, and transmit a jamming signal based on the jamming signal parameters, the jamming signal being transmitted at a time corresponding to a transmission by the at least one IoT device.",US
US-10595268-B2,"The present disclosure relates to a communication scheme and system for converging a 5th generation (5G) communication system for supporting a data rate higher than that of a 4th generation (4G) system with an internet of things (IoT) technology. The present disclosure is applicable to intelligent services (e.g., smart homes, smart buildings, smart cities, smart cars, connected cars, health care, digital education, retails, and security and safety-related services) based on the 5G communication technology and the IoT-related technology. The present disclosure discloses operation methods of a terminal and a network for facilitating a 5G terminal registration procedure in a wireless communication system.",US
US-10595268-B2,"The present disclosure relates to a communication scheme and system for converging a 5 th  generation (5G) communication system for supporting a data rate higher than that of a 4 th  generation (4G) system with an internet of things (IoT) technology. The present disclosure is applicable to intelligent services (e.g., smart homes, smart buildings, smart cities, smart cars, connected cars, health care, digital education, retails, and security and safety-related services) based on the 5G communication technology and the IoT-related technology. The present disclosure discloses operation methods of a terminal and a network for facilitating a 5G terminal registration procedure in a wireless communication system.",US
US-2018102918-A1,"Disclosed is a way to expand the range of Internet of Things devices in a home, office, or structure to the range of a local WiFi network. This is accomplished by generating a network bridge for the devices using machine-to-machine protocols to communicate using the WiFi network backhaul channel. Transmissions in machine-to-machine protocol are tunneled through WiFi communications and extr
Query:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
LIMIT 100
Answer:
Too long, hard cut:
publication_number,abstract_text
US-3929068-A,A stencil is formed from a sheet of substantially paintimpervious material and has a design applied thereto by cuts which extend through the sheet. To permit the stencil to be secured in position to determine the exact location of a design to be painted one surface of the sheet has applied thereto a coating of a water-soluble pressure-sensitive adhesive. The stencil is flexible and can be readily peeled from a surface to which it has been adhered.
US-3891834-A,"A cooling curve computer and computation process for detecting the liquidus and solidus temperatures of a poured sample of iron alloy or other metal alloy and for computing, using electrical signals representative of the magnitudes of the liquidus and solidus temperatures, the percentage or equivalent percentage of one or more constituents of the sample. The computer includes means for generating a first electrical signal proportional to the temperature of the sample as it cools. First circuit means, supplied with the first electrical signal, are provided for detecting the liquidus and solidus temperatures of the sample. Second circuit means are utilized to store the magnitudes of the first electrical signal at the times of occurrence of the liquidus and solidus temperatures in the sample. Also, third circuit means are provided for generating a second electrical signal representative of the percentage or the equivalent percentage of one or more constituents of the sample. The third circuit means utilizes the stored magnitudes of the first electrical signal in the generation of the second electrical signal."
US-3895639-A,"An electrotherapeutic apparatus for producing a beat or interference frequency at a selected body location comprises two pairs of electrodes connected to the body. Alternating current is supplied to each pair of electrodes from the two outputs of an oscillator, with the current paths between the electrodes of each pair crossing each other at the selected body location. A phase shifter rhythmically changes the phase of the current in one of the current paths."
MY-142262-A,"DISCLOSED IS AN ELONGATED ABSORBENT ARTICLE INCLUDING A LIQUID ABSORBENT LAYER (4). IN A REGION WHERE THE LIQUID ABSORBENT LAYER (4) IS PRESENT, COMPRESSED GROOVES (11) ARE DISPOSEDTOEXTENDSYRNRNETRICALLYABOUTALONGITUDINALCENTERLINE (OY-OY), DEFINING A CENTRAL REGION (20) THEREBETWEEN AND SIDE REGIONS LATERALLY OUTSIDE THE CENTRAL REGION (20) AND ADJACENT THE COMPRESSED GROOVES (11). THE CENTRAL REGION (20) INCLUDES FRONT, INTERMEDIATE AND REAR CENTRAL REGIONS (20A, 20B, 20D). THE INTERMEDIATE CENTRAL REGION (20B) HAS A WIDENED PORTION IN WHICH THE SEPARATION DISTANCE IS LARGER THAN IN REGIONS POSITIONED FORWARD AND REARWARD THEREOF. STIFFNESS OF THE SIDE REGIONS IS LOWER IN PORTIONS LATERALLY OUTSIDE THE INTERMEDIATE CENTRAL REGION (20B) THAN IN PORTIONS LATERALLY OUTSIDE THE FRONT AND REAR CENTRAL REGIONS (20A, 20D)."
US-3914097-A,"A sheet guide and cooling apparatus for preventing curl in sheets bearing a developed image, the image being permanently fixed to the sheet by application of heat and pressure. The apparatus is positioned to have a flat thermally conductive surface establishing a path for the sheet, downstream of the fixing area, the path extending in a plane substantially coplanar with the plane of sheet travel in the fixing station. Vacuum means associated with the surface maintains successive incremental portions of a sheet in face-to-face contact with the flat surface as it is being guided for at least a predetermined period as the sheet moves along the path and furthermore, provides a flow of cooling air for the surface."
IN-2014DN07394-A,Magnetic encoder apparatus (2) is described that comprises a plurality of magnetic sensor elements (e.g. Hall sensors) for reading an associated magnetic scale (4; 10) that produces a periodically repeating magnetic pattern. The plurality of magnetic sensor elements produce a plurality of sensor signals and an analyser (7) is provided for analysing the plurality of sensor signals to provide a measure of the position of the magnetic sensor elements relative to the associated magnetic scale (4; 10). The analyser (7) is arranged to use the plurality of sensor signals to assess the period (60) of the periodically repeating magnetic pattern sensed by the plurality of magnetic sensor elements. In this manner the requirement to carefully match the period of the sensor elements with the periodically repeating magnetic pattern of the associated magnetic scale (4; 10) is avoided.
US-3724356-A,"The fire resistant air bar has high temperature resistant side rails for supporting the fire resistant ceiling tiles of a suspended ceiling, and for supporting an air plenum chamber; has high temperature resistant spacer bars located between the side rails with end tabs thereof extending through slots in the side rails to fasten thereto; has lower temperature melting spacers mounted on the
Query:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
Too long, hard cut:
publication_number,abstract_text
US-9444515-B2,"An 8.1 nJ/bit 2.4 GHz receiver with integrated digital baseband supporting Q-QPSK DSSS modulation compliant with the IEEE 802.15.4 standard is presented that targets short-range, Internet of Things applications (IoTs). The sensitivity of a wireless communication receiver in general trades with power consumption. This receiver exploits this tradeoff to achieve a total power consumption of 2.02 mW including ADCs and digital baseband processing, at a sensitivity of −52.5 dBm at 250 Kbps. The energy-efficiency of the radio frequency (RF) front-end alone is nearly two times better than the prior art. The receiver was fabricated in 65 nm CMOS with an area of 0.86 mm 2 ."
US-11194613-B2,"An exemplary client virtualization system implemented by a multi-access server receives a service request from an Internet of Things (“IoT”) device that is separate from and communicatively coupled to the multi-access server. In response to the service request, the client virtualization system instantiates a virtualized device management client configured to serve the IoT device and that is hosted on the multi-access server. The client virtualization system receives a device management message that is for the IoT device and that is from a centralized device management server. The client virtualization system then delivers the device management message to the IoT device. Corresponding methods and systems are also disclosed."
US-11194613-B2,"An exemplary client virtualization system implemented by a multi-access server receives a service request from an Internet of Things (“IoT”) device that is separate from and communicatively coupled to the multi-access server. In response to the service request, the client virtualization system instantiates a virtualized device management client configured to serve the IoT device and that is hosted on the multi-access server. The client virtualization system receives a device management message that is for the IoT device and that is from a centralized device management server. The client virtualization system then delivers the device management message to the IoT device. Corresponding methods and systems are also disclosed."
US-2020244539-A1,"Internet of Things (IoT) system and method of interfacing arbitrary non-network connected devices to wireless computer networks. The invention provides a configurable wireless communications module, in either fixed or removable formats, with wireless (e.g. WiFi) network connectivity. The invention uses at least one internal processor, which is configured to operate as a sandbox or virtual machine manner to isolate the code used to operate the arbitrary non-network connected device from the code used to operate the communications module."
US-2020244539-A1,"Internet of Things (IoT) system and method of interfacing arbitrary non-network connected devices to wireless computer networks. The invention provides a configurable wireless communications module, in either fixed or removable formats, with wireless (e.g. WiFi) network connectivity. The invention uses at least one internal processor, which is configured to operate as a sandbox or virtual machine manner to isolate the code used to operate the arbitrary non-network connected device from the code used to operate the communications module."
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-2022224518-A1,"This disclosure relates generally to method and system for secure IoT device onboarding using a blockchain network. Internet of Things (IoT) device onboarding is a challenging problem as it needs to be securely connected to its actual final owner, with minimal manual intervention. Onboarding provides provisioning the IoT devices with credentials for accessing a network resource and assigning appropriate permissions. The present disclosure establishes a mutual authentication between at least one IoT device from the one or more IoT devices and 
Query:
SELECT DISTINCT
       TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "filing_year",
       TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "filing_month"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND "filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
filing_year,filing_month
2017,01
2011,10
2022,10
2008,10
2018,05
2020,08
2015,12
2010,04
2013,08
2020,06
2009,03
2009,08
2020,03
2020,09
2022,08
2012,07
2017,05
2008,11
2017,11
2019,03
2013,04
2022,06
2022,07
2022,12
2022,04
2021,04
2011,03
2017,09
2016,08
2018,03
2022,02
2022,03
2013,10
2015,07
2012,12
2009,07
2008,09
2010,12
2009,09
2013,06
2017,02
2019,11
2017,03
2019,05
2009,10
2011,08
2012,03
2022,05
2016,10
2015,05
2013,03
2018,09
2020,05
2021,11
2019,04
2010,02
2014,07
2015,10
2012,09
2014,01
2012,10
2010,06
2015,11
2013,11
2014,11
2018,04
2009,01
2010,09
2018,12
2019,06
2009,12
2014,10
2018,10
2009,06
2018,02
2008,06
2011,01
2021,12
2016,09
2012,02
2016,06
2009,02
2010,08
2010,11
2011,04
2016,03
2021,06
2016,02
2014,12
2017,10
2013,05
2012,08
2020,11
2016,04
2012,11
2016,01
2019,02
2010,07
2014,08
2022,11
Query:
SELECT t."publication_number", ft.value::VARIANT:"text"::STRING AS "title_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."title_localized") ft,
     LATERAL FLATTEN(input => t."abstract_localized") fa
WHERE fa.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
publication_number,title_text
US-2018279332-A1,Apparatus and method for transmitting/receiving of data in a wireless communication system providing different services
US-2018279332-A1,Apparatus and method for transmitting/receiving of data in a wireless communication system providing different services
US-11175083-B2,Intelligent refrigeration compressor runtime schedule extraction
US-11175083-B2,Intelligent refrigeration compressor runtime schedule extraction
US-9444515-B2,Short-range zigbee compatible receiver with near-threshold digital baseband
US-11194613-B2,Methods and devices for virtualizing a device management client in a multi-access server separate from a device
US-11194613-B2,Methods and devices for virtualizing a device management client in a multi-access server separate from a device
US-10972474-B2,Logical zones for IoT devices
US-10972474-B2,Logical zones for IoT devices
US-10631359-B2,Discontinuous reception (DRX) in a device ready state
US-10631359-B2,Discontinuous reception (DRX) in a device ready state
US-11206611-B2,Method and apparatus for providing service in wireless communication system
US-11206611-B2,Method and apparatus for providing service in wireless communication system
US-2020244539-A1,Modularized control system to enable iot wireless network control and sensing of other devices
US-2020244539-A1,Modularized control system to enable iot wireless network control and sensing of other devices
US-2022224518-A1,METHOD AND SYSTEM FOR SECURE IoT DEVICE ONBOARDING USING A BLOCKCHAIN NETWORK
US-2022224518-A1,METHOD AND SYSTEM FOR SECURE IoT DEVICE ONBOARDING USING A BLOCKCHAIN NETWORK
US-11050495-B2,Electronic device including transceiver for calibrating I/Q imbalance in millimeter wave communication system and method of operating same
US-11050495-B2,Electronic device including transceiver for calibrating I/Q imbalance in millimeter wave communication system and method of operating same
US-11463519-B2,Method and apparatus for selecting a target edge application server in an edge computing environment
US-11463519-B2,Method and apparatus for selecting a target edge application server in an edge computing environment
US-2020186604-A1,Method and apparatus for controlling wireless communication for installing wireless internet in iot devices
US-2020186604-A1,Method and apparatus for controlling wireless communication for installing wireless internet in iot devices
US-2018102918-A1,Distributed multi-band wireless networking system
US-11250481-B2,Blockchain-based resource value evaluation methods and apparatus
US-11250481-B2,Blockchain-based resource value evaluation methods and apparatus
US-2022216992-A1,Systems and methods for enhanced internet of things digital certificate security
US-2022216992-A1,Systems and methods for enhanced internet of things digital certificate security
US-2021075635-A1,Automatic Device Orchestration and Configuration
US-2021075635-A1,Automatic Device Orchestration and Configuration
US-2020005806-A1,"Call quality improvement system, apparatus and method"
US-2020005806-A1,"Call quality improvement system, apparatus and method"
US-2023072026-A1,"Industrial internet of things for identifying and processing manufacturing problems, control methods, and storage medium"
US-2023072026-A1,"Industrial internet of things for identifying and processing manufacturing problems, control methods, and storage medium"
US-2024195750-A1,Dynamic channel allocation of narrowband internet of things and long-term evolution machine communcations
US-2024195750-A1,Dynamic channel allocation of narrowband internet of things and long-term evolution machine communcations
US-10595268-B2,Network slice-available area information acquisition method
US-10595268-B2,Network slice-available area information acquisition method
US-2019268851-A1,Continuously updated iot-based energy-supplier optimization
US-2019268851-A1,Continuously updated iot-based energy-supplier optimization
US-2017329602-A1,Method and apparatus for resource binding
US-11150676-B2,Clothes treating apparatus and method for operating the clothes treating apparatus
US-11150676-B2,Clothes treating apparatus and method for operating the clothes treating apparatus
US-2020335228-A1,"System, method and computer-readable storage medium realizing internet of things for smart city based on street lamps and lamp posts"
US-2020335228-A1,"System, method and computer-readable storage medium realizing internet of things for smart city based on street lamps and lamp posts"
US-2020328500-A1,Antenna module and electronic device including the same
US-2020328500-A1,Antenna module and electronic device including the same
Query:
SELECT TO_CHAR(TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "year",
       TO_CHAR(TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 100
Answer:
year,month,num_publications
2015,04,1
2015,12,2
2017,03,1
2017,04,3
2018,02,2
2018,03,2
2018,04,2
2018,11,2
2019,08,2
2019,09,4
2019,11,2
2020,02,2
2020,04,4
2020,06,4
2020,07,2
2020,11,2
2021,07,2
2021,11,2
2022,03,2
2022,09,2
2022,12,2
Query:
SELECT t."publication_number", t."application_number"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
publication_number,application_number
US-2018279332-A1,US-201815934269-A
US-2018279332-A1,US-201815934269-A
US-11175083-B2,US-201816182895-A
US-11175083-B2,US-201816182895-A
US-10972474-B2,US-201715490170-A
US-10972474-B2,US-201715490170-A
US-10631359-B2,US-201515557418-A
US-10631359-B2,US-201515557418-A
US-11206611-B2,US-202016900128-A
US-11206611-B2,US-202016900128-A
US-2020005806-A1,US-201916564884-A
US-2020005806-A1,US-201916564884-A
US-11050495-B2,US-202016933190-A
US-11050495-B2,US-202016933190-A
US-11463519-B2,US-202117383268-A
US-11463519-B2,US-202117383268-A
US-2022224518-A1,US-202117528730-A
US-2022224518-A1,US-202117528730-A
US-2020186604-A1,US-201916680525-A
US-2020186604-A1,US-201916680525-A
US-2020328500-A1,US-202016844706-A
US-2020328500-A1,US-202016844706-A
US-2022216992-A1,US-202217706067-A
US-2022216992-A1,US-202217706067-A
US-2023072026-A1,US-202217933102-A
US-2023072026-A1,US-202217933102-A
US-2024195750-A1,US-202218080217-A
US-2024195750-A1,US-202218080217-A
US-2021075635-A1,US-202017099458-A
US-2021075635-A1,US-202017099458-A
US-9444515-B2,US-201514695387-A
US-11194613-B2,US-201916543281-A
US-11194613-B2,US-201916543281-A
US-2020244539-A1,US-202016845240-A
US-2020244539-A1,US-202016845240-A
US-10595268-B2,US-201815965314-A
US-10595268-B2,US-201815965314-A
US-2019268851-A1,US-201815907791-A
US-2019268851-A1,US-201815907791-A
US-11150676-B2,US-201916562246-A
US-11150676-B2,US-201916562246-A
US-2017329602-A1,US-201715496203-A
US-2020335228-A1,US-202016917822-A
US-2020335228-A1,US-202016917822-A
US-11250481-B2,US-202016780221-A
US-11250481-B2,US-202016780221-A
US-2018102918-A1,US-201715464195-A
Query:
SELECT t."publication_number", t."filing_date", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
Too long, hard cut:
publication_number,filing_date,abstract_text
US-2023072026-A1,20220917,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the data of the product manufacturing problems; and the problem solving module is configured to determine problem processing data based on the problem type, and solve the problem based on the problem processing data."
US-2023072026-A1,20220917,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the data of the product manufacturing problems; and the problem solving module is configured to determine problem processing data based on the problem type, and solve the problem based on the problem processing data."
US-2024195750-A1,20221213,"Aspects provided herein provide methods, systems, and a non-transitory computer storage media storing computer-useable instructions for dynamic allocation of internet of things (IoT) device communications. The method begins with determining an amount of unallocated spectrum in a communications channel used by one or more devices attached to a node. Next, it is determined that the IoT device has requested an amount of spectrum from the node that is less than the amount of unallocated spectrum. At least a portion of the amount of unallocated spectrum is dynamically allocated to the IoT device."
US-2024195750-A1,20221213,"Aspects provided herein provide methods, systems, and a non-transitory computer storage media storing computer-useable instructions for dynamic allocation of internet of things (IoT) device communications. The method begins with determining an amount of unallocated spectrum in a communications channel used by one or more devices attached to a node. Next, it is determined that the IoT device has requested an amount of spectrum from the node that is less than the amount of unallocated spectrum. At least a portion of the amount of unallocated spectrum is dynamically allocated to the IoT device."
US-2017339510-A1,20170403,"Communication network architectures, systems and methods for supporting a network of mobile nodes. As a non-limiting example, various aspects of this disclosure provide communication network architectures, systems, and methods for supporting a dynamically configurable communication network comprising a complex array of both static and moving communication nodes (e.g., the Internet of moving things). More specifically, systems and methods for managing the routing and replication of data in the download direction in a network of moving things."
US-11175083-B2,20181107,Embodiments for implementing intelligent refrigeration compressor runtime schedule extraction in an Internet of Things (IoT) computing environment by a processor. Compressor runtime positions of a compressor may be determined according to a single phase signal taken from an energy meter. Performance and health status of the compressor may be established according to the one or more compressor runtime activities determined from the established nominal baseload classifier.
US-11175083-B2,20181107,Embodiments for implementing intelligent refrigeration compressor runtime schedule extraction in an Internet of Things (IoT) computing environment by a processor. Compressor runtime positions of a compressor may be determined according to a single phase signal taken from an energy meter. Performance and health status of the compressor may be established according to the one or more compressor runtime activities determined from the established nominal baseload classifier.
US-2018279332-A1,20180323,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart b
Query:
SELECT DISTINCT t."publication_number", t."filing_date"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
publication_number,filing_date
US-2020005806-A1,20190909
US-10595268-B2,20180427
US-10972474-B2,20170418
US-2020186604-A1,20191112
US-2017329602-A1,20170425
US-11250481-B2,20200203
US-11175083-B2,20181107
US-2017339510-A1,20170403
US-11194613-B2,20190816
US-11050495-B2,20200720
US-11206611-B2,20200612
US-2022224518-A1,20211117
US-2018279332-A1,20180323
US-2021075635-A1,20201116
US-2022216992-A1,20220328
US-2020244539-A1,20200410
US-2024195750-A1,20221213
US-2019268851-A1,20180228
US-2021067565-A1,20200416
US-2023072026-A1,20220917
US-2018102918-A1,20170320
US-2020335228-A1,20200630
US-10631359-B2,20151202
US-2024199405-A1,20221220
US-11150676-B2,20190905
US-9444515-B2,20150424
US-11463519-B2,20210722
US-2020328500-A1,20200409
Query:
SELECT TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'YYYY') AS "year",
       TO_CHAR(TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD'), 'MM') AS "month",
       COUNT(*) AS "num_publications"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "country_code" = 'US'
  AND TRY_TO_DATE("filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND "filing_date" BETWEEN 20080101 AND 20221231
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 100
Answer:
year,month,num_publications
2008,01,111
2008,02,130
2008,03,137
2008,04,125
2008,05,116
2008,06,121
2008,07,129
2008,08,118
2008,09,122
2008,10,134
2008,11,105
2008,12,135
2009,01,99
2009,02,96
2009,03,130
2009,04,116
2009,05,88
2009,06,96
2009,07,97
2009,08,100
2009,09,107
2009,10,91
2009,11,69
2009,12,109
2010,01,74
2010,02,70
2010,03,101
2010,04,70
2010,05,85
2010,06,82
2010,07,70
2010,08,70
2010,09,72
2010,10,78
2010,11,64
2010,12,67
2011,01,60
2011,02,65
2011,03,72
2011,04,57
2011,05,65
2011,06,74
2011,07,57
2011,08,56
2011,09,83
2011,10,48
2011,11,54
2011,12,68
2012,01,51
2012,02,42
2012,03,48
2012,04,50
2012,05,49
2012,06,50
2012,07,53
2012,08,45
2012,09,58
2012,10,47
2012,11,57
2012,12,65
2013,01,42
2013,02,50
2013,03,82
2013,04,58
2013,05,47
2013,06,56
2013,07,65
2013,08,52
2013,09,65
2013,10,54
2013,11,75
2013,12,90
2014,01,84
2014,02,71
2014,03,105
2014,04,66
2014,05,88
2014,06,95
2014,07,78
2014,08,73
2014,09,112
2014,10,107
2014,11,83
2014,12,119
2015,01,110
2015,02,102
2015,03,149
2015,04,101
2015,05,105
2015,06,109
2015,07,110
2015,08,114
2015,09,126
2015,10,123
2015,11,101
2015,12,143
2016,01,103
2016,02,135
2016,03,151
2016,04,142
Query:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "abstract_text"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."abstract_localized") f
WHERE f.value::VARIANT:"text"::STRING ILIKE '%internet%things%'
  AND t."country_code" = 'US'
  AND TRY_TO_DATE(t."filing_date"::STRING, 'YYYYMMDD') IS NOT NULL
  AND t."filing_date" BETWEEN 20080101 AND 20221231
LIMIT 100
Answer:
Too long, hard cut:
publication_number,abstract_text
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-2018279332-A1,"A communication method and system for converging a fifth generation (5G) communication system for supporting higher data rates beyond a fourth generation (4G) system with a technology for Internet of things (IoT) are provided. The communication method and system may be applied to intelligent services based on the 5G communication technology and the IoT-related technology, such as smart home, smart building, smart city, smart car, connected car, health care, digital education, smart retail, security and safety services."
US-11250481-B2,"A method for dynamically evaluating a resource value is described. Data encoding one or more parameters related to the resource value is accessed, where the one or more parameters are monitored by a plurality of sensors that form an Internet of Things (IoT) and then released by the IoT of the plurality of sensors on a blockchain network. At least one parameter from the data is compared with a predetermined threshold value or a predetermined threshold range. In response to determining that the at least one parameter has exceeded the predetermined threshold value or the predetermined threshold range, a calculation of the resource value is triggered according to evaluation logic described by a smart contract released on the blockchain network in association with the one or more parameters being monitored, such that a consensus is reached on the blockchain network regarding the resource value that has been calculated."
US-11250481-B2,"A method for dynamically evaluating a resource value is described. Data encoding one or more parameters related to the resource value is accessed, where the one or more parameters are monitored by a plurality of sensors that form an Internet of Things (IoT) and then released by the IoT of the plurality of sensors on a blockchain network. At least one parameter from the data is compared with a predetermined threshold value or a predetermined threshold range. In response to determining that the at least one parameter has exceeded the predetermined threshold value or the predetermined threshold range, a calculation of the resource value is triggered according to evaluation logic described by a smart contract released on the blockchain network in association with the one or more parameters being monitored, such that a consensus is reached on the blockchain network regarding the resource value that has been calculated."
US-2018102918-A1,"Disclosed is a way to expand the range of Internet of Things devices in a home, office, or structure to the range of a local WiFi network. This is accomplished by generating a network bridge for the devices using machine-to-machine protocols to communicate using the WiFi network backhaul channel. Transmissions in machine-to-machine protocol are tunneled through WiFi communications and extracted by the closest access point. Access points include radios for both WiFi and machine-to-machine protocols."
US-2023072026-A1,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the data of the product manufacturing problems; and the problem solving module is configured to determine problem processing data based on the problem type, and solve the problem based on the problem processing data."
US-2023072026-A1,"The disclosure provides an industrial Internet of Things for identifying and processing manufacturing problems, a control method, and a storage medium. The method includes an industrial Internet of Things for identifying and processing manufacturing problems. The industrial Internet of Things includes an acquisition module, a problem type determination module and a problem solving module, the acquisition module is configured to obtain equipment information and data of product manufacturing problems; the problem type determination module is configured to determine a problem type at least based on the da
End Exploring Related Columns
Task: How many U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') were filed each month from 2008 to 2022, including months with no filings?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: To determine the number of U.S. publications related to IoT (where the abstract includes the phrase "internet of things") filed each month from 2008 to 2022, including months with no filings, the data would be structured as follows:

```csv
Year,Month,Num_Publications
2008,1,num_publications:int
2008,2,num_publications:int
...
2022,12,num_publications:int
```

*Note: `Num_Publications` represents the count of publications filed in each respective month and year.*.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 23:20:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 23:20:31 - root - INFO - To determine the number of U.S. publications related to IoT (where the abstract includes the phrase "internet of things") filed each month from 2008 to 2022, including months with no filings, you can use the following SQL query:

```sql
WITH months AS (
    SELECT
        DATEADD(month, seq4(), '2008-01-01') AS first_of_month
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
),
date_list AS (
    SELECT
        YEAR(first_of_month) AS "Year",
        MONTH(first_of_month) AS "Month"
    FROM months
    WHERE first_of_month <= '2022-12-01'
),
publications AS (
    SELECT DISTINCT
        t."publication_number",
        TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
      AND t."filing_date" BETWEEN 20080101 AND 20221231
      AND f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
),
pub_counts AS (
    SELECT
        YEAR(filing_date) AS "Year",
        MONTH(filing_date) AS "Month",
        COUNT(*) AS Num_Publications
    FROM publications
    GROUP BY "Year", "Month"
)
SELECT
    d."Year",
    d."Month",
    COALESCE(p.Num_Publications, 0) AS Num_Publications
FROM date_list d
LEFT JOIN pub_counts p ON d."Year" = p."Year" AND d."Month" = p."Month"
ORDER BY d."Year", d."Month";
```
2025-01-23 23:20:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:20:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:20:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:20:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 128
2025-01-23 23:20:32 - snowflake.connector.connection - INFO - closed
2025-01-23 23:20:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:20:33 - root - INFO - itercount: 1
2025-01-23 23:20:33 - root - INFO - 0
2025-01-23 23:20:33 - root - INFO - results: 
Year,Month,NUM_PUBLICATIONS
2008,1,0
2008,2,0
2008,3,0
2008,4,0
2008,5,0
2008,6,0
2008,7,0
2008,8,0
2008,9,0
2008,10,0
2008,11,0
2008,12,0
2009,1,0
2009,2,0
2009,3,0
2009,4,0
2009,5,0
2009,6,0
2009,7,0
2009,8,0
2009,9,0
2009,10,0
2009,11,0
2009,12,0
2010,1,0
2010,2,0
2010,3,0
2010,4,0
2010,5,0
2010,6,0
2010,7,0
2010,8,0
2010,9,0
2010,10,0
2010,11,0
2010,12,0
2011,1,0
2011,2,0
2011,3,0
2011,4,0
2011,5,0
2011,6,0
2011,7,0
2011,8,0
2011,9,0
2011,10,0
2011,11,0
2011,12,0
2012,1,0
2012,2,0
2012,3,0
2012,4,0
2012,5,0
2012,6,0
2012,7,0
2012,8,0
2012,9,0
2012,10,0
2012,11,0
2012,12,0
2013,1,0
2013,2,0
2013,3,0
2013,4,0
2013,5,0
2013,6,0
2013,7,0
2013,8,0
2013,9,0
2013,10,0
2013,11,0
2013,12,0
2014,1,0
2014,2,0
2014,3,0
2014,4,0
2014,5,0
2014,6,0
2014,7,0
2014,8,0
2014,9,0
2014,10,0
2014,11,0
2014,12,0
2015,1,0
2015,2,0
2015,3,0
2015,4,1
2015,5,0
2015,6,0
2015,7,0
2015,8,0
2015,9,0
2015,10,0
2015,11,0
2015,12,1
2016,1,0
2016,2,0
2016,3,0
2016,4,0
2016,5,0
2016,6,0
2016,7,0
2016,8,0
2016,9,0
2016,10,0
2016,11,0
2016,12,0
2017,1,0
2017,2,0
2017,3,1
2017,4,2
2017,5,0
2017,6,0
2017,7,0
2017,8,0
2017,9,0
2017,10,0
2017,11,0
2017,12,0
2018,1,0
2018,2,1
2018,3,1
2018,4,1
2018,5,0
2018,6,0
2018,7,0
2018,8,0


2025-01-23 23:20:33 - root - INFO - Please check the answer again by reviewing How many U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') were filed each month from 2008 to 2022, including months with no filings?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the number of U.S. publications related to IoT (where the abstract includes the phrase "internet of things") filed each month from 2008 to 2022, including months with no filings, the data would be structured as follows:

```csv
Year,Month,Num_Publications
2008,1,num_publications:int
2008,2,num_publications:int
...
2022,12,num_publications:int
```

*Note: `Num_Publications` represents the count of publications filed in each respective month and year.* The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Month,NUM_PUBLICATIONS
2008,1,0
2008,2,0
2008,3,0
2008,4,0
2008,5,0
2008,6,0
2008,7,0
2008,8,0
2008,9,0
2008,10,0
2008,11,0
2008,12,0
2009,1,0
2009,2,0
2009,3,0
2009,4,0
2009,5,0
2009,6,0
2009,7,0
2009,8,0
2009,9,0
2009,10,0
2009,11,0
2009,12,0
2010,1,0
2010,2,0
2010,3,0
2010,4,0
2010,5,0
2010,6,0
2010,7,0
2010,8,0
2010,9,0
2010,10,0
2010,11,0
2010,12,0
2011,1,0
2011,2,0
2011,3,0
2011,4,0
2011,5,0
2011,6,0
2011,7,0
2011,8,0
2011,9,0
2011,10,0
2011,11,0
2011,12,0
2012,1,0
2012,2,0
2012,3,0
2012,4,0
2012,5,0
2012,6,0
2012,7,0
2012,8,0
2012,9,0
2012,10,0
2012,11,0
2012,12,0
2013,1,0
2013,2,0
2013,3,0
2013,4,0
2013,5,0
2013,6,0
2013,7,0
2013,8,0
2013,9,0
2013,10,0
2013,11,0
2013,12,0
2014,1,0
2014,2,0
2014,3,0
2014,4,0
2014,5,0
2014,6,0
2014,7,0
2014,8,0
2014,9,0
2014,10,0
2014,11,0
2014,12,0
2015,1,0
2015,2,0
2015,3,0
2015,4,1
2015,5,0
2015,6,0
2015,7,0
2015,8,0
2015,9,0
2015,10,0
2015,11,0
2015,12,1
2016,1,0
2016,2,0
2016,3,0
2016,4,0
2016,5,0
2016,6,0
2016,7,0
2016,8,0
2016,9,0
2016,10,0
2016,11,0
2016,12,0
2017,1,0
2017,2,0
2017,3,1
2017,4,2
2017,5,0
2017,6,0
2017,7,0
2017,8,0
2017,9,0
2017,10,0
2017,11,0
2017,12,0
2018,1,0
2018,2,1
2018,3,1
2018,4,1
2018,5,0
2018,6,0
2018,7,0
2018,8,0
Current sql:
WITH months AS (
    SELECT
        DATEADD(month, seq4(), '2008-01-01') AS first_of_month
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
),
date_list AS (
    SELECT
        YEAR(first_of_month) AS "Year",
        MONTH(first_of_month) AS "Month"
    FROM months
    WHERE first_of_month <= '2022-12-01'
),
publications AS (
    SELECT DISTINCT
        t."publication_number",
        TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
      AND t."filing_date" BETWEEN 20080101 AND 20221231
      AND f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
),
pub_counts AS (
    SELECT
        YEAR(filing_date) AS "Year",
        MONTH(filing_date) AS "Month",
        COUNT(*) AS Num_Publications
    FROM publications
    GROUP BY "Year", "Month"
)
SELECT
    d."Year",
    d."Month",
    COALESCE(p.Num_Publications, 0) AS Num_Publications
FROM date_list d
LEFT JOIN pub_counts p ON d."Year" = p."Year" AND d."Month" = p."Month"
ORDER BY d."Year", d."Month";Be careful of using GENERATOR. Don't use seq4(), use ROW_NUMBER().

2025-01-23 23:21:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 23:21:09 - root - INFO - To determine the number of U.S. publications related to IoT (where the abstract includes the phrase "internet of things") filed each month from 2008 to 2022, including months with no filings, you can use the following SQL query:

```sql
WITH month_numbers AS (
    SELECT ROW_NUMBER() OVER (ORDER BY NULL) - 1 AS n
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
),
months AS (
    SELECT DATEADD(MONTH, n, '2008-01-01') AS first_of_month
    FROM month_numbers
),
date_list AS (
    SELECT
        EXTRACT(YEAR FROM first_of_month) AS "Year",
        EXTRACT(MONTH FROM first_of_month) AS "Month"
    FROM months
    WHERE first_of_month <= '2022-12-31'
),
publications AS (
    SELECT DISTINCT
        t."publication_number",
        TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
      AND t."filing_date" BETWEEN 20080101 AND 20221231
      AND LOWER(f.value::VARIANT:"text"::STRING) LIKE '%internet of things%'
),
pub_counts AS (
    SELECT
        EXTRACT(YEAR FROM filing_date) AS "Year",
        EXTRACT(MONTH FROM filing_date) AS "Month",
        COUNT(*) AS Num_Publications
    FROM publications
    GROUP BY "Year", "Month"
)
SELECT
    d."Year",
    d."Month",
    COALESCE(p.Num_Publications, 0) AS Num_Publications
FROM date_list d
LEFT JOIN pub_counts p ON d."Year" = p."Year" AND d."Month" = p."Month"
ORDER BY d."Year", d."Month";
```
2025-01-23 23:21:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:21:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:21:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:21:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 180
2025-01-23 23:21:10 - snowflake.connector.connection - INFO - closed
2025-01-23 23:21:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:21:11 - root - INFO - itercount: 2
2025-01-23 23:21:11 - root - INFO - 0
2025-01-23 23:21:11 - root - INFO - results: 
Year,Month,NUM_PUBLICATIONS
2008,1,0
2008,2,0
2008,3,0
2008,4,0
2008,5,0
2008,6,0
2008,7,0
2008,8,0
2008,9,0
2008,10,0
2008,11,0
2008,12,0
2009,1,0
2009,2,0
2009,3,0
2009,4,0
2009,5,0
2009,6,0
2009,7,0
2009,8,0
2009,9,0
2009,10,0
2009,11,0
2009,12,0
2010,1,0
2010,2,0
2010,3,0
2010,4,0
2010,5,0
2010,6,0
2010,7,0
2010,8,0
2010,9,0
2010,10,0
2010,11,0
2010,12,0
2011,1,0
2011,2,0
2011,3,0
2011,4,0
2011,5,0
2011,6,0
2011,7,0
2011,8,0
2011,9,0
2011,10,0
2011,11,0
2011,12,0
2012,1,0
2012,2,0
2012,3,0
2012,4,0
2012,5,0
2012,6,0
2012,7,0
2012,8,0
2012,9,0
2012,10,0
2012,11,0
2012,12,0
2013,1,0
2013,2,0
2013,3,0
2013,4,0
2013,5,0
2013,6,0
2013,7,0
2013,8,0
2013,9,0
2013,10,0
2013,11,0
2013,12,0
2014,1,0
2014,2,0
2014,3,0
2014,4,0
2014,5,0
2014,6,0
2014,7,0
2014,8,0
2014,9,0
2014,10,0
2014,11,0
2014,12,0
2015,1,0
2015,2,0
2015,3,0
2015,4,1
2015,5,0
2015,6,0
2015,7,0
2015,8,0
2015,9,0
2015,10,0
2015,11,0
2015,12,1
2016,1,0
2016,2,0
2016,3,0
2016,4,0
2016,5,0
2016,6,0
2016,7,0
2016,8,0
2016,9,0
2016,10,0
2016,11,0
2016,12,0
2017,1,0
2017,2,0
2017,3,1
2017,4,2
2017,5,0
2017,6,0
2017,7,0
2017,8,0
2017,9,0
2017,10,0
2017,11,0
2017,12,0
2018,1,0
2018,2,1
2018,3,1
2018,4,1
2018,5,0
2018,6,0
2018,7,0
2018,8,0
2018,9,0
2018,10,0
2018,11,1
2018,12,0
2019,1,0
2019,2,0
2019,3,0
2019,4,0
2019,5,0
2019,6,0
2019,7,0
2019,8,1
2019,9,2
2019,10,0
2019,11,1
2019,12,0
2020,1,0
2020,2,1
2020,3,0
2020,4,2
2020,5,0
2020,6,2
2020,7,1
2020,8,0
2020,9,0
2020,10,0
2020,11,1
2020,12,0
2021,1,0
2021,2,0
2021,3,0
2021,4,0
2021,5,0
2021,6,0
2021,7,1
2021,8,0
2021,9,0
2021,10,0
2021,11,1
2021,12,0
2022,1,0
2022,2,0
2022,3,1
2022,4,0
2022,5,0
2022,6,0
2022,7,0
2022,8,0
2022,9,1
2022,10,0
2022,11,0
2022,12,1


2025-01-23 23:21:11 - root - INFO - Please check the answer again by reviewing How many U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') were filed each month from 2008 to 2022, including months with no filings?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the number of U.S. publications related to IoT (where the abstract includes the phrase "internet of things") filed each month from 2008 to 2022, including months with no filings, the data would be structured as follows:

```csv
Year,Month,Num_Publications
2008,1,num_publications:int
2008,2,num_publications:int
...
2022,12,num_publications:int
```

*Note: `Num_Publications` represents the count of publications filed in each respective month and year.* The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Month,NUM_PUBLICATIONS
2008,1,0
2008,2,0
2008,3,0
2008,4,0
2008,5,0
2008,6,0
2008,7,0
2008,8,0
2008,9,0
2008,10,0
2008,11,0
2008,12,0
2009,1,0
2009,2,0
2009,3,0
2009,4,0
2009,5,0
2009,6,0
2009,7,0
2009,8,0
2009,9,0
2009,10,0
2009,11,0
2009,12,0
2010,1,0
2010,2,0
2010,3,0
2010,4,0
2010,5,0
2010,6,0
2010,7,0
2010,8,0
2010,9,0
2010,10,0
2010,11,0
2010,12,0
2011,1,0
2011,2,0
2011,3,0
2011,4,0
2011,5,0
2011,6,0
2011,7,0
2011,8,0
2011,9,0
2011,10,0
2011,11,0
2011,12,0
2012,1,0
2012,2,0
2012,3,0
2012,4,0
2012,5,0
2012,6,0
2012,7,0
2012,8,0
2012,9,0
2012,10,0
2012,11,0
2012,12,0
2013,1,0
2013,2,0
2013,3,0
2013,4,0
2013,5,0
2013,6,0
2013,7,0
2013,8,0
2013,9,0
2013,10,0
2013,11,0
2013,12,0
2014,1,0
2014,2,0
2014,3,0
2014,4,0
2014,5,0
2014,6,0
2014,7,0
2014,8,0
2014,9,0
2014,10,0
2014,11,0
2014,12,0
2015,1,0
2015,2,0
2015,3,0
2015,4,1
2015,5,0
2015,6,0
2015,7,0
2015,8,0
2015,9,0
2015,10,0
2015,11,0
2015,12,1
2016,1,0
2016,2,0
2016,3,0
2016,4,0
2016,5,0
2016,6,0
2016,7,0
2016,8,0
2016,9,0
2016,10,0
2016,11,0
2016,12,0
2017,1,0
2017,2,0
2017,3,1
2017,4,2
2017,5,0
2017,6,0
2017,7,0
2017,8,0
2017,9,0
2017,10,0
2017,11,0
2017,12,0
2018,1,0
2018,2,1
2018,3,1
2018,4,1
2018,5,0
2018,6,0
2018,7,0
2018,8,0
2018,9,0
2018,10,0
2018,11,1
2018,12,0
2019,1,0
2019,2,0
2019,3,0
2019,4,0
2019,5,0
2019,6,0
2019,7,0
2019,8,1
2019,9,2
2019,10,0
2019,11,1
2019,12,0
2020,1,0
2020,2,1
2020,3,0
2020,4,2
2020,5,0
2020,6,2
2020,7,1
2020,8,0
2020,9,0
2020,10,0
2020,11,1
2020,12,0
2021,1,0
2021,2,0
2021,3,0
2021,4,0
2021,5,0
2021,6,0
2021,7,1
2021,8,0
2021,9,0
2021,10,0
2021,11,1
2021,12,0
2022,1,0
2022,2,0
2022,3,1
2022,4,0
2022,5,0
2022,6,0
2022,7,0
2022,8,0
2022,9,1
2022,10,0
2022,11,0
2022,12,1
Current sql:
WITH month_numbers AS (
    SELECT ROW_NUMBER() OVER (ORDER BY NULL) - 1 AS n
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
),
months AS (
    SELECT DATEADD(MONTH, n, '2008-01-01') AS first_of_month
    FROM month_numbers
),
date_list AS (
    SELECT
        EXTRACT(YEAR FROM first_of_month) AS "Year",
        EXTRACT(MONTH FROM first_of_month) AS "Month"
    FROM months
    WHERE first_of_month <= '2022-12-31'
),
publications AS (
    SELECT DISTINCT
        t."publication_number",
        TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
      AND t."filing_date" BETWEEN 20080101 AND 20221231
      AND LOWER(f.value::VARIANT:"text"::STRING) LIKE '%internet of things%'
),
pub_counts AS (
    SELECT
        EXTRACT(YEAR FROM filing_date) AS "Year",
        EXTRACT(MONTH FROM filing_date) AS "Month",
        COUNT(*) AS Num_Publications
    FROM publications
    GROUP BY "Year", "Month"
)
SELECT
    d."Year",
    d."Month",
    COALESCE(p.Num_Publications, 0) AS Num_Publications
FROM date_list d
LEFT JOIN pub_counts p ON d."Year" = p."Year" AND d."Month" = p."Month"
ORDER BY d."Year", d."Month";Be careful of using GENERATOR. Don't use seq4(), use ROW_NUMBER().

2025-01-23 23:21:52 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-23 23:21:52 - root - INFO - ```sql
WITH RECURSIVE months AS (
    SELECT DATE '2008-01-01' AS first_of_month
    UNION ALL
    SELECT DATEADD(month, 1, first_of_month) AS first_of_month
    FROM months
    WHERE first_of_month < DATE '2022-12-01'
),
date_list AS (
    SELECT
        EXTRACT(YEAR FROM first_of_month) AS "Year",
        EXTRACT(MONTH FROM first_of_month) AS "Month"
    FROM months
),
publications AS (
    SELECT DISTINCT
        t."publication_number",
        TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
      AND t."filing_date" BETWEEN 20080101 AND 20221231
      AND f.value::VARIANT:"text"::STRING ILIKE '%internet of things%'
),
pub_counts AS (
    SELECT
        EXTRACT(YEAR FROM filing_date) AS "Year",
        EXTRACT(MONTH FROM filing_date) AS "Month",
        COUNT(*) AS Num_Publications
    FROM publications
    GROUP BY "Year", "Month"
)
SELECT
    d."Year",
    d."Month",
    COALESCE(p.Num_Publications, 0) AS Num_Publications
FROM date_list d
LEFT JOIN pub_counts p ON d."Year" = p."Year" AND d."Month" = p."Month"
ORDER BY d."Year", d."Month";
```
2025-01-23 23:21:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 23:21:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 23:21:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 23:21:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 180
2025-01-23 23:21:54 - snowflake.connector.connection - INFO - closed
2025-01-23 23:21:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 23:21:54 - root - INFO - itercount: 3
2025-01-23 23:21:54 - root - INFO - 0
2025-01-23 23:21:54 - root - INFO - Total iteration counts: 3
