After reviewing the SQL queries and their results, the correct SQL query is:

```plain
2result.sql
```

**Reasoning:**

- **Accurate Data Source:** The query in `2result.sql` uses the `bigquery-public-data.covid19_jhu_csse.confirmed_cases` table, which provides the cumulative confirmed cases up to April 20, 2020. This table is appropriate for aggregating total confirmed cases across different provinces or states within a country.

- **Correct Population Data:** It joins with the `bigquery-public-data.world_bank_wdi.indicators_data` table to retrieve the 2019 population data (`indicator_code = 'SP.POP.TOTL'`), which serves as an estimate for the 2020 population.

- **Proper Country Mapping:** The SQL handles discrepancies in country naming conventions by mapping:

  - `'US'` to `'United States'`
  - `'Iran'` to `'Iran, Islamic Rep.'`

  This ensures accurate joins between the COVID-19 data and the population data.

- **Accurate Calculations:** The query accurately calculates the total confirmed cases and the cases per 100,000 people using the formula:

  \[
  \text{{Cases per 100k}} = \left( \frac{{\text{{Total Confirmed Cases}}}}{{\text{{Population}}}} \right) \times 100,000
  \]

- **Matching Results:** The results in `2result.csv` align with the expected figures for the specified countries on April 20, 2020. The numbers are consistent with historical data reported around that date.

- **Clean and Efficient Query Structure:** The query is well-structured, making use of subqueries (`conf` and `pop`) for clarity and efficiency.

**Comparison with Other Options:**

- **Option 0 (`0result.sql`):** While similar to Option 2, there might be discrepancies in the population aggregation method. Option 2 provides a more precise calculation by using `MAX` on the population value.

- **Option 1 (`1result.sql`):** This query uses the `summary` table, which may aggregate data differently, leading to slight discrepancies in the total confirmed cases (e.g., lower total cases for the US). Additionally, the country mapping may not be as comprehensive.

By choosing `2result.sql`, we ensure that the data is accurate, the calculations are correct, and the country mappings are properly addressed.