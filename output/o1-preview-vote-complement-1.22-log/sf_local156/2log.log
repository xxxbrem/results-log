2025-01-26 03:32:42 - openai._base_client - INFO - Retrying request to /chat/completions in 0.497290 seconds
2025-01-26 03:33:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:33:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-26 03:33:36 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:37 - root - INFO - SQL:
SELECT DISTINCT "txn_type"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
   LIMIT 100;
Results:
txn_type
BUY
SELL

2025-01-26 03:33:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:33:38 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:39 - root - INFO - SQL:
SELECT DISTINCT "region"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS"
   LIMIT 100;
Results:
region
Australia
United States
Africa
India
Asia

2025-01-26 03:33:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:40 - root - INFO - SQL:
SELECT MIN("txn_date") AS "Earliest_Date", MAX("txn_date") AS "Latest_Date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS";
Results:
Earliest_Date,Latest_Date
01-01-2017,31-12-2020

2025-01-26 03:33:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:42 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:34:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:34:03 - root - INFO - The error you're encountering is due to a mismatch between the date format in your data and the format string you're using in the `TO_DATE` function. 

**Explanation:**

- **Error Message:**
  ```
  Can't parse '01-01-2017' as date with format 'YYYY-MM-DD'
  ```
  This error indicates that the date string `'01-01-2017'` does not match the format `'YYYY-MM-DD'`.

- **Data Format:**
  Based on your earlier query results:
  ```
  Earliest_Date,Latest_Date
  01-01-2017,31-12-2020
  ```
  The dates are in the format **`'DD-MM-YYYY'`** (e.g., `01-01-2017` for January 1, 2017).

**Solution:**

You need to adjust the format string in the `TO_DATE` function to match the format of your `txn_date` column.

**Corrected SQL Query:**

```sql
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "Year", COUNT(*) AS "Transaction_Count"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
```

**Additional Notes:**

- **Format Strings:**
  - `'YYYY-MM-DD'` corresponds to dates like `2017-01-01`.
  - `'DD-MM-YYYY'` corresponds to dates like `01-01-2017`.

- **Consistency:**
  Ensure that all your `TO_DATE` functions that parse the `"txn_date"` column use the `'DD-MM-YYYY'` format.

- **Sample Output:**
  After correcting the date format, your query should run successfully and return the number of transactions per year.

**Applying Changes to Other Queries:**

Since the date format is `'DD-MM-YYYY'` in your data, you should update all your queries that involve date parsing accordingly. Here's how you can modify the other queries:

1. **Exclude the First Year's Data (2017):**

   ```sql
   SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY' 
     AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > 2017
   LIMIT 100;
   ```

2. **Calculating Average Purchase Cost per Region per Year (Excluding 2017):**

   ```sql
   SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", 
          AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
     AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > 2017
   GROUP BY m."region", "Year"
   ORDER BY "Year", "Average_Purchase_Cost" DESC
   LIMIT 100;
   ```

3. **Calculating Annual Percentage Change in Average Purchase Cost:**

   ```sql
   SELECT "Year", "region", "Average_Purchase_Cost", "Previous_Year_Cost",
          ROUND((("Average_Purchase_Cost" - "Previous_Year_Cost") / "Previous_Year_Cost") * 100, 2) AS "Annual_Percentage_Change"
   FROM (
     SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", 
            AVG(t."quantity" * p."price") AS "Average_Purchase_Cost",
            LAG(AVG(t."quantity" * p."price")) OVER (PARTITION BY m."region" ORDER BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))) AS "Previous_Year_Cost"
     FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
       ON t."member_id" = m."member_id"
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
       ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
     WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
       AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > 2017
     GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
   ) sub
   ORDER BY "region", "Year"
   LIMIT 100;
   ```

**Summary:**

- Always ensure that the date format string in `TO_DATE` matches the actual format of the date strings in your columns.
- In your case, since the dates are in `'DD-MM-YYYY'` format, use `'DD-MM-YYYY'` in `TO_DATE`.
- This change should resolve the parsing error and allow your queries to execute successfully.

Let me know if you need further assistance!
2025-01-26 03:34:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:34:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:34:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:34:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:34:04 - snowflake.connector.connection - INFO - closed
2025-01-26 03:34:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:35:33 - root - INFO - SQL:
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "Year", COUNT(*) AS "Transaction_Count"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
Results:
Year,Transaction_Count
2017,4918
2018,4856
2019,4908
2020,5047
2021,3189

2025-01-26 03:35:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:34 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:35 - root - INFO - SQL:
SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'DD-MM-YYYY')) AS "Year", AVG("price") AS "Average_Price"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES"
   WHERE "ticker" = 'BTC'
   GROUP BY "Year"
   ORDER BY "Year"
   LIMIT 100
Results:
Year,Average_Price
2017,3981.072328767123
2018,7552.158356164383
2019,7371.821917808219
2020,11111.631147540984
2021,44353.54979253112

2025-01-26 03:35:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:37 - root - INFO - SQL:
SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   LIMIT 100
Results:
txn_id,member_id,region,txn_date,txn_type,quantity
1,c81e72,United States,01-01-2017,BUY,50.0
2,eccbc8,United States,01-01-2017,BUY,50.0
3,a87ff6,United States,01-01-2017,BUY,50.0
4,e4da3b,United States,01-01-2017,BUY,50.0
5,167909,United States,01-01-2017,BUY,50.0
6,c4ca42,Australia,01-01-2017,BUY,50.0
7,8f14e4,United States,01-01-2017,BUY,50.0
8,c9f0f8,United States,01-01-2017,BUY,50.0
9,45c48c,Australia,01-01-2017,BUY,50.0
10,d3d944,Africa,01-01-2017,BUY,50.0
11,6512bd,India,01-01-2017,BUY,50.0
12,c20ad4,Asia,01-01-2017,BUY,50.0
13,c51ce4,Australia,01-01-2017,BUY,50.0
14,aab323,Australia,01-01-2017,BUY,50.0
15,167909,United States,01-01-2017,BUY,50.0
16,c4ca42,Australia,01-01-2017,BUY,50.0
17,c81e72,United States,01-01-2017,BUY,50.0
18,eccbc8,United States,01-01-2017,BUY,50.0
19,a87ff6,United States,01-01-2017,BUY,50.0
20,e4da3b,United States,01-01-2017,BUY,50.0
21,8f14e4,United States,01-01-2017,BUY,50.0
22,c9f0f8,United States,01-01-2017,BUY,50.0
23,45c48c,Australia,01-01-2017,BUY,50.0
24,d3d944,Africa,01-01-2017,BUY,50.0
25,6512bd,India,01-01-2017,BUY,50.0
26,c20ad4,Asia,01-01-2017,BUY,50.0
27,c51ce4,Australia,01-01-2017,BUY,50.0
28,aab323,Australia,01-01-2017,BUY,50.0
29,aab323,Australia,01-01-2017,SELL,9.562185136
30,6512bd,India,01-01-2017,BUY,8.842987018
31,6512bd,India,01-01-2017,BUY,2.271062586
32,c20ad4,Asia,01-01-2017,BUY,6.101895756
33,c20ad4,Asia,01-01-2017,SELL,1.146313066
34,c9f0f8,United States,01-01-2017,BUY,7.511535595
35,6512bd,India,01-01-2017,BUY,6.73841781
36,6512bd,India,01-01-2017,BUY,9.378757912
37,c20ad4,Asia,01-01-2017,BUY,4.394808986
38,45c48c,Australia,01-01-2017,BUY,4.666031683
39,c20ad4,Asia,01-01-2017,BUY,3.563597579
40,c20ad4,Asia,01-01-2017,BUY,3.531484029
41,a87ff6,United States,01-01-2017,BUY,1.98666102
42,c81e72,United States,01-01-2017,BUY,2.156824502
43,8f14e4,United States,01-01-2017,BUY,4.112440109
44,c51ce4,Australia,01-01-2017,SELL,8.889890678
45,167909,United States,01-01-2017,BUY,8.129992969
46,eccbc8,United States,02-01-2017,BUY,3.729789722
47,45c48c,Australia,02-01-2017,BUY,1.443256636
48,d3d944,Africa,02-01-2017,SELL,8.339030859
49,a87ff6,United States,02-01-2017,BUY,8.786735207
50,c51ce4,Australia,02-01-2017,BUY,1.695672235
51,167909,United States,02-01-2017,BUY,4.732996255
52,e4da3b,United States,02-01-2017,BUY,1.371663219
53,a87ff6,United States,02-01-2017,BUY,5.959804819
54,aab323,Australia,02-01-2017,BUY,9.810761938
55,6512bd,India,02-01-2017,BUY,5.543838119
56,d3d944,Africa,02-01-2017,SELL,0.617022836
57,d3d944,Africa,02-01-2017,BUY,8.675939586
58,aab323,Australia,02-01-2017,BUY,0.150368926
59,c4ca42,Australia,02-01-2017,BUY,6.079650398
60,a87ff6,United States,02-01-2017,BUY,9.011177226
61,aab323,Australia,02-01-2017,BUY,1.029599926
62,c20ad4,Asia,02-01-2017,SELL,3.687415614
63,6512bd,India,02-01-2017,BUY,5.043726097
64,a87ff6,United States,02-01-2017,BUY,1.377159083
65,6512bd,India,02-01-2017,BUY,3.012760299
66,c4ca42,Australia,02-01-2017,BUY,1.194319601
67,c51ce4,Australia,02-01-2017,SELL,6.14200575
68,aab323,Australia,02-01-2017,BUY,8.876596041
69,c51ce4,Australia,03-01-2017,BUY,1.791975102
70,45c48c,Australia,03-01-2017,BUY,7.265296941
71,c51ce4,Australia,03-01-2017,BUY,0.494025068
72,8f14e4,United States,03-01-2017,BUY,5.469869519
73,8f14e4,United States,03-01-2017,SELL,3.704582949
74,e4da3b,United States,03-01-2017,SELL,5.375890939
75,d3d944,Africa,03-01-2017,BUY,1.248782979
76,eccbc8,United States,03-01-2017,SELL,6.681740169
77,a87ff6,United States,03-01-2017,BUY,3.807694538
78,aab323,Australia,03-01-2017,SELL,1.120028576
79,aab323,Australia,03-01-2017,BUY,0.451011553
80,c20ad4,Asia,03-01-2017,BUY,9.201727658
81,d3d944,Africa,03-01-2017,SELL,3.441259193
82,e4da3b,United States,03-01-2017,BUY,5.159655392
83,c9f0f8,United States,03-01-2017,BUY,2.22039025
84,c9f0f8,United States,03-01-2017,BUY,1.14515606
85,eccbc8,United States,04-01-2017,BUY,9.316518093
86,c4ca42,Australia,04-01-2017,BUY,7.736987566
87,d3d944,Africa,04-01-2017,BUY,9.147450149
88,d3d944,Africa,04-01-2017,SELL,9.402255852
89,a87ff6,United States,04-01-2017,BUY,5.686772069
90,c20ad4,Asia,04-01-2017,BUY,1.315816748
91,8f14e4,United States,04-01-2017,BUY,2.639010923
92,c9f0f8,United States,04-01-2017,BUY,9.448890603
93,a87ff6,United States,04-01-2017,BUY,8.137724997
94,c9f0f8,United States,04-01-2017,BUY,4.181393763
95,e4da3b,United States,04-01-2017,BUY,2.927012834
96,aab323,Australia,04-01-2017,BUY,7.637093177
97,a87ff6,United States,04-01-2017,BUY,9.12200761
98,c51ce4,Australia,04-01-2017,BUY,7.328769521
99,6512bd,India,04-01-2017,BUY,1.831004047
100,c20ad4,Asia,04-01-2017,BUY,8.782296318

2025-01-26 03:35:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:38 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:39 - root - INFO - SQL:
SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY' 
     AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
       SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
       FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
     )
   LIMIT 100
Results:
Too long, hard cut:
txn_id,member_id,region,txn_date,txn_type,quantity
4919,c20ad4,Asia,01-01-2018,BUY,0.407136209
4920,eccbc8,United States,01-01-2018,BUY,2.741420209
4921,6512bd,India,01-01-2018,BUY,8.539226321
4922,a87ff6,United States,01-01-2018,BUY,5.170061539
4923,6512bd,India,01-01-2018,BUY,0.074113608
4925,8f14e4,United States,01-01-2018,BUY,4.3282248
4926,45c48c,Australia,01-01-2018,BUY,2.241271644
4927,c81e72,United States,01-01-2018,BUY,5.803479501
4928,45c48c,Australia,01-01-2018,BUY,4.966686274
4929,c81e72,United States,02-01-2018,BUY,0.328733309
4931,8f14e4,United States,02-01-2018,BUY,4.590186885
4932,45c48c,Australia,02-01-2018,BUY,9.71618361
4933,c81e72,United States,02-01-2018,BUY,5.590562217
4934,c20ad4,Asia,02-01-2018,BUY,2.27825909
4935,c4ca42,Australia,02-01-2018,BUY,0.724803624
4937,c51ce4,Australia,02-01-2018,BUY,3.194625407
4939,aab323,Australia,03-01-2018,BUY,2.190052182
4941,a87ff6,United States,03-01-2018,BUY,4.768887356
4942,e4da3b,United States,03-01-2018,BUY,0.061567767
4943,e4da3b,United States,03-01-2018,BUY,7.674874963
4944,e4da3b,United States,03-01-2018,BUY,0.472330464
4946,c20ad4,Asia,03-01-2018,BUY,4.843274999
4947,a87ff6,United States,03-01-2018,BUY,3.142296863
4948,e4da3b,United States,03-01-2018,BUY,7.910013155
4950,c9f0f8,United States,03-01-2018,BUY,2.910222314
4951,167909,United States,03-01-2018,BUY,9.7167457
4952,c9f0f8,United States,04-01-2018,BUY,2.714622589
4953,e4da3b,United States,04-01-2018,BUY,7.883334406
4954,45c48c,Australia,04-01-2018,BUY,1.209291946
4955,d3d944,Africa,04-01-2018,BUY,3.849369354
4956,8f14e4,United States,04-01-2018,BUY,4.597497309
4957,45c48c,Australia,04-01-2018,BUY,7.091802032
4958,8f14e4,United States,04-01-2018,BUY,8.767067683
4959,c20ad4,Asia,04-01-2018,BUY,6.651596225
4960,c20ad4,Asia,04-01-2018,BUY,0.648045919
4962,c4ca42,Australia,04-01-2018,BUY,3.039219589
4964,167909,United States,05-01-2018,BUY,3.302876939
4966,eccbc8,United States,05-01-2018,BUY,5.057805113
4968,c4ca42,Australia,05-01-2018,BUY,8.977609231
4969,aab323,Australia,05-01-2018,BUY,4.643296646
4970,6512bd,India,05-01-2018,BUY,9.499334392
4971,8f14e4,United States,05-01-2018,BUY,3.515200551
4972,c9f0f8,United States,05-01-2018,BUY,3.707454861
4973,45c48c,Australia,06-01-2018,BUY,4.558494446
4974,aab323,Australia,06-01-2018,BUY,5.146343874
4975,c4ca42,Australia,06-01-2018,BUY,5.112630255
4976,eccbc8,United States,06-01-2018,BUY,2.279031208
4977,c81e72,United States,06-01-2018,BUY,4.067866654
4978,8f14e4,United States,06-01-2018,BUY,6.399031362
4979,e4da3b,United States,06-01-2018,BUY,9.126177538
4981,c20ad4,Asia,06-01-2018,BUY,5.299147112
4982,c81e72,United States,06-01-2018,BUY,6.56314205
4983,c81e72,United States,07-01-2018,BUY,9.204403154
4984,c20ad4,Asia,07-01-2018,BUY,7.084328244
4986,c51ce4,Australia,07-01-2018,BUY,1.145497923
4987,c9f0f8,United States,07-01-2018,BUY,4.868415875
4989,e4da3b,United States,07-01-2018,BUY,3.950216668
4991,8f14e4,United States,07-01-2018,BUY,0.648623103
4992,c9f0f8,United States,07-01-2018,BUY,7.957292552
4993,eccbc8,United States,07-01-2018,BUY,4.718985635
4996,167909,United States,07-01-2018,BUY,3.784260027
4997,c20ad4,Asia,07-01-2018,BUY,4.817781415
4998,d3d944,Africa,07-01-2018,BUY,2.020532076
4999,a87ff6,United States,07-01-2018,BUY,8.891840553
5003,c9f0f8,United States,07-01-2018,BUY,5.926334983
5004,8f14e4,United States,08-01-2018,BUY,2.272544416
5005,c9f0f8,United States,08-01-2018,BUY,2.35696904
5006,c51ce4,Australia,08-01-2018,BUY,3.265401355
5008,c4ca42,Australia,08-01-2018,BUY,5.821506238
5009,c81e72,United States,08-01-2018,BUY,9.232601378
5010,eccbc8,United States,08-01-2018,BUY,6.991374067
5011,aab323,Australia,08-01-2018,BUY,4.298960646
5012,a87ff6,United States,08-01-2018,BUY,4.929261282
5013,45c48c,Australia,09-01-2018,BUY,7.628016458
5014,167909,United States,09-01-2018,BUY,3.751491005
5015,c4ca42,Australia,09-01-2018,BUY,8.538014844
5016,c51ce4,Australia,09-01-2018,BUY,4.954165961
5017,d3d944,Africa,09-01-2018,BUY,5.459463577
5018,45c48c,Australia,09-01-2018,BUY,4.033072302
5019,d3d944,Africa,09-01-2018,BUY,5.899887754
5020,c20ad4,Asia,09-01-2018,BUY,7.55546578
5021,6512bd,India,09-01-2018,BUY,0.20312066
5022,45c48c,Australia,09-01-2018,BUY,2.023324226
5023,eccbc8,United States,09-01-2018,BUY,0.877796515
5024,c4ca42,Australia,09-01-2018,BUY,6.082980559
5026,c81e72,United States,09-01-2018,BUY,1.419904154
5027,c81e72,United States,09-01-2018,BUY,3.680605497
5029,c20ad4,Asia,09-01-2018,BUY,0.748010093
5030,45c48c,Australia,09-01-2018,BUY,6.204433641
5033,167909,United States,10-01-2018,BUY,9.123298795
5034,c51ce4,Australia,10-01-2018,BUY,3.801325425
5036,c20ad4,Asia,10-01-2018,BUY,1.606911678
5037,c51ce4,Australia,10-01-2018,BUY,1.55306718
5038,167909,United States,10-01-2018,BUY,3.860773847
5039,c51ce4,Australia,10-01-2018,BUY,9.825345493
5041,c9f0f8,United States,10-01-2018,BUY,9.237639182
5043,aab323,Australia,10-01-2018,BUY,6.852746349
5044,d3d944,Africa,10-01-2018,BUY,9.186818182
5045,167909,United States,10-01-2018,BUY,5.06075

2025-01-26 03:35:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:40 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:41 - root - INFO - SQL:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", SUM(t."quantity") AS "Total_Quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY'
   GROUP BY m."region", "Year"
   ORDER BY "Year", m."region"
   LIMIT 100
Results:
region,Year,Total_Quantity
Africa,2017,1413.311543373
Asia,2017,1519.935962797
Australia,2017,6813.260548
India,2017,1571.879709356
United States,2017,10433.219711331
Africa,2018,1377.956583302
Asia,2018,1442.25975353
Australia,2018,6227.724489253
India,2018,1348.171749978
United States,2018,9525.955557094
Africa,2019,1095.784869418
Asia,2019,1619.618441392
Australia,2019,6406.885041362
India,2019,1572.679575812
United States,2019,9531.629794916
Africa,2020,1336.540782422
Asia,2020,1496.525352338
Australia,2020,6608.306619856
India,2020,1527.423962425
United States,2020,10064.238477836
Africa,2021,791.917860565
Asia,2021,1084.526571265
Australia,2021,3938.028788841
India,2021,952.759891233
United States,2021,6148.806656713

2025-01-26 03:35:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:43 - root - INFO - SQL:
SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."quantity", p."price", (t."quantity" * p."price") AS "Transaction_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" 
     AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC'
   LIMIT 100
Results:
Too long, hard cut:
txn_id,member_id,region,txn_date,quantity,price,Transaction_Cost
1,c81e72,United States,01-01-2017,50.0,995.4,49770.0
2,eccbc8,United States,01-01-2017,50.0,995.4,49770.0
3,a87ff6,United States,01-01-2017,50.0,995.4,49770.0
4,e4da3b,United States,01-01-2017,50.0,995.4,49770.0
5,167909,United States,01-01-2017,50.0,995.4,49770.0
6,c4ca42,Australia,01-01-2017,50.0,995.4,49770.0
7,8f14e4,United States,01-01-2017,50.0,995.4,49770.0
8,c9f0f8,United States,01-01-2017,50.0,995.4,49770.0
9,45c48c,Australia,01-01-2017,50.0,995.4,49770.0
10,d3d944,Africa,01-01-2017,50.0,995.4,49770.0
11,6512bd,India,01-01-2017,50.0,995.4,49770.0
12,c20ad4,Asia,01-01-2017,50.0,995.4,49770.0
13,c51ce4,Australia,01-01-2017,50.0,995.4,49770.0
14,aab323,Australia,01-01-2017,50.0,995.4,49770.0
31,6512bd,India,01-01-2017,2.271062586,995.4,2260.6156981044
32,c20ad4,Asia,01-01-2017,6.101895756,995.4,6073.8270355224
35,6512bd,India,01-01-2017,6.73841781,995.4,6707.421088073999
36,6512bd,India,01-01-2017,9.378757912,995.4,9335.6156256048
37,c20ad4,Asia,01-01-2017,4.394808986,995.4,4374.5928646644
38,45c48c,Australia,01-01-2017,4.666031683,995.4,4644.5679372582
39,c20ad4,Asia,01-01-2017,3.563597579,995.4,3547.2050301366
43,8f14e4,United States,01-01-2017,4.112440109,995.4,4093.5228844985995
45,167909,United States,01-01-2017,8.129992969,995.4,8092.5950013426
46,eccbc8,United States,02-01-2017,3.729789722,1017.0,3793.196147274
50,c51ce4,Australia,02-01-2017,1.695672235,1017.0,1724.498662995
51,167909,United States,02-01-2017,4.732996255,1017.0,4813.457191335
53,a87ff6,United States,02-01-2017,5.959804819,1017.0,6061.121500923
55,6512bd,India,02-01-2017,5.543838119,1017.0,5638.083367023
57,d3d944,Africa,02-01-2017,8.675939586,1017.0,8823.430558962
58,aab323,Australia,02-01-2017,0.150368926,1017.0,152.92519774200002
59,c4ca42,Australia,02-01-2017,6.079650398,1017.0,6183.004454766
60,a87ff6,United States,02-01-2017,9.011177226,1017.0,9164.367238842
61,aab323,Australia,02-01-2017,1.029599926,1017.0,1047.1031247419999
65,6512bd,India,02-01-2017,3.012760299,1017.0,3063.977224083
66,c4ca42,Australia,02-01-2017,1.194319601,1017.0,1214.623034217
68,aab323,Australia,02-01-2017,8.876596041,1017.0,9027.498173697
69,c51ce4,Australia,03-01-2017,1.791975102,1033.3,1851.6478728966001
77,a87ff6,United States,03-01-2017,3.807694538,1033.3,3934.4907661153998
80,c20ad4,Asia,03-01-2017,9.201727658,1033.3,9508.145189011399
82,e4da3b,United States,03-01-2017,5.159655392,1033.3,5331.4719165536
83,c9f0f8,United States,03-01-2017,2.22039025,1033.3,2294.3292453249996
85,eccbc8,United States,04-01-2017,9.316518093,1135.4,10577.9746427922
86,c4ca42,Australia,04-01-2017,7.736987566,1135.4,8784.5756824364
87,d3d944,Africa,04-01-2017,9.147450149,1135.4,10386.014899174601
89,a87ff6,United States,04-01-2017,5.686772069,1135.4,6456.761007142601
90,c20ad4,Asia,04-01-2017,1.315816748,1135.4,1493.9783356792002
93,a87ff6,United States,04-01-2017,8.137724997,1135.4,9239.5729615938
95,e4da3b,United States,04-01-2017,2.927012834,1135.4,3323.3303717236004
98,c51ce4,Australia,04-01-2017,7.328769521,1135.4,8321.084914143401
100,c20ad4,Asia,04-01-2017,8.782296318,1135.4,9971.419239457202
101,c20ad4,Asia,04-01-2017,8.742448545,1135.4,9926.176077993001
102,c9f0f8,United States,05-01-2017,2.61926013,989.3,2591.2340466089995
103,c51ce4,Australia,05-01-2017,1.510491952,989.3,1494.3296881136
105,167909,United States,05-01-2017,6.413918106,989.3,6345.289182265799
106,eccbc8,United States,05-01-2017,9.808394015,989.3,9703.444199039499
107,c4ca42,Australia,05-01-2017,1.032755811,989.3,1021.7053238222999
108,a87ff6,United States,05-01-2017,9.49645508,989.3,9394.843010644
110,d3d944,Africa,05-01-2017,7.683720954,989.3,7601.5051397922
112,c9f0f8,United States,05-01-2017,4.888776093,989.3,4836.4661888048995
113,a87ff6,United States,06-01-2017,5.529125393,886.2,4899.9109232766
114,c20ad4,Asia,06-01-2017,8.524945201,886.2,7554.8064371262
115,d3d944,Africa,06-01-2017,1.748322551,886.2,1549.3634446962
116,c20ad4,Asia,06-01-2017,6.991081482,886.2,6195.4964093484
119,c20ad4,Asia,06-01-2017,6.590810059,886.2,5840.7758742858005
120,45c48c,Australia,06-01-2017,7.658162014,886.2,6786.663176806801
121,c20ad4,Asia,06-01-2017,2.566599204,886.2,2274.5202145848
125,eccbc8,United States,07-01-2017,0.328722011,888.9,292.20099557789996
126,eccbc8,United States,07-01-2017,2.394607993,888.9,2128.5670449777
127,c20ad4,Asia,07-01-2017,5.067220196,888.9,4504.2520322244
129,c51ce4,Australia,07-01-2017,9.909703431,888.9,8808.7353798159
130,eccbc8,United States,07-01-2017,9.29903604,888.9,8265.913135956
137,c20ad4,Asia,07-01-2017,4.560200717,888.9,4053.5624173413
146,a87ff6,United States,08-01-2017,0.736037551,900.9,663.0962296959
149,a87ff6,United States,09-01-2017,4.507221468,899.8,4055.5978769064
150,c4ca42,Australia,09-01-2017,8.691715683,899.8,7820.8057715633995
152,6512bd,India,09-01-2017,4.333978386,899.8,3899.7137517227998
158,e4da3b,United States,10-01-2017,6.034007635,904.4,5457.156505094
161,c51ce4,Australia,10-01-2017

2025-01-26 03:35:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:44 - root - INFO - SQL:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" 
     AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
     AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
       SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
       FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
     )
   GROUP BY m."region", "Year"
   ORDER BY "Year", "Average_Purchase_Cost" DESC
   LIMIT 100
Results:
region,Year,Average_Purchase_Cost
India,2018,43848.94149087004
Australia,2018,38943.2797734344
United States,2018,38072.97085451416
Africa,2018,37842.109534864954
Asia,2018,37574.66661365357
India,2019,38827.48889570979
Africa,2019,38428.126848260625
United States,2019,37823.211058340705
Asia,2019,37788.848710684775
Australia,2019,36021.32609038528
Africa,2020,59017.73746956841
Australia,2020,57530.75762744611
Asia,2020,55915.500112458874
United States,2020,55070.706240028645
India,2020,47785.79291238492
Africa,2021,226985.82601379423
India,2021,225256.23798760015
Australia,2021,222981.1552580532
Asia,2021,221270.57613980304
United States,2021,221196.3977571301

2025-01-26 03:35:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:46 - root - INFO - SQL:
SELECT "Year", "region", "Average_Purchase_Cost", RANK() OVER (PARTITION BY "Year" ORDER BY "Average_Purchase_Cost" DESC) AS "Rank"
   FROM (
     SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
     FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
       ON t."member_id" = m."member_id"
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
       ON t."ticker" = p."ticker" 
       AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
     WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
       AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
         SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
         FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
       )
     GROUP BY m."region", "Year"
   ) sub
   ORDER BY "Year", "Rank"
   LIMIT 100
Results:
Year,region,Average_Purchase_Cost,Rank
2018,India,43848.94149087004,1
2018,Australia,38943.2797734344,2
2018,United States,38072.97085451416,3
2018,Africa,37842.109534864954,4
2018,Asia,37574.66661365357,5
2019,India,38827.48889570979,1
2019,Africa,38428.126848260625,2
2019,United States,37823.211058340705,3
2019,Asia,37788.848710684775,4
2019,Australia,36021.32609038528,5
2020,Africa,59017.73746956841,1
2020,Australia,57530.75762744611,2
2020,Asia,55915.500112458874,3
2020,United States,55070.706240028645,4
2020,India,47785.79291238492,5
2021,Africa,226985.82601379423,1
2021,India,225256.23798760015,2
2021,Australia,222981.1552580532,3
2021,Asia,221270.57613980304,4
2021,United States,221196.3977571301,5

2025-01-26 03:35:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:48 - root - INFO - SQL:
SELECT "region", "Year", "Average_Purchase_Cost",
     LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year") AS "Previous_Year_Cost",
     ROUND((("Average_Purchase_Cost" - LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year")) 
       / LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year")) * 100, 2) AS "Annual_Percentage_Change"
   FROM (
     SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
     FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
       ON t."member_id" = m."member_id"
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
       ON t."ticker" = p."ticker" 
       AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
     WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
       AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
         SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
         FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
       )
     GROUP BY m."region", "Year"
   ) sub
   ORDER BY "region", "Year"
   LIMIT 100
Results:
region,Year,Average_Purchase_Cost,Previous_Year_Cost,Annual_Percentage_Change
Africa,2018,37842.109534864954,,
Africa,2019,38428.126848260625,37842.109534864954,1.55
Africa,2020,59017.73746956841,38428.126848260625,53.58
Africa,2021,226985.82601379423,59017.73746956841,284.61
Asia,2018,37574.66661365357,,
Asia,2019,37788.848710684775,37574.66661365357,0.57
Asia,2020,55915.500112458874,37788.848710684775,47.97
Asia,2021,221270.57613980304,55915.500112458874,295.72
Australia,2018,38943.2797734344,,
Australia,2019,36021.32609038528,38943.2797734344,-7.5
Australia,2020,57530.75762744611,36021.32609038528,59.71
Australia,2021,222981.1552580532,57530.75762744611,287.59
India,2018,43848.94149087004,,
India,2019,38827.48889570979,43848.94149087004,-11.45
India,2020,47785.79291238492,38827.48889570979,23.07
India,2021,225256.23798760015,47785.79291238492,371.39
United States,2018,38072.97085451416,,
United States,2019,37823.211058340705,38072.97085451416,-0.66
United States,2020,55070.706240028645,37823.211058340705,45.6
United States,2021,221196.3977571301,55070.706240028645,301.66

2025-01-26 03:35:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:50 - root - INFO - SQL:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", SUM(t."quantity" * p."price") AS "Total_Purchase_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" 
     AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC'
   GROUP BY m."region", "Year"
   ORDER BY "Year", m."region"
   LIMIT 100
Results:
region,Year,Total_Purchase_Cost
Africa,2017,3677538.065828039
Asia,2017,4318801.991352027
Australia,2017,13303974.152402714
India,2017,3305189.3701415174
United States,2017,22222934.575095817
Africa,2018,7568421.90697299
Asia,2018,7627657.322571675
Australia,2018,22509215.709045082
India,2018,6270398.633194416
United States,2018,41118808.522875294
Africa,2019,6033215.915176918
Asia,2019,7595558.59084764
Australia,2019,21036454.436785
India,2019,7338395.401289149
United States,2019,40130426.93289949
Africa,2020,10623192.744522315
Asia,2020,12189579.024516035
Australia,2020,37107338.66970274
India,2020,9031514.86044075
United States,2020,61569049.57635202
Africa,2021,26103369.991586335
Asia,2021,33190586.42097046
Australia,2021,82057065.13496357
India,2021,23201392.512722816
United States,2021,154173889.23671967

2025-01-26 03:35:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:51 - root - INFO - SQL:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", COUNT(*) AS "Number_of_Purchases"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'BUY'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100
Results:
region,Year,Number_of_Purchases
Africa,2017,254
Asia,2017,296
Australia,2017,1283
India,2017,291
United States,2017,1940
Africa,2018,283
Asia,2018,300
Australia,2018,1231
India,2018,260
United States,2018,1919
Africa,2019,224
Asia,2019,310
Australia,2019,1286
India,2019,329
United States,2019,1892
Africa,2020,255
Asia,2020,291
Australia,2020,1314
India,2020,308
United States,2020,2015
Africa,2021,155
Asia,2021,223
Australia,2021,790
India,2021,181
United States,2021,1251

2025-01-26 03:35:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-26 03:35:52 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:53 - root - INFO - SQL:
SELECT DISTINCT t."ticker"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    LIMIT 100
Results:
ticker
BTC
ETH

2025-01-26 03:35:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:55 - root - INFO - SQL:
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "Year"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    WHERE EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
    ORDER BY "Year"
    LIMIT 100
Results:
Year
2018
2019
2020
2021

2025-01-26 03:35:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:56 - root - INFO - SQL:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."percentage_fee") AS "Average_Fee_Percentage"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'BUY'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100
Results:
region,Year,Average_Fee_Percentage
Africa,2017,0.2561811023622047
Asia,2017,0.26138513513513517
Australia,2017,0.25474668745128604
India,2017,0.26103092783505155
United States,2017,0.25894329896907214
Africa,2018,0.2559363957597173
Asia,2018,0.2588
Australia,2018,0.25244516653127536
India,2018,0.25003846153846154
United States,2018,0.2580667014069828
Africa,2019,0.2573214285714286
Asia,2019,0.24941935483870967
Australia,2019,0.25447900466562984
India,2019,0.24966565349544073
United States,2019,0.2534619450317125
Africa,2020,0.2511764705882353
Asia,2020,0.25140893470790376
Australia,2020,0.2520928462709285
India,2020,0.2536038961038961
United States,2020,0.2547990074441687
Africa,2021,0.2538064516129032
Asia,2021,0.2447085201793722
Australia,2021,0.2561139240506329
India,2021,0.25850828729281766
United States,2021,0.250863309352518

2025-01-26 03:35:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:58 - root - INFO - SQL:
SELECT m."region", SUM(t."quantity" * p."price") AS "Total_Purchase_Cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" 
      AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
    WHERE t."txn_type" = 'BUY' 
      AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) = (
        SELECT MAX(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
        FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
      )
    GROUP BY m."region"
    ORDER BY "Total_Purchase_Cost" DESC
    LIMIT 5
Results:
region,Total_Purchase_Cost
United States,160063665.90679538
Australia,86691863.7166932
Asia,33940756.71099331
Africa,26576591.240081146
India,24129154.704995528

2025-01-26 03:35:58 - root - INFO - itercount: 0
2025-01-26 03:35:58 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **Table:** `BITCOIN_TRANSACTIONS`
   - **"member_id"**: Used to link transactions to members to obtain the region.
   - **"txn_date"**: Used to extract the year for grouping and to exclude the first year's data.
   - **"txn_type"**: Used to filter for purchase transactions (`"txn_type"` = 'BUY').
   - **"quantity"**: Represents the amount of Bitcoin purchased; used in cost calculation.
   - **"percentage_fee"**: Used to calculate the total cost including fees.
   - **"ticker"**: Used to ensure transactions involve Bitcoin; condition could be (`"ticker"` = 'BTC').

2. **Table:** `BITCOIN_MEMBERS`
   - **"member_id"**: Links to transactions to identify the member's region.
   - **"region"**: Used to group transactions by region.

3. **Table:** `BITCOIN_PRICES`
   - **"market_date"**: Used to match the transaction date for accurate pricing.
   - **"price"**: The price of Bitcoin on a given date; used to calculate the cost of purchases.
   - **"ticker"**: Used to ensure prices are for Bitcoin; condition could be (`"ticker"` = 'BTC').

**Conditions to be Used:**
- Exclude the first year's data (need to determine the earliest year and filter it out).
- Filter transactions where `"txn_type"` = 'BUY'.
- Match `"ticker"` = 'BTC' to ensure data pertains to Bitcoin.
- Join tables on `"member_id"` and dates to link transactions with members and prices.

---

**SQL Queries:**

1. **View distinct transaction types in `BITCOIN_TRANSACTIONS`:**
   ```sql
   SELECT DISTINCT "txn_type"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
   LIMIT 100;
   ```

2. **List all regions from `BITCOIN_MEMBERS`:**
   ```sql
   SELECT DISTINCT "region"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS"
   LIMIT 100;
   ```

3. **Get the earliest and latest transaction dates:**
   ```sql
   SELECT MIN("txn_date") AS "Earliest_Date", MAX("txn_date") AS "Latest_Date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS";
   ```

4. **Count the number of transactions per year:**
   ```sql
   SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')) AS "Year", COUNT(*) AS "Transaction_Count"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
   GROUP BY "Year"
   ORDER BY "Year"
   LIMIT 100;
   ```

5. **Get average Bitcoin price per year from `BITCOIN_PRICES`:**
   ```sql
   SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'YYYY-MM-DD')) AS "Year", AVG("price") AS "Average_Price"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES"
   WHERE "ticker" = 'BTC'
   GROUP BY "Year"
   ORDER BY "Year"
   LIMIT 100;
   ```

6. **List transactions with member regions (join transactions and members):**
   ```sql
   SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
   ON t."member_id" = m."member_id"
   LIMIT 100;
   ```

7. **Filter purchase transactions and exclude the first year:**
   ```sql
   SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
   ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY' AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) > (SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
   LIMIT 100;
   ```

8. **Calculate total quantity purchased per region per year:**
   ```sql
   SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", SUM(t."quantity") AS "Total_Quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
   ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY'
   GROUP BY m."region", "Year"
   ORDER BY "Year", m."region"
   LIMIT 100;
   ```

9. **Join transactions with prices to get cost per transaction:**
   ```sql
   SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."quantity", p."price", (t."quantity" * p."price") AS "Transaction_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
   ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
   ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC'
   LIMIT 100;
   ```

10. **Calculate average purchase cost per region per year excluding the first year:**
    ```sql
    SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) > (SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    GROUP BY m."region", "Year"
    ORDER BY "Year", "Average_Purchase_Cost" DESC
    LIMIT 100;
    ```

11. **Rank regions based on average purchase cost per year:**
    ```sql
    SELECT "Year", "region", "Average_Purchase_Cost", RANK() OVER (PARTITION BY "Year" ORDER BY "Average_Purchase_Cost" DESC) AS "Rank"
    FROM (
      SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) > (SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
      GROUP BY m."region", "Year"
    ) sub
    ORDER BY "Year", "Rank"
    LIMIT 100;
    ```

12. **Calculate annual percentage change in average purchase cost per region:**
    ```sql
    SELECT "region", "Year", "Average_Purchase_Cost",
      LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year") AS "Previous_Year_Cost",
      ROUND((("Average_Purchase_Cost" - LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year")) / LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year")) * 100, 2) AS "Annual_Percentage_Change"
    FROM (
      SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) > (SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
      GROUP BY m."region", "Year"
    ) sub
    ORDER BY "region", "Year"
    LIMIT 100;
    ```

13. **Total purchase cost per region per year:**
    ```sql
    SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", SUM(t."quantity" * p."price") AS "Total_Purchase_Cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100;
    ```

14. **Number of purchase transactions per region per year:**
    ```sql
    SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", COUNT(*) AS "Number_of_Purchases"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'BUY'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100;
    ```

15. **Verify if all transactions involve Bitcoin (`"ticker"` = 'BTC'):**
    ```sql
    SELECT DISTINCT t."ticker"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    LIMIT 100;
    ```

16. **List of years available in the data (excluding the first year):**
    ```sql
    SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')) AS "Year"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    WHERE EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')) > (SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    ORDER BY "Year"
    LIMIT 100;
    ```

17. **Average fee percentage per region per year:**
    ```sql
    SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "Year", AVG(t."percentage_fee") AS "Average_Fee_Percentage"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'BUY'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100;
    ```

18. **Top 5 regions by total purchase cost in the latest year:**
    ```sql
    SELECT m."region", SUM(t."quantity" * p."price") AS "Total_Purchase_Cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY' AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) = (SELECT MAX(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    GROUP BY m."region"
    ORDER BY "Total_Purchase_Cost" DESC
    LIMIT 5;
    ```

These queries explore the data related to Bitcoin purchases, members, and prices, helping to understand how to calculate the yearly average cost of Bitcoin purchases by region, exclude the first year's data, rank regions based on the averages, and calculate the annual percentage change in cost.Query:
SELECT DISTINCT "txn_type"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
   LIMIT 100;
Answer:
txn_type
BUY
SELL
Query:
SELECT DISTINCT "region"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS"
   LIMIT 100;
Answer:
region
Australia
United States
Africa
India
Asia
Query:
SELECT MIN("txn_date") AS "Earliest_Date", MAX("txn_date") AS "Latest_Date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS";
Answer:
Earliest_Date,Latest_Date
01-01-2017,31-12-2020
Query:
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "Year", COUNT(*) AS "Transaction_Count"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
GROUP BY "Year"
ORDER BY "Year"
LIMIT 100;
Answer:
Year,Transaction_Count
2017,4918
2018,4856
2019,4908
2020,5047
2021,3189
Query:
SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'DD-MM-YYYY')) AS "Year", AVG("price") AS "Average_Price"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES"
   WHERE "ticker" = 'BTC'
   GROUP BY "Year"
   ORDER BY "Year"
   LIMIT 100
Answer:
Year,Average_Price
2017,3981.072328767123
2018,7552.158356164383
2019,7371.821917808219
2020,11111.631147540984
2021,44353.54979253112
Query:
SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   LIMIT 100
Answer:
txn_id,member_id,region,txn_date,txn_type,quantity
1,c81e72,United States,01-01-2017,BUY,50.0
2,eccbc8,United States,01-01-2017,BUY,50.0
3,a87ff6,United States,01-01-2017,BUY,50.0
4,e4da3b,United States,01-01-2017,BUY,50.0
5,167909,United States,01-01-2017,BUY,50.0
6,c4ca42,Australia,01-01-2017,BUY,50.0
7,8f14e4,United States,01-01-2017,BUY,50.0
8,c9f0f8,United States,01-01-2017,BUY,50.0
9,45c48c,Australia,01-01-2017,BUY,50.0
10,d3d944,Africa,01-01-2017,BUY,50.0
11,6512bd,India,01-01-2017,BUY,50.0
12,c20ad4,Asia,01-01-2017,BUY,50.0
13,c51ce4,Australia,01-01-2017,BUY,50.0
14,aab323,Australia,01-01-2017,BUY,50.0
15,167909,United States,01-01-2017,BUY,50.0
16,c4ca42,Australia,01-01-2017,BUY,50.0
17,c81e72,United States,01-01-2017,BUY,50.0
18,eccbc8,United States,01-01-2017,BUY,50.0
19,a87ff6,United States,01-01-2017,BUY,50.0
20,e4da3b,United States,01-01-2017,BUY,50.0
21,8f14e4,United States,01-01-2017,BUY,50.0
22,c9f0f8,United States,01-01-2017,BUY,50.0
23,45c48c,Australia,01-01-2017,BUY,50.0
24,d3d944,Africa,01-01-2017,BUY,50.0
25,6512bd,India,01-01-2017,BUY,50.0
26,c20ad4,Asia,01-01-2017,BUY,50.0
27,c51ce4,Australia,01-01-2017,BUY,50.0
28,aab323,Australia,01-01-2017,BUY,50.0
29,aab323,Australia,01-01-2017,SELL,9.562185136
30,6512bd,India,01-01-2017,BUY,8.842987018
31,6512bd,India,01-01-2017,BUY,2.271062586
32,c20ad4,Asia,01-01-2017,BUY,6.101895756
33,c20ad4,Asia,01-01-2017,SELL,1.146313066
34,c9f0f8,United States,01-01-2017,BUY,7.511535595
35,6512bd,India,01-01-2017,BUY,6.73841781
36,6512bd,India,01-01-2017,BUY,9.378757912
37,c20ad4,Asia,01-01-2017,BUY,4.394808986
38,45c48c,Australia,01-01-2017,BUY,4.666031683
39,c20ad4,Asia,01-01-2017,BUY,3.563597579
40,c20ad4,Asia,01-01-2017,BUY,3.531484029
41,a87ff6,United States,01-01-2017,BUY,1.98666102
42,c81e72,United States,01-01-2017,BUY,2.156824502
43,8f14e4,United States,01-01-2017,BUY,4.112440109
44,c51ce4,Australia,01-01-2017,SELL,8.889890678
45,167909,United States,01-01-2017,BUY,8.129992969
46,eccbc8,United States,02-01-2017,BUY,3.729789722
47,45c48c,Australia,02-01-2017,BUY,1.443256636
48,d3d944,Africa,02-01-2017,SELL,8.339030859
49,a87ff6,United States,02-01-2017,BUY,8.786735207
50,c51ce4,Australia,02-01-2017,BUY,1.695672235
51,167909,United States,02-01-2017,BUY,4.732996255
52,e4da3b,United States,02-01-2017,BUY,1.371663219
53,a87ff6,United States,02-01-2017,BUY,5.959804819
54,aab323,Australia,02-01-2017,BUY,9.810761938
55,6512bd,India,02-01-2017,BUY,5.543838119
56,d3d944,Africa,02-01-2017,SELL,0.617022836
57,d3d944,Africa,02-01-2017,BUY,8.675939586
58,aab323,Australia,02-01-2017,BUY,0.150368926
59,c4ca42,Australia,02-01-2017,BUY,6.079650398
60,a87ff6,United States,02-01-2017,BUY,9.011177226
61,aab323,Australia,02-01-2017,BUY,1.029599926
62,c20ad4,Asia,02-01-2017,SELL,3.687415614
63,6512bd,India,02-01-2017,BUY,5.043726097
64,a87ff6,United States,02-01-2017,BUY,1.377159083
65,6512bd,India,02-01-2017,BUY,3.012760299
66,c4ca42,Australia,02-01-2017,BUY,1.194319601
67,c51ce4,Australia,02-01-2017,SELL,6.14200575
68,aab323,Australia,02-01-2017,BUY,8.876596041
69,c51ce4,Australia,03-01-2017,BUY,1.791975102
70,45c48c,Australia,03-01-2017,BUY,7.265296941
71,c51ce4,Australia,03-01-2017,BUY,0.494025068
72,8f14e4,United States,03-01-2017,BUY,5.469869519
73,8f14e4,United States,03-01-2017,SELL,3.704582949
74,e4da3b,United States,03-01-2017,SELL,5.375890939
75,d3d944,Africa,03-01-2017,BUY,1.248782979
76,eccbc8,United States,03-01-2017,SELL,6.681740169
77,a87ff6,United States,03-01-2017,BUY,3.807694538
78,aab323,Australia,03-01-2017,SELL,1.120028576
79,aab323,Australia,03-01-2017,BUY,0.451011553
80,c20ad4,Asia,03-01-2017,BUY,9.201727658
81,d3d944,Africa,03-01-2017,SELL,3.441259193
82,e4da3b,United States,03-01-2017,BUY,5.159655392
83,c9f0f8,United States,03-01-2017,BUY,2.22039025
84,c9f0f8,United States,03-01-2017,BUY,1.14515606
85,eccbc8,United States,04-01-2017,BUY,9.316518093
86,c4ca42,Australia,04-01-2017,BUY,7.736987566
87,d3d944,Africa,04-01-2017,BUY,9.147450149
88,d3d944,Africa,04-01-2017,SELL,9.402255852
89,a87ff6,United States,04-01-2017,BUY,5.686772069
90,c20ad4,Asia,04-01-2017,BUY,1.315816748
91,8f14e4,United States,04-01-2017,BUY,2.639010923
92,c9f0f8,United States,04-01-2017,BUY,9.448890603
93,a87ff6,United States,04-01-2017,BUY,8.137724997
94,c9f0f8,United States,04-01-2017,BUY,4.181393763
95,e4da3b,United States,04-01-2017,BUY,2.927012834
96,aab323,Australia,04-01-2017,BUY,7.637093177
97,a87ff6,United States,04-01-2017,BUY,9.12200761
98,c51ce4,Australia,04-01-2017,BUY,7.328769521
99,6512bd,India,04-01-2017,BUY,1.831004047
100,c20ad4,Asia,04-01-2017,BUY,8.782296318
Query:
SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."txn_type", t."quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY' 
     AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
       SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
       FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
     )
   LIMIT 100
Answer:
Too long, hard cut:
txn_id,member_id,region,txn_date,txn_type,quantity
4919,c20ad4,Asia,01-01-2018,BUY,0.407136209
4920,eccbc8,United States,01-01-2018,BUY,2.741420209
4921,6512bd,India,01-01-2018,BUY,8.539226321
4922,a87ff6,United States,01-01-2018,BUY,5.170061539
4923,6512bd,India,01-01-2018,BUY,0.074113608
4925,8f14e4,United States,01-01-2018,BUY,4.3282248
4926,45c48c,Australia,01-01-2018,BUY,2.241271644
4927,c81e72,United States,01-01-2018,BUY,5.803479501
4928,45c48c,Australia,01-01-2018,BUY,4.966686274
4929,c81e72,United States,02-01-2018,BUY,0.328733309
4931,8f14e4,United States,02-01-2018,BUY,4.590186885
4932,45c48c,Australia,02-01-2018,BUY,9.71618361
4933,c81e72,United States,02-01-2018,BUY,5.590562217
4934,c20ad4,Asia,02-01-2018,BUY,2.27825909
4935,c4ca42,Australia,02-01-2018,BUY,0.724803624
4937,c51ce4,Australia,02-01-2018,BUY,3.194625407
4939,aab323,Australia,03-01-2018,BUY,2.190052182
4941,a87ff6,United States,03-01-2018,BUY,4.768887356
4942,e4da3b,United States,03-01-2018,BUY,0.061567767
4943,e4da3b,United States,03-01-2018,BUY,7.674874963
4944,e4da3b,United States,03-01-2018,BUY,0.472330464
4946,c20ad4,Asia,03-01-2018,BUY,4.843274999
4947,a87ff6,United States,03-01-2018,BUY,3.142296863
4948,e4da3b,United States,03-01-2018,BUY,7.910013155
4950,c9f0f8,United States,03-01-2018,BUY,2.910222314
4951,167909,United States,03-01-2018,BUY,9.7167457
4952,c9f0f8,United States,04-01-2018,BUY,2.714622589
4953,e4da3b,United States,04-01-2018,BUY,7.883334406
4954,45c48c,Australia,04-01-2018,BUY,1.209291946
4955,d3d944,Africa,04-01-2018,BUY,3.849369354
4956,8f14e4,United States,04-01-2018,BUY,4.597497309
4957,45c48c,Australia,04-01-2018,BUY,7.091802032
4958,8f14e4,United States,04-01-2018,BUY,8.767067683
4959,c20ad4,Asia,04-01-2018,BUY,6.651596225
4960,c20ad4,Asia,04-01-2018,BUY,0.648045919
4962,c4ca42,Australia,04-01-2018,BUY,3.039219589
4964,167909,United States,05-01-2018,BUY,3.302876939
4966,eccbc8,United States,05-01-2018,BUY,5.057805113
4968,c4ca42,Australia,05-01-2018,BUY,8.977609231
4969,aab323,Australia,05-01-2018,BUY,4.643296646
4970,6512bd,India,05-01-2018,BUY,9.499334392
4971,8f14e4,United States,05-01-2018,BUY,3.515200551
4972,c9f0f8,United States,05-01-2018,BUY,3.707454861
4973,45c48c,Australia,06-01-2018,BUY,4.558494446
4974,aab323,Australia,06-01-2018,BUY,5.146343874
4975,c4ca42,Australia,06-01-2018,BUY,5.112630255
4976,eccbc8,United States,06-01-2018,BUY,2.279031208
4977,c81e72,United States,06-01-2018,BUY,4.067866654
4978,8f14e4,United States,06-01-2018,BUY,6.399031362
4979,e4da3b,United States,06-01-2018,BUY,9.126177538
4981,c20ad4,Asia,06-01-2018,BUY,5.299147112
4982,c81e72,United States,06-01-2018,BUY,6.56314205
4983,c81e72,United States,07-01-2018,BUY,9.204403154
4984,c20ad4,Asia,07-01-2018,BUY,7.084328244
4986,c51ce4,Australia,07-01-2018,BUY,1.145497923
4987,c9f0f8,United States,07-01-2018,BUY,4.868415875
4989,e4da3b,United States,07-01-2018,BUY,3.950216668
4991,8f14e4,United States,07-01-2018,BUY,0.648623103
4992,c9f0f8,United States,07-01-2018,BUY,7.957292552
4993,eccbc8,United States,07-01-2018,BUY,4.718985635
4996,167909,United States,07-01-2018,BUY,3.784260027
4997,c20ad4,Asia,07-01-2018,BUY,4.817781415
4998,d3d944,Africa,07-01-2018,BUY,2.020532076
4999,a87ff6,United States,07-01-2018,BUY,8.891840553
5003,c9f0f8,United States,07-01-2018,BUY,5.926334983
5004,8f14e4,United States,08-01-2018,BUY,2.272544416
5005,c9f0f8,United States,08-01-2018,BUY,2.35696904
5006,c51ce4,Australia,08-01-2018,BUY,3.265401355
5008,c4ca42,Australia,08-01-2018,BUY,5.821506238
5009,c81e72,United States,08-01-2018,BUY,9.232601378
5010,eccbc8,United States,08-01-2018,BUY,6.991374067
5011,aab323,Australia,08-01-2018,BUY,4.298960646
5012,a87ff6,United States,08-01-2018,BUY,4.929261282
5013,45c48c,Australia,09-01-2018,BUY,7.628016458
5014,167909,United States,09-01-2018,BUY,3.751491005
5015,c4ca42,Australia,09-01-2018,BUY,8.538014844
5016,c51ce4,Australia,09-01-2018,BUY,4.954165961
5017,d3d944,Africa,09-01-2018,BUY,5.459463577
5018,45c48c,Australia,09-01-2018,BUY,4.033072302
5019,d3d944,Africa,09-01-2018,BUY,5.899887754
5020,c20ad4,Asia,09-01-2018,BUY,7.55546578
5021,6512bd,India,09-01-2018,BUY,0.20312066
5022,45c48c,Australia,09-01-2018,BUY,2.023324226
5023,eccbc8,United States,09-01-2018,BUY,0.877796515
5024,c4ca42,Australia,09-01-2018,BUY,6.082980559
5026,c81e72,United States,09-01-2018,BUY,1.419904154
5027,c81e72,United States,09-01-2018,BUY,3.680605497
5029,c20ad4,Asia,09-01-2018,BUY,0.748010093
5030,45c48c,Australia,09-01-2018,BUY,6.204433641
5033,167909,United States,10-01-2018,BUY,9.123298795
5034,c51ce4,Australia,10-01-2018,BUY,3.801325425
5036,c20ad4,Asia,10-01-2018,BUY,1.606911678
5037,c51ce4,Australia,10-01-2018,BUY,1.55306718
5038,167909,United States,10-01-2018,BUY,3.860773847
5039,c51ce4,Australia,10-01-2018,BUY,9.825345493
5041,c9f0f8,United States,10-01-2018,BUY,9.237639182
5043,aab323,Australia,10-01-2018,BUY,6.852746349
5044,d3d944,Africa,10-01-2018,BUY,9.186818182
5045,167909,United States,10-01-2018,BUY,5.06075
Query:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", SUM(t."quantity") AS "Total_Quantity"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   WHERE t."txn_type" = 'BUY'
   GROUP BY m."region", "Year"
   ORDER BY "Year", m."region"
   LIMIT 100
Answer:
region,Year,Total_Quantity
Africa,2017,1413.311543373
Asia,2017,1519.935962797
Australia,2017,6813.260548
India,2017,1571.879709356
United States,2017,10433.219711331
Africa,2018,1377.956583302
Asia,2018,1442.25975353
Australia,2018,6227.724489253
India,2018,1348.171749978
United States,2018,9525.955557094
Africa,2019,1095.784869418
Asia,2019,1619.618441392
Australia,2019,6406.885041362
India,2019,1572.679575812
United States,2019,9531.629794916
Africa,2020,1336.540782422
Asia,2020,1496.525352338
Australia,2020,6608.306619856
India,2020,1527.423962425
United States,2020,10064.238477836
Africa,2021,791.917860565
Asia,2021,1084.526571265
Australia,2021,3938.028788841
India,2021,952.759891233
United States,2021,6148.806656713
Query:
SELECT t."txn_id", t."member_id", m."region", t."txn_date", t."quantity", p."price", (t."quantity" * p."price") AS "Transaction_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" 
     AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC'
   LIMIT 100
Answer:
Too long, hard cut:
txn_id,member_id,region,txn_date,quantity,price,Transaction_Cost
1,c81e72,United States,01-01-2017,50.0,995.4,49770.0
2,eccbc8,United States,01-01-2017,50.0,995.4,49770.0
3,a87ff6,United States,01-01-2017,50.0,995.4,49770.0
4,e4da3b,United States,01-01-2017,50.0,995.4,49770.0
5,167909,United States,01-01-2017,50.0,995.4,49770.0
6,c4ca42,Australia,01-01-2017,50.0,995.4,49770.0
7,8f14e4,United States,01-01-2017,50.0,995.4,49770.0
8,c9f0f8,United States,01-01-2017,50.0,995.4,49770.0
9,45c48c,Australia,01-01-2017,50.0,995.4,49770.0
10,d3d944,Africa,01-01-2017,50.0,995.4,49770.0
11,6512bd,India,01-01-2017,50.0,995.4,49770.0
12,c20ad4,Asia,01-01-2017,50.0,995.4,49770.0
13,c51ce4,Australia,01-01-2017,50.0,995.4,49770.0
14,aab323,Australia,01-01-2017,50.0,995.4,49770.0
31,6512bd,India,01-01-2017,2.271062586,995.4,2260.6156981044
32,c20ad4,Asia,01-01-2017,6.101895756,995.4,6073.8270355224
35,6512bd,India,01-01-2017,6.73841781,995.4,6707.421088073999
36,6512bd,India,01-01-2017,9.378757912,995.4,9335.6156256048
37,c20ad4,Asia,01-01-2017,4.394808986,995.4,4374.5928646644
38,45c48c,Australia,01-01-2017,4.666031683,995.4,4644.5679372582
39,c20ad4,Asia,01-01-2017,3.563597579,995.4,3547.2050301366
43,8f14e4,United States,01-01-2017,4.112440109,995.4,4093.5228844985995
45,167909,United States,01-01-2017,8.129992969,995.4,8092.5950013426
46,eccbc8,United States,02-01-2017,3.729789722,1017.0,3793.196147274
50,c51ce4,Australia,02-01-2017,1.695672235,1017.0,1724.498662995
51,167909,United States,02-01-2017,4.732996255,1017.0,4813.457191335
53,a87ff6,United States,02-01-2017,5.959804819,1017.0,6061.121500923
55,6512bd,India,02-01-2017,5.543838119,1017.0,5638.083367023
57,d3d944,Africa,02-01-2017,8.675939586,1017.0,8823.430558962
58,aab323,Australia,02-01-2017,0.150368926,1017.0,152.92519774200002
59,c4ca42,Australia,02-01-2017,6.079650398,1017.0,6183.004454766
60,a87ff6,United States,02-01-2017,9.011177226,1017.0,9164.367238842
61,aab323,Australia,02-01-2017,1.029599926,1017.0,1047.1031247419999
65,6512bd,India,02-01-2017,3.012760299,1017.0,3063.977224083
66,c4ca42,Australia,02-01-2017,1.194319601,1017.0,1214.623034217
68,aab323,Australia,02-01-2017,8.876596041,1017.0,9027.498173697
69,c51ce4,Australia,03-01-2017,1.791975102,1033.3,1851.6478728966001
77,a87ff6,United States,03-01-2017,3.807694538,1033.3,3934.4907661153998
80,c20ad4,Asia,03-01-2017,9.201727658,1033.3,9508.145189011399
82,e4da3b,United States,03-01-2017,5.159655392,1033.3,5331.4719165536
83,c9f0f8,United States,03-01-2017,2.22039025,1033.3,2294.3292453249996
85,eccbc8,United States,04-01-2017,9.316518093,1135.4,10577.9746427922
86,c4ca42,Australia,04-01-2017,7.736987566,1135.4,8784.5756824364
87,d3d944,Africa,04-01-2017,9.147450149,1135.4,10386.014899174601
89,a87ff6,United States,04-01-2017,5.686772069,1135.4,6456.761007142601
90,c20ad4,Asia,04-01-2017,1.315816748,1135.4,1493.9783356792002
93,a87ff6,United States,04-01-2017,8.137724997,1135.4,9239.5729615938
95,e4da3b,United States,04-01-2017,2.927012834,1135.4,3323.3303717236004
98,c51ce4,Australia,04-01-2017,7.328769521,1135.4,8321.084914143401
100,c20ad4,Asia,04-01-2017,8.782296318,1135.4,9971.419239457202
101,c20ad4,Asia,04-01-2017,8.742448545,1135.4,9926.176077993001
102,c9f0f8,United States,05-01-2017,2.61926013,989.3,2591.2340466089995
103,c51ce4,Australia,05-01-2017,1.510491952,989.3,1494.3296881136
105,167909,United States,05-01-2017,6.413918106,989.3,6345.289182265799
106,eccbc8,United States,05-01-2017,9.808394015,989.3,9703.444199039499
107,c4ca42,Australia,05-01-2017,1.032755811,989.3,1021.7053238222999
108,a87ff6,United States,05-01-2017,9.49645508,989.3,9394.843010644
110,d3d944,Africa,05-01-2017,7.683720954,989.3,7601.5051397922
112,c9f0f8,United States,05-01-2017,4.888776093,989.3,4836.4661888048995
113,a87ff6,United States,06-01-2017,5.529125393,886.2,4899.9109232766
114,c20ad4,Asia,06-01-2017,8.524945201,886.2,7554.8064371262
115,d3d944,Africa,06-01-2017,1.748322551,886.2,1549.3634446962
116,c20ad4,Asia,06-01-2017,6.991081482,886.2,6195.4964093484
119,c20ad4,Asia,06-01-2017,6.590810059,886.2,5840.7758742858005
120,45c48c,Australia,06-01-2017,7.658162014,886.2,6786.663176806801
121,c20ad4,Asia,06-01-2017,2.566599204,886.2,2274.5202145848
125,eccbc8,United States,07-01-2017,0.328722011,888.9,292.20099557789996
126,eccbc8,United States,07-01-2017,2.394607993,888.9,2128.5670449777
127,c20ad4,Asia,07-01-2017,5.067220196,888.9,4504.2520322244
129,c51ce4,Australia,07-01-2017,9.909703431,888.9,8808.7353798159
130,eccbc8,United States,07-01-2017,9.29903604,888.9,8265.913135956
137,c20ad4,Asia,07-01-2017,4.560200717,888.9,4053.5624173413
146,a87ff6,United States,08-01-2017,0.736037551,900.9,663.0962296959
149,a87ff6,United States,09-01-2017,4.507221468,899.8,4055.5978769064
150,c4ca42,Australia,09-01-2017,8.691715683,899.8,7820.8057715633995
152,6512bd,India,09-01-2017,4.333978386,899.8,3899.7137517227998
158,e4da3b,United States,10-01-2017,6.034007635,904.4,5457.156505094
161,c51ce4,Australia,10-01-2017
Query:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" 
     AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
     AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
       SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
       FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
     )
   GROUP BY m."region", "Year"
   ORDER BY "Year", "Average_Purchase_Cost" DESC
   LIMIT 100
Answer:
region,Year,Average_Purchase_Cost
India,2018,43848.94149087004
Australia,2018,38943.2797734344
United States,2018,38072.97085451416
Africa,2018,37842.109534864954
Asia,2018,37574.66661365357
India,2019,38827.48889570979
Africa,2019,38428.126848260625
United States,2019,37823.211058340705
Asia,2019,37788.848710684775
Australia,2019,36021.32609038528
Africa,2020,59017.73746956841
Australia,2020,57530.75762744611
Asia,2020,55915.500112458874
United States,2020,55070.706240028645
India,2020,47785.79291238492
Africa,2021,226985.82601379423
India,2021,225256.23798760015
Australia,2021,222981.1552580532
Asia,2021,221270.57613980304
United States,2021,221196.3977571301
Query:
SELECT "Year", "region", "Average_Purchase_Cost", RANK() OVER (PARTITION BY "Year" ORDER BY "Average_Purchase_Cost" DESC) AS "Rank"
   FROM (
     SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
     FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
       ON t."member_id" = m."member_id"
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
       ON t."ticker" = p."ticker" 
       AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
     WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
       AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
         SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
         FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
       )
     GROUP BY m."region", "Year"
   ) sub
   ORDER BY "Year", "Rank"
   LIMIT 100
Answer:
Year,region,Average_Purchase_Cost,Rank
2018,India,43848.94149087004,1
2018,Australia,38943.2797734344,2
2018,United States,38072.97085451416,3
2018,Africa,37842.109534864954,4
2018,Asia,37574.66661365357,5
2019,India,38827.48889570979,1
2019,Africa,38428.126848260625,2
2019,United States,37823.211058340705,3
2019,Asia,37788.848710684775,4
2019,Australia,36021.32609038528,5
2020,Africa,59017.73746956841,1
2020,Australia,57530.75762744611,2
2020,Asia,55915.500112458874,3
2020,United States,55070.706240028645,4
2020,India,47785.79291238492,5
2021,Africa,226985.82601379423,1
2021,India,225256.23798760015,2
2021,Australia,222981.1552580532,3
2021,Asia,221270.57613980304,4
2021,United States,221196.3977571301,5
Query:
SELECT "region", "Year", "Average_Purchase_Cost",
     LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year") AS "Previous_Year_Cost",
     ROUND((("Average_Purchase_Cost" - LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year")) 
       / LAG("Average_Purchase_Cost") OVER (PARTITION BY "region" ORDER BY "Year")) * 100, 2) AS "Annual_Percentage_Change"
   FROM (
     SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
     FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
       ON t."member_id" = m."member_id"
     JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
       ON t."ticker" = p."ticker" 
       AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
     WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC' 
       AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
         SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
         FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
       )
     GROUP BY m."region", "Year"
   ) sub
   ORDER BY "region", "Year"
   LIMIT 100
Answer:
region,Year,Average_Purchase_Cost,Previous_Year_Cost,Annual_Percentage_Change
Africa,2018,37842.109534864954,,
Africa,2019,38428.126848260625,37842.109534864954,1.55
Africa,2020,59017.73746956841,38428.126848260625,53.58
Africa,2021,226985.82601379423,59017.73746956841,284.61
Asia,2018,37574.66661365357,,
Asia,2019,37788.848710684775,37574.66661365357,0.57
Asia,2020,55915.500112458874,37788.848710684775,47.97
Asia,2021,221270.57613980304,55915.500112458874,295.72
Australia,2018,38943.2797734344,,
Australia,2019,36021.32609038528,38943.2797734344,-7.5
Australia,2020,57530.75762744611,36021.32609038528,59.71
Australia,2021,222981.1552580532,57530.75762744611,287.59
India,2018,43848.94149087004,,
India,2019,38827.48889570979,43848.94149087004,-11.45
India,2020,47785.79291238492,38827.48889570979,23.07
India,2021,225256.23798760015,47785.79291238492,371.39
United States,2018,38072.97085451416,,
United States,2019,37823.211058340705,38072.97085451416,-0.66
United States,2020,55070.706240028645,37823.211058340705,45.6
United States,2021,221196.3977571301,55070.706240028645,301.66
Query:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", SUM(t."quantity" * p."price") AS "Total_Purchase_Cost"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
     ON t."member_id" = m."member_id"
   JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
     ON t."ticker" = p."ticker" 
     AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
   WHERE t."txn_type" = 'BUY' AND t."ticker" = 'BTC'
   GROUP BY m."region", "Year"
   ORDER BY "Year", m."region"
   LIMIT 100
Answer:
region,Year,Total_Purchase_Cost
Africa,2017,3677538.065828039
Asia,2017,4318801.991352027
Australia,2017,13303974.152402714
India,2017,3305189.3701415174
United States,2017,22222934.575095817
Africa,2018,7568421.90697299
Asia,2018,7627657.322571675
Australia,2018,22509215.709045082
India,2018,6270398.633194416
United States,2018,41118808.522875294
Africa,2019,6033215.915176918
Asia,2019,7595558.59084764
Australia,2019,21036454.436785
India,2019,7338395.401289149
United States,2019,40130426.93289949
Africa,2020,10623192.744522315
Asia,2020,12189579.024516035
Australia,2020,37107338.66970274
India,2020,9031514.86044075
United States,2020,61569049.57635202
Africa,2021,26103369.991586335
Asia,2021,33190586.42097046
Australia,2021,82057065.13496357
India,2021,23201392.512722816
United States,2021,154173889.23671967
Query:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", COUNT(*) AS "Number_of_Purchases"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'BUY'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100
Answer:
region,Year,Number_of_Purchases
Africa,2017,254
Asia,2017,296
Australia,2017,1283
India,2017,291
United States,2017,1940
Africa,2018,283
Asia,2018,300
Australia,2018,1231
India,2018,260
United States,2018,1919
Africa,2019,224
Asia,2019,310
Australia,2019,1286
India,2019,329
United States,2019,1892
Africa,2020,255
Asia,2020,291
Australia,2020,1314
India,2020,308
United States,2020,2015
Africa,2021,155
Asia,2021,223
Australia,2021,790
India,2021,181
United States,2021,1251
Query:
SELECT DISTINCT t."ticker"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    LIMIT 100
Answer:
ticker
BTC
ETH
Query:
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "Year"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    WHERE EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
    ORDER BY "Year"
    LIMIT 100
Answer:
Year
2018
2019
2020
2021
Query:
SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", AVG(t."percentage_fee") AS "Average_Fee_Percentage"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'BUY'
    GROUP BY m."region", "Year"
    ORDER BY "Year", m."region"
    LIMIT 100
Answer:
region,Year,Average_Fee_Percentage
Africa,2017,0.2561811023622047
Asia,2017,0.26138513513513517
Australia,2017,0.25474668745128604
India,2017,0.26103092783505155
United States,2017,0.25894329896907214
Africa,2018,0.2559363957597173
Asia,2018,0.2588
Australia,2018,0.25244516653127536
India,2018,0.25003846153846154
United States,2018,0.2580667014069828
Africa,2019,0.2573214285714286
Asia,2019,0.24941935483870967
Australia,2019,0.25447900466562984
India,2019,0.24966565349544073
United States,2019,0.2534619450317125
Africa,2020,0.2511764705882353
Asia,2020,0.25140893470790376
Australia,2020,0.2520928462709285
India,2020,0.2536038961038961
United States,2020,0.2547990074441687
Africa,2021,0.2538064516129032
Asia,2021,0.2447085201793722
Australia,2021,0.2561139240506329
India,2021,0.25850828729281766
United States,2021,0.250863309352518
Query:
SELECT m."region", SUM(t."quantity" * p."price") AS "Total_Purchase_Cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" 
      AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
    WHERE t."txn_type" = 'BUY' 
      AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) = (
        SELECT MAX(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
        FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
      )
    GROUP BY m."region"
    ORDER BY "Total_Purchase_Cost" DESC
    LIMIT 5
Answer:
region,Total_Purchase_Cost
United States,160063665.90679538
Australia,86691863.7166932
Asia,33940756.71099331
Africa,26576591.240081146
India,24129154.704995528
End Exploring Related Columns
Task: Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-26 03:36:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:36:41 - root - INFO - ```sql
SELECT
  sub."Year",
  sub."region" AS "Region",
  ROUND(sub."Average_Purchase_Cost", 4) AS "Average_Purchase_Cost",
  RANK() OVER (PARTITION BY sub."Year" ORDER BY sub."Average_Purchase_Cost" DESC) AS "Rank",
  ROUND(
    (sub."Average_Purchase_Cost" - LAG(sub."Average_Purchase_Cost") OVER (PARTITION BY sub."region" ORDER BY sub."Year"))
    / NULLIF(LAG(sub."Average_Purchase_Cost") OVER (PARTITION BY sub."region" ORDER BY sub."Year"), 0) * 100, 2)
    AS "Annual_Percentage_Change"
FROM (
  SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", 
         AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" 
    AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
  WHERE t."txn_type" = 'BUY' 
    AND t."ticker" = 'BTC' 
    AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
  GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
) sub
ORDER BY sub."Year", "Rank";
```
2025-01-26 03:36:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:36:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:36:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:36:43 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:43 - root - INFO - itercount: 1
2025-01-26 03:36:43 - root - INFO - 0
2025-01-26 03:36:43 - root - INFO - results: 
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
2018,India,43848.9415,1,
2018,Australia,38943.2798,2,
2018,United States,38072.9709,3,
2018,Africa,37842.1095,4,
2018,Asia,37574.6666,5,
2019,India,38827.4889,1,-11.45
2019,Africa,38428.1268,2,1.55
2019,United States,37823.2111,3,-0.66
2019,Asia,37788.8487,4,0.57
2019,Australia,36021.3261,5,-7.5
2020,Africa,59017.7375,1,53.58
2020,Australia,57530.7576,2,59.71
2020,Asia,55915.5001,3,47.97
2020,United States,55070.7062,4,45.6
2020,India,47785.7929,5,23.07
2021,Africa,226985.826,1,284.61
2021,India,225256.238,2,371.39
2021,Australia,222981.1553,3,287.59
2021,Asia,221270.5761,4,295.72
2021,United States,221196.3978,5,301.66


2025-01-26 03:36:43 - root - INFO - Please check the answer again by reviewing Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
2018,India,43848.9415,1,
2018,Australia,38943.2798,2,
2018,United States,38072.9709,3,
2018,Africa,37842.1095,4,
2018,Asia,37574.6666,5,
2019,India,38827.4889,1,-11.45
2019,Africa,38428.1268,2,1.55
2019,United States,37823.2111,3,-0.66
2019,Asia,37788.8487,4,0.57
2019,Australia,36021.3261,5,-7.5
2020,Africa,59017.7375,1,53.58
2020,Australia,57530.7576,2,59.71
2020,Asia,55915.5001,3,47.97
2020,United States,55070.7062,4,45.6
2020,India,47785.7929,5,23.07
2021,Africa,226985.826,1,284.61
2021,India,225256.238,2,371.39
2021,Australia,222981.1553,3,287.59
2021,Asia,221270.5761,4,295.72
2021,United States,221196.3978,5,301.66
Current sql:
SELECT
  sub."Year",
  sub."region" AS "Region",
  ROUND(sub."Average_Purchase_Cost", 4) AS "Average_Purchase_Cost",
  RANK() OVER (PARTITION BY sub."Year" ORDER BY sub."Average_Purchase_Cost" DESC) AS "Rank",
  ROUND(
    (sub."Average_Purchase_Cost" - LAG(sub."Average_Purchase_Cost") OVER (PARTITION BY sub."region" ORDER BY sub."Year"))
    / NULLIF(LAG(sub."Average_Purchase_Cost") OVER (PARTITION BY sub."region" ORDER BY sub."Year"), 0) * 100, 2)
    AS "Annual_Percentage_Change"
FROM (
  SELECT m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", 
         AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" 
    AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
  WHERE t."txn_type" = 'BUY' 
    AND t."ticker" = 'BTC' 
    AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
  GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
) sub
ORDER BY sub."Year", "Rank";When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-26 03:37:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:37:09 - root - INFO - ```sql
SELECT
  sub."Year",
  sub."region" AS "Region",
  ROUND(sub."Average_Purchase_Cost", 4) AS "Average_Purchase_Cost",
  RANK() OVER (
    PARTITION BY sub."Year" 
    ORDER BY sub."Average_Purchase_Cost" DESC NULLS LAST
  ) AS "Rank",
  ROUND(
    (
      sub."Average_Purchase_Cost" - LAG(sub."Average_Purchase_Cost") OVER (PARTITION BY sub."region" ORDER BY sub."Year")
    ) / NULLIF(LAG(sub."Average_Purchase_Cost") OVER (PARTITION BY sub."region" ORDER BY sub."Year"), 0) * 100, 2
  ) AS "Annual_Percentage_Change"
FROM (
  SELECT 
    m."region", 
    EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year", 
    AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" 
    AND TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
  WHERE t."txn_type" = 'BUY' 
    AND t."ticker" = 'BTC' 
    AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
  GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
) sub
ORDER BY sub."Year", "Rank";
```
2025-01-26 03:37:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:37:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:37:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:37:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:37:10 - snowflake.connector.connection - INFO - closed
2025-01-26 03:37:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:37:11 - root - INFO - itercount: 2
2025-01-26 03:37:11 - root - INFO - 0
2025-01-26 03:37:11 - root - INFO - Total iteration counts: 2
