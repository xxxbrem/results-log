2025-01-26 03:32:42 - openai._base_client - INFO - Retrying request to /chat/completions in 0.457205 seconds
2025-01-26 03:33:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:33:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:40 - root - INFO - SQL:
-- 1. List distinct transaction types in BITCOIN_TRANSACTIONS
SELECT DISTINCT "txn_type"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
Results:
txn_type
BUY
SELL

2025-01-26 03:33:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:33:41 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:42 - root - INFO - SQL:
-- 2. Retrieve sample transaction dates and transaction IDs
SELECT "txn_id", "txn_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
Results:
txn_id,txn_date
1,01-01-2017
2,01-01-2017
3,01-01-2017
4,01-01-2017
5,01-01-2017
6,01-01-2017
7,01-01-2017
8,01-01-2017
9,01-01-2017
10,01-01-2017
11,01-01-2017
12,01-01-2017
13,01-01-2017
14,01-01-2017
15,01-01-2017
16,01-01-2017
17,01-01-2017
18,01-01-2017
19,01-01-2017
20,01-01-2017
21,01-01-2017
22,01-01-2017
23,01-01-2017
24,01-01-2017
25,01-01-2017
26,01-01-2017
27,01-01-2017
28,01-01-2017
29,01-01-2017
30,01-01-2017
31,01-01-2017
32,01-01-2017
33,01-01-2017
34,01-01-2017
35,01-01-2017
36,01-01-2017
37,01-01-2017
38,01-01-2017
39,01-01-2017
40,01-01-2017
41,01-01-2017
42,01-01-2017
43,01-01-2017
44,01-01-2017
45,01-01-2017
46,02-01-2017
47,02-01-2017
48,02-01-2017
49,02-01-2017
50,02-01-2017
51,02-01-2017
52,02-01-2017
53,02-01-2017
54,02-01-2017
55,02-01-2017
56,02-01-2017
57,02-01-2017
58,02-01-2017
59,02-01-2017
60,02-01-2017
61,02-01-2017
62,02-01-2017
63,02-01-2017
64,02-01-2017
65,02-01-2017
66,02-01-2017
67,02-01-2017
68,02-01-2017
69,03-01-2017
70,03-01-2017
71,03-01-2017
72,03-01-2017
73,03-01-2017
74,03-01-2017
75,03-01-2017
76,03-01-2017
77,03-01-2017
78,03-01-2017
79,03-01-2017
80,03-01-2017
81,03-01-2017
82,03-01-2017
83,03-01-2017
84,03-01-2017
85,04-01-2017
86,04-01-2017
87,04-01-2017
88,04-01-2017
89,04-01-2017
90,04-01-2017
91,04-01-2017
92,04-01-2017
93,04-01-2017
94,04-01-2017
95,04-01-2017
96,04-01-2017
97,04-01-2017
98,04-01-2017
99,04-01-2017
100,04-01-2017

2025-01-26 03:33:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:43 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:34:20 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:34:20 - root - INFO - It appears that the date format in the `"txn_date"` column is different from what was assumed. Based on the sample data you provided:

```
txn_id,txn_date
1,01-01-2017
2,01-01-2017
3,01-01-2017
...
```

The dates are in the format **'DD-MM-YYYY'** rather than **'YYYY-MM-DD'**.

The error message confirms this:

```
Can't parse '01-01-2017' as date with format 'YYYY-MM-DD'
```

**Solution:**

To resolve the error, we need to adjust the `TO_DATE` function to use the correct date format string that matches the data. Replace `'YYYY-MM-DD'` with `'DD-MM-YYYY'`.

**Corrected SQL Query:**

```sql
-- 3. Extract distinct years from transaction dates with corrected date format
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
ORDER BY "year"
LIMIT 100;
```

**Explanation:**

- **TO_DATE("txn_date", 'DD-MM-YYYY')**: This correctly interprets the transaction date strings in the format 'DD-MM-YYYY' and converts them into date values that SQL can process.

- **EXTRACT(YEAR FROM TO_DATE(...))**: Extracts the year component from the date.

- **ORDER BY "year"**: Orders the results by year.

**Next Steps:**

Since the date format was incorrect in the initial query, any other queries that involve parsing the `"txn_date"` or `"market_date"` columns need to be adjusted accordingly.

**Revised Queries Involving Dates:**

Below are the revised versions of the previously provided queries that involve date parsing.

---

```sql
-- 4. Count transactions per year with corrected date format
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year", COUNT(*) AS "transaction_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "year"
ORDER BY "year"
LIMIT 100;
```

```sql
-- 8. Average Bitcoin price per year with corrected date format
SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'DD-MM-YYYY')) AS "year", AVG("price") AS "average_price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
GROUP BY "year"
ORDER BY "year"
LIMIT 100;
```

```sql
-- 10. Transactions of type 'BUY' excluding the first year with corrected date format
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
LIMIT 100;
```

```sql
-- 11. Aggregate total purchased quantity per region and year with corrected date format
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       SUM(t."quantity") AS "total_quantity"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100;
```

```sql
-- 12. Sample transaction costs by joining with BITCOIN_PRICES with corrected date format
SELECT t."txn_id", t."txn_date", t."quantity", p."price",
       (t."quantity" * p."price") AS "transaction_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
LIMIT 100;
```

```sql
-- 13. Average transaction cost per region and year with corrected date format
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100;
```

```sql
-- 14. List regions ranked by average transaction cost per year, excluding the first year with corrected date format
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
GROUP BY m."region", "year"
ORDER BY "year", "average_cost" DESC
LIMIT 100;
```

```sql
-- 15. Calculate annual percentage change in average cost per region with corrected date format
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost",
       LAG(AVG(t."quantity" * p."price")) OVER (PARTITION BY m."region" ORDER BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))) AS "previous_year_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY m."region", "year"
LIMIT 100;
```

```sql
-- 17. Identify the earliest transaction date to determine the first year with corrected date format
SELECT MIN(TO_DATE("txn_date", 'DD-MM-YYYY')) AS "first_transaction_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS;
```

---

**Additional Note:**

For the joins in queries involving dates, ensure that the date formats are compatible. If both `"txn_date"` and `"market_date"` are in 'DD-MM-YYYY' format, then converting them using `TO_DATE()` with the same format will allow for accurate comparisons and joins.

**Proceeding with the Task:**

With the corrected queries, you should now be able to:

1. **Extract the years correctly.**

2. **Determine which year is the first year and exclude it from the analysis.**

3. **Calculate the yearly average cost of Bitcoin purchases by region.**

4. **Rank the regions based on these averages each year.**

5. **Calculate the annual percentage change in cost.**

---

**Sample Query to Fulfill the Task:**

Here's a comprehensive query that ties everything together.

```sql
-- Calculate yearly average cost, rank regions, and compute annual percentage change
WITH purchases AS (
  SELECT m."region",
         EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
         AVG(t."quantity" * p."price") AS "average_cost"
  FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
  JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
    ON t."member_id" = m."member_id"
  JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
    ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
  WHERE t."txn_type" = 'BUY'
    AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
      FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
    )
  GROUP BY m."region", "year"
),
ranked_purchases AS (
  SELECT *,
         RANK() OVER (PARTITION BY "year" ORDER BY "average_cost" DESC) AS "rank",
         LAG("average_cost") OVER (PARTITION BY m."region" ORDER BY "year") AS "previous_year_cost",
         CASE
           WHEN LAG("average_cost") OVER (PARTITION BY m."region" ORDER BY "year") IS NOT NULL THEN
             (( "average_cost" - LAG("average_cost") OVER (PARTITION BY m."region" ORDER BY "year") )
              / LAG("average_cost") OVER (PARTITION BY m."region" ORDER BY "year") ) * 100
         END AS "annual_percentage_change"
  FROM purchases
)
SELECT "year", "region", "average_cost", "rank", "annual_percentage_change"
FROM ranked_purchases
ORDER BY "year", "rank"
LIMIT 100;
```

**Explanation:**

- **purchases CTE:**
  - Calculates the average purchase cost per region and year, excluding the first year.
  
- **ranked_purchases CTE:**
  - Ranks regions based on the average cost for each year.
  - Calculates the previous year's average cost for each region.
  - Computes the annual percentage change in average cost for each region.

- **Final SELECT:**
  - Selects the required columns and orders the results by year and rank.

**Expected Output Format:**

```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

---

**Conclusion:**

By correcting the date format and adjusting the queries accordingly, you should be able to proceed with your analysis successfully. If you encounter any further issues, please let me know, and I'll be happy to assist.
2025-01-26 03:34:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:34:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:34:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:34:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:34:21 - snowflake.connector.connection - INFO - closed
2025-01-26 03:34:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:35:37 - root - INFO - SQL:
-- 3. Extract distinct years from transaction dates with corrected date format
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
ORDER BY "year"
LIMIT 100;
Results:
year
2017
2018
2019
2020
2021

2025-01-26 03:35:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:39 - root - INFO - SQL:
-- 4. Count transactions per year
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year", COUNT(*) AS "transaction_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "year"
ORDER BY "year"
LIMIT 100
Results:
year,transaction_count
2017,4918
2018,4856
2019,4908
2020,5047
2021,3189

2025-01-26 03:35:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 14
2025-01-26 03:35:40 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:41 - root - INFO - SQL:
-- 5. View member IDs with their regions from BITCOIN_MEMBERS
SELECT "member_id", "region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS
LIMIT 100
Results:
member_id,region
c4ca42,Australia
c81e72,United States
eccbc8,United States
a87ff6,United States
e4da3b,United States
167909,United States
8f14e4,United States
c9f0f8,United States
45c48c,Australia
d3d944,Africa
6512bd,India
c20ad4,Asia
c51ce4,Australia
aab323,Australia

2025-01-26 03:35:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:42 - root - INFO - SQL:
-- 6. Count of members per region
SELECT "region", COUNT("member_id") AS "member_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS
GROUP BY "region"
ORDER BY "member_count" DESC
LIMIT 100
Results:
region,member_count
United States,7
Australia,4
Africa,1
India,1
Asia,1

2025-01-26 03:35:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:44 - root - INFO - SQL:
-- 7. Retrieve Bitcoin prices with market dates
SELECT "market_date", "price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
LIMIT 100
Results:
market_date,price
29-08-2021,3177.84
28-08-2021,3243.9
27-08-2021,3273.58
26-08-2021,3093.54
25-08-2021,3228.15
24-08-2021,3173.26
23-08-2021,3319.49
22-08-2021,3238.7
21-08-2021,3223.96
20-08-2021,3284.21
19-08-2021,3184.82
18-08-2021,3016.91
17-08-2021,3014.58
16-08-2021,3147.65
15-08-2021,3308.87
14-08-2021,3264.69
13-08-2021,3322.43
12-08-2021,3043.61
11-08-2021,3163.66
10-08-2021,3140.71
09-08-2021,3162.93
08-08-2021,3012.07
07-08-2021,3158.0
06-08-2021,2889.43
05-08-2021,2827.21
04-08-2021,2725.29
03-08-2021,2506.65
02-08-2021,2608.04
01-08-2021,2556.23
31-07-2021,2532.19
30-07-2021,2460.95
29-07-2021,2380.93
28-07-2021,2299.11
27-07-2021,2300.22
26-07-2021,2229.53
25-07-2021,2189.79
24-07-2021,2151.85
23-07-2021,2123.61
22-07-2021,2024.58
21-07-2021,1994.49
20-07-2021,1786.07
19-07-2021,1818.07
18-07-2021,1892.42
17-07-2021,1897.98
16-07-2021,1878.2
15-07-2021,1917.21
14-07-2021,1994.64
13-07-2021,1940.72
12-07-2021,2035.09
11-07-2021,2139.35
10-07-2021,2111.12
09-07-2021,2145.89
08-07-2021,2120.22
07-07-2021,2316.57
06-07-2021,2322.72
05-07-2021,2196.16
04-07-2021,2323.22
03-07-2021,2224.7
02-07-2021,2154.78
01-07-2021,2109.11
30-06-2021,2273.84
29-06-2021,2158.71
28-06-2021,2083.09
27-06-2021,1979.88
26-06-2021,1830.62
25-06-2021,1810.57
24-06-2021,1989.14
23-06-2021,1968.39
22-06-2021,1876.66
21-06-2021,1891.18
20-06-2021,2243.86
19-06-2021,2166.91
18-06-2021,2229.53
17-06-2021,2371.62
16-06-2021,2367.28
15-06-2021,2543.83
14-06-2021,2581.48
13-06-2021,2508.27
12-06-2021,2368.47
11-06-2021,2351.45
10-06-2021,2469.97
09-06-2021,2606.23
08-06-2021,2510.65
07-06-2021,2592.63
06-06-2021,2713.66
05-06-2021,2628.98
04-06-2021,2686.5
03-06-2021,2853.35
02-06-2021,2706.1
01-06-2021,2633.67
31-05-2021,2708.47
30-05-2021,2386.1
29-05-2021,2276.07
28-05-2021,2414.29
27-05-2021,2735.88
26-05-2021,2884.66
25-05-2021,2705.09
24-05-2021,2646.79
23-05-2021,2101.34
22-05-2021,2291.6

2025-01-26 03:35:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:45 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:46 - root - INFO - SQL:
-- 8. Average Bitcoin price per year
SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'DD-MM-YYYY')) AS "year", AVG("price") AS "average_price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
GROUP BY "year"
ORDER BY "year"
LIMIT 100
Results:
year,average_price
2017,2100.7048493150687
2018,4016.7434657534245
2019,3776.4074520547942
2020,5709.463961748634
2021,23276.33315352697

2025-01-26 03:35:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:47 - root - INFO - SQL:
-- 9. Join transactions with member regions
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
LIMIT 100
Results:
txn_id,txn_date,txn_type,quantity,region
1,01-01-2017,BUY,50.0,United States
2,01-01-2017,BUY,50.0,United States
3,01-01-2017,BUY,50.0,United States
4,01-01-2017,BUY,50.0,United States
5,01-01-2017,BUY,50.0,United States
6,01-01-2017,BUY,50.0,Australia
7,01-01-2017,BUY,50.0,United States
8,01-01-2017,BUY,50.0,United States
9,01-01-2017,BUY,50.0,Australia
10,01-01-2017,BUY,50.0,Africa
11,01-01-2017,BUY,50.0,India
12,01-01-2017,BUY,50.0,Asia
13,01-01-2017,BUY,50.0,Australia
14,01-01-2017,BUY,50.0,Australia
15,01-01-2017,BUY,50.0,United States
16,01-01-2017,BUY,50.0,Australia
17,01-01-2017,BUY,50.0,United States
18,01-01-2017,BUY,50.0,United States
19,01-01-2017,BUY,50.0,United States
20,01-01-2017,BUY,50.0,United States
21,01-01-2017,BUY,50.0,United States
22,01-01-2017,BUY,50.0,United States
23,01-01-2017,BUY,50.0,Australia
24,01-01-2017,BUY,50.0,Africa
25,01-01-2017,BUY,50.0,India
26,01-01-2017,BUY,50.0,Asia
27,01-01-2017,BUY,50.0,Australia
28,01-01-2017,BUY,50.0,Australia
29,01-01-2017,SELL,9.562185136,Australia
30,01-01-2017,BUY,8.842987018,India
31,01-01-2017,BUY,2.271062586,India
32,01-01-2017,BUY,6.101895756,Asia
33,01-01-2017,SELL,1.146313066,Asia
34,01-01-2017,BUY,7.511535595,United States
35,01-01-2017,BUY,6.73841781,India
36,01-01-2017,BUY,9.378757912,India
37,01-01-2017,BUY,4.394808986,Asia
38,01-01-2017,BUY,4.666031683,Australia
39,01-01-2017,BUY,3.563597579,Asia
40,01-01-2017,BUY,3.531484029,Asia
41,01-01-2017,BUY,1.98666102,United States
42,01-01-2017,BUY,2.156824502,United States
43,01-01-2017,BUY,4.112440109,United States
44,01-01-2017,SELL,8.889890678,Australia
45,01-01-2017,BUY,8.129992969,United States
46,02-01-2017,BUY,3.729789722,United States
47,02-01-2017,BUY,1.443256636,Australia
48,02-01-2017,SELL,8.339030859,Africa
49,02-01-2017,BUY,8.786735207,United States
50,02-01-2017,BUY,1.695672235,Australia
51,02-01-2017,BUY,4.732996255,United States
52,02-01-2017,BUY,1.371663219,United States
53,02-01-2017,BUY,5.959804819,United States
54,02-01-2017,BUY,9.810761938,Australia
55,02-01-2017,BUY,5.543838119,India
56,02-01-2017,SELL,0.617022836,Africa
57,02-01-2017,BUY,8.675939586,Africa
58,02-01-2017,BUY,0.150368926,Australia
59,02-01-2017,BUY,6.079650398,Australia
60,02-01-2017,BUY,9.011177226,United States
61,02-01-2017,BUY,1.029599926,Australia
62,02-01-2017,SELL,3.687415614,Asia
63,02-01-2017,BUY,5.043726097,India
64,02-01-2017,BUY,1.377159083,United States
65,02-01-2017,BUY,3.012760299,India
66,02-01-2017,BUY,1.194319601,Australia
67,02-01-2017,SELL,6.14200575,Australia
68,02-01-2017,BUY,8.876596041,Australia
69,03-01-2017,BUY,1.791975102,Australia
70,03-01-2017,BUY,7.265296941,Australia
71,03-01-2017,BUY,0.494025068,Australia
72,03-01-2017,BUY,5.469869519,United States
73,03-01-2017,SELL,3.704582949,United States
74,03-01-2017,SELL,5.375890939,United States
75,03-01-2017,BUY,1.248782979,Africa
76,03-01-2017,SELL,6.681740169,United States
77,03-01-2017,BUY,3.807694538,United States
78,03-01-2017,SELL,1.120028576,Australia
79,03-01-2017,BUY,0.451011553,Australia
80,03-01-2017,BUY,9.201727658,Asia
81,03-01-2017,SELL,3.441259193,Africa
82,03-01-2017,BUY,5.159655392,United States
83,03-01-2017,BUY,2.22039025,United States
84,03-01-2017,BUY,1.14515606,United States
85,04-01-2017,BUY,9.316518093,United States
86,04-01-2017,BUY,7.736987566,Australia
87,04-01-2017,BUY,9.147450149,Africa
88,04-01-2017,SELL,9.402255852,Africa
89,04-01-2017,BUY,5.686772069,United States
90,04-01-2017,BUY,1.315816748,Asia
91,04-01-2017,BUY,2.639010923,United States
92,04-01-2017,BUY,9.448890603,United States
93,04-01-2017,BUY,8.137724997,United States
94,04-01-2017,BUY,4.181393763,United States
95,04-01-2017,BUY,2.927012834,United States
96,04-01-2017,BUY,7.637093177,Australia
97,04-01-2017,BUY,9.12200761,United States
98,04-01-2017,BUY,7.328769521,Australia
99,04-01-2017,BUY,1.831004047,India
100,04-01-2017,BUY,8.782296318,Asia

2025-01-26 03:35:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:49 - root - INFO - SQL:
-- 10. Transactions of type 'BUY' excluding the first year
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
LIMIT 100
Results:
txn_id,txn_date,txn_type,quantity,region
4919,01-01-2018,BUY,0.407136209,Asia
4920,01-01-2018,BUY,2.741420209,United States
4921,01-01-2018,BUY,8.539226321,India
4922,01-01-2018,BUY,5.170061539,United States
4923,01-01-2018,BUY,0.074113608,India
4925,01-01-2018,BUY,4.3282248,United States
4926,01-01-2018,BUY,2.241271644,Australia
4927,01-01-2018,BUY,5.803479501,United States
4928,01-01-2018,BUY,4.966686274,Australia
4929,02-01-2018,BUY,0.328733309,United States
4931,02-01-2018,BUY,4.590186885,United States
4932,02-01-2018,BUY,9.71618361,Australia
4933,02-01-2018,BUY,5.590562217,United States
4934,02-01-2018,BUY,2.27825909,Asia
4935,02-01-2018,BUY,0.724803624,Australia
4937,02-01-2018,BUY,3.194625407,Australia
4939,03-01-2018,BUY,2.190052182,Australia
4941,03-01-2018,BUY,4.768887356,United States
4942,03-01-2018,BUY,0.061567767,United States
4943,03-01-2018,BUY,7.674874963,United States
4944,03-01-2018,BUY,0.472330464,United States
4946,03-01-2018,BUY,4.843274999,Asia
4947,03-01-2018,BUY,3.142296863,United States
4948,03-01-2018,BUY,7.910013155,United States
4950,03-01-2018,BUY,2.910222314,United States
4951,03-01-2018,BUY,9.7167457,United States
4952,04-01-2018,BUY,2.714622589,United States
4953,04-01-2018,BUY,7.883334406,United States
4954,04-01-2018,BUY,1.209291946,Australia
4955,04-01-2018,BUY,3.849369354,Africa
4956,04-01-2018,BUY,4.597497309,United States
4957,04-01-2018,BUY,7.091802032,Australia
4958,04-01-2018,BUY,8.767067683,United States
4959,04-01-2018,BUY,6.651596225,Asia
4960,04-01-2018,BUY,0.648045919,Asia
4962,04-01-2018,BUY,3.039219589,Australia
4964,05-01-2018,BUY,3.302876939,United States
4966,05-01-2018,BUY,5.057805113,United States
4968,05-01-2018,BUY,8.977609231,Australia
4969,05-01-2018,BUY,4.643296646,Australia
4970,05-01-2018,BUY,9.499334392,India
4971,05-01-2018,BUY,3.515200551,United States
4972,05-01-2018,BUY,3.707454861,United States
4973,06-01-2018,BUY,4.558494446,Australia
4974,06-01-2018,BUY,5.146343874,Australia
4975,06-01-2018,BUY,5.112630255,Australia
4976,06-01-2018,BUY,2.279031208,United States
4977,06-01-2018,BUY,4.067866654,United States
4978,06-01-2018,BUY,6.399031362,United States
4979,06-01-2018,BUY,9.126177538,United States
4981,06-01-2018,BUY,5.299147112,Asia
4982,06-01-2018,BUY,6.56314205,United States
4983,07-01-2018,BUY,9.204403154,United States
4984,07-01-2018,BUY,7.084328244,Asia
4986,07-01-2018,BUY,1.145497923,Australia
4987,07-01-2018,BUY,4.868415875,United States
4989,07-01-2018,BUY,3.950216668,United States
4991,07-01-2018,BUY,0.648623103,United States
4992,07-01-2018,BUY,7.957292552,United States
4993,07-01-2018,BUY,4.718985635,United States
4996,07-01-2018,BUY,3.784260027,United States
4997,07-01-2018,BUY,4.817781415,Asia
4998,07-01-2018,BUY,2.020532076,Africa
4999,07-01-2018,BUY,8.891840553,United States
5003,07-01-2018,BUY,5.926334983,United States
5004,08-01-2018,BUY,2.272544416,United States
5005,08-01-2018,BUY,2.35696904,United States
5006,08-01-2018,BUY,3.265401355,Australia
5008,08-01-2018,BUY,5.821506238,Australia
5009,08-01-2018,BUY,9.232601378,United States
5010,08-01-2018,BUY,6.991374067,United States
5011,08-01-2018,BUY,4.298960646,Australia
5012,08-01-2018,BUY,4.929261282,United States
5013,09-01-2018,BUY,7.628016458,Australia
5014,09-01-2018,BUY,3.751491005,United States
5015,09-01-2018,BUY,8.538014844,Australia
5016,09-01-2018,BUY,4.954165961,Australia
5017,09-01-2018,BUY,5.459463577,Africa
5018,09-01-2018,BUY,4.033072302,Australia
5019,09-01-2018,BUY,5.899887754,Africa
5020,09-01-2018,BUY,7.55546578,Asia
5021,09-01-2018,BUY,0.20312066,India
5022,09-01-2018,BUY,2.023324226,Australia
5023,09-01-2018,BUY,0.877796515,United States
5024,09-01-2018,BUY,6.082980559,Australia
5026,09-01-2018,BUY,1.419904154,United States
5027,09-01-2018,BUY,3.680605497,United States
5029,09-01-2018,BUY,0.748010093,Asia
5030,09-01-2018,BUY,6.204433641,Australia
5033,10-01-2018,BUY,9.123298795,United States
5034,10-01-2018,BUY,3.801325425,Australia
5036,10-01-2018,BUY,1.606911678,Asia
5037,10-01-2018,BUY,1.55306718,Australia
5038,10-01-2018,BUY,3.860773847,United States
5039,10-01-2018,BUY,9.825345493,Australia
5041,10-01-2018,BUY,9.237639182,United States
5043,10-01-2018,BUY,6.852746349,Australia
5044,10-01-2018,BUY,9.186818182,Africa
5045,10-01-2018,BUY,5.060751675,United States
5046,11-01-2018,BUY,8.859521028,Australia

2025-01-26 03:35:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:50 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:51 - root - INFO - SQL:
-- 11. Aggregate total purchased quantity per region and year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       SUM(t."quantity") AS "total_quantity"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100
Results:
region,year,total_quantity
Africa,2017,1413.311543373
Asia,2017,1519.935962797
Australia,2017,6813.260548
India,2017,1571.879709356
United States,2017,10433.219711331
Africa,2018,1377.956583302
Asia,2018,1442.25975353
Australia,2018,6227.724489253
India,2018,1348.171749978
United States,2018,9525.955557094
Africa,2019,1095.784869418
Asia,2019,1619.618441392
Australia,2019,6406.885041362
India,2019,1572.679575812
United States,2019,9531.629794916
Africa,2020,1336.540782422
Asia,2020,1496.525352338
Australia,2020,6608.306619856
India,2020,1527.423962425
United States,2020,10064.238477836
Africa,2021,791.917860565
Asia,2021,1084.526571265
Australia,2021,3938.028788841
India,2021,952.759891233
United States,2021,6148.806656713

2025-01-26 03:35:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:52 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:53 - root - INFO - SQL:
-- 12. Sample transaction costs by joining with BITCOIN_PRICES
SELECT t."txn_id", t."txn_date", t."quantity", p."price",
       (t."quantity" * p."price") AS "transaction_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
LIMIT 100
Results:
txn_id,txn_date,quantity,price,transaction_cost
1,01-01-2017,50.0,8.2,409.99999999999994
1,01-01-2017,50.0,995.4,49770.0
2,01-01-2017,50.0,8.2,409.99999999999994
2,01-01-2017,50.0,995.4,49770.0
3,01-01-2017,50.0,8.2,409.99999999999994
3,01-01-2017,50.0,995.4,49770.0
4,01-01-2017,50.0,8.2,409.99999999999994
4,01-01-2017,50.0,995.4,49770.0
5,01-01-2017,50.0,8.2,409.99999999999994
5,01-01-2017,50.0,995.4,49770.0
6,01-01-2017,50.0,8.2,409.99999999999994
6,01-01-2017,50.0,995.4,49770.0
7,01-01-2017,50.0,8.2,409.99999999999994
7,01-01-2017,50.0,995.4,49770.0
8,01-01-2017,50.0,8.2,409.99999999999994
8,01-01-2017,50.0,995.4,49770.0
9,01-01-2017,50.0,8.2,409.99999999999994
9,01-01-2017,50.0,995.4,49770.0
10,01-01-2017,50.0,8.2,409.99999999999994
10,01-01-2017,50.0,995.4,49770.0
11,01-01-2017,50.0,8.2,409.99999999999994
11,01-01-2017,50.0,995.4,49770.0
12,01-01-2017,50.0,8.2,409.99999999999994
12,01-01-2017,50.0,995.4,49770.0
13,01-01-2017,50.0,8.2,409.99999999999994
13,01-01-2017,50.0,995.4,49770.0
14,01-01-2017,50.0,8.2,409.99999999999994
14,01-01-2017,50.0,995.4,49770.0
15,01-01-2017,50.0,8.2,409.99999999999994
15,01-01-2017,50.0,995.4,49770.0
16,01-01-2017,50.0,8.2,409.99999999999994
16,01-01-2017,50.0,995.4,49770.0
17,01-01-2017,50.0,8.2,409.99999999999994
17,01-01-2017,50.0,995.4,49770.0
18,01-01-2017,50.0,8.2,409.99999999999994
18,01-01-2017,50.0,995.4,49770.0
19,01-01-2017,50.0,8.2,409.99999999999994
19,01-01-2017,50.0,995.4,49770.0
20,01-01-2017,50.0,8.2,409.99999999999994
20,01-01-2017,50.0,995.4,49770.0
21,01-01-2017,50.0,8.2,409.99999999999994
21,01-01-2017,50.0,995.4,49770.0
22,01-01-2017,50.0,8.2,409.99999999999994
22,01-01-2017,50.0,995.4,49770.0
23,01-01-2017,50.0,8.2,409.99999999999994
23,01-01-2017,50.0,995.4,49770.0
24,01-01-2017,50.0,8.2,409.99999999999994
24,01-01-2017,50.0,995.4,49770.0
25,01-01-2017,50.0,8.2,409.99999999999994
25,01-01-2017,50.0,995.4,49770.0
26,01-01-2017,50.0,8.2,409.99999999999994
26,01-01-2017,50.0,995.4,49770.0
27,01-01-2017,50.0,8.2,409.99999999999994
27,01-01-2017,50.0,995.4,49770.0
28,01-01-2017,50.0,8.2,409.99999999999994
28,01-01-2017,50.0,995.4,49770.0
29,01-01-2017,9.562185136,8.2,78.4099181152
29,01-01-2017,9.562185136,995.4,9518.1990843744
30,01-01-2017,8.842987018,8.2,72.5124935476
30,01-01-2017,8.842987018,995.4,8802.3092777172
31,01-01-2017,2.271062586,8.2,18.6227132052
31,01-01-2017,2.271062586,995.4,2260.6156981044
32,01-01-2017,6.101895756,8.2,50.035545199199994
32,01-01-2017,6.101895756,995.4,6073.8270355224
33,01-01-2017,1.146313066,8.2,9.3997671412
33,01-01-2017,1.146313066,995.4,1141.0400258964
34,01-01-2017,7.511535595,8.2,61.59459187899999
34,01-01-2017,7.511535595,995.4,7476.982531263
35,01-01-2017,6.73841781,8.2,55.25502604199999
35,01-01-2017,6.73841781,995.4,6707.421088073999
36,01-01-2017,9.378757912,8.2,76.9058148784
36,01-01-2017,9.378757912,995.4,9335.6156256048
37,01-01-2017,4.394808986,8.2,36.0374336852
37,01-01-2017,4.394808986,995.4,4374.5928646644
38,01-01-2017,4.666031683,8.2,38.261459800599994
38,01-01-2017,4.666031683,995.4,4644.5679372582
39,01-01-2017,3.563597579,8.2,29.221500147799997
39,01-01-2017,3.563597579,995.4,3547.2050301366
40,01-01-2017,3.531484029,8.2,28.958169037799998
40,01-01-2017,3.531484029,995.4,3515.2392024666
41,01-01-2017,1.98666102,8.2,16.290620364
41,01-01-2017,1.98666102,995.4,1977.5223793080002
42,01-01-2017,2.156824502,8.2,17.6859609164
42,01-01-2017,2.156824502,995.4,2146.9031092908
43,01-01-2017,4.112440109,8.2,33.722008893799995
43,01-01-2017,4.112440109,995.4,4093.5228844985995
44,01-01-2017,8.889890678,8.2,72.8971035596
44,01-01-2017,8.889890678,995.4,8848.9971808812
45,01-01-2017,8.129992969,8.2,66.66594234579999
45,01-01-2017,8.129992969,995.4,8092.5950013426
46,02-01-2017,3.729789722,8.37,31.218339973139997
46,02-01-2017,3.729789722,1017.0,3793.196147274
47,02-01-2017,1.443256636,8.37,12.08005804332
47,02-01-2017,1.443256636,1017.0,1467.7919988120002
48,02-01-2017,8.339030859,8.37,69.79768828982999
48,02-01-2017,8.339030859,1017.0,8480.794383602999
49,02-01-2017,8.786735207,8.37,73.54497368258998
49,02-01-2017,8.786735207,1017.0,8936.109705519
50,02-01-2017,1.695672235,8.37,14.192776606949998
50,02-01-2017,1.695672235,1017.0,1724.498662995

2025-01-26 03:35:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:54 - root - INFO - SQL:
-- 13. Average transaction cost per region and year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100
Results:
region,year,average_cost
Africa,2017,11656.883869800853
Asia,2017,10506.779274551212
Australia,2017,10869.965902476313
India,2017,9393.315605283731
United States,2017,10701.41783809623
Africa,2018,19930.977344901425
Asia,2018,19649.29068431384
Australia,2018,20364.045371979377
India,2018,21171.643388851073
United States,2018,19962.635626582916
Africa,2019,18232.746014694498
Asia,2019,19491.898266528515
Australia,2019,18989.827470715234
India,2019,18389.813205425897
United States,2019,19037.86600410681
Africa,2020,29871.384304162806
Asia,2020,28372.284455719884
Australia,2020,28749.13471210897
India,2020,26691.284673743176
United States,2020,28603.39298758336
Africa,2021,119259.82025563237
Asia,2021,113028.99824295127
Australia,2021,116859.49098416373
India,2021,121545.36656690176
United States,2021,114758.91122026126

2025-01-26 03:35:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:56 - root - INFO - SQL:
-- 14. List regions ranked by average transaction cost per year, excluding the first year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
GROUP BY m."region", "year"
ORDER BY "year", "average_cost" DESC
LIMIT 100
Results:
region,year,average_cost
India,2018,21171.643388851073
Australia,2018,20364.045371979377
United States,2018,19962.635626582916
Africa,2018,19930.977344901425
Asia,2018,19649.29068431384
Asia,2019,19491.898266528515
United States,2019,19037.86600410681
Australia,2019,18989.827470715234
India,2019,18389.813205425897
Africa,2019,18232.746014694498
Africa,2020,29871.384304162806
Australia,2020,28749.13471210897
United States,2020,28603.39298758336
Asia,2020,28372.284455719884
India,2020,26691.284673743176
India,2021,121545.36656690176
Africa,2021,119259.82025563237
Australia,2021,116859.49098416373
United States,2021,114758.91122026126
Asia,2021,113028.99824295127

2025-01-26 03:35:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:57 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:58 - root - INFO - SQL:
-- 15. Calculate annual percentage change in average cost per region
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost",
       LAG(AVG(t."quantity" * p."price")) OVER (
         PARTITION BY m."region"
         ORDER BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
       ) AS "previous_year_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY m."region", "year"
LIMIT 100
Results:
region,year,average_cost,previous_year_cost
Africa,2017,11656.883869800853,
Africa,2018,19930.977344901425,11656.883869800853
Africa,2019,18232.746014694498,19930.977344901425
Africa,2020,29871.384304162806,18232.746014694498
Africa,2021,119259.82025563237,29871.384304162806
Asia,2017,10506.779274551212,
Asia,2018,19649.29068431384,10506.779274551212
Asia,2019,19491.898266528515,19649.29068431384
Asia,2020,28372.284455719884,19491.898266528515
Asia,2021,113028.99824295127,28372.284455719884
Australia,2017,10869.965902476313,
Australia,2018,20364.045371979377,10869.965902476313
Australia,2019,18989.827470715234,20364.045371979377
Australia,2020,28749.13471210897,18989.827470715234
Australia,2021,116859.49098416373,28749.13471210897
India,2017,9393.315605283731,
India,2018,21171.643388851073,9393.315605283731
India,2019,18389.813205425897,21171.643388851073
India,2020,26691.284673743176,18389.813205425897
India,2021,121545.36656690176,26691.284673743176
United States,2017,10701.41783809623,
United States,2018,19962.635626582916,10701.41783809623
United States,2019,19037.86600410681,19962.635626582916
United States,2020,28603.39298758336,19037.86600410681
United States,2021,114758.91122026126,28603.39298758336

2025-01-26 03:35:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:59 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:59 - root - INFO - SQL:
-- 16. View transactions with fees applied
SELECT "txn_id", "txn_date", "txn_type", "quantity", "percentage_fee"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
WHERE "percentage_fee" IS NOT NULL
LIMIT 100
Results:
txn_id,txn_date,txn_type,quantity,percentage_fee
1,01-01-2017,BUY,50.0,0.3
2,01-01-2017,BUY,50.0,0.3
3,01-01-2017,BUY,50.0,0.0
4,01-01-2017,BUY,50.0,0.3
5,01-01-2017,BUY,50.0,0.3
6,01-01-2017,BUY,50.0,0.02
7,01-01-2017,BUY,50.0,0.21
8,01-01-2017,BUY,50.0,0.3
9,01-01-2017,BUY,50.0,0.3
10,01-01-2017,BUY,50.0,0.3
11,01-01-2017,BUY,50.0,0.3
12,01-01-2017,BUY,50.0,0.3
13,01-01-2017,BUY,50.0,0.26
14,01-01-2017,BUY,50.0,0.22
15,01-01-2017,BUY,50.0,0.3
16,01-01-2017,BUY,50.0,0.1
17,01-01-2017,BUY,50.0,0.3
18,01-01-2017,BUY,50.0,0.3
19,01-01-2017,BUY,50.0,0.2
20,01-01-2017,BUY,50.0,0.3
21,01-01-2017,BUY,50.0,0.3
22,01-01-2017,BUY,50.0,0.3
23,01-01-2017,BUY,50.0,0.3
24,01-01-2017,BUY,50.0,0.3
25,01-01-2017,BUY,50.0,0.3
26,01-01-2017,BUY,50.0,0.3
27,01-01-2017,BUY,50.0,0.3
28,01-01-2017,BUY,50.0,0.01
29,01-01-2017,SELL,9.562185136,0.3
30,01-01-2017,BUY,8.842987018,0.3
31,01-01-2017,BUY,2.271062586,0.21
32,01-01-2017,BUY,6.101895756,0.3
33,01-01-2017,SELL,1.146313066,0.3
34,01-01-2017,BUY,7.511535595,0.3
35,01-01-2017,BUY,6.73841781,0.3
36,01-01-2017,BUY,9.378757912,0.3
37,01-01-2017,BUY,4.394808986,0.3
38,01-01-2017,BUY,4.666031683,0.3
39,01-01-2017,BUY,3.563597579,0.25
40,01-01-2017,BUY,3.531484029,0.3
41,01-01-2017,BUY,1.98666102,0.3
42,01-01-2017,BUY,2.156824502,0.3
43,01-01-2017,BUY,4.112440109,0.3
44,01-01-2017,SELL,8.889890678,0.24
45,01-01-2017,BUY,8.129992969,0.28
46,02-01-2017,BUY,3.729789722,0.23
47,02-01-2017,BUY,1.443256636,0.3
48,02-01-2017,SELL,8.339030859,0.3
49,02-01-2017,BUY,8.786735207,0.3
50,02-01-2017,BUY,1.695672235,0.08
51,02-01-2017,BUY,4.732996255,0.3
52,02-01-2017,BUY,1.371663219,0.3
53,02-01-2017,BUY,5.959804819,0.3
54,02-01-2017,BUY,9.810761938,0.3
55,02-01-2017,BUY,5.543838119,0.3
56,02-01-2017,SELL,0.617022836,0.18
57,02-01-2017,BUY,8.675939586,0.3
58,02-01-2017,BUY,0.150368926,0.3
59,02-01-2017,BUY,6.079650398,0.3
60,02-01-2017,BUY,9.011177226,0.3
61,02-01-2017,BUY,1.029599926,0.05
62,02-01-2017,SELL,3.687415614,0.3
63,02-01-2017,BUY,5.043726097,0.07
64,02-01-2017,BUY,1.377159083,0.01
65,02-01-2017,BUY,3.012760299,0.3
66,02-01-2017,BUY,1.194319601,0.18
67,02-01-2017,SELL,6.14200575,0.3
68,02-01-2017,BUY,8.876596041,0.05
69,03-01-2017,BUY,1.791975102,0.11
70,03-01-2017,BUY,7.265296941,0.3
71,03-01-2017,BUY,0.494025068,0.3
72,03-01-2017,BUY,5.469869519,0.3
73,03-01-2017,SELL,3.704582949,0.3
74,03-01-2017,SELL,5.375890939,0.29
75,03-01-2017,BUY,1.248782979,0.3
76,03-01-2017,SELL,6.681740169,0.3
77,03-01-2017,BUY,3.807694538,0.3
78,03-01-2017,SELL,1.120028576,0.3
79,03-01-2017,BUY,0.451011553,0.3
80,03-01-2017,BUY,9.201727658,0.3
81,03-01-2017,SELL,3.441259193,0.3
82,03-01-2017,BUY,5.159655392,0.3
83,03-01-2017,BUY,2.22039025,0.3
84,03-01-2017,BUY,1.14515606,0.3
85,04-01-2017,BUY,9.316518093,0.01
86,04-01-2017,BUY,7.736987566,0.3
87,04-01-2017,BUY,9.147450149,0.3
88,04-01-2017,SELL,9.402255852,0.14
89,04-01-2017,BUY,5.686772069,0.0
90,04-01-2017,BUY,1.315816748,0.3
91,04-01-2017,BUY,2.639010923,0.3
92,04-01-2017,BUY,9.448890603,0.02
93,04-01-2017,BUY,8.137724997,0.3
94,04-01-2017,BUY,4.181393763,0.3
95,04-01-2017,BUY,2.927012834,0.02
96,04-01-2017,BUY,7.637093177,0.3
97,04-01-2017,BUY,9.12200761,0.3
98,04-01-2017,BUY,7.328769521,0.3
99,04-01-2017,BUY,1.831004047,0.3
100,04-01-2017,BUY,8.782296318,0.2

2025-01-26 03:35:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-26 03:36:01 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:01 - root - INFO - SQL:
-- 17. Identify the earliest transaction date to determine the first year
SELECT MIN(TO_DATE("txn_date", 'DD-MM-YYYY')) AS "first_transaction_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
Results:
first_transaction_date
2017-01-01

2025-01-26 03:36:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:36:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:36:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:36:02 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:03 - root - INFO - SQL:
-- 18. Verify the format of dates in BITCOIN_PRICES
SELECT "market_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
LIMIT 100
Results:
market_date
29-08-2021
28-08-2021
27-08-2021
26-08-2021
25-08-2021
24-08-2021
23-08-2021
22-08-2021
21-08-2021
20-08-2021
19-08-2021
18-08-2021
17-08-2021
16-08-2021
15-08-2021
14-08-2021
13-08-2021
12-08-2021
11-08-2021
10-08-2021
09-08-2021
08-08-2021
07-08-2021
06-08-2021
05-08-2021
04-08-2021
03-08-2021
02-08-2021
01-08-2021
31-07-2021
30-07-2021
29-07-2021
28-07-2021
27-07-2021
26-07-2021
25-07-2021
24-07-2021
23-07-2021
22-07-2021
21-07-2021
20-07-2021
19-07-2021
18-07-2021
17-07-2021
16-07-2021
15-07-2021
14-07-2021
13-07-2021
12-07-2021
11-07-2021
10-07-2021
09-07-2021
08-07-2021
07-07-2021
06-07-2021
05-07-2021
04-07-2021
03-07-2021
02-07-2021
01-07-2021
30-06-2021
29-06-2021
28-06-2021
27-06-2021
26-06-2021
25-06-2021
24-06-2021
23-06-2021
22-06-2021
21-06-2021
20-06-2021
19-06-2021
18-06-2021
17-06-2021
16-06-2021
15-06-2021
14-06-2021
13-06-2021
12-06-2021
11-06-2021
10-06-2021
09-06-2021
08-06-2021
07-06-2021
06-06-2021
05-06-2021
04-06-2021
03-06-2021
02-06-2021
01-06-2021
31-05-2021
30-05-2021
29-05-2021
28-05-2021
27-05-2021
26-05-2021
25-05-2021
24-05-2021
23-05-2021
22-05-2021

2025-01-26 03:36:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:36:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:36:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-26 03:36:04 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:05 - root - INFO - SQL:
-- 19. Check the different tickers in BITCOIN_TRANSACTIONS
SELECT DISTINCT "ticker"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100
Results:
ticker
BTC
ETH

2025-01-26 03:36:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:36:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:36:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 31
2025-01-26 03:36:06 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:06 - root - INFO - SQL:
-- 20. Preview the percentage fees distribution
SELECT "percentage_fee", COUNT(*) AS "fee_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "percentage_fee"
ORDER BY "fee_count" DESC
LIMIT 100
Results:
percentage_fee,fee_count
0.3,16166
0.2,255
0.06,251
0.16,248
0.24,247
0.21,246
0.07,243
0.13,238
0.15,237
0.26,236
0.27,235
0.04,235
0.29,234
0.09,233
0.08,233
0.19,232
0.12,227
0.05,226
0.11,226
0.25,225
0.03,224
0.23,222
0.01,219
0.02,217
0.17,216
0.14,212
0.18,210
0.28,209
0.22,206
0.1,196
0.0,114

2025-01-26 03:36:06 - root - INFO - itercount: 0
2025-01-26 03:36:06 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **BITCOIN_TRANSACTIONS**

   - `"txn_id"`: Transaction identifier.
   - `"member_id"`: Used to join with BITCOIN_MEMBERS to get the region.
   - `"txn_date"`: Date of the transaction; used to extract the year.
   - `"txn_type"`: To filter for 'BUY' transactions.
   - `"quantity"`: Amount of Bitcoin purchased.
   - `"ticker"`: Ticker symbol of the cryptocurrency; used to join with BITCOIN_PRICES.
   
2. **BITCOIN_MEMBERS**

   - `"member_id"`: Member identifier; joins with BITCOIN_TRANSACTIONS.
   - `"region"`: Region of the member; used for grouping and ranking.
   
3. **BITCOIN_PRICES**

   - `"market_date"`: Date of the market price; joins with `"txn_date"` in BITCOIN_TRANSACTIONS.
   - `"price"`: Price of Bitcoin on that date; used to calculate cost.

**Potential Conditions:**

- Exclude the first year's data based on `"txn_date"`.
- Filter transactions where `"txn_type"` is 'BUY'.
- Join tables on `"member_id"` and dates to combine necessary data.

---

**SQL Queries:**

```sql
-- 1. List distinct transaction types in BITCOIN_TRANSACTIONS
SELECT DISTINCT "txn_type"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
```

```sql
-- 2. Retrieve sample transaction dates and transaction IDs
SELECT "txn_id", "txn_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
```

```sql
-- 3. Extract distinct years from transaction dates
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')) AS "year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
ORDER BY "year"
LIMIT 100;
```

```sql
-- 4. Count transactions per year
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')) AS "year", COUNT(*) AS "transaction_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "year"
ORDER BY "year"
LIMIT 100;
```

```sql
-- 5. View member IDs with their regions from BITCOIN_MEMBERS
SELECT "member_id", "region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS
LIMIT 100;
```

```sql
-- 6. Count of members per region
SELECT "region", COUNT("member_id") AS "member_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS
GROUP BY "region"
ORDER BY "member_count" DESC
LIMIT 100;
```

```sql
-- 7. Retrieve Bitcoin prices with market dates
SELECT "market_date", "price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
LIMIT 100;
```

```sql
-- 8. Average Bitcoin price per year
SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'YYYY-MM-DD')) AS "year", AVG("price") AS "average_price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
GROUP BY "year"
ORDER BY "year"
LIMIT 100;
```

```sql
-- 9. Join transactions with member regions
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
LIMIT 100;
```

```sql
-- 10. Transactions of type 'BUY' excluding the first year
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
LIMIT 100;
```

```sql
-- 11. Aggregate total purchased quantity per region and year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "year",
       SUM(t."quantity") AS "total_quantity"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100;
```

```sql
-- 12. Sample transaction costs by joining with BITCOIN_PRICES
SELECT t."txn_id", t."txn_date", t."quantity", p."price",
       (t."quantity" * p."price") AS "transaction_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON t."txn_date" = p."market_date"
LIMIT 100;
```

```sql
-- 13. Average transaction cost per region and year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100;
```

```sql
-- 14. List regions ranked by average transaction cost per year, excluding the first year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'YYYY-MM-DD')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
GROUP BY m."region", "year"
ORDER BY "year", "average_cost" DESC
LIMIT 100;
```

```sql
-- 15. Calculate annual percentage change in average cost per region
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost",
       LAG(AVG(t."quantity" * p."price")) OVER (PARTITION BY m."region" ORDER BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'YYYY-MM-DD'))) AS "previous_year_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY m."region", "year"
LIMIT 100;
```

```sql
-- 16. View transactions with fees applied
SELECT "txn_id", "txn_date", "txn_type", "quantity", "percentage_fee"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
WHERE "percentage_fee" IS NOT NULL
LIMIT 100;
```

```sql
-- 17. Identify the earliest transaction date to determine the first year
SELECT MIN(TO_DATE("txn_date", 'YYYY-MM-DD')) AS "first_transaction_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS;
```

```sql
-- 18. Verify the format of dates in BITCOIN_PRICES
SELECT "market_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
LIMIT 100;
```

```sql
-- 19. Check the different tickers in BITCOIN_TRANSACTIONS
SELECT DISTINCT "ticker"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
```

```sql
-- 20. Preview the percentage fees distribution
SELECT "percentage_fee", COUNT(*) AS "fee_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "percentage_fee"
ORDER BY "fee_count" DESC
LIMIT 100;
```

These queries help in understanding the structure and content of the relevant tables and columns, providing insights into transaction types, dates, member regions, Bitcoin prices, and how they can be combined to address the task.Query:
-- 1. List distinct transaction types in BITCOIN_TRANSACTIONS
SELECT DISTINCT "txn_type"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
Answer:
txn_type
BUY
SELL
Query:
-- 2. Retrieve sample transaction dates and transaction IDs
SELECT "txn_id", "txn_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100;
Answer:
txn_id,txn_date
1,01-01-2017
2,01-01-2017
3,01-01-2017
4,01-01-2017
5,01-01-2017
6,01-01-2017
7,01-01-2017
8,01-01-2017
9,01-01-2017
10,01-01-2017
11,01-01-2017
12,01-01-2017
13,01-01-2017
14,01-01-2017
15,01-01-2017
16,01-01-2017
17,01-01-2017
18,01-01-2017
19,01-01-2017
20,01-01-2017
21,01-01-2017
22,01-01-2017
23,01-01-2017
24,01-01-2017
25,01-01-2017
26,01-01-2017
27,01-01-2017
28,01-01-2017
29,01-01-2017
30,01-01-2017
31,01-01-2017
32,01-01-2017
33,01-01-2017
34,01-01-2017
35,01-01-2017
36,01-01-2017
37,01-01-2017
38,01-01-2017
39,01-01-2017
40,01-01-2017
41,01-01-2017
42,01-01-2017
43,01-01-2017
44,01-01-2017
45,01-01-2017
46,02-01-2017
47,02-01-2017
48,02-01-2017
49,02-01-2017
50,02-01-2017
51,02-01-2017
52,02-01-2017
53,02-01-2017
54,02-01-2017
55,02-01-2017
56,02-01-2017
57,02-01-2017
58,02-01-2017
59,02-01-2017
60,02-01-2017
61,02-01-2017
62,02-01-2017
63,02-01-2017
64,02-01-2017
65,02-01-2017
66,02-01-2017
67,02-01-2017
68,02-01-2017
69,03-01-2017
70,03-01-2017
71,03-01-2017
72,03-01-2017
73,03-01-2017
74,03-01-2017
75,03-01-2017
76,03-01-2017
77,03-01-2017
78,03-01-2017
79,03-01-2017
80,03-01-2017
81,03-01-2017
82,03-01-2017
83,03-01-2017
84,03-01-2017
85,04-01-2017
86,04-01-2017
87,04-01-2017
88,04-01-2017
89,04-01-2017
90,04-01-2017
91,04-01-2017
92,04-01-2017
93,04-01-2017
94,04-01-2017
95,04-01-2017
96,04-01-2017
97,04-01-2017
98,04-01-2017
99,04-01-2017
100,04-01-2017
Query:
-- 3. Extract distinct years from transaction dates with corrected date format
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
ORDER BY "year"
LIMIT 100;
Answer:
year
2017
2018
2019
2020
2021
Query:
-- 4. Count transactions per year
SELECT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year", COUNT(*) AS "transaction_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "year"
ORDER BY "year"
LIMIT 100
Answer:
year,transaction_count
2017,4918
2018,4856
2019,4908
2020,5047
2021,3189
Query:
-- 5. View member IDs with their regions from BITCOIN_MEMBERS
SELECT "member_id", "region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS
LIMIT 100
Answer:
member_id,region
c4ca42,Australia
c81e72,United States
eccbc8,United States
a87ff6,United States
e4da3b,United States
167909,United States
8f14e4,United States
c9f0f8,United States
45c48c,Australia
d3d944,Africa
6512bd,India
c20ad4,Asia
c51ce4,Australia
aab323,Australia
Query:
-- 6. Count of members per region
SELECT "region", COUNT("member_id") AS "member_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS
GROUP BY "region"
ORDER BY "member_count" DESC
LIMIT 100
Answer:
region,member_count
United States,7
Australia,4
Africa,1
India,1
Asia,1
Query:
-- 7. Retrieve Bitcoin prices with market dates
SELECT "market_date", "price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
LIMIT 100
Answer:
market_date,price
29-08-2021,3177.84
28-08-2021,3243.9
27-08-2021,3273.58
26-08-2021,3093.54
25-08-2021,3228.15
24-08-2021,3173.26
23-08-2021,3319.49
22-08-2021,3238.7
21-08-2021,3223.96
20-08-2021,3284.21
19-08-2021,3184.82
18-08-2021,3016.91
17-08-2021,3014.58
16-08-2021,3147.65
15-08-2021,3308.87
14-08-2021,3264.69
13-08-2021,3322.43
12-08-2021,3043.61
11-08-2021,3163.66
10-08-2021,3140.71
09-08-2021,3162.93
08-08-2021,3012.07
07-08-2021,3158.0
06-08-2021,2889.43
05-08-2021,2827.21
04-08-2021,2725.29
03-08-2021,2506.65
02-08-2021,2608.04
01-08-2021,2556.23
31-07-2021,2532.19
30-07-2021,2460.95
29-07-2021,2380.93
28-07-2021,2299.11
27-07-2021,2300.22
26-07-2021,2229.53
25-07-2021,2189.79
24-07-2021,2151.85
23-07-2021,2123.61
22-07-2021,2024.58
21-07-2021,1994.49
20-07-2021,1786.07
19-07-2021,1818.07
18-07-2021,1892.42
17-07-2021,1897.98
16-07-2021,1878.2
15-07-2021,1917.21
14-07-2021,1994.64
13-07-2021,1940.72
12-07-2021,2035.09
11-07-2021,2139.35
10-07-2021,2111.12
09-07-2021,2145.89
08-07-2021,2120.22
07-07-2021,2316.57
06-07-2021,2322.72
05-07-2021,2196.16
04-07-2021,2323.22
03-07-2021,2224.7
02-07-2021,2154.78
01-07-2021,2109.11
30-06-2021,2273.84
29-06-2021,2158.71
28-06-2021,2083.09
27-06-2021,1979.88
26-06-2021,1830.62
25-06-2021,1810.57
24-06-2021,1989.14
23-06-2021,1968.39
22-06-2021,1876.66
21-06-2021,1891.18
20-06-2021,2243.86
19-06-2021,2166.91
18-06-2021,2229.53
17-06-2021,2371.62
16-06-2021,2367.28
15-06-2021,2543.83
14-06-2021,2581.48
13-06-2021,2508.27
12-06-2021,2368.47
11-06-2021,2351.45
10-06-2021,2469.97
09-06-2021,2606.23
08-06-2021,2510.65
07-06-2021,2592.63
06-06-2021,2713.66
05-06-2021,2628.98
04-06-2021,2686.5
03-06-2021,2853.35
02-06-2021,2706.1
01-06-2021,2633.67
31-05-2021,2708.47
30-05-2021,2386.1
29-05-2021,2276.07
28-05-2021,2414.29
27-05-2021,2735.88
26-05-2021,2884.66
25-05-2021,2705.09
24-05-2021,2646.79
23-05-2021,2101.34
22-05-2021,2291.6
Query:
-- 8. Average Bitcoin price per year
SELECT EXTRACT(YEAR FROM TO_DATE("market_date", 'DD-MM-YYYY')) AS "year", AVG("price") AS "average_price"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
GROUP BY "year"
ORDER BY "year"
LIMIT 100
Answer:
year,average_price
2017,2100.7048493150687
2018,4016.7434657534245
2019,3776.4074520547942
2020,5709.463961748634
2021,23276.33315352697
Query:
-- 9. Join transactions with member regions
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
LIMIT 100
Answer:
txn_id,txn_date,txn_type,quantity,region
1,01-01-2017,BUY,50.0,United States
2,01-01-2017,BUY,50.0,United States
3,01-01-2017,BUY,50.0,United States
4,01-01-2017,BUY,50.0,United States
5,01-01-2017,BUY,50.0,United States
6,01-01-2017,BUY,50.0,Australia
7,01-01-2017,BUY,50.0,United States
8,01-01-2017,BUY,50.0,United States
9,01-01-2017,BUY,50.0,Australia
10,01-01-2017,BUY,50.0,Africa
11,01-01-2017,BUY,50.0,India
12,01-01-2017,BUY,50.0,Asia
13,01-01-2017,BUY,50.0,Australia
14,01-01-2017,BUY,50.0,Australia
15,01-01-2017,BUY,50.0,United States
16,01-01-2017,BUY,50.0,Australia
17,01-01-2017,BUY,50.0,United States
18,01-01-2017,BUY,50.0,United States
19,01-01-2017,BUY,50.0,United States
20,01-01-2017,BUY,50.0,United States
21,01-01-2017,BUY,50.0,United States
22,01-01-2017,BUY,50.0,United States
23,01-01-2017,BUY,50.0,Australia
24,01-01-2017,BUY,50.0,Africa
25,01-01-2017,BUY,50.0,India
26,01-01-2017,BUY,50.0,Asia
27,01-01-2017,BUY,50.0,Australia
28,01-01-2017,BUY,50.0,Australia
29,01-01-2017,SELL,9.562185136,Australia
30,01-01-2017,BUY,8.842987018,India
31,01-01-2017,BUY,2.271062586,India
32,01-01-2017,BUY,6.101895756,Asia
33,01-01-2017,SELL,1.146313066,Asia
34,01-01-2017,BUY,7.511535595,United States
35,01-01-2017,BUY,6.73841781,India
36,01-01-2017,BUY,9.378757912,India
37,01-01-2017,BUY,4.394808986,Asia
38,01-01-2017,BUY,4.666031683,Australia
39,01-01-2017,BUY,3.563597579,Asia
40,01-01-2017,BUY,3.531484029,Asia
41,01-01-2017,BUY,1.98666102,United States
42,01-01-2017,BUY,2.156824502,United States
43,01-01-2017,BUY,4.112440109,United States
44,01-01-2017,SELL,8.889890678,Australia
45,01-01-2017,BUY,8.129992969,United States
46,02-01-2017,BUY,3.729789722,United States
47,02-01-2017,BUY,1.443256636,Australia
48,02-01-2017,SELL,8.339030859,Africa
49,02-01-2017,BUY,8.786735207,United States
50,02-01-2017,BUY,1.695672235,Australia
51,02-01-2017,BUY,4.732996255,United States
52,02-01-2017,BUY,1.371663219,United States
53,02-01-2017,BUY,5.959804819,United States
54,02-01-2017,BUY,9.810761938,Australia
55,02-01-2017,BUY,5.543838119,India
56,02-01-2017,SELL,0.617022836,Africa
57,02-01-2017,BUY,8.675939586,Africa
58,02-01-2017,BUY,0.150368926,Australia
59,02-01-2017,BUY,6.079650398,Australia
60,02-01-2017,BUY,9.011177226,United States
61,02-01-2017,BUY,1.029599926,Australia
62,02-01-2017,SELL,3.687415614,Asia
63,02-01-2017,BUY,5.043726097,India
64,02-01-2017,BUY,1.377159083,United States
65,02-01-2017,BUY,3.012760299,India
66,02-01-2017,BUY,1.194319601,Australia
67,02-01-2017,SELL,6.14200575,Australia
68,02-01-2017,BUY,8.876596041,Australia
69,03-01-2017,BUY,1.791975102,Australia
70,03-01-2017,BUY,7.265296941,Australia
71,03-01-2017,BUY,0.494025068,Australia
72,03-01-2017,BUY,5.469869519,United States
73,03-01-2017,SELL,3.704582949,United States
74,03-01-2017,SELL,5.375890939,United States
75,03-01-2017,BUY,1.248782979,Africa
76,03-01-2017,SELL,6.681740169,United States
77,03-01-2017,BUY,3.807694538,United States
78,03-01-2017,SELL,1.120028576,Australia
79,03-01-2017,BUY,0.451011553,Australia
80,03-01-2017,BUY,9.201727658,Asia
81,03-01-2017,SELL,3.441259193,Africa
82,03-01-2017,BUY,5.159655392,United States
83,03-01-2017,BUY,2.22039025,United States
84,03-01-2017,BUY,1.14515606,United States
85,04-01-2017,BUY,9.316518093,United States
86,04-01-2017,BUY,7.736987566,Australia
87,04-01-2017,BUY,9.147450149,Africa
88,04-01-2017,SELL,9.402255852,Africa
89,04-01-2017,BUY,5.686772069,United States
90,04-01-2017,BUY,1.315816748,Asia
91,04-01-2017,BUY,2.639010923,United States
92,04-01-2017,BUY,9.448890603,United States
93,04-01-2017,BUY,8.137724997,United States
94,04-01-2017,BUY,4.181393763,United States
95,04-01-2017,BUY,2.927012834,United States
96,04-01-2017,BUY,7.637093177,Australia
97,04-01-2017,BUY,9.12200761,United States
98,04-01-2017,BUY,7.328769521,Australia
99,04-01-2017,BUY,1.831004047,India
100,04-01-2017,BUY,8.782296318,Asia
Query:
-- 10. Transactions of type 'BUY' excluding the first year
SELECT t."txn_id", t."txn_date", t."txn_type", t."quantity", m."region"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
LIMIT 100
Answer:
txn_id,txn_date,txn_type,quantity,region
4919,01-01-2018,BUY,0.407136209,Asia
4920,01-01-2018,BUY,2.741420209,United States
4921,01-01-2018,BUY,8.539226321,India
4922,01-01-2018,BUY,5.170061539,United States
4923,01-01-2018,BUY,0.074113608,India
4925,01-01-2018,BUY,4.3282248,United States
4926,01-01-2018,BUY,2.241271644,Australia
4927,01-01-2018,BUY,5.803479501,United States
4928,01-01-2018,BUY,4.966686274,Australia
4929,02-01-2018,BUY,0.328733309,United States
4931,02-01-2018,BUY,4.590186885,United States
4932,02-01-2018,BUY,9.71618361,Australia
4933,02-01-2018,BUY,5.590562217,United States
4934,02-01-2018,BUY,2.27825909,Asia
4935,02-01-2018,BUY,0.724803624,Australia
4937,02-01-2018,BUY,3.194625407,Australia
4939,03-01-2018,BUY,2.190052182,Australia
4941,03-01-2018,BUY,4.768887356,United States
4942,03-01-2018,BUY,0.061567767,United States
4943,03-01-2018,BUY,7.674874963,United States
4944,03-01-2018,BUY,0.472330464,United States
4946,03-01-2018,BUY,4.843274999,Asia
4947,03-01-2018,BUY,3.142296863,United States
4948,03-01-2018,BUY,7.910013155,United States
4950,03-01-2018,BUY,2.910222314,United States
4951,03-01-2018,BUY,9.7167457,United States
4952,04-01-2018,BUY,2.714622589,United States
4953,04-01-2018,BUY,7.883334406,United States
4954,04-01-2018,BUY,1.209291946,Australia
4955,04-01-2018,BUY,3.849369354,Africa
4956,04-01-2018,BUY,4.597497309,United States
4957,04-01-2018,BUY,7.091802032,Australia
4958,04-01-2018,BUY,8.767067683,United States
4959,04-01-2018,BUY,6.651596225,Asia
4960,04-01-2018,BUY,0.648045919,Asia
4962,04-01-2018,BUY,3.039219589,Australia
4964,05-01-2018,BUY,3.302876939,United States
4966,05-01-2018,BUY,5.057805113,United States
4968,05-01-2018,BUY,8.977609231,Australia
4969,05-01-2018,BUY,4.643296646,Australia
4970,05-01-2018,BUY,9.499334392,India
4971,05-01-2018,BUY,3.515200551,United States
4972,05-01-2018,BUY,3.707454861,United States
4973,06-01-2018,BUY,4.558494446,Australia
4974,06-01-2018,BUY,5.146343874,Australia
4975,06-01-2018,BUY,5.112630255,Australia
4976,06-01-2018,BUY,2.279031208,United States
4977,06-01-2018,BUY,4.067866654,United States
4978,06-01-2018,BUY,6.399031362,United States
4979,06-01-2018,BUY,9.126177538,United States
4981,06-01-2018,BUY,5.299147112,Asia
4982,06-01-2018,BUY,6.56314205,United States
4983,07-01-2018,BUY,9.204403154,United States
4984,07-01-2018,BUY,7.084328244,Asia
4986,07-01-2018,BUY,1.145497923,Australia
4987,07-01-2018,BUY,4.868415875,United States
4989,07-01-2018,BUY,3.950216668,United States
4991,07-01-2018,BUY,0.648623103,United States
4992,07-01-2018,BUY,7.957292552,United States
4993,07-01-2018,BUY,4.718985635,United States
4996,07-01-2018,BUY,3.784260027,United States
4997,07-01-2018,BUY,4.817781415,Asia
4998,07-01-2018,BUY,2.020532076,Africa
4999,07-01-2018,BUY,8.891840553,United States
5003,07-01-2018,BUY,5.926334983,United States
5004,08-01-2018,BUY,2.272544416,United States
5005,08-01-2018,BUY,2.35696904,United States
5006,08-01-2018,BUY,3.265401355,Australia
5008,08-01-2018,BUY,5.821506238,Australia
5009,08-01-2018,BUY,9.232601378,United States
5010,08-01-2018,BUY,6.991374067,United States
5011,08-01-2018,BUY,4.298960646,Australia
5012,08-01-2018,BUY,4.929261282,United States
5013,09-01-2018,BUY,7.628016458,Australia
5014,09-01-2018,BUY,3.751491005,United States
5015,09-01-2018,BUY,8.538014844,Australia
5016,09-01-2018,BUY,4.954165961,Australia
5017,09-01-2018,BUY,5.459463577,Africa
5018,09-01-2018,BUY,4.033072302,Australia
5019,09-01-2018,BUY,5.899887754,Africa
5020,09-01-2018,BUY,7.55546578,Asia
5021,09-01-2018,BUY,0.20312066,India
5022,09-01-2018,BUY,2.023324226,Australia
5023,09-01-2018,BUY,0.877796515,United States
5024,09-01-2018,BUY,6.082980559,Australia
5026,09-01-2018,BUY,1.419904154,United States
5027,09-01-2018,BUY,3.680605497,United States
5029,09-01-2018,BUY,0.748010093,Asia
5030,09-01-2018,BUY,6.204433641,Australia
5033,10-01-2018,BUY,9.123298795,United States
5034,10-01-2018,BUY,3.801325425,Australia
5036,10-01-2018,BUY,1.606911678,Asia
5037,10-01-2018,BUY,1.55306718,Australia
5038,10-01-2018,BUY,3.860773847,United States
5039,10-01-2018,BUY,9.825345493,Australia
5041,10-01-2018,BUY,9.237639182,United States
5043,10-01-2018,BUY,6.852746349,Australia
5044,10-01-2018,BUY,9.186818182,Africa
5045,10-01-2018,BUY,5.060751675,United States
5046,11-01-2018,BUY,8.859521028,Australia
Query:
-- 11. Aggregate total purchased quantity per region and year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       SUM(t."quantity") AS "total_quantity"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100
Answer:
region,year,total_quantity
Africa,2017,1413.311543373
Asia,2017,1519.935962797
Australia,2017,6813.260548
India,2017,1571.879709356
United States,2017,10433.219711331
Africa,2018,1377.956583302
Asia,2018,1442.25975353
Australia,2018,6227.724489253
India,2018,1348.171749978
United States,2018,9525.955557094
Africa,2019,1095.784869418
Asia,2019,1619.618441392
Australia,2019,6406.885041362
India,2019,1572.679575812
United States,2019,9531.629794916
Africa,2020,1336.540782422
Asia,2020,1496.525352338
Australia,2020,6608.306619856
India,2020,1527.423962425
United States,2020,10064.238477836
Africa,2021,791.917860565
Asia,2021,1084.526571265
Australia,2021,3938.028788841
India,2021,952.759891233
United States,2021,6148.806656713
Query:
-- 12. Sample transaction costs by joining with BITCOIN_PRICES
SELECT t."txn_id", t."txn_date", t."quantity", p."price",
       (t."quantity" * p."price") AS "transaction_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
LIMIT 100
Answer:
txn_id,txn_date,quantity,price,transaction_cost
1,01-01-2017,50.0,8.2,409.99999999999994
1,01-01-2017,50.0,995.4,49770.0
2,01-01-2017,50.0,8.2,409.99999999999994
2,01-01-2017,50.0,995.4,49770.0
3,01-01-2017,50.0,8.2,409.99999999999994
3,01-01-2017,50.0,995.4,49770.0
4,01-01-2017,50.0,8.2,409.99999999999994
4,01-01-2017,50.0,995.4,49770.0
5,01-01-2017,50.0,8.2,409.99999999999994
5,01-01-2017,50.0,995.4,49770.0
6,01-01-2017,50.0,8.2,409.99999999999994
6,01-01-2017,50.0,995.4,49770.0
7,01-01-2017,50.0,8.2,409.99999999999994
7,01-01-2017,50.0,995.4,49770.0
8,01-01-2017,50.0,8.2,409.99999999999994
8,01-01-2017,50.0,995.4,49770.0
9,01-01-2017,50.0,8.2,409.99999999999994
9,01-01-2017,50.0,995.4,49770.0
10,01-01-2017,50.0,8.2,409.99999999999994
10,01-01-2017,50.0,995.4,49770.0
11,01-01-2017,50.0,8.2,409.99999999999994
11,01-01-2017,50.0,995.4,49770.0
12,01-01-2017,50.0,8.2,409.99999999999994
12,01-01-2017,50.0,995.4,49770.0
13,01-01-2017,50.0,8.2,409.99999999999994
13,01-01-2017,50.0,995.4,49770.0
14,01-01-2017,50.0,8.2,409.99999999999994
14,01-01-2017,50.0,995.4,49770.0
15,01-01-2017,50.0,8.2,409.99999999999994
15,01-01-2017,50.0,995.4,49770.0
16,01-01-2017,50.0,8.2,409.99999999999994
16,01-01-2017,50.0,995.4,49770.0
17,01-01-2017,50.0,8.2,409.99999999999994
17,01-01-2017,50.0,995.4,49770.0
18,01-01-2017,50.0,8.2,409.99999999999994
18,01-01-2017,50.0,995.4,49770.0
19,01-01-2017,50.0,8.2,409.99999999999994
19,01-01-2017,50.0,995.4,49770.0
20,01-01-2017,50.0,8.2,409.99999999999994
20,01-01-2017,50.0,995.4,49770.0
21,01-01-2017,50.0,8.2,409.99999999999994
21,01-01-2017,50.0,995.4,49770.0
22,01-01-2017,50.0,8.2,409.99999999999994
22,01-01-2017,50.0,995.4,49770.0
23,01-01-2017,50.0,8.2,409.99999999999994
23,01-01-2017,50.0,995.4,49770.0
24,01-01-2017,50.0,8.2,409.99999999999994
24,01-01-2017,50.0,995.4,49770.0
25,01-01-2017,50.0,8.2,409.99999999999994
25,01-01-2017,50.0,995.4,49770.0
26,01-01-2017,50.0,8.2,409.99999999999994
26,01-01-2017,50.0,995.4,49770.0
27,01-01-2017,50.0,8.2,409.99999999999994
27,01-01-2017,50.0,995.4,49770.0
28,01-01-2017,50.0,8.2,409.99999999999994
28,01-01-2017,50.0,995.4,49770.0
29,01-01-2017,9.562185136,8.2,78.4099181152
29,01-01-2017,9.562185136,995.4,9518.1990843744
30,01-01-2017,8.842987018,8.2,72.5124935476
30,01-01-2017,8.842987018,995.4,8802.3092777172
31,01-01-2017,2.271062586,8.2,18.6227132052
31,01-01-2017,2.271062586,995.4,2260.6156981044
32,01-01-2017,6.101895756,8.2,50.035545199199994
32,01-01-2017,6.101895756,995.4,6073.8270355224
33,01-01-2017,1.146313066,8.2,9.3997671412
33,01-01-2017,1.146313066,995.4,1141.0400258964
34,01-01-2017,7.511535595,8.2,61.59459187899999
34,01-01-2017,7.511535595,995.4,7476.982531263
35,01-01-2017,6.73841781,8.2,55.25502604199999
35,01-01-2017,6.73841781,995.4,6707.421088073999
36,01-01-2017,9.378757912,8.2,76.9058148784
36,01-01-2017,9.378757912,995.4,9335.6156256048
37,01-01-2017,4.394808986,8.2,36.0374336852
37,01-01-2017,4.394808986,995.4,4374.5928646644
38,01-01-2017,4.666031683,8.2,38.261459800599994
38,01-01-2017,4.666031683,995.4,4644.5679372582
39,01-01-2017,3.563597579,8.2,29.221500147799997
39,01-01-2017,3.563597579,995.4,3547.2050301366
40,01-01-2017,3.531484029,8.2,28.958169037799998
40,01-01-2017,3.531484029,995.4,3515.2392024666
41,01-01-2017,1.98666102,8.2,16.290620364
41,01-01-2017,1.98666102,995.4,1977.5223793080002
42,01-01-2017,2.156824502,8.2,17.6859609164
42,01-01-2017,2.156824502,995.4,2146.9031092908
43,01-01-2017,4.112440109,8.2,33.722008893799995
43,01-01-2017,4.112440109,995.4,4093.5228844985995
44,01-01-2017,8.889890678,8.2,72.8971035596
44,01-01-2017,8.889890678,995.4,8848.9971808812
45,01-01-2017,8.129992969,8.2,66.66594234579999
45,01-01-2017,8.129992969,995.4,8092.5950013426
46,02-01-2017,3.729789722,8.37,31.218339973139997
46,02-01-2017,3.729789722,1017.0,3793.196147274
47,02-01-2017,1.443256636,8.37,12.08005804332
47,02-01-2017,1.443256636,1017.0,1467.7919988120002
48,02-01-2017,8.339030859,8.37,69.79768828982999
48,02-01-2017,8.339030859,1017.0,8480.794383602999
49,02-01-2017,8.786735207,8.37,73.54497368258998
49,02-01-2017,8.786735207,1017.0,8936.109705519
50,02-01-2017,1.695672235,8.37,14.192776606949998
50,02-01-2017,1.695672235,1017.0,1724.498662995
Query:
-- 13. Average transaction cost per region and year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY "year", m."region"
LIMIT 100
Answer:
region,year,average_cost
Africa,2017,11656.883869800853
Asia,2017,10506.779274551212
Australia,2017,10869.965902476313
India,2017,9393.315605283731
United States,2017,10701.41783809623
Africa,2018,19930.977344901425
Asia,2018,19649.29068431384
Australia,2018,20364.045371979377
India,2018,21171.643388851073
United States,2018,19962.635626582916
Africa,2019,18232.746014694498
Asia,2019,19491.898266528515
Australia,2019,18989.827470715234
India,2019,18389.813205425897
United States,2019,19037.86600410681
Africa,2020,29871.384304162806
Asia,2020,28372.284455719884
Australia,2020,28749.13471210897
India,2020,26691.284673743176
United States,2020,28603.39298758336
Africa,2021,119259.82025563237
Asia,2021,113028.99824295127
Australia,2021,116859.49098416373
India,2021,121545.36656690176
United States,2021,114758.91122026126
Query:
-- 14. List regions ranked by average transaction cost per year, excluding the first year
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
  )
GROUP BY m."region", "year"
ORDER BY "year", "average_cost" DESC
LIMIT 100
Answer:
region,year,average_cost
India,2018,21171.643388851073
Australia,2018,20364.045371979377
United States,2018,19962.635626582916
Africa,2018,19930.977344901425
Asia,2018,19649.29068431384
Asia,2019,19491.898266528515
United States,2019,19037.86600410681
Australia,2019,18989.827470715234
India,2019,18389.813205425897
Africa,2019,18232.746014694498
Africa,2020,29871.384304162806
Australia,2020,28749.13471210897
United States,2020,28603.39298758336
Asia,2020,28372.284455719884
India,2020,26691.284673743176
India,2021,121545.36656690176
Africa,2021,119259.82025563237
Australia,2021,116859.49098416373
United States,2021,114758.91122026126
Asia,2021,113028.99824295127
Query:
-- 15. Calculate annual percentage change in average cost per region
SELECT m."region",
       EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
       AVG(t."quantity" * p."price") AS "average_cost",
       LAG(AVG(t."quantity" * p."price")) OVER (
         PARTITION BY m."region"
         ORDER BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
       ) AS "previous_year_cost"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
  ON t."member_id" = m."member_id"
JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
  ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
WHERE t."txn_type" = 'BUY'
GROUP BY m."region", "year"
ORDER BY m."region", "year"
LIMIT 100
Answer:
region,year,average_cost,previous_year_cost
Africa,2017,11656.883869800853,
Africa,2018,19930.977344901425,11656.883869800853
Africa,2019,18232.746014694498,19930.977344901425
Africa,2020,29871.384304162806,18232.746014694498
Africa,2021,119259.82025563237,29871.384304162806
Asia,2017,10506.779274551212,
Asia,2018,19649.29068431384,10506.779274551212
Asia,2019,19491.898266528515,19649.29068431384
Asia,2020,28372.284455719884,19491.898266528515
Asia,2021,113028.99824295127,28372.284455719884
Australia,2017,10869.965902476313,
Australia,2018,20364.045371979377,10869.965902476313
Australia,2019,18989.827470715234,20364.045371979377
Australia,2020,28749.13471210897,18989.827470715234
Australia,2021,116859.49098416373,28749.13471210897
India,2017,9393.315605283731,
India,2018,21171.643388851073,9393.315605283731
India,2019,18389.813205425897,21171.643388851073
India,2020,26691.284673743176,18389.813205425897
India,2021,121545.36656690176,26691.284673743176
United States,2017,10701.41783809623,
United States,2018,19962.635626582916,10701.41783809623
United States,2019,19037.86600410681,19962.635626582916
United States,2020,28603.39298758336,19037.86600410681
United States,2021,114758.91122026126,28603.39298758336
Query:
-- 16. View transactions with fees applied
SELECT "txn_id", "txn_date", "txn_type", "quantity", "percentage_fee"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
WHERE "percentage_fee" IS NOT NULL
LIMIT 100
Answer:
txn_id,txn_date,txn_type,quantity,percentage_fee
1,01-01-2017,BUY,50.0,0.3
2,01-01-2017,BUY,50.0,0.3
3,01-01-2017,BUY,50.0,0.0
4,01-01-2017,BUY,50.0,0.3
5,01-01-2017,BUY,50.0,0.3
6,01-01-2017,BUY,50.0,0.02
7,01-01-2017,BUY,50.0,0.21
8,01-01-2017,BUY,50.0,0.3
9,01-01-2017,BUY,50.0,0.3
10,01-01-2017,BUY,50.0,0.3
11,01-01-2017,BUY,50.0,0.3
12,01-01-2017,BUY,50.0,0.3
13,01-01-2017,BUY,50.0,0.26
14,01-01-2017,BUY,50.0,0.22
15,01-01-2017,BUY,50.0,0.3
16,01-01-2017,BUY,50.0,0.1
17,01-01-2017,BUY,50.0,0.3
18,01-01-2017,BUY,50.0,0.3
19,01-01-2017,BUY,50.0,0.2
20,01-01-2017,BUY,50.0,0.3
21,01-01-2017,BUY,50.0,0.3
22,01-01-2017,BUY,50.0,0.3
23,01-01-2017,BUY,50.0,0.3
24,01-01-2017,BUY,50.0,0.3
25,01-01-2017,BUY,50.0,0.3
26,01-01-2017,BUY,50.0,0.3
27,01-01-2017,BUY,50.0,0.3
28,01-01-2017,BUY,50.0,0.01
29,01-01-2017,SELL,9.562185136,0.3
30,01-01-2017,BUY,8.842987018,0.3
31,01-01-2017,BUY,2.271062586,0.21
32,01-01-2017,BUY,6.101895756,0.3
33,01-01-2017,SELL,1.146313066,0.3
34,01-01-2017,BUY,7.511535595,0.3
35,01-01-2017,BUY,6.73841781,0.3
36,01-01-2017,BUY,9.378757912,0.3
37,01-01-2017,BUY,4.394808986,0.3
38,01-01-2017,BUY,4.666031683,0.3
39,01-01-2017,BUY,3.563597579,0.25
40,01-01-2017,BUY,3.531484029,0.3
41,01-01-2017,BUY,1.98666102,0.3
42,01-01-2017,BUY,2.156824502,0.3
43,01-01-2017,BUY,4.112440109,0.3
44,01-01-2017,SELL,8.889890678,0.24
45,01-01-2017,BUY,8.129992969,0.28
46,02-01-2017,BUY,3.729789722,0.23
47,02-01-2017,BUY,1.443256636,0.3
48,02-01-2017,SELL,8.339030859,0.3
49,02-01-2017,BUY,8.786735207,0.3
50,02-01-2017,BUY,1.695672235,0.08
51,02-01-2017,BUY,4.732996255,0.3
52,02-01-2017,BUY,1.371663219,0.3
53,02-01-2017,BUY,5.959804819,0.3
54,02-01-2017,BUY,9.810761938,0.3
55,02-01-2017,BUY,5.543838119,0.3
56,02-01-2017,SELL,0.617022836,0.18
57,02-01-2017,BUY,8.675939586,0.3
58,02-01-2017,BUY,0.150368926,0.3
59,02-01-2017,BUY,6.079650398,0.3
60,02-01-2017,BUY,9.011177226,0.3
61,02-01-2017,BUY,1.029599926,0.05
62,02-01-2017,SELL,3.687415614,0.3
63,02-01-2017,BUY,5.043726097,0.07
64,02-01-2017,BUY,1.377159083,0.01
65,02-01-2017,BUY,3.012760299,0.3
66,02-01-2017,BUY,1.194319601,0.18
67,02-01-2017,SELL,6.14200575,0.3
68,02-01-2017,BUY,8.876596041,0.05
69,03-01-2017,BUY,1.791975102,0.11
70,03-01-2017,BUY,7.265296941,0.3
71,03-01-2017,BUY,0.494025068,0.3
72,03-01-2017,BUY,5.469869519,0.3
73,03-01-2017,SELL,3.704582949,0.3
74,03-01-2017,SELL,5.375890939,0.29
75,03-01-2017,BUY,1.248782979,0.3
76,03-01-2017,SELL,6.681740169,0.3
77,03-01-2017,BUY,3.807694538,0.3
78,03-01-2017,SELL,1.120028576,0.3
79,03-01-2017,BUY,0.451011553,0.3
80,03-01-2017,BUY,9.201727658,0.3
81,03-01-2017,SELL,3.441259193,0.3
82,03-01-2017,BUY,5.159655392,0.3
83,03-01-2017,BUY,2.22039025,0.3
84,03-01-2017,BUY,1.14515606,0.3
85,04-01-2017,BUY,9.316518093,0.01
86,04-01-2017,BUY,7.736987566,0.3
87,04-01-2017,BUY,9.147450149,0.3
88,04-01-2017,SELL,9.402255852,0.14
89,04-01-2017,BUY,5.686772069,0.0
90,04-01-2017,BUY,1.315816748,0.3
91,04-01-2017,BUY,2.639010923,0.3
92,04-01-2017,BUY,9.448890603,0.02
93,04-01-2017,BUY,8.137724997,0.3
94,04-01-2017,BUY,4.181393763,0.3
95,04-01-2017,BUY,2.927012834,0.02
96,04-01-2017,BUY,7.637093177,0.3
97,04-01-2017,BUY,9.12200761,0.3
98,04-01-2017,BUY,7.328769521,0.3
99,04-01-2017,BUY,1.831004047,0.3
100,04-01-2017,BUY,8.782296318,0.2
Query:
-- 17. Identify the earliest transaction date to determine the first year
SELECT MIN(TO_DATE("txn_date", 'DD-MM-YYYY')) AS "first_transaction_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
Answer:
first_transaction_date
2017-01-01
Query:
-- 18. Verify the format of dates in BITCOIN_PRICES
SELECT "market_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES
LIMIT 100
Answer:
market_date
29-08-2021
28-08-2021
27-08-2021
26-08-2021
25-08-2021
24-08-2021
23-08-2021
22-08-2021
21-08-2021
20-08-2021
19-08-2021
18-08-2021
17-08-2021
16-08-2021
15-08-2021
14-08-2021
13-08-2021
12-08-2021
11-08-2021
10-08-2021
09-08-2021
08-08-2021
07-08-2021
06-08-2021
05-08-2021
04-08-2021
03-08-2021
02-08-2021
01-08-2021
31-07-2021
30-07-2021
29-07-2021
28-07-2021
27-07-2021
26-07-2021
25-07-2021
24-07-2021
23-07-2021
22-07-2021
21-07-2021
20-07-2021
19-07-2021
18-07-2021
17-07-2021
16-07-2021
15-07-2021
14-07-2021
13-07-2021
12-07-2021
11-07-2021
10-07-2021
09-07-2021
08-07-2021
07-07-2021
06-07-2021
05-07-2021
04-07-2021
03-07-2021
02-07-2021
01-07-2021
30-06-2021
29-06-2021
28-06-2021
27-06-2021
26-06-2021
25-06-2021
24-06-2021
23-06-2021
22-06-2021
21-06-2021
20-06-2021
19-06-2021
18-06-2021
17-06-2021
16-06-2021
15-06-2021
14-06-2021
13-06-2021
12-06-2021
11-06-2021
10-06-2021
09-06-2021
08-06-2021
07-06-2021
06-06-2021
05-06-2021
04-06-2021
03-06-2021
02-06-2021
01-06-2021
31-05-2021
30-05-2021
29-05-2021
28-05-2021
27-05-2021
26-05-2021
25-05-2021
24-05-2021
23-05-2021
22-05-2021
Query:
-- 19. Check the different tickers in BITCOIN_TRANSACTIONS
SELECT DISTINCT "ticker"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
LIMIT 100
Answer:
ticker
BTC
ETH
Query:
-- 20. Preview the percentage fees distribution
SELECT "percentage_fee", COUNT(*) AS "fee_count"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
GROUP BY "percentage_fee"
ORDER BY "fee_count" DESC
LIMIT 100
Answer:
percentage_fee,fee_count
0.3,16166
0.2,255
0.06,251
0.16,248
0.24,247
0.21,246
0.07,243
0.13,238
0.15,237
0.26,236
0.27,235
0.04,235
0.29,234
0.09,233
0.08,233
0.19,232
0.12,227
0.05,226
0.11,226
0.25,225
0.03,224
0.23,222
0.01,219
0.02,217
0.17,216
0.14,212
0.18,210
0.28,209
0.22,206
0.1,196
0.0,114
End Exploring Related Columns
Task: Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-26 03:36:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:36:34 - root - INFO - ```sql
WITH avg_costs AS (
    SELECT
        m."region",
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
        AVG(t."quantity" * p."price") AS "average_cost"
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
    JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
      ON t."member_id" = m."member_id"
    JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
      ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
    WHERE t."txn_type" = 'BUY'
      AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
        SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
        FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
      )
    GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
),
ranked_costs AS (
    SELECT
        *,
        RANK() OVER (PARTITION BY "year" ORDER BY "average_cost" DESC) AS "Rank",
        LAG("average_cost") OVER (PARTITION BY "region" ORDER BY "year") AS "prev_year_avg_cost"
    FROM avg_costs
),
final_result AS (
    SELECT
        "year" AS "Year",
        "region" AS "Region",
        ROUND("average_cost", 4) AS "Average_Purchase_Cost",
        "Rank",
        ROUND((( "average_cost" - "prev_year_avg_cost") / "prev_year_avg_cost") * 100, 4 ) AS "Annual_Percentage_Change"
    FROM ranked_costs
)
SELECT *
FROM final_result
ORDER BY "Year", "Rank";
```
2025-01-26 03:36:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:36:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:36:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:36:35 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:36 - root - INFO - itercount: 1
2025-01-26 03:36:36 - root - INFO - 0
2025-01-26 03:36:36 - root - INFO - results: 
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
2018,India,21171.6434,1,
2018,Australia,20364.0454,2,
2018,United States,19962.6356,3,
2018,Africa,19930.9773,4,
2018,Asia,19649.2907,5,
2019,Asia,19491.8983,1,-0.801
2019,United States,19037.866,2,-4.6325
2019,Australia,18989.8275,3,-6.7483
2019,India,18389.8132,4,-13.1394
2019,Africa,18232.746,5,-8.5206
2020,Africa,29871.3843,1,63.8337
2020,Australia,28749.1347,2,51.3923
2020,United States,28603.393,3,50.2447
2020,Asia,28372.2845,4,45.5594
2020,India,26691.2847,5,45.1417
2021,India,121545.3666,1,355.3747
2021,Africa,119259.8203,2,299.2444
2021,Australia,116859.491,3,306.48
2021,United States,114758.9112,4,301.2073
2021,Asia,113028.9982,5,298.3782


2025-01-26 03:36:36 - root - INFO - Please check the answer again by reviewing Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
2018,India,21171.6434,1,
2018,Australia,20364.0454,2,
2018,United States,19962.6356,3,
2018,Africa,19930.9773,4,
2018,Asia,19649.2907,5,
2019,Asia,19491.8983,1,-0.801
2019,United States,19037.866,2,-4.6325
2019,Australia,18989.8275,3,-6.7483
2019,India,18389.8132,4,-13.1394
2019,Africa,18232.746,5,-8.5206
2020,Africa,29871.3843,1,63.8337
2020,Australia,28749.1347,2,51.3923
2020,United States,28603.393,3,50.2447
2020,Asia,28372.2845,4,45.5594
2020,India,26691.2847,5,45.1417
2021,India,121545.3666,1,355.3747
2021,Africa,119259.8203,2,299.2444
2021,Australia,116859.491,3,306.48
2021,United States,114758.9112,4,301.2073
2021,Asia,113028.9982,5,298.3782
Current sql:
WITH avg_costs AS (
    SELECT
        m."region",
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
        AVG(t."quantity" * p."price") AS "average_cost"
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
    JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
      ON t."member_id" = m."member_id"
    JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
      ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
    WHERE t."txn_type" = 'BUY'
      AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
        SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
        FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
      )
    GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
),
ranked_costs AS (
    SELECT
        *,
        RANK() OVER (PARTITION BY "year" ORDER BY "average_cost" DESC) AS "Rank",
        LAG("average_cost") OVER (PARTITION BY "region" ORDER BY "year") AS "prev_year_avg_cost"
    FROM avg_costs
),
final_result AS (
    SELECT
        "year" AS "Year",
        "region" AS "Region",
        ROUND("average_cost", 4) AS "Average_Purchase_Cost",
        "Rank",
        ROUND((( "average_cost" - "prev_year_avg_cost") / "prev_year_avg_cost") * 100, 4 ) AS "Annual_Percentage_Change"
    FROM ranked_costs
)
SELECT *
FROM final_result
ORDER BY "Year", "Rank";When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-26 03:37:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:37:07 - root - INFO - ```sql
WITH avg_costs AS (
    SELECT
        m."region",
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year",
        AVG(t."quantity" * p."price") AS "average_cost"
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS t
    JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_MEMBERS m
      ON t."member_id" = m."member_id"
    JOIN BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_PRICES p
      ON TO_DATE(t."txn_date", 'DD-MM-YYYY') = TO_DATE(p."market_date", 'DD-MM-YYYY')
    WHERE t."txn_type" = 'BUY'
      AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
        SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
        FROM BANK_SALES_TRADING.BANK_SALES_TRADING.BITCOIN_TRANSACTIONS
      )
    GROUP BY m."region", EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY'))
),
ranked_costs AS (
    SELECT
        *,
        RANK() OVER (PARTITION BY "year" ORDER BY "average_cost" DESC NULLS LAST) AS "Rank",
        LAG("average_cost") OVER (PARTITION BY "region" ORDER BY "year") AS "prev_year_avg_cost"
    FROM avg_costs
),
final_result AS (
    SELECT
        "year" AS "Year",
        "region" AS "Region",
        ROUND("average_cost", 4) AS "Average_Purchase_Cost",
        "Rank",
        ROUND((( "average_cost" - "prev_year_avg_cost") / "prev_year_avg_cost") * 100, 4 ) AS "Annual_Percentage_Change"
    FROM ranked_costs
)
SELECT *
FROM final_result
ORDER BY "Year", "Rank";
```
2025-01-26 03:37:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:37:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:37:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:37:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:37:09 - snowflake.connector.connection - INFO - closed
2025-01-26 03:37:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:37:09 - root - INFO - itercount: 2
2025-01-26 03:37:09 - root - INFO - 0
2025-01-26 03:37:09 - root - INFO - Total iteration counts: 2
