2025-01-23 02:20:05 - openai._base_client - INFO - Retrying request to /chat/completions in 0.407830 seconds
2025-01-23 02:20:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:20:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:20:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:20:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:21:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:21:01 - snowflake.connector.connection - INFO - closed
2025-01-23 02:21:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:21:02 - root - INFO - SQL:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Results:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660

2025-01-23 02:21:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:21:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:21:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:21:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-23 02:21:03 - snowflake.connector.connection - INFO - closed
2025-01-23 02:21:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:21:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:21:41 - root - INFO - ```sql
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
```
2025-01-23 02:21:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:21:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:21:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:21:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-23 02:21:43 - snowflake.connector.connection - INFO - closed
2025-01-23 02:21:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:23:06 - root - INFO - SQL:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Results:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY

2025-01-23 02:23:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-23 02:23:08 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:24:24 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:24:24 - root - INFO - ```sql
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```
2025-01-23 02:24:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:24:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:24:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:24:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:24:25 - snowflake.connector.connection - INFO - closed
2025-01-23 02:24:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:14 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:26:14 - root - INFO - SQL:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Results:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0

2025-01-23 02:26:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:26:15 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:15 - root - INFO - SQL:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Results:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY

2025-01-23 02:26:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:26:17 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:17 - root - INFO - SQL:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Results:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO

2025-01-23 02:26:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:26:19 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:19 - root - INFO - SQL:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Results:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY

2025-01-23 02:26:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-23 02:26:20 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:21 - root - INFO - SQL:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Results:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969

2025-01-23 02:26:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:26:22 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:23 - root - INFO - SQL:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Results:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9

2025-01-23 02:26:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:26:24 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:24 - root - INFO - SQL:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Results:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT

2025-01-23 02:26:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:26:25 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:26 - root - INFO - SQL:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Results:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883

2025-01-23 02:26:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:26:27 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:28 - root - INFO - SQL:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Results:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24

2025-01-23 02:26:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:26:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:26:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:26:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:26:29 - snowflake.connector.connection - INFO - closed
2025-01-23 02:26:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:26:30 - root - INFO - SQL:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Results:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT

2025-01-23 02:26:30 - root - INFO - itercount: 0
2025-01-23 02:26:30 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:26:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:26:38 - root - INFO - I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:26:38 - root - INFO - itercount: 1
2025-01-23 02:26:38 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:26:38 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:27:05 - root - INFO - I'm sorry, but based on the provided datasets, I cannot generate the SQL query to determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:27:05 - root - INFO - itercount: 2
2025-01-23 02:27:05 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:05 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:27:28 - root - INFO - I'm sorry, but based on the provided datasets, I cannot generate the SQL query to determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:27:28 - root - INFO - itercount: 3
2025-01-23 02:27:28 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:28 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:27:55 - root - INFO - I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:27:55 - root - INFO - itercount: 4
2025-01-23 02:27:55 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:55 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 400 model_error"
2025-01-23 02:27:55 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `GSOD2015` (Assuming this table exists in the `NOAA_GSOD` schema for the year 2015)
  - `"stn"`: Station number.
    - *Potential usage*: Identify the Central Park weather station `'94728'`.
  - `"year"`: Year of the record.
    - *Potential usage*: Filter data for the year `2015`.
  - `"mo"`: Month of the record.
    - *Potential usage*: Filter data for July (`'07'`).
  - `"da"`: Day of the record.
    - *Potential usage*: Filter data for the day `15`.
  - `"temp"`: Average temperature for the day.
    - *Potential usage*: Retrieve the temperature data.
  - `"count_temp"`: Number of observations used to calculate the average temperature.
    - *Potential usage*: Assess the reliability of the temperature data.

- **Table**: `STATIONS`
  - `"usaf"`: Station number.
    - *Potential usage*: Match with `"stn"` in `GSOD2015`.
  - `"name"`: Name of the station.
    - *Potential usage*: Verify station identity.
  - `"state"`: State abbreviation.
    - *Potential usage*: Filter stations located in New York (`'NY'`).
  - `"lat"`: Latitude.
    - *Potential usage*: Identify stations within New York City.
  - `"lon"`: Longitude.
    - *Potential usage*: Identify stations within New York City.

**Possible Conditions:**

- `"stn"` = `'94728'` (Central Park weather station)
- `"year"` = `'2015'`
- `"mo"` = `'07'` (July)
- `"da"` = `'15'` (15th day)
- `"state"` = `'NY'` (New York)
- Filter stations by latitude and longitude to approximate New York City area.

**SQL Queries:**

```sql
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
```

---

```sql
-- 2. Get temperature records for station '94728' (Central Park)
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728'
LIMIT 100;
```

---

```sql
-- 3. Get the temperature at station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 4. List all stations located in New York state
SELECT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

---

```sql
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
LIMIT 100;
```

---

```sql
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

---

```sql
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

---

```sql
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100;
```

---

```sql
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."state" = 'NY'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 100;
```

---

```sql
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

---

```sql
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND t."state" = 'NY'
GROUP BY s."stn", t."name"
LIMIT 100;
```

**Note:** These queries are designed to explore the available data related to temperature records from NOAA's Global Summary of the Day (GSOD) for July 15, 2015, focusing on the Central Park weather station (`'94728'`) and other stations in New York. Each query aims to provide different insights into the data, such as temperature values, station details, and comparisons among stations.Query:
-- 1. Retrieve all distinct station numbers from GSOD2015
SELECT DISTINCT "stn"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
LIMIT 100;
Answer:
stn
027500
027560
028570
014890
013820
062570
014630
011480
010270
711550
011460
111930
014440
717950
027970
710700
713910
713600
710890
388510
388690
164700
161250
161190
719590
715480
384620
014180
710130
235890
014190
556960
389570
028900
029460
014300
011240
013710
014640
010840
012700
014850
718570
027020
011470
715490
012720
014770
710110
710670
013460
012910
717930
011920
014860
014800
718480
711050
710510
376990
307410
013650
062830
388780
013450
369740
715040
713490
027040
028110
013360
011170
012870
715090
013420
013870
012420
013260
012270
013440
014170
012530
013740
012390
388440
028150
010360
718950
040170
714140
715440
714090
160640
716740
113460
378010
012300
153160
166670
113660
Query:
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' AND "name" ILIKE '%CENTRAL PARK%'
LIMIT 100;
Answer:
usaf,wban,name,state
725033,94728,NYC CENTRAL PARK,NY
725060,94728,NEW YORK CENTRAL PARK,NY
999999,94728,NEW YORK CENTRAL PARK,NY
725053,94728,CENTRAL PARK,NY
Query:
SELECT "stn", "wban", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,15,77.0
Query:
-- 4. List all stations located in New York state
SELECT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "name" ILIKE '%NEW YORK%'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725034,99999,CALVERTON/GRUMMAN,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725196,14717,GRIFFISS AIRPARK,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,04741,SCHENECTADY,NY
999999,04782,SCHENECTADY,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,14774,UTICA CAA AP,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
724098,99999,AMBROSE / FT. TILDEN,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
998267,99999,ROCHESTER,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
749108,99999,ELIZABETH AAF,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
999999,94789,NEW YORK FORT TOTTEN,NY
724988,99999,DANSVILLE MUNI,NY
725036,99999,DUTCHESS CO,NY
725156,99999,ELMIRA CORNING RGNL,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
744994,99999,SCHENECTADY CO,NY
725038,99999,STEWART INTL,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725016,99999,BROOKHAVEN,NY
725145,99999,SULLIVAN CO INTL,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
725157,99999,WELLSVILLE MUNI,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997989,99999,OLCOTT HARBOR,NY
998009,99999,ROCHESTER,NY
998235,99999,NIAGRA INTAKE,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
998435,99999,OGDENSBURG,NY
997991,99999,HUDSON RIVER RESERVE,NY
Query:
-- 5. Get temperature data for all New York stations on July 15, 2015
SELECT s."stn", s."wban", s."temp", s."year", s."mo", s."da", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
LIMIT 100
Answer:
Too long, hard cut:
stn,wban,temp,year,mo,da,name,state
999999,04127,67.0,2015,07,15,GENEVA SAMPSON AFB,NY
999999,04127,67.0,2015,07,15,NIAGARA FALLS,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,SCHENECTADY,NY
999999,04127,67.0,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,04127,67.0,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,04127,67.0,2015,07,15,CANTON 4 SE                  ,NY
999999,04127,67.0,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,04127,67.0,2015,07,15,ELMIRA AIRPORT,NY
999999,04127,67.0,2015,07,15,FORT PLAIN WB AP,NY
999999,04127,67.0,2015,07,15,GLENS FALLS AP,NY
999999,04127,67.0,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,04127,67.0,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,04127,67.0,2015,07,15,UTICA CAA AP,NY
999999,04127,67.0,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,04127,67.0,2015,07,15,BEAR MOUNTAIN WB,NY
999999,04127,67.0,2015,07,15,NEW YORK SHOALS AFS,NY
999999,04127,67.0,2015,07,15,DANSVILLE MUNI AP,NY
999999,04127,67.0,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,04127,67.0,2015,07,15,WATERTOWN AP,NY
999999,04127,67.0,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,04127,67.0,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,04127,67.0,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,04127,67.0,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,04127,67.0,2015,07,15,ALBANY COUNTY AP,NY
999999,04127,67.0,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,04127,67.0,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,04127,67.0,2015,07,15,MASSENA AP,NY
999999,04127,67.0,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,04127,67.0,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,04127,67.0,2015,07,15,MILLBROOK 3 W                ,NY
999999,04127,67.0,2015,07,15,ITHACA 13 E                  ,NY
999999,96404,49.4,2015,07,15,GENEVA SAMPSON AFB,NY
999999,96404,49.4,2015,07,15,NIAGARA FALLS,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,SCHENECTADY,NY
999999,96404,49.4,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,96404,49.4,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,96404,49.4,2015,07,15,CANTON 4 SE                  ,NY
999999,96404,49.4,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,96404,49.4,2015,07,15,ELMIRA AIRPORT,NY
999999,96404,49.4,2015,07,15,FORT PLAIN WB AP,NY
999999,96404,49.4,2015,07,15,GLENS FALLS AP,NY
999999,96404,49.4,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,96404,49.4,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,96404,49.4,2015,07,15,UTICA CAA AP,NY
999999,96404,49.4,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,96404,49.4,2015,07,15,BEAR MOUNTAIN WB,NY
999999,96404,49.4,2015,07,15,NEW YORK SHOALS AFS,NY
999999,96404,49.4,2015,07,15,DANSVILLE MUNI AP,NY
999999,96404,49.4,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,96404,49.4,2015,07,15,WATERTOWN AP,NY
999999,96404,49.4,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,96404,49.4,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,96404,49.4,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,96404,49.4,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,96404,49.4,2015,07,15,ALBANY COUNTY AP,NY
999999,96404,49.4,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,96404,49.4,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,96404,49.4,2015,07,15,MASSENA AP,NY
999999,96404,49.4,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,96404,49.4,2015,07,15,NEW YORK FORT TOTTEN,NY
999999,96404,49.4,2015,07,15,MILLBROOK 3 W                ,NY
999999,96404,49.4,2015,07,15,ITHACA 13 E                  ,NY
999999,63850,77.7,2015,07,15,GENEVA SAMPSON AFB,NY
999999,63850,77.7,2015,07,15,NIAGARA FALLS,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,SCHENECTADY,NY
999999,63850,77.7,2015,07,15,HEMPSTEAD MITCHELL FLD AFB,NY
999999,63850,77.7,2015,07,15,BINGHAMTON TRI-CITIES ARPT,NY
999999,63850,77.7,2015,07,15,CANTON 4 SE                  ,NY
999999,63850,77.7,2015,07,15,DUNKIRK CHAUTAUQUA CO AP,NY
999999,63850,77.7,2015,07,15,ELMIRA AIRPORT,NY
999999,63850,77.7,2015,07,15,FORT PLAIN WB AP,NY
999999,63850,77.7,2015,07,15,GLENS FALLS AP,NY
999999,63850,77.7,2015,07,15,POUGHKEEPSIE DUTCHESS CO AP,NY
999999,63850,77.7,2015,07,15,TICONDEROGA 3 NE             ,NY
999999,63850,77.7,2015,07,15,UTICA CAA AP,NY
999999,63850,77.7,2015,07,15,NEW YORK FLOYD BENNE,NY
999999,63850,77.7,2015,07,15,BEAR MOUNTAIN WB,NY
999999,63850,77.7,2015,07,15,NEW YORK SHOALS AFS,NY
999999,63850,77.7,2015,07,15,DANSVILLE MUNI AP,NY
999999,63850,77.7,2015,07,15,NEW YORK CENTRAL PARK,NY
999999,63850,77.7,2015,07,15,WATERTOWN AP,NY
999999,63850,77.7,2015,07,15,UTICA ONEIDA COUNTY AP,NY
999999,63850,77.7,2015,07,15,BINGHAMTON BROOME COUNTY ARPT,NY
999999,63850,77.7,2015,07,15,NEW YORK LAGUARDIA ARPT,NY
999999,63850,77.7,2015,07,15,BUFFALO BUFFALO ARPT,NY
999999,63850,77.7,2015,07,15,ALBANY COUNTY AP,NY
999999,63850,77.7,2015,07,15,ROCHESTER MONROE CO ARPT,NY
999999,63850,77.7,2015,07,15,SYRACUSE MUNICIPL AP,NY
999999,63850,77.7,2015,07,15,MASSENA AP,NY
999999,63850,77.7,2015,07,15,WHITE PLAINS WESTCHESTER CO A,NY
999999,63850,77.7,2015,07,15,NEW YO
Query:
-- 6. Find the highest temperature recorded in New York on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."state"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,state
999999,53139,100.1,GENEVA SAMPSON AFB,NY
Query:
-- 7. Get station details for '94728' from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "wban" = '94728'
LIMIT 100
Answer:
usaf,wban,name,state,lat,lon
725033,94728,NYC CENTRAL PARK,NY,40.779,-73.969
725060,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
999999,94728,NEW YORK CENTRAL PARK,NY,40.779,-73.969
725053,94728,CENTRAL PARK,NY,40.779,-73.969
Query:
-- 8. Retrieve average temperatures for all stations on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100
Answer:
stn,average_temp
622590,95.0
673230,71.8
363410,73.5
604920,91.6
060190,55.5
715450,63.8
332870,62.2
543860,71.0
939850,47.6
714830,64.7
614040,105.1
388690,72.1
534800,59.4
425590,87.5
041150,50.2
163370,81.4
161250,86.0
601070,79.6
023680,60.9
172950,81.9
172440,74.2
074800,79.3
360030,73.0
014180,54.0
477710,87.1
024350,58.0
027250,52.5
987530,84.5
067620,79.1
076840,78.3
943020,64.8
718780,63.5
720921,86.7
710130,65.9
406890,106.4
415235,88.5
170981,92.8
997784,88.2
994971,75.0
656600,77.5
990110,83.5
825620,81.5
021540,54.4
720951,83.9
713810,52.8
107630,70.2
724462,84.1
787030,86.0
719350,62.4
112010,70.5
112420,71.1
306370,56.3
172210,80.7
724938,64.5
997347,82.0
715350,66.8
612910,81.9
416410,93.9
996510,57.7
163160,79.0
782390,82.9
471400,77.6
080230,69.5
782623,79.6
406070,103.9
603950,83.8
450110,87.0
948060,46.1
717950,69.8
072990,73.9
164800,81.3
075100,76.9
963150,83.6
619900,73.2
071090,64.4
474740,55.2
959580,36.9
031394,56.7
718428,68.4
716010,66.5
895770,-83.8
786410,67.0
160900,83.0
064900,63.1
720769,83.6
010420,40.7
998003,83.2
720608,82.9
167540,79.3
073901,71.8
154810,74.3
786376,81.1
710520,53.4
719220,66.9
716630,66.5
789470,83.4
787190,68.3
682400,62.6
345090,67.6
508880,61.9
Query:
-- 9. List stations with temperatures above 30 degrees on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND s."temp" > 30
LIMIT 100
Answer:
stn,wban,temp,name
010240,99999,46.2,PYRAMIDEN
010470,99999,51.8,KAUTOKEINO II
010884,99999,64.6,GEITERYGGEN
011560,99999,52.0,BO I VESTERALEN
011930,99999,55.4,NARVIK III/FRAMNES
011980,99999,55.1,DIVIDALEN II
012210,99999,49.0,TAGDALEN
012390,99999,45.7,HJERKINN II
012780,99999,53.9,VERDAL-REPPE
014000,99999,55.5,EKOFISK
014110,99999,54.9,KVITSOY - NORDBO
014120,99999,54.1,OBRESTAD
014611,99999,38.9,GAUSTATOPPEN
020200,99999,52.6,KATTERJAKK
021230,99999,54.3,JAKKVIK
021300,99999,52.4,ROPARUDDEN
021460,99999,53.4,VAJMAT
022160,99999,51.9,MATTMAR
022170,99999,51.4,ARE
022330,99999,51.6,SAXNAS
022560,99999,54.0,RISTRASK
022920,99999,56.1,HOKMARKSBERGET
023030,99999,46.5,FLATRUET
023370,99999,55.5,NORRHOG
023490,99999,55.6,SILLRE
023540,99999,59.6,RASTA
024130,99999,57.6,BRATTMON
024620,99999,61.3,UPPSALA UNIVERSITY
024720,99999,59.9,SKEPPMORA
025010,99999,60.9,VADEROARNA
025120,99999,59.9,SAVE
025950,99999,57.7,ROMA
027130,99999,54.9,HAMEENLINNA LAMMI EVO
027230,99999,46.5,KITTILA LEVITUNTURI
027480,99999,54.4,VARKAUS
028230,99999,51.4,MUONIO ALAMUONIO
028520,99999,55.5,KOKKOLA HOLLIHAKA
029650,99999,57.9,LAHTI LAUNE
029750,99999,62.9,HELSINKI MALMI
030064,99999,51.4,SCATSTA
030370,99999,54.2,SKYE/LUSA
030410,99999,38.9,AONACH MOR
031404,99999,52.9,MILLER OIL PLATFORM
031413,99999,59.1,CLEETON OIL PLATFORM
031620,99999,53.0,ESKDALEMUIR
032220,99999,60.3,CARLISLE
032610,99999,59.4,DISHFORTH
032660,99999,60.2,LINTON ON OUSE
034145,99999,61.2,COSFORD
035413,99999,61.6,COVENTRY
035715,99999,64.9,CAMBRIDGE
035830,35034,63.8,LAKENHEATH
036280,99999,61.7,FILTON
036584,99999,59.4,COLERNE
039520,99999,57.7,ROCHES POINT
039610,99999,57.2,OAK PARK - CARLOW
039790,99999,52.8,BALLYHAISE
040530,99999,48.6,BERGSTADIR
041150,99999,50.2,DYNJANDIHEIDI
041270,99999,45.6,BOLUNGARVIK
041560,99999,43.7,HVERAVELLIR
060090,99999,49.8,AKRABERG
060110,99999,50.6,TORSHAVN
060120,99999,50.1,KIRKJA
060220,99999,56.8,TYRA OST
060223,99999,56.8,TYRA E OIL PLATFORM HELIPAD
060690,99999,56.2,FOULUM
062060,99999,58.8,F16-A                        
067205,99999,79.2,SION
070530,99999,71.8,CORMEILLES
070570,99999,72.2,CREIL
070590,99999,66.4,MEAULTE
071660,99999,72.5,VATRY AERO
071790,34051,76.1,TOUL/ROSIERES
073170,99999,70.4,BISCAROSSE / PARENTIS
074770,99999,73.6,LES SAUVAGES
074870,99999,76.3,GRENONBLE LVD
075860,99999,80.8,CARPENTRAS
075910,99999,78.0,EMBRUN
076280,99999,75.9,MURET-LHERM
076293,99999,75.6,LHERM
076310,99999,79.1,FRANCAZAL
076600,99999,80.3,TOULON
076780,99999,78.2,TOULON/ILE DU LEVAN
101480,99999,64.0,HAMBURG-STADT
101624,99999,65.2,SCHWERIN PARCHIM
102340,99999,66.4,ROTENBURG
103060,99999,65.1,RHEINE BENTLAGE
103820,99999,65.6,TEGEL
106164,99999,68.4,COCHSTEDT
106325,99999,77.6,EGELSBACH
106597,99999,70.3,LANDSTUHL AHP
108570,99999,71.0,LANDSBERG LECH
110080,99999,69.1,ROHRBACH
110230,99999,71.7,GARS AM KAMP
110900,99999,75.0,WEIN-DONAUFELD
111370,99999,70.5,MARIA ALM
111440,99999,74.8,ZELL AM SEE (AUT)            
111460,99999,47.4,SONNBLICK
111470,99999,69.3,RADSTADT
Query:
-- 10. Find the station with the highest temperature in New York City area on July 15, 2015
SELECT s."stn", s."wban", s."temp", t."name", t."lat", t."lon"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15'
  AND t."lat" BETWEEN 40.5 AND 40.9
  AND t."lon" BETWEEN -74.25 AND -73.70
ORDER BY s."temp" DESC
LIMIT 1
Answer:
stn,wban,temp,name,lat,lon
999999,53139,100.1,NEW YORK FLOYD BENNE,40.583,-73.883
Query:
-- 11. Get the number of temperature observations for station '94728' on July 15, 2015
SELECT "stn", "wban", "year", "mo", "da", "temp", "count_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "wban" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100
Answer:
stn,wban,year,mo,da,temp,count_temp
725053,94728,2015,07,15,77.0,24
Query:
-- 12. List all stations with their maximum temperatures in New York on July 15, 2015
SELECT s."stn", MAX(s."temp") AS "max_temp", t."name"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 s
JOIN NOAA_DATA.NOAA_GSOD.STATIONS t ON s."stn" = t."usaf"
WHERE s."year" = '2015' AND s."mo" = '07' AND s."da" = '15' AND (t."state" = 'NY' OR t."name" ILIKE '%NEW YORK%')
GROUP BY s."stn", t."name"
LIMIT 100
Answer:
stn,max_temp,name
999999,100.1,BEAR MOUNTAIN WB
999999,100.1,BINGHAMTON TRI-CITIES ARPT
999999,100.1,BINGHAMTON BROOME COUNTY ARPT
999999,100.1,MASSENA AP
744994,65.9,SCHENECTADY CO
999999,100.1,CANTON 4 SE                  
726228,60.9,ADIRONDACK RGNL
997989,63.0,OLCOTT HARBOR
725146,64.1,OSWEGO COUNTY AIRPORT
724988,62.6,DANSVILLE MUNI
724988,62.6,DANSVILLE MUNICIPAL ARPT
725283,58.8,CATTARAUGUS COUNTY OLEAN AIRP
744865,76.6,WESTHAMPTON BEACH
725015,73.7,ORANGE COUNTY AIRPORT
725156,63.8,ELMIRA/CORNING RGNL ARPT
999999,100.1,NIAGARA FALLS
999999,100.1,DUNKIRK CHAUTAUQUA CO AP
999999,100.1,POUGHKEEPSIE DUTCHESS CO AP
999999,100.1,DANSVILLE MUNI AP
999999,100.1,WHITE PLAINS WESTCHESTER CO A
722098,74.2,EAST HAMPTON
997271,76.3,THE BATTERY
726225,65.0,PLATTSBURGH INTL
998235,63.7,NIAGRA INTAKE
744864,76.0,REPUBLIC
997280,74.5,KINGS POINT
725016,76.8,BROOKHAVEN
725155,62.2,ITHACA TOMPKINS RGNL
725287,63.5,NIAGARA FALLS INTL AIRPORT
725016,76.8,BROOKHAVEN AIRPORT
999999,100.1,SCHENECTADY
999999,100.1,HEMPSTEAD MITCHELL FLD AFB
999999,100.1,TICONDEROGA 3 NE             
999999,100.1,SYRACUSE MUNICIPL AP
999999,100.1,ITHACA 13 E                  
997991,72.7,HUDSON RIVER RESERVE
725235,61.7,CHATAUQUA CO JAMESTO
725196,65.9,GRIFFISS AIRPARK
725180,72.4,ALBANY INTERNATIONAL AIRPORT
725146,64.1,OSWEGO CO
999999,100.1,ALBANY COUNTY AP
997272,76.2,BERGEN POINT
744994,65.9,SCHENECTADY COUNTY AIRPORT
744989,64.2,CHAUTAUQUA CO DUNKIR
725037,74.8,WESTCHESTER COUNTY AIRPORT
725283,58.8,CATTARAUGUS CO OLEAN
744865,76.6,FRANCIS S GABRESKI AP
998009,62.6,ROCHESTER
743700,62.2,FORT DRUM/WHEELER-S
725036,75.0,DUTCHESS CO
725036,75.0,DUTCHESS COUNTY AIRPORT
725155,62.2,ITHACA TOMPKINS REGIONAL AIRP
999999,100.1,GLENS FALLS AP
999999,100.1,NEW YORK FLOYD BENNE
999999,100.1,ROCHESTER MONROE CO ARPT
722098,74.2,EAST HAMPTON AIRPORT
725014,75.5,MONTAUK AIRPORT
725196,65.9,GRIFFIS AIRFIELD
744989,64.2,CHAUTAUQUA CO/DUNKIRK ARPT
725038,73.9,STEWART INTERNATIONAL AIRPORT
726225,65.0,PLATTSBURGH INTERNATIONAL AIR
725038,73.9,STEWART INTL
743700,62.2,WHEELER-SACK AAF AIRPORT
744860,76.6,JOHN F KENNEDY INTERNATIONAL
997282,72.8,MONTAUK
725290,63.8,GREATER ROCHESTER INTERNATION
999999,100.1,FORT PLAIN WB AP
999999,100.1,UTICA ONEIDA COUNTY AP
999999,100.1,NEW YORK LAGUARDIA ARPT
999999,100.1,BUFFALO BUFFALO ARPT
999999,100.1,NEW YORK FORT TOTTEN
999999,100.1,MILLBROOK 3 W                
999999,100.1,NEW YORK CENTRAL PARK
998435,62.3,OGDENSBURG
725150,62.3,GREATER BINGHAMTON/E A LINK F
725145,68.8,SULLIVAN COUNTY INTL ARPT
725145,68.8,SULLIVAN CO INTL
726223,63.2,MASSENA INTL/RCHARDS FD AP
725220,69.0,FLOYD BENNETT MEMO AIRPORT
725015,73.7,ORANGE CO
725156,63.8,ELMIRA CORNING RGNL
725157,61.8,WELLSVILLE MUNI
725287,63.5,NIAGARA FALLS INTL
725194,62.4,PENN YAN
725157,61.8,MUNI ARPT TARANTINE FLD AP
725190,66.3,SYRACUSE HANCOCK INTERNATIONA
999999,100.1,GENEVA SAMPSON AFB
999999,100.1,ELMIRA AIRPORT
999999,100.1,UTICA CAA AP
999999,100.1,WATERTOWN AP
999999,100.1,NEW YORK SHOALS AFS
725060,72.3,NEW YORK CENTRAL PARK
998168,64.0,NIAGARA CG STATION
726228,60.9,ADIRONDACK REGIONAL ARPT
725235,61.7,CHAUTAUQUA CO/JAMESTOWN AP
725030,75.9,LA GUARDIA AIRPORT
725014,75.5,MONTAUK
725053,77.0,CENTRAL PARK
998266,64.7,STURGEON POINT
725194,62.4,PENN YAN AIRPORT
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:27:55 - root - INFO - Exceeded
2025-01-23 02:27:55 - root - INFO - Total iteration counts: 4
