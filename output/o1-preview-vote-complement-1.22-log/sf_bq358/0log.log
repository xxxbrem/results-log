2025-01-23 02:20:05 - openai._base_client - INFO - Retrying request to /chat/completions in 0.421908 seconds
2025-01-23 02:21:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:21:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:21:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:21:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:21:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-23 02:21:18 - snowflake.connector.connection - INFO - closed
2025-01-23 02:21:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:21:48 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:21:48 - root - INFO - ```sql
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
```
2025-01-23 02:21:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:21:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:21:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:21:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:21:49 - snowflake.connector.connection - INFO - closed
2025-01-23 02:21:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:14 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:23:14 - root - INFO - SQL:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Results:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6

2025-01-23 02:23:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:23:16 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:16 - root - INFO - SQL:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Results:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0

2025-01-23 02:23:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:23:17 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:18 - root - INFO - SQL:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Results:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY

2025-01-23 02:23:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 50
2025-01-23 02:23:19 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:20 - root - INFO - SQL:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Results:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5

2025-01-23 02:23:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:23:21 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:22 - root - INFO - SQL:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Results:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2

2025-01-23 02:23:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:23:23 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:23 - root - INFO - SQL:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Results:
stn,wban,temp
406620,99999,109.8

2025-01-23 02:23:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-23 02:23:24 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:25 - root - INFO - SQL:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Results:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0

2025-01-23 02:23:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 31
2025-01-23 02:23:26 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:27 - root - INFO - SQL:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Results:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5

2025-01-23 02:23:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-23 02:23:28 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:28 - root - INFO - SQL:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Results:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7

2025-01-23 02:23:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-23 02:23:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-23 02:23:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-23 02:23:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-23 02:23:30 - snowflake.connector.connection - INFO - closed
2025-01-23 02:23:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-23 02:23:30 - root - INFO - SQL:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Results:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3

2025-01-23 02:23:30 - root - INFO - itercount: 0
2025-01-23 02:23:30 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:23:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:23:42 - root - INFO - I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:23:42 - root - INFO - itercount: 1
2025-01-23 02:23:42 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:23:42 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:23:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:23:55 - root - INFO - I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:23:55 - root - INFO - itercount: 2
2025-01-23 02:23:55 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:23:55 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:24:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:24:09 - root - INFO - I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question.
2025-01-23 02:24:09 - root - INFO - itercount: 3
2025-01-23 02:24:09 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:24:09 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:24:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-23 02:24:27 - root - INFO - I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP code data necessary to answer this question.
2025-01-23 02:24:27 - root - INFO - itercount: 4
2025-01-23 02:24:27 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:24:27 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:24:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 400 model_error"
2025-01-23 02:24:27 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
Categories: Geospatial functions


## ST_WITHIN

Returns true if the first geospatial object is fully contained by the second geospatial object. In other words:

The first GEOGRAPHY object g1 is fully contained by the second GEOGRAPHY object g2.
The first GEOMETRY object g1 is fully contained by the second GEOMETRY object g2.

Calling ST_WITHIN(g1, g2) is equivalent to calling ST_CONTAINS(g2, g1).
Although ST_COVEREDBY and ST_WITHIN might seem similar, the two functions have subtle differences. For details on the differences between “covered by” and “within”, see the Dimensionally Extended 9-Intersection Model (DE-9IM).

Note This function does not support using a GeometryCollection or FeatureCollection as input values.

Tip You can use the search optimization service to improve the performance of queries that call this function.
For details, see Search Optimization Service.

See also:ST_CONTAINS , ST_COVEREDBY


## Syntax

ST_WITHIN( <geography_expression_1> , <geography_expression_2> )

ST_WITHIN( <geometry_expression_1> , <geometry_expression_2> )


## Arguments


geography_expression_1A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geography_expression_2A GEOGRAPHY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_1A GEOMETRY object that is not a GeometryCollection or FeatureCollection.

geometry_expression_2A GEOMETRY object that is not a GeometryCollection or FeatureCollection.


## Returns

BOOLEAN.

## Examples


## GEOGRAPHY examples

This shows a simple use of the ST_WITHIN function:

create table geospatial_table_01 (g1 GEOGRAPHY, g2 GEOGRAPHY);
insert into geospatial_table_01 (g1, g2) values 
    ('POLYGON((0 0, 3 0, 3 3, 0 3, 0 0))', 'POLYGON((1 1, 2 1, 2 2, 1 2, 1 1))');

Copy SELECT ST_WITHIN(g1, g2) 
    FROM geospatial_table_01;
+-------------------+
| ST_WITHIN(G1, G2) |
|-------------------|
| False             |
+-------------------+
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table**: `NOAA_DATA.NOAA_GSOD.STATIONS`
  - **"usaf"**: Station identifier, potential usage: to identify the Central Park weather station `'94728'`.
  - **"name"**: Name of the weather station, potential usage: to find stations named 'CENTRAL PARK'.
  - **"state"**: State abbreviation, potential usage: to filter stations located in New York ('NY').
  - **"lat"**, **"lon"**: Latitude and longitude, potential usage: to determine station locations.

- **Table**: `NOAA_DATA.NOAA_GSOD.GSOD2015`
  - **"stn"**: Station number, potential usage: to match with "usaf" in the STATIONS table.
  - **"year"**, **"mo"**, **"da"**: Date components, potential usage: to filter records for July 15, 2015.
  - **"temp"**: Average daily temperature, potential usage: to identify the highest temperatures recorded.
  - **"wban"**: Secondary station identifier, potential usage: additional station filtering or joining.

**Conditions that may be used:**

- **Station Identification**: `"stn" = '94728'` to select data from the Central Park station.
- **Date Filtering**: `"year" = '2015' AND "mo" = '07' AND "da" = '15'` to select records from July 15, 2015.
- **Temperature Comparison**: Using `MAX("temp")` to find the highest temperatures.
- **Location Filtering**: `"state" = 'NY'` to focus on New York stations.

---

**SQL Queries:**

```sql
-- 1. Retrieve information about the Central Park station from the STATIONS table
SELECT "usaf", "wban", "name", "state", "lat", "lon"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "usaf" = '94728'
LIMIT 100;
```

```sql
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07' AND "da" = '15'
LIMIT 100;
```

```sql
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY'
LIMIT 100;
```

```sql
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."state" = 'NY' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 5. Get average temperatures for each station on July 15, 2015
SELECT "stn", AVG("temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
GROUP BY "stn"
LIMIT 100;
```

```sql
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT "stn", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
AND "temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100;
```

```sql
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE s."name" = 'CENTRAL PARK' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100;
```

```sql
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT "stn", "year", "mo", "da", "temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015
WHERE "stn" = '94728' AND "year" = '2015' AND "mo" = '07'
ORDER BY "da"
LIMIT 100;
```

```sql
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100;
```

```sql
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5;
```

---

These queries explore the relevant data to understand the temperatures recorded by various stations, particularly focusing on the Central Park station `'94728'` and the date July 15, 2015. They help identify the highest temperatures, compare temperatures across stations, and retrieve specific records that could be useful for further analysis.Query:
SELECT g."stn", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf"
LIMIT 100;
Answer:
stn,name,temp
027060,LOHJA PORLA,47.4
027220,INARI SAARISELKA,31.5
027100,VESANTO SONKARI,44.2
161250,SARZANA/LUNI,67.8
027080,KARVIA ALKKIA,28.9
028300,KOUVOLA ANJALA,28.0
028300,KOUVOLA ANJALA,41.9
028120,YLITORNIO MELTOSJARVI,59.1
013860,HAMAR II,24.9
013420,ULLENSVANG,52.6
014630,AS,35.0
027220,INARI SAARISELKA,49.4
028110,KUUSAMO KIUTAKONGAS,46.4
029460,JAMSA HALLI LENTOASEMANTIE,54.8
027040,HATTULA LEPAA AWS,32.1
999999,WAINWRIGHT LIZ 3             ,67.6
999999,LONELY,67.6
999999,YAP ISLAND WSO AP,67.6
999999,KOROR WSO,67.6
999999,CHUUK WSO AP,67.6
999999,KWAJALEIN MISSLE RAN,67.6
999999,CUBI POINT NF,67.6
999999,GUAM WFO,67.6
999999,WAKE ISLAND,67.6
999999,FUTENMA,67.6
999999,BYRD STATION,67.6
999999,DIEGO GARCIA NAF,67.6
999999,COLORADO SPRINGS PETERSON FIE,67.6
999999,ZUNI,67.6
999999,TRUTH OR CONSEQUENCES MUNI AP,67.6
999999,FALLON NAAS,67.6
999999,POINT MUGU NF,67.6
999999,CEDAR CITY MUNICIPAL AP,67.6
999999,SANTA ANA,67.6
999999,SALISBURY WICOMICO CO AP,67.6
999999,BALTIMORE BLT-WASHNG,67.6
999999,NEW RIVER MCAS,67.6
999999,HATTERAS BILLY MITCHELL AP,67.6
999999,WASHINGTON DULLES INTERNATION,67.6
999999,WALLOPS ISLAND UAU,67.6
999999,TALLAHASSEE DALE MABRY FIELD,67.6
999999,CINCINNATI GREATER CINCINNATI,67.6
999999,DAYTON MUNICIPAL ARPT,67.6
999999,EVANSVILLE DRESS REGIONAL ARP,67.6
999999,INDIANAPOLIS WEIR COOK MUNICI,67.6
999999,LEXINGTON BLUEGRASS FIELD,67.6
999999,LOUISVILLE STANDIFORD FIELD,67.6
999999,SPRINGFIELD CAPITAL AP,67.6
999999,BEAUFORT NAS,67.6
999999,JACKSONVILLE NAS,67.6
999999,WHITING FIELD NAS,67.6
999999,VALDOSTA WB AIRPORT,67.6
999999,LUFKIN ANGELINA CO,67.6
999999,RUSSELL MUNICIPAL AP,67.6
999999,GLASGOW INTL ARPT,67.6
999999,HAVRE CITY-COUNTY AP,67.6
999999,WILLISTON SLOULIN FIELD INTL,67.6
999999,ASTORIA CLATSOP COUNTY ARPT,67.6
999999,TOFINO,67.6
999999,QUILLAYUTE AIRPORT,67.6
999999,BRIDGEPORT MUNICIPAL ARPT,67.6
999999,MASSENA AP,67.6
999999,WHITE PLAINS WESTCHESTER CO A,67.6
999999,WORCESTER MUNICIPAL ARPT,67.6
999999,NEW YORK FORT TOTTEN,67.6
999999,HOUGHTON LAKE ROSCOMMON CO AR,67.6
999999,ROCKFORD GREATER ROCKFORD AP,67.6
999999,TOLEDO EXPRESS AIRPORT,67.6
999999,CHICAGO OHARE INTL AP,67.6
999999,DETROIT METRO AP,67.6
999999,ALPENA PHELPS COLLINS FIELD,67.6
999999,GRAND RAPIDS KENT COUNTY ARPT,67.6
999999,FRANKLIN,67.6
999999,MILWAUKEE TIMMERMAN,67.6
999999,DUBUQUE MUNICIPAL AP,67.6
999999,WATERLOO MUNICIPAL AP,67.6
999999,HIBBING CHISHOLM-HIBBING AP,67.6
999999,CAPE SAINT JAMES  &          ,67.6
999999,IWAKUNI,67.6
999999,PAGO PAGO WSO AP,67.6
999999,TUKTOYAKTUK,67.6
999999,IMPERIAL BEACH REAM FIELD NAS,67.6
999999,HILO INTERNATIONAL AP,67.6
999999,11 WEST OXMOOR RD            ,67.6
999999,BOMBING RANGE DETACHMENT ASTO,67.6
999999,NEW ORLEANS AUDUBON GOLF SITE,67.6
999999,DOWNTOWN,67.6
999999,BALTIMORE CUSTOM HOUSE,67.6
999999,NAVAL AIR STATION,67.6
999999,WSMO (EMSU)                  ,67.6
999999,KINGS BAY/NAVAL STATION,67.6
999999,POST 0FFICE BLDG.2ND&SUMACH  ,67.6
999999,ONTARIO INTERNATIONAL ARPT,67.6
999999,GILA BEND AF AUX AIRPORT,67.6
999999,CALIENTE AIRPORT,67.6
999999,MCENTIRE ANG,67.6
999999,TERRE HAUTE HULMAN FIELD ANG,67.6
999999,FLIPPIN,67.6
999999,SEUL CHOIX POINT,67.6
999999,BEEVILLE CHASE NAAS,67.6
Query:
-- 2. Get the temperature recorded at Central Park station on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 3. List all stations located in New York state
SELECT DISTINCT "usaf", "wban", "name", "state"
FROM NOAA_DATA.NOAA_GSOD.STATIONS
WHERE "state" = 'NY' OR "state" = 'New York'
LIMIT 100
Answer:
usaf,wban,name,state
725010,99999,UPTON,NY
725033,94728,NYC CENTRAL PARK,NY
725035,04781,LONG ISLAND MAC ART,NY
725060,94728,NEW YORK CENTRAL PARK,NY
725184,99999,ALBANY (NEXRAD)              ,NY
725185,14750,FLOYD BENNETT MEM,NY
725187,94733,CLINTON COUNTY AIRPORT,NY
725230,99999,DANSVILLE MUNICIPAL,NY
725285,99999,BUFFALO COAST GUARD STATION,NY
725288,99999,NIAGARA COAST GUARD STATION,NY
726221,94725,MASSENA AP,NY
726225,04742,PLATTSBURGH INTL,NY
725196,14717,GRIFFISS AIRPARK,NY
749105,99999,MITCHEL FIELD,NY
998168,99999,NIAGARA CG STATION,NY
998436,99999,BARCELONA HARBOR,NY
999999,04727,GENEVA SAMPSON AFB,NY
999999,04728,NIAGARA FALLS,NY
999999,14708,HEMPSTEAD MITCHELL FLD AFB,NY
999999,14738,BINGHAMTON TRI-CITIES ARPT,NY
999999,14747,DUNKIRK CHAUTAUQUA CO AP,NY
999999,14749,FORT PLAIN WB AP,NY
999999,14750,GLENS FALLS AP,NY
999999,14772,TICONDEROGA 3 NE             ,NY
999999,94728,NEW YORK CENTRAL PARK,NY
999999,94790,WATERTOWN AP,NY
999999,04741,SCHENECTADY,NY
999999,14757,POUGHKEEPSIE DUTCHESS CO AP,NY
994100,99999,AMBROSE LIGHT  NY,NY
725039,99999,EATONS NECK COAST GUARD STATI,NY
744975,99999,SHORT BEACH COAST GUARD STATI,NY
725028,99999,BAY SHORE / FIRE ISLAND,NY
744859,99999,FREEPORT,NY
997272,99999,BERGEN POINT,NY
999999,04725,BINGHAMTON BROOME COUNTY ARPT,NY
999999,14735,ALBANY COUNTY AP,NY
999999,94789,NEW YORK FORT TOTTEN,NY
725156,99999,ELMIRA CORNING RGNL,NY
744989,99999,CHAUTAUQUA CO DUNKIR,NY
749108,99999,ELIZABETH AAF,NY
725016,99999,BROOKHAVEN,NY
725146,99999,OSWEGO CO,NY
725155,99999,ITHACA TOMPKINS RGNL,NY
994590,99999,THOUSAND I. BRDG.  NY,NY
994930,99999,SOUTH MIDDLE SOUND,NY
999999,64756,MILLBROOK 3 W                ,NY
997989,99999,OLCOTT HARBOR,NY
998235,99999,NIAGRA INTAKE,NY
997991,99999,HUDSON RIVER RESERVE,NY
725034,99999,CALVERTON/GRUMMAN,NY
725195,99999,OSWEGO COAST GUARD STATION,NY
725198,99999,MILLBROOK/SKY ACRES,NY
725283,99999,CATTARAUGUS CO OLEAN,NY
744976,99999,NTPD AIR OPS HELIPORT,NY
725197,94794,ONEIDA COUNTY AIRPORT,NY
999999,04782,SCHENECTADY,NY
999999,14748,ELMIRA AIRPORT,NY
999999,14774,UTICA CAA AP,NY
999999,14797,BEAR MOUNTAIN WB,NY
999999,93732,NEW YORK SHOALS AFS,NY
999999,94704,DANSVILLE MUNI AP,NY
724098,99999,AMBROSE / FT. TILDEN,NY
998267,99999,ROCHESTER,NY
999999,14732,NEW YORK LAGUARDIA ARPT,NY
999999,14733,BUFFALO BUFFALO ARPT,NY
999999,14771,SYRACUSE MUNICIPL AP,NY
999999,94725,MASSENA AP,NY
999999,94745,WHITE PLAINS WESTCHESTER CO A,NY
725287,99999,NIAGARA FALLS INTL,NY
744865,99999,WESTHAMPTON BEACH,NY
744994,99999,SCHENECTADY CO,NY
724988,99999,DANSVILLE MUNI,NY
722098,99999,EAST HAMPTON,NY
725015,99999,ORANGE CO,NY
725187,99999,CLINTON CO,NY
725194,99999,PENN YAN,NY
725235,99999,CHATAUQUA CO JAMESTO,NY
726228,99999,ADIRONDACK RGNL,NY
743700,99999,FORT DRUM/WHEELER-S,NY
999999,64758,ITHACA 13 E                  ,NY
720553,99999,PORT AUTH DOWNTN MANHATTAN WA,NY
725186,99999,OGDENSBURG INTL,NY
997280,99999,KINGS POINT,NY
997282,99999,MONTAUK,NY
722098,64761,EAST HAMPTON AIRPORT,NY
725230,94704,DANSVILLE/MUNICIPAL,NY
999999,14743,CANTON 4 SE                  ,NY
999999,14786,NEW YORK FLOYD BENNE,NY
999999,94794,UTICA ONEIDA COUNTY AP,NY
999999,14768,ROCHESTER MONROE CO ARPT,NY
725038,99999,STEWART INTL,NY
725036,99999,DUTCHESS CO,NY
725157,99999,WELLSVILLE MUNI,NY
744864,99999,REPUBLIC,NY
725014,99999,MONTAUK,NY
998009,99999,ROCHESTER,NY
998266,99999,STURGEON POINT,NY
998223,99999,ALEXANDRIA BAY,NY
997271,99999,THE BATTERY,NY
998435,99999,OGDENSBURG,NY
Query:
-- 4. Find temperature records for all New York stations on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE (s."state" = 'NY' OR s."state" = 'New York') AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
997271,99999,THE BATTERY,76.3
997989,99999,OLCOTT HARBOR,63.0
997991,99999,HUDSON RIVER RESERVE,72.7
998168,99999,NIAGARA CG STATION,64.0
999999,64756,MILLBROOK 3 W                ,70.8
999999,64758,ITHACA 13 E                  ,62.3
744865,14719,FRANCIS S GABRESKI AP,76.6
725037,94745,WESTCHESTER COUNTY AIRPORT,74.8
725038,14714,STEWART INTERNATIONAL AIRPORT,73.9
997272,99999,BERGEN POINT,76.2
997280,99999,KINGS POINT,74.5
998435,99999,OGDENSBURG,62.3
744994,04741,SCHENECTADY COUNTY AIRPORT,65.9
744989,14747,CHAUTAUQUA CO/DUNKIRK ARPT,64.2
725150,04725,GREATER BINGHAMTON/E A LINK F,62.3
725145,54746,SULLIVAN COUNTY INTL ARPT,68.8
998235,99999,NIAGRA INTAKE,63.7
725220,14750,FLOYD BENNETT MEMO AIRPORT,69.0
724988,94704,DANSVILLE MUNICIPAL ARPT,62.6
726225,64776,PLATTSBURGH INTERNATIONAL AIR,65.0
726223,94725,MASSENA INTL/RCHARDS FD AP,63.2
725053,94728,CENTRAL PARK,77.0
725283,00465,CATTARAUGUS COUNTY OLEAN AIRP,58.8
722098,64761,EAST HAMPTON AIRPORT,74.2
726228,94740,ADIRONDACK REGIONAL ARPT,60.9
725235,04720,CHAUTAUQUA CO/JAMESTOWN AP,61.7
725146,54773,OSWEGO COUNTY AIRPORT,64.1
725196,64775,GRIFFIS AIRFIELD,65.9
725180,14735,ALBANY INTERNATIONAL AIRPORT,72.4
725030,14732,LA GUARDIA AIRPORT,75.9
725014,54780,MONTAUK AIRPORT,75.5
726227,94790,WATERTOWN INTL AIRPORT,63.5
997282,99999,MONTAUK,72.8
744864,54787,REPUBLIC AIRPORT,76.0
998009,99999,ROCHESTER,62.6
744860,94789,JOHN F KENNEDY INTERNATIONAL,76.6
725050,04781,LONG ISLAND MAC ARTHUR AIRPOR,76.7
725190,14771,SYRACUSE HANCOCK INTERNATIONA,66.3
725290,14768,GREATER ROCHESTER INTERNATION,63.8
998266,99999,STURGEON POINT,64.7
743700,14715,WHEELER-SACK AAF AIRPORT,62.2
725015,04789,ORANGE COUNTY AIRPORT,73.7
725036,14757,DUTCHESS COUNTY AIRPORT,75.0
725155,94761,ITHACA TOMPKINS REGIONAL AIRP,62.2
725016,54790,BROOKHAVEN AIRPORT,76.8
725194,54778,PENN YAN AIRPORT,62.4
725157,54757,MUNI ARPT TARANTINE FLD AP,61.8
725156,14748,ELMIRA/CORNING RGNL ARPT,63.8
725280,14733,BUFFALO NIAGARA INTERNATIONAL,63.9
725287,04724,NIAGARA FALLS INTL AIRPORT,63.5
Query:
-- 5. Get average temperatures for each station on July 15, 2015
SELECT g."stn", g."wban", AVG(g."temp") AS "average_temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
GROUP BY g."stn", g."wban"
LIMIT 100
Answer:
stn,wban,average_temp
999999,92826,82.4
061090,99999,57.9
915510,99999,81.1
999999,93243,70.9
141180,99999,72.9
027710,99999,53.3
714810,99999,64.7
406910,99999,99.5
710700,99999,65.9
011500,99999,53.0
331870,99999,63.7
999999,03063,73.6
715460,99999,60.8
406650,99999,107.4
956170,99999,46.7
999999,64757,59.9
677550,99999,75.0
535020,99999,77.1
333120,99999,64.8
959130,99999,43.4
013320,99999,54.0
024870,99999,62.2
162040,99999,81.4
602300,99999,94.6
863600,99999,49.3
407190,99999,81.4
982220,99999,78.6
718450,99999,66.4
725294,99999,83.0
430030,99999,86.2
013520,99999,38.3
721003,99999,66.2
043610,99999,45.0
033180,99999,58.1
721002,99999,66.6
480870,99999,83.5
041760,99999,41.8
680025,99999,68.9
719550,99999,56.3
101490,99999,66.0
998194,99999,85.8
475800,44402,68.9
479810,99999,78.7
013840,99999,58.6
134624,99999,87.5
412160,99999,101.2
110010,99999,69.7
802110,99999,74.6
032040,99999,55.8
063800,99999,66.9
012240,99999,52.7
035573,99999,63.6
477940,99999,77.6
997272,99999,76.2
074760,99999,82.8
071570,99999,74.4
419220,99999,79.8
450070,99999,87.7
163600,99999,82.5
711253,99999,66.5
610910,99999,81.5
332460,99999,60.6
722650,23023,84.8
153410,99999,76.1
999999,25630,51.4
014440,99999,56.8
072030,99999,66.0
672370,99999,68.5
720464,99999,68.2
070370,99999,68.1
722158,99999,77.8
720531,00158,69.9
408480,99999,88.9
406570,99999,107.9
956680,99999,47.8
485578,99999,83.8
995011,99999,77.5
998479,99999,62.7
998155,99999,70.4
039620,99999,59.1
010887,99999,54.7
607800,99999,92.4
407120,99999,79.8
071100,99999,64.8
027430,99999,61.7
744214,99999,68.8
720642,99999,64.8
075020,99999,74.3
085150,99999,73.5
804310,99999,79.9
387180,99999,70.4
637890,99999,63.6
767503,99999,82.1
110165,99999,79.2
080940,99999,90.7
038873,99999,67.5
702350,26534,52.0
998408,99999,65.6
286980,99999,69.0
484590,99999,87.2
Query:
-- 6. Identify the station(s) with the highest temperature on July 15, 2015
SELECT g."stn", g."wban", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
AND g."temp" = (
  SELECT MAX("temp") FROM NOAA_DATA.NOAA_GSOD.GSOD2015
  WHERE "year" = '2015' AND "mo" = '07' AND "da" = '15'
)
LIMIT 100
Answer:
stn,wban,temp
406620,99999,109.8
Query:
-- 7. Retrieve temperature records from all stations named 'CENTRAL PARK' on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
LIMIT 100
Answer:
stn,wban,name,temp
725053,94728,CENTRAL PARK,77.0
Query:
-- 8. Get daily temperature records for Central Park station during July 2015
SELECT g."stn", g."wban", g."year", g."mo", g."da", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE s."name" ILIKE '%CENTRAL PARK%' AND g."year" = '2015' AND g."mo" = '07'
ORDER BY g."da"
LIMIT 100
Answer:
stn,wban,year,mo,da,temp
725053,94728,2015,07,01,75.0
725053,94728,2015,07,02,74.7
725053,94728,2015,07,03,73.5
725053,94728,2015,07,04,72.0
725053,94728,2015,07,05,74.6
725053,94728,2015,07,06,76.8
725053,94728,2015,07,07,78.7
725053,94728,2015,07,08,80.5
725053,94728,2015,07,09,74.7
725053,94728,2015,07,10,76.1
725053,94728,2015,07,11,78.7
725053,94728,2015,07,12,79.9
725053,94728,2015,07,13,79.5
725053,94728,2015,07,14,75.3
725053,94728,2015,07,15,77.0
725053,94728,2015,07,16,72.8
725053,94728,2015,07,17,72.5
725053,94728,2015,07,18,76.2
725053,94728,2015,07,19,84.9
725053,94728,2015,07,20,88.0
725053,94728,2015,07,21,83.7
725053,94728,2015,07,22,77.3
725053,94728,2015,07,23,76.7
725053,94728,2015,07,24,77.8
725053,94728,2015,07,25,78.2
725053,94728,2015,07,26,79.8
725053,94728,2015,07,27,78.5
725053,94728,2015,07,28,82.7
725053,94728,2015,07,29,85.4
725053,94728,2015,07,30,80.5
725053,94728,2015,07,31,80.5
Query:
-- 9. Find all stations that recorded temperatures above 30 degrees on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15' AND g."temp" > 30
LIMIT 100
Answer:
stn,wban,name,temp
010240,99999,PYRAMIDEN,46.2
010470,99999,KAUTOKEINO II,51.8
010884,99999,GEITERYGGEN,64.6
011560,99999,BO I VESTERALEN,52.0
011930,99999,NARVIK III/FRAMNES,55.4
011980,99999,DIVIDALEN II,55.1
012210,99999,TAGDALEN,49.0
012390,99999,HJERKINN II,45.7
012780,99999,VERDAL-REPPE,53.9
014000,99999,EKOFISK,55.5
014110,99999,KVITSOY - NORDBO,54.9
014120,99999,OBRESTAD,54.1
014611,99999,GAUSTATOPPEN,38.9
020200,99999,KATTERJAKK,52.6
021230,99999,JAKKVIK,54.3
021300,99999,ROPARUDDEN,52.4
021460,99999,VAJMAT,53.4
022160,99999,MATTMAR,51.9
022170,99999,ARE,51.4
022330,99999,SAXNAS,51.6
022560,99999,RISTRASK,54.0
022920,99999,HOKMARKSBERGET,56.1
023030,99999,FLATRUET,46.5
023370,99999,NORRHOG,55.5
023490,99999,SILLRE,55.6
023540,99999,RASTA,59.6
024130,99999,BRATTMON,57.6
024620,99999,UPPSALA UNIVERSITY,61.3
024720,99999,SKEPPMORA,59.9
025010,99999,VADEROARNA,60.9
025120,99999,SAVE,59.9
025950,99999,ROMA,57.7
027130,99999,HAMEENLINNA LAMMI EVO,54.9
027230,99999,KITTILA LEVITUNTURI,46.5
027480,99999,VARKAUS,54.4
028230,99999,MUONIO ALAMUONIO,51.4
028520,99999,KOKKOLA HOLLIHAKA,55.5
029650,99999,LAHTI LAUNE,57.9
029750,99999,HELSINKI MALMI,62.9
030064,99999,SCATSTA,51.4
030370,99999,SKYE/LUSA,54.2
030410,99999,AONACH MOR,38.9
031404,99999,MILLER OIL PLATFORM,52.9
031413,99999,CLEETON OIL PLATFORM,59.1
031620,99999,ESKDALEMUIR,53.0
032220,99999,CARLISLE,60.3
032610,99999,DISHFORTH,59.4
032660,99999,LINTON ON OUSE,60.2
034145,99999,COSFORD,61.2
035413,99999,COVENTRY,61.6
035715,99999,CAMBRIDGE,64.9
036280,99999,FILTON,61.7
036584,99999,COLERNE,59.4
039520,99999,ROCHES POINT,57.7
039610,99999,OAK PARK - CARLOW,57.2
039790,99999,BALLYHAISE,52.8
040530,99999,BERGSTADIR,48.6
041150,99999,DYNJANDIHEIDI,50.2
041270,99999,BOLUNGARVIK,45.6
041560,99999,HVERAVELLIR,43.7
060090,99999,AKRABERG,49.8
060110,99999,TORSHAVN,50.6
060120,99999,KIRKJA,50.1
060220,99999,TYRA OST,56.8
060223,99999,TYRA E OIL PLATFORM HELIPAD,56.8
060690,99999,FOULUM,56.2
062060,99999,F16-A                        ,58.8
067205,99999,SION,79.2
070530,99999,CORMEILLES,71.8
070570,99999,CREIL,72.2
070590,99999,MEAULTE,66.4
071660,99999,VATRY AERO,72.5
073170,99999,BISCAROSSE / PARENTIS,70.4
074770,99999,LES SAUVAGES,73.6
074870,99999,GRENONBLE LVD,76.3
075860,99999,CARPENTRAS,80.8
075910,99999,EMBRUN,78.0
076280,99999,MURET-LHERM,75.9
076293,99999,LHERM,75.6
076310,99999,FRANCAZAL,79.1
076600,99999,TOULON,80.3
076780,99999,TOULON/ILE DU LEVAN,78.2
101480,99999,HAMBURG-STADT,64.0
101624,99999,SCHWERIN PARCHIM,65.2
102340,99999,ROTENBURG,66.4
103060,99999,RHEINE BENTLAGE,65.1
103820,99999,TEGEL,65.6
106164,99999,COCHSTEDT,68.4
106325,99999,EGELSBACH,77.6
106597,99999,LANDSTUHL AHP,70.3
108570,99999,LANDSBERG LECH,71.0
110080,99999,ROHRBACH,69.1
110230,99999,GARS AM KAMP,71.7
110900,99999,WEIN-DONAUFELD,75.0
111370,99999,MARIA ALM,70.5
111440,99999,ZELL AM SEE (AUT)            ,74.8
111460,99999,SONNBLICK,47.4
111470,99999,RADSTADT,69.3
111540,99999,GMUNDEN,73.8
111730,99999,FISHBACH,66.7
Query:
-- 10. List the top 5 stations with the highest temperatures on July 15, 2015
SELECT g."stn", g."wban", s."name", g."temp"
FROM NOAA_DATA.NOAA_GSOD.GSOD2015 g
JOIN NOAA_DATA.NOAA_GSOD.STATIONS s ON g."stn" = s."usaf" AND g."wban" = s."wban"
WHERE g."year" = '2015' AND g."mo" = '07' AND g."da" = '15'
ORDER BY g."temp" DESC
LIMIT 5
Answer:
stn,wban,name,temp
406620,99999,BADRAH,109.8
406720,99999,DIWANIYA,109.5
406600,99999,AZIZYAH,109.3
406760,99999,NASIRIYA,108.9
406550,99999,AINALTAMER,108.3
End Exploring Related Columns
Task: Can you tell me which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature for that day, as recorded by the Central Park weather station '94728'? If there's more than one trip that meets these criteria, I'd like to know about the one that starts in the smallest ZIP Code and ends in the largest ZIP Code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm sorry, but based on the provided datasets, I cannot determine which bike trip in New York City on July 15, 2015, started and ended in ZIP Code areas with the highest average temperature, as recorded by the Central Park weather station '94728'. The datasets you've provided contain NOAA weather data but do not include bike trip information or ZIP Code data necessary to answer this question..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-23 02:24:27 - root - INFO - Exceeded
2025-01-23 02:24:27 - root - INFO - Total iteration counts: 4
