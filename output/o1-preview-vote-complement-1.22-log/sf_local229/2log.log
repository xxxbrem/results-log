2025-01-25 03:24:45 - openai._base_client - INFO - Retrying request to /chat/completions in 0.499219 seconds
2025-01-25 03:26:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:26:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:17 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:18 - root - INFO - SQL:
SELECT DISTINCT "match_id", "innings_no"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
Results:
match_id,innings_no
335987,2
335987,1
335988,1
335988,2
335989,1
335989,2
335990,1
335990,2
335991,1
335991,2
335992,1
335992,2
335993,1
335994,1
335995,1
335995,2
335996,1
335996,2
335997,2
335998,2
335999,1
336000,1
336001,2
336002,1
336000,2
336001,1
336004,1
336004,2
336005,2
336006,1
336007,1
336008,1
336009,1
336010,2
336011,2
336012,1
336012,2
336014,2
336015,1
336016,1
336016,2
336018,2
336019,1
336019,2
336020,2
336015,2
336017,1
336022,2
336026,2
336030,1
336031,2
336032,2
336034,1
335993,2
335994,2
335997,1
335998,1
335999,2
336003,1
336003,2
336005,1
336006,2
336007,2
336011,1
336013,1
336013,2
336018,1
336020,1
336008,2
336010,1
336021,1
336022,1
336023,2
336024,1
336024,2
336025,1
336025,2
336026,1
336027,2
336029,1
336029,2
336033,2
336034,2
336036,2
336037,1
336037,2
336038,1
336038,2
336039,2
336031,1
336002,2
336009,2
336017,2
336014,1
336023,1
336027,1
336028,1
336030,2
336032,1
336033,1

2025-01-25 03:26:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:19 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:20 - root - INFO - SQL:
SELECT DISTINCT "striker" AS "player_id"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
Results:
player_id
6
2
7
1
9
3
11
13
14
15
4
16
5
24
18
17
25
19
26
20
21
22
23
40
31
41
33
35
43
51
28
49
57
63
60
69
65
71
75
86
87
90
99
104
109
111
114
115
121
129
132
135
8
10
12
27
29
30
42
34
36
37
44
52
32
38
45
46
39
48
50
62
58
232
59
61
66
67
70
53
68
72
79
80
78
81
82
84
88
89
91
93
95
96
97
102
113
116
118
120

2025-01-25 03:26:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:21 - root - INFO - SQL:
SELECT bb."match_id", bb."striker" AS "player_id", SUM(bs."runs_scored") AS "total_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."striker"
   LIMIT 100;
Results:
match_id,player_id,total_runs
335987,2,158
335987,9,8
335987,14,18
335988,19,116
335988,26,54
335988,21,32
335988,29,3
335989,30,7
335989,42,52
335989,32,17
335989,38,14
335990,43,8
335990,6,32
335990,9,25
335990,11,39
335990,49,28
335990,50,2
335991,60,0
335991,61,1
335992,33,5
335992,31,7
335992,26,20
335993,54,14
335998,5,16
336000,41,6
336002,5,2
335987,15,3
335988,23,31
335989,36,2
335991,62,10
335991,4,38
335991,5,13
335992,24,26
335992,32,76
335992,65,4
335994,46,43
335994,49,17
335994,73,1
335994,23,2
335996,48,2
335998,1,12
336000,87,39
336000,29,10
336000,66,1
336001,21,28
336002,46,37
336002,82,2
335990,48,20
335992,35,36
335994,19,5
335995,232,16
335996,46,21
335997,14,34
335999,44,18
335999,85,0
336000,27,40
336003,8,1
336007,9,31
336007,7,5
336011,76,31
336013,114,27
336012,70,20
336020,42,3
336029,61,3
335991,3,0
335996,49,22
335991,54,14
335991,2,5
335991,1,14
335992,25,16
335992,64,2
335992,66,0
335993,57,66
335994,21,53
335995,53,13
335996,64,12
335996,73,2
335997,51,2
335997,9,11
335997,32,61
335997,11,4
335997,15,17
335998,4,0
335998,83,3
336001,11,4
336001,6,0
336003,42,50
336004,76,15
335991,57,0
335991,58,6
335993,59,8
335993,60,12
335993,61,1
335994,18,81
335995,75,4
335996,26,94
335996,67,0
335996,78,4
335997,16,3
335998,18,70

2025-01-25 03:26:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:23 - root - INFO - SQL:
SELECT DISTINCT "match_id", "innings_no", "striker", "non_striker"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
Results:
match_id,innings_no,striker,non_striker
335987,2,6,7
335987,1,2,1
335987,2,7,6
335987,2,8,7
335987,2,7,8
335987,1,1,2
335987,2,9,7
335987,2,7,9
335987,2,10,7
335987,2,7,10
335987,1,3,2
335987,2,11,10
335987,2,10,11
335987,1,2,3
335987,2,10,12
335987,2,10,13
335987,2,13,14
335987,2,14,13
335987,2,15,14
335987,2,14,15
335987,1,2,4
335987,2,14,16
335987,1,5,2
335988,2,24,25
335987,2,12,10
335987,1,4,2
335987,1,2,5
335988,1,18,19
335988,2,25,26
335988,2,26,25
335988,1,20,19
335988,1,19,20
335988,1,19,21
335988,2,27,26
335988,1,22,19
335988,1,23,19
335988,2,29,28
335989,2,40,41
335989,2,40,42
335989,1,32,31
335989,1,33,35
335989,1,36,35
335989,1,35,36
335989,1,37,39
335989,1,35,33
335990,1,43,44
335990,2,51,6
335990,1,44,46
335990,2,52,6
335990,2,9,52
335990,2,8,9
335990,2,11,9
335990,2,9,11
335990,1,48,49
335990,2,12,11
335991,2,5,4
335991,1,56,59
335991,2,4,63
335991,1,59,60
335992,2,32,69
335992,1,25,27
335993,1,55,54
335993,1,70,57
335993,1,60,61
335987,2,16,14
335988,1,17,18
335988,1,18,17
335988,2,25,24
335987,2,13,10
335988,1,21,19
335988,2,26,27
335988,1,19,22
335988,2,26,28
335988,1,19,23
335989,1,33,32
335989,1,33,34
335989,1,34,33
335989,1,35,37
335989,1,39,37
335990,2,6,52
335990,1,47,46
335989,1,30,31
335989,1,31,30
335989,2,41,40
335989,1,32,33
335989,1,38,37
335989,1,37,38
335990,2,6,51
335990,1,44,43
335990,1,46,44
335990,2,52,9
335990,2,9,8
335990,1,46,48
335990,1,49,48
335990,1,50,49
335990,2,11,12
335991,2,62,2
335991,1,54,53
335991,2,62,3
335991,2,3,62

2025-01-25 03:26:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:24 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:25 - root - INFO - SQL:
SELECT "match_id", "innings_no", "striker", "non_striker", COUNT(*) AS "deliveries"
   FROM IPL.IPL."BALL_BY_BALL"
   GROUP BY "match_id", "innings_no", "striker", "non_striker"
   LIMIT 100;
Results:
match_id,innings_no,striker,non_striker,deliveries
335987,2,6,7,3
335987,1,2,1,22
335987,2,7,6,5
335987,2,8,7,5
335987,2,7,8,2
335987,1,1,2,11
335987,2,9,7,7
335987,2,7,9,9
335987,2,10,7,1
335987,2,7,10,2
335987,1,3,2,20
335987,2,11,10,11
335987,2,10,11,6
335987,1,2,3,21
335987,2,10,12,1
335987,2,10,13,2
335987,2,13,14,8
335987,2,14,13,6
335987,2,15,14,8
335987,2,14,15,5
335987,1,2,4,20
335987,2,14,16,6
335987,1,5,2,3
335988,2,24,25,20
335987,2,12,10,2
335987,1,4,2,12
335987,1,2,5,14
335988,1,18,19,10
335988,2,25,26,18
335988,2,26,25,11
335988,1,20,19,3
335988,1,19,20,2
335988,1,19,21,17
335988,2,27,26,13
335988,1,22,19,11
335988,1,23,19,14
335988,2,29,28,5
335989,2,40,41,6
335989,2,40,42,43
335989,1,32,31,6
335989,1,33,35,7
335989,1,36,35,4
335989,1,35,36,6
335989,1,37,39,10
335989,1,35,33,10
335990,1,43,44,10
335990,2,51,6,12
335990,1,44,46,10
335990,2,52,6,10
335990,2,9,52,4
335990,2,8,9,15
335990,2,11,9,19
335990,2,9,11,13
335990,1,48,49,5
335990,2,12,11,6
335991,2,5,4,13
335991,1,56,59,14
335991,2,4,63,9
335991,1,59,60,1
335992,2,32,69,11
335992,1,25,27,4
335993,1,55,54,6
335993,1,70,57,7
335993,1,60,61,4
335987,2,16,14,8
335988,1,17,18,11
335988,1,18,17,7
335988,2,25,24,16
335987,2,13,10,4
335988,1,21,19,14
335988,2,26,27,12
335988,1,19,22,10
335988,2,26,28,12
335988,1,19,23,13
335989,1,33,32,6
335989,1,33,34,6
335989,1,34,33,2
335989,1,35,37,8
335989,1,39,37,7
335990,2,6,52,14
335990,1,47,46,23
335989,1,30,31,13
335989,1,31,30,3
335989,2,41,40,4
335989,1,32,33,9
335989,1,38,37,13
335989,1,37,38,4
335990,2,6,51,19
335990,1,44,43,1
335990,1,46,44,3
335990,2,52,9,3
335990,2,9,8,7
335990,1,46,48,11
335990,1,49,48,7
335990,1,50,49,2
335990,2,11,12,1
335991,2,62,2,3
335991,1,54,53,14
335991,2,62,3,4
335991,2,3,62,1

2025-01-25 03:26:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:26 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:26 - root - INFO - SQL:
SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
   LIMIT 100;
Results:
match_id,innings_no,striker,non_striker,partnership_runs
335987,2,7,6,1
335987,2,7,8,0
335987,1,3,2,20
335987,2,10,11,4
335987,2,11,10,7
335987,1,4,2,12
335987,2,16,14,3
335987,1,2,4,45
335987,1,5,2,5
335988,2,25,24,31
335988,1,19,18,14
335988,1,19,23,42
335988,2,28,29,13
335989,1,30,31,7
335989,2,41,40,12
335989,2,42,40,52
335989,2,40,42,50
335989,1,35,37,13
335989,1,37,39,16
335990,1,43,44,8
335990,2,9,52,3
335991,1,58,56,6
335994,2,46,44,2
335991,1,60,59,0
335995,2,37,38,1
335996,1,26,66,3
335987,2,10,7,0
335987,1,2,3,27
335987,2,13,14,8
335987,1,2,5,45
335988,2,24,25,24
335988,1,23,19,31
335989,2,40,41,8
335989,1,33,35,4
335990,1,45,44,0
335990,1,46,47,30
335990,2,12,11,3
335991,1,54,53,14
335991,2,1,62,1
335992,2,32,34,32
335992,1,25,64,5
335992,1,29,65,0
335992,1,66,65,0
335993,1,57,232,33
335994,2,71,48,20
335995,1,70,55,10
335995,1,57,56,36
336001,1,20,19,65
335988,1,20,19,2
335988,2,29,28,3
335991,1,61,131,0
335996,2,79,49,13
335997,1,11,8,3
335997,1,15,14,15
335998,1,1,2,7
335998,1,5,63,12
336000,2,24,28,1
336000,2,27,28,17
336000,1,90,87,5
336003,1,40,41,26
335997,2,36,74,0
336001,1,17,19,14
336005,2,95,105,1
336008,1,64,24,0
335987,2,10,13,2
335991,1,232,56,10
335992,2,33,69,5
335987,2,10,12,0
335987,2,14,13,4
335988,2,25,26,40
335988,1,19,21,33
335988,2,26,28,27
335989,1,37,38,3
335989,1,39,37,3
335990,1,48,46,10
335990,1,49,48,17
335990,1,50,49,2
335991,2,2,62,5
335991,2,3,62,0
335991,1,56,232,2
335991,1,59,56,9
335991,2,4,63,18
335991,1,59,60,1
335991,1,59,61,4
335992,2,32,69,14
335992,1,27,29,51
335992,1,65,67,4
335993,1,60,61,11
335994,2,49,46,8
335994,2,49,71,9
335994,2,48,71,12
335995,1,232,56,16
335996,1,29,24,6
335997,1,52,9,32
335997,1,14,16,9
335997,1,15,81,2
335998,1,1,62,2
336000,2,26,28,4
336001,2,7,93,3
336001,2,12,14,1

2025-01-25 03:26:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:28 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:28 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
   FROM IPL.IPL."WICKET_TAKEN"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,player_out,kind_out
419167,1,10,3,154,caught
419167,2,10,3,46,caught
419167,2,12,4,8,caught
419167,2,14,4,96,caught
419167,1,18,4,208,caught
419168,1,2,7,18,caught
419168,1,5,5,21,caught
419168,2,6,1,53,caught
419168,2,6,5,178,caught
419168,2,8,2,57,caught
419168,1,14,2,20,caught
419168,1,15,5,109,caught
419168,2,16,2,56,caught
419168,2,18,4,188,caught
419168,2,20,2,131,caught
419168,1,20,4,125,caught
419169,1,1,4,53,caught
419169,1,4,2,57,caught
419169,1,7,1,56,caught
419169,1,17,3,54,caught
419169,1,19,3,131,caught
419170,2,2,4,42,caught
419170,1,8,2,185,caught
419170,1,9,4,18,caught
419170,1,12,2,23,caught
419170,2,15,2,133,caught
419170,2,15,5,79,caught
419170,2,17,6,154,caught
419170,1,18,1,20,caught
419170,2,19,6,221,caught
501203,1,1,6,185,caught
501203,1,11,3,21,caught
501203,2,16,2,9,caught
501203,1,18,2,20,caught
501203,2,20,2,63,caught
501204,1,5,5,42,caught
501204,1,6,3,26,caught
501204,2,6,5,252,caught
501204,1,11,1,257,caught
501204,1,13,6,154,caught
501204,1,18,3,258,caught
501204,1,20,1,112,caught
501204,1,20,3,94,caught
501205,2,2,2,135,caught
501205,1,9,6,55,caught
501205,2,10,6,260,caught
501205,1,12,3,2,caught
501205,2,18,4,79,caught
501205,1,19,4,259,caught
501206,1,7,6,254,caught
501206,1,15,2,183,caught
501206,1,18,4,106,caught
501207,2,1,1,74,caught
501207,1,1,4,53,caught
501207,1,2,3,100,caught
501207,1,3,4,167,caught
501207,1,4,3,88,caught
501207,2,8,5,171,caught
501207,1,9,3,48,caught
501207,2,9,3,157,caught
501207,1,18,1,67,caught
501207,1,20,1,14,caught
501208,2,9,6,26,caught
501208,2,13,2,154,caught
501208,1,13,3,9,caught
501208,2,14,6,93,caught
501208,2,17,4,258,caught
501208,2,18,1,112,caught
501208,1,20,6,31,caught
501209,1,1,3,41,caught
501209,1,5,5,254,caught
501209,1,8,1,262,caught
501209,1,8,3,183,caught
501209,2,8,3,6,caught
501209,2,11,5,266,caught
501209,1,18,4,187,caught
501209,1,19,7,54,caught
501210,1,5,4,8,caught
501211,1,1,2,21,caught
501211,2,6,5,53,caught
501211,2,14,6,264,caught
501212,1,1,1,2,caught
501212,1,3,5,64,caught
501212,1,5,5,17,caught
501212,2,8,4,74,caught
501212,2,10,5,171,caught
501212,2,12,2,27,caught
501212,1,16,2,104,caught
501212,1,17,1,35,caught
501213,2,2,6,135,caught
501213,1,3,5,42,caught
501213,2,5,6,260,caught
501213,2,7,4,110,caught
501213,1,9,6,65,caught
501213,2,12,1,79,caught
501213,1,15,4,26,caught
501213,2,17,5,203,caught
501213,2,17,6,268,caught
501213,2,20,1,269,caught
501213,1,20,2,154,caught

2025-01-25 03:26:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:29 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:30 - root - INFO - SQL:
SELECT DISTINCT "match_id", "innings_no", "over_id", "ball_id", "player_out"
   FROM IPL.IPL."WICKET_TAKEN"
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,player_out
335987,1,6,2,1
335987,1,13,1,3
335987,1,18,1,4
335987,2,2,1,6
335987,2,3,2,8
335987,2,5,5,9
335987,2,6,2,7
335987,2,8,5,11
335987,2,9,2,12
335987,2,9,8,10
335987,2,12,1,13
335987,2,14,1,15
335987,2,16,2,16
335988,1,3,5,17
335988,1,7,2,18
335988,1,8,1,20
335988,1,13,2,21
335988,1,16,3,22
335988,2,6,6,24
335988,2,11,2,25
335988,2,15,2,27
335988,2,18,4,26
335989,1,3,3,30
335989,1,4,5,31
335989,1,7,2,32
335989,1,8,4,34
335989,1,11,3,33
335989,1,13,1,36
335989,1,15,2,35
335989,1,18,1,38
335989,2,2,4,41
335990,1,2,5,43
335990,1,4,4,45
335990,1,6,4,44
335990,1,14,3,47
335990,1,17,5,46
335990,1,19,5,48
335990,1,20,6,49
335990,2,5,7,51
335990,2,9,6,6
335990,2,10,6,52
335990,2,14,4,8
335990,2,19,4,9
335991,1,4,2,54
335991,1,5,3,55
335991,1,9,1,53
335991,1,9,4,57
335991,1,12,4,58
335991,1,15,3,232
335991,1,18,4,56
335991,1,18,6,60
335991,1,19,3,59
335991,1,19,4,131
335991,2,2,2,2
335991,2,3,1,3
335991,2,5,2,62
335991,2,13,8,1
335991,2,17,3,5
335992,1,5,5,24
335992,1,7,3,26
335992,1,8,4,64
335992,1,9,6,25
335992,1,17,5,27
335992,1,18,2,29
335992,1,18,4,66
335992,1,19,6,65
335992,2,2,1,33
335992,2,3,3,31
335992,2,5,5,69
335992,2,12,2,34
335993,1,2,6,53
335993,1,6,1,55
335993,1,8,6,54
335993,1,10,3,56
335993,1,13,1,70
335993,1,17,1,59
335993,1,19,4,57
335993,1,20,2,232
335993,2,4,3,40
335994,1,4,1,17
335994,1,5,4,19
335994,1,15,6,21
335994,1,19,7,18
335994,1,20,5,20
335994,2,1,8,43
335994,2,4,4,44
335994,2,10,4,46
335994,2,12,4,49
335994,2,15,2,71
335994,2,16,3,72
335994,2,19,5,50
335995,1,3,2,53
335995,1,3,6,70
335995,1,9,3,55
335995,1,18,6,57
335995,1,20,7,232
335995,2,3,1,69
335995,2,10,3,31
335995,2,12,6,32
335995,2,18,1,33

2025-01-25 03:26:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:31 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:32 - root - INFO - SQL:
SELECT bb."match_id", bb."innings_no", bb."striker" AS "player_id", SUM(bs."runs_scored") AS "individual_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."innings_no", bb."striker"
   LIMIT 100;
Results:
match_id,innings_no,player_id,individual_runs
335987,2,7,6
335987,2,8,1
335987,1,1,10
335987,2,10,6
335987,1,3,20
335988,2,24,24
335987,2,13,9
335988,1,17,15
335988,2,26,54
335988,2,29,3
335989,2,40,58
335989,1,34,1
335990,2,6,32
335990,1,44,29
335990,2,52,23
335990,2,9,25
335990,2,11,39
335990,1,50,2
335991,2,2,5
335991,1,57,0
335992,1,65,4
335993,2,40,12
335993,2,41,94
335994,1,23,2
335998,2,18,70
335987,1,4,12
335989,1,38,14
335990,2,51,16
335990,1,46,48
335990,1,47,19
335991,1,55,0
335992,1,24,26
335992,2,32,76
335993,2,42,25
335993,1,56,12
335994,1,17,14
335994,1,22,5
335995,2,37,1
335996,2,46,21
335996,2,49,22
335997,2,31,21
335997,2,32,61
335997,1,14,34
335999,1,44,18
335999,1,49,31
336000,2,27,40
336001,1,20,65
336002,1,83,10
336003,2,7,10
335992,2,34,17
335994,2,72,9
335994,1,20,30
335995,2,32,4
335996,2,80,2
335996,1,65,0
335998,1,4,0
336000,1,91,6
336006,1,108,54
336008,1,100,40
336009,2,41,40
336009,2,91,3
336010,1,107,0
336031,2,88,6
336043,2,118,4
335987,2,14,18
335989,1,35,29
335990,2,8,23
335991,1,60,0
335995,2,33,34
335989,1,33,9
335991,1,54,14
335991,2,62,10
335991,2,3,0
335993,1,53,8
335994,2,71,24
335995,1,56,117
335995,2,38,22
335996,1,66,16
335997,1,51,2
335998,2,17,21
335998,1,63,42
335999,1,72,7
336001,1,19,47
336003,1,89,8
336004,2,100,84
335988,1,22,13
335990,1,49,28
335992,1,64,2
335992,1,27,57
335992,1,66,0
335995,1,55,16
335995,1,232,16
335996,1,24,18
335996,2,43,11
335997,1,11,4
335997,1,81,1
335998,1,84,4
336000,2,24,1
336000,1,42,0
336000,2,29,10

2025-01-25 03:26:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:33 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:34 - root - INFO - SQL:
SELECT p."match_id", p."innings_no", p."striker", p."non_striker", s1."player_runs" AS "striker_runs", s2."player_runs" AS "non_striker_runs", p."partnership_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) p
    JOIN (
      SELECT bb."match_id", bb."innings_no", bb."striker", SUM(bs."runs_scored") AS "player_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker"
    ) s1
      ON p."match_id" = s1."match_id" AND p."innings_no" = s1."innings_no" AND p."striker" = s1."striker"
    JOIN (
      SELECT bb."match_id", bb."innings_no", bb."non_striker" AS "player_id", SUM(bs."runs_scored") AS "player_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."non_striker"
    ) s2
      ON p."match_id" = s2."match_id" AND p."innings_no" = s2."innings_no" AND p."non_striker" = s2."player_id"
    LIMIT 100;
Results:
match_id,innings_no,striker,non_striker,striker_runs,non_striker_runs,partnership_runs
335987,2,7,6,6,1,1
335987,2,7,8,6,0,0
335987,1,3,2,20,47,20
335987,2,11,10,7,8,7
335987,2,10,11,6,4,4
335987,2,13,14,9,14,8
335987,2,14,13,18,6,4
335987,2,16,14,3,14,3
335987,1,2,5,158,45,45
335987,2,10,7,6,11,0
335987,1,2,4,158,45,45
335987,1,4,2,12,47,12
335988,1,19,18,116,29,14
335988,1,19,21,116,33,33
335989,2,40,41,58,8,8
335989,2,42,40,52,64,52
335989,1,37,39,26,16,16
335990,2,52,6,23,34,18
335990,1,46,47,48,30,30
335990,1,48,46,20,51,10
335990,2,12,11,3,19,3
335991,1,56,232,32,2,2
335991,1,59,60,14,1,1
335992,1,67,68,24,15,15
335994,2,48,72,45,2,2
335996,1,24,26,18,53,16
335988,2,24,25,24,36,24
335987,2,10,13,6,6,2
335988,2,25,26,71,71,40
335988,1,19,23,116,42,42
335989,1,39,37,3,30,3
335990,1,43,44,8,11,8
335990,2,11,9,39,66,38
335990,1,50,49,2,12,2
335991,2,2,62,5,6,5
335991,2,3,62,0,6,0
335991,2,1,62,14,6,1
335991,2,4,5,38,6,6
335991,2,63,4,4,30,4
335992,2,32,34,76,32,32
335992,1,25,64,16,5,5
335993,2,41,42,94,75,75
335994,1,18,21,81,41,41
335994,1,18,20,81,30,25
335994,1,20,22,30,8,6
335995,1,57,56,36,59,36
335995,1,232,56,16,59,16
335999,2,55,53,37,37,37
336001,2,94,12,1,1,1
335989,1,36,35,2,13,2
335992,2,33,69,5,26,5
335992,1,27,29,57,51,51
335993,1,54,56,14,9,2
335994,1,22,20,5,30,5
335994,1,23,22,2,8,2
335995,2,37,38,1,6,1
335996,1,27,26,18,53,18
335996,1,67,66,0,7,0
335997,1,8,11,13,9,9
335998,1,1,2,12,7,7
336004,1,70,57,13,32,13
336004,2,64,100,45,77,45
335996,1,26,66,94,7,3
336014,2,20,107,33,47,7
335987,1,2,3,158,27,27
335987,1,5,2,5,47,5
335988,2,25,24,71,31,31
335988,2,26,28,54,30,27
335990,2,52,9,23,66,5
335991,1,54,53,14,19,14
335991,2,4,63,38,18,18
335993,1,56,54,12,21,11
335996,1,29,24,6,60,6
335987,2,10,12,6,0,0
335988,1,20,19,2,94,2
335988,2,29,28,3,30,3
335988,2,28,29,21,13,13
335989,2,41,40,12,64,12
335989,1,35,33,29,17,4
335989,1,33,35,9,13,4
335990,1,45,44,0,11,0
335990,2,9,52,25,15,3
335990,1,49,48,28,32,17
335991,1,53,54,23,3,3
335991,1,58,56,6,44,6
335991,1,59,61,14,4,4
335992,2,32,69,76,26,14
335992,1,27,25,57,54,6
335992,1,25,27,16,13,1
335992,1,66,65,0,9,0
335992,1,65,67,4,5,4
335993,1,54,55,14,12,12
335993,1,61,60,1,5,1
335994,1,17,18,14,96,14
335994,2,44,46,20,23,15
335994,2,49,46,17,23,8
335994,2,48,71,45,21,12
335994,2,71,48,24,58,20
335995,1,70,55,10,58,10
335995,2,74,31,71,36,36

2025-01-25 03:26:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:35 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:36 - root - INFO - SQL:
SELECT "match_id", MAX("partnership_runs") AS "max_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) sub
    GROUP BY "match_id"
    LIMIT 100;
Results:
match_id,max_runs
335988,42
335996,54
335993,75
335997,57
336000,40
336005,35
335999,109
336009,30
336011,31
336013,32
336015,30
336024,80
336020,41
336021,61
336023,59
336030,53
336041,40
336042,40
392194,65
392207,46
392224,35
392233,43
419134,37
419157,45
419162,46
548365,55
336003,50
336006,71
336027,40
336037,47
336038,79
336043,39
336044,55
392188,38
392190,65
392193,29
392201,44
392214,48
392218,22
392221,58
392223,59
392237,38
419111,65
419112,86
419117,75
419135,49
419142,85
419167,46
501227,84
501259,69
501273,34
548324,29
392220,44
419153,45
419165,41
501243,37
501262,51
501266,20
548341,59
548348,32
419129,35
501242,51
598054,53
729312,16
336033,80
392204,43
392217,29
392227,41
392243,37
336026,31
392203,62
392213,66
392225,24
392226,43
392234,40
392235,52
419118,66
419133,38
419136,74
419137,24
419138,47
419144,71
419145,36
419150,53
419158,78
419164,53
419166,46
501208,30
501213,35
501226,54
548338,43
548363,38
548378,33
548379,58
336025,72
392186,35
392199,36
392222,45
392228,41
392232,44

2025-01-25 03:26:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:37 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:37 - root - INFO - SQL:
SELECT p."match_id", p."innings_no", p."striker", p."non_striker", p."partnership_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) p
    JOIN (
      SELECT "match_id", MAX("partnership_runs") AS "max_runs"
      FROM (
        SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
        FROM IPL.IPL."BALL_BY_BALL" bb
        JOIN IPL.IPL."BATSMAN_SCORED" bs
          ON bb."match_id" = bs."match_id"
          AND bb."innings_no" = bs."innings_no"
          AND bb."over_id" = bs."over_id"
          AND bb."ball_id" = bs."ball_id"
        GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
      ) sub
      GROUP BY "match_id"
    ) m
      ON p."match_id" = m."match_id" AND p."partnership_runs" = m."max_runs"
    LIMIT 100;
Results:
match_id,innings_no,striker,non_striker,partnership_runs
335994,1,21,18,53
335997,2,32,74,57
335995,1,56,57,73
336010,1,109,21,34
336011,2,76,100,31
336012,2,53,58,41
335991,1,56,59,22
336002,2,71,46,64
336000,2,28,64,40
336017,2,44,133,54
336008,2,4,62,58
336016,2,31,74,68
336037,1,44,133,47
336042,1,112,54,40
392187,1,6,14,22
392193,1,57,53,29
336019,1,4,1,52
336020,2,32,74,41
336033,1,100,139,80
336034,2,107,17,29
336039,2,57,55,57
336040,1,26,100,45
336043,1,101,74,39
336045,2,31,32,34
392186,1,48,133,35
392188,1,24,161,38
392189,2,57,97,36
392190,1,18,17,65
392197,2,154,133,39
392199,1,11,8,36
392202,1,133,44,68
335998,2,20,18,43
336025,1,40,42,72
392193,1,53,57,29
392191,2,162,2,32
392207,1,21,20,46
392209,2,27,24,50
392210,2,182,35,36
392214,2,147,57,48
392218,2,31,183,22
392225,2,101,31,24
392226,1,4,2,43
392227,2,133,71,41
392228,2,56,112,41
392235,1,110,135,52
392243,2,96,6,37
419112,2,31,212,86
419114,2,87,104,50
419116,2,41,110,45
419117,1,214,161,75
419119,1,79,208,34
419123,1,229,183,31
419127,1,162,204,46
419131,2,31,229,37
419132,1,87,1,41
419139,1,88,40,47
419140,1,1,4,54
392231,2,26,27,33
392240,1,133,85,36
419115,1,97,56,45
419129,2,214,161,35
419130,1,21,23,78
419133,2,96,9,38
419138,2,185,18,47
419111,1,191,204,65
419144,1,162,87,71
419146,1,229,32,36
419147,1,20,18,31
419148,2,224,183,83
419149,1,1,162,49
419150,2,56,178,53
419153,2,46,52,45
419154,2,64,29,27
419155,1,154,133,31
419162,1,208,210,46
419166,2,2,1,46
419167,1,79,208,46
501204,2,192,52,35
501205,1,2,55,41
501206,2,133,57,35
501211,1,185,23,74
501212,1,35,104,46
501214,2,9,40,76
501216,1,185,19,31
501218,2,187,41,46
501223,2,133,208,34
501224,1,64,2,24
501229,1,57,56,56
501230,2,6,32,40
501238,1,41,199,30
501239,2,40,87,39
501246,2,96,46,25
501247,2,9,216,45
419152,2,178,56,34
501210,2,208,133,63
501232,2,8,162,48
501240,1,46,96,35
501242,1,208,133,51
501245,2,19,21,72
501251,1,57,208,49

2025-01-25 03:26:37 - root - INFO - itercount: 0
2025-01-25 03:26:37 - root - INFO - Database Name: IPL
Schema Name: IPL
DDL describes table information.
,0
table_name,PLAYER_MATCH
description,
DDL,"create or replace TABLE PLAYER_MATCH (
	""match_id"" NUMBER(38,0),
	""player_id"" NUMBER(38,0),
	""role"" VARCHAR(16777216),
	""team_id"" NUMBER(38,0)
);"

,1
table_name,PLAYER
description,
DDL,"create or replace TABLE PLAYER (
	""player_id"" NUMBER(38,0),
	""player_name"" VARCHAR(16777216),
	""dob"" VARCHAR(16777216),
	""batting_hand"" VARCHAR(16777216),
	""bowling_skill"" VARCHAR(16777216),
	""country_name"" VARCHAR(16777216)
);"

,2
table_name,BATSMAN_SCORED
description,
DDL,"create or replace TABLE BATSMAN_SCORED (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""runs_scored"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,3
table_name,WICKET_TAKEN
description,
DDL,"create or replace TABLE WICKET_TAKEN (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""player_out"" NUMBER(38,0),
	""kind_out"" VARCHAR(16777216),
	""innings_no"" NUMBER(38,0)
);"

,4
table_name,BALL_BY_BALL
description,
DDL,"create or replace TABLE BALL_BY_BALL (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0),
	""team_batting"" NUMBER(38,0),
	""team_bowling"" NUMBER(38,0),
	""striker_batting_position"" NUMBER(38,0),
	""striker"" NUMBER(38,0),
	""non_striker"" NUMBER(38,0),
	""bowler"" NUMBER(38,0)
);"

,5
table_name,EXTRA_RUNS
description,
DDL,"create or replace TABLE EXTRA_RUNS (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""extra_type"" VARCHAR(16777216),
	""extra_runs"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,6
table_name,MATCH
description,
DDL,"create or replace TABLE MATCH (
	""match_id"" NUMBER(38,0),
	""team_1"" NUMBER(38,0),
	""team_2"" NUMBER(38,0),
	""match_date"" VARCHAR(16777216),
	""season_id"" NUMBER(38,0),
	""venue"" VARCHAR(16777216),
	""toss_winner"" NUMBER(38,0),
	""toss_decision"" VARCHAR(16777216),
	""win_type"" VARCHAR(16777216),
	""win_margin"" NUMBER(38,0),
	""outcome_type"" VARCHAR(16777216),
	""match_winner"" NUMBER(38,0),
	""man_of_the_match"" NUMBER(38,0)
);"

,7
table_name,TEAM
description,
DDL,"create or replace TABLE TEAM (
	""team_id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}
Begin Exploring Related Columns
To address the task, we need to identify the relevant tables and columns that will help us find the IDs of players who scored the highest number of partnership runs for each match.

**Relevant Tables and Columns:**

1. **`BALL_BY_BALL`**
   - `"match_id"`: To identify each match.
   - `"innings_no"`: To distinguish between innings in a match.
   - `"over_id"`, `"ball_id"`: To sequence the deliveries.
   - `"striker"`: ID of the batsman facing the ball.
   - `"non_striker"`: ID of the batsman at the other end.
   - `"bowler"`: ID of the bowler.

2. **`BATSMAN_SCORED`**
   - `"match_id"`, `"innings_no"`, `"over_id"`, `"ball_id"`: To link with `BALL_BY_BALL`.
   - `"runs_scored"`: Runs scored by the striker on that ball.

3. **`WICKET_TAKEN`**
   - `"match_id"`, `"innings_no"`, `"over_id"`, `"ball_id"`: To identify when wickets fall, ending partnerships.
   - `"player_out"`: ID of the player who got out.

4. **`PLAYER`**
   - `"player_id"`: Unique identifier for each player.
   - `"player_name"`: Name of the player (optional for reference).

5. **`PLAYER_MATCH`**
   - `"match_id"`: To associate players with matches.
   - `"player_id"`: IDs of players participating in the match.
   - `"team_id"`: The team the player belongs to.

**Potential Conditions:**

- Linking tables using `"match_id"`, `"innings_no"`, `"over_id"`, and `"ball_id"`.
- Aggregating `"runs_scored"` to calculate individual and partnership runs.
- Grouping by partnerships using `"striker"` and `"non_striker"`.
- Identifying when partnerships change using wicket events from `WICKET_TAKEN`.
- Ordering players based on their individual scores and IDs as per the given criteria.

**Sample SQL Queries:**

1. **Retrieve all distinct matches and innings:**

   ```sql
   SELECT DISTINCT "match_id", "innings_no"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
   ```

2. **List all batsmen (strikers) who played in matches:**

   ```sql
   SELECT DISTINCT "striker" AS "player_id"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
   ```

3. **Get total runs scored by each batsman in each match:**

   ```sql
   SELECT bb."match_id", bb."striker" AS "player_id", SUM(bs."runs_scored") AS "total_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."striker"
   LIMIT 100;
   ```

4. **List all partnerships in matches:**

   ```sql
   SELECT DISTINCT "match_id", "innings_no", "striker", "non_striker"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
   ```

5. **Count the number of deliveries faced by each partnership:**

   ```sql
   SELECT "match_id", "innings_no", "striker", "non_striker", COUNT(*) AS "deliveries"
   FROM IPL.IPL."BALL_BY_BALL"
   GROUP BY "match_id", "innings_no", "striker", "non_striker"
   LIMIT 100;
   ```

6. **Calculate total runs scored by each partnership:**

   ```sql
   SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
   LIMIT 100;
   ```

7. **Retrieve details of wickets taken in matches:**

   ```sql
   SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
   FROM IPL.IPL."WICKET_TAKEN"
   LIMIT 100;
   ```

8. **Identify when partnerships change (due to wickets):**

   ```sql
   SELECT DISTINCT "match_id", "innings_no", "over_id", "ball_id", "player_out"
   FROM IPL.IPL."WICKET_TAKEN"
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
   ```

9. **Get individual scores for strikers in each innings:**

   ```sql
   SELECT bb."match_id", bb."innings_no", bb."striker" AS "player_id", SUM(bs."runs_scored") AS "individual_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."innings_no", bb."striker"
   LIMIT 100;
   ```

10. **List partnerships along with their individual scores and total runs:**

    ```sql
    SELECT p."match_id", p."innings_no", p."striker", p."non_striker", s1."player_runs" AS "striker_runs", s2."player_runs" AS "non_striker_runs", p."partnership_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) p
    JOIN (
      SELECT bb."match_id", bb."innings_no", bb."striker", SUM(bs."runs_scored") AS "player_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker"
    ) s1
      ON p."match_id" = s1."match_id" AND p."innings_no" = s1."innings_no" AND p."striker" = s1."striker"
    JOIN (
      SELECT bb."match_id", bb."innings_no", bb."non_striker" AS "player_id", SUM(bs."runs_scored") AS "player_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."non_striker"
    ) s2
      ON p."match_id" = s2."match_id" AND p."innings_no" = s2."innings_no" AND p."non_striker" = s2."player_id"
    LIMIT 100;
    ```

11. **Find the maximum partnership runs in each match:**

    ```sql
    SELECT "match_id", MAX("partnership_runs") AS "max_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) sub
    GROUP BY "match_id"
    LIMIT 100;
    ```

12. **List top partnerships in each match based on runs scored:**

    ```sql
    SELECT p."match_id", p."innings_no", p."striker", p."non_striker", p."partnership_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) p
    JOIN (
      SELECT "match_id", MAX("partnership_runs") AS "max_runs"
      FROM (
        SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
        FROM IPL.IPL."BALL_BY_BALL" bb
        JOIN IPL.IPL."BATSMAN_SCORED" bs
          ON bb."match_id" = bs."match_id"
          AND bb."innings_no" = bs."innings_no"
          AND bb."over_id" = bs."over_id"
          AND bb."ball_id" = bs."ball_id"
        GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
      ) sub
      GROUP BY "match_id"
    ) m
      ON p."match_id" = m."match_id" AND p."partnership_runs" = m."max_runs"
    LIMIT 100;
    ```

These queries explore the data by selecting and aggregating relevant columns to understand how to calculate partnership runs, individual scores, and identify top partnerships in each match. They incrementally build up from simple selections to more complex aggregations and joins, providing insights into the structure and content of the data without directly answering the original task.Query:
SELECT DISTINCT "match_id", "innings_no"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
Answer:
match_id,innings_no
335987,2
335987,1
335988,1
335988,2
335989,1
335989,2
335990,1
335990,2
335991,1
335991,2
335992,1
335992,2
335993,1
335994,1
335995,1
335995,2
335996,1
335996,2
335997,2
335998,2
335999,1
336000,1
336001,2
336002,1
336000,2
336001,1
336004,1
336004,2
336005,2
336006,1
336007,1
336008,1
336009,1
336010,2
336011,2
336012,1
336012,2
336014,2
336015,1
336016,1
336016,2
336018,2
336019,1
336019,2
336020,2
336015,2
336017,1
336022,2
336026,2
336030,1
336031,2
336032,2
336034,1
335993,2
335994,2
335997,1
335998,1
335999,2
336003,1
336003,2
336005,1
336006,2
336007,2
336011,1
336013,1
336013,2
336018,1
336020,1
336008,2
336010,1
336021,1
336022,1
336023,2
336024,1
336024,2
336025,1
336025,2
336026,1
336027,2
336029,1
336029,2
336033,2
336034,2
336036,2
336037,1
336037,2
336038,1
336038,2
336039,2
336031,1
336002,2
336009,2
336017,2
336014,1
336023,1
336027,1
336028,1
336030,2
336032,1
336033,1
Query:
SELECT DISTINCT "striker" AS "player_id"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
Answer:
player_id
6
2
7
1
9
3
11
13
14
15
4
16
5
24
18
17
25
19
26
20
21
22
23
40
31
41
33
35
43
51
28
49
57
63
60
69
65
71
75
86
87
90
99
104
109
111
114
115
121
129
132
135
8
10
12
27
29
30
42
34
36
37
44
52
32
38
45
46
39
48
50
62
58
232
59
61
66
67
70
53
68
72
79
80
78
81
82
84
88
89
91
93
95
96
97
102
113
116
118
120
Query:
SELECT bb."match_id", bb."striker" AS "player_id", SUM(bs."runs_scored") AS "total_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."striker"
   LIMIT 100;
Answer:
match_id,player_id,total_runs
335987,2,158
335987,9,8
335987,14,18
335988,19,116
335988,26,54
335988,21,32
335988,29,3
335989,30,7
335989,42,52
335989,32,17
335989,38,14
335990,43,8
335990,6,32
335990,9,25
335990,11,39
335990,49,28
335990,50,2
335991,60,0
335991,61,1
335992,33,5
335992,31,7
335992,26,20
335993,54,14
335998,5,16
336000,41,6
336002,5,2
335987,15,3
335988,23,31
335989,36,2
335991,62,10
335991,4,38
335991,5,13
335992,24,26
335992,32,76
335992,65,4
335994,46,43
335994,49,17
335994,73,1
335994,23,2
335996,48,2
335998,1,12
336000,87,39
336000,29,10
336000,66,1
336001,21,28
336002,46,37
336002,82,2
335990,48,20
335992,35,36
335994,19,5
335995,232,16
335996,46,21
335997,14,34
335999,44,18
335999,85,0
336000,27,40
336003,8,1
336007,9,31
336007,7,5
336011,76,31
336013,114,27
336012,70,20
336020,42,3
336029,61,3
335991,3,0
335996,49,22
335991,54,14
335991,2,5
335991,1,14
335992,25,16
335992,64,2
335992,66,0
335993,57,66
335994,21,53
335995,53,13
335996,64,12
335996,73,2
335997,51,2
335997,9,11
335997,32,61
335997,11,4
335997,15,17
335998,4,0
335998,83,3
336001,11,4
336001,6,0
336003,42,50
336004,76,15
335991,57,0
335991,58,6
335993,59,8
335993,60,12
335993,61,1
335994,18,81
335995,75,4
335996,26,94
335996,67,0
335996,78,4
335997,16,3
335998,18,70
Query:
SELECT DISTINCT "match_id", "innings_no", "striker", "non_striker"
   FROM IPL.IPL."BALL_BY_BALL"
   LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker
335987,2,6,7
335987,1,2,1
335987,2,7,6
335987,2,8,7
335987,2,7,8
335987,1,1,2
335987,2,9,7
335987,2,7,9
335987,2,10,7
335987,2,7,10
335987,1,3,2
335987,2,11,10
335987,2,10,11
335987,1,2,3
335987,2,10,12
335987,2,10,13
335987,2,13,14
335987,2,14,13
335987,2,15,14
335987,2,14,15
335987,1,2,4
335987,2,14,16
335987,1,5,2
335988,2,24,25
335987,2,12,10
335987,1,4,2
335987,1,2,5
335988,1,18,19
335988,2,25,26
335988,2,26,25
335988,1,20,19
335988,1,19,20
335988,1,19,21
335988,2,27,26
335988,1,22,19
335988,1,23,19
335988,2,29,28
335989,2,40,41
335989,2,40,42
335989,1,32,31
335989,1,33,35
335989,1,36,35
335989,1,35,36
335989,1,37,39
335989,1,35,33
335990,1,43,44
335990,2,51,6
335990,1,44,46
335990,2,52,6
335990,2,9,52
335990,2,8,9
335990,2,11,9
335990,2,9,11
335990,1,48,49
335990,2,12,11
335991,2,5,4
335991,1,56,59
335991,2,4,63
335991,1,59,60
335992,2,32,69
335992,1,25,27
335993,1,55,54
335993,1,70,57
335993,1,60,61
335987,2,16,14
335988,1,17,18
335988,1,18,17
335988,2,25,24
335987,2,13,10
335988,1,21,19
335988,2,26,27
335988,1,19,22
335988,2,26,28
335988,1,19,23
335989,1,33,32
335989,1,33,34
335989,1,34,33
335989,1,35,37
335989,1,39,37
335990,2,6,52
335990,1,47,46
335989,1,30,31
335989,1,31,30
335989,2,41,40
335989,1,32,33
335989,1,38,37
335989,1,37,38
335990,2,6,51
335990,1,44,43
335990,1,46,44
335990,2,52,9
335990,2,9,8
335990,1,46,48
335990,1,49,48
335990,1,50,49
335990,2,11,12
335991,2,62,2
335991,1,54,53
335991,2,62,3
335991,2,3,62
Query:
SELECT "match_id", "innings_no", "striker", "non_striker", COUNT(*) AS "deliveries"
   FROM IPL.IPL."BALL_BY_BALL"
   GROUP BY "match_id", "innings_no", "striker", "non_striker"
   LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker,deliveries
335987,2,6,7,3
335987,1,2,1,22
335987,2,7,6,5
335987,2,8,7,5
335987,2,7,8,2
335987,1,1,2,11
335987,2,9,7,7
335987,2,7,9,9
335987,2,10,7,1
335987,2,7,10,2
335987,1,3,2,20
335987,2,11,10,11
335987,2,10,11,6
335987,1,2,3,21
335987,2,10,12,1
335987,2,10,13,2
335987,2,13,14,8
335987,2,14,13,6
335987,2,15,14,8
335987,2,14,15,5
335987,1,2,4,20
335987,2,14,16,6
335987,1,5,2,3
335988,2,24,25,20
335987,2,12,10,2
335987,1,4,2,12
335987,1,2,5,14
335988,1,18,19,10
335988,2,25,26,18
335988,2,26,25,11
335988,1,20,19,3
335988,1,19,20,2
335988,1,19,21,17
335988,2,27,26,13
335988,1,22,19,11
335988,1,23,19,14
335988,2,29,28,5
335989,2,40,41,6
335989,2,40,42,43
335989,1,32,31,6
335989,1,33,35,7
335989,1,36,35,4
335989,1,35,36,6
335989,1,37,39,10
335989,1,35,33,10
335990,1,43,44,10
335990,2,51,6,12
335990,1,44,46,10
335990,2,52,6,10
335990,2,9,52,4
335990,2,8,9,15
335990,2,11,9,19
335990,2,9,11,13
335990,1,48,49,5
335990,2,12,11,6
335991,2,5,4,13
335991,1,56,59,14
335991,2,4,63,9
335991,1,59,60,1
335992,2,32,69,11
335992,1,25,27,4
335993,1,55,54,6
335993,1,70,57,7
335993,1,60,61,4
335987,2,16,14,8
335988,1,17,18,11
335988,1,18,17,7
335988,2,25,24,16
335987,2,13,10,4
335988,1,21,19,14
335988,2,26,27,12
335988,1,19,22,10
335988,2,26,28,12
335988,1,19,23,13
335989,1,33,32,6
335989,1,33,34,6
335989,1,34,33,2
335989,1,35,37,8
335989,1,39,37,7
335990,2,6,52,14
335990,1,47,46,23
335989,1,30,31,13
335989,1,31,30,3
335989,2,41,40,4
335989,1,32,33,9
335989,1,38,37,13
335989,1,37,38,4
335990,2,6,51,19
335990,1,44,43,1
335990,1,46,44,3
335990,2,52,9,3
335990,2,9,8,7
335990,1,46,48,11
335990,1,49,48,7
335990,1,50,49,2
335990,2,11,12,1
335991,2,62,2,3
335991,1,54,53,14
335991,2,62,3,4
335991,2,3,62,1
Query:
SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
   LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker,partnership_runs
335987,2,7,6,1
335987,2,7,8,0
335987,1,3,2,20
335987,2,10,11,4
335987,2,11,10,7
335987,1,4,2,12
335987,2,16,14,3
335987,1,2,4,45
335987,1,5,2,5
335988,2,25,24,31
335988,1,19,18,14
335988,1,19,23,42
335988,2,28,29,13
335989,1,30,31,7
335989,2,41,40,12
335989,2,42,40,52
335989,2,40,42,50
335989,1,35,37,13
335989,1,37,39,16
335990,1,43,44,8
335990,2,9,52,3
335991,1,58,56,6
335994,2,46,44,2
335991,1,60,59,0
335995,2,37,38,1
335996,1,26,66,3
335987,2,10,7,0
335987,1,2,3,27
335987,2,13,14,8
335987,1,2,5,45
335988,2,24,25,24
335988,1,23,19,31
335989,2,40,41,8
335989,1,33,35,4
335990,1,45,44,0
335990,1,46,47,30
335990,2,12,11,3
335991,1,54,53,14
335991,2,1,62,1
335992,2,32,34,32
335992,1,25,64,5
335992,1,29,65,0
335992,1,66,65,0
335993,1,57,232,33
335994,2,71,48,20
335995,1,70,55,10
335995,1,57,56,36
336001,1,20,19,65
335988,1,20,19,2
335988,2,29,28,3
335991,1,61,131,0
335996,2,79,49,13
335997,1,11,8,3
335997,1,15,14,15
335998,1,1,2,7
335998,1,5,63,12
336000,2,24,28,1
336000,2,27,28,17
336000,1,90,87,5
336003,1,40,41,26
335997,2,36,74,0
336001,1,17,19,14
336005,2,95,105,1
336008,1,64,24,0
335987,2,10,13,2
335991,1,232,56,10
335992,2,33,69,5
335987,2,10,12,0
335987,2,14,13,4
335988,2,25,26,40
335988,1,19,21,33
335988,2,26,28,27
335989,1,37,38,3
335989,1,39,37,3
335990,1,48,46,10
335990,1,49,48,17
335990,1,50,49,2
335991,2,2,62,5
335991,2,3,62,0
335991,1,56,232,2
335991,1,59,56,9
335991,2,4,63,18
335991,1,59,60,1
335991,1,59,61,4
335992,2,32,69,14
335992,1,27,29,51
335992,1,65,67,4
335993,1,60,61,11
335994,2,49,46,8
335994,2,49,71,9
335994,2,48,71,12
335995,1,232,56,16
335996,1,29,24,6
335997,1,52,9,32
335997,1,14,16,9
335997,1,15,81,2
335998,1,1,62,2
336000,2,26,28,4
336001,2,7,93,3
336001,2,12,14,1
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
   FROM IPL.IPL."WICKET_TAKEN"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,player_out,kind_out
419167,1,10,3,154,caught
419167,2,10,3,46,caught
419167,2,12,4,8,caught
419167,2,14,4,96,caught
419167,1,18,4,208,caught
419168,1,2,7,18,caught
419168,1,5,5,21,caught
419168,2,6,1,53,caught
419168,2,6,5,178,caught
419168,2,8,2,57,caught
419168,1,14,2,20,caught
419168,1,15,5,109,caught
419168,2,16,2,56,caught
419168,2,18,4,188,caught
419168,2,20,2,131,caught
419168,1,20,4,125,caught
419169,1,1,4,53,caught
419169,1,4,2,57,caught
419169,1,7,1,56,caught
419169,1,17,3,54,caught
419169,1,19,3,131,caught
419170,2,2,4,42,caught
419170,1,8,2,185,caught
419170,1,9,4,18,caught
419170,1,12,2,23,caught
419170,2,15,2,133,caught
419170,2,15,5,79,caught
419170,2,17,6,154,caught
419170,1,18,1,20,caught
419170,2,19,6,221,caught
501203,1,1,6,185,caught
501203,1,11,3,21,caught
501203,2,16,2,9,caught
501203,1,18,2,20,caught
501203,2,20,2,63,caught
501204,1,5,5,42,caught
501204,1,6,3,26,caught
501204,2,6,5,252,caught
501204,1,11,1,257,caught
501204,1,13,6,154,caught
501204,1,18,3,258,caught
501204,1,20,1,112,caught
501204,1,20,3,94,caught
501205,2,2,2,135,caught
501205,1,9,6,55,caught
501205,2,10,6,260,caught
501205,1,12,3,2,caught
501205,2,18,4,79,caught
501205,1,19,4,259,caught
501206,1,7,6,254,caught
501206,1,15,2,183,caught
501206,1,18,4,106,caught
501207,2,1,1,74,caught
501207,1,1,4,53,caught
501207,1,2,3,100,caught
501207,1,3,4,167,caught
501207,1,4,3,88,caught
501207,2,8,5,171,caught
501207,1,9,3,48,caught
501207,2,9,3,157,caught
501207,1,18,1,67,caught
501207,1,20,1,14,caught
501208,2,9,6,26,caught
501208,2,13,2,154,caught
501208,1,13,3,9,caught
501208,2,14,6,93,caught
501208,2,17,4,258,caught
501208,2,18,1,112,caught
501208,1,20,6,31,caught
501209,1,1,3,41,caught
501209,1,5,5,254,caught
501209,1,8,1,262,caught
501209,1,8,3,183,caught
501209,2,8,3,6,caught
501209,2,11,5,266,caught
501209,1,18,4,187,caught
501209,1,19,7,54,caught
501210,1,5,4,8,caught
501211,1,1,2,21,caught
501211,2,6,5,53,caught
501211,2,14,6,264,caught
501212,1,1,1,2,caught
501212,1,3,5,64,caught
501212,1,5,5,17,caught
501212,2,8,4,74,caught
501212,2,10,5,171,caught
501212,2,12,2,27,caught
501212,1,16,2,104,caught
501212,1,17,1,35,caught
501213,2,2,6,135,caught
501213,1,3,5,42,caught
501213,2,5,6,260,caught
501213,2,7,4,110,caught
501213,1,9,6,65,caught
501213,2,12,1,79,caught
501213,1,15,4,26,caught
501213,2,17,5,203,caught
501213,2,17,6,268,caught
501213,2,20,1,269,caught
501213,1,20,2,154,caught
Query:
SELECT DISTINCT "match_id", "innings_no", "over_id", "ball_id", "player_out"
   FROM IPL.IPL."WICKET_TAKEN"
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,player_out
335987,1,6,2,1
335987,1,13,1,3
335987,1,18,1,4
335987,2,2,1,6
335987,2,3,2,8
335987,2,5,5,9
335987,2,6,2,7
335987,2,8,5,11
335987,2,9,2,12
335987,2,9,8,10
335987,2,12,1,13
335987,2,14,1,15
335987,2,16,2,16
335988,1,3,5,17
335988,1,7,2,18
335988,1,8,1,20
335988,1,13,2,21
335988,1,16,3,22
335988,2,6,6,24
335988,2,11,2,25
335988,2,15,2,27
335988,2,18,4,26
335989,1,3,3,30
335989,1,4,5,31
335989,1,7,2,32
335989,1,8,4,34
335989,1,11,3,33
335989,1,13,1,36
335989,1,15,2,35
335989,1,18,1,38
335989,2,2,4,41
335990,1,2,5,43
335990,1,4,4,45
335990,1,6,4,44
335990,1,14,3,47
335990,1,17,5,46
335990,1,19,5,48
335990,1,20,6,49
335990,2,5,7,51
335990,2,9,6,6
335990,2,10,6,52
335990,2,14,4,8
335990,2,19,4,9
335991,1,4,2,54
335991,1,5,3,55
335991,1,9,1,53
335991,1,9,4,57
335991,1,12,4,58
335991,1,15,3,232
335991,1,18,4,56
335991,1,18,6,60
335991,1,19,3,59
335991,1,19,4,131
335991,2,2,2,2
335991,2,3,1,3
335991,2,5,2,62
335991,2,13,8,1
335991,2,17,3,5
335992,1,5,5,24
335992,1,7,3,26
335992,1,8,4,64
335992,1,9,6,25
335992,1,17,5,27
335992,1,18,2,29
335992,1,18,4,66
335992,1,19,6,65
335992,2,2,1,33
335992,2,3,3,31
335992,2,5,5,69
335992,2,12,2,34
335993,1,2,6,53
335993,1,6,1,55
335993,1,8,6,54
335993,1,10,3,56
335993,1,13,1,70
335993,1,17,1,59
335993,1,19,4,57
335993,1,20,2,232
335993,2,4,3,40
335994,1,4,1,17
335994,1,5,4,19
335994,1,15,6,21
335994,1,19,7,18
335994,1,20,5,20
335994,2,1,8,43
335994,2,4,4,44
335994,2,10,4,46
335994,2,12,4,49
335994,2,15,2,71
335994,2,16,3,72
335994,2,19,5,50
335995,1,3,2,53
335995,1,3,6,70
335995,1,9,3,55
335995,1,18,6,57
335995,1,20,7,232
335995,2,3,1,69
335995,2,10,3,31
335995,2,12,6,32
335995,2,18,1,33
Query:
SELECT bb."match_id", bb."innings_no", bb."striker" AS "player_id", SUM(bs."runs_scored") AS "individual_runs"
   FROM IPL.IPL."BALL_BY_BALL" bb
   JOIN IPL.IPL."BATSMAN_SCORED" bs
     ON bb."match_id" = bs."match_id"
     AND bb."innings_no" = bs."innings_no"
     AND bb."over_id" = bs."over_id"
     AND bb."ball_id" = bs."ball_id"
   GROUP BY bb."match_id", bb."innings_no", bb."striker"
   LIMIT 100;
Answer:
match_id,innings_no,player_id,individual_runs
335987,2,7,6
335987,2,8,1
335987,1,1,10
335987,2,10,6
335987,1,3,20
335988,2,24,24
335987,2,13,9
335988,1,17,15
335988,2,26,54
335988,2,29,3
335989,2,40,58
335989,1,34,1
335990,2,6,32
335990,1,44,29
335990,2,52,23
335990,2,9,25
335990,2,11,39
335990,1,50,2
335991,2,2,5
335991,1,57,0
335992,1,65,4
335993,2,40,12
335993,2,41,94
335994,1,23,2
335998,2,18,70
335987,1,4,12
335989,1,38,14
335990,2,51,16
335990,1,46,48
335990,1,47,19
335991,1,55,0
335992,1,24,26
335992,2,32,76
335993,2,42,25
335993,1,56,12
335994,1,17,14
335994,1,22,5
335995,2,37,1
335996,2,46,21
335996,2,49,22
335997,2,31,21
335997,2,32,61
335997,1,14,34
335999,1,44,18
335999,1,49,31
336000,2,27,40
336001,1,20,65
336002,1,83,10
336003,2,7,10
335992,2,34,17
335994,2,72,9
335994,1,20,30
335995,2,32,4
335996,2,80,2
335996,1,65,0
335998,1,4,0
336000,1,91,6
336006,1,108,54
336008,1,100,40
336009,2,41,40
336009,2,91,3
336010,1,107,0
336031,2,88,6
336043,2,118,4
335987,2,14,18
335989,1,35,29
335990,2,8,23
335991,1,60,0
335995,2,33,34
335989,1,33,9
335991,1,54,14
335991,2,62,10
335991,2,3,0
335993,1,53,8
335994,2,71,24
335995,1,56,117
335995,2,38,22
335996,1,66,16
335997,1,51,2
335998,2,17,21
335998,1,63,42
335999,1,72,7
336001,1,19,47
336003,1,89,8
336004,2,100,84
335988,1,22,13
335990,1,49,28
335992,1,64,2
335992,1,27,57
335992,1,66,0
335995,1,55,16
335995,1,232,16
335996,1,24,18
335996,2,43,11
335997,1,11,4
335997,1,81,1
335998,1,84,4
336000,2,24,1
336000,1,42,0
336000,2,29,10
Query:
SELECT p."match_id", p."innings_no", p."striker", p."non_striker", s1."player_runs" AS "striker_runs", s2."player_runs" AS "non_striker_runs", p."partnership_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) p
    JOIN (
      SELECT bb."match_id", bb."innings_no", bb."striker", SUM(bs."runs_scored") AS "player_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker"
    ) s1
      ON p."match_id" = s1."match_id" AND p."innings_no" = s1."innings_no" AND p."striker" = s1."striker"
    JOIN (
      SELECT bb."match_id", bb."innings_no", bb."non_striker" AS "player_id", SUM(bs."runs_scored") AS "player_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."non_striker"
    ) s2
      ON p."match_id" = s2."match_id" AND p."innings_no" = s2."innings_no" AND p."non_striker" = s2."player_id"
    LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker,striker_runs,non_striker_runs,partnership_runs
335987,2,7,6,6,1,1
335987,2,7,8,6,0,0
335987,1,3,2,20,47,20
335987,2,11,10,7,8,7
335987,2,10,11,6,4,4
335987,2,13,14,9,14,8
335987,2,14,13,18,6,4
335987,2,16,14,3,14,3
335987,1,2,5,158,45,45
335987,2,10,7,6,11,0
335987,1,2,4,158,45,45
335987,1,4,2,12,47,12
335988,1,19,18,116,29,14
335988,1,19,21,116,33,33
335989,2,40,41,58,8,8
335989,2,42,40,52,64,52
335989,1,37,39,26,16,16
335990,2,52,6,23,34,18
335990,1,46,47,48,30,30
335990,1,48,46,20,51,10
335990,2,12,11,3,19,3
335991,1,56,232,32,2,2
335991,1,59,60,14,1,1
335992,1,67,68,24,15,15
335994,2,48,72,45,2,2
335996,1,24,26,18,53,16
335988,2,24,25,24,36,24
335987,2,10,13,6,6,2
335988,2,25,26,71,71,40
335988,1,19,23,116,42,42
335989,1,39,37,3,30,3
335990,1,43,44,8,11,8
335990,2,11,9,39,66,38
335990,1,50,49,2,12,2
335991,2,2,62,5,6,5
335991,2,3,62,0,6,0
335991,2,1,62,14,6,1
335991,2,4,5,38,6,6
335991,2,63,4,4,30,4
335992,2,32,34,76,32,32
335992,1,25,64,16,5,5
335993,2,41,42,94,75,75
335994,1,18,21,81,41,41
335994,1,18,20,81,30,25
335994,1,20,22,30,8,6
335995,1,57,56,36,59,36
335995,1,232,56,16,59,16
335999,2,55,53,37,37,37
336001,2,94,12,1,1,1
335989,1,36,35,2,13,2
335992,2,33,69,5,26,5
335992,1,27,29,57,51,51
335993,1,54,56,14,9,2
335994,1,22,20,5,30,5
335994,1,23,22,2,8,2
335995,2,37,38,1,6,1
335996,1,27,26,18,53,18
335996,1,67,66,0,7,0
335997,1,8,11,13,9,9
335998,1,1,2,12,7,7
336004,1,70,57,13,32,13
336004,2,64,100,45,77,45
335996,1,26,66,94,7,3
336014,2,20,107,33,47,7
335987,1,2,3,158,27,27
335987,1,5,2,5,47,5
335988,2,25,24,71,31,31
335988,2,26,28,54,30,27
335990,2,52,9,23,66,5
335991,1,54,53,14,19,14
335991,2,4,63,38,18,18
335993,1,56,54,12,21,11
335996,1,29,24,6,60,6
335987,2,10,12,6,0,0
335988,1,20,19,2,94,2
335988,2,29,28,3,30,3
335988,2,28,29,21,13,13
335989,2,41,40,12,64,12
335989,1,35,33,29,17,4
335989,1,33,35,9,13,4
335990,1,45,44,0,11,0
335990,2,9,52,25,15,3
335990,1,49,48,28,32,17
335991,1,53,54,23,3,3
335991,1,58,56,6,44,6
335991,1,59,61,14,4,4
335992,2,32,69,76,26,14
335992,1,27,25,57,54,6
335992,1,25,27,16,13,1
335992,1,66,65,0,9,0
335992,1,65,67,4,5,4
335993,1,54,55,14,12,12
335993,1,61,60,1,5,1
335994,1,17,18,14,96,14
335994,2,44,46,20,23,15
335994,2,49,46,17,23,8
335994,2,48,71,45,21,12
335994,2,71,48,24,58,20
335995,1,70,55,10,58,10
335995,2,74,31,71,36,36
Query:
SELECT "match_id", MAX("partnership_runs") AS "max_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) sub
    GROUP BY "match_id"
    LIMIT 100;
Answer:
match_id,max_runs
335988,42
335996,54
335993,75
335997,57
336000,40
336005,35
335999,109
336009,30
336011,31
336013,32
336015,30
336024,80
336020,41
336021,61
336023,59
336030,53
336041,40
336042,40
392194,65
392207,46
392224,35
392233,43
419134,37
419157,45
419162,46
548365,55
336003,50
336006,71
336027,40
336037,47
336038,79
336043,39
336044,55
392188,38
392190,65
392193,29
392201,44
392214,48
392218,22
392221,58
392223,59
392237,38
419111,65
419112,86
419117,75
419135,49
419142,85
419167,46
501227,84
501259,69
501273,34
548324,29
392220,44
419153,45
419165,41
501243,37
501262,51
501266,20
548341,59
548348,32
419129,35
501242,51
598054,53
729312,16
336033,80
392204,43
392217,29
392227,41
392243,37
336026,31
392203,62
392213,66
392225,24
392226,43
392234,40
392235,52
419118,66
419133,38
419136,74
419137,24
419138,47
419144,71
419145,36
419150,53
419158,78
419164,53
419166,46
501208,30
501213,35
501226,54
548338,43
548363,38
548378,33
548379,58
336025,72
392186,35
392199,36
392222,45
392228,41
392232,44
Query:
SELECT p."match_id", p."innings_no", p."striker", p."non_striker", p."partnership_runs"
    FROM (
      SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
      FROM IPL.IPL."BALL_BY_BALL" bb
      JOIN IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
      GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
    ) p
    JOIN (
      SELECT "match_id", MAX("partnership_runs") AS "max_runs"
      FROM (
        SELECT bb."match_id", bb."innings_no", bb."striker", bb."non_striker", SUM(bs."runs_scored") AS "partnership_runs"
        FROM IPL.IPL."BALL_BY_BALL" bb
        JOIN IPL.IPL."BATSMAN_SCORED" bs
          ON bb."match_id" = bs."match_id"
          AND bb."innings_no" = bs."innings_no"
          AND bb."over_id" = bs."over_id"
          AND bb."ball_id" = bs."ball_id"
        GROUP BY bb."match_id", bb."innings_no", bb."striker", bb."non_striker"
      ) sub
      GROUP BY "match_id"
    ) m
      ON p."match_id" = m."match_id" AND p."partnership_runs" = m."max_runs"
    LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker,partnership_runs
335994,1,21,18,53
335997,2,32,74,57
335995,1,56,57,73
336010,1,109,21,34
336011,2,76,100,31
336012,2,53,58,41
335991,1,56,59,22
336002,2,71,46,64
336000,2,28,64,40
336017,2,44,133,54
336008,2,4,62,58
336016,2,31,74,68
336037,1,44,133,47
336042,1,112,54,40
392187,1,6,14,22
392193,1,57,53,29
336019,1,4,1,52
336020,2,32,74,41
336033,1,100,139,80
336034,2,107,17,29
336039,2,57,55,57
336040,1,26,100,45
336043,1,101,74,39
336045,2,31,32,34
392186,1,48,133,35
392188,1,24,161,38
392189,2,57,97,36
392190,1,18,17,65
392197,2,154,133,39
392199,1,11,8,36
392202,1,133,44,68
335998,2,20,18,43
336025,1,40,42,72
392193,1,53,57,29
392191,2,162,2,32
392207,1,21,20,46
392209,2,27,24,50
392210,2,182,35,36
392214,2,147,57,48
392218,2,31,183,22
392225,2,101,31,24
392226,1,4,2,43
392227,2,133,71,41
392228,2,56,112,41
392235,1,110,135,52
392243,2,96,6,37
419112,2,31,212,86
419114,2,87,104,50
419116,2,41,110,45
419117,1,214,161,75
419119,1,79,208,34
419123,1,229,183,31
419127,1,162,204,46
419131,2,31,229,37
419132,1,87,1,41
419139,1,88,40,47
419140,1,1,4,54
392231,2,26,27,33
392240,1,133,85,36
419115,1,97,56,45
419129,2,214,161,35
419130,1,21,23,78
419133,2,96,9,38
419138,2,185,18,47
419111,1,191,204,65
419144,1,162,87,71
419146,1,229,32,36
419147,1,20,18,31
419148,2,224,183,83
419149,1,1,162,49
419150,2,56,178,53
419153,2,46,52,45
419154,2,64,29,27
419155,1,154,133,31
419162,1,208,210,46
419166,2,2,1,46
419167,1,79,208,46
501204,2,192,52,35
501205,1,2,55,41
501206,2,133,57,35
501211,1,185,23,74
501212,1,35,104,46
501214,2,9,40,76
501216,1,185,19,31
501218,2,187,41,46
501223,2,133,208,34
501224,1,64,2,24
501229,1,57,56,56
501230,2,6,32,40
501238,1,41,199,30
501239,2,40,87,39
501246,2,96,46,25
501247,2,9,216,45
419152,2,178,56,34
501210,2,208,133,63
501232,2,8,162,48
501240,1,46,96,35
501242,1,208,133,51
501245,2,19,21,72
501251,1,57,208,49
End Exploring Related Columns
Task: Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: To find the IDs of players who scored the highest number of partnership runs for each match, we identify the partnerships with the maximum total runs in each match. For each such partnership, we provide the match ID, the IDs of the two players involved along with their individual scores, and the total partnership score. The player with the higher individual score is listed as player1; if both players have the same score, the player with the higher ID is listed as player1.

```csv
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
match_id1:int,player1_id1:int,player1_score1:int,player2_id1:int,player2_score1:int,partnership_score1:int
match_id2:int,player1_id2:int,player1_score2:int,player2_id2:int,player2_score2:int,partnership_score2:int
...
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 03:29:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:29:28 - root - INFO - ```sql
WITH ball_with_wickets AS (
    SELECT
        bb."match_id",
        bb."innings_no",
        bb."over_id",
        bb."ball_id",
        bb."striker",
        bb."non_striker",
        bb."bowler",
        bs."runs_scored",
        CASE WHEN wt."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "is_wicket"
    FROM
        IPL.IPL."BALL_BY_BALL" bb
    LEFT JOIN
        IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
    LEFT JOIN
        IPL.IPL."WICKET_TAKEN" wt
        ON bb."match_id" = wt."match_id"
        AND bb."innings_no" = wt."innings_no"
        AND bb."over_id" = wt."over_id"
        AND bb."ball_id" = wt."ball_id"
),
ball_with_partnership AS (
    SELECT
        *,
        SUM("is_wicket") OVER (
            PARTITION BY "match_id", "innings_no"
            ORDER BY "over_id", "ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_no"
    FROM
        ball_with_wickets
),
partnership_batsmen AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        ARRAY_AGG(DISTINCT "batsman_id" ORDER BY "batsman_id") AS "batsmen_ids"
    FROM (
        SELECT "match_id", "innings_no", "partnership_no", "striker" AS "batsman_id"
        FROM ball_with_partnership
        UNION
        SELECT "match_id", "innings_no", "partnership_no", "non_striker" AS "batsman_id"
        FROM ball_with_partnership
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
partnership_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        SUM("runs_scored") AS "partnership_runs"
    FROM ball_with_partnership
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
batsman_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id",
        SUM("runs_scored") AS "player_runs"
    FROM (
        SELECT
            "match_id",
            "innings_no",
            "partnership_no",
            "striker" AS "batsman_id",
            "runs_scored"
        FROM ball_with_partnership
        WHERE "runs_scored" IS NOT NULL
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id"
),
partnership_details AS (
    SELECT
        pr."match_id",
        pr."innings_no",
        pr."partnership_no",
        pb."batsmen_ids"[0] AS "batsman_id1",
        pb."batsmen_ids"[1] AS "batsman_id2",
        br1."player_runs" AS "player1_runs",
        br2."player_runs" AS "player2_runs",
        pr."partnership_runs"
    FROM partnership_runs pr
    JOIN partnership_batsmen pb
        ON pr."match_id" = pb."match_id"
        AND pr."innings_no" = pb."innings_no"
        AND pr."partnership_no" = pb."partnership_no"
    LEFT JOIN batsman_runs br1
        ON pr."match_id" = br1."match_id"
        AND pr."innings_no" = br1."innings_no"
        AND pr."partnership_no" = br1."partnership_no"
        AND br1."batsman_id" = pb."batsmen_ids"[0]
    LEFT JOIN batsman_runs br2
        ON pr."match_id" = br2."match_id"
        AND pr."innings_no" = br2."innings_no"
        AND pr."partnership_no" = br2."partnership_no"
        AND br2."batsman_id" = pb."batsmen_ids"[1]
    WHERE ARRAY_SIZE(pb."batsmen_ids") = 2
),
max_partnerships AS (
    SELECT
        "match_id",
        MAX("partnership_runs") AS "max_partnership_runs"
    FROM partnership_details
    GROUP BY "match_id"
)
SELECT
    pd."match_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."batsman_id1"
        ELSE pd."batsman_id2"
    END AS "player1_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."player1_runs"
        ELSE pd."player2_runs"
    END AS "player1_score",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."batsman_id2"
        ELSE pd."batsman_id1"
    END AS "player2_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."player2_runs"
        ELSE pd."player1_runs"
    END AS "player2_score",
    pd."partnership_runs" AS "partnership_score"
FROM partnership_details pd
JOIN max_partnerships mp
    ON pd."match_id" = mp."match_id"
    AND pd."partnership_runs" = mp."max_partnership_runs"
ORDER BY pd."match_id";
```
2025-01-25 03:29:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:29:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:29:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:29:30 - snowflake.connector.connection - INFO - closed
2025-01-25 03:29:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:29:30 - root - INFO - itercount: 1
2025-01-25 03:29:30 - root - INFO - 001003 (42000): 01b9f071-0004-7d15-0001-11c300f9ead2: SQL compilation error:
syntax error line 43 at position 40 unexpected 'ORDER'.
syntax error line 43 at position 63 unexpected 'AS'.
2025-01-25 03:29:30 - root - INFO - Input sql:
WITH ball_with_wickets AS (
    SELECT
        bb."match_id",
        bb."innings_no",
        bb."over_id",
        bb."ball_id",
        bb."striker",
        bb."non_striker",
        bb."bowler",
        bs."runs_scored",
        CASE WHEN wt."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "is_wicket"
    FROM
        IPL.IPL."BALL_BY_BALL" bb
    LEFT JOIN
        IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
    LEFT JOIN
        IPL.IPL."WICKET_TAKEN" wt
        ON bb."match_id" = wt."match_id"
        AND bb."innings_no" = wt."innings_no"
        AND bb."over_id" = wt."over_id"
        AND bb."ball_id" = wt."ball_id"
),
ball_with_partnership AS (
    SELECT
        *,
        SUM("is_wicket") OVER (
            PARTITION BY "match_id", "innings_no"
            ORDER BY "over_id", "ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_no"
    FROM
        ball_with_wickets
),
partnership_batsmen AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        ARRAY_AGG(DISTINCT "batsman_id" ORDER BY "batsman_id") AS "batsmen_ids"
    FROM (
        SELECT "match_id", "innings_no", "partnership_no", "striker" AS "batsman_id"
        FROM ball_with_partnership
        UNION
        SELECT "match_id", "innings_no", "partnership_no", "non_striker" AS "batsman_id"
        FROM ball_with_partnership
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
partnership_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        SUM("runs_scored") AS "partnership_runs"
    FROM ball_with_partnership
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
batsman_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id",
        SUM("runs_scored") AS "player_runs"
    FROM (
        SELECT
            "match_id",
            "innings_no",
            "partnership_no",
            "striker" AS "batsman_id",
            "runs_scored"
        FROM ball_with_partnership
        WHERE "runs_scored" IS NOT NULL
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id"
),
partnership_details AS (
    SELECT
        pr."match_id",
        pr."innings_no",
        pr."partnership_no",
        pb."batsmen_ids"[0] AS "batsman_id1",
        pb."batsmen_ids"[1] AS "batsman_id2",
        br1."player_runs" AS "player1_runs",
        br2."player_runs" AS "player2_runs",
        pr."partnership_runs"
    FROM partnership_runs pr
    JOIN partnership_batsmen pb
        ON pr."match_id" = pb."match_id"
        AND pr."innings_no" = pb."innings_no"
        AND pr."partnership_no" = pb."partnership_no"
    LEFT JOIN batsman_runs br1
        ON pr."match_id" = br1."match_id"
        AND pr."innings_no" = br1."innings_no"
        AND pr."partnership_no" = br1."partnership_no"
        AND br1."batsman_id" = pb."batsmen_ids"[0]
    LEFT JOIN batsman_runs br2
        ON pr."match_id" = br2."match_id"
        AND pr."innings_no" = br2."innings_no"
        AND pr."partnership_no" = br2."partnership_no"
        AND br2."batsman_id" = pb."batsmen_ids"[1]
    WHERE ARRAY_SIZE(pb."batsmen_ids") = 2
),
max_partnerships AS (
    SELECT
        "match_id",
        MAX("partnership_runs") AS "max_partnership_runs"
    FROM partnership_details
    GROUP BY "match_id"
)
SELECT
    pd."match_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."batsman_id1"
        ELSE pd."batsman_id2"
    END AS "player1_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."player1_runs"
        ELSE pd."player2_runs"
    END AS "player1_score",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."batsman_id2"
        ELSE pd."batsman_id1"
    END AS "player2_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."batsman_id1" > pd."batsman_id2" THEN pd."player2_runs"
        ELSE pd."player1_runs"
    END AS "player2_score",
    pd."partnership_runs" AS "partnership_score"
FROM partnership_details pd
JOIN max_partnerships mp
    ON pd."match_id" = mp."match_id"
    AND pd."partnership_runs" = mp."max_partnership_runs"
ORDER BY pd."match_id";
The error information is:
001003 (42000): 01b9f071-0004-7d15-0001-11c300f9ead2: SQL compilation error:
syntax error line 43 at position 40 unexpected 'ORDER'.
syntax error line 43 at position 63 unexpected 'AS'.
Please correct it and output only 1 complete SQL query.
2025-01-25 03:32:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:32:02 - root - INFO - ```sql
WITH ball_with_wickets AS (
    SELECT
        bb."match_id",
        bb."innings_no",
        bb."over_id",
        bb."ball_id",
        bb."striker",
        bb."non_striker",
        bb."bowler",
        bs."runs_scored",
        CASE WHEN wt."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "is_wicket"
    FROM
        IPL.IPL."BALL_BY_BALL" bb
    LEFT JOIN
        IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
    LEFT JOIN
        IPL.IPL."WICKET_TAKEN" wt
        ON bb."match_id" = wt."match_id"
        AND bb."innings_no" = wt."innings_no"
        AND bb."over_id" = wt."over_id"
        AND bb."ball_id" = wt."ball_id"
),
ball_with_partnership AS (
    SELECT
        *,
        SUM("is_wicket") OVER (
            PARTITION BY "match_id", "innings_no"
            ORDER BY "over_id", "ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_no"
    FROM
        ball_with_wickets
),
partnership_batsmen AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        MIN("batsman_id") AS "batsman_id1",
        MAX("batsman_id") AS "batsman_id2"
    FROM (
        SELECT "match_id", "innings_no", "partnership_no", "striker" AS "batsman_id"
        FROM ball_with_partnership
        UNION
        SELECT "match_id", "innings_no", "partnership_no", "non_striker" AS "batsman_id"
        FROM ball_with_partnership
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
    HAVING COUNT(DISTINCT "batsman_id") = 2
),
partnership_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        SUM("runs_scored") AS "partnership_runs"
    FROM ball_with_partnership
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
batsman_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id",
        SUM("runs_scored") AS "player_runs"
    FROM (
        SELECT
            "match_id",
            "innings_no",
            "partnership_no",
            "striker" AS "batsman_id",
            "runs_scored"
        FROM ball_with_partnership
        WHERE "runs_scored" IS NOT NULL
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id"
),
partnership_details AS (
    SELECT
        pr."match_id",
        pr."innings_no",
        pr."partnership_no",
        pb."batsman_id1",
        pb."batsman_id2",
        COALESCE(br1."player_runs", 0) AS "player1_runs",
        COALESCE(br2."player_runs", 0) AS "player2_runs",
        pr."partnership_runs"
    FROM partnership_runs pr
    JOIN partnership_batsmen pb
        ON pr."match_id" = pb."match_id"
        AND pr."innings_no" = pb."innings_no"
        AND pr."partnership_no" = pb."partnership_no"
    LEFT JOIN batsman_runs br1
        ON pr."match_id" = br1."match_id"
        AND pr."innings_no" = br1."innings_no"
        AND pr."partnership_no" = br1."partnership_no"
        AND br1."batsman_id" = pb."batsman_id1"
    LEFT JOIN batsman_runs br2
        ON pr."match_id" = br2."match_id"
        AND pr."innings_no" = br2."innings_no"
        AND pr."partnership_no" = br2."partnership_no"
        AND br2."batsman_id" = pb."batsman_id2"
),
max_partnerships AS (
    SELECT
        "match_id",
        MAX("partnership_runs") AS "max_partnership_runs"
    FROM partnership_details
    GROUP BY "match_id"
)
SELECT
    pd."match_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."batsman_id2"
        ELSE pd."batsman_id1"
    END AS "player1_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."player2_runs"
        ELSE pd."player1_runs"
    END AS "player1_score",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."batsman_id1"
        ELSE pd."batsman_id2"
    END AS "player2_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."player1_runs"
        ELSE pd."player2_runs"
    END AS "player2_score",
    pd."partnership_runs" AS "partnership_score"
FROM partnership_details pd
JOIN max_partnerships mp
    ON pd."match_id" = mp."match_id"
    AND pd."partnership_runs" = mp."max_partnership_runs"
ORDER BY pd."match_id";
```
2025-01-25 03:32:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:32:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:32:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:32:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 580
2025-01-25 03:32:04 - snowflake.connector.connection - INFO - closed
2025-01-25 03:32:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:32:04 - root - INFO - itercount: 2
2025-01-25 03:32:04 - root - INFO - 0
2025-01-25 03:32:04 - root - INFO - results: 
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
335987,2,41,1,10,51
335988,25,31,24,24,55
335989,41,12,40,8,20
335990,6,20,51,16,36
335991,54,14,53,3,17
335992,24,26,25,8,34
335993,41,19,40,12,31
335994,18,15,17,14,29
335995,53,13,55,9,22
335996,43,11,44,1,12
335997,74,1,36,0,1
335997,51,1,6,0,1
335998,18,34,17,21,55
335999,53,109,55,37,146
336000,41,6,40,3,9
336001,18,13,17,7,20
336002,44,10,85,4,14
336003,40,26,41,24,50
336004,100,26,76,15,41
336005,103,7,1,5,12
336006,41,71,40,39,110
336007,97,47,53,45,92
336008,25,18,100,9,27
336009,44,30,114,14,44
336010,101,32,74,27,59
336011,25,5,100,1,6
336012,53,13,97,10,23
336013,114,19,44,18,37
336014,108,40,107,18,58
336015,130,9,51,7,16
336016,31,68,74,35,103
336017,44,54,133,30,84
336018,25,14,100,2,16
336019,53,6,97,5,11
336020,40,26,41,17,43
336021,25,27,100,13,40
336022,103,18,128,13,31
336023,44,59,133,12,71
336024,100,80,25,51,131
336025,53,14,70,5,19
336026,103,13,128,1,14
336027,40,40,41,29,69
336028,101,50,74,40,90
336029,44,36,133,2,38
336030,107,32,17,19,51
336031,41,47,40,33,80
336032,74,11,101,5,16
336033,44,20,133,5,25
336034,107,29,17,24,53
336036,26,50,100,33,83
336037,44,47,133,18,65
336038,74,79,101,41,120
336039,55,10,53,10,20
336040,103,24,1,19,43
336041,44,38,133,27,65
336042,107,14,17,10,24
336043,101,39,74,25,64
336044,17,7,108,6,13
336045,17,21,108,16,37
392186,44,26,133,12,38
392187,74,1,101,0,1
392188,24,38,161,22,60
392189,53,13,97,11,24
392190,18,65,17,30,95
392191,162,32,2,21,53
392193,53,27,97,13,40
392194,18,35,17,16,51
392196,161,23,24,18,41
392197,53,35,97,23,58
392199,41,7,40,3,10
392200,101,3,74,2,5
392201,53,44,97,21,65
392202,133,68,44,51,119
392203,41,12,40,8,20
392204,132,43,9,20,63
392205,24,12,161,6,18
392206,41,20,40,9,29
392207,168,6,74,2,8
392208,133,8,44,6,14
392209,27,50,24,19,69
392210,53,25,97,8,33
392211,18,20,185,14,34
392212,162,17,2,4,21
392213,9,14,7,7,21
392214,18,43,185,15,58
392215,74,77,183,56,133
392216,187,36,40,22,58
392217,44,5,133,2,7
392218,74,20,183,7,27
392219,65,2,28,0,2
392220,187,21,40,17,38
392221,65,30,28,9,39
392222,185,10,18,8,18
392223,9,12,8,8,20
392224,187,27,40,18,45
392225,178,10,53,10,20
392226,9,32,157,21,53
392227,44,4,71,0,4
392227,65,4,28,0,4
392228,53,28,178,3,31
392229,18,26,185,5,31
392230,168,22,74,19,41
392231,28,16,65,2,18
392232,71,5,44,2,7
392233,53,43,97,23,66
392234,53,23,97,11,34
392235,40,8,41,2,10
392236,17,25,197,21,46
392237,46,1,9,1,2
392238,183,21,168,1,22
392239,17,25,197,15,40
392240,40,21,187,15,36
392241,97,45,53,15,60
392242,53,20,97,0,20
392243,17,34,18,26,60
392244,9,15,96,2,17
419111,53,36,55,22,58
419112,44,23,133,12,35
419113,41,8,40,2,10
419114,87,50,104,48,98
419115,53,38,55,12,50
419116,41,30,40,9,39
419117,214,75,161,45,120
419118,185,15,18,1,16
419119,41,19,135,17,36
419120,9,44,96,42,86
419121,41,29,187,6,35
419122,53,33,55,9,42
419123,87,11,104,6,17
419124,9,43,96,40,83
419125,187,31,41,3,34
419127,1,31,162,29,60
419128,9,19,96,8,27
419129,26,29,161,11,40
419130,42,56,133,24,80
419131,224,37,183,14,51
419132,162,14,1,8,22
419133,96,38,9,27,65
419134,224,30,183,14,44
419135,133,15,42,8,23
419136,162,12,1,5,17
419137,42,24,133,11,35
419138,185,47,18,12,59
419139,41,19,187,4,23
419140,97,20,53,9,29
419141,96,18,9,9,27
419142,224,37,183,25,62
419142,18,34,185,28,62
419143,133,35,42,14,49
419144,1,36,162,17,53
419145,41,35,187,6,41
419146,53,16,55,6,22
419147,133,28,42,16,44
419148,224,83,183,21,104
419149,1,49,162,40,89
419150,9,13,96,1,14
419151,64,31,227,9,40
419152,185,20,18,19,39
419153,162,34,1,16,50
419154,64,27,29,12,39
419155,133,10,44,1,11
419156,181,1,124,0,1
419156,97,1,53,0,1
419157,187,31,41,5,36
419158,1,10,162,7,17
419159,224,9,183,6,15
419160,185,6,18,1,7
419161,53,9,231,4,13
419162,133,19,210,12,31
419163,32,44,183,14,58
419164,64,21,100,10,31
419165,53,10,231,1,11
419166,2,46,1,42,88
419167,6,13,9,11,24
419168,53,15,97,3,18
419169,9,19,6,15,34
419170,185,26,18,16,42
501203,9,31,214,27,58
501204,42,24,257,16,40
501205,2,41,55,36,77
501206,41,10,187,1,11
501207,100,1,53,1,2
501208,9,30,214,19,49
501209,6,11,252,5,16
501210,263,22,133,9,31
501211,167,41,53,19,60
501212,157,17,74,10,27
501213,42,11,65,6,17
501214,6,12,252,9,21
501215,2,62,64,56,118
501216,185,31,19,19,50
501217,167,63,53,61,124
501218,187,45,41,22,67
501219,252,12,32,11,23
501220,2,22,64,16,38
501221,187,16,41,12,28
501223,157,12,272,2,14
501224,64,24,2,23,47
501225,167,33,53,28,61
501226,19,15,185,12,27
501227,162,84,135,38,122
501228,41,77,187,59,136
501229,263,32,133,15,47
501230,6,39,32,25,64
501231,19,32,185,31,63
501232,41,23,187,7,30
501233,157,19,231,2,21
501234,65,1,42,1,2
501235,132,17,9,11,28
501236,263,15,133,6,21
501237,162,42,135,15,57
501238,2,7,288,2,9
501239,53,24,167,7,31
501240,157,18,96,6,24
501240,32,12,6,12,24
501241,65,56,42,10,66
501242,263,10,133,2,12
501243,2,37,288,14,51
501244,65,26,42,15,41
501245,6,49,32,32,81
501246,133,12,289,6,18
501247,9,45,216,22,67
501248,42,15,112,2,17
501249,162,24,135,16,40
501250,185,5,19,2,7
501251,289,34,133,14,48
501252,162,44,135,21,65
501253,157,15,96,14,29
501254,19,46,185,28,74
501255,157,35,96,19,54
501256,167,14,53,6,20
501257,6,37,32,34,71
501258,183,25,187,4,29
501259,64,42,2,32,74
501260,162,38,139,6,44
501261,133,4,289,1,5
501262,183,28,187,15,43
501263,2,17,64,6,23
501264,65,31,42,28,59
501265,167,20,53,1,21
501266,185,16,19,3,19
501267,96,8,157,1,9
501268,32,89,6,43,132
501269,112,60,42,55,115
501271,19,4,185,2,6
501272,133,8,178,4,12
501273,260,17,162,8,25
501274,289,51,133,28,79
501275,162,62,260,41,103
501276,185,89,19,63,152
548311,304,50,133,14,64
548312,254,30,41,16,46
548313,83,1,235,0,1
548314,85,41,6,28,69
548315,198,25,203,11,36
548316,313,15,42,14,29
548317,9,5,2,2,7
548318,1,20,157,7,27
548319,42,6,17,1,7
548319,178,5,304,2,7
548320,40,35,9,22,57
548321,41,18,183,13,31
548322,304,16,178,10,26
548323,303,44,185,11,55
548324,157,7,1,5,12
548325,6,26,85,19,45
548326,42,9,26,1,10
548327,303,35,185,8,43
548328,236,10,53,5,15
548329,85,37,6,25,62
548330,41,14,183,13,27
548331,26,44,42,42,86
548332,157,34,46,26,60
548333,40,36,2,15,51
548334,313,19,42,9,28
548335,303,58,23,57,115
548336,319,14,167,0,14
548337,303,40,23,15,55
548338,157,14,46,10,24
548339,319,30,236,18,48
548339,275,26,133,22,48
548340,42,24,26,12,36
548341,6,39,85,13,52
548342,64,18,41,2,20
548344,133,28,275,22,50
548346,17,19,42,16,35
548347,41,72,64,55,127
548348,236,32,100,32,64
548349,40,49,2,43,92
548350,85,55,6,40,95
548351,17,19,42,16,35
548352,40,11,2,2,13
548353,26,0,10,0,0
548354,85,42,6,26,68
548355,236,27,100,8,35
548356,275,25,133,23,48
548357,185,14,303,1,15
548358,40,56,2,42,98
548359,236,7,100,1,8
548360,185,36,303,9,45
548361,135,62,162,26,88
548362,40,36,2,31,67
548363,1,14,328,11,25
548364,236,30,100,22,52
548365,162,27,135,19,46
548366,6,4,85,0,4
548367,162,57,135,17,74
548368,97,13,133,2,15
548369,19,38,185,36,74
548370,6,21,85,6,27
548371,42,26,17,18,44
548372,162,6,135,2,8
548373,40,61,2,36,97
548374,100,13,236,8,21
548375,97,13,133,11,24
548376,236,24,53,23,47
548377,187,15,262,1,16
548378,331,33,42,26,59
548379,187,58,262,18,76
548380,2,11,40,10,21
548381,162,27,135,3,30
548382,147,87,133,58,145
548383,40,32,2,14,46
548384,147,33,133,11,44
548385,185,47,19,20,67
548386,185,42,19,41,83
598003,214,4,40,1,5
598004,3,27,133,23,50
598005,46,24,96,10,34
598006,262,23,187,13,36
598007,185,5,19,5,10
598008,53,15,236,5,20
598010,40,14,214,1,15
598011,133,0,3,0,0
598012,19,86,185,50,136
598013,260,6,162,5,11
598014,46,32,254,23,55
598015,331,1,17,0,1
598016,133,39,3,14,53
598017,162,4,260,1,5
598018,214,28,40,28,56
598019,32,32,85,3,35
598020,254,67,46,24,91
598021,236,16,53,7,23
598023,46,22,254,16,38
598024,32,31,85,25,56
598025,185,18,19,11,29
598026,236,10,53,4,14
598027,40,25,31,18,43
598028,135,25,162,21,46
598029,41,90,64,59,149
598030,254,44,46,37,81
598031,32,54,85,16,70
598032,162,127,135,33,160
598033,53,42,100,14,56
598034,147,23,133,2,25
598034,31,19,40,6,25
598035,19,44,185,18,62
598036,236,25,53,19,44
598037,6,6,85,1,7
598038,162,17,135,13,30
598039,19,63,62,39,102
598040,46,37,254,35,72
598041,162,34,152,8,42
598042,133,9,147,2,11
598042,236,9,100,2,11
598043,254,15,46,9,24
598044,147,14,133,14,28
598045,41,17,64,5,22
598046,62,18,19,9,27
598047,162,21,79,13,34
598048,214,26,40,12,38
598049,42,22,17,11,33
598050,203,19,162,3,22
598051,147,22,133,15,37
598052,6,58,85,37,95
598053,260,29,162,10,39
598054,6,53,85,44,97
598055,133,48,147,41,89
598056,185,29,19,15,44
598057,6,4,85,1,5
598058,40,31,214,12,43
598059,64,19,41,6,25
598060,254,10,46,3,13
598061,42,15,17,12,27
598062,162,9,203,5,14
598063,19,40,185,37,77
598064,53,6,236,0,6
598065,17,26,42,9,35
598066,46,25,254,16,41
598067,185,31,19,23,54
598068,305,23,207,2,25
598069,162,61,203,35,96
598070,6,25,85,12,37
598071,236,1,53,1,2
598072,46,24,254,13,37
598073,8,35,162,28,63
598074,17,45,42,42,87
598075,19,28,185,23,51
598076,6,12,85,1,13
598077,207,35,147,33,68
598078,147,4,207,0,4
729284,207,21,19,3,24
729286,185,8,260,6,14
729288,2,67,147,44,111
729290,48,4,85,0,4
729292,19,16,207,2,18
729294,260,9,185,0,9
729296,85,13,48,9,22
729298,147,13,2,9,22
729300,41,30,203,20,50
729302,147,28,2,6,34
729304,114,40,17,21,61
729306,355,48,185,48,96
729308,147,29,2,26,55
729310,85,23,339,7,30
729312,96,8,9,4,12
729314,355,16,185,10,26
729316,147,42,2,40,82
729318,162,20,17,1,21
729322,254,11,42,6,17
733976,147,16,2,4,20
733978,203,9,41,1,10
733980,355,20,185,13,33
733982,254,13,42,7,20
733984,46,65,40,54,119
733986,147,42,2,32,74
733988,17,26,162,24,50
733990,46,47,40,47,94
733992,41,26,236,3,29
733994,42,33,254,3,36
733996,41,28,236,21,49
733998,355,7,158,2,9
734000,147,14,2,13,27
734002,46,46,40,18,64
734004,339,28,85,24,52
734006,254,17,42,11,28
734008,314,30,32,21,51
734010,162,22,17,11,33
734012,42,39,254,20,59
734014,46,33,40,14,47
734016,85,21,339,19,40
734018,2,19,147,9,28
734020,254,8,42,4,12
734022,383,62,19,55,117
734024,345,42,41,16,58
734026,42,50,187,46,96
734028,46,42,40,21,63
734030,383,55,19,6,61
734032,162,6,114,1,7
734034,187,90,42,22,112
734036,19,44,383,35,79
734038,41,18,345,4,22
734040,147,34,303,22,56
734042,40,28,46,13,41
734044,158,11,260,2,13
734046,351,24,32,8,32
734048,345,2,41,2,4
734050,19,39,383,35,74
734052,41,69,345,34,103
734054,345,15,41,7,22
829710,46,9,40,2,11
829712,147,12,2,4,16
829714,351,1,85,0,1
829716,2,35,147,27,62
829718,40,44,46,35,79
829720,260,37,393,7,44
829722,41,36,185,22,58
829724,187,57,42,24,81
829726,351,17,85,10,27
829728,40,19,46,12,31
829730,185,19,41,11,30
829732,85,33,351,26,59
829734,147,56,2,46,102
829736,187,28,42,18,46
829738,46,13,40,2,15
829740,32,73,85,70,143
829742,383,27,17,12,39
829744,46,13,40,13,26
829748,187,91,42,36,127
829750,214,17,380,13,30
829752,17,17,383,15,32
829754,85,18,32,16,34
829756,42,36,187,9,45
829758,147,26,2,24,50
829762,162,62,8,35,97
829764,187,9,42,1,10
829766,393,35,87,25,60
829770,147,20,2,19,39
829772,393,54,260,45,99
829774,17,23,383,17,40
829776,8,24,162,21,45
829778,187,61,42,22,83
829780,17,59,383,50,109
829782,85,26,32,21,47
829784,8,6,373,4,10
829786,40,31,46,21,52
829790,162,80,8,32,112
829792,187,24,42,15,39
829794,17,45,383,38,83
829796,185,28,345,17,45
829798,187,16,42,13,29
829800,17,19,383,9,28
829802,85,23,32,14,37
829804,187,30,42,24,54
829806,2,11,147,5,16
829806,393,13,355,3,16
829808,62,31,345,1,32
829808,8,19,162,13,32
829810,46,25,40,18,43
829812,162,35,8,7,42
829814,62,15,345,1,16
829816,32,38,85,36,74
829820,17,50,383,48,98
829822,383,52,17,35,87
829824,162,27,8,8,35
829826,8,12,162,11,23
829828,147,16,19,4,20
980906,85,40,303,34,74
980908,46,35,40,24,59
980910,345,38,185,37,75
980912,187,22,42,8,30
980914,57,25,17,23,48
980916,254,50,2,29,79
980918,355,6,393,3,9
980920,40,50,46,38,88
980922,254,6,2,6,12
980924,345,51,185,44,95
980926,355,5,393,0,5
980928,42,2,187,1,3
980930,46,53,40,22,75
980932,354,23,8,8,31
980934,187,74,42,53,127
980936,8,19,354,7,26
980938,355,9,393,2,11
980940,187,59,42,28,87
980942,147,32,2,13,45
980944,85,20,303,4,24
980946,185,19,345,1,20
980948,187,0,42,0,0
980948,303,0,85,0,0
980948,306,0,20,0,0
980950,2,58,147,53,111
980952,46,36,40,32,68
980954,147,46,2,43,89
980956,46,15,40,6,21
980958,354,27,8,14,41
980960,185,36,409,27,63
980962,17,21,57,17,38
980964,162,7,354,1,8
980966,420,69,355,44,113
980968,40,54,46,46,100
980970,426,30,85,29,59
980972,187,24,42,1,25
980974,8,52,354,38,90
980976,355,52,351,15,67
980978,187,48,42,34,82
980980,147,27,2,10,37
980982,354,42,8,20,62
980984,187,11,42,6,17
980986,8,7,162,0,7
980988,187,46,42,16,62
980990,57,6,262,0,6
980992,8,8,162,6,14
980994,426,15,85,2,17
980996,187,39,42,25,64
980998,57,31,415,15,46
981000,162,49,8,21,70
981002,426,19,85,9,28
981004,162,73,8,69,142
981006,46,13,40,8,21
981008,187,36,42,10,46
981010,427,30,185,26,56
981012,57,30,415,3,33
981014,46,25,40,7,32
981016,355,9,420,1,10
981018,162,5,8,0,5
981020,46,11,40,4,15
981022,433,5,2,1,6
981024,162,76,8,32,108


2025-01-25 03:32:04 - root - INFO - Please check the answer again by reviewing Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To find the IDs of players who scored the highest number of partnership runs for each match, we identify the partnerships with the maximum total runs in each match. For each such partnership, we provide the match ID, the IDs of the two players involved along with their individual scores, and the total partnership score. The player with the higher individual score is listed as player1; if both players have the same score, the player with the higher ID is listed as player1.

```csv
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
match_id1:int,player1_id1:int,player1_score1:int,player2_id1:int,player2_score1:int,partnership_score1:int
match_id2:int,player1_id2:int,player1_score2:int,player2_id2:int,player2_score2:int,partnership_score2:int
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Too long, hard cut:
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
335987,2,41,1,10,51
335988,25,31,24,24,55
335989,41,12,40,8,20
335990,6,20,51,16,36
335991,54,14,53,3,17
335992,24,26,25,8,34
335993,41,19,40,12,31
335994,18,15,17,14,29
335995,53,13,55,9,22
335996,43,11,44,1,12
335997,74,1,36,0,1
335997,51,1,6,0,1
335998,18,34,17,21,55
335999,53,109,55,37,146
336000,41,6,40,3,9
336001,18,13,17,7,20
336002,44,10,85,4,14
336003,40,26,41,24,50
336004,100,26,76,15,41
336005,103,7,1,5,12
336006,41,71,40,39,110
336007,97,47,53,45,92
336008,25,18,100,9,27
336009,44,30,114,14,44
336010,101,32,74,27,59
336011,25,5,100,1,6
336012,53,13,97,10,23
336013,114,19,44,18,37
336014,108,40,107,18,58
336015,130,9,51,7,16
336016,31,68,74,35,103
336017,44,54,133,30,84
336018,25,14,100,2,16
336019,53,6,97,5,11
336020,40,26,41,17,43
336021,25,27,100,13,40
336022,103,18,128,13,31
336023,44,59,133,12,71
336024,100,80,25,51,131
336025,53,14,70,5,19
336026,103,13,128,1,14
336027,40,40,41,29,69
336028,101,50,74,40,90
336029,44,36,133,2,38
336030,107,32,17,19,51
336031,41,47,40,33,80
336032,74,11,101,5,16
336033,44,20,133,5,25
336034,107,29,17,24,53
336036,26,50,100,33,83
336037,44,47,133,18,65
336038,74,79,101,41,120
336039,55,10,53,10,20
336040,103,24,1,19,43
336041,44,38,133,27,65
336042,107,14,17,10,24
336043,101,39,74,25,64
336044,17,7,108,6,13
336045,17,21,108,16,37
392186,44,26,133,12,38
392187,74,1,101,0,1
392188,24,38,161,22,60
392189,53,13,97,11,24
392190,18,65,17,30,95
392191,162,32,2,21,53
392193,53,27,97,13,40
392194,18,35,17,16,51
392196,161,23,24,18,41
392197,53,35,97,23,58
392199,41,7,40,3,10
392200,101,3,74,2,5
392201,53,44,97,21,65
392202,133,68,44,51,119
392203,41,12,40,8,20
392204,132,43,9,20,63
392205,24,12,161,6,18
392206,41,20,40,9,29
392207,168,6,74,2,8
392208,133,8,44,6,14
392209,27,50,24,19,69
392210,53,25,97,8,33
392211,18,20,185,14,34
392212,162,17,2,4,21
392213,9,14,7,7,21
392214,18,43,185,15,58
392215,74,77,183,56,133
392216,187,36,40,22,58
392217,44,5,133,2,7
392218,74,20,183,7,27
392219,65,2,28,0,2
392220,187,21,40,17,38
392221,65,30,28,9,39
392222,185,10,18,8,18
392223,9,12,8,8,20
392224,187,27,40,18,45
392225,178,10,53,10,20
392226,9,32,157,21,53
392227,44,4,71,0,4
392227,65,4,28,0,4
392228,53,28,178,3,31
392229,18,26,185,5,31
392230,168,22,74,19,41
392231,28,16,65,2,18
392232,71,5,44,2,7
392233,53,43,97,23,66
392234,53,23,97,11,34
392235,40,8,41,2,10
392236,17,25,197,21,46
392237,46,1,9,1,2
392238,183,21,168,1,22
392239,17,25,197,15,40
392240,40,21,187,15,36
392241,97,45,53,15,60
392242,53,20,97,0,20
392243,17,34,18,26,60
392244,9,15,96,2,17
419111,53,36,55,22,58
419112,44,23,133,12,35
419113,41,8,40,2,10
419114,87,50,104,48,98
419115,53,38,55,12,50
419116,41,30,40,9,39
419117,214,75,161,45,120
419118,185,15,18,1,16
419119,41,19,135,17,36
419120,9,44,96,42,86
419121,41,29,187,6,35
419122,53,33,55,9,42
419123,87,11,104,6,17
419124,9,43,96,40,83
419125,187,31,41,3,34
419127,1,31,162,29,60
419128,9,19,96,8,27
419129,26,29,161,11,40
419130,42,56,133,24,80
419131,224,37,183,14,51
419132,162,14,1,8,22
419133,96,38,9,27,65
419134,224,30,183,14,44
419135,133,15,42,8,23
419136,162,12,1,5,17
419137,42,24,133,11,35
419138,185,47,18,12,59
419139,41,19,187,4,23
419140,97,20,53,9,29
419141,96,18,9,9,27
419142,224,37,183,25,62
419142,18,34,185,28,62
419143,133,35,42,14,49
419144,1,36,162,17,53
419145,41,35,187,6,41
419146,53,16,55,6,22
419147,133,28,42,16,44
419148,224,83,183,21,104
419149,1,49,162,40,89
419150,9,13,96,1,14
419151,64,31,227,9,40
419152,185,20,18,19,39
419153,162,34,1,16,50
419154,64,27,29,12,39
419155,133,10,44,1,11
419156,181,1,124,0,1
419156,97,1,53,0,1
419157,187,31,41,5,36
419158,1,10,162,7,17
419159,224,9,183,6,15
419160,185,6,18,1,7
419161,53,9,231,4,13
419162,133,19,210,12,31
419163,32,44,183,14,58
419164,64,21,100,10,31
419165,53,10,231,1,11
419166,2,46,1,42,88
419167,6,13,9,11,24
419168,53,15,97,3,18
419169,9,19,6,15,34
419170,185,26,18,16,42
501203,9,31,214,27,58
501204,42,24,257,16,40
501205,2,41,55,36,77
501206,41,10,187,1,11
501207,100,1,53,1,2
501208,9,30,214,19,49
501209,6,11,252,5,16
501210,263,22,133,9,31
501211,167,41,53,19,60
501212,157,17,74,10,27
501213,42,11,65,6,17
501214,6,12,252,9,21
501215,2,62,64,56,118
501216,185,31,19,19,50
501217,167,63,53,61,124
501218,187,45,41,22,67
501219,252,12,32,11,23
501220,2,22,64,16,38
501221,187,16,41,12,28
501223,157,12,272,2,14
501224,64,24,2,23,47
501225,167,33,53,28,61
501226,19,15,185,12,27
501227,162,84,135,38,122
501228,41,77,187,59,136
501229,263,32,133,15,47
501230,6,39,32,25,64
501231,19,32,185,31,63
501232,41,23,187,7,30
501233,157,19,231,2,21
501234,65,1,42,1,2
501235,132,17,9,11,28
501236,263,15,133,6,21
501237,162,42,135,15,57
501238,2,7,288,2,9
501239,53,24,167,7,31
501240,157,18,96,6,24
501240,32,12,6,12,24
501241,65,56,42,10,66
501242,263,10,133,2,12
501243,2,37,288,14,51
501244,65,26,42,15,41
501245,6,49,32,32,81
501246,133,12,289,6,18
501247,9,45,216,22,67
501248,42,15,112,2,17
501249,162,24,135,16,40
501250,185,5,19,2,7
501251,289,34,133,14,48
501252,162,44,135,21,65
501253,157,15,96,14,29
501254,19,46,185,28,74
501255,157,35,96,19,54
501256,167,14,53,6,20
501257,6,37,32,34,71
501258,183,25,187,4,29
501259,64,42,2,32,74
501260,162,38,139,6,44
501261,133,4,289,1,5
501262,183,28,187,15,43
501263,2,17,64,6,23
501264,65,31,42,28,59
501265,167,20,53,1,21
501266,185,16,19,3,19
501267,96,8,157,1,9
501268,32,89,6,43,132
501269,112,60,42,55,115
501271,19,4,185,2,6
501272,133,8,178,4,12
501273,260,17,162,8,25
501274,289,51,133,28,79
501275,162,62,260,41,103
501276,185,89,19,63,152
548311,304,50,133,14,64
548312,254,30,41,16,46
548313,83,1,235,0,1
548314,85,41,6,28,69
548315,198,25,203,11,36
548316,313,15,42,14,29
548317,9,5,2,2,7
548318,1,20,157,7,27
548319,42,6,17,1,7
548319,178,5,304,2,7
548320,40,35,9,22,57
548321,41,18,183,13,31
548322,304,16,178,10,26
548323,303,44,185,11,55
548324,157,7,1,5,12
548325,6,26,85,19,45
548326,42,9,26,1,10
548327,303,35,185,8,43
548328,236,10,53,5,15
548329,85,37,6,25,62
548330,41,14,183,13,27
548331,26,44,42,42,86
548332,157,34,46,26,60
548333,40,36,2,15,51
548334,313,19,42,9,28
548335,303,58,23,57,115
548336,319,14,167,0,14
548337,303,40,23,15,55
548338,157,14,46,10,24
548339,319,30,236,18,48
548339,275,26,133,22,48
548340,42,24,26,12,36
548341,6,39,85,13,52
548342,64,18,41,2,20
548344,133,28,275,22,50
548346,17,19,42,16,35
548347,41,72,64,55,127
548348,236,32,100,32,64
548349,40,49,2,43,92
548350,85,55,6,40,95
548351,17,19,42,16,35
548352,40,11,2,2,13
548353,26,0,10,0,0
548354,85,42,6,26,68
548355,236,27,100,8,35
548356,275,25,133,23,48
548357,185,14,303,1,15
548358,40,56,2,42,98
548359,236,7,100,1,8
548360,185,36,303,9,45
548361,135,62,162,26,88
548362,40,36,2,31,67
548363,1,14,328,11,25
548364,236,30,100,22,52
548365,162,27,135,19,46
548366,6,4,85,0,4
548367,162,57,135,17,74
548368,97,13,133,2,15
548369,19,38,185,36,74
548370,6,21,85,6,27
548371,42,26,17,18,44
548372,162,6,135,2,8
548373,40,61,2,36,97
548374,100,13,236,8,21
548375,97,13,133,11,24
548376,236,24,53,23,47
548377,187,15,262,1,16
548378,331,33,42,26,59
548379,187,58,262,18,76
548380,2,11,40,10,21
548381,162,27,135,3,30
548382,147,87,133,58,145
548383,40,32,2,14,46
548384,147,33,133,11,44
548385,185,47,19,20,67
548386,185,42,19,41,83
598003,214,4,40,1,5
598004,3,27,133,23,50
598005,46,24,96,10,34
598006,262,23,187,13,36
598007,185,5,19,5,10
598008,53,15,236,5,20
598010,40,14,214,1,15
598011,133,0,3,0,0
598012,19,86,185,50,136
598013,260,6,162,5,11
598014,46,32,254,23,55
598015,331,1,17,0,1
598016,133,39,3,14,53
598017,162,4,260,1,5
598018,214,28,40,28,56
598019,32,32,85,3,35
598020,254,67,46,24,91
598021,236,16,53,7,23
598023,46,22,254,16,38
598024,32,31,85,25,56
598025,185,18,19,11,29
598026,236,10,53,4,14
598027,40,25,31,18,43
598028,135,25,162,21,46
598029,41,90,64,59,149
598030,254,44,46,37,81
598031,32,54,85,16,70
598032,162,127,135,33,160
598033,53,42,100,14,56
598034,147,23,133,2,25
598034,31,19,40,6,25
598035,19,44,185,18,62
598036,236,25,53,19,44
598037,6,6,85,1,7
598038,162,17,135,13,30
598039,19,63,62,39,102
598040,46,37,254,35,72
598041,162,34,152,8,42
598042,133,9,147,2,11
598042,236,9,100,2,11
598043,254,15,46,9,24
598044,147,14,133,14,28
598045,41,17,64,5,22
598046,62,18,19,9,27
598047,162,21,79,13,34
598048,214,26,40,12,38
598049,42,22,17,11,33
598050,203,19,162,3,22
598051,147,22,133,15,37
598052,6,58,85,37,95
598053,260,29,162,10,39
598054,6,53,85,44,97
598055,133,48,147,41,89
598056,185,29,19,15,44
598057,6,4,85,1,5
598058,40,31,214,12,43
598059,64,19,41,6,25
598060,254,10,46,3,13
598061,42,15,17,12,27
598062,162,9,203,5,14
598063,19,40,185,37,77
598064,53,6,236,0,6
598065,17,26,42,9,35
598066,46,25,254,16,41
598067,185,31,19,23,54
598068,305,23,207,2,25
598069,162,61,203,35,96
598070,6,25,85,12,37
598071,236,1,53,1,2
598072,46,24,254,13,37
598073,8,35,162,28,63
598074,17,45,42,42,87
598075,19,28,185,23,51
598076,6,12,85,1,13
598077,207,35,147,33,68
598078,147,4,207,0,4
729284,207,21,19,3,24
729286,185,8,260,6,14
729288,2,67,147,44,111
729290,48,4,85,0,4
729292,19,16,207,2,18
729294,260,9,185,0,9
729296,85,13,48,9,22
729298,147,13,2,9,22
729300,41,30,203,20,50
729302,147,28,2,6,34
729304,114,40,17,21,61
729306,355,48,185,48,96
729308,147,29,2,26,55
729310,85,23,339,7,30
729312,96,8,9,4,12
729314,355,16,185,10,26
729316,147,42,2,40,82
729318,162,20,17,1,21
729322,254,11,42,6,17
733976,147,16,2,4,20
733978,203,9,41,1,10
733980,355,20,185,13,33
733982,254,13,42,7,20
733984,46,65,40,54,119
733986,147,42,2,32,74
733988,17,26,162,24,50
733990,46,47,40,47,94
733992,41,26,236,3,29
733994,42,33,254,3,36
733996,41,28,236,21,49
733998,355,7,158,2,9
734000,147,14,2,13,27
734002,46,46,40,18,64
734004,339,28,85,24,52
734006,254,17,42,11,28
734008,314,30,32,21,51
734010,162,22,17,11,33
734012,42,39,254,20,59
734014,46,33,40,14,47
734016,85,21,339,19,40
734018,2,19,147,9,28
734020,254,8,42,4,12
734022,383,62,19,55,117
734024,345,42,41,16,58
734026,42,50,187,46,96
734028,46,42,40,21,63
734030,383,55,19,6,61
734032,162,6,114,
Current sql:
WITH ball_with_wickets AS (
    SELECT
        bb."match_id",
        bb."innings_no",
        bb."over_id",
        bb."ball_id",
        bb."striker",
        bb."non_striker",
        bb."bowler",
        bs."runs_scored",
        CASE WHEN wt."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "is_wicket"
    FROM
        IPL.IPL."BALL_BY_BALL" bb
    LEFT JOIN
        IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
    LEFT JOIN
        IPL.IPL."WICKET_TAKEN" wt
        ON bb."match_id" = wt."match_id"
        AND bb."innings_no" = wt."innings_no"
        AND bb."over_id" = wt."over_id"
        AND bb."ball_id" = wt."ball_id"
),
ball_with_partnership AS (
    SELECT
        *,
        SUM("is_wicket") OVER (
            PARTITION BY "match_id", "innings_no"
            ORDER BY "over_id", "ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_no"
    FROM
        ball_with_wickets
),
partnership_batsmen AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        MIN("batsman_id") AS "batsman_id1",
        MAX("batsman_id") AS "batsman_id2"
    FROM (
        SELECT "match_id", "innings_no", "partnership_no", "striker" AS "batsman_id"
        FROM ball_with_partnership
        UNION
        SELECT "match_id", "innings_no", "partnership_no", "non_striker" AS "batsman_id"
        FROM ball_with_partnership
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
    HAVING COUNT(DISTINCT "batsman_id") = 2
),
partnership_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        SUM("runs_scored") AS "partnership_runs"
    FROM ball_with_partnership
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
batsman_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id",
        SUM("runs_scored") AS "player_runs"
    FROM (
        SELECT
            "match_id",
            "innings_no",
            "partnership_no",
            "striker" AS "batsman_id",
            "runs_scored"
        FROM ball_with_partnership
        WHERE "runs_scored" IS NOT NULL
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id"
),
partnership_details AS (
    SELECT
        pr."match_id",
        pr."innings_no",
        pr."partnership_no",
        pb."batsman_id1",
        pb."batsman_id2",
        COALESCE(br1."player_runs", 0) AS "player1_runs",
        COALESCE(br2."player_runs", 0) AS "player2_runs",
        pr."partnership_runs"
    FROM partnership_runs pr
    JOIN partnership_batsmen pb
        ON pr."match_id" = pb."match_id"
        AND pr."innings_no" = pb."innings_no"
        AND pr."partnership_no" = pb."partnership_no"
    LEFT JOIN batsman_runs br1
        ON pr."match_id" = br1."match_id"
        AND pr."innings_no" = br1."innings_no"
        AND pr."partnership_no" = br1."partnership_no"
        AND br1."batsman_id" = pb."batsman_id1"
    LEFT JOIN batsman_runs br2
        ON pr."match_id" = br2."match_id"
        AND pr."innings_no" = br2."innings_no"
        AND pr."partnership_no" = br2."partnership_no"
        AND br2."batsman_id" = pb."batsman_id2"
),
max_partnerships AS (
    SELECT
        "match_id",
        MAX("partnership_runs") AS "max_partnership_runs"
    FROM partnership_details
    GROUP BY "match_id"
)
SELECT
    pd."match_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."batsman_id2"
        ELSE pd."batsman_id1"
    END AS "player1_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."player2_runs"
        ELSE pd."player1_runs"
    END AS "player1_score",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."batsman_id1"
        ELSE pd."batsman_id2"
    END AS "player2_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."player1_runs"
        ELSE pd."player2_runs"
    END AS "player2_score",
    pd."partnership_runs" AS "partnership_score"
FROM partnership_details pd
JOIN max_partnerships mp
    ON pd."match_id" = mp."match_id"
    AND pd."partnership_runs" = mp."max_partnership_runs"
ORDER BY pd."match_id";
2025-01-25 03:33:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:33:04 - root - INFO - ```sql
WITH ball_with_wickets AS (
    SELECT
        bb."match_id",
        bb."innings_no",
        bb."over_id",
        bb."ball_id",
        bb."striker",
        bb."non_striker",
        bb."bowler",
        bs."runs_scored",
        CASE WHEN wt."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "is_wicket"
    FROM
        IPL.IPL."BALL_BY_BALL" bb
    LEFT JOIN
        IPL.IPL."BATSMAN_SCORED" bs
        ON bb."match_id" = bs."match_id"
        AND bb."innings_no" = bs."innings_no"
        AND bb."over_id" = bs."over_id"
        AND bb."ball_id" = bs."ball_id"
    LEFT JOIN
        IPL.IPL."WICKET_TAKEN" wt
        ON bb."match_id" = wt."match_id"
        AND bb."innings_no" = wt."innings_no"
        AND bb."over_id" = wt."over_id"
        AND bb."ball_id" = wt."ball_id"
),
ball_with_partnership AS (
    SELECT
        *,
        SUM("is_wicket") OVER (
            PARTITION BY "match_id", "innings_no"
            ORDER BY "over_id", "ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_no"
    FROM
        ball_with_wickets
),
partnership_batsmen AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        MIN("batsman_id") AS "batsman_id1",
        MAX("batsman_id") AS "batsman_id2"
    FROM (
        SELECT "match_id", "innings_no", "partnership_no", "striker" AS "batsman_id"
        FROM ball_with_partnership
        UNION
        SELECT "match_id", "innings_no", "partnership_no", "non_striker" AS "batsman_id"
        FROM ball_with_partnership
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
    HAVING COUNT(DISTINCT "batsman_id") = 2
),
partnership_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        SUM("runs_scored") AS "partnership_runs"
    FROM ball_with_partnership
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no"
),
batsman_runs AS (
    SELECT
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id",
        SUM("runs_scored") AS "player_runs"
    FROM (
        SELECT
            "match_id",
            "innings_no",
            "partnership_no",
            "striker" AS "batsman_id",
            "runs_scored"
        FROM ball_with_partnership
        WHERE "runs_scored" IS NOT NULL
    )
    GROUP BY
        "match_id",
        "innings_no",
        "partnership_no",
        "batsman_id"
),
partnership_details AS (
    SELECT
        pr."match_id",
        pr."innings_no",
        pr."partnership_no",
        pb."batsman_id1",
        pb."batsman_id2",
        COALESCE(br1."player_runs", 0) AS "player1_runs",
        COALESCE(br2."player_runs", 0) AS "player2_runs",
        pr."partnership_runs"
    FROM partnership_runs pr
    JOIN partnership_batsmen pb
        ON pr."match_id" = pb."match_id"
        AND pr."innings_no" = pb."innings_no"
        AND pr."partnership_no" = pb."partnership_no"
    LEFT JOIN batsman_runs br1
        ON pr."match_id" = br1."match_id"
        AND pr."innings_no" = br1."innings_no"
        AND pr."partnership_no" = br1."partnership_no"
        AND br1."batsman_id" = pb."batsman_id1"
    LEFT JOIN batsman_runs br2
        ON pr."match_id" = br2."match_id"
        AND pr."innings_no" = br2."innings_no"
        AND pr."partnership_no" = br2."partnership_no"
        AND br2."batsman_id" = pb."batsman_id2"
),
max_partnerships AS (
    SELECT
        "match_id",
        MAX("partnership_runs") AS "max_partnership_runs"
    FROM partnership_details
    GROUP BY "match_id"
)
SELECT
    pd."match_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."batsman_id2"
        ELSE pd."batsman_id1"
    END AS "player1_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."player2_runs"
        ELSE pd."player1_runs"
    END AS "player1_score",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."batsman_id2"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."batsman_id1"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."batsman_id1"
        ELSE pd."batsman_id2"
    END AS "player2_id",
    CASE
        WHEN pd."player1_runs" > pd."player2_runs" THEN pd."player2_runs"
        WHEN pd."player1_runs" < pd."player2_runs" THEN pd."player1_runs"
        WHEN pd."batsman_id1" < pd."batsman_id2" THEN pd."player1_runs"
        ELSE pd."player2_runs"
    END AS "player2_score",
    pd."partnership_runs" AS "partnership_score"
FROM partnership_details pd
JOIN max_partnerships mp
    ON pd."match_id" = mp."match_id"
    AND pd."partnership_runs" = mp."max_partnership_runs"
ORDER BY pd."match_id";
```
2025-01-25 03:33:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:33:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:33:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:33:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 580
2025-01-25 03:33:06 - snowflake.connector.connection - INFO - closed
2025-01-25 03:33:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:33:06 - root - INFO - itercount: 3
2025-01-25 03:33:06 - root - INFO - 0
2025-01-25 03:33:06 - root - INFO - Total iteration counts: 3
