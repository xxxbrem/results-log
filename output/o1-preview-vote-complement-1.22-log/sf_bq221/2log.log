2025-01-27 01:37:21 - openai._base_client - INFO - Retrying request to /chat/completions in 0.473149 seconds
2025-01-27 01:38:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:38:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:38:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:38:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:38:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:38:37 - snowflake.connector.connection - INFO - closed
2025-01-27 01:38:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:38:37 - root - INFO - SQL:
SELECT t."cpc"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 100;
Results:
Too long, hard cut:
cpc
[]
[]
[]
"[
  {
    ""code"": ""H02M5/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""A01N47/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D521/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""Y02A40/81"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""Y02E30/30"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""Y10T83/465"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B26F1/42"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""E21B27/02"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E21B27/02"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""B22D11/086"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""C07D471/16"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D471/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""G01N33/48728"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""C03C4/12"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C03C4/12"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""C11B5/0064"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/35"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C11B5/0035"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M135/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C09K15/30"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D263/56"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/44"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D235/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/3447"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/48"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/46"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D277/64"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/47"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/224"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/102"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/106"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/104"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/10"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/30"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/221"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/226"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/225"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/22"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10L1/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""E02D5/808"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/385"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/26"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/28"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/54"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
[]
[]
"[
  {
    ""code"": ""C07D213/32"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/51"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/51"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/22"",
    ""first"": true,
    ""inventive"": true,
    ""t

2025-01-27 01:38:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:38:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:38:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:38:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:38:38 - snowflake.connector.connection - INFO - closed
2025-01-27 01:38:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:38:39 - root - INFO - SQL:
SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   LIMIT 100;
Results:
Too long, hard cut:
VALUE
"{
  ""code"": ""G01N2030/202"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T137/86815"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N2030/202"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/6047"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F16K11/074"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/20"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K11/074"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B01D15/1821"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/20"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B01D15/1821"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/6047"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N2030/201"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N2030/201"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T137/86815"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/461"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/461"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""A61K31/00"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""A61K31/00"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G02B7/16"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G02B7/16"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G02B21/248"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y10T74/19749"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T74/19749"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G02B21/248"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06F13/4077"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H04L5/16"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06F13/4077"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H04L5/16"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B7/004"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B7/00375"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B20/10"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B19/04"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B7/00375"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B19/04"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/66"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V10/143"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/66"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V10/143"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/80"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/80"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/095"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/091"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C09D11/03"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C12/00"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/091"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C12/00"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/095"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C09D11/03"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01L28/91"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01L28/91"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/033"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/00"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/033"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/318"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/318"",
  

2025-01-27 01:38:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:38:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:38:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:38:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:38:40 - snowflake.connector.connection - INFO - closed
2025-01-27 01:38:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:39:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:39:27 - root - INFO - ```sql
SELECT
    f.value:"code"::STRING AS "cpc_code",
    cd."titleFull" AS "full_title",
    LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year",
    COUNT(*) AS "filing_count"
FROM
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."cpc") f
    JOIN PATENTS.PATENTS.CPC_DEFINITION cd
        ON cd."symbol" = f.value:"code"::STRING
        AND cd."level" = 5
WHERE
    f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
GROUP BY
    f.value:"code"::STRING,
    cd."titleFull",
    LEFT(TO_VARCHAR(t."filing_date"), 4)
ORDER BY
    "filing_count" DESC
LIMIT 100;
```
2025-01-27 01:39:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:39:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:39:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:39:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-27 01:39:43 - snowflake.connector.connection - INFO - closed
2025-01-27 01:39:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:40:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:40:15 - root - INFO - ```sql
SELECT
    f.value:"code"::STRING AS "cpc_code",
    cd."titleFull" AS "full_title",
    LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year",
    COUNT(*) AS "filing_count"
FROM
    PATENTS.PATENTS.PUBLICATIONS t,
    LATERAL FLATTEN(input => t."cpc") f
    LEFT JOIN PATENTS.PATENTS.CPC_DEFINITION cd
        ON REPLACE(cd."symbol", ' ', '') = f.value:"code"::STRING
WHERE
    f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
GROUP BY
    f.value:"code"::STRING,
    cd."titleFull",
    LEFT(TO_VARCHAR(t."filing_date"), 4)
ORDER BY
    "filing_count" DESC
LIMIT 100;
```
2025-01-27 01:40:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:40:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:40:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:40:16 - snowflake.connector.connection - INFO - closed
2025-01-27 01:40:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:40:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:40:58 - root - INFO - ```sql
SELECT
    f.value:"code"::STRING AS "cpc_symbol"
FROM
    PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
LIMIT 100;
```
2025-01-27 01:40:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:40:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:40:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:40:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:40:59 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:43 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:41:43 - root - INFO - SQL:
SELECT
    f.value:"code"::STRING AS "cpc_symbol"
FROM
    PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
LIMIT 100;
Results:
cpc_symbol
G06N10/40
G06N10/70
G06F3/0679
G06N3/08
G06F3/0604
G06F11/1004
H10N99/05
G06N10/20
G06N10/80
G06F3/0659
G06N10/00
H10N99/05
G06N10/60
B05B15/625
B05B1/14
B05B1/267
B05B1/34
B05B15/65
B05B1/046
A62C31/05
A62C31/03
B05B15/65
B05B1/267
B05B15/625
A62C31/05
B05B1/14
B05B1/34
B05B1/046
Y02E60/10
H02J7/00712
H02J7/00712
H02J7/02
H02J7/005
H02J7/0013
H02J7/0047
G01R31/389
H02J7/0013
F01D5/20
F05D2260/607
B33Y10/00
B33Y80/00
F05D2230/31
F05D2230/234
F05D2230/22
F05D2230/211
F01D5/147
B23P15/04
B23P6/007
F05D2230/12
F05D2230/11
F05D2250/621
F05D2250/62
F05D2250/311
F05D2260/202
B23K26/342
B23K2101/001
B23K26/0006
B22F5/04
B22F10/25
B22F7/062
Y02P10/25
Y02T50/60
F01D5/20
B33Y80/00
B23K26/342
F05D2230/31
F05D2230/30
F05D2260/607
F05D2240/307
F01D5/186
F01D5/187
F01D25/12
F01D5/18
B22F10/28
Y10T29/49321
B23P15/006
H04L5/006
H04L5/0058
H04L5/0055
H04L5/0048
H04L5/001
H04L5/0057
H04L5/0023
H04L5/005
H04W92/18
H04B7/088
H04B7/0695
H04B7/0626
H04W92/18
H04B7/0626
H04W72/25
H04W16/28
C07K2319/00
C07K14/70578
C07K2319/33
C07K14/70517
A61P35/00
C07K2319/02
C12N9/90
C07K14/7051

2025-01-27 01:41:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:41:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:41:45 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:45 - root - INFO - SQL:
-- Corrected Query 1
SELECT t."filing_date", f.value:"code"::STRING AS "cpc_symbol"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
LIMIT 100
Results:
filing_date,cpc_symbol
20210419,Y02P70/10
20210421,Y02E10/50
20210423,Y02T10/7072
20210423,Y02T90/12
20210423,Y02T10/70
20210429,E04B2/967
20210430,Y02E20/16
20210430,F25J2250/50
20210430,F25J2240/90
20210430,F25J2235/50
20210430,F25J3/04836
20210430,F25J3/0483
20210430,F25J3/04593
20210430,F25J3/04575
20210430,F25J3/04545
20210508,Y02P60/21
20210507,Y02W30/40
20210507,Y02E50/30
20210514,Y02E60/10
20210519,Y02E60/10
20210520,Y02E60/10
20210526,Y02A20/108
20210526,Y02B20/40
20210526,Y02E10/20
20210526,F16K15/026
20210526,F16K2200/303
20210526,F16K1/54
20210526,F16K15/063
20210526,F16K15/025
20210526,F16K1/38
20210526,F16K1/46
20210526,F16K27/029
20210526,F16K17/04
20210531,Y02P70/50
20210531,Y02E60/10
20210608,A47J43/24
20210608,B07B1/46
20210608,A23N12/02
20210608,B01D35/02
20210618,Y02W30/40
20210618,Y02E60/10
20210618,Y02P70/50
20210130,G06F16/3322
20210130,G06F40/247
20210130,G06Q30/0643
20210130,G06Q30/0625
20210130,G06F16/9035
20210130,G06F40/247
20210130,G06F16/90344
20210130,G06Q30/0643
20210130,G06Q30/0625
20210130,G06F40/247
20210130,G06Q30/0625
20210130,G06F16/9035
20210130,G06Q30/0643
20210130,G06F16/90344
20210202,A61M25/005
20210202,A61B1/2676
20210202,A61M25/0012
20210202,A61B90/10
20210202,A61M2025/0166
20210202,A61B5/062
20210202,A61B5/061
20210202,A61B5/062
20210202,A61B5/061
20210202,A61B2034/2051
20210202,A61B5/06
20210202,A61B2034/2051
20210202,A61M25/005
20210202,A61M2025/0166
20210202,A61B90/10
20210202,A61B1/2676
20210202,A61B5/06
20210202,A61M25/005
20210202,A61B5/062
20210202,A61B2034/2051
20210202,A61B5/061
20210202,A61B90/10
20210202,A61M25/0012
20210212,A63F13/352
20210212,A63F13/355
20210212,A63F2300/538
20210212,A63F2300/5593
20210212,A63F13/355
20210212,A63F2300/534
20210212,A63F2300/538
20210212,A63F13/355
20210212,A63F2300/8082
20210212,A63F13/355
20210212,A63F13/352
20210212,A63F2300/407
20210212,A63F2300/538
20210212,A63F13/335
20210212,A63F13/355
20210212,A63F13/352
20210212,A63F2300/538
20210222,H04W36/14
20210222,H04W36/0011
20210222,H04W36/302
20210222,H04W76/27

2025-01-27 01:41:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:41:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:41:47 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:47 - root - INFO - SQL:
-- Corrected Query 2 (No change needed)
SELECT cd."symbol", cd."level", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
LIMIT 100
Results:
Too long, hard cut:
symbol,level,titleFull
B,2.0,PERFORMING OPERATIONS; TRANSPORTING
H,2.0,ELECTRICITY
Y,2.0,GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
D,2.0,TEXTILES; PAPER
F,2.0,MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
E,2.0,FIXED CONSTRUCTIONS
C,2.0,CHEMISTRY; METALLURGY
G,2.0,PHYSICS
A,2.0,HUMAN NECESSITIES
A45,4.0,HAND OR TRAVELLING ARTICLES
A24,4.0,TOBACCO; CIGARS; CIGARETTES; SIMULATED SMOKING DEVICES; SMOKERS' REQUISITES
A61,4.0,MEDICAL OR VETERINARY SCIENCE; HYGIENE
A63,4.0,SPORTS; GAMES; AMUSEMENTS
A22,4.0,BUTCHERING; MEAT TREATMENT; PROCESSING POULTRY OR FISH
A42,4.0,HEADWEAR
A99,4.0,SUBJECT MATTER NOT OTHERWISE PROVIDED FOR IN THIS SECTION
A43,4.0,FOOTWEAR
A01,4.0,AGRICULTURE; FORESTRY; ANIMAL HUSBANDRY; HUNTING; TRAPPING; FISHING
A62,4.0,LIFE-SAVING; FIRE-FIGHTING
A23,4.0,"FOODS OR FOODSTUFFS; TREATMENT THEREOF, NOT COVERED BY OTHER CLASSES"
A47,4.0,FURNITURE; DOMESTIC ARTICLES OR APPLIANCES; COFFEE MILLS; SPICE MILLS; SUCTION CLEANERS IN GENERAL
A46,4.0,BRUSHWARE
A44,4.0,HABERDASHERY; JEWELLERY
A21,4.0,BAKING; EDIBLE DOUGHS
A41,4.0,WEARING APPAREL
B27,4.0,WORKING OR PRESERVING WOOD OR SIMILAR MATERIAL; NAILING OR STAPLING MACHINES IN GENERAL
B68,4.0,SADDLERY; UPHOLSTERY
B04,4.0,CENTRIFUGAL APPARATUS OR MACHINES FOR CARRYING-OUT PHYSICAL OR CHEMICAL PROCESSES
B23,4.0,MACHINE TOOLS; METAL-WORKING NOT OTHERWISE PROVIDED FOR
B30,4.0,PRESSES
B21,4.0,MECHANICAL METAL-WORKING WITHOUT ESSENTIALLY REMOVING MATERIAL; PUNCHING METAL
B25,4.0,HAND TOOLS; PORTABLE POWER-DRIVEN TOOLS; MANIPULATORS
B99,4.0,SUBJECT MATTER NOT OTHERWISE PROVIDED FOR IN THIS SECTION
B29,4.0,WORKING OF PLASTICS; WORKING OF SUBSTANCES IN A PLASTIC STATE IN GENERAL
B31,4.0,"MAKING ARTICLES OF PAPER, CARDBOARD OR MATERIAL WORKED IN A MANNER ANALOGOUS TO PAPER; WORKING PAPER, CARDBOARD OR MATERIAL WORKED IN A MANNER ANALOGOUS TO PAPER"
B26,4.0,HAND CUTTING TOOLS; CUTTING; SEVERING
B66,4.0,HOISTING; LIFTING; HAULING
B02,4.0,"CRUSHING, PULVERISING, OR DISINTEGRATING; PREPARATORY TREATMENT OF GRAIN FOR MILLING"
B65,4.0,CONVEYING; PACKING; STORING; HANDLING THIN OR FILAMENTARY MATERIAL
B61,4.0,RAILWAYS
B24,4.0,GRINDING; POLISHING
B06,4.0,GENERATING OR TRANSMITTING MECHANICAL VIBRATIONS IN GENERAL
B43,4.0,WRITING OR DRAWING IMPLEMENTS; BUREAU ACCESSORIES
B62,4.0,LAND VEHICLES FOR TRAVELLING OTHERWISE THAN ON RAILS
B64,4.0,AIRCRAFT; AVIATION; COSMONAUTICS
B22,4.0,CASTING; POWDER METALLURGY
B28,4.0,"WORKING CEMENT, CLAY, OR STONE"
B09,4.0,DISPOSAL OF SOLID WASTE; RECLAMATION OF CONTAMINATED SOIL
B01,4.0,PHYSICAL OR CHEMICAL PROCESSES OR APPARATUS IN GENERAL
B63,4.0,SHIPS OR OTHER WATERBORNE VESSELS; RELATED EQUIPMENT
B60,4.0,VEHICLES IN GENERAL
B44,4.0,DECORATIVE ARTS
B07,4.0,SEPARATING SOLIDS FROM SOLIDS; SORTING
B08,4.0,CLEANING
B82,4.0,NANOTECHNOLOGY
B42,4.0,BOOKBINDING; ALBUMS; FILES; SPECIAL PRINTED MATTER
B32,4.0,LAYERED PRODUCTS
B81,4.0,MICROSTRUCTURAL TECHNOLOGY
B05,4.0,"SPRAYING OR ATOMISING IN GENERAL; APPLYING FLUENT MATERIALS TO SURFACES, IN GENERAL"
B41,4.0,PRINTING; LINING MACHINES; TYPEWRITERS; STAMPS
B03,4.0,SEPARATION OF SOLID MATERIALS USING LIQUIDS OR USING PNEUMATIC TABLES OR JIGS; MAGNETIC OR ELECTROSTATIC SEPARATION OF SOLID MATERIALS FROM SOLID MATERIALS OR FLUIDS; SEPARATION BY HIGH-VOLTAGE ELECTRIC FIELDS
B67,4.0,"OPENING, CLOSING OR CLEANING BOTTLES, JARS OR SIMILAR CONTAINERS; LIQUID HANDLING"
B33,4.0,ADDITIVE MANUFACTURING TECHNOLOGY
C22,4.0,METALLURGY; FERROUS OR NON-FERROUS ALLOYS; TREATMENT OF ALLOYS OR NON-FERROUS METALS
C23,4.0,"COATING METALLIC MATERIAL; COATING MATERIAL WITH METALLIC MATERIAL; CHEMICAL SURFACE TREATMENT; DIFFUSION TREATMENT OF METALLIC MATERIAL; COATING BY VACUUM EVAPORATION, BY SPUTTERING, BY ION IMPLANTATION OR BY CHEMICAL VAPOUR DEPOSITION, IN GENERAL; INHIBITING CORROSION OF METALLIC MATERIAL OR INCRUSTATION IN GENERAL"
C06,4.0,EXPLOSIVES; MATCHES
C02,4.0,"TREATMENT OF WATER, WASTE WATER, SEWAGE, OR SLUDGE"
C07,4.0,ORGANIC CHEMISTRY
C25,4.0,ELECTROLYTIC OR ELECTROPHORETIC PROCESSES; APPARATUS THEREFOR
C30,4.0,CRYSTAL GROWTH
C12,4.0,BIOCHEMISTRY; BEER; SPIRITS; WINE; VINEGAR; MICROBIOLOGY; ENZYMOLOGY; MUTATION OR GENETIC ENGINEERING
C99,4.0,SUBJECT MATTER NOT OTHERWISE PROVIDED FOR IN THIS SECTION
C05,4.0,FERTILISERS; MANUFACTURE THEREOF
C40,4.0,COMBINATORIAL TECHNOLOGY
C11,4.0,"ANIMAL OR VEGETABLE OILS, FATS, FATTY SUBSTANCES OR WAXES; FATTY ACIDS THEREFROM; DETERGENTS; CANDLES"
C08,4.0,ORGANIC MACROMOLECULAR COMPOUNDS; THEIR PREPARATION OR CHEMICAL WORKING-UP; COMPOSITIONS BASED THEREON
C10,4.0,"PETROLEUM, GAS OR COKE INDUSTRIES; TECHNICAL GASES CONTAINING CARBON MONOXIDE; FUELS; LUBRICANTS; PEAT"
C21,4.0,METALLURGY OF IRON
C04,4.0,CEMENTS; CONCRETE; ARTIFICIAL STONE; CERAMICS; REFRACTORIES
C09,4.0,DYES; PAINTS; POLISHES; NATURAL RESINS; ADHESIVES; COMPOSITIONS NOT OTHERWISE PROVIDED FOR; APPLIC

2025-01-27 01:41:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:41:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:41:48 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:49 - root - INFO - SQL:
-- Corrected Query 3 (No change needed)
SELECT cd."symbol", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
WHERE cd."level" = 5
LIMIT 100
Results:
Too long, hard cut:
symbol,titleFull
A01H,NEW PLANTS OR NON-TRANSGENIC PROCESSES FOR OBTAINING THEM; PLANT REPRODUCTION BY TISSUE CULTURE TECHNIQUES
A01F,PROCESSING OF HARVESTED PRODUCE; HAY OR STRAW PRESSES; DEVICES FOR STORING AGRICULTURAL OR HORTICULTURAL PRODUCE
A01C,PLANTING; SOWING; FERTILISING
A01G,"HORTICULTURE; CULTIVATION OF VEGETABLES, FLOWERS, RICE, FRUIT, VINES, HOPS OR SEAWEED; FORESTRY; WATERING"
A01N,"PRESERVATION OF BODIES OF HUMANS OR ANIMALS OR PLANTS OR PARTS THEREOF; BIOCIDES, e.g. AS DISINFECTANTS, AS PESTICIDES OR AS HERBICIDES; PEST REPELLANTS OR ATTRACTANTS; PLANT GROWTH REGULATORS"
A01P,"BIOCIDAL, PEST REPELLANT, PEST ATTRACTANT OR PLANT GROWTH REGULATORY ACTIVITY OF CHEMICAL COMPOUNDS OR PREPARATIONS"
A01D,HARVESTING; MOWING
A01L,SHOEING OF ANIMALS
A01K,"ANIMAL HUSBANDRY; AVICULTURE; APICULTURE; PISCICULTURE; FISHING; REARING OR BREEDING ANIMALS, NOT OTHERWISE PROVIDED FOR; NEW BREEDS OF ANIMALS"
A01M,"CATCHING, TRAPPING OR SCARING OF ANIMALS; APPARATUS FOR THE DESTRUCTION OF NOXIOUS ANIMALS OR NOXIOUS PLANTS"
A01J,MANUFACTURE OF DAIRY PRODUCTS
A01B,"SOIL WORKING IN AGRICULTURE OR FORESTRY; PARTS, DETAILS, OR ACCESSORIES OF AGRICULTURAL MACHINES OR IMPLEMENTS, IN GENERAL"
A21D,"TREATMENT, e.g. PRESERVATION, OF FLOUR OR DOUGH, e.g. BY ADDITION OF MATERIALS; BAKING; BAKERY PRODUCTS; PRESERVATION THEREOF"
A21C,MACHINES OR EQUIPMENT FOR MAKING OR PROCESSING DOUGHS; HANDLING BAKED ARTICLES MADE FROM DOUGH
A21B,BAKERS' OVENS; MACHINES OR EQUIPMENT FOR BAKING
A22B,SLAUGHTERING
A22C,"PROCESSING MEAT, POULTRY, OR FISH"
A23P,"SHAPING OR WORKING OF FOODSTUFFS, NOT FULLY COVERED BY A SINGLE OTHER SUBCLASS"
A23C,"DAIRY PRODUCTS, e.g. MILK, BUTTER OR CHEESE; MILK OR CHEESE SUBSTITUTES; MAKING THEREOF"
A23J,PROTEIN COMPOSITIONS FOR FOODSTUFFS; WORKING-UP PROTEINS FOR FOODSTUFFS; PHOSPHATIDE COMPOSITIONS FOR FOODSTUFFS
A23K,FODDER
A23L,"FOODS, FOODSTUFFS, OR NON-ALCOHOLIC BEVERAGES, NOT COVERED BY SUBCLASSES A21D OR A23B-A23J; THEIR PREPARATION OR TREATMENT, e.g. COOKING, MODIFICATION OF NUTRITIVE QUALITIES, PHYSICAL TREATMENT; PRESERVATION OF FOODS OR FOODSTUFFS, IN GENERAL"
A23N,"MACHINES OR APPARATUS FOR TREATING HARVESTED FRUIT, VEGETABLES OR FLOWER BULBS IN BULK, NOT OTHERWISE PROVIDED FOR; PEELING VEGETABLES OR FRUIT IN BULK; APPARATUS FOR PREPARING ANIMAL FEEDING- STUFFS"
A23V,"INDEXING SCHEME RELATING TO FOODS, FOODSTUFFS OR NON-ALCOHOLIC BEVERAGES AND LACTIC OR PROPIONIC ACID BACTERIA USED IN FOODSTUFFS OR FOOD PREPARATION"
A23F,"COFFEE; TEA; THEIR SUBSTITUTES; MANUFACTURE, PREPARATION, OR INFUSION THEREOF"
A23G,"COCOA; COCOA PRODUCTS, e.g. CHOCOLATE; SUBSTITUTES FOR COCOA OR COCOA PRODUCTS; CONFECTIONERY; CHEWING GUM; ICE-CREAM; PREPARATION THEREOF"
A23B,"PRESERVING, e.g. BY CANNING, MEAT, FISH, EGGS, FRUIT, VEGETABLES, EDIBLE SEEDS; CHEMICAL RIPENING OF FRUIT OR VEGETABLES; THE PRESERVED, RIPENED, OR CANNED PRODUCTS"
A23D,"EDIBLE OILS OR FATS, e.g. MARGARINES, SHORTENINGS, COOKING OILS"
A24C,MACHINES FOR MAKING CIGARS OR CIGARETTES
A24D,CIGARS; CIGARETTES; TOBACCO SMOKE FILTERS; MOUTHPIECES FOR CIGARS OR CIGARETTES; MANUFACTURE OF TOBACCO SMOKE FILTERS OR MOUTHPIECES
A24F,SMOKERS' REQUISITES; MATCH BOXES; SIMULATED SMOKING DEVICES
A24B,MANUFACTURE OR PREPARATION OF TOBACCO FOR SMOKING OR CHEWING; TOBACCO; SNUFF
A41F,GARMENT FASTENINGS; SUSPENDERS
A41G,ARTIFICIAL FLOWERS; WIGS; MASKS; FEATHERS
A41B,SHIRTS; UNDERWEAR; BABY LINEN; HANDKERCHIEFS
A41D,OUTERWEAR; PROTECTIVE GARMENTS; ACCESSORIES
A41C,CORSETS; BRASSIERES
A41H,"APPLIANCES OR METHODS FOR MAKING CLOTHES, e.g. FOR DRESS-MAKING OR FOR TAILORING, NOT OTHERWISE PROVIDED FOR"
A42B,HATS; HEAD COVERINGS
A42C,"MANUFACTURING OR TRIMMING HEAD COVERINGS, e.g. HATS"
A43B,CHARACTERISTIC FEATURES OF FOOTWEAR; PARTS OF FOOTWEAR
A43C,FASTENINGS OR ATTACHMENTS OF FOOTWEAR; LACES IN GENERAL
A43D,"MACHINES, TOOLS, EQUIPMENT OR METHODS FOR MANUFACTURING OR REPAIRING FOOTWEAR"
A44D,"INDEXING SCHEME RELATING TO BUTTONS, PINS, BUCKLES OR SLIDE FASTENERS, AND TO JEWELLERY, BRACELETS OR OTHER PERSONAL ADORNMENTS"
A44B,"BUTTONS, PINS, BUCKLES, SLIDE FASTENERS, OR THE LIKE"
A44C,"PERSONAL ADORNMENTS, e.g. JEWELLERY; COINS"
A45F,TRAVELLING OR CAMP EQUIPMENT: SACKS OR PACKS CARRIED ON THE BODY
A45C,PURSES; LUGGAGE; HAND CARRIED BAGS
A45D,"HAIRDRESSING OR SHAVING EQUIPMENT; EQUIPMENT FOR COSMETICS OR COSMETIC TREATMENTS, e.g. FOR MANICURING OR PEDICURING"
A45B,WALKING STICKS; UMBRELLAS; LADIES' OR LIKE FANS
A46D,MANUFACTURE OF BRUSHES
A46B,BRUSHES
A47L,DOMESTIC WASHING OR CLEANING; SUCTION CLEANERS IN GENERAL
A47F,"SPECIAL FURNITURE, FITTINGS, OR ACCESSORIES FOR SHOPS, STOREHOUSES, BARS, RESTAURANTS OR THE LIKE; PAYING COUNTERS"
A47D,FURNITURE SPECIALLY ADAPTED FOR CHILDREN
A47G,HOUSEHOLD OR TABLE EQUIPMENT
A47K,SANITARY EQUIPMENT NOT OTHERWISE PROVIDED FOR; TOILET ACCESSORIES
A47H,FURNISHINGS FOR WINDOWS OR DOORS
A47B,TABLES; DESKS; OFFICE FURNITURE; CABINETS; DRAWERS; GENERAL DETAILS OF FURNITURE
A47C,CHAIRS; SOFAS; BEDS
A47J,KITCHEN EQUIPMENT; COFFEE MILLS; SPICE MILLS; APPA

2025-01-27 01:41:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:41:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:41:50 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:51 - root - INFO - SQL:
-- Corrected Query 4 (No change needed)
SELECT LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year"
FROM PATENTS.PATENTS.PUBLICATIONS t
LIMIT 100
Results:
filing_year
1997
1999
0
1983
1990
1990
1986
0
1948
1980
1982
1982
1970
1970
1970
0
1890
1969
1966
1894
1894
1895
0
1962
1965
1966
1966
1966
1966
1966
1960
1958
1929
1940
1987
1984
1992
1978
1986
1991
1986
1993
2015
1983
1986
1973
1978
1982
1988
1990
0
1979
0
0
1971
1997
1988
1982
1975
1983
1981
1978
1982
1982
1980
1990
1986
1985
1973
1985
1975
1977
1975
1979
1978
1972
1978
1973
1973
1974
1974
1975
1975
1976
1976
1976
1976
1977
1977
1977
1977
1978
1978
1978
1978
1978
1979
1979
1980
1952

2025-01-27 01:41:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:41:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:41:52 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:53 - root - INFO - SQL:
-- Corrected Query 5
SELECT f.value:"code"::STRING AS "cpc_symbol", COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code" IS NOT NULL
GROUP BY "cpc_symbol"
ORDER BY "patent_count" DESC
LIMIT 100
Results:
cpc_symbol,patent_count
Y02E60/10,5576
A61P35/00,5514
A61P43/00,3803
A61K45/06,3065
Y02P70/50,2621
A61P29/00,2555
A61K38/00,2489
A61P25/00,2136
A61K2039/505,1915
Y02T10/12,1834
Y02E10/50,1825
A23V2002/00,1817
Y02T10/70,1777
C07D471/04,1747
H01L2924/0002,1714
A61P25/28,1694
Y02E60/50,1668
Y02A50/30,1659
H01M10/0525,1650
Y02D30/70,1618
A61P9/00,1605
A61P9/10,1499
C07D487/04,1485
A61P31/04,1483
G06N3/08,1467
A61P3/10,1463
G06N20/00,1397
C07D401/12,1347
H01L2224/48091,1339
C07D401/14,1327
A61P11/00,1312
A61K9/0019,1294
A61P17/00,1294
H04N19/176,1189
A61P19/02,1179
A61Q19/00,1172
B32B27/08,1150
C07K2317/92,1147
H01M10/052,1138
B82Y30/00,1132
Y02D10/00,1128
F21Y2115/10,1115
Y02P10/20,1096
C07K2317/76,1094
Y02P70/10,1088
H04W72/23,1063
C07K2317/24,1061
Y02T10/7072,1037
A61P35/02,1035
A61P31/12,1019
A61P1/04,1018
Y02T10/40,1000
A61P27/02,1000
G06N3/045,983
C07D401/04,980
A61P37/00,974
Y02E10/72,972
A61P1/00,967
B32B7/12,962
Y02E30/30,953
C07D413/14,940
B32B27/32,934
C08J5/18,932
H04L5/0053,926
C07D405/12,901
A61P31/00,898
A61P1/16,894
A61P37/06,893
H04W4/80,885
H04L5/0048,882
A61P37/02,881
A61P13/12,877
C07K2319/00,857
C07D405/14,849
H01M2220/20,848
A61K31/519,825
C09K11/06,819
H04L67/12,818
H01L2924/00014,808
C22C38/02,804
H01L2924/181,803
A61P11/06,802
B82Y40/00,796
G06Q30/02,785
C07K2317/565,784
A61P3/00,779
C07D417/12,777
H04W84/12,773
B33Y10/00,767
C07D403/12,761
C22C38/04,757
G06F3/0482,757
A61K39/00,755
Y02P90/02,750
A61P3/04,749
A61P9/12,744
G06Q10/10,743
C07D417/14,742
Y02W10/10,740
A61P17/06,736

2025-01-27 01:41:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:41:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:41:54 - snowflake.connector.connection - INFO - closed
2025-01-27 01:41:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:41:55 - root - INFO - SQL:
-- Corrected Query 6
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year",
    COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code" IS NOT NULL AND t."filing_date" IS NOT NULL
GROUP BY "cpc_symbol", "filing_year"
ORDER BY "patent_count" DESC
LIMIT 100
Results:
cpc_symbol,filing_year,patent_count
Y02E60/10,2021,501
Y02E60/10,2022,471
Y02E60/10,2020,444
Y02E60/10,2017,437
A61P35/00,2019,432
A61P35/00,2021,428
A61P35/00,2020,425
A61P35/00,2017,417
Y02E60/10,2018,398
A61P35/00,2018,389
Y02E60/10,2019,354
Y02P70/10,2022,347
A61P35/00,2016,341
G06N3/08,2021,303
G06N20/00,2020,292
G06N3/08,2020,289
Y02E60/10,2016,288
Y02E60/10,2023,283
A61P35/00,2022,272
A61K45/06,2018,269
Y02P70/10,2023,262
A61K45/06,2020,261
G06N3/08,2019,256
G06N20/00,2021,249
Y02E60/10,2014,242
G06N3/045,2021,242
G06N3/08,2022,241
A61K45/06,2017,234
A61P35/00,2015,230
A61K45/06,2019,228
Y02E60/10,2015,225
G06N20/00,2019,222
G06N3/045,2020,215
Y02E60/10,2013,213
A23V2002/00,2017,202
Y02E60/10,2012,201
A61K45/06,2016,201
A23V2002/00,2018,201
A23V2002/00,2016,201
A61K45/06,2021,190
A61P43/00,2004,189
A61K45/06,2015,189
A61P43/00,2007,188
A61K2039/505,2017,187
H04N19/176,2020,185
A61P43/00,2008,181
H01M10/0525,2017,180
Y02E10/50,2022,180
Y02P70/50,2017,177
Y02A50/30,2022,174
A61P43/00,2006,174
A61P43/00,2015,173
A61K2039/505,2016,170
Y02T10/70,2020,170
A61P43/00,2014,170
G06N20/00,2018,169
A61P43/00,2009,164
A61K2039/505,2020,163
Y02E60/10,2011,162
Y02P70/50,2018,160
A61P43/00,2010,159
G06N20/00,2022,159
A61P43/00,2003,159
A61P43/00,2005,158
A61K2039/505,2019,158
Y02E10/50,2020,157
Y02T10/70,2018,157
A61P35/00,2009,155
A61P35/00,2014,155
A61P35/00,2008,154
Y02E10/50,2021,153
H01M10/0525,2021,153
A61P43/00,2017,152
A61P35/00,2006,151
A61P35/00,2011,150
G06N3/045,2019,150
Y02T10/70,2017,149
Y02P70/50,2019,148
G06N3/08,2018,146
A61P35/00,2007,146
Y02D10/00,2023,146
A61K45/06,2014,145
Y02D30/70,2022,145
C07K2317/92,2017,145
Y02P70/50,2022,144
A61P35/00,2004,143
A61P43/00,2011,140
A61P43/00,2013,140
H01M10/0525,2018,140
Y02P70/50,2015,139
Y02T10/70,2019,138
C07D471/04,2018,138
Y02E60/10,2010,138
Y02P70/50,2016,138
A61K45/06,2013,138
A61P35/00,2010,138
Y02T10/70,2021,138
Y02E10/50,2018,138
A61P35/00,2013,138
H04N19/70,2020,138

2025-01-27 01:41:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:41:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:41:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:42:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-27 01:42:10 - snowflake.connector.connection - INFO - closed
2025-01-27 01:42:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:42:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:42:56 - root - INFO - ```sql
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    CAST(LEFT(TO_VARCHAR(t."publication_date"), 4) AS INTEGER) AS "publication_year",
    COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
    AND t."publication_date" IS NOT NULL
    AND t."publication_date" > 0
GROUP BY
    "cpc_symbol",
    "publication_year"
ORDER BY
    "patent_count" DESC
LIMIT 100;
```
2025-01-27 01:42:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:42:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:42:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:42:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:42:57 - snowflake.connector.connection - INFO - closed
2025-01-27 01:42:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:43:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:43:30 - root - INFO - SQL:
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    CAST(LEFT(TO_VARCHAR(t."publication_date"), 4) AS INTEGER) AS "publication_year",
    COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
    AND t."publication_date" IS NOT NULL
    AND t."publication_date" > 0
GROUP BY
    "cpc_symbol",
    "publication_year"
ORDER BY
    "patent_count" DESC
LIMIT 100;
Results:
cpc_symbol,publication_year,patent_count
Y02E60/10,2023,622
A61P35/00,2022,585
Y02E60/10,2021,569
Y02E60/10,2022,561
A61P35/00,2021,558
Y02P70/10,2023,474
A61P35/00,2020,449
Y02E60/10,2020,432
A61P35/00,2023,412
Y02E60/10,2018,380
A61K45/06,2021,374
G06N3/08,2022,369
A61P35/00,2018,353
G06N3/08,2021,337
A61P35/00,2019,332
G06N20/00,2021,325
Y02E60/10,2017,302
Y02E60/10,2019,302
A61P35/00,2024,299
Y02E60/10,2024,283
G06N3/08,2023,276
A61K45/06,2020,273
Y02A50/30,2023,271
Y02D10/00,2023,271
A61K45/06,2022,268
G06N20/00,2022,263
A61P35/00,2017,261
G06N3/045,2021,254
G06N3/045,2022,250
G06N20/00,2023,241
Y02E60/10,2014,236
A61K2039/505,2022,230
Y02T10/70,2021,229
Y02E60/10,2016,226
Y02E60/10,2015,224
A61K45/06,2018,217
Y02E10/50,2023,216
A61K2039/505,2021,213
G06N3/08,2020,204
A61K45/06,2023,201
A61K2039/505,2020,200
H01M10/0525,2021,200
Y02D30/70,2023,200
Y02P70/50,2022,199
G06N20/00,2020,198
A61K45/06,2019,197
A61P35/00,2016,195
A23V2002/00,2018,193
A61P43/00,2016,192
Y02P70/10,2022,189
A61K45/06,2016,189
A61P43/00,2009,188
Y02E10/50,2022,184
Y02E10/50,2021,183
A61P43/00,2015,181
A23V2002/00,2017,181
A61K45/06,2017,179
Y02P70/50,2020,176
A61P43/00,2008,170
H01M10/0525,2022,169
A61P43/00,2017,168
A61P43/00,2018,167
Y02P70/50,2018,166
A61P43/00,2005,165
A61P35/00,2015,164
A61P43/00,2011,160
Y02P70/50,2021,159
A61P43/00,2010,157
Y02T10/70,2018,156
Y02P70/50,2017,156
G06V10/82,2023,155
A61K38/00,2021,155
A23V2002/00,2016,154
Y02P70/50,2019,153
A61P29/00,2022,153
Y02T10/70,2020,153
A61P43/00,2007,152
A61P43/00,2021,152
Y02E10/50,2018,152
Y02D30/70,2022,152
A61P29/00,2020,151
G06N3/045,2023,150
Y02E60/10,2013,150
A61P35/00,2011,150
A23V2002/00,2021,150
Y02P70/50,2023,149
A61P43/00,2013,147
H04W72/23,2021,147
A61K45/06,2015,147
A61K2039/505,2018,146
Y02T10/7072,2021,146
A61K2039/505,2019,145
A61P29/00,2021,145
A61P43/00,2006,143
C07K2317/92,2022,143
H01M10/0525,2020,143
A23V2002/00,2019,142
C07D471/04,2020,142
C07K2317/76,2021,142
A61P35/00,2010,141

2025-01-27 01:43:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:43:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:43:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:43:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:43:32 - snowflake.connector.connection - INFO - closed
2025-01-27 01:43:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:43:32 - root - INFO - SQL:
-- Corrected Query 8
SELECT DISTINCT CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) AS "filing_year"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."filing_date" IS NOT NULL AND t."filing_date" > 0
ORDER BY "filing_year"
LIMIT 100
Results:
filing_year
1846
1853
1860
1867
1877
1880
1881
1882
1883
1885
1886
1887
1888
1889
1890
1891
1892
1893
1894
1895
1896
1897
1898
1899
1900
1901
1902
1903
1904
1905
1906
1907
1908
1909
1910
1911
1912
1913
1914
1915
1916
1917
1918
1919
1920
1921
1922
1923
1924
1925
1926
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1946
1947
1948
1949
1950
1951
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
1966
1967
1968
1969
1970
1971
1972
1973
1974
1975

2025-01-27 01:43:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:43:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:43:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:43:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-27 01:43:33 - snowflake.connector.connection - INFO - closed
2025-01-27 01:43:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:43:34 - root - INFO - SQL:
-- Corrected Query 9
SELECT cd."symbol", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
WHERE REPLACE(cd."symbol", ' ', '') = 'H04W76/00'
LIMIT 100
Results:
symbol,titleFull
H04W76/00,Connection management

2025-01-27 01:43:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:43:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:43:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:43:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:43:35 - snowflake.connector.connection - INFO - closed
2025-01-27 01:43:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:43:36 - root - INFO - SQL:
-- Corrected Query 10
SELECT CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) AS "filing_year", COUNT(*) AS "total_patents"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."filing_date" IS NOT NULL AND t."filing_date" > 0
GROUP BY "filing_year"
ORDER BY "filing_year"
LIMIT 100
Results:
filing_year,total_patents
1846,1
1853,1
1860,1
1867,1
1877,4
1880,1
1881,2
1882,3
1883,2
1885,4
1886,3
1887,3
1888,3
1889,10
1890,4
1891,9
1892,10
1893,18
1894,34
1895,28
1896,44
1897,44
1898,51
1899,110
1900,81
1901,91
1902,100
1903,111
1904,136
1905,149
1906,189
1907,197
1908,160
1909,155
1910,164
1911,228
1912,276
1913,275
1914,197
1915,171
1916,173
1917,143
1918,111
1919,149
1920,173
1921,208
1922,159
1923,166
1924,174
1925,203
1926,214
1927,211
1928,243
1929,264
1930,272
1931,263
1932,219
1933,236
1934,298
1935,314
1936,335
1937,295
1938,346
1939,309
1940,289
1941,288
1942,211
1943,270
1944,248
1945,256
1946,302
1947,327
1948,300
1949,329
1950,357
1951,354
1952,382
1953,387
1954,478
1955,472
1956,519
1957,493
1958,514
1959,575
1960,552
1961,566
1962,573
1963,544
1964,857
1965,942
1966,1036
1967,1011
1968,1085
1969,1427
1970,1478
1971,2192
1972,2741
1973,3017
1974,3091
1975,3236

2025-01-27 01:43:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:43:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:43:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:43:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-01-27 01:43:37 - snowflake.connector.connection - INFO - closed
2025-01-27 01:43:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:43:38 - root - INFO - SQL:
-- Corrected Query 11
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    COUNT(*) AS "patent_count"
FROM
    PATENTS.PATENTS.PUBLICATIONS t
    CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
    AND CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) = 2020
GROUP BY
    "cpc_symbol"
ORDER BY
    "patent_count" DESC
LIMIT 10
Results:
cpc_symbol,patent_count
Y02E60/10,444
A61P35/00,425
G06N20/00,292
G06N3/08,289
A61K45/06,261
G06N3/045,215
H04N19/176,185
Y02T10/70,170
A61K2039/505,163
Y02E10/50,157

2025-01-27 01:43:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:43:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:43:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:43:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 19
2025-01-27 01:43:39 - snowflake.connector.connection - INFO - closed
2025-01-27 01:43:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:43:40 - root - INFO - SQL:
-- Corrected Query 12
SELECT cd."symbol", cd."level", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
WHERE cd."titleFull" IS NOT NULL AND cd."titleFull" ILIKE '%artificial intelligence%'
LIMIT 100
Results:
symbol,level,titleFull
Y10S706/00,7.0,Data processing: artificial intelligence
G05D1/0088,8.0,"Control of position, course, altitude or attitude of land, water, air or space vehicles, e.g. using automatic pilots characterized by the autonomous decision making process, e.g. artificial intelligence, predefined behaviours"
H04L41/16,8.0,"Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks using machine learning or artificial intelligence"
E21B2200/22,8.0,"Fuzzy logic, artificial intelligence, neural networks or the like"
G05D2101/10,8.0,Details of software or hardware architectures used for the control of position using artificial intelligence [AI] techniques
G06N5/045,9.0,Explanation of inference; Explainable artificial intelligence [XAI]; Interpretable artificial intelligence
G06F30/27,9.0,"Design optimisation, verification or simulation using machine learning, e.g. artificial intelligence, neural networks, support vector machines [SVM] or training a model"
H04L45/08,9.0,"Learning-based routing, e.g. using neural networks or artificial intelligence"
G05D2101/15,9.0,"Details of software or hardware architectures used for the control of position using artificial intelligence [AI] techniques using machine learning, e.g. neural networks"
E05Y2400/456,10.0,"Control modes for programming, e.g. learning or AI [artificial intelligence]"
G05B2219/33002,10.0,"Artificial intelligence AI, expert, knowledge, rule based system KBS"
H01M8/04992,10.0,"Processes for controlling fuel cells or fuel cell systems characterised by the implementation of mathematical or computational algorithms, e.g. feedback control loops, fuzzy logic, neural networks or artificial intelligence"
Y10S128/924,10.0,Computer assisted medical diagnostics by comparison of patient data to other data using artificial intelligence
B60G2600/1876,10.0,Artificial intelligence
G10K2210/3024,10.0,"Expert systems, e.g. artificial intelligence"
B64G1/247,11.0,"Advanced control concepts for autonomous, robotic spacecraft, e.g. by using artificial intelligence, neural networks or autonomous agents"
A61B1/000096,11.0,Operational features of endoscopes characterised by electronic signal processing of image signals during a use of endoscope using artificial intelligence
G01R31/2846,11.0,"Fault-finding or characterising using hard- or software simulation or using knowledge-based systems, e.g. expert systems, artificial intelligence or interactive algorithms"
G01R31/2848,12.0,"Fault-finding or characterising using hard- or software simulation or using knowledge-based systems, e.g. expert systems, artificial intelligence or interactive algorithms using simulation"

2025-01-27 01:43:40 - root - INFO - itercount: 0
2025-01-27 01:43:40 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
DDL describes table information.
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
Considered tables and columns:

- **Table**: `PATENTS.PATENTS.PUBLICATIONS`
  - `"filing_date"`: Potential usage - the filing date of each patent. Used to extract the filing year for grouping filings by year.
  - `"cpc"`: Potential usage - VARIANT column containing the CPC codes associated with each patent. Need to extract the `"symbol"` from this VARIANT to identify the CPC code.

- **Table**: `PATENTS.PATENTS.CPC_DEFINITION`
  - `"symbol"`: Potential usage - the CPC code symbol. Used to join with the extracted CPC symbols from the `PUBLICATIONS` table.
  - `"level"`: Potential usage - the level of the CPC code. We will use this to filter CPC codes at level 5.
  - `"titleFull"`: Potential usage - the full title of the CPC code. Provides descriptive information about the CPC technology area.

**Conditions that may be used:**

- Filter CPC codes where `"level"` = 5 to focus on the desired CPC group level.
- Extract the `"symbol"` from the `"cpc"` VARIANT column in the `PUBLICATIONS` table.
- Convert `"filing_date"` to extract the year for grouping patent filings by year.

---

Here are the SQL queries:

1. **Select the `"cpc"` column from the `PUBLICATIONS` table to inspect its contents:**

   ```sql
   SELECT t."cpc"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 100;
   ```

2. **Flatten the `"cpc"` VARIANT column to view individual CPC entries:**

   ```sql
   SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   LIMIT 100;
   ```

3. **Extract the `"symbol"` from the CPC entries in the `PUBLICATIONS` table:**

   ```sql
   SELECT f.value:"symbol"::STRING AS "cpc_symbol"
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   LIMIT 100;
   ```

4. **Retrieve the `"filing_date"` and extracted `"cpc_symbol"` from `PUBLICATIONS`:**

   ```sql
   SELECT t."filing_date", f.value:"symbol"::STRING AS "cpc_symbol"
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   LIMIT 100;
   ```

5. **Select the `"symbol"`, `"level"`, and `"titleFull"` from `CPC_DEFINITION` to explore CPC codes:**

   ```sql
   SELECT cd."symbol", cd."level", cd."titleFull"
   FROM PATENTS.PATENTS.CPC_DEFINITION cd
   LIMIT 100;
   ```

6. **Filter and retrieve CPC codes at level 5 from `CPC_DEFINITION`:**

   ```sql
   SELECT cd."symbol", cd."titleFull"
   FROM PATENTS.PATENTS.CPC_DEFINITION cd
   WHERE cd."level" = 5
   LIMIT 100;
   ```

7. **Extract the filing year from the `"filing_date"` in `PUBLICATIONS`:**

   ```sql
   SELECT LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 100;
   ```

8. **Count the number of patents per `"cpc_symbol"`:**

   ```sql
   SELECT f.value:"symbol"::STRING AS "cpc_symbol", COUNT(*) AS "patent_count"
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   GROUP BY "cpc_symbol"
   ORDER BY "patent_count" DESC
   LIMIT 100;
   ```

9. **Count the number of patents per `"cpc_symbol"` per filing year:**

   ```sql
   SELECT f.value:"symbol"::STRING AS "cpc_symbol",
          LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year",
          COUNT(*) AS "patent_count"
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   GROUP BY "cpc_symbol", "filing_year"
   ORDER BY "patent_count" DESC
   LIMIT 100;
   ```

10. **Join `PUBLICATIONS` and `CPC_DEFINITION` to get patents at level 5 per year:**

    ```sql
    SELECT f.value:"symbol"::STRING AS "cpc_symbol",
           LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year",
           COUNT(*) AS "patent_count"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."cpc") f ON TRUE
    JOIN PATENTS.PATENTS.CPC_DEFINITION cd ON cd."symbol" = f.value:"symbol"::STRING
    WHERE cd."level" = 5
    GROUP BY "cpc_symbol", "filing_year"
    ORDER BY "patent_count" DESC
    LIMIT 100;
    ```

11. **List distinct filing years from the `PUBLICATIONS` table:**

    ```sql
    SELECT DISTINCT LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    ORDER BY "filing_year"
    LIMIT 100;
    ```

12. **Retrieve the full title for a specific `"cpc_symbol"` from `CPC_DEFINITION`:**

    ```sql
    SELECT cd."symbol", cd."titleFull"
    FROM PATENTS.PATENTS.CPC_DEFINITION cd
    WHERE cd."symbol" = 'H04W76/00'
    LIMIT 100;
    ```

13. **Count the total number of patents filed each year:**

    ```sql
    SELECT LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year", COUNT(*) AS "total_patents"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    GROUP BY "filing_year"
    ORDER BY "filing_year"
    LIMIT 100;
    ```

14. **Retrieve the top 10 CPC symbols with the most patents in a specific year (e.g., 2020):**

    ```sql
    SELECT f.value:"symbol"::STRING AS "cpc_symbol", COUNT(*) AS "patent_count"
    FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
    WHERE LEFT(TO_VARCHAR(t."filing_date"), 4) = '2020'
    GROUP BY "cpc_symbol"
    ORDER BY "patent_count" DESC
    LIMIT 10;
    ```

15. **List all CPC symbols and their levels for a specific technology area:**

    ```sql
    SELECT cd."symbol", cd."level", cd."titleFull"
    FROM PATENTS.PATENTS.CPC_DEFINITION cd
    WHERE cd."titleFull" ILIKE '%artificial intelligence%'
    LIMIT 100;
    ```

These queries help to explore the relevant data and understand how to extract and utilize the necessary information from the tables to address the task.Query:
SELECT t."cpc"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 100;
Answer:
Too long, hard cut:
cpc
[]
[]
[]
"[
  {
    ""code"": ""H02M5/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""A01N47/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D521/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""Y02A40/81"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""Y02E30/30"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""Y10T83/465"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B26F1/42"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""E21B27/02"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E21B27/02"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""B22D11/086"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""C07D471/16"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D471/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""G01N33/48728"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""C03C4/12"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C03C4/12"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""C11B5/0064"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/35"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C11B5/0035"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M135/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C09K15/30"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D263/56"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/44"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D235/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/3447"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/48"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/46"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D277/64"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/47"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/224"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/102"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/106"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/104"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2219/10"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/30"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/221"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/226"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/225"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10M2215/22"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""C10L1/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
"[
  {
    ""code"": ""E02D5/808"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/385"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/26"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/28"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/54"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
[]
[]
"[
  {
    ""code"": ""C07D213/32"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/51"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/51"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/22"",
    ""first"": true,
    ""inventive"": true,
    ""t
Query:
SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t, LATERAL FLATTEN(input => t."cpc") f
   LIMIT 100;
Answer:
Too long, hard cut:
VALUE
"{
  ""code"": ""G01N2030/202"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T137/86815"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N2030/202"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/6047"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F16K11/074"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/20"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K11/074"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B01D15/1821"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/20"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B01D15/1821"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/6047"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N2030/201"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N2030/201"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T137/86815"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/461"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G01N30/461"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""A61K31/00"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""A61K31/00"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G02B7/16"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G02B7/16"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G02B21/248"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y10T74/19749"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T74/19749"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G02B21/248"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06F13/4077"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H04L5/16"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06F13/4077"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H04L5/16"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B7/004"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B7/00375"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B20/10"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B19/04"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B7/00375"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G11B19/04"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/66"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V10/143"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/66"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V10/143"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/80"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06V20/80"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/095"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/091"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C09D11/03"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C12/00"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/091"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C12/00"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C03C3/095"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C09D11/03"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01L28/91"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01L28/91"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/033"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/00"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/033"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/318"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H10B12/318"",
  
Query:
SELECT
    f.value:"code"::STRING AS "cpc_symbol"
FROM
    PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
LIMIT 100;
Answer:
cpc_symbol
G06N10/40
G06N10/70
G06F3/0679
G06N3/08
G06F3/0604
G06F11/1004
H10N99/05
G06N10/20
G06N10/80
G06F3/0659
G06N10/00
H10N99/05
G06N10/60
B05B15/625
B05B1/14
B05B1/267
B05B1/34
B05B15/65
B05B1/046
A62C31/05
A62C31/03
B05B15/65
B05B1/267
B05B15/625
A62C31/05
B05B1/14
B05B1/34
B05B1/046
Y02E60/10
H02J7/00712
H02J7/00712
H02J7/02
H02J7/005
H02J7/0013
H02J7/0047
G01R31/389
H02J7/0013
F01D5/20
F05D2260/607
B33Y10/00
B33Y80/00
F05D2230/31
F05D2230/234
F05D2230/22
F05D2230/211
F01D5/147
B23P15/04
B23P6/007
F05D2230/12
F05D2230/11
F05D2250/621
F05D2250/62
F05D2250/311
F05D2260/202
B23K26/342
B23K2101/001
B23K26/0006
B22F5/04
B22F10/25
B22F7/062
Y02P10/25
Y02T50/60
F01D5/20
B33Y80/00
B23K26/342
F05D2230/31
F05D2230/30
F05D2260/607
F05D2240/307
F01D5/186
F01D5/187
F01D25/12
F01D5/18
B22F10/28
Y10T29/49321
B23P15/006
H04L5/006
H04L5/0058
H04L5/0055
H04L5/0048
H04L5/001
H04L5/0057
H04L5/0023
H04L5/005
H04W92/18
H04B7/088
H04B7/0695
H04B7/0626
H04W92/18
H04B7/0626
H04W72/25
H04W16/28
C07K2319/00
C07K14/70578
C07K2319/33
C07K14/70517
A61P35/00
C07K2319/02
C12N9/90
C07K14/7051
Query:
-- Corrected Query 1
SELECT t."filing_date", f.value:"code"::STRING AS "cpc_symbol"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
LIMIT 100
Answer:
filing_date,cpc_symbol
20210419,Y02P70/10
20210421,Y02E10/50
20210423,Y02T10/7072
20210423,Y02T90/12
20210423,Y02T10/70
20210429,E04B2/967
20210430,Y02E20/16
20210430,F25J2250/50
20210430,F25J2240/90
20210430,F25J2235/50
20210430,F25J3/04836
20210430,F25J3/0483
20210430,F25J3/04593
20210430,F25J3/04575
20210430,F25J3/04545
20210508,Y02P60/21
20210507,Y02W30/40
20210507,Y02E50/30
20210514,Y02E60/10
20210519,Y02E60/10
20210520,Y02E60/10
20210526,Y02A20/108
20210526,Y02B20/40
20210526,Y02E10/20
20210526,F16K15/026
20210526,F16K2200/303
20210526,F16K1/54
20210526,F16K15/063
20210526,F16K15/025
20210526,F16K1/38
20210526,F16K1/46
20210526,F16K27/029
20210526,F16K17/04
20210531,Y02P70/50
20210531,Y02E60/10
20210608,A47J43/24
20210608,B07B1/46
20210608,A23N12/02
20210608,B01D35/02
20210618,Y02W30/40
20210618,Y02E60/10
20210618,Y02P70/50
20210130,G06F16/3322
20210130,G06F40/247
20210130,G06Q30/0643
20210130,G06Q30/0625
20210130,G06F16/9035
20210130,G06F40/247
20210130,G06F16/90344
20210130,G06Q30/0643
20210130,G06Q30/0625
20210130,G06F40/247
20210130,G06Q30/0625
20210130,G06F16/9035
20210130,G06Q30/0643
20210130,G06F16/90344
20210202,A61M25/005
20210202,A61B1/2676
20210202,A61M25/0012
20210202,A61B90/10
20210202,A61M2025/0166
20210202,A61B5/062
20210202,A61B5/061
20210202,A61B5/062
20210202,A61B5/061
20210202,A61B2034/2051
20210202,A61B5/06
20210202,A61B2034/2051
20210202,A61M25/005
20210202,A61M2025/0166
20210202,A61B90/10
20210202,A61B1/2676
20210202,A61B5/06
20210202,A61M25/005
20210202,A61B5/062
20210202,A61B2034/2051
20210202,A61B5/061
20210202,A61B90/10
20210202,A61M25/0012
20210212,A63F13/352
20210212,A63F13/355
20210212,A63F2300/538
20210212,A63F2300/5593
20210212,A63F13/355
20210212,A63F2300/534
20210212,A63F2300/538
20210212,A63F13/355
20210212,A63F2300/8082
20210212,A63F13/355
20210212,A63F13/352
20210212,A63F2300/407
20210212,A63F2300/538
20210212,A63F13/335
20210212,A63F13/355
20210212,A63F13/352
20210212,A63F2300/538
20210222,H04W36/14
20210222,H04W36/0011
20210222,H04W36/302
20210222,H04W76/27
Query:
-- Corrected Query 2 (No change needed)
SELECT cd."symbol", cd."level", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
LIMIT 100
Answer:
Too long, hard cut:
symbol,level,titleFull
B,2.0,PERFORMING OPERATIONS; TRANSPORTING
H,2.0,ELECTRICITY
Y,2.0,GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
D,2.0,TEXTILES; PAPER
F,2.0,MECHANICAL ENGINEERING; LIGHTING; HEATING; WEAPONS; BLASTING
E,2.0,FIXED CONSTRUCTIONS
C,2.0,CHEMISTRY; METALLURGY
G,2.0,PHYSICS
A,2.0,HUMAN NECESSITIES
A45,4.0,HAND OR TRAVELLING ARTICLES
A24,4.0,TOBACCO; CIGARS; CIGARETTES; SIMULATED SMOKING DEVICES; SMOKERS' REQUISITES
A61,4.0,MEDICAL OR VETERINARY SCIENCE; HYGIENE
A63,4.0,SPORTS; GAMES; AMUSEMENTS
A22,4.0,BUTCHERING; MEAT TREATMENT; PROCESSING POULTRY OR FISH
A42,4.0,HEADWEAR
A99,4.0,SUBJECT MATTER NOT OTHERWISE PROVIDED FOR IN THIS SECTION
A43,4.0,FOOTWEAR
A01,4.0,AGRICULTURE; FORESTRY; ANIMAL HUSBANDRY; HUNTING; TRAPPING; FISHING
A62,4.0,LIFE-SAVING; FIRE-FIGHTING
A23,4.0,"FOODS OR FOODSTUFFS; TREATMENT THEREOF, NOT COVERED BY OTHER CLASSES"
A47,4.0,FURNITURE; DOMESTIC ARTICLES OR APPLIANCES; COFFEE MILLS; SPICE MILLS; SUCTION CLEANERS IN GENERAL
A46,4.0,BRUSHWARE
A44,4.0,HABERDASHERY; JEWELLERY
A21,4.0,BAKING; EDIBLE DOUGHS
A41,4.0,WEARING APPAREL
B27,4.0,WORKING OR PRESERVING WOOD OR SIMILAR MATERIAL; NAILING OR STAPLING MACHINES IN GENERAL
B68,4.0,SADDLERY; UPHOLSTERY
B04,4.0,CENTRIFUGAL APPARATUS OR MACHINES FOR CARRYING-OUT PHYSICAL OR CHEMICAL PROCESSES
B23,4.0,MACHINE TOOLS; METAL-WORKING NOT OTHERWISE PROVIDED FOR
B30,4.0,PRESSES
B21,4.0,MECHANICAL METAL-WORKING WITHOUT ESSENTIALLY REMOVING MATERIAL; PUNCHING METAL
B25,4.0,HAND TOOLS; PORTABLE POWER-DRIVEN TOOLS; MANIPULATORS
B99,4.0,SUBJECT MATTER NOT OTHERWISE PROVIDED FOR IN THIS SECTION
B29,4.0,WORKING OF PLASTICS; WORKING OF SUBSTANCES IN A PLASTIC STATE IN GENERAL
B31,4.0,"MAKING ARTICLES OF PAPER, CARDBOARD OR MATERIAL WORKED IN A MANNER ANALOGOUS TO PAPER; WORKING PAPER, CARDBOARD OR MATERIAL WORKED IN A MANNER ANALOGOUS TO PAPER"
B26,4.0,HAND CUTTING TOOLS; CUTTING; SEVERING
B66,4.0,HOISTING; LIFTING; HAULING
B02,4.0,"CRUSHING, PULVERISING, OR DISINTEGRATING; PREPARATORY TREATMENT OF GRAIN FOR MILLING"
B65,4.0,CONVEYING; PACKING; STORING; HANDLING THIN OR FILAMENTARY MATERIAL
B61,4.0,RAILWAYS
B24,4.0,GRINDING; POLISHING
B06,4.0,GENERATING OR TRANSMITTING MECHANICAL VIBRATIONS IN GENERAL
B43,4.0,WRITING OR DRAWING IMPLEMENTS; BUREAU ACCESSORIES
B62,4.0,LAND VEHICLES FOR TRAVELLING OTHERWISE THAN ON RAILS
B64,4.0,AIRCRAFT; AVIATION; COSMONAUTICS
B22,4.0,CASTING; POWDER METALLURGY
B28,4.0,"WORKING CEMENT, CLAY, OR STONE"
B09,4.0,DISPOSAL OF SOLID WASTE; RECLAMATION OF CONTAMINATED SOIL
B01,4.0,PHYSICAL OR CHEMICAL PROCESSES OR APPARATUS IN GENERAL
B63,4.0,SHIPS OR OTHER WATERBORNE VESSELS; RELATED EQUIPMENT
B60,4.0,VEHICLES IN GENERAL
B44,4.0,DECORATIVE ARTS
B07,4.0,SEPARATING SOLIDS FROM SOLIDS; SORTING
B08,4.0,CLEANING
B82,4.0,NANOTECHNOLOGY
B42,4.0,BOOKBINDING; ALBUMS; FILES; SPECIAL PRINTED MATTER
B32,4.0,LAYERED PRODUCTS
B81,4.0,MICROSTRUCTURAL TECHNOLOGY
B05,4.0,"SPRAYING OR ATOMISING IN GENERAL; APPLYING FLUENT MATERIALS TO SURFACES, IN GENERAL"
B41,4.0,PRINTING; LINING MACHINES; TYPEWRITERS; STAMPS
B03,4.0,SEPARATION OF SOLID MATERIALS USING LIQUIDS OR USING PNEUMATIC TABLES OR JIGS; MAGNETIC OR ELECTROSTATIC SEPARATION OF SOLID MATERIALS FROM SOLID MATERIALS OR FLUIDS; SEPARATION BY HIGH-VOLTAGE ELECTRIC FIELDS
B67,4.0,"OPENING, CLOSING OR CLEANING BOTTLES, JARS OR SIMILAR CONTAINERS; LIQUID HANDLING"
B33,4.0,ADDITIVE MANUFACTURING TECHNOLOGY
C22,4.0,METALLURGY; FERROUS OR NON-FERROUS ALLOYS; TREATMENT OF ALLOYS OR NON-FERROUS METALS
C23,4.0,"COATING METALLIC MATERIAL; COATING MATERIAL WITH METALLIC MATERIAL; CHEMICAL SURFACE TREATMENT; DIFFUSION TREATMENT OF METALLIC MATERIAL; COATING BY VACUUM EVAPORATION, BY SPUTTERING, BY ION IMPLANTATION OR BY CHEMICAL VAPOUR DEPOSITION, IN GENERAL; INHIBITING CORROSION OF METALLIC MATERIAL OR INCRUSTATION IN GENERAL"
C06,4.0,EXPLOSIVES; MATCHES
C02,4.0,"TREATMENT OF WATER, WASTE WATER, SEWAGE, OR SLUDGE"
C07,4.0,ORGANIC CHEMISTRY
C25,4.0,ELECTROLYTIC OR ELECTROPHORETIC PROCESSES; APPARATUS THEREFOR
C30,4.0,CRYSTAL GROWTH
C12,4.0,BIOCHEMISTRY; BEER; SPIRITS; WINE; VINEGAR; MICROBIOLOGY; ENZYMOLOGY; MUTATION OR GENETIC ENGINEERING
C99,4.0,SUBJECT MATTER NOT OTHERWISE PROVIDED FOR IN THIS SECTION
C05,4.0,FERTILISERS; MANUFACTURE THEREOF
C40,4.0,COMBINATORIAL TECHNOLOGY
C11,4.0,"ANIMAL OR VEGETABLE OILS, FATS, FATTY SUBSTANCES OR WAXES; FATTY ACIDS THEREFROM; DETERGENTS; CANDLES"
C08,4.0,ORGANIC MACROMOLECULAR COMPOUNDS; THEIR PREPARATION OR CHEMICAL WORKING-UP; COMPOSITIONS BASED THEREON
C10,4.0,"PETROLEUM, GAS OR COKE INDUSTRIES; TECHNICAL GASES CONTAINING CARBON MONOXIDE; FUELS; LUBRICANTS; PEAT"
C21,4.0,METALLURGY OF IRON
C04,4.0,CEMENTS; CONCRETE; ARTIFICIAL STONE; CERAMICS; REFRACTORIES
C09,4.0,DYES; PAINTS; POLISHES; NATURAL RESINS; ADHESIVES; COMPOSITIONS NOT OTHERWISE PROVIDED FOR; APPLIC
Query:
-- Corrected Query 3 (No change needed)
SELECT cd."symbol", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
WHERE cd."level" = 5
LIMIT 100
Answer:
Too long, hard cut:
symbol,titleFull
A01H,NEW PLANTS OR NON-TRANSGENIC PROCESSES FOR OBTAINING THEM; PLANT REPRODUCTION BY TISSUE CULTURE TECHNIQUES
A01F,PROCESSING OF HARVESTED PRODUCE; HAY OR STRAW PRESSES; DEVICES FOR STORING AGRICULTURAL OR HORTICULTURAL PRODUCE
A01C,PLANTING; SOWING; FERTILISING
A01G,"HORTICULTURE; CULTIVATION OF VEGETABLES, FLOWERS, RICE, FRUIT, VINES, HOPS OR SEAWEED; FORESTRY; WATERING"
A01N,"PRESERVATION OF BODIES OF HUMANS OR ANIMALS OR PLANTS OR PARTS THEREOF; BIOCIDES, e.g. AS DISINFECTANTS, AS PESTICIDES OR AS HERBICIDES; PEST REPELLANTS OR ATTRACTANTS; PLANT GROWTH REGULATORS"
A01P,"BIOCIDAL, PEST REPELLANT, PEST ATTRACTANT OR PLANT GROWTH REGULATORY ACTIVITY OF CHEMICAL COMPOUNDS OR PREPARATIONS"
A01D,HARVESTING; MOWING
A01L,SHOEING OF ANIMALS
A01K,"ANIMAL HUSBANDRY; AVICULTURE; APICULTURE; PISCICULTURE; FISHING; REARING OR BREEDING ANIMALS, NOT OTHERWISE PROVIDED FOR; NEW BREEDS OF ANIMALS"
A01M,"CATCHING, TRAPPING OR SCARING OF ANIMALS; APPARATUS FOR THE DESTRUCTION OF NOXIOUS ANIMALS OR NOXIOUS PLANTS"
A01J,MANUFACTURE OF DAIRY PRODUCTS
A01B,"SOIL WORKING IN AGRICULTURE OR FORESTRY; PARTS, DETAILS, OR ACCESSORIES OF AGRICULTURAL MACHINES OR IMPLEMENTS, IN GENERAL"
A21D,"TREATMENT, e.g. PRESERVATION, OF FLOUR OR DOUGH, e.g. BY ADDITION OF MATERIALS; BAKING; BAKERY PRODUCTS; PRESERVATION THEREOF"
A21C,MACHINES OR EQUIPMENT FOR MAKING OR PROCESSING DOUGHS; HANDLING BAKED ARTICLES MADE FROM DOUGH
A21B,BAKERS' OVENS; MACHINES OR EQUIPMENT FOR BAKING
A22B,SLAUGHTERING
A22C,"PROCESSING MEAT, POULTRY, OR FISH"
A23P,"SHAPING OR WORKING OF FOODSTUFFS, NOT FULLY COVERED BY A SINGLE OTHER SUBCLASS"
A23C,"DAIRY PRODUCTS, e.g. MILK, BUTTER OR CHEESE; MILK OR CHEESE SUBSTITUTES; MAKING THEREOF"
A23J,PROTEIN COMPOSITIONS FOR FOODSTUFFS; WORKING-UP PROTEINS FOR FOODSTUFFS; PHOSPHATIDE COMPOSITIONS FOR FOODSTUFFS
A23K,FODDER
A23L,"FOODS, FOODSTUFFS, OR NON-ALCOHOLIC BEVERAGES, NOT COVERED BY SUBCLASSES A21D OR A23B-A23J; THEIR PREPARATION OR TREATMENT, e.g. COOKING, MODIFICATION OF NUTRITIVE QUALITIES, PHYSICAL TREATMENT; PRESERVATION OF FOODS OR FOODSTUFFS, IN GENERAL"
A23N,"MACHINES OR APPARATUS FOR TREATING HARVESTED FRUIT, VEGETABLES OR FLOWER BULBS IN BULK, NOT OTHERWISE PROVIDED FOR; PEELING VEGETABLES OR FRUIT IN BULK; APPARATUS FOR PREPARING ANIMAL FEEDING- STUFFS"
A23V,"INDEXING SCHEME RELATING TO FOODS, FOODSTUFFS OR NON-ALCOHOLIC BEVERAGES AND LACTIC OR PROPIONIC ACID BACTERIA USED IN FOODSTUFFS OR FOOD PREPARATION"
A23F,"COFFEE; TEA; THEIR SUBSTITUTES; MANUFACTURE, PREPARATION, OR INFUSION THEREOF"
A23G,"COCOA; COCOA PRODUCTS, e.g. CHOCOLATE; SUBSTITUTES FOR COCOA OR COCOA PRODUCTS; CONFECTIONERY; CHEWING GUM; ICE-CREAM; PREPARATION THEREOF"
A23B,"PRESERVING, e.g. BY CANNING, MEAT, FISH, EGGS, FRUIT, VEGETABLES, EDIBLE SEEDS; CHEMICAL RIPENING OF FRUIT OR VEGETABLES; THE PRESERVED, RIPENED, OR CANNED PRODUCTS"
A23D,"EDIBLE OILS OR FATS, e.g. MARGARINES, SHORTENINGS, COOKING OILS"
A24C,MACHINES FOR MAKING CIGARS OR CIGARETTES
A24D,CIGARS; CIGARETTES; TOBACCO SMOKE FILTERS; MOUTHPIECES FOR CIGARS OR CIGARETTES; MANUFACTURE OF TOBACCO SMOKE FILTERS OR MOUTHPIECES
A24F,SMOKERS' REQUISITES; MATCH BOXES; SIMULATED SMOKING DEVICES
A24B,MANUFACTURE OR PREPARATION OF TOBACCO FOR SMOKING OR CHEWING; TOBACCO; SNUFF
A41F,GARMENT FASTENINGS; SUSPENDERS
A41G,ARTIFICIAL FLOWERS; WIGS; MASKS; FEATHERS
A41B,SHIRTS; UNDERWEAR; BABY LINEN; HANDKERCHIEFS
A41D,OUTERWEAR; PROTECTIVE GARMENTS; ACCESSORIES
A41C,CORSETS; BRASSIERES
A41H,"APPLIANCES OR METHODS FOR MAKING CLOTHES, e.g. FOR DRESS-MAKING OR FOR TAILORING, NOT OTHERWISE PROVIDED FOR"
A42B,HATS; HEAD COVERINGS
A42C,"MANUFACTURING OR TRIMMING HEAD COVERINGS, e.g. HATS"
A43B,CHARACTERISTIC FEATURES OF FOOTWEAR; PARTS OF FOOTWEAR
A43C,FASTENINGS OR ATTACHMENTS OF FOOTWEAR; LACES IN GENERAL
A43D,"MACHINES, TOOLS, EQUIPMENT OR METHODS FOR MANUFACTURING OR REPAIRING FOOTWEAR"
A44D,"INDEXING SCHEME RELATING TO BUTTONS, PINS, BUCKLES OR SLIDE FASTENERS, AND TO JEWELLERY, BRACELETS OR OTHER PERSONAL ADORNMENTS"
A44B,"BUTTONS, PINS, BUCKLES, SLIDE FASTENERS, OR THE LIKE"
A44C,"PERSONAL ADORNMENTS, e.g. JEWELLERY; COINS"
A45F,TRAVELLING OR CAMP EQUIPMENT: SACKS OR PACKS CARRIED ON THE BODY
A45C,PURSES; LUGGAGE; HAND CARRIED BAGS
A45D,"HAIRDRESSING OR SHAVING EQUIPMENT; EQUIPMENT FOR COSMETICS OR COSMETIC TREATMENTS, e.g. FOR MANICURING OR PEDICURING"
A45B,WALKING STICKS; UMBRELLAS; LADIES' OR LIKE FANS
A46D,MANUFACTURE OF BRUSHES
A46B,BRUSHES
A47L,DOMESTIC WASHING OR CLEANING; SUCTION CLEANERS IN GENERAL
A47F,"SPECIAL FURNITURE, FITTINGS, OR ACCESSORIES FOR SHOPS, STOREHOUSES, BARS, RESTAURANTS OR THE LIKE; PAYING COUNTERS"
A47D,FURNITURE SPECIALLY ADAPTED FOR CHILDREN
A47G,HOUSEHOLD OR TABLE EQUIPMENT
A47K,SANITARY EQUIPMENT NOT OTHERWISE PROVIDED FOR; TOILET ACCESSORIES
A47H,FURNISHINGS FOR WINDOWS OR DOORS
A47B,TABLES; DESKS; OFFICE FURNITURE; CABINETS; DRAWERS; GENERAL DETAILS OF FURNITURE
A47C,CHAIRS; SOFAS; BEDS
A47J,KITCHEN EQUIPMENT; COFFEE MILLS; SPICE MILLS; APPA
Query:
-- Corrected Query 4 (No change needed)
SELECT LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year"
FROM PATENTS.PATENTS.PUBLICATIONS t
LIMIT 100
Answer:
filing_year
1997
1999
0
1983
1990
1990
1986
0
1948
1980
1982
1982
1970
1970
1970
0
1890
1969
1966
1894
1894
1895
0
1962
1965
1966
1966
1966
1966
1966
1960
1958
1929
1940
1987
1984
1992
1978
1986
1991
1986
1993
2015
1983
1986
1973
1978
1982
1988
1990
0
1979
0
0
1971
1997
1988
1982
1975
1983
1981
1978
1982
1982
1980
1990
1986
1985
1973
1985
1975
1977
1975
1979
1978
1972
1978
1973
1973
1974
1974
1975
1975
1976
1976
1976
1976
1977
1977
1977
1977
1978
1978
1978
1978
1978
1979
1979
1980
1952
Query:
-- Corrected Query 5
SELECT f.value:"code"::STRING AS "cpc_symbol", COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code" IS NOT NULL
GROUP BY "cpc_symbol"
ORDER BY "patent_count" DESC
LIMIT 100
Answer:
cpc_symbol,patent_count
Y02E60/10,5576
A61P35/00,5514
A61P43/00,3803
A61K45/06,3065
Y02P70/50,2621
A61P29/00,2555
A61K38/00,2489
A61P25/00,2136
A61K2039/505,1915
Y02T10/12,1834
Y02E10/50,1825
A23V2002/00,1817
Y02T10/70,1777
C07D471/04,1747
H01L2924/0002,1714
A61P25/28,1694
Y02E60/50,1668
Y02A50/30,1659
H01M10/0525,1650
Y02D30/70,1618
A61P9/00,1605
A61P9/10,1499
C07D487/04,1485
A61P31/04,1483
G06N3/08,1467
A61P3/10,1463
G06N20/00,1397
C07D401/12,1347
H01L2224/48091,1339
C07D401/14,1327
A61P11/00,1312
A61K9/0019,1294
A61P17/00,1294
H04N19/176,1189
A61P19/02,1179
A61Q19/00,1172
B32B27/08,1150
C07K2317/92,1147
H01M10/052,1138
B82Y30/00,1132
Y02D10/00,1128
F21Y2115/10,1115
Y02P10/20,1096
C07K2317/76,1094
Y02P70/10,1088
H04W72/23,1063
C07K2317/24,1061
Y02T10/7072,1037
A61P35/02,1035
A61P31/12,1019
A61P1/04,1018
Y02T10/40,1000
A61P27/02,1000
G06N3/045,983
C07D401/04,980
A61P37/00,974
Y02E10/72,972
A61P1/00,967
B32B7/12,962
Y02E30/30,953
C07D413/14,940
B32B27/32,934
C08J5/18,932
H04L5/0053,926
C07D405/12,901
A61P31/00,898
A61P1/16,894
A61P37/06,893
H04W4/80,885
H04L5/0048,882
A61P37/02,881
A61P13/12,877
C07K2319/00,857
C07D405/14,849
H01M2220/20,848
A61K31/519,825
C09K11/06,819
H04L67/12,818
H01L2924/00014,808
C22C38/02,804
H01L2924/181,803
A61P11/06,802
B82Y40/00,796
G06Q30/02,785
C07K2317/565,784
A61P3/00,779
C07D417/12,777
H04W84/12,773
B33Y10/00,767
C07D403/12,761
C22C38/04,757
G06F3/0482,757
A61K39/00,755
Y02P90/02,750
A61P3/04,749
A61P9/12,744
G06Q10/10,743
C07D417/14,742
Y02W10/10,740
A61P17/06,736
Query:
-- Corrected Query 6
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    LEFT(TO_VARCHAR(t."filing_date"), 4) AS "filing_year",
    COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code" IS NOT NULL AND t."filing_date" IS NOT NULL
GROUP BY "cpc_symbol", "filing_year"
ORDER BY "patent_count" DESC
LIMIT 100
Answer:
cpc_symbol,filing_year,patent_count
Y02E60/10,2021,501
Y02E60/10,2022,471
Y02E60/10,2020,444
Y02E60/10,2017,437
A61P35/00,2019,432
A61P35/00,2021,428
A61P35/00,2020,425
A61P35/00,2017,417
Y02E60/10,2018,398
A61P35/00,2018,389
Y02E60/10,2019,354
Y02P70/10,2022,347
A61P35/00,2016,341
G06N3/08,2021,303
G06N20/00,2020,292
G06N3/08,2020,289
Y02E60/10,2016,288
Y02E60/10,2023,283
A61P35/00,2022,272
A61K45/06,2018,269
Y02P70/10,2023,262
A61K45/06,2020,261
G06N3/08,2019,256
G06N20/00,2021,249
Y02E60/10,2014,242
G06N3/045,2021,242
G06N3/08,2022,241
A61K45/06,2017,234
A61P35/00,2015,230
A61K45/06,2019,228
Y02E60/10,2015,225
G06N20/00,2019,222
G06N3/045,2020,215
Y02E60/10,2013,213
A23V2002/00,2017,202
Y02E60/10,2012,201
A61K45/06,2016,201
A23V2002/00,2018,201
A23V2002/00,2016,201
A61K45/06,2021,190
A61P43/00,2004,189
A61K45/06,2015,189
A61P43/00,2007,188
A61K2039/505,2017,187
H04N19/176,2020,185
A61P43/00,2008,181
H01M10/0525,2017,180
Y02E10/50,2022,180
Y02P70/50,2017,177
Y02A50/30,2022,174
A61P43/00,2006,174
A61P43/00,2015,173
A61K2039/505,2016,170
Y02T10/70,2020,170
A61P43/00,2014,170
G06N20/00,2018,169
A61P43/00,2009,164
A61K2039/505,2020,163
Y02E60/10,2011,162
Y02P70/50,2018,160
A61P43/00,2010,159
G06N20/00,2022,159
A61P43/00,2003,159
A61P43/00,2005,158
A61K2039/505,2019,158
Y02E10/50,2020,157
Y02T10/70,2018,157
A61P35/00,2009,155
A61P35/00,2014,155
A61P35/00,2008,154
Y02E10/50,2021,153
H01M10/0525,2021,153
A61P43/00,2017,152
A61P35/00,2006,151
A61P35/00,2011,150
G06N3/045,2019,150
Y02T10/70,2017,149
Y02P70/50,2019,148
G06N3/08,2018,146
A61P35/00,2007,146
Y02D10/00,2023,146
A61K45/06,2014,145
Y02D30/70,2022,145
C07K2317/92,2017,145
Y02P70/50,2022,144
A61P35/00,2004,143
A61P43/00,2011,140
A61P43/00,2013,140
H01M10/0525,2018,140
Y02P70/50,2015,139
Y02T10/70,2019,138
C07D471/04,2018,138
Y02E60/10,2010,138
Y02P70/50,2016,138
A61K45/06,2013,138
A61P35/00,2010,138
Y02T10/70,2021,138
Y02E10/50,2018,138
A61P35/00,2013,138
H04N19/70,2020,138
Query:
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    CAST(LEFT(TO_VARCHAR(t."publication_date"), 4) AS INTEGER) AS "publication_year",
    COUNT(*) AS "patent_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
    AND t."publication_date" IS NOT NULL
    AND t."publication_date" > 0
GROUP BY
    "cpc_symbol",
    "publication_year"
ORDER BY
    "patent_count" DESC
LIMIT 100;
Answer:
cpc_symbol,publication_year,patent_count
Y02E60/10,2023,622
A61P35/00,2022,585
Y02E60/10,2021,569
Y02E60/10,2022,561
A61P35/00,2021,558
Y02P70/10,2023,474
A61P35/00,2020,449
Y02E60/10,2020,432
A61P35/00,2023,412
Y02E60/10,2018,380
A61K45/06,2021,374
G06N3/08,2022,369
A61P35/00,2018,353
G06N3/08,2021,337
A61P35/00,2019,332
G06N20/00,2021,325
Y02E60/10,2017,302
Y02E60/10,2019,302
A61P35/00,2024,299
Y02E60/10,2024,283
G06N3/08,2023,276
A61K45/06,2020,273
Y02A50/30,2023,271
Y02D10/00,2023,271
A61K45/06,2022,268
G06N20/00,2022,263
A61P35/00,2017,261
G06N3/045,2021,254
G06N3/045,2022,250
G06N20/00,2023,241
Y02E60/10,2014,236
A61K2039/505,2022,230
Y02T10/70,2021,229
Y02E60/10,2016,226
Y02E60/10,2015,224
A61K45/06,2018,217
Y02E10/50,2023,216
A61K2039/505,2021,213
G06N3/08,2020,204
A61K45/06,2023,201
A61K2039/505,2020,200
H01M10/0525,2021,200
Y02D30/70,2023,200
Y02P70/50,2022,199
G06N20/00,2020,198
A61K45/06,2019,197
A61P35/00,2016,195
A23V2002/00,2018,193
A61P43/00,2016,192
Y02P70/10,2022,189
A61K45/06,2016,189
A61P43/00,2009,188
Y02E10/50,2022,184
Y02E10/50,2021,183
A61P43/00,2015,181
A23V2002/00,2017,181
A61K45/06,2017,179
Y02P70/50,2020,176
A61P43/00,2008,170
H01M10/0525,2022,169
A61P43/00,2017,168
A61P43/00,2018,167
Y02P70/50,2018,166
A61P43/00,2005,165
A61P35/00,2015,164
A61P43/00,2011,160
Y02P70/50,2021,159
A61P43/00,2010,157
Y02T10/70,2018,156
Y02P70/50,2017,156
G06V10/82,2023,155
A61K38/00,2021,155
A23V2002/00,2016,154
Y02P70/50,2019,153
A61P29/00,2022,153
Y02T10/70,2020,153
A61P43/00,2007,152
A61P43/00,2021,152
Y02E10/50,2018,152
Y02D30/70,2022,152
A61P29/00,2020,151
G06N3/045,2023,150
Y02E60/10,2013,150
A61P35/00,2011,150
A23V2002/00,2021,150
Y02P70/50,2023,149
A61P43/00,2013,147
H04W72/23,2021,147
A61K45/06,2015,147
A61K2039/505,2018,146
Y02T10/7072,2021,146
A61K2039/505,2019,145
A61P29/00,2021,145
A61P43/00,2006,143
C07K2317/92,2022,143
H01M10/0525,2020,143
A23V2002/00,2019,142
C07D471/04,2020,142
C07K2317/76,2021,142
A61P35/00,2010,141
Query:
-- Corrected Query 8
SELECT DISTINCT CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) AS "filing_year"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."filing_date" IS NOT NULL AND t."filing_date" > 0
ORDER BY "filing_year"
LIMIT 100
Answer:
filing_year
1846
1853
1860
1867
1877
1880
1881
1882
1883
1885
1886
1887
1888
1889
1890
1891
1892
1893
1894
1895
1896
1897
1898
1899
1900
1901
1902
1903
1904
1905
1906
1907
1908
1909
1910
1911
1912
1913
1914
1915
1916
1917
1918
1919
1920
1921
1922
1923
1924
1925
1926
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1946
1947
1948
1949
1950
1951
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
1966
1967
1968
1969
1970
1971
1972
1973
1974
1975
Query:
-- Corrected Query 9
SELECT cd."symbol", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
WHERE REPLACE(cd."symbol", ' ', '') = 'H04W76/00'
LIMIT 100
Answer:
symbol,titleFull
H04W76/00,Connection management
Query:
-- Corrected Query 10
SELECT CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) AS "filing_year", COUNT(*) AS "total_patents"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."filing_date" IS NOT NULL AND t."filing_date" > 0
GROUP BY "filing_year"
ORDER BY "filing_year"
LIMIT 100
Answer:
filing_year,total_patents
1846,1
1853,1
1860,1
1867,1
1877,4
1880,1
1881,2
1882,3
1883,2
1885,4
1886,3
1887,3
1888,3
1889,10
1890,4
1891,9
1892,10
1893,18
1894,34
1895,28
1896,44
1897,44
1898,51
1899,110
1900,81
1901,91
1902,100
1903,111
1904,136
1905,149
1906,189
1907,197
1908,160
1909,155
1910,164
1911,228
1912,276
1913,275
1914,197
1915,171
1916,173
1917,143
1918,111
1919,149
1920,173
1921,208
1922,159
1923,166
1924,174
1925,203
1926,214
1927,211
1928,243
1929,264
1930,272
1931,263
1932,219
1933,236
1934,298
1935,314
1936,335
1937,295
1938,346
1939,309
1940,289
1941,288
1942,211
1943,270
1944,248
1945,256
1946,302
1947,327
1948,300
1949,329
1950,357
1951,354
1952,382
1953,387
1954,478
1955,472
1956,519
1957,493
1958,514
1959,575
1960,552
1961,566
1962,573
1963,544
1964,857
1965,942
1966,1036
1967,1011
1968,1085
1969,1427
1970,1478
1971,2192
1972,2741
1973,3017
1974,3091
1975,3236
Query:
-- Corrected Query 11
SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    COUNT(*) AS "patent_count"
FROM
    PATENTS.PATENTS.PUBLICATIONS t
    CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
WHERE
    f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
    AND CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) = 2020
GROUP BY
    "cpc_symbol"
ORDER BY
    "patent_count" DESC
LIMIT 10
Answer:
cpc_symbol,patent_count
Y02E60/10,444
A61P35/00,425
G06N20/00,292
G06N3/08,289
A61K45/06,261
G06N3/045,215
H04N19/176,185
Y02T10/70,170
A61K2039/505,163
Y02E10/50,157
Query:
-- Corrected Query 12
SELECT cd."symbol", cd."level", cd."titleFull"
FROM PATENTS.PATENTS.CPC_DEFINITION cd
WHERE cd."titleFull" IS NOT NULL AND cd."titleFull" ILIKE '%artificial intelligence%'
LIMIT 100
Answer:
symbol,level,titleFull
Y10S706/00,7.0,Data processing: artificial intelligence
G05D1/0088,8.0,"Control of position, course, altitude or attitude of land, water, air or space vehicles, e.g. using automatic pilots characterized by the autonomous decision making process, e.g. artificial intelligence, predefined behaviours"
H04L41/16,8.0,"Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks using machine learning or artificial intelligence"
E21B2200/22,8.0,"Fuzzy logic, artificial intelligence, neural networks or the like"
G05D2101/10,8.0,Details of software or hardware architectures used for the control of position using artificial intelligence [AI] techniques
G06N5/045,9.0,Explanation of inference; Explainable artificial intelligence [XAI]; Interpretable artificial intelligence
G06F30/27,9.0,"Design optimisation, verification or simulation using machine learning, e.g. artificial intelligence, neural networks, support vector machines [SVM] or training a model"
H04L45/08,9.0,"Learning-based routing, e.g. using neural networks or artificial intelligence"
G05D2101/15,9.0,"Details of software or hardware architectures used for the control of position using artificial intelligence [AI] techniques using machine learning, e.g. neural networks"
E05Y2400/456,10.0,"Control modes for programming, e.g. learning or AI [artificial intelligence]"
G05B2219/33002,10.0,"Artificial intelligence AI, expert, knowledge, rule based system KBS"
H01M8/04992,10.0,"Processes for controlling fuel cells or fuel cell systems characterised by the implementation of mathematical or computational algorithms, e.g. feedback control loops, fuzzy logic, neural networks or artificial intelligence"
Y10S128/924,10.0,Computer assisted medical diagnostics by comparison of patient data to other data using artificial intelligence
B60G2600/1876,10.0,Artificial intelligence
G10K2210/3024,10.0,"Expert systems, e.g. artificial intelligence"
B64G1/247,11.0,"Advanced control concepts for autonomous, robotic spacecraft, e.g. by using artificial intelligence, neural networks or autonomous agents"
A61B1/000096,11.0,Operational features of endoscopes characterised by electronic signal processing of image signals during a use of endoscope using artificial intelligence
G01R31/2846,11.0,"Fault-finding or characterising using hard- or software simulation or using knowledge-based systems, e.g. expert systems, artificial intelligence or interactive algorithms"
G01R31/2848,12.0,"Fault-finding or characterising using hard- or software simulation or using knowledge-based systems, e.g. expert systems, artificial intelligence or interactive algorithms using simulation"
End Exploring Related Columns
Task: Identify the CPC technology areas with the highest exponential moving average of patent filings each year (smoothing factor 0.2), and provide the full title and the best year for each CPC group at level 5.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
CPC_Symbol,Full_Title,Best_Year
symbol1:str,titleFull1:str,year1:int
symbol2:str,titleFull2:str,year2:int
...
```

The table above lists the CPC technology areas at level 5 with the highest exponential moving average (EMA) of patent filings each year, using a smoothing factor of 0.2. For each CPC group, we've provided the symbol, the full title, and the best year—that is, the year with the highest number of patent filings in that group..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 01:44:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:44:30 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS "filing_year",
    COUNT(*) AS "patent_count"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY "cpc_symbol", "filing_year"
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS "cpc_symbol",
    cd."titleFull" AS "Full_Title"
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c."cpc_symbol",
    c."filing_year",
    c."patent_count",
    l."Full_Title"
  FROM cpc_counts c
  JOIN cpc_level5 l ON c."cpc_symbol" = l."cpc_symbol"
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    current.cpc_symbol,
    current.filing_year,
    current.patent_count,
    0.2 * current.patent_count + 0.8 * previous.ema_value AS ema_value,
    current.Full_Title,
    current.row_num
  FROM ema_calc AS previous
  JOIN ordered_counts AS current
    ON previous.cpc_symbol = current.cpc_symbol
    AND current.row_num = previous.row_num + 1
)
SELECT
  el."cpc_symbol" AS "CPC_Symbol",
  el."Full_Title",
  el."ema_value" AS "EMA_Value",
  (
    SELECT
      c."filing_year"
    FROM cpc_counts_level5 c
    WHERE c."cpc_symbol" = el."cpc_symbol"
    ORDER BY c."patent_count" DESC, c."filing_year" ASC
    LIMIT 1
  ) AS "Best_Year"
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) el
WHERE el.rn = 1
ORDER BY el."EMA_Value" DESC
LIMIT 100;
```
2025-01-27 01:44:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:44:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:44:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:44:32 - snowflake.connector.connection - INFO - closed
2025-01-27 01:44:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:44:32 - root - INFO - itercount: 1
2025-01-27 01:44:32 - root - INFO - 001003 (42000): 01b9fb48-0004-8343-0001-11c300fbcbca: SQL compilation error:
syntax error line 52 at position 4 unexpected 'current'.
syntax error line 53 at position 4 unexpected 'current'.
syntax error line 54 at position 4 unexpected 'current'.
syntax error line 55 at position 4 unexpected '0.2'.
syntax error line 55 at position 61 unexpected 'ema_value'.
syntax error line 56 at position 4 unexpected 'current'.
syntax error line 57 at position 4 unexpected 'current'.
syntax error line 58 at position 19 unexpected 'previous'.
syntax error line 59 at position 2 unexpected 'JOIN'.
2025-01-27 01:44:32 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS "filing_year",
    COUNT(*) AS "patent_count"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY "cpc_symbol", "filing_year"
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS "cpc_symbol",
    cd."titleFull" AS "Full_Title"
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c."cpc_symbol",
    c."filing_year",
    c."patent_count",
    l."Full_Title"
  FROM cpc_counts c
  JOIN cpc_level5 l ON c."cpc_symbol" = l."cpc_symbol"
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    current.cpc_symbol,
    current.filing_year,
    current.patent_count,
    0.2 * current.patent_count + 0.8 * previous.ema_value AS ema_value,
    current.Full_Title,
    current.row_num
  FROM ema_calc AS previous
  JOIN ordered_counts AS current
    ON previous.cpc_symbol = current.cpc_symbol
    AND current.row_num = previous.row_num + 1
)
SELECT
  el."cpc_symbol" AS "CPC_Symbol",
  el."Full_Title",
  el."ema_value" AS "EMA_Value",
  (
    SELECT
      c."filing_year"
    FROM cpc_counts_level5 c
    WHERE c."cpc_symbol" = el."cpc_symbol"
    ORDER BY c."patent_count" DESC, c."filing_year" ASC
    LIMIT 1
  ) AS "Best_Year"
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) el
WHERE el.rn = 1
ORDER BY el."EMA_Value" DESC
LIMIT 100;
The error information is:
001003 (42000): 01b9fb48-0004-8343-0001-11c300fbcbca: SQL compilation error:
syntax error line 52 at position 4 unexpected 'current'.
syntax error line 53 at position 4 unexpected 'current'.
syntax error line 54 at position 4 unexpected 'current'.
syntax error line 55 at position 4 unexpected '0.2'.
syntax error line 55 at position 61 unexpected 'ema_value'.
syntax error line 56 at position 4 unexpected 'current'.
syntax error line 57 at position 4 unexpected 'current'.
syntax error line 58 at position 19 unexpected 'previous'.
syntax error line 59 at position 2 unexpected 'JOIN'.
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-27 01:44:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:44:57 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS "filing_year",
    COUNT(*) AS "patent_count"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY "cpc_symbol", "filing_year"
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS "cpc_symbol",
    cd."titleFull" AS "Full_Title"
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c."cpc_symbol",
    c."filing_year",
    c."patent_count",
    l."Full_Title"
  FROM cpc_counts c
  JOIN cpc_level5 l ON c."cpc_symbol" = l."cpc_symbol"
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc AS prev
  JOIN ordered_counts AS curr
    ON prev.cpc_symbol = curr.cpc_symbol
    AND curr.row_num = prev.row_num + 1
)
SELECT
  el."cpc_symbol" AS "CPC_Symbol",
  el."Full_Title",
  el."ema_value" AS "EMA_Value",
  (
    SELECT
      c."filing_year"
    FROM cpc_counts_level5 c
    WHERE c."cpc_symbol" = el."cpc_symbol"
    ORDER BY c."patent_count" DESC NULLS LAST, c."filing_year" ASC
    LIMIT 1
  ) AS "Best_Year"
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) el
WHERE el.rn = 1
ORDER BY el."EMA_Value" DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:44:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:44:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:44:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:44:59 - snowflake.connector.connection - INFO - closed
2025-01-27 01:44:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:44:59 - root - INFO - itercount: 2
2025-01-27 01:44:59 - root - INFO - 000904 (42000): 01b9fb48-0004-83e6-0001-11c300fbe23a: SQL compilation error: error line 31 at position 4
invalid identifier 'CPC_SYMBOL'
2025-01-27 01:44:59 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS "cpc_symbol",
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS "filing_year",
    COUNT(*) AS "patent_count"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY "cpc_symbol", "filing_year"
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS "cpc_symbol",
    cd."titleFull" AS "Full_Title"
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c."cpc_symbol",
    c."filing_year",
    c."patent_count",
    l."Full_Title"
  FROM cpc_counts c
  JOIN cpc_level5 l ON c."cpc_symbol" = l."cpc_symbol"
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc AS prev
  JOIN ordered_counts AS curr
    ON prev.cpc_symbol = curr.cpc_symbol
    AND curr.row_num = prev.row_num + 1
)
SELECT
  el."cpc_symbol" AS "CPC_Symbol",
  el."Full_Title",
  el."ema_value" AS "EMA_Value",
  (
    SELECT
      c."filing_year"
    FROM cpc_counts_level5 c
    WHERE c."cpc_symbol" = el."cpc_symbol"
    ORDER BY c."patent_count" DESC NULLS LAST, c."filing_year" ASC
    LIMIT 1
  ) AS "Best_Year"
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) el
WHERE el.rn = 1
ORDER BY el."EMA_Value" DESC NULLS LAST
LIMIT 100;
The error information is:
000904 (42000): 01b9fb48-0004-83e6-0001-11c300fbe23a: SQL compilation error: error line 31 at position 4
invalid identifier 'CPC_SYMBOL'
Please correct it and output only 1 complete SQL query.
2025-01-27 01:46:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:46:28 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ef.ema_value AS "EMA_Value",
  by.Best_Year
FROM ema_final ef
JOIN best_years by ON ef.cpc_symbol = by.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:46:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:46:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:46:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:46:30 - snowflake.connector.connection - INFO - closed
2025-01-27 01:46:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:46:30 - root - INFO - itercount: 3
2025-01-27 01:46:30 - root - INFO - 001003 (42000): 01b9fb4a-0004-83c8-0001-11c300fbd28a: SQL compilation error:
syntax error line 67 at position 2 unexpected 'by'.
syntax error line 69 at position 16 unexpected 'by'.
2025-01-27 01:46:30 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ef.ema_value AS "EMA_Value",
  by.Best_Year
FROM ema_final ef
JOIN best_years by ON ef.cpc_symbol = by.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
001003 (42000): 01b9fb4a-0004-83c8-0001-11c300fbd28a: SQL compilation error:
syntax error line 67 at position 2 unexpected 'by'.
syntax error line 69 at position 16 unexpected 'by'.
Please correct it and output only 1 complete SQL query.
2025-01-27 01:47:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:47:01 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ef.ema_value AS "EMA_Value",
  best_yr.Best_Year
FROM ema_final ef
JOIN best_years best_yr ON ef.cpc_symbol = best_yr.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:47:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:47:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:47:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:47:05 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-27 01:47:05 - snowflake.connector.connection - INFO - closed
2025-01-27 01:47:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:47:06 - root - INFO - itercount: 4
2025-01-27 01:47:06 - root - INFO - No data found for the specified query.

2025-01-27 01:47:06 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ef.ema_value AS "EMA_Value",
  best_yr.Best_Year
FROM ema_final ef
JOIN best_years best_yr ON ef.cpc_symbol = best_yr.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-01-27 01:47:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:47:44 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    UPPER(TRIM(f.value:"code"::STRING)) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    UPPER(TRIM(cd."symbol")) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  best_yr.Best_Year
FROM ema_final ef
JOIN best_years best_yr ON ef.cpc_symbol = best_yr.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:47:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:47:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:47:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:47:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-27 01:47:49 - snowflake.connector.connection - INFO - closed
2025-01-27 01:47:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:47:49 - root - INFO - itercount: 5
2025-01-27 01:47:49 - root - INFO - No data found for the specified query.

2025-01-27 01:47:49 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    UPPER(TRIM(f.value:"code"::STRING)) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    UPPER(TRIM(cd."symbol")) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  best_yr.Best_Year
FROM ema_final ef
JOIN best_years best_yr ON ef.cpc_symbol = best_yr.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-01-27 01:48:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:48:31 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    UPPER(TRIM(f.value:"code"::STRING)) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_definitions AS (
  SELECT
    UPPER(TRIM(cd."symbol")) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
),
cpc_counts_with_titles AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    d.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_definitions d ON c.cpc_symbol = d.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_with_titles
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_with_titles
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  by.Best_Year
FROM ema_final ef
JOIN best_years by ON ef.cpc_symbol = by.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:48:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:48:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:48:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:48:33 - snowflake.connector.connection - INFO - closed
2025-01-27 01:48:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:48:33 - root - INFO - itercount: 6
2025-01-27 01:48:33 - root - INFO - 001003 (42000): 01b9fb4c-0004-83c8-0001-11c300fbd292: SQL compilation error:
syntax error line 66 at position 2 unexpected 'by'.
syntax error line 68 at position 16 unexpected 'by'.
2025-01-27 01:48:33 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    UPPER(TRIM(f.value:"code"::STRING)) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_definitions AS (
  SELECT
    UPPER(TRIM(cd."symbol")) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
),
cpc_counts_with_titles AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    d.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_definitions d ON c.cpc_symbol = d.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_with_titles
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (PARTITION BY cpc_symbol ORDER BY filing_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_with_titles
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  by.Best_Year
FROM ema_final ef
JOIN best_years by ON ef.cpc_symbol = by.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
001003 (42000): 01b9fb4c-0004-83c8-0001-11c300fbd292: SQL compilation error:
syntax error line 66 at position 2 unexpected 'by'.
syntax error line 68 at position 16 unexpected 'by'.
Please correct it and output only 1 complete SQL query.
2025-01-27 01:49:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:49:37 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    UPPER(REPLACE(TRIM(f.value:"code"::STRING), ' ', '')) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    UPPER(REPLACE(TRIM(cd."symbol"), ' ', '')) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (
      PARTITION BY cpc_symbol 
      ORDER BY filing_year 
      ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
    ) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  bys.Best_Year
FROM ema_final ef
JOIN best_years bys ON ef.cpc_symbol = bys.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:49:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:49:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:49:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:49:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-27 01:49:40 - snowflake.connector.connection - INFO - closed
2025-01-27 01:49:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:49:41 - root - INFO - itercount: 7
2025-01-27 01:49:41 - root - INFO - No data found for the specified query.

2025-01-27 01:49:41 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    UPPER(REPLACE(TRIM(f.value:"code"::STRING), ' ', '')) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code" IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    UPPER(REPLACE(TRIM(cd."symbol"), ' ', '')) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    POWER(0.8, row_num - 1) AS weight,
    patent_count * POWER(0.8, row_num - 1) AS weighted_value,
    Full_Title
  FROM ordered_counts
),
ema_final AS (
  SELECT
    cpc_symbol,
    Full_Title,
    SUM(weighted_value) OVER (
      PARTITION BY cpc_symbol 
      ORDER BY filing_year 
      ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
    ) AS ema_value,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  bys.Best_Year
FROM ema_final ef
JOIN best_years bys ON ef.cpc_symbol = bys.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-01-27 01:50:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:50:27 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code"::STRING IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc prev
  JOIN ordered_counts curr
    ON prev.cpc_symbol = curr.cpc_symbol AND curr.row_num = prev.row_num + 1
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  (SELECT c.filing_year FROM cpc_counts_level5 c WHERE c.cpc_symbol = ef.cpc_symbol ORDER BY c.patent_count DESC NULLS LAST, c.filing_year ASC LIMIT 1) AS "Best_Year"
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) ef
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:50:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:50:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:50:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:50:29 - snowflake.connector.connection - INFO - closed
2025-01-27 01:50:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:50:30 - root - INFO - itercount: 8
2025-01-27 01:50:30 - root - INFO - 002031 (42601): None: SQL compilation error:
Unsupported subquery type cannot be evaluated
2025-01-27 01:50:30 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    f.value:"code"::STRING AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code"::STRING IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    cd."symbol" AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc prev
  JOIN ordered_counts curr
    ON prev.cpc_symbol = curr.cpc_symbol AND curr.row_num = prev.row_num + 1
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  (SELECT c.filing_year FROM cpc_counts_level5 c WHERE c.cpc_symbol = ef.cpc_symbol ORDER BY c.patent_count DESC NULLS LAST, c.filing_year ASC LIMIT 1) AS "Best_Year"
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) ef
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
002031 (42601): None: SQL compilation error:
Unsupported subquery type cannot be evaluated
Please correct it and output only 1 complete SQL query.
2025-01-27 01:51:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:51:19 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    UPPER(TRIM(REPLACE(f.value:"code"::STRING, ' ', ''))) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code"::STRING IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    UPPER(TRIM(REPLACE(cd."symbol", ' ', ''))) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc prev
  JOIN ordered_counts curr
    ON prev.cpc_symbol = curr.cpc_symbol AND curr.row_num = prev.row_num + 1
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  best.Best_Year
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) ef
JOIN best_years best ON ef.cpc_symbol = best.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:51:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:51:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:51:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:51:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-27 01:51:21 - snowflake.connector.connection - INFO - closed
2025-01-27 01:51:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:51:22 - root - INFO - itercount: 9
2025-01-27 01:51:22 - root - INFO - No data found for the specified query.

2025-01-27 01:51:22 - root - INFO - Input sql:
WITH cpc_counts AS (
  SELECT
    UPPER(TRIM(REPLACE(f.value:"code"::STRING, ' ', ''))) AS cpc_symbol,
    TO_NUMBER(LEFT(TO_VARCHAR(t."filing_date"), 4)) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code"::STRING IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    UPPER(TRIM(REPLACE(cd."symbol", ' ', ''))) AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5.0
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc prev
  JOIN ordered_counts curr
    ON prev.cpc_symbol = curr.cpc_symbol AND curr.row_num = prev.row_num + 1
),
best_years AS (
  SELECT
    cpc_symbol,
    MAX_BY(filing_year, patent_count) AS Best_Year
  FROM cpc_counts_level5
  GROUP BY cpc_symbol
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  best.Best_Year
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) ef
JOIN best_years best ON ef.cpc_symbol = best.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-01-27 01:52:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:52:39 - root - INFO - ```sql
WITH cpc_counts AS (
  SELECT
    TRIM(f.value:"code"::STRING) AS cpc_symbol,
    CAST(LEFT(TO_VARCHAR(t."filing_date"), 4) AS INTEGER) AS filing_year,
    COUNT(*) AS patent_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."cpc") f
  WHERE f.value:"code"::STRING IS NOT NULL
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" > 0
  GROUP BY cpc_symbol, filing_year
),
cpc_level5 AS (
  SELECT
    TRIM(cd."symbol") AS cpc_symbol,
    cd."titleFull" AS Full_Title
  FROM PATENTS.PATENTS.CPC_DEFINITION cd
  WHERE cd."level" = 5
),
cpc_counts_level5 AS (
  SELECT
    c.cpc_symbol,
    c.filing_year,
    c.patent_count,
    l.Full_Title
  FROM cpc_counts c
  INNER JOIN cpc_level5 l ON c.cpc_symbol = l.cpc_symbol
),
ordered_counts AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    Full_Title,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year ASC) AS row_num
  FROM cpc_counts_level5
),
ema_calc AS (
  SELECT
    cpc_symbol,
    filing_year,
    patent_count,
    CAST(patent_count AS FLOAT) AS ema_value,
    Full_Title,
    row_num
  FROM ordered_counts
  WHERE row_num = 1

  UNION ALL

  SELECT
    curr.cpc_symbol,
    curr.filing_year,
    curr.patent_count,
    0.2 * curr.patent_count + 0.8 * prev.ema_value AS ema_value,
    curr.Full_Title,
    curr.row_num
  FROM ema_calc prev
  INNER JOIN ordered_counts curr
    ON prev.cpc_symbol = curr.cpc_symbol AND curr.row_num = prev.row_num + 1
),
best_years AS (
  SELECT
    cpc_symbol,
    FIRST_VALUE(filing_year) OVER (PARTITION BY cpc_symbol ORDER BY patent_count DESC NULLS LAST, filing_year ASC) AS Best_Year
  FROM cpc_counts_level5
)
SELECT
  ef.cpc_symbol AS "CPC_Symbol",
  ef.Full_Title,
  ROUND(ef.ema_value, 4) AS "EMA_Value",
  by.Best_Year
FROM (
  SELECT
    cpc_symbol,
    Full_Title,
    ema_value,
    filing_year,
    ROW_NUMBER() OVER (PARTITION BY cpc_symbol ORDER BY filing_year DESC) AS rn
  FROM ema_calc
) ef
INNER JOIN (
  SELECT DISTINCT cpc_symbol, MAX(Best_Year) AS Best_Year
  FROM best_years
  GROUP BY cpc_symbol
) by ON ef.cpc_symbol = by.cpc_symbol
WHERE ef.rn = 1
ORDER BY ef.ema_value DESC NULLS LAST
LIMIT 100;
```
2025-01-27 01:52:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:52:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:52:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:52:40 - snowflake.connector.connection - INFO - closed
2025-01-27 01:52:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:52:40 - root - INFO - Total iteration counts: 10
