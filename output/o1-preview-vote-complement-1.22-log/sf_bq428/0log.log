2025-01-26 22:10:50 - openai._base_client - INFO - Retrying request to /chat/completions in 0.487884 seconds
2025-01-26 22:11:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:11:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:11:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:11:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:12:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:12:00 - snowflake.connector.connection - INFO - closed
2025-01-26 22:12:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:12:00 - root - INFO - SQL:
SELECT * 
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" 
   LIMIT 100;
Results:
Too long, hard cut:
game_id,load_timestamp,season,status,scheduled_date,venue_id,venue_name,venue_city,venue_state,venue_address,venue_zip,venue_country,venue_capacity,attendance,neutral_site,conference_game,tournament,tournament_type,round,game_no,away_market,away_name,away_id,away_alias,away_conf_name,away_conf_alias,away_division_name,away_division_alias,away_league_name,home_market,home_name,home_id,home_alias,home_conf_name,home_conf_alias,home_division_name,home_division_alias,home_league_name,period,game_clock,elapsed_time_sec,possession_arrow,team_name,team_market,team_id,team_alias,team_conf_name,team_conf_alias,team_division_name,team_division_alias,team_league_name,team_basket,possession_team_id,player_id,player_full_name,jersey_num,event_id,timestamp,event_description,event_coord_x,event_coord_y,event_type,type,shot_made,shot_type,shot_subtype,three_point_shot,points_scored,turnover_type,rebound_type,timeout_duration
60f60dfe-4423-4ef2-9b6c-aee096a0b65c,1517499623876394,2013,closed,1385928000000000,,,,,,,,,5159.0,False,False,,,,,Hardin-Simmons,Cowboys,8fedc1d2-482b-4c00-b581-f0da49935902,H-S,American Southwest Conference,ASC,NCAA Division III,D3,NCAA MEN,Baylor,Bears,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,BAY,Big 12,BIG12,NCAA Division I,D1,NCAA MEN,1,13:55,365,,,,,,,,,,,right,,,,,d6321017-d769-4df8-b6dd-b53e89c25fc8,1385929115000000,Bears rebound (deadball),,,deadball,,False,,,False,,,,
3d90529c-12ec-40e0-8f31-ddeed234ff76,1519021760589864,2017,closed,1518987600000000,,,,,,,,,9523.0,False,True,,,,,Wichita State,Shockers,f38b58de-3273-4723-a78b-2f918e9aa2d5,WICH,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,Cincinnati,Bearcats,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,CIN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,11:53,1687,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,,,,,,,,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,13c1e758-f5b3-4f1e-ade2-8c827863c529,1518993393000000,TV timeout,,,tvtimeout,,False,,,False,,,,
3d90529c-12ec-40e0-8f31-ddeed234ff76,1519021760589864,2017,closed,1518987600000000,,,,,,,,,9523.0,False,True,,,,,Wichita State,Shockers,f38b58de-3273-4723-a78b-2f918e9aa2d5,WICH,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,Cincinnati,Bearcats,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,CIN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,11:53,1687,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,,,,,,,left,,,,,95ac26dd-f0fa-48a5-8da6-ee8153bd7525,1518993594000000,"Bearcats lineup change (Eliel Nsoseme, Gary Clark, Cane Broome, Keith Williams, Jarron Cumberland)",0.0,0.0,lineupchange,,False,,,False,,,,
3ea4e171-afee-4964-9412-306a917a7b94,1519021685996438,2017,closed,1518984000000000,,,,,,,,,4524.0,False,True,,,,,Connecticut,Huskies,efba5350-79bc-47aa-a189-db177b95b491,CONN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,East Carolina,Pirates,a601205f-3bfe-4052-ac0b-b8f18cf3efd3,ECU,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,3:18,2202,a601205f-3bfe-4052-ac0b-b8f18cf3efd3,,,,,,,,,,,efba5350-79bc-47aa-a189-db177b95b491,,,,56811f6a-756f-4a05-b226-da52b15e7f7d,1518990113000000,TV timeout,,,tvtimeout,,False,,,False,,,,
3d90529c-12ec-40e0-8f31-ddeed234ff76,1519021760589864,2017,closed,1518987600000000,,,,,,,,,9523.0,False,True,,,,,Wichita State,Shockers,f38b58de-3273-4723-a78b-2f918e9aa2d5,WICH,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,Cincinnati,Bearcats,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,CIN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,13:59,1561,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,,,,,,,left,,,,,249782b7-c2fb-4f00-a13e-492f0934483e,1518993043000000,"Bearcats lineup change (Jacob Evans III, Gary Clark, Cane Broome, Kyle Washington, Jarron Cumberland)",0.0,0.0,lineupchange,,False,,,False,,,,
5c74a296-4631-4646-bc66-97be4e6c3ba8,1519021768153849,2017,closed,1518985800000000,,,,,,,,,15544.0,False,True,,,,,Nebraska,Cornhuskers,f8b1bf00-5b73-4ac4-98c0-ec554027ae32,NEB,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,Illinois,Fighting Illini,150148c2-ca8f-414f-8f41-d94a55d4a122,ILL,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,1,7:56,724,150148c2-ca8f-414f-8f41-d94a55d4a122,,,,,,,,,,left,,,,,fda79777-13a1-4b4b-bf3f-a78be5a915bd,1518987603000000,Cornhuskers rebound (deadball),,,deadball,,False,,,False,,,,
3ac25641-fd61-4126-8d43-b375abe8443e,1519021764684104,2017,closed,1518976800000000,,,,,,,,,,False,True,,,,,Ohio State,Buckeyes,857462b3-0ab6-4d26-9669-10ca354e382b,OSU,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,Michigan,Wolverines,bdc2561d-f603-4fab-a262-f1d2af462277,MICH,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,1,6:17,823,857462b3-0ab6-4d26-9669-10ca354e382b,,,,,,,,,,left,,,,,b5c818b8-6d56-4d08-bd26-c2ea033af772,1518979123000000,"Buckeyes lineup change (Jae'Sean Tate, C.J. Jackson, Kam Williams, Keita Bates-Diop, Kaleb Wesson)",0.0,0.0,lineupchange,,False,,,False,,,,
d4213cb8-f351-4864-a3e0-71b5d23345e9,1519021704037998,2017,closed,1519002000000000,,,,,,,,,14804.0,False,True,,,,,Penn State,Nittany Lions,4aebd148-8119-4875-954c-66779867989b,PSU,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,Purdue,Boilermakers,

2025-01-26 22:12:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:12:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:12:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:12:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:12:02 - snowflake.connector.connection - INFO - closed
2025-01-26 22:12:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:14:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:14:03 - root - INFO - ```sql
SELECT G."season", G."round", G."game_date",
       G."win_market", G."win_name", G."win_seed", G."win_pts",
       G."lose_market", G."lose_name", G."lose_seed", G."lose_pts", G."num_ot"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE G."season" BETWEEN 2010 AND 2018
  AND (
    G."win_market" IN (
        SELECT TOP_MARKETS."market"
        FROM (
            SELECT T."market"
            FROM (
                SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
                FROM (
                    SELECT "player_id", "team_id"
                    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                    WHERE "season" BETWEEN 2010 AND 2018 
                      AND "period" = 2
                      AND "points_scored" IS NOT NULL
                    GROUP BY "player_id", "team_id"
                    HAVING SUM("points_scored") >= 15
                ) P
                GROUP BY P."team_id"
            ) P2
            JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
            WHERE T."market" IS NOT NULL
            GROUP BY T."market"
            ORDER BY COUNT(DISTINCT P2."player_id") DESC
            LIMIT 5
        ) TOP_MARKETS
    )
    OR G."lose_market" IN (
        SELECT TOP_MARKETS."market"
        FROM (
            SELECT T."market"
            FROM (
                SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
                FROM (
                    SELECT "player_id", "team_id"
                    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                    WHERE "season" BETWEEN 2010 AND 2018 
                      AND "period" = 2
                      AND "points_scored" IS NOT NULL
                    GROUP BY "player_id", "team_id"
                    HAVING SUM("points_scored") >= 15
                ) P
                GROUP BY P."team_id"
            ) P2
            JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
            WHERE T."market" IS NOT NULL
            GROUP BY T."market"
            ORDER BY COUNT(DISTINCT P2."player_id") DESC
            LIMIT 5
        ) TOP_MARKETS
    )
)
;
```
2025-01-26 22:14:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:14:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:14:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:14:05 - snowflake.connector.connection - INFO - closed
2025-01-26 22:14:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:14:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:14:55 - root - INFO - I apologize for the error in the previous SQL query. The issue was due to referencing an invalid identifier `P2."player_id"` in the `ORDER BY` clause. To fix this, we'll adjust the query to correctly count the number of distinct players and reference the appropriate aliases.

Here is the corrected SQL query:

```sql
SELECT G."season", G."round", G."game_date",
       G."win_market", G."win_name", G."win_seed", G."win_pts",
       G."lose_market", G."lose_name", G."lose_seed", G."lose_pts", G."num_ot"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE G."season" BETWEEN 2010 AND 2018
  AND (
    G."win_market" IN (
        SELECT T."market"
        FROM (
            SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
            FROM (
                SELECT "player_id", "team_id"
                FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                WHERE "season" BETWEEN 2010 AND 2018 
                  AND "period" = 2
                  AND "points_scored" IS NOT NULL
                GROUP BY "player_id", "team_id"
                HAVING SUM("points_scored") >= 15
            ) P
            GROUP BY P."team_id"
        ) P2
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
        WHERE T."market" IS NOT NULL
        GROUP BY T."market"
        ORDER BY SUM(P2."num_players") DESC
        LIMIT 5
    )
    OR G."lose_market" IN (
        SELECT T."market"
        FROM (
            SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
            FROM (
                SELECT "player_id", "team_id"
                FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                WHERE "season" BETWEEN 2010 AND 2018 
                  AND "period" = 2
                  AND "points_scored" IS NOT NULL
                GROUP BY "player_id", "team_id"
                HAVING SUM("points_scored") >= 15
            ) P
            GROUP BY P."team_id"
        ) P2
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
        WHERE T."market" IS NOT NULL
        GROUP BY T."market"
        ORDER BY SUM(P2."num_players") DESC
        LIMIT 5
    )
)
;
```

**Explanation:**

- **Inner Query (`P`):** Retrieves `player_id` and `team_id` for players who scored at least 15 points during the second period between 2010 and 2018.
- **Subquery (`P2`):** Counts the number of distinct players (`num_players`) per `team_id`.
- **Join with Teams (`T`):** Associates each `team_id` with its corresponding `market` from the `MBB_TEAMS` table.
- **Grouping and Ordering:** Groups by `T."market"` and orders the results by the total number of players (`SUM(P2."num_players")`) in descending order to identify the top five markets.
- **Main Query (`G`):** Retrieves game details from `MBB_HISTORICAL_TOURNAMENT_GAMES` where either the winning or losing team's market is among the top five identified markets.

**Note:** This query avoids the invalid identifier by correctly using `SUM(P2."num_players")` in the `ORDER BY` clause and ensuring all aliases refer to existing columns in their respective scopes.
2025-01-26 22:14:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:14:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:14:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:14:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 48
2025-01-26 22:14:57 - snowflake.connector.connection - INFO - closed
2025-01-26 22:14:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:46 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:15:46 - root - INFO - SQL:
SELECT G."season", G."round", G."game_date",
       G."win_market", G."win_name", G."win_seed", G."win_pts",
       G."lose_market", G."lose_name", G."lose_seed", G."lose_pts", G."num_ot"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE G."season" BETWEEN 2010 AND 2018
  AND (
    G."win_market" IN (
        SELECT T."market"
        FROM (
            SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
            FROM (
                SELECT "player_id", "team_id"
                FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                WHERE "season" BETWEEN 2010 AND 2018 
                  AND "period" = 2
                  AND "points_scored" IS NOT NULL
                GROUP BY "player_id", "team_id"
                HAVING SUM("points_scored") >= 15
            ) P
            GROUP BY P."team_id"
        ) P2
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
        WHERE T."market" IS NOT NULL
        GROUP BY T."market"
        ORDER BY SUM(P2."num_players") DESC
        LIMIT 5
    )
    OR G."lose_market" IN (
        SELECT T."market"
        FROM (
            SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
            FROM (
                SELECT "player_id", "team_id"
                FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                WHERE "season" BETWEEN 2010 AND 2018 
                  AND "period" = 2
                  AND "points_scored" IS NOT NULL
                GROUP BY "player_id", "team_id"
                HAVING SUM("points_scored") >= 15
            ) P
            GROUP BY P."team_id"
        ) P2
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
        WHERE T."market" IS NOT NULL
        GROUP BY T."market"
        ORDER BY SUM(P2."num_players") DESC
        LIMIT 5
    )
)
;
Results:
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2011,64,2011-03-17,Morehead State,Eagles,13,62,Louisville,Cardinals,04,61,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2015,8,2015-03-29,Michigan State,Spartans,07,76,Louisville,Cardinals,04,70,1
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,32,2011-03-19,Kentucky,Wildcats,04,71,West Virginia,Mountaineers,05,63,0
2016,64,2016-03-17,Kentucky,Wildcats,04,85,Stony Brook,Seawolves,13,57,0
2010,16,2010-03-25,Kentucky,Wildcats,01,62,Cornell,Big Red,12,45,0
2010,32,2010-03-20,Kentucky,Wildcats,01,90,Wake Forest,Demon Deacons,09,60,0
2011,8,2011-03-27,Kentucky,Wildcats,04,76,North Carolina,Tar Heels,02,69,0
2011,64,2011-03-17,Kentucky,Wildcats,04,59,Princeton,Tigers,13,57,0
2011,16,2011-03-25,Kentucky,Wildcats,04,62,Ohio State,Buckeyes,01,60,0
2010,64,2010-03-18,Kentucky,Wildcats,01,100,East Tennessee State,Buccaneers,16,71,0
2015,64,2015-03-19,Kentucky,Wildcats,01,79,Hampton,Pirates,16,56,0
2014,8,2014-03-30,Kentucky,Wildcats,08,75,Michigan,Wolverines,02,72,0
2012,64,2012-03-15,Kentucky,Wildcats,01,81,Western Kentucky,Hilltoppers,16,66,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2012,16,2012-03-23,Kentucky,Wildcats,01,102,Indiana,Hoosiers,04,90,0
2012,32,2012-03-17,Kentucky,Wildcats,01,87,Iowa State,Cyclones,08,71,0
2012,2,2012-04-02,Kentucky,Wildcats,01,67,Kansas,Jayhawks,02,59,0
2015,16,2015-03-26,Kentucky,Wildcats,01,78,West Virginia,Mountaineers,05,39,0
2012,8,2012-03-25,Kentucky,Wildcats,01,82,Baylor,Bears,03,70,0
2014,32,2014-03-23,Kentucky,Wildcats,08,78,Wichita State,Shockers,01,76,0
2015,32,2015-03-21,Kentucky,Wildcats,01,64,Cincinnati,Bearcats,08,51,0
2014,4,2014-04-05,Kentucky,Wildcats,08,74,Wisconsin,Badgers,02,73,0
2015,8,2015-03-28,Kentucky,Wildcats,01,68,Notre Dame,Fighting Irish,03,66,0
2014,64,2014-03-21,Kentucky,Wildcats,08,56,Kansas State,Wildcats,09,49,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2017,64,2017-03-17,Kentucky,Wildcats,02,79,Northern Kentucky,Norse,15,70,0
2017,32,2017-03-19,Kentucky,Wildcats,02,65,Wichita State,Shockers,10,62,0
2017,16,2017-03-24,Kentucky,Wildcats,02,86,UCLA,Bruins,03,75,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2017,32,2017-03-19,Michigan,Wolverines,07,73,Louisville,Cardinals,02,69,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2010,64,2010-03-19,California,Golden Bears,08,77,Louisville,Cardinals,09,62,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0

2025-01-26 22:15:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 37
2025-01-26 22:15:47 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:48 - root - INFO - SQL:
SELECT DISTINCT "event_type"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
Results:
event_type
kickball
freethrowmade
delay
laneviolation
openinbound
twopointmiss
minortechnicalfoul
shootingfoul
offensivefoul
ejection
personalfoul
technicalfoul
teamtimeout
threepointmiss
threepointmade
clearpathfoul
freethrowmiss
possession
deadball
endperiod
rebound
defensivethreeseconds
officialtimeout
assist
twopointmade
opentip
attemptblocked
flagranttwo
substitution
review
jumpball
lineupchange
tvtimeout
freethrow
turnover
block
flagrantone

2025-01-26 22:15:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:15:49 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:50 - root - INFO - SQL:
SELECT "player_id", SUM("points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
  AND "points_scored" IS NOT NULL
GROUP BY "player_id"
LIMIT 100
Results:
player_id,total_points
e7c04544-2cba-42f7-8c25-27606ec743f3,25.0
53cdc99a-e8c8-4d32-be34-5b4ad39e1611,36.0
68d3bb3f-358f-4358-8339-1b0b7b539c95,71.0
956adbd8-16b0-483b-a1c7-de14cdb18a66,97.0
8f1a7e15-5fac-443d-a7d7-b2e5754b4a41,44.0
ae6c3caa-1aa2-4b67-a2ac-85a548140bcf,46.0
eef934a6-f0cf-48aa-90b6-a1d81d97e92e,43.0
087bf0a5-e771-4a29-bd1f-04333a904a47,66.0
018da264-0c34-46ff-bf93-12f08ba6b9a2,584.0
2c0dbd58-1500-43a4-9c26-447df2fafac4,6.0
f9736f34-662c-4154-94ad-cc0a39f01c9f,400.0
54b9624e-1f14-4e87-bdc1-b5b02a2196e6,466.0
ca131f44-bfeb-4ebf-a8d3-b4e6ba126172,725.0
c3cbcada-ce3e-4f74-a5ca-b70e7ecea1e4,33.0
0ddec725-6a64-43b3-b7bf-a25f7469eb09,415.0
a46691c1-bdf2-4736-b136-158ae214c029,19.0
6e185458-c6d8-4b73-ab5f-0f6fbcb20b3a,81.0
5eddf5bc-e974-4902-92a5-306d5113f71a,171.0
4502ddf1-d257-45d4-8a32-bdf5c8101f9c,86.0
821f6f5f-7163-4f21-81e4-49eb71226d04,60.0
e36b3fe5-d382-4090-8f84-fee8d8081268,4.0
fee724be-038f-4f85-8337-9dd9056c4efb,128.0
0dc8a12b-5a96-4893-9c87-d28572ebee77,7.0
3023ef82-0640-45ba-8f1c-56714af7b642,6.0
d1c14dfb-76a1-4506-83e8-0faee1d2b066,148.0
28e8a4a1-2f3d-4bd1-8636-a34db7e48078,34.0
7f2291a6-298b-44ce-9dde-21894f386fd3,187.0
b8a97763-46a7-4dc8-bf11-bbf225cb2c14,380.0
1660606d-3d7e-4a3e-a52c-25e9e23ff158,75.0
13dcbc93-0965-40ad-a732-d1e2cf2ba05c,3.0
9d52dd6a-d305-406b-904f-88440c8e6190,8.0
80b1ceaa-e675-469d-9a6e-397e8b427871,31.0
74c471f0-257f-4824-9996-f55fb7a7989e,239.0
0fe27ecd-0e5f-48de-9fd6-65c725de4a9e,90.0
20e7d420-9cfb-4c27-b140-a4a68a2c0629,54.0
8215b628-624b-4928-a245-06f6ab529bd4,99.0
0f301b05-b477-44c8-a2fe-89ab9f81167c,356.0
2dd6544f-b36b-446b-92c5-75c95389c706,276.0
d83f7cb0-afdf-4b97-8488-f61b7bbb3316,79.0
1badae2e-43b4-487b-9bf3-9c51787d923e,13.0
eb0eb751-6936-41d5-8420-075951057dd7,72.0
374b649f-03a1-4b52-be59-e60880f87e9a,232.0
b494e2df-b823-4895-864b-41e0f6994ad0,73.0
7e38e3e1-07d7-438b-bba3-eae3b2c9841b,418.0
a4156985-3358-4f58-a417-5249b46a61fa,54.0
4daf5942-b21b-4ecb-af9e-bef7df963f0c,4.0
0e1b0850-26fe-4c28-8369-2f6cccd19a5f,118.0
c2af5b0b-dbc3-4449-8f49-58a5ba2fdb28,26.0
dca8aa79-e4e1-4f05-85a0-a6f06d7de321,411.0
f8081da3-5650-4648-b4a7-512723c86583,126.0
71cda45d-3fd4-49c9-9a7f-0222082bfdba,117.0
683aad89-c806-4e55-be81-43ddea3e1d04,767.0
aba866ab-968d-4d98-9142-00d206cedf56,380.0
9cd620b4-1ad9-47c5-ac78-a2b31f9813e5,48.0
39b7a6a4-82e6-4db1-9bd1-63949e86ec6f,321.0
7bd6f388-6be6-4b92-b4fd-75d600d950df,332.0
7105b5ea-014d-4908-a202-1406340fd007,10.0
3025489f-78e7-41a2-93aa-5670119c8808,564.0
62eb9be0-286e-44d8-94fc-6dbff16351be,51.0
b3bbac16-9bf7-4ea7-b9e6-55c30cddba3f,86.0
c36a805c-0824-4c0e-a2bd-df6b39c25c9c,231.0
46a1a9d6-340d-4167-bead-e0bce14c9fd2,197.0
afc43689-8b8d-40e3-a04f-1459ff6e34cb,238.0
42d8a8dc-5c79-433e-a0bd-eb35e7606425,41.0
9fcff632-52b3-42b3-94c7-bf2d7a5800ed,41.0
5786f2a1-479c-4690-bd83-a7a8e6fea3ee,7.0
52ba351e-bfd8-4f1d-85ee-2f7dbea25e56,239.0
0a39d055-0d46-471c-bb18-f040412c7118,27.0
cb028322-eff5-47a5-8fa1-7537b6d42fab,8.0
52a0cef1-90c6-4900-b6d8-b814e437219e,39.0
8a37849b-7be1-4caf-b7c7-07072c68a696,104.0
3525df40-233d-4ae1-bd80-2ac733c995cd,16.0
99c5c6f1-7bd8-4049-8acf-c83a4609ecf4,51.0
62e33406-999f-45b8-adfc-9830c8d59e46,7.0
4a124fef-806a-4f3f-99d3-2152e5479ffe,519.0
8541ea93-1575-408b-9e60-c32fd45c4d8e,157.0
fa16dbd2-ddb5-487c-84ad-33c29bdf6aa5,41.0
cdeda5fd-711f-492c-bb58-97d121dede1d,16.0
7f57820a-ffd6-49eb-b06b-95906f83f44e,8.0
a86f1507-5a81-4eaf-a004-3540243409d7,157.0
7bae6287-2d65-4147-9cd7-6a1c44fabdb9,14.0
b2b937e0-09db-4c8d-81db-e31bc095d91e,57.0
530f3fb9-3c6f-4481-9493-95d7019b57eb,235.0
bc822e5b-7c76-4b1d-be43-54243dc154d1,437.0
ee67cb1a-3948-488e-a2c9-918d4d9ca8c7,268.0
88a7c293-b02b-4a9f-b3d2-659cd80234bd,61.0
dd9858a8-2003-4da4-9c00-4aa51e8ac3bb,128.0
eff24510-1e09-4799-8161-32cf83ff26e7,21.0
6a29cda5-2a33-403b-b172-ce24a70edd57,4.0
206b98d0-5c8e-4a3f-be38-b781fbc82858,28.0
3a7f4067-2a34-48b9-bc44-998648d5a6d3,141.0
899cd469-3a4a-4e14-ae26-8336764d8d9c,9.0
e17f4dec-de8e-458a-99f3-073e41ae20d9,29.0
6b5d5506-191b-4b12-9ff1-dc5dd3ed957a,35.0
b644bd2b-4354-423f-b71a-b5906cdf4c31,104.0
9d2fcda3-53ba-41c0-aca6-42dc4c58dc29,15.0
6d8a3134-2cc3-42c1-9713-f340eeb19ca6,42.0
68f31038-a5d8-485f-a42a-d37c09d3b70b,11.0
7727d502-ea2c-4d68-9af3-2211a7b4a40a,6.0
5aae3032-ce69-4cfc-8291-a0fb54c25ea3,8.0

2025-01-26 22:15:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:15:51 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:51 - root - INFO - SQL:
SELECT "player_id", "team_id", SUM("points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
  AND "points_scored" IS NOT NULL
GROUP BY "player_id", "team_id"
HAVING SUM("points_scored") >= 15
LIMIT 100
Results:
Too long, hard cut:
player_id,team_id,total_points
4d4503ad-ee6d-4675-85eb-cf77b4398e4d,b827dbdf-230f-4916-9703-3bb9004e26eb,160.0
6368d89d-a274-45c3-b6c8-6e680043ea7a,23426c0b-1705-4dfb-a0e2-efdbdd8fd6f6,38.0
a2fd2a9d-117c-4f59-aff9-f879810a823f,87721c44-53a2-47aa-9b3a-0f1c99b0f328,56.0
b780b507-d4b0-4179-9379-68707c981553,fe037cba-25d9-42f5-a461-61d7102c17de,15.0
9525b7d1-9151-4caa-acff-887bc95c3bb0,fe037cba-25d9-42f5-a461-61d7102c17de,24.0
9e0c411b-26c3-4e6f-a1df-e345a236f32d,399ad7fb-de60-45a6-a71f-d26e00f1a4ec,32.0
202be29b-86e8-4509-8520-faa096a9bc0c,ef184799-d79b-49d9-a662-991eaf4044cd,114.0
766ea0da-3405-4220-bc2e-a510230a3812,ef184799-d79b-49d9-a662-991eaf4044cd,173.0
a5974574-5371-4c86-be5a-49c19ea24bc7,0dadedb0-2bd3-45e7-91a3-93af6c4e87f2,55.0
05f6462d-a1da-4446-913e-0507fc796553,ec0d6b67-4b16-4b50-92b2-1a651dae6b0f,175.0
a72cbc64-3b2d-44ae-97c4-3411cd80db3a,ec0d6b67-4b16-4b50-92b2-1a651dae6b0f,96.0
723c424e-809e-48ff-a985-f7c6b7f5fd5b,6b170a32-8445-4cb1-8638-724996c3094b,33.0
0e1d2a29-f279-450a-a43d-eec8e650f55f,3b6293f3-03db-46d2-8793-248963c2d83b,144.0
847556ed-23fd-493e-a0b2-f5a49a803248,d20216d8-161c-46e3-b8d2-92208ddf5acf,67.0
c4b06d6c-ba7e-42e0-833d-9bed0f71e3a2,d20216d8-161c-46e3-b8d2-92208ddf5acf,36.0
1832a63a-9460-4476-894f-93d1337bc7f2,820c8f26-cf11-4997-b2e2-19f47bd2f72f,25.0
24bc6f8f-22ec-4d1a-8b2c-fe239baaca18,ad9fce12-6b1a-400c-bcbe-29d84d065fc0,96.0
592204ea-cbdb-46b0-9b94-f6ee74b40e41,612f7f66-1de1-4d42-b842-9a508daab911,47.0
a54b2926-47dd-45f3-973f-3391924963b3,4383eb6a-7fd8-4ff2-94c5-43c933121e88,840.0
04b30276-bb14-4a2e-97b5-8fea8aa8ef0a,ad4bc983-8d2e-4e6f-a8f9-80840a786c64,26.0
279bf10f-e507-4fce-900e-ca2a536e4488,0c0608b3-f349-4f5e-9a10-7e6a744dd0d2,217.0
9bc64a87-00c1-4dde-9164-978d3709ab97,0c0608b3-f349-4f5e-9a10-7e6a744dd0d2,56.0
7a2bbee9-fca1-4883-9789-b57d186bfac0,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,246.0
8e1ce250-680b-4d31-8acc-575b53e41b24,a0a22502-0d84-440c-84af-1fbb070ad54c,43.0
890e444d-be80-4542-ba52-c20c07c9006d,aacdc78d-b7fa-48f6-9686-2fdb8a95030e,166.0
d1a93a29-ac7a-4e7e-9ffe-2b998c42d74b,2f8c85a7-54f4-4942-be16-2cbac77c82d7,28.0
9e1a78de-7360-4854-9f0f-3bd993ab8a2d,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,68.0
93ce74df-00e3-4766-8e48-35b9189768a3,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,47.0
f7cb2a42-099a-4576-a9ea-de9aa89bfc58,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,31.0
f7690658-ae3a-4c86-8d1e-4c55bcf8664f,632616c5-2dbb-4017-a449-c9dfc303f026,37.0
3898a9da-666e-44e3-964b-40335f742503,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,692.0
7c56fc95-0355-4223-bb46-49bf9eb60601,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,438.0
6b0377a1-ef04-415b-b91f-ffbc6de7c208,ca5318f2-48eb-4f6b-896a-966b900aa42f,62.0
d1f0d865-38d9-4fda-bfee-558cb5688a9b,e76479d0-a768-46d2-89bf-7b9dae12bec8,62.0
0e1b0850-26fe-4c28-8369-2f6cccd19a5f,d4dc55b3-94fe-4d4f-b0bf-c50c5f064392,118.0
376bbccd-55ce-407c-95fd-379a623cd2b1,d20216d8-161c-46e3-b8d2-92208ddf5acf,21.0
6d8a3134-2cc3-42c1-9713-f340eeb19ca6,ad9fce12-6b1a-400c-bcbe-29d84d065fc0,42.0
057f915e-607c-4485-ad7f-ae7ce39f287e,612f7f66-1de1-4d42-b842-9a508daab911,128.0
2399d727-b7bf-4969-98d1-5b5f80bef0f8,68a3227f-677f-43b0-9a3a-cad79d0df9e2,254.0
bb6d01d4-37ad-4f5c-a178-faac236f76b6,4fbebf0a-e117-4a0c-8f15-c247535a2a1b,241.0
7e52fc79-092a-4528-a6fb-64b2a806fab6,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,192.0
1c5d0d50-18da-4dd7-9157-91a0810aa7bf,632616c5-2dbb-4017-a449-c9dfc303f026,87.0
09af4b57-39a9-41a8-a63f-2f0eeccde755,632616c5-2dbb-4017-a449-c9dfc303f026,52.0
b931eadd-8439-472e-8817-018a1372e313,1b78e7f6-f25c-4921-98e2-9bc565f8dfb4,45.0
5db407ad-3fcb-4f46-983a-bbc8446fc165,a601205f-3bfe-4052-ac0b-b8f18cf3efd3,68.0
327eec9a-9e85-4d63-be5a-759e8566c90f,912f8837-1d81-4ef9-a576-a21f271d4c64,81.0
a79937f9-925b-4346-ab79-97816187bc70,7888d144-563d-4f84-b99b-d120aecf1fef,204.0
e71023b2-eb60-40c8-8711-fba007d00395,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,104.0
c707835b-2fe7-446a-a041-a3cdcdd3cfaf,0d037a5d-827a-44dd-8b70-57603d671d5d,121.0
3c9f8734-d26d-4a2d-9661-8b41a3d99734,2ed86226-3fff-4083-90fa-6b02307e6f73,17.0
08e1ce45-37d1-43e0-afb5-ab291ced5fcb,150148c2-ca8f-414f-8f41-d94a55d4a122,117.0
fbfe7c2a-d130-4e3a-8d2c-0c8b1e882312,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,34.0
e4f78e12-8b32-4c81-926a-2968390ca3d8,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,33.0
a3973e58-6747-479e-bdb8-9a225cec6b44,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,83.0
568ae791-0950-419c-bc7f-fd6f84f3384e,b47d10b8-a2a5-47df-a2f9-7bd0b9d51beb,55.0
38eeb6b8-e3a0-40f9-9edb-43ce1f9c1e4f,a9f5c9a2-342c-4881-9996-5d5c05ec9bd9,36.0
e51cbf53-d1c0-4c3b-a94d-552ad4bedefd,4af63ebd-d3c8-4772-bbde-938a078bd057,26.0
2f7643a4-824d-4d5e-be38-1165ea6981be,8ddbfca9-a931-4908-aa31-9fcd17624b5f,21.0
ae6c3caa-1aa2-4b67-a2ac-85a548140bcf,a3fef707-e4fc-48a0-82f1-f4ef01b76f45,46.0
e878b4f3-5ef4-439b-8b52-efd8fabb679a,a3fef707-e4fc-48a0-82f1-f4ef01b76f45,45.0
d9adfbf8-f0cc-4303-a615-b4b7ff579879,9fccbf28-2858-4263-821c-fdefb3c7efa3,125.0
7605aaac-9a5f-423c-b6ef-1444d4e7e77b,efba5350-79bc-47aa-a189-db177b95b491,115.0
4290c928-13c8-4aee-8707-5e8e681af8cd,5f9a90a2-392

2025-01-26 22:15:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:15:53 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:53 - root - INFO - SQL:
SELECT "id" AS "team_id", "market"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS"
LIMIT 100
Results:
team_id,market
fe406882-9f22-495e-9df6-ef357a6803c6,Princeton
ca478771-aa3d-4231-81e0-b70f519134fb,Yale
5c7bf63f-bc39-43c5-9907-73b50b7a6b34,Harvard
d60357bd-1205-42e9-9092-d986a2843a34,Dartmouth
88ff8c00-958e-4ccf-a21d-77fab9e93692,Cornell
ca74bd67-034c-4468-8487-6f983f5eb4f6,Columbia
558abf02-97f4-4323-aa99-63c076d35932,Brown
e6c94452-1adf-4fb9-90e5-10f165c57c5a,Pennsylvania
8ab00d43-840a-4c96-bdee-bf88fa6e3f11,Oklahoma State
6ed15092-2670-450a-99c2-61d861e87644,Texas
f8c705b7-87d3-411a-9c8b-5124daab0469,Texas Tech
db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor
0e4258fa-3154-4c16-b693-adecab184c6c,Iowa State
f7fcbb6e-4a55-41ea-ba21-f763ed914467,TCU
b2fda957-e15c-4fb2-8a13-6e58496f561e,Oklahoma
f770d3a2-221c-49ce-9c7a-680f7417fe9e,West Virginia
fae4855b-1b64-4b40-a632-9ed345e1e952,Kansas
d203f38a-a166-4258-bca2-e161b591ecfb,Kansas State
7e42fa84-68cd-47a6-b49a-18b5414d8084,Northern Colorado
de8fc8a7-253f-4597-8a48-a0104ef226ae,North Dakota
6a67ba19-56a8-4dd8-a5ae-9e9f2523c274,Idaho State
54df21af-8f65-42fc-bc01-8bf750856d70,Eastern Washington
c7116621-45ed-4ab1-9ad9-dee524120569,Southern Utah
4743cb7c-784a-4b95-a380-5471f92f2217,Weber State
1753768d-e46e-40b1-8d69-a8ae5cccec03,Northern Arizona
1dc13b18-f9b3-4bb9-b1cf-979fcd8c2b6f,Sacramento State
ec6185b7-4e0c-4eb8-99ef-f3a4dccf6b91,Idaho
79965018-7f6f-4273-9eef-65c99b592b01,Portland State
bec40585-b587-4548-93f5-b7c00b046aea,Montana State
e3848467-66c0-41e5-8283-02e3586d8601,Montana
f8b1bf00-5b73-4ac4-98c0-ec554027ae32,Nebraska
b03bb029-4499-4a2c-9074-5071ed360b21,Rutgers
150148c2-ca8f-414f-8f41-d94a55d4a122,Illinois
c7569eae-5b93-4197-b204-6f3a62146b25,Wisconsin
2778d005-cc14-4e58-9bf2-3fc37bffb62f,Maryland
a41d5a05-4c11-4171-a57e-e7a1ea325a6d,Michigan State
12d7f888-675b-459f-9099-a38f771d8a95,Purdue
c10544de-e3bd-4776-ba2e-83df8c017fd1,Iowa
857462b3-0ab6-4d26-9669-10ca354e382b,Ohio State
fa416692-7e09-4f0a-9bcf-0cf7d5149a14,Minnesota
4aebd148-8119-4875-954c-66779867989b,Penn State
bdc2561d-f603-4fab-a262-f1d2af462277,Michigan
4b7dedc0-7b48-49a4-aad6-8a94a33274d2,Northwestern
c3f0a8ce-af67-497f-a750-3b859376b20a,Indiana
9c396fa7-c165-4599-8542-158bd0d9a199,Wright State
90ec10eb-38a4-4a69-b072-ef71d294933b,IUPUI
da7d41bc-48b0-4a04-948f-792d6470bcb5,Youngstown State
61a3e5ab-1be3-4694-b83f-edae0953f409,Green Bay
dfe0d93f-94a5-47fb-b7aa-f74786e09acb,Illinois-Chicago
ab9a1315-293f-42d3-a164-860216e81576,Northern Kentucky
1b78e7f6-f25c-4921-98e2-9bc565f8dfb4,Detroit
e30c0417-b220-424e-886e-dd1249e2ca5a,Cleveland State
aeaaef0d-5238-414e-ac04-c55a22cba208,Oakland
5d77800f-1ae6-4b66-8e97-b0dbb8bbc717,Milwaukee
06f7c904-0ac7-4125-b0f4-f4871bb69057,Marquette
aef5e386-d8e8-460c-8014-3a2f090fd988,Seton Hall
bdb7d7a4-45f8-4bf3-ab85-15488c451494,Butler
7d3b9c72-cbdd-4b64-9aa3-a5bde9b75fdc,Providence
ee09e6ad-3872-4745-bbb9-ebbd5c6f8318,DePaul
c1f4aae1-aa16-4095-aeab-10e5c2a1236a,St. John's
7d797407-623e-476d-b299-46de4275414d,Creighton
4383eb6a-7fd8-4ff2-94c5-43c933121e88,Villanova
8736b67f-5924-400b-bf94-3bd804c36600,Georgetown
0d8a328f-20ce-410b-bed1-15fc01308aaf,Xavier
8aaad1c0-d16e-4b9f-8541-dac670addd71,UC Davis
45439cdb-af7a-4743-936c-dccc76b30877,Cal Poly
c009914b-3303-4dee-b915-978aa48a31d0,Cal State Fullerton
11a617d5-af03-4cce-bc8a-51114d9e41fe,Long Beach State
3b6293f3-03db-46d2-8793-248963c2d83b,UC Santa Barbara
39d00ef7-320d-47cf-a2fa-859bc24d16b4,UC Irvine
d4dc55b3-94fe-4d4f-b0bf-c50c5f064392,Hawaii
6b170a32-8445-4cb1-8638-724996c3094b,UC Riverside
cb732075-23a5-4e71-9037-50a7a002bdb2,Cal State Northridge
8accb91e-6086-41b3-a420-7a82fa442365,Elon
ad24b724-a11c-4dcd-a68c-67c53833ccb7,William & Mary
0affc15f-641d-4211-970d-fb9fb8d36842,Delaware
36ca2008-cd2e-4549-8b3b-c745167e07f3,Hofstra
6f3eec09-2918-4739-a0e8-5d79e14a8332,Towson
8548dacb-3636-48a8-8c46-611ab0c15fc0,Charleston
c54279f9-3028-4663-893a-7d22482f8098,North Carolina-Wilmington
93df9b18-e9fc-42a7-bb45-a736c203b4dc,Northeastern
f2d01b77-0f5d-4574-9e49-2a3eaf822e44,Drexel
524e3eec-7dde-45c7-b3cc-6308cec73350,James Madison
c13f96ba-c79c-452f-9f63-3b45fae4e543,Samford
4c9fb59b-6cec-4b0d-bb0f-628b391d138c,Chattanooga
6bff595c-32cb-4028-837c-c7de2a2107e6,Western Carolina
612f7f66-1de1-4d42-b842-9a508daab911,UNC Greensboro
d750d88f-f7b8-4bc3-a5f6-36e7a67ec93e,East Tennessee State
412e7f0d-fb93-4e6e-be1f-9a4c7490d121,Citadel
ca5318f2-48eb-4f6b-896a-966b900aa42f,Furman
a14b0057-8eb5-43d2-a33b-666196da933e,Mercer
227d3567-d57b-417e-afc4-735e4cb308a1,Virginia Military
9916713f-b243-452b-93ae-a2c3ccabf68b,Wofford
0dadedb0-2bd3-45e7-91a3-93af6c4e87f2,Arkansas-Little Rock
4af63ebd-d3c8-4772-bbde-938a078bd057,Coastal Carolina
87d88c93-29bc-4306-b0a6-87c6f6e80da1,Appalachian State
7c2b372b-b5f0-466e-90cf-880beec57584,Texas-Arlington
18585f21-1d63-4400-974c-433fd5073c34,Louisiana-Monroe
94ea835b-8ce9-4de2-a5b1-971548fea974,Georgia State
95826e36-ea33-4b51-83a8-7b4cc20999ee,Arkansas State

2025-01-26 22:15:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:15:54 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:55 - root - INFO - SQL:
SELECT P."player_id", P."team_id", T."market", SUM(P."points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
WHERE P."season" BETWEEN 2010 AND 2018
  AND P."period" = 2
  AND P."points_scored" IS NOT NULL
GROUP BY P."player_id", P."team_id", T."market"
HAVING SUM(P."points_scored") >= 15
LIMIT 100
Results:
Too long, hard cut:
player_id,team_id,market,total_points
847873b9-124f-4957-8c43-24187cfb20d3,7d3b9c72-cbdd-4b64-9aa3-a5bde9b75fdc,Providence,628.0
85a9e678-ac3c-4be6-be75-5b90e5aaeadd,7672ff16-8436-47e6-8546-0fb5494ec7ee,Utah State,520.0
75e06363-9dd7-48bf-9f0a-b37c46b1f5b2,df3da9d7-2d2b-44e2-99e2-08c4945a203b,Valparaiso,66.0
07e3ab2a-247b-436e-ad79-eab9afcc355b,72971b77-1d35-40b3-bb63-4c5b29f3d22b,Vanderbilt,646.0
244db3e8-2f73-4003-b12d-16fcc2ccadc1,efba5350-79bc-47aa-a189-db177b95b491,Connecticut,98.0
8ecd67f7-5ec5-4710-8576-974d8cead36b,1e42cce3-236b-4f3e-9650-2c45e6332e1e,Saint Louis,97.0
5b0f4704-80be-4a55-b114-24ac1e1731b4,28023973-1d9d-4d01-b939-dc8f9b44fb1c,Santa Clara,776.0
25e10dc7-e4dc-4b8d-97d4-937ba0b01c3f,dd8db4d8-d984-4cab-b7f6-22c6b8c2c45f,Fresno State,123.0
a0928e1b-5881-4153-bccc-82147be78ad9,e76479d0-a768-46d2-89bf-7b9dae12bec8,George Mason,300.0
4457e431-fabd-4388-a143-ef0a2b5f7d2d,0f63a6f5-bda7-4fd9-9271-8d33f555ca19,Georgia Tech,387.0
40c39549-a9f5-406d-aa24-7d0f2f6a6786,0f63a6f5-bda7-4fd9-9271-8d33f555ca19,Georgia Tech,135.0
ee18b078-e778-4c0e-b561-ca18d32af15b,0f63a6f5-bda7-4fd9-9271-8d33f555ca19,Georgia Tech,18.0
079c8c63-c066-4ff2-9b63-656541633a08,fb28bd56-9e56-40c1-992d-71c1e27fe4fd,Jacksonville,30.0
545369e0-8820-4702-9dee-850c86cb7b9a,d203f38a-a166-4258-bca2-e161b591ecfb,Kansas State,59.0
796381b4-45cc-49ca-9809-ae23726767da,576b816b-5b9a-4768-a62b-f8435a8272c2,Morgan State,22.0
ffedc068-dd55-4ab8-95e1-c44b477f6a35,de8fc8a7-253f-4597-8a48-a0104ef226ae,North Dakota,15.0
43f3d550-d3ab-49e5-b031-1191999deec6,4b7dedc0-7b48-49a4-aad6-8a94a33274d2,Northwestern,173.0
fdb3481a-f528-4a21-bad0-93d5a2994ff3,ce967953-5c50-4220-87b2-99acb9606e84,Old Dominion,53.0
363e8522-1170-49ac-b378-42763d266798,532d3874-b4b3-4c5c-acc6-749a6db26c8f,Oregon State,108.0
53425201-ccee-41f4-a800-e7937b858f06,b06b63b0-20e6-4c78-bdcf-5feac3d7995e,Presbyterian,15.0
d8fb6de6-0006-4365-9546-72347c35d360,7e42bca2-3cd7-4aca-aa46-f190fe5d8eb4,Rhode Island,87.0
f7ceea4b-be11-4eca-a282-54cca186de01,9c396fa7-c165-4599-8542-158bd0d9a199,Wright State,41.0
b644bd2b-4354-423f-b71a-b5906cdf4c31,ad4bc983-8d2e-4e6f-a8f9-80840a786c64,Arizona State,79.0
9bd565d2-5908-4775-84fc-108397c003d1,dd8db4d8-d984-4cab-b7f6-22c6b8c2c45f,Fresno State,33.0
eb0921de-1c84-475b-8d2e-75dcc790f05a,3556d445-b3f1-467e-b150-952b32dfb150,Sacred Heart,69.0
d991c56b-2c47-40bf-9e46-7000403a3a49,3556d445-b3f1-467e-b150-952b32dfb150,Sacred Heart,61.0
bf403c06-ce4b-4672-ad1f-7ea96ff31154,ce967953-5c50-4220-87b2-99acb9606e84,Old Dominion,74.0
6da39e95-b307-427d-84c8-9f8d4a80bf3e,2959bd24-7007-41ae-a3a3-abdf26888cfc,Tulsa,203.0
02111dee-eb45-4c6d-80e3-a4dd5ee70c20,2959bd24-7007-41ae-a3a3-abdf26888cfc,Tulsa,27.0
2112b082-11a2-44a7-881e-df5775eba43a,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor,348.0
81c59bb5-446d-40d3-9e5f-21acce7e3751,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor,209.0
eb7b019e-5bd9-4ce4-9218-8b3fc0190c51,632616c5-2dbb-4017-a449-c9dfc303f026,Dayton,97.0
fc1571ea-9123-4a52-92fe-362abd488aba,ca5318f2-48eb-4f6b-896a-966b900aa42f,Furman,94.0
f3e56ca1-6e1a-4339-b479-80d765bb787c,a14b0057-8eb5-43d2-a33b-666196da933e,Mercer,20.0
f8312103-5c78-4b5f-8024-5ccf79903eb0,1da70895-f77f-44ef-b216-d63c02e696eb,Oregon,141.0
5786e861-0ab1-4827-9c82-0cbff61446c5,8598d1b6-106b-4083-a512-2e495729525a,Temple,268.0
b076d524-a708-4e7e-9df8-2803c54d1c2e,6f3eec09-2918-4739-a0e8-5d79e14a8332,Towson,31.0
d5ebfde0-0b85-4f8f-ba9a-1108bf28cfba,399ad7fb-de60-45a6-a71f-d26e00f1a4ec,Tulane,75.0
fdd2e219-7ad1-4da8-8dae-c640ad459959,399ad7fb-de60-45a6-a71f-d26e00f1a4ec,Tulane,59.0
52aa60ad-3aef-4bfc-bedc-a7e55bc400b0,c2104cdc-c83d-40d2-a3cd-df986e29f5d3,Alabama,349.0
cee31184-ef48-4ab6-bf9c-e93681a1754e,a9f5c9a2-342c-4881-9996-5d5c05ec9bd9,Buffalo,79.0
72e71da3-0a63-4bd4-aa92-079893a5afc0,412e7f0d-fb93-4e6e-be1f-9a4c7490d121,Citadel,24.0
74fb8786-680f-443e-8b98-c253162a8942,dcf5c2e7-c227-4c20-af26-715d5f859412,Clemson,420.0
9d9593f3-29dc-47ee-9c0f-bf592964a416,dcf5c2e7-c227-4c20-af26-715d5f859412,Clemson,241.0
69c664f1-aa08-4257-a846-c0072f6fa655,80a19b57-d6ab-4bee-934f-33a72c2e958a,Colgate,20.0
26dc8de0-f715-443e-aaaf-b59a5828f0c6,1b78e7f6-f25c-4921-98e2-9bc565f8dfb4,Detroit,34.0
385e9ead-7d6a-4f28-a74e-d5dc9d3c2369,912f8837-1d81-4ef9-a576-a21f271d4c64,Florida,579.0
17b1dec0-92f4-4378-a83a-fef2f5409e9d,2f4d21f8-6d5f-48a5-abca-52a30583871a,Gonzaga,196.0
c5d8a7ab-a34b-45ee-9541-a80119c2b87f,2f4d21f8-6d5f-48a5-abca-52a30583871a,Gonzaga,66.0
2cd9b23a-c7ed-4f10-864c-d7e9a32283c3,9b166a3f-e64b-4825-bb6b-92c6f0418263,Arizona,269.0
3ed1ecc1-5d66-4c43-8380-8e948bbb0f9f,5c7bf63f-bc39-43c5-9907-73b50b7a6b34,Harvard,23.0
2e37f124-2483-410c-b167-fadf60b81df0,36ca2008-cd2e-4549-8b3b-c745167e07f3,Hofstra,15.0
ec7266dd-6aea-4c87-a131-6e5ab249e277,1f99a164-d593-4d81-85d5-0d7889d6f486,Houston,398.0
f84591cb-bbc8-405e-b596-de596de621b6,c3f0a8ce-af67-497f-a750-3b859376b20a,Indiana,123.0
a28f01f8-028a-406f-bced-0643fab4d09a,7e100f63-0b32-49f6-a954-f5b7c8cf48ad,Seattle,38.0
5513f213-8e65-41c6-af9b-b9b74dfc1be7,18e898

2025-01-26 22:15:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:15:56 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:57 - root - INFO - SQL:
SELECT T."market", COUNT(DISTINCT P."player_id") AS "num_players"
FROM (
  SELECT "player_id", "team_id"
  FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
  WHERE "season" BETWEEN 2010 AND 2018
    AND "period" = 2
    AND "points_scored" IS NOT NULL
  GROUP BY "player_id", "team_id"
  HAVING SUM("points_scored") >= 15
) P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
GROUP BY T."market"
ORDER BY "num_players" DESC
LIMIT 100
Results:
market,num_players
Memphis,38
South Florida,34
Missouri,33
UNLV,33
Duke,32
Texas A&M,32
Kentucky,32
Oregon,32
DePaul,32
Louisville,32
Indiana,32
Houston,31
Boston College,31
Rutgers,31
BYU,31
Arizona,31
Florida,31
Connecticut,30
Auburn,30
Creighton,30
Alabama,30
Georgia Tech,30
Wichita State,30
New Mexico,30
Arizona State,30
Utah,30
Kansas,29
Gonzaga,29
California,29
Butler,29
Maryland,29
Ohio State,29
St. John's,29
Loyola Marymount,29
South Carolina,29
Virginia Tech,29
Florida State,28
Iowa,28
LSU,28
Michigan State,28
Pittsburgh,28
Oregon State,28
Texas Tech,28
Marquette,28
San Diego State,28
Oklahoma State,28
Saint Louis,28
San Jose State,28
Michigan,28
Illinois,28
Cincinnati,27
Colorado,27
West Virginia,27
North Carolina,27
Wake Forest,27
Tennessee,27
Mississippi State,27
Arkansas,27
Miami (FL),27
Massachusetts,27
Washington,27
Ole Miss,27
Duquesne,26
Portland,26
USC,26
Air Force,26
Texas,26
Kansas State,26
Minnesota,26
Georgetown,26
Nebraska,26
Syracuse,26
UCF,26
North Carolina State,26
Washington State,26
Virginia Commonwealth,26
Indiana State,26
East Carolina,26
Illinois State,25
Long Beach State,25
Seton Hall,25
SMU,25
Vanderbilt,25
Texas Southern,25
George Washington,25
Xavier,25
Oklahoma,25
Clemson,25
Boise State,25
Missouri State,25
San Francisco,25
TCU,25
Purdue,24
Stanford,24
Colorado State,24
Dayton,24
UCLA,24
Providence,24
Baylor,24
Pacific,24

2025-01-26 22:15:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:15:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 22:15:58 - snowflake.connector.connection - INFO - closed
2025-01-26 22:15:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:15:59 - root - INFO - SQL:
SELECT T."market", COUNT(DISTINCT P."player_id") AS "num_players"
FROM (
  SELECT "player_id", "team_id"
  FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
  WHERE "season" BETWEEN 2010 AND 2018
    AND "period" = 2
    AND "points_scored" IS NOT NULL
  GROUP BY "player_id", "team_id"
  HAVING SUM("points_scored") >= 15
) P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
GROUP BY T."market"
ORDER BY "num_players" DESC
LIMIT 5
Results:
market,num_players
Memphis,38
South Florida,34
UNLV,33
Missouri,33
Indiana,32

2025-01-26 22:15:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:15:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:15:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:16:00 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:00 - root - INFO - SQL:
SELECT "season", "round", "game_date", "win_market", "win_name", "win_seed", "win_pts",
       "lose_market", "lose_name", "lose_seed", "lose_pts", "num_ot"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND ("win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
       OR "lose_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova'))
LIMIT 100
Results:
Too long, hard cut:
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2011,8,2011-03-27,Virginia Commonwealth,Rams,11,71,Kansas,Jayhawks,01,61,0
2014,64,2014-03-21,Mercer,Bears,14,78,Duke,Blue Devils,03,71,0
2017,8,2017-03-25,Oregon,Ducks,03,74,Kansas,Jayhawks,01,60,0
2016,16,2016-03-24,Oregon,Ducks,01,82,Duke,Blue Devils,04,68,0
2010,32,2010-03-20,Saint Mary's,Gaels,10,75,Villanova,Wildcats,02,68,0
2017,32,2017-03-18,Wisconsin,Badgers,08,65,Villanova,Wildcats,01,62,0
2015,16,2015-03-26,Wisconsin,Badgers,01,79,North Carolina,Tar Heels,04,72,0
2015,4,2015-04-04,Wisconsin,Badgers,01,71,Kentucky,Wildcats,01,64,0
2014,2,2014-04-07,Connecticut,Huskies,07,60,Kentucky,Wildcats,08,54,0
2014,32,2014-03-22,Connecticut,Huskies,07,77,Villanova,Wildcats,02,65,0
2011,4,2011-04-02,Connecticut,Huskies,03,56,Kentucky,Wildcats,04,55,0
2014,32,2014-03-23,Stanford,Cardinal,10,60,Kansas,Jayhawks,02,57,0
2014,32,2014-03-23,Iowa State,Cyclones,03,85,North Carolina,Tar Heels,06,83,0
2016,32,2016-03-19,Indiana,Hoosiers,05,73,Kentucky,Wildcats,04,67,0
2012,64,2012-03-16,Kansas,Jayhawks,02,65,Detroit,Titans,15,50,0
2012,32,2012-03-18,Kansas,Jayhawks,02,63,Purdue,Boilermakers,10,60,0
2012,4,2012-03-31,Kansas,Jayhawks,02,64,Ohio State,Buckeyes,02,62,0
2014,64,2014-03-21,Kansas,Jayhawks,02,80,Eastern Kentucky,Colonels,15,69,0
2013,32,2013-03-24,Kansas,Jayhawks,01,70,North Carolina,Tar Heels,08,58,0
2012,8,2012-03-25,Kansas,Jayhawks,02,80,North Carolina,Tar Heels,01,67,0
2012,16,2012-03-23,Kansas,Jayhawks,02,60,North Carolina State,Wolfpack,11,57,0
2013,64,2013-03-22,Kansas,Jayhawks,01,64,Western Kentucky,Hilltoppers,16,57,0
2015,64,2015-03-20,Kansas,Jayhawks,02,75,New Mexico State,Aggies,15,56,0
2010,64,2010-03-18,Kansas,Jayhawks,01,90,Lehigh,Mountain Hawks,16,74,0
2017,64,2017-03-17,Kansas,Jayhawks,01,100,UC Davis,Aggies,16,62,0
2017,32,2017-03-19,Kansas,Jayhawks,01,90,Michigan State,Spartans,09,70,0
2016,16,2016-03-24,Kansas,Jayhawks,01,79,Maryland,Terrapins,05,63,0
2016,32,2016-03-19,Kansas,Jayhawks,01,73,Connecticut,Huskies,09,61,0
2017,16,2017-03-23,Kansas,Jayhawks,01,98,Purdue,Boilermakers,04,66,0
2016,64,2016-03-17,Kansas,Jayhawks,01,105,Austin Peay,Governors,16,79,0
2011,16,2011-03-25,Kansas,Jayhawks,01,77,Richmond,Spiders,12,57,0
2011,64,2011-03-18,Kansas,Jayhawks,01,72,Boston University,Terriers,16,53,0
2011,32,2011-03-20,Kansas,Jayhawks,01,73,Illinois,Fighting Illini,09,59,0
2010,32,2010-03-20,Northern Iowa,Panthers,09,69,Kansas,Jayhawks,01,67,0
2011,64,2011-03-18,George Mason,Patriots,08,61,Villanova,Wildcats,09,57,0
2015,32,2015-03-22,Wichita State,Shockers,07,78,Kansas,Jayhawks,02,65,0
2011,16,2011-03-24,Arizona,Wildcats,05,93,Duke,Blue Devils,01,77,0
2011,32,2011-03-19,Kentucky,Wildcats,04,71,West Virginia,Mountaineers,05,63,0
2016,64,2016-03-17,Kentucky,Wildcats,04,85,Stony Brook,Seawolves,13,57,0
2010,16,2010-03-25,Kentucky,Wildcats,01,62,Cornell,Big Red,12,45,0
2010,32,2010-03-20,Kentucky,Wildcats,01,90,Wake Forest,Demon Deacons,09,60,0
2011,8,2011-03-27,Kentucky,Wildcats,04,76,North Carolina,Tar Heels,02,69,0
2011,64,2011-03-17,Kentucky,Wildcats,04,59,Princeton,Tigers,13,57,0
2011,16,2011-03-25,Kentucky,Wildcats,04,62,Ohio State,Buckeyes,01,60,0
2010,64,2010-03-18,Kentucky,Wildcats,01,100,East Tennessee State,Buccaneers,16,71,0
2015,64,2015-03-19,Kentucky,Wildcats,01,79,Hampton,Pirates,16,56,0
2014,8,2014-03-30,Kentucky,Wildcats,08,75,Michigan,Wolverines,02,72,0
2012,64,2012-03-15,Kentucky,Wildcats,01,81,Western Kentucky,Hilltoppers,16,66,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2012,16,2012-03-23,Kentucky,Wildcats,01,102,Indiana,Hoosiers,04,90,0
2012,32,2012-03-17,Kentucky,Wildcats,01,87,Iowa State,Cyclones,08,71,0
2012,2,2012-04-02,Kentucky,Wildcats,01,67,Kansas,Jayhawks,02,59,0
2015,16,2015-03-26,Kentucky,Wildcats,01,78,West Virginia,Mountaineers,05,39,0
2012,8,2012-03-25,Kentucky,Wildcats,01,82,Baylor,Bears,03,70,0
2014,32,2014-03-23,Kentucky,Wildcats,08,78,Wichita State,Shockers,01,76,0
2015,32,2015-03-21,Kentucky,Wildcats,01,64,Cincinnati,Bearcats,08,51,0
2014,4,2014-04-05,Kentucky,Wildcats,08,74,Wisconsin,Badgers,02,73,0
2015,8,2015-03-28,Kentucky,Wildcats,01,68,Notre Dame,Fighting Irish,03,66,0
2014,64,2014-03-21,Kentucky,Wildcats,08,56,Kansas State,Wildcats,09,49,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2017,64,2017-03-17,Kentucky,Wildcats,02,79,Northern Kentucky,Norse,15,70,0
2017,32,2017-03-19,Kentucky,Wildcats,02,65,Wichita State,Shockers,10,62,0
2017,16,2017-03-24,Kentucky,Wildcats,02,86,UCLA,Bruins,03,75,0
2014,64,2014-03-20,Villanova,Wildcats,02,73,Milwaukee,Panthers,15,53,0
2015,64,2015-03-19,Villanova,Wildcats,01,93,Lafayette,Leopards,16,52,0
2017,64,2017-03-16,Villanova,Wildcats,01,76,Mount St. Mary's,Mountaineers,16,56,0
2010,64,2010-03-18,Villanova,Wildcats,02,73,Robert Morris,Colonials,15,70,1
2016,16,2016-03-24,Villanova,Wildcats,02,92,Miami (FL),Hurricanes,03,69,0
2016,4,2016-04-02,Villanova,Wi

2025-01-26 22:16:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 22:16:02 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:02 - root - INFO - SQL:
SELECT "win_market" AS "market", COUNT(*) AS "wins"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND "win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
GROUP BY "win_market"
LIMIT 100
Results:
market,wins
Kansas,19
Villanova,10
North Carolina,21
Duke,20
Kentucky,26

2025-01-26 22:16:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 22:16:03 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:04 - root - INFO - SQL:
SELECT "lose_market" AS "market", COUNT(*) AS "losses"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND "lose_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
GROUP BY "lose_market"
LIMIT 100
Results:
market,losses
Kansas,8
Duke,6
Villanova,6
North Carolina,6
Kentucky,6

2025-01-26 22:16:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:05 - snowflake.connector.cursor - INFO - Number of results in first chunk: 26
2025-01-26 22:16:05 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:06 - root - INFO - SQL:
SELECT *
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND ("win_market" = 'Duke' OR "lose_market" = 'Duke')
LIMIT 100
Results:
Too long, hard cut:
season,round,days_from_epoch,game_date,day,win_seed,win_region,win_market,win_name,win_alias,win_team_id,win_school_ncaa,win_code_ncaa,win_kaggle_team_id,win_pts,lose_seed,lose_region,lose_market,lose_name,lose_alias,lose_team_id,lose_school_ncaa,lose_code_ncaa,lose_kaggle_team_id,lose_pts,num_ot,academic_year
2014,64,16150,2014-03-21,Friday,14,Y,Mercer,Bears,MER,a14b0057-8eb5-43d2-a33b-666196da933e,Mercer,406,1273,78,03,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,71,0,2013
2016,16,16884,2016-03-24,Thursday,01,Z,Oregon,Ducks,ORE,1da70895-f77f-44ef-b216-d63c02e696eb,Oregon,529,1332,82,04,Z,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,0,2015
2011,16,15057,2011-03-24,Thursday,05,X,Arizona,Wildcats,ARIZ,9b166a3f-e64b-4825-bb6b-92c6f0418263,Arizona,29,1112,93,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,77,0,2010
2013,8,15795,2013-03-31,Sunday,01,Y,Louisville,Cardinals,LOU,b795ddbc-baab-4499-8803-52e8608520ab,Louisville,367,1257,85,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,63,0,2012
2017,32,17244,2017-03-19,Sunday,07,W,South Carolina,Gamecocks,SCAR,1c7ec608-3b36-4cee-adac-9265e3792597,South Carolina,648,1376,88,02,W,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,81,0,2016
2017,64,17242,2017-03-17,Friday,02,W,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,87,15,W,Troy,Trojans,TROY,6373b18c-62f6-49bc-bd4c-8959a2466516,Troy,716,1407,65,0,2016
2010,4,14702,2010-04-03,Saturday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,78,02,W,West Virginia,Mountaineers,WVU,f770d3a2-221c-49ce-9c7a-680f7417fe9e,West Virginia,768,1452,57,0,2009
2010,8,14696,2010-03-28,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,78,03,X,Baylor,Bears,BAY,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor,51,1124,71,0,2009
2010,64,14687,2010-03-19,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,73,16,X,Arkansas-Pine Bluff,Golden Lions,ARPB,1394dd8a-040e-4509-9ee3-761d60eaf6c9,Ark.-Pine Bluff,2678,1115,44,0,2009
2015,64,16514,2015-03-20,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,85,16,X,Robert Morris,Colonials,RMU,6906e22d-92fa-40cb-8c05-ec8391ac1979,Robert Morris,579,1352,56,0,2014
2015,2,16531,2015-04-06,Monday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,01,Z,Wisconsin,Badgers,WIS,c7569eae-5b93-4197-b204-6f3a62146b25,Wisconsin,796,1458,63,0,2014
2011,32,15053,2011-03-20,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,73,08,X,Michigan,Wolverines,MICH,bdc2561d-f603-4fab-a262-f1d2af462277,Michigan,418,1276,71,0,2010
2011,64,15051,2011-03-18,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,87,16,X,Hampton,Pirates,HAMP,161354af-1f3e-4d58-88f7-e016ec74b7b6,Hampton,270,1214,45,0,2010
2015,16,16521,2015-03-27,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,63,05,X,Utah,Utes,UTAH,0d037a5d-827a-44dd-8b70-57603d671d5d,Utah,732,1428,57,0,2014
2010,2,14704,2010-04-05,Monday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,61,05,Z,Butler,Bulldogs,BUT,bdb7d7a4-45f8-4bf3-ab85-15488c451494,Butler,87,1139,59,0,2009
2015,8,16523,2015-03-29,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,66,02,X,Gonzaga,Bulldogs,GONZ,2f4d21f8-6d5f-48a5-abca-52a30583871a,Gonzaga,260,1211,52,0,2014
2010,16,14694,2010-03-26,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,70,04,X,Purdue,Boilermakers,PUR,12d7f888-675b-459f-9099-a38f771d8a95,Purdue,559,1345,57,0,2009
2015,4,16529,2015-04-04,Saturday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,81,07,W,Michigan State,Spartans,MSU,a41d5a05-4c11-4171-a57e-e7a1ea325a6d,Michigan St.,416,1277,61,0,2014
2010,32,14689,2010-03-21,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,08,X,California,Golden Bears,CAL,aacdc78d-b7fa-48f6-9686-2fdb8a95030e,California,107,1143,53,0,2009
2015,32,16516,2015-03-22,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,08,X,San Diego State,Aztecs,SDSU,e6914f16-ca37-4d2e-ba26-a425910283e2,San Diego St.,626,1361,49,0,2014
2013,16,15793,2013-03-29,Friday,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,71,03,Y,Michigan State,Spartans,MSU,a41d5a05-4c11-4171-a57e-e7a1ea325a6d,Michigan St.,416,1277,61,0,2012
2013,32,15788,2013-03-24,Sunday,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,66,07,Y,Creighton,Bluejays,CREI,7d797407-623e-476d-b299-46de4275414d,Creighton,169,1166,50,0,2012
2013,64,15786,2013-03-22,Friday,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,73,1

2025-01-26 22:16:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-26 22:16:07 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:07 - root - INFO - SQL:
SELECT DISTINCT "period"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
ORDER BY "period"
LIMIT 100
Results:
period
1
2
3
4
5
6

2025-01-26 22:16:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:16:09 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:09 - root - INFO - SQL:
SELECT "player_id", "team_id", "game_id", SUM("points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
  AND "points_scored" IS NOT NULL
GROUP BY "player_id", "team_id", "game_id"
ORDER BY "total_points" DESC
LIMIT 100
Results:
Too long, hard cut:
player_id,team_id,game_id,total_points
d4d53ad5-655a-4c88-837b-afa6e5ae9fc9,2e78bd1b-9422-491e-9c73-37cf83b0e34e,ac13a14d-4eda-47b4-aa82-f80ff90283f2,76.0
0735961f-232c-4450-bbeb-b84d59bc7453,5326c079-3dc3-468f-a601-b776dd9c1e62,ac13a14d-4eda-47b4-aa82-f80ff90283f2,68.0
b90176bc-63b9-49ad-b287-9ca61302d110,5326c079-3dc3-468f-a601-b776dd9c1e62,ac13a14d-4eda-47b4-aa82-f80ff90283f2,56.0
f742a972-f959-4815-aaa6-aaba293ed1d3,2f513e67-f019-4eec-9096-fbc5911858b6,7312a6f6-856f-48ec-81bb-a4541aa4a71e,52.0
47c237c7-7728-4cc3-a486-289dabca1faf,175d34a7-3823-4e4f-9f11-2464f55360b8,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,39.0
df8a5c72-69a9-484b-8fe3-4f821bf8acd4,2c93a75d-5449-4ec1-9ca2-1e6c812399a4,feeaa502-96e7-4a93-9e2d-4f2b8b4689b5,38.0
77f85d65-59e1-4c9e-857d-c80a133d6e7c,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,36.0
ab91866d-c1f9-4d72-a50b-e58988c338c4,fb28bd56-9e56-40c1-992d-71c1e27fe4fd,ba9383fd-a4de-4c20-9595-ab04b1fc6a5f,34.0
7562426d-f08f-44d4-b171-ef3e97910480,6af02334-9ac3-452f-bcf4-20abdb72bd07,7312a6f6-856f-48ec-81bb-a4541aa4a71e,34.0
ae6c3fca-f2f0-49c7-b927-a98f8af08d22,ce967953-5c50-4220-87b2-99acb9606e84,063a38ce-5516-4247-8a89-a6398c063a23,34.0
2951ee11-6120-4e95-950f-52818acf5251,0e4258fa-3154-4c16-b693-adecab184c6c,90e2ef56-83b5-4e66-8f41-8c6429fd5f71,33.0
1139221c-44ac-4b46-a64e-b990bd0505d3,62a73b4a-e281-4483-a1f8-f1160a18e456,6d285c73-f067-4792-92de-52d360e162ea,32.0
f2c0f7ae-5e2c-4f45-98a4-c22c15e07960,5326c079-3dc3-468f-a601-b776dd9c1e62,ac13a14d-4eda-47b4-aa82-f80ff90283f2,32.0
4e2c5570-a16a-4ed0-ba7c-eef828a0513e,24051034-96bb-4f78-a3a6-312f3258780f,f12c2304-4511-402c-af59-e24cdd03301b,32.0
af105cc4-0052-463f-aebb-94ab7a13ec54,2e78bd1b-9422-491e-9c73-37cf83b0e34e,ac13a14d-4eda-47b4-aa82-f80ff90283f2,32.0
7a46a298-55ff-4055-b179-d4d262d35441,2778d005-cc14-4e58-9bf2-3fc37bffb62f,677fa792-4cd0-4c48-8a8c-dfd36e7cd603,32.0
90aa6a86-ae8d-484f-9f35-e8fdd18e978f,62a73b4a-e281-4483-a1f8-f1160a18e456,dfa7ee21-0448-45eb-bceb-494c1d00cdf5,32.0
3251f5cb-f4b5-4d07-a60b-9dc3b8e4b511,06f7c904-0ac7-4125-b0f4-f4871bb69057,7df7c4f4-6296-4de6-a2d3-526be09bbbfe,32.0
8b92d620-b89b-4119-ad6a-98d40e6ab15b,b2fda957-e15c-4fb2-8a13-6e58496f561e,08717055-1ab0-444a-b50a-2c267636afce,31.0
64e44f73-7cd1-42bc-a1c4-93ed243bfa01,c2104cdc-c83d-40d2-a3cd-df986e29f5d3,ce87a9d6-428d-49cc-b07b-de9b8d4e46f3,31.0
cd5a0cd9-576c-4498-be8e-e25a83f75b5f,52df1e19-b142-4a76-a439-ad68455d0581,eb205560-6489-4d8a-a394-a753b8c1cdde,30.0
8ca8f29f-5ee6-46e4-ad34-9d31d5010e74,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,30.0
04697d6c-fc52-487d-9f20-fe20645a49ac,175d34a7-3823-4e4f-9f11-2464f55360b8,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,30.0
c08134d3-d9aa-4baf-922b-e0a1a884928c,2e8442e9-bd09-4d46-9dd3-de79433287f3,ba9383fd-a4de-4c20-9595-ab04b1fc6a5f,30.0
ca131f44-bfeb-4ebf-a8d3-b4e6ba126172,efba5350-79bc-47aa-a189-db177b95b491,dbfa5012-4f3a-4362-bd0b-20b0bb60e942,30.0
1211ed3f-92ba-471e-90b2-5698d7ae7513,175d34a7-3823-4e4f-9f11-2464f55360b8,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,30.0
ff9f00e9-484e-41fb-b962-6fd09fc22c7c,faeb1160-5d15-4f26-99fc-c441cf21fc7f,d097e484-af5c-4802-bc3a-7b66de523ca4,30.0
3898a9da-666e-44e3-964b-40335f742503,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,ac05b409-ec26-4e68-a80e-f72e68133ddb,30.0
c0d93945-cc5f-47b1-9691-cce3c2074be0,1a470730-f328-4fb1-8bbf-36a069e4d6b2,3ed55c68-67b7-435e-9cfb-e1ce8036af81,30.0
8b92d620-b89b-4119-ad6a-98d40e6ab15b,b2fda957-e15c-4fb2-8a13-6e58496f561e,b6d5cbe9-74e0-46b8-980f-d438feba8b06,30.0
da862322-5833-4adf-8852-ab67dc749387,2267a1f4-68f6-418b-aaf6-2aa0c4b291f1,07c086d9-851b-4689-a028-765000a824dc,30.0
f0d0bf4b-7948-42ea-848f-1d6fbbc710e1,8cd24de1-2be8-4b77-bcfa-47be0495a5f4,bf005d6e-b3af-4b8e-abae-4772323fa34f,29.0
b8f506b7-2c6f-4a49-beed-f95e40221af1,1da70895-f77f-44ef-b216-d63c02e696eb,0c593192-8f17-4e0f-af71-d0a261018947,29.0
0735961f-232c-4450-bbeb-b84d59bc7453,5326c079-3dc3-468f-a601-b776dd9c1e62,f30d925a-c59c-40b6-8465-522574a49bb1,29.0
55711001-7736-4d70-a409-cb4f0e89b23b,61dadefa-76bf-4db4-8067-f88df540b9cd,dded1b99-abed-408b-9f2f-9cf602f495b8,29.0
97e140c7-04d5-40c9-9994-15965891f0b7,a0a22502-0d84-440c-84af-1fbb070ad54c,d0272323-b47a-4ed4-bc7f-e63abd6f385a,29.0
b0e9b51e-faa3-4d34-b5a8-8c3ae71f395e,08235654-772b-4e4a-9fc7-526c71bcde70,25e1390c-2305-443d-836f-048cfe28675e,29.0
e0eed913-dba5-4e30-a4f3-0b0bf78a3323,b2fda957-e15c-4fb2-8a13-6e58496f561e,d2551c34-8777-4844-9f54-b94edf191c68,29.0
5b0f4704-80be-4a55-b114-24ac1e1731b4,28023973-1d9d-4d01-b939-dc8f9b44fb1c,0d4196cc-787f-47ff-b6e0-f98b5766e8c8,28.0
db084898-ace0-43bd-81d3-e93266d0cc7c,6ed15092-2670-450a-99c2-61d861e87644,5ab4dd12-9bba-4eb8-b95f-af252a8bff7a,28.0
b8f506b7-2c6f-4a49-beed-f95e40221af1,1da70895-f77f-44ef-b216-d63c02e696eb,24849f29-d84b-43f9-82f3-777da6f6e942,28.0
8b92d620-b89b-4119-ad6a-98d40e6ab15b,b2fda957-e15c-4fb2-8a13-6e58496f561e,b91e5f65-4aa8-47ce-bbbf-c870db704516,28.0
35156dfc-e3fa-4aa6-98ac-3d4744fe9cb5,e9ca48b2-00ba-41c0-a02b-6885a2da1ff1,adb38207-2d67-4

2025-01-26 22:16:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-26 22:16:10 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:11 - root - INFO - SQL:
SELECT COUNT(DISTINCT "game_id") AS "num_games"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
LIMIT 100
Results:
num_games
11163

2025-01-26 22:16:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-26 22:16:12 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:13 - root - INFO - SQL:
SELECT COUNT(DISTINCT "player_id") AS "num_players"
FROM (
  SELECT "player_id"
  FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
  WHERE "season" BETWEEN 2010 AND 2018
    AND "period" = 2
    AND "points_scored" IS NOT NULL
  GROUP BY "player_id"
  HAVING SUM("points_scored") >= 15
) AS T
LIMIT 100
Results:
num_players
6003

2025-01-26 22:16:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 37
2025-01-26 22:16:14 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:14 - root - INFO - SQL:
SELECT "event_type", COUNT(*) AS "event_count"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
GROUP BY "event_type"
ORDER BY "event_count" DESC
LIMIT 100
Results:
event_type,event_count
rebound,790490
twopointmiss,425422
turnover,410166
twopointmade,400648
freethrowmade,316637
assist,293403
threepointmiss,291935
personalfoul,243613
shootingfoul,183541
threepointmade,153967
freethrowmiss,134256
block,81863
attemptblocked,81863
tvtimeout,79960
teamtimeout,63613
deadball,55249
offensivefoul,48713
lineupchange,35926
endperiod,23128
opentip,11133
officialtimeout,7528
openinbound,6847
jumpball,6157
technicalfoul,6050
review,3370
flagrantone,1778
kickball,1660
substitution,466
possession,390
laneviolation,242
flagranttwo,118
minortechnicalfoul,89
delay,60
ejection,53
clearpathfoul,53
defensivethreeseconds,4
freethrow,2

2025-01-26 22:16:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 22:16:16 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:16 - root - INFO - SQL:
SELECT P."player_id", T."market", SUM(P."points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
WHERE P."season" BETWEEN 2010 AND 2018
  AND P."period" = 2
  AND P."points_scored" IS NOT NULL
GROUP BY P."player_id", T."market"
HAVING SUM(P."points_scored") >= 15
LIMIT 100
Results:
Too long, hard cut:
player_id,market,total_points
0a2151b1-fa37-4025-b399-ad687f68f524,Virginia,315.0
18866a40-11b3-467e-80f7-f954852a4241,Syracuse,17.0
a4ec7add-0b82-48d0-8399-bd92ce43d1f9,Winthrop,38.0
341e5d33-9c00-424a-89a2-05ac5c05060d,Charlotte,49.0
d5106b10-a44b-4a36-b478-9bac2963e2a7,BYU,134.0
9d3cd1e7-0e3a-465e-a1be-34633ee5b8b5,USC,669.0
443d619a-bdf1-474f-9f4f-60aa348abc42,Duke,930.0
1d3c6426-5cfa-4340-bc71-8b3f858c5690,Duke,113.0
12b20916-fa98-443e-9e9f-176d2f3d0359,Iona,93.0
767c93b7-8663-4147-bb70-b617b8659fed,Rice,30.0
18d301ff-b120-406a-a4ec-caafca1ab4e5,Troy,20.0
ffabfceb-eb20-4908-ba7f-f6de86c0b2a1,Utah,278.0
a3d9e6d0-fb79-4384-9f12-1de897adc9b3,Utah,446.0
aecf7b82-b350-4082-ba0b-ce96697c19e1,Yale,80.0
0f301b05-b477-44c8-a2fe-89ab9f81167c,Texas,354.0
39c05ecd-1f37-4345-b0f6-aa46219e8a32,Texas,202.0
6f8c9b90-13c9-4831-9a7c-a70717965ea6,Texas,324.0
262c71bf-0828-45e0-b1ad-f81d2deea99a,Lafayette,53.0
f68ba0e0-f6f6-4a6f-8871-a08f9cd55026,Marquette,164.0
ea317d99-4f6e-4d4d-acd8-d542d852e00c,Minnesota,426.0
1353d9f5-cd27-458a-994d-d9266b50f766,Minnesota,58.0
af0869ea-5d4a-479a-8b3e-aeb1c5b2ef11,Cincinnati,86.0
3753e2ea-bf5e-4e11-87e7-2adbf7fd2f6a,Evansville,374.0
da2acec4-3757-4f07-8016-b532e0898adb,Georgetown,283.0
0e718cf5-9430-44d0-a313-b26e83d98cf6,Georgetown,256.0
106180fd-6947-477e-a988-3c69317cbde8,Miami (FL),78.0
ca68b087-1a29-4d2d-a0aa-367a386393d0,Ohio State,188.0
fd738a12-0dfb-4760-b01d-c7b1d63791ed,Penn State,140.0
66fe3d47-cdba-4111-b493-f946257638fb,Butler,1054.0
3e9d7431-08d6-491e-ae96-4ecdd4152860,Butler,25.0
79ab25d3-7a91-424a-ad7f-8cc1786d3b98,Hawaii,15.0
436439db-3f7d-4c4d-94e3-90f25edfc67c,Kansas,540.0
96a0c23e-879d-46b2-950d-98bb7d6eff1e,Toledo,30.0
c091c00b-26a0-40ef-83a9-ca11397cf3db,Toledo,38.0
da41bc30-1220-4b15-be1f-d914297ee14b,Tulane,111.0
02d9e1b5-d7c7-4b8a-9b75-011a463feec8,Gonzaga,206.0
cf7614f3-b820-4e48-92de-c9fb818a285a,UCF,278.0
ea23bc8c-8008-47f1-928f-012e013220e8,Maine,32.0
4cd372fe-4b8b-4b7b-ae7e-05951be3d3f1,California,118.0
8a26d0ab-487e-4ff9-8a00-6482c069e4fa,California,49.0
c3899f37-1eaa-464b-8542-1b6ce591d180,Louisville,84.0
47c0bc8a-53ff-4e69-a426-5835058ad386,New Mexico,40.0
b42a09ff-9bd1-474d-8ba3-37da5ca63a77,Pepperdine,208.0
5e8bcddf-53b9-4450-8fc8-3e8214c6147d,Denver,50.0
0a6ffb07-08d8-4675-b72f-5d58d9dc003d,Hawaii,36.0
a8841baf-c5a0-44e1-b4f8-5ae06347d465,Purdue,113.0
c64ef5c6-be57-41ae-a812-265f7b976d93,Temple,562.0
7bdf4cda-0079-4fbd-b311-bbb2b79ea74e,Towson,59.0
e1478c5b-c4de-4bd1-b077-59c7c1620c49,Xavier,221.0
bd964756-e587-403a-b2d0-46311aad8de8,Buffalo,22.0
7d5f67ee-1b17-4739-a26c-0936d72706d7,Clemson,37.0
56e8d8b2-ea93-4128-b9eb-8da0c29520f3,Gonzaga,656.0
2e661ad7-3c95-4a05-82e4-c84aafeb21c5,Villanova,705.0
bfdbe15a-0766-4bb4-858a-50d5a7f780d3,Binghamton,44.0
69b5782c-efe6-4352-bfd4-800dddf878cd,Iowa State,828.0
ea3fc090-5edd-4a37-9ae9-7a3d4b32a71b,Buffalo,25.0
39c5b1bc-022a-4805-b12b-d40eb57beaa6,Bowling Green,17.0
fdd92235-668b-438f-be63-73ca4a9048f4,Arizona State,49.0
176ff870-c86f-4c13-ae0f-206f92ce29d3,East Carolina,125.0
4c54aee0-be1d-4f10-951c-36d201c01c4e,East Carolina,116.0
58de0cda-ee61-4943-aa22-5289e198767f,Florida State,354.0
d2d95857-604e-4c9b-8b2b-c681cf4e7d90,Georgia State,71.0
329461b0-7420-4f32-a417-6acc635f804d,Jackson State,20.0
956a322c-2317-49fe-9d91-d525b27940a1,Jackson State,28.0
318c8c99-c83c-4d48-8b39-6ad9c37dbefd,Montana State,22.0
40bf1cee-3107-4564-9700-937be17dc3ae,Massachusetts,51.0
29ea8857-c2ca-4443-a783-4c71b3a2424e,Northern Iowa,103.0
d5538f20-02a0-48c7-a695-4447d30075ff,South Florida,61.0
b6e2383b-265a-4409-bf28-fbbbddbe1089,South Florida,44.0
101dbac2-d812-48d7-9607-2459aea574c6,UNC Asheville,62.0
e99b4298-7565-431c-afc7-77eb45ae2110,Virginia Tech,66.0
60907f66-bd65-4f8d-9554-a3c00491ad3a,Boston College,53.0
94ca9f59-881b-4b99-9952-3131f2f0c93d,Colorado State,274.0
344a1738-7e7c-4a38-ba03-69b5652d0c93,Illinois State,45.0
5807ef5e-5fcc-4747-9c96-b5924b58df69,Illinois State,235.0
042a49d2-15b7-40c1-82a5-697262393e76,Morehead State,28.0
02b1172c-dca4-4ee9-bbaf-d10dae5765a4,Morehead State,74.0
816e5105-f493-4528-8aed-47f65752f254,Oklahoma State,159.0
51965a06-2355-45fb-ad87-c140604a39cd,Oklahoma State,28.0
7ecd52c8-46a7-42db-a1d4-d7a526cfb9c5,Portland State,55.0
b0de0229-3d39-4fed-8fcf-d25e9bc45149,Portland State,40.0
a86ea36d-2e54-4b4f-ba33-8845bc000e73,Portland State,27.0
a7adc1d3-9c3f-4613-98e2-4d3fed3b1a7f,San Jose State,50.0
985c8a5e-be27-401a-9829-54bc8a1a8f21,UNC Greensboro,92.0
6263534c-f7b1-4ad3-8ce7-e0b5a25fd236,Houston Baptist,27.0
723c11ac-7aea-436c-a117-9a68fa7f6271,Texas-Arlington,26.0
28270125-7039-4e4d-bc2f-63f8dcb79e53,Texas-Arlington,178.0
750331a4-cc56-49cc-afbf-60a80b7300ac,Texas-Arlington,71.0
832af432-9ed2-4be4-862b-2622d7871283,Texas-Arlington,37.0
feb54502-9a95-4c85-9aff-ddf2561d9e08,Central Michigan,27.0
0930cd74-8545-4dec-9d34-931621018ebc,Hawaii,17.0
07ffee16-5895-41fb-b595-8e9db5128a91,Colgate,16.0
4655ac49-6be6-4a1a-bad2-08cbb311da81,Cleveland State,17.0
68ead5dc-8541-482f-b691-c5cbfbf54973,Central

2025-01-26 22:16:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:16:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:16:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:16:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 22:16:17 - snowflake.connector.connection - INFO - closed
2025-01-26 22:16:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:16:18 - root - INFO - SQL:
SELECT "win_market" AS "market", SUM("win_pts") AS "total_points_won"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND "win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
GROUP BY "win_market"
LIMIT 100
Results:
market,total_points_won
Kansas,1478
Villanova,816
North Carolina,1747
Duke,1480
Kentucky,1969

2025-01-26 22:16:18 - root - INFO - itercount: 0
2025-01-26 22:16:18 - root - INFO - Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
DDL describes table information.
,0
table_name,MBB_GAMES_SR
description,
DDL,"create or replace TABLE MBB_GAMES_SR (
	""game_id"" VARCHAR(16777216),
	""season"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""coverage"" VARCHAR(16777216),
	""neutral_site"" BOOLEAN,
	""scheduled_date"" DATE,
	""gametime"" NUMBER(38,0),
	""conference_game"" BOOLEAN,
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""tournament_round"" VARCHAR(16777216),
	""tournament_game_no"" VARCHAR(16777216),
	""attendance"" NUMBER(38,0),
	""lead_changes"" NUMBER(38,0),
	""times_tied"" NUMBER(38,0),
	""periods"" NUMBER(38,0),
	""possession_arrow"" VARCHAR(16777216),
	""venue_id"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""h_name"" VARCHAR(16777216),
	""h_market"" VARCHAR(16777216),
	""h_id"" VARCHAR(16777216),
	""h_alias"" VARCHAR(16777216),
	""h_league_id"" VARCHAR(16777216),
	""h_league_name"" VARCHAR(16777216),
	""h_league_alias"" VARCHAR(16777216),
	""h_conf_id"" VARCHAR(16777216),
	""h_conf_name"" VARCHAR(16777216),
	""h_conf_alias"" VARCHAR(16777216),
	""h_division_id"" VARCHAR(16777216),
	""h_division_name"" VARCHAR(16777216),
	""h_division_alias"" VARCHAR(16777216),
	""h_logo_large"" VARCHAR(16777216),
	""h_logo_medium"" VARCHAR(16777216),
	""h_logo_small"" VARCHAR(16777216),
	""h_points_game"" NUMBER(38,0),
	""h_rank"" NUMBER(38,0),
	""h_minutes"" VARCHAR(16777216),
	""h_field_goals_made"" NUMBER(38,0),
	""h_field_goals_att"" NUMBER(38,0),
	""h_field_goals_pct"" FLOAT,
	""h_three_points_made"" NUMBER(38,0),
	""h_three_points_att"" NUMBER(38,0),
	""h_three_points_pct"" FLOAT,
	""h_two_points_made"" NUMBER(38,0),
	""h_two_points_att"" NUMBER(38,0),
	""h_two_points_pct"" FLOAT,
	""h_blocked_att"" NUMBER(38,0),
	""h_free_throws_made"" NUMBER(38,0),
	""h_free_throws_att"" NUMBER(38,0),
	""h_free_throws_pct"" FLOAT,
	""h_offensive_rebounds"" NUMBER(38,0),
	""h_defensive_rebounds"" NUMBER(38,0),
	""h_rebounds"" NUMBER(38,0),
	""h_assists"" NUMBER(38,0),
	""h_turnovers"" NUMBER(38,0),
	""h_steals"" NUMBER(38,0),
	""h_blocks"" NUMBER(38,0),
	""h_assists_turnover_ratio"" FLOAT,
	""h_personal_fouls"" NUMBER(38,0),
	""h_ejections"" NUMBER(38,0),
	""h_foulouts"" NUMBER(38,0),
	""h_points"" NUMBER(38,0),
	""h_fast_break_pts"" NUMBER(38,0),
	""h_second_chance_pts"" NUMBER(38,0),
	""h_team_turnovers"" NUMBER(38,0),
	""h_points_off_turnovers"" NUMBER(38,0),
	""h_team_rebounds"" NUMBER(38,0),
	""h_flagrant_fouls"" NUMBER(38,0),
	""h_player_tech_fouls"" NUMBER(38,0),
	""h_team_tech_fouls"" NUMBER(38,0),
	""h_coach_tech_fouls"" NUMBER(38,0),
	""a_name"" VARCHAR(16777216),
	""a_market"" VARCHAR(16777216),
	""a_id"" VARCHAR(16777216),
	""a_alias"" VARCHAR(16777216),
	""a_league_id"" VARCHAR(16777216),
	""a_league_name"" VARCHAR(16777216),
	""a_league_alias"" VARCHAR(16777216),
	""a_conf_id"" VARCHAR(16777216),
	""a_conf_name"" VARCHAR(16777216),
	""a_conf_alias"" VARCHAR(16777216),
	""a_division_id"" VARCHAR(16777216),
	""a_division_name"" VARCHAR(16777216),
	""a_division_alias"" VARCHAR(16777216),
	""a_logo_large"" VARCHAR(16777216),
	""a_logo_medium"" VARCHAR(16777216),
	""a_logo_small"" VARCHAR(16777216),
	""a_points_game"" NUMBER(38,0),
	""a_rank"" NUMBER(38,0),
	""a_minutes"" VARCHAR(16777216),
	""a_field_goals_made"" NUMBER(38,0),
	""a_field_goals_att"" NUMBER(38,0),
	""a_field_goals_pct"" FLOAT,
	""a_three_points_made"" NUMBER(38,0),
	""a_three_points_att"" NUMBER(38,0),
	""a_three_points_pct"" FLOAT,
	""a_two_points_made"" NUMBER(38,0),
	""a_two_points_att"" NUMBER(38,0),
	""a_two_points_pct"" FLOAT,
	""a_blocked_att"" NUMBER(38,0),
	""a_free_throws_made"" NUMBER(38,0),
	""a_free_throws_att"" NUMBER(38,0),
	""a_free_throws_pct"" FLOAT,
	""a_offensive_rebounds"" NUMBER(38,0),
	""a_defensive_rebounds"" NUMBER(38,0),
	""a_rebounds"" NUMBER(38,0),
	""a_assists"" NUMBER(38,0),
	""a_turnovers"" NUMBER(38,0),
	""a_steals"" NUMBER(38,0),
	""a_blocks"" NUMBER(38,0),
	""a_assists_turnover_ratio"" FLOAT,
	""a_personal_fouls"" NUMBER(38,0),
	""a_ejections"" NUMBER(38,0),
	""a_foulouts"" NUMBER(38,0),
	""a_points"" NUMBER(38,0),
	""a_fast_break_pts"" NUMBER(38,0),
	""a_second_chance_pts"" NUMBER(38,0),
	""a_team_turnovers"" NUMBER(38,0),
	""a_points_off_turnovers"" NUMBER(38,0),
	""a_team_rebounds"" NUMBER(38,0),
	""a_flagrant_fouls"" NUMBER(38,0),
	""a_player_tech_fouls"" NUMBER(38,0),
	""a_team_tech_fouls"" NUMBER(38,0),
	""a_coach_tech_fouls"" NUMBER(38,0),
	""created"" NUMBER(38,0)
);"

,1
table_name,MBB_HISTORICAL_TOURNAMENT_GAMES
description,
DDL,"create or replace TABLE MBB_HISTORICAL_TOURNAMENT_GAMES (
	""season"" NUMBER(38,0),
	""round"" NUMBER(38,0),
	""days_from_epoch"" NUMBER(38,0),
	""game_date"" DATE,
	""day"" VARCHAR(16777216),
	""win_seed"" VARCHAR(16777216),
	""win_region"" VARCHAR(16777216),
	""win_market"" VARCHAR(16777216),
	""win_name"" VARCHAR(16777216),
	""win_alias"" VARCHAR(16777216),
	""win_team_id"" VARCHAR(16777216),
	""win_school_ncaa"" VARCHAR(16777216),
	""win_code_ncaa"" NUMBER(38,0),
	""win_kaggle_team_id"" NUMBER(38,0),
	""win_pts"" NUMBER(38,0),
	""lose_seed"" VARCHAR(16777216),
	""lose_region"" VARCHAR(16777216),
	""lose_market"" VARCHAR(16777216),
	""lose_name"" VARCHAR(16777216),
	""lose_alias"" VARCHAR(16777216),
	""lose_team_id"" VARCHAR(16777216),
	""lose_school_ncaa"" VARCHAR(16777216),
	""lose_code_ncaa"" NUMBER(38,0),
	""lose_kaggle_team_id"" NUMBER(38,0),
	""lose_pts"" NUMBER(38,0),
	""num_ot"" NUMBER(38,0),
	""academic_year"" NUMBER(38,0)
);"

,2
table_name,MBB_HISTORICAL_TEAMS_GAMES
description,
DDL,"create or replace TABLE MBB_HISTORICAL_TEAMS_GAMES (
	""season"" NUMBER(38,0),
	""scheduled_date"" VARCHAR(16777216),
	""attendance"" FLOAT,
	""market"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""team_code"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""current_division"" VARCHAR(16777216),
	""points_game"" NUMBER(38,0),
	""win"" BOOLEAN,
	""opp_market"" VARCHAR(16777216),
	""opp_name"" VARCHAR(16777216),
	""opp_code"" NUMBER(38,0),
	""opp_id"" VARCHAR(16777216),
	""opp_alias"" VARCHAR(16777216),
	""opp_current_division"" VARCHAR(16777216),
	""opp_points_game"" NUMBER(38,0)
);"

,3
table_name,MBB_PBP_SR
description,
DDL,"create or replace TABLE MBB_PBP_SR (
	""game_id"" VARCHAR(16777216),
	""load_timestamp"" NUMBER(38,0),
	""season"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""scheduled_date"" NUMBER(38,0),
	""venue_id"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""attendance"" NUMBER(38,0),
	""neutral_site"" BOOLEAN,
	""conference_game"" BOOLEAN,
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""round"" VARCHAR(16777216),
	""game_no"" VARCHAR(16777216),
	""away_market"" VARCHAR(16777216),
	""away_name"" VARCHAR(16777216),
	""away_id"" VARCHAR(16777216),
	""away_alias"" VARCHAR(16777216),
	""away_conf_name"" VARCHAR(16777216),
	""away_conf_alias"" VARCHAR(16777216),
	""away_division_name"" VARCHAR(16777216),
	""away_division_alias"" VARCHAR(16777216),
	""away_league_name"" VARCHAR(16777216),
	""home_market"" VARCHAR(16777216),
	""home_name"" VARCHAR(16777216),
	""home_id"" VARCHAR(16777216),
	""home_alias"" VARCHAR(16777216),
	""home_conf_name"" VARCHAR(16777216),
	""home_conf_alias"" VARCHAR(16777216),
	""home_division_name"" VARCHAR(16777216),
	""home_division_alias"" VARCHAR(16777216),
	""home_league_name"" VARCHAR(16777216),
	""period"" NUMBER(38,0),
	""game_clock"" VARCHAR(16777216),
	""elapsed_time_sec"" NUMBER(38,0),
	""possession_arrow"" VARCHAR(16777216),
	""team_name"" VARCHAR(16777216),
	""team_market"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""team_alias"" VARCHAR(16777216),
	""team_conf_name"" VARCHAR(16777216),
	""team_conf_alias"" VARCHAR(16777216),
	""team_division_name"" VARCHAR(16777216),
	""team_division_alias"" VARCHAR(16777216),
	""team_league_name"" VARCHAR(16777216),
	""team_basket"" VARCHAR(16777216),
	""possession_team_id"" VARCHAR(16777216),
	""player_id"" VARCHAR(16777216),
	""player_full_name"" VARCHAR(16777216),
	""jersey_num"" NUMBER(38,0),
	""event_id"" VARCHAR(16777216),
	""timestamp"" NUMBER(38,0),
	""event_description"" VARCHAR(16777216),
	""event_coord_x"" FLOAT,
	""event_coord_y"" FLOAT,
	""event_type"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""shot_made"" BOOLEAN,
	""shot_type"" VARCHAR(16777216),
	""shot_subtype"" VARCHAR(16777216),
	""three_point_shot"" BOOLEAN,
	""points_scored"" FLOAT,
	""turnover_type"" VARCHAR(16777216),
	""rebound_type"" VARCHAR(16777216),
	""timeout_duration"" FLOAT
);"

,4
table_name,MBB_TEAMS
description,
DDL,"create or replace TABLE MBB_TEAMS (
	""market"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""id"" VARCHAR(16777216),
	""code_ncaa"" NUMBER(38,0),
	""kaggle_team_id"" NUMBER(38,0),
	""school_ncaa"" VARCHAR(16777216),
	""turner_name"" VARCHAR(16777216),
	""league_name"" VARCHAR(16777216),
	""league_alias"" VARCHAR(16777216),
	""league_id"" VARCHAR(16777216),
	""conf_name"" VARCHAR(16777216),
	""conf_alias"" VARCHAR(16777216),
	""conf_id"" VARCHAR(16777216),
	""division_name"" VARCHAR(16777216),
	""division_alias"" VARCHAR(16777216),
	""division_id"" VARCHAR(16777216),
	""venue_id"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""logo_large"" VARCHAR(16777216),
	""logo_medium"" VARCHAR(16777216),
	""logo_small"" VARCHAR(16777216)
);"

,5
table_name,TEAM_COLORS
description,
DDL,"create or replace TABLE TEAM_COLORS (
	""market"" VARCHAR(16777216),
	""id"" VARCHAR(16777216),
	""code_ncaa"" NUMBER(38,0),
	""color"" VARCHAR(16777216)
);"

,6
table_name,MBB_PLAYERS_GAMES_SR
description,
DDL,"create or replace TABLE MBB_PLAYERS_GAMES_SR (
	""game_id"" VARCHAR(16777216),
	""season"" NUMBER(38,0),
	""neutral_site"" BOOLEAN,
	""scheduled_date"" DATE,
	""gametime"" NUMBER(38,0),
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""tournament_round"" VARCHAR(16777216),
	""tournament_game_no"" VARCHAR(16777216),
	""player_id"" VARCHAR(16777216),
	""last_name"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""full_name"" VARCHAR(16777216),
	""abbr_name"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""jersey_number"" NUMBER(38,0),
	""height"" NUMBER(38,0),
	""weight"" NUMBER(38,0),
	""birth_place"" VARCHAR(16777216),
	""birthplace_city"" VARCHAR(16777216),
	""birthplace_state"" VARCHAR(16777216),
	""birthplace_country"" VARCHAR(16777216),
	""class"" VARCHAR(16777216),
	""team_name"" VARCHAR(16777216),
	""team_market"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""team_alias"" VARCHAR(16777216),
	""conf_name"" VARCHAR(16777216),
	""conf_alias"" VARCHAR(16777216),
	""division_name"" VARCHAR(16777216),
	""division_alias"" VARCHAR(16777216),
	""league_name"" VARCHAR(16777216),
	""home_team"" BOOLEAN,
	""active"" BOOLEAN,
	""played"" BOOLEAN,
	""starter"" BOOLEAN,
	""minutes"" VARCHAR(16777216),
	""minutes_int64"" NUMBER(38,0),
	""position"" VARCHAR(16777216),
	""primary_position"" VARCHAR(16777216),
	""field_goals_made"" NUMBER(38,0),
	""field_goals_att"" NUMBER(38,0),
	""field_goals_pct"" FLOAT,
	""three_points_made"" NUMBER(38,0),
	""three_points_att"" NUMBER(38,0),
	""three_points_pct"" FLOAT,
	""two_points_made"" NUMBER(38,0),
	""two_points_att"" NUMBER(38,0),
	""two_points_pct"" FLOAT,
	""blocked_att"" NUMBER(38,0),
	""free_throws_made"" NUMBER(38,0),
	""free_throws_att"" NUMBER(38,0),
	""free_throws_pct"" FLOAT,
	""offensive_rebounds"" NUMBER(38,0),
	""defensive_rebounds"" NUMBER(38,0),
	""rebounds"" NUMBER(38,0),
	""assists"" NUMBER(38,0),
	""turnovers"" NUMBER(38,0),
	""steals"" NUMBER(38,0),
	""blocks"" NUMBER(38,0),
	""assists_turnover_ratio"" FLOAT,
	""personal_fouls"" NUMBER(38,0),
	""tech_fouls"" NUMBER(38,0),
	""flagrant_fouls"" NUMBER(38,0),
	""points"" NUMBER(38,0),
	""sp_created"" NUMBER(38,0)
);"

,7
table_name,MASCOTS
description,
DDL,"create or replace TABLE MASCOTS (
	""id"" VARCHAR(16777216),
	""market"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""mascot"" VARCHAR(16777216),
	""mascot_name"" VARCHAR(16777216),
	""mascot_common_name"" VARCHAR(16777216),
	""tax_subspecies"" VARCHAR(16777216),
	""tax_species"" VARCHAR(16777216),
	""tax_genus"" VARCHAR(16777216),
	""tax_family"" VARCHAR(16777216),
	""tax_order"" VARCHAR(16777216),
	""tax_class"" VARCHAR(16777216),
	""tax_phylum"" VARCHAR(16777216),
	""tax_kingdom"" VARCHAR(16777216),
	""tax_domain"" VARCHAR(16777216),
	""non_tax_type"" VARCHAR(16777216)
);"

,8
table_name,MBB_HISTORICAL_TEAMS_SEASONS
description,
DDL,"create or replace TABLE MBB_HISTORICAL_TEAMS_SEASONS (
	""season"" NUMBER(38,0),
	""market"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""team_code"" NUMBER(38,0),
	""team_id"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""division"" NUMBER(38,0),
	""current_division"" VARCHAR(16777216),
	""wins"" NUMBER(38,0),
	""losses"" NUMBER(38,0),
	""ties"" NUMBER(38,0)
);"

,9
table_name,MBB_TEAMS_GAMES_SR
description,
DDL,"create or replace TABLE MBB_TEAMS_GAMES_SR (
	""game_id"" VARCHAR(16777216),
	""season"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""coverage"" VARCHAR(16777216),
	""neutral_site"" BOOLEAN,
	""scheduled_date"" DATE,
	""gametime"" NUMBER(38,0),
	""conference_game"" BOOLEAN,
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""tournament_round"" VARCHAR(16777216),
	""tournament_game_no"" VARCHAR(16777216),
	""attendance"" NUMBER(38,0),
	""lead_changes"" NUMBER(38,0),
	""times_tied"" NUMBER(38,0),
	""periods"" NUMBER(38,0),
	""possession_arrow"" VARCHAR(16777216),
	""venue_id"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""home_team"" BOOLEAN,
	""name"" VARCHAR(16777216),
	""market"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""league_id"" VARCHAR(16777216),
	""league_name"" VARCHAR(16777216),
	""league_alias"" VARCHAR(16777216),
	""conf_id"" VARCHAR(16777216),
	""conf_name"" VARCHAR(16777216),
	""conf_alias"" VARCHAR(16777216),
	""division_id"" VARCHAR(16777216),
	""division_name"" VARCHAR(16777216),
	""division_alias"" VARCHAR(16777216),
	""logo_large"" VARCHAR(16777216),
	""logo_medium"" VARCHAR(16777216),
	""logo_small"" VARCHAR(16777216),
	""opp_name"" VARCHAR(16777216),
	""opp_market"" VARCHAR(16777216),
	""opp_id"" VARCHAR(16777216),
	""opp_alias"" VARCHAR(16777216),
	""opp_league_id"" VARCHAR(16777216),
	""opp_league_name"" VARCHAR(16777216),
	""opp_league_alias"" VARCHAR(16777216),
	""opp_conf_id"" VARCHAR(16777216),
	""opp_conf_name"" VARCHAR(16777216),
	""opp_conf_alias"" VARCHAR(16777216),
	""opp_division_id"" VARCHAR(16777216),
	""opp_division_name"" VARCHAR(16777216),
	""opp_division_alias"" VARCHAR(16777216),
	""opp_logo_large"" VARCHAR(16777216),
	""opp_logo_medium"" VARCHAR(16777216),
	""opp_logo_small"" VARCHAR(16777216),
	""win"" BOOLEAN,
	""points_game"" NUMBER(38,0),
	""minutes"" VARCHAR(16777216),
	""field_goals_made"" NUMBER(38,0),
	""field_goals_att"" NUMBER(38,0),
	""field_goals_pct"" FLOAT,
	""three_points_made"" NUMBER(38,0),
	""three_points_att"" NUMBER(38,0),
	""three_points_pct"" FLOAT,
	""two_points_made"" NUMBER(38,0),
	""two_points_att"" NUMBER(38,0),
	""two_points_pct"" FLOAT,
	""blocked_att"" NUMBER(38,0),
	""free_throws_made"" NUMBER(38,0),
	""free_throws_att"" NUMBER(38,0),
	""free_throws_pct"" FLOAT,
	""offensive_rebounds"" NUMBER(38,0),
	""defensive_rebounds"" NUMBER(38,0),
	""rebounds"" NUMBER(38,0),
	""assists"" NUMBER(38,0),
	""turnovers"" NUMBER(38,0),
	""steals"" NUMBER(38,0),
	""blocks"" NUMBER(38,0),
	""assists_turnover_ratio"" FLOAT,
	""personal_fouls"" NUMBER(38,0),
	""ejections"" NUMBER(38,0),
	""foulouts"" NUMBER(38,0),
	""points"" NUMBER(38,0),
	""fast_break_pts"" NUMBER(38,0),
	""second_chance_pts"" NUMBER(38,0),
	""team_turnovers"" NUMBER(38,0),
	""points_off_turnovers"" NUMBER(38,0),
	""team_rebounds"" NUMBER(38,0),
	""flagrant_fouls"" NUMBER(38,0),
	""player_tech_fouls"" NUMBER(38,0),
	""team_tech_fouls"" NUMBER(38,0),
	""coach_tech_fouls"" NUMBER(38,0),
	""opp_points_game"" NUMBER(38,0),
	""opp_minutes"" VARCHAR(16777216),
	""opp_field_goals_made"" NUMBER(38,0),
	""opp_field_goals_att"" NUMBER(38,0),
	""opp_field_goals_pct"" FLOAT,
	""opp_three_points_made"" NUMBER(38,0),
	""opp_three_points_att"" NUMBER(38,0),
	""opp_three_points_pct"" FLOAT,
	""opp_two_points_made"" NUMBER(38,0),
	""opp_two_points_att"" NUMBER(38,0),
	""opp_two_points_pct"" FLOAT,
	""opp_blocked_att"" NUMBER(38,0),
	""opp_free_throws_made"" NUMBER(38,0),
	""opp_free_throws_att"" NUMBER(38,0),
	""opp_free_throws_pct"" FLOAT,
	""opp_offensive_rebounds"" NUMBER(38,0),
	""opp_defensive_rebounds"" NUMBER(38,0),
	""opp_rebounds"" NUMBER(38,0),
	""opp_assists"" NUMBER(38,0),
	""opp_turnovers"" NUMBER(38,0),
	""opp_steals"" NUMBER(38,0),
	""opp_blocks"" NUMBER(38,0),
	""opp_assists_turnover_ratio"" FLOAT,
	""opp_personal_fouls"" NUMBER(38,0),
	""opp_ejections"" NUMBER(38,0),
	""opp_foulouts"" NUMBER(38,0),
	""opp_points"" NUMBER(38,0),
	""opp_fast_break_pts"" NUMBER(38,0),
	""opp_second_chance_pts"" NUMBER(38,0),
	""opp_team_turnovers"" NUMBER(38,0),
	""opp_points_off_turnovers"" NUMBER(38,0),
	""opp_team_rebounds"" NUMBER(38,0),
	""opp_flagrant_fouls"" NUMBER(38,0),
	""opp_player_tech_fouls"" NUMBER(38,0),
	""opp_team_tech_fouls"" NUMBER(38,0),
	""opp_coach_tech_fouls"" NUMBER(38,0),
	""created"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
# NCAA Basketball Tournament Data Model Documentation

This documentation outlines the dataset that combines information about games where teams have either won or lost in the NCAA basketball tournaments, detailing each column's data format:

- **season**: The NCAA tournament season year.
- **round**: The tournament round during which the game took place.
- **days_from_epoch**: The number of days from a fixed epoch to the game date.
- **game_date**: The actual date when the game was played.
- **day**: The day of the week on which the game occurred.
- **label**: A string indicating whether the team won ('win') or lost ('loss') the game.
- **seed**: The tournament seed of the team (winning or losing).
- **market**: The market or region associated with the team.
- **name**: The name of the team.
- **alias**: The alias or abbreviation of the team name.
- **school_ncaa**: The NCAA identifier for the school.
- **opponent_seed**: The seed of the opposing team.
- **opponent_market**: The market or region associated with the opposing team.
- **opponent_name**: The name of the opposing team.
- **opponent_alias**: The alias or abbreviation of the opposing team's name.
- **opponent_school_ncaa**: The NCAA identifier for the opposing school.
The table structure information is ({database name: {schema name: {table name}}}): 
{'NCAA_BASKETBALL': {'NCAA_BASKETBALL': ['MASCOTS', 'MBB_GAMES_SR', 'MBB_HISTORICAL_TEAMS_GAMES', 'MBB_HISTORICAL_TEAMS_SEASONS', 'MBB_HISTORICAL_TOURNAMENT_GAMES', 'MBB_PBP_SR', 'MBB_PLAYERS_GAMES_SR', 'MBB_TEAMS', 'MBB_TEAMS_GAMES_SR', 'TEAM_COLORS']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `MBB_PBP_SR` (Play-by-Play Data)
  - **"season"**: To filter games between 2010 and 2018.
  - **"period"**: To select events from the second period.
  - **"player_id"**: To identify individual players.
  - **"team_id"**: To associate players with their teams.
  - **"points_scored"**: To calculate total points scored by players.
  - **"event_type"**: To identify scoring events related to scoring (e.g., 'shot', 'free throw').

- **Table:** `MBB_TEAMS` (Team Information)
  - **"id"**: Team identifier to join with player data.
  - **"market"**: The team's market (city or region), used to group teams.
  - **"name"**: Team name for reference.

- **Table:** `MBB_HISTORICAL_TOURNAMENT_GAMES` (Historical Tournament Games)
  - **"season"**: To filter tournament games between 2010 and 2018.
  - **"win_market"**, **"win_name"**: Winning team's market and name.
  - **"lose_market"**, **"lose_name"**: Losing team's market and name.
  - **Other game details**: Such as **"round"**, **"game_date"**, **"win_pts"**, **"lose_pts"**, **"num_ot"**.

**Conditions:**

- **Season Filter**: `"season" BETWEEN 2010 AND 2018`
- **Period Filter**: `"period" = 2` (Second period)
- **Minimum Points**: Sum of `"points_scored"` by a player in period 2 is at least 15
- **Grouping**: Group by `"player_id"` and `"team_id"` to calculate total points per player per team
- **Top Markets**: Obtain the top five team markets with the highest number of distinct players meeting the criteria

---

**SQL Queries:**

1. **Preview Play-by-Play Data**

   ```sql
   SELECT * 
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" 
   LIMIT 100;
   ```

2. **Filter Events from Second Period between 2010 and 2018**

   ```sql
   SELECT "season", "period", "event_type", "points_scored" 
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
   WHERE "season" BETWEEN 2010 AND 2018 
     AND "period" = 2
   LIMIT 100;
   ```

3. **Identify Scoring Event Types**

   ```sql
   SELECT DISTINCT "event_type" 
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
   WHERE "season" BETWEEN 2010 AND 2018 
     AND "period" = 2;
   ```

4. **Calculate Total Points per Player in Second Period**

   ```sql
   SELECT "player_id", SUM("points_scored") AS "total_points"
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
   WHERE "season" BETWEEN 2010 AND 2018 
     AND "period" = 2
   GROUP BY "player_id"
   LIMIT 100;
   ```

5. **Find Players Who Scored at Least 15 Points in Second Period**

   ```sql
   SELECT "player_id", "team_id", SUM("points_scored") AS "total_points"
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
   WHERE "season" BETWEEN 2010 AND 2018 
     AND "period" = 2
   GROUP BY "player_id", "team_id"
   HAVING SUM("points_scored") >= 15
   LIMIT 100;
   ```

6. **List Team IDs and Markets**

   ```sql
   SELECT "id" AS "team_id", "market"
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS"
   LIMIT 100;
   ```

7. **Join Players with Team Markets**

   ```sql
   SELECT P."player_id", P."team_id", T."market", SUM(P."points_scored") AS "total_points"
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
   JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
   WHERE P."season" BETWEEN 2010 AND 2018 
     AND P."period" = 2
   GROUP BY P."player_id", P."team_id", T."market"
   HAVING SUM(P."points_scored") >= 15
   LIMIT 100;
   ```

8. **Count Distinct Players per Team Market**

   ```sql
   SELECT T."market", COUNT(DISTINCT P."player_id") AS "num_players"
   FROM (
     SELECT "player_id", "team_id"
     FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
     WHERE "season" BETWEEN 2010 AND 2018 
       AND "period" = 2
     GROUP BY "player_id", "team_id"
     HAVING SUM("points_scored") >= 15
   ) P
   JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
   GROUP BY T."market"
   ORDER BY "num_players" DESC
   LIMIT 100;
   ```

9. **Retrieve Top Five Team Markets**

   ```sql
   SELECT T."market", COUNT(DISTINCT P."player_id") AS "num_players"
   FROM (
     SELECT "player_id", "team_id"
     FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
     WHERE "season" BETWEEN 2010 AND 2018 
       AND "period" = 2
     GROUP BY "player_id", "team_id"
     HAVING SUM("points_scored") >= 15
   ) P
   JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
   GROUP BY T."market"
   ORDER BY "num_players" DESC
   LIMIT 5;
   ```

10. **Retrieve Tournament Games Involving Top Team Markets**

    *(Suppose the top markets are 'Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')*

    ```sql
    SELECT "season", "round", "game_date", "win_market", "win_name", "win_seed", "win_pts", 
           "lose_market", "lose_name", "lose_seed", "lose_pts", "num_ot"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
    WHERE "season" BETWEEN 2010 AND 2018 
      AND ("win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova') 
           OR "lose_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova'))
    LIMIT 100;
    ```

11. **Count Tournament Wins per Top Team Market**

    ```sql
    SELECT "win_market" AS "market", COUNT(*) AS "wins"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
    WHERE "season" BETWEEN 2010 AND 2018 
      AND "win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
    GROUP BY "win_market"
    LIMIT 100;
    ```

12. **Count Tournament Losses per Top Team Market**

    ```sql
    SELECT "lose_market" AS "market", COUNT(*) AS "losses"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
    WHERE "season" BETWEEN 2010 AND 2018 
      AND "lose_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
    GROUP BY "lose_market"
    LIMIT 100;
    ```

13. **List All Tournament Games for a Specific Team Market ('Duke')**

    ```sql
    SELECT *
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
    WHERE "season" BETWEEN 2010 AND 2018 
      AND ("win_market" = 'Duke' OR "lose_market" = 'Duke')
    LIMIT 100;
    ```

14. **View Distinct Periods in Play-by-Play Data**

    ```sql
    SELECT DISTINCT "period"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
    ORDER BY "period"
    LIMIT 100;
    ```

15. **Find Highest Points Scored by a Player in Second Period**

    ```sql
    SELECT "player_id", "team_id", "game_id", SUM("points_scored") AS "total_points"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
    WHERE "season" BETWEEN 2010 AND 2018 
      AND "period" = 2
    GROUP BY "player_id", "team_id", "game_id"
    ORDER BY "total_points" DESC
    LIMIT 100;
    ```

16. **Count Total Games in Play-by-Play Data (2010-2018)**

    ```sql
    SELECT COUNT(DISTINCT "game_id") AS "num_games"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
    WHERE "season" BETWEEN 2010 AND 2018
    LIMIT 100;
    ```

17. **Count Players Who Scored At Least 15 Points in Second Period**

    ```sql
    SELECT COUNT(DISTINCT "player_id") AS "num_players"
    FROM (
      SELECT "player_id"
      FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
      WHERE "season" BETWEEN 2010 AND 2018 
        AND "period" = 2
      GROUP BY "player_id"
      HAVING SUM("points_scored") >= 15
    ) AS T
    LIMIT 100;
    ```

18. **Identify Event Types and Their Frequencies**

    ```sql
    SELECT "event_type", COUNT(*) AS "event_count"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
    GROUP BY "event_type"
    ORDER BY "event_count" DESC
    LIMIT 100;
    ```

19. **List Players and Their Teams Who Scored 15+ Points in Second Period**

    ```sql
    SELECT P."player_id", T."market", SUM(P."points_scored") AS "total_points"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
    WHERE P."season" BETWEEN 2010 AND 2018 
      AND P."period" = 2
    GROUP BY P."player_id", T."market"
    HAVING SUM(P."points_scored") >= 15
    LIMIT 100;
    ```

20. **Check Total Points Scored by Team Markets in Tournament Games**

    ```sql
    SELECT "win_market" AS "market", SUM("win_pts") AS "total_points_won"
    FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
    WHERE "season" BETWEEN 2010 AND 2018
      AND "win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
    GROUP BY "win_market"
    LIMIT 100;
    ```

---

These queries help in understanding the data and preparing to answer the task by:

- Identifying players who scored at least 15 points during the second period between 2010 and 2018.
- Determining the top five team markets based on the number of such players.
- Gathering detailed game information from historical tournament games involving these team markets.

**Note:** All column names are enclosed in double quotations, and no Common Table Expressions (CTEs) are used as per the instructions.Query:
SELECT * 
   FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" 
   LIMIT 100;
Answer:
Too long, hard cut:
game_id,load_timestamp,season,status,scheduled_date,venue_id,venue_name,venue_city,venue_state,venue_address,venue_zip,venue_country,venue_capacity,attendance,neutral_site,conference_game,tournament,tournament_type,round,game_no,away_market,away_name,away_id,away_alias,away_conf_name,away_conf_alias,away_division_name,away_division_alias,away_league_name,home_market,home_name,home_id,home_alias,home_conf_name,home_conf_alias,home_division_name,home_division_alias,home_league_name,period,game_clock,elapsed_time_sec,possession_arrow,team_name,team_market,team_id,team_alias,team_conf_name,team_conf_alias,team_division_name,team_division_alias,team_league_name,team_basket,possession_team_id,player_id,player_full_name,jersey_num,event_id,timestamp,event_description,event_coord_x,event_coord_y,event_type,type,shot_made,shot_type,shot_subtype,three_point_shot,points_scored,turnover_type,rebound_type,timeout_duration
60f60dfe-4423-4ef2-9b6c-aee096a0b65c,1517499623876394,2013,closed,1385928000000000,,,,,,,,,5159.0,False,False,,,,,Hardin-Simmons,Cowboys,8fedc1d2-482b-4c00-b581-f0da49935902,H-S,American Southwest Conference,ASC,NCAA Division III,D3,NCAA MEN,Baylor,Bears,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,BAY,Big 12,BIG12,NCAA Division I,D1,NCAA MEN,1,13:55,365,,,,,,,,,,,right,,,,,d6321017-d769-4df8-b6dd-b53e89c25fc8,1385929115000000,Bears rebound (deadball),,,deadball,,False,,,False,,,,
3d90529c-12ec-40e0-8f31-ddeed234ff76,1519021760589864,2017,closed,1518987600000000,,,,,,,,,9523.0,False,True,,,,,Wichita State,Shockers,f38b58de-3273-4723-a78b-2f918e9aa2d5,WICH,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,Cincinnati,Bearcats,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,CIN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,11:53,1687,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,,,,,,,,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,13c1e758-f5b3-4f1e-ade2-8c827863c529,1518993393000000,TV timeout,,,tvtimeout,,False,,,False,,,,
3d90529c-12ec-40e0-8f31-ddeed234ff76,1519021760589864,2017,closed,1518987600000000,,,,,,,,,9523.0,False,True,,,,,Wichita State,Shockers,f38b58de-3273-4723-a78b-2f918e9aa2d5,WICH,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,Cincinnati,Bearcats,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,CIN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,11:53,1687,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,,,,,,,left,,,,,95ac26dd-f0fa-48a5-8da6-ee8153bd7525,1518993594000000,"Bearcats lineup change (Eliel Nsoseme, Gary Clark, Cane Broome, Keith Williams, Jarron Cumberland)",0.0,0.0,lineupchange,,False,,,False,,,,
3ea4e171-afee-4964-9412-306a917a7b94,1519021685996438,2017,closed,1518984000000000,,,,,,,,,4524.0,False,True,,,,,Connecticut,Huskies,efba5350-79bc-47aa-a189-db177b95b491,CONN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,East Carolina,Pirates,a601205f-3bfe-4052-ac0b-b8f18cf3efd3,ECU,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,3:18,2202,a601205f-3bfe-4052-ac0b-b8f18cf3efd3,,,,,,,,,,,efba5350-79bc-47aa-a189-db177b95b491,,,,56811f6a-756f-4a05-b226-da52b15e7f7d,1518990113000000,TV timeout,,,tvtimeout,,False,,,False,,,,
3d90529c-12ec-40e0-8f31-ddeed234ff76,1519021760589864,2017,closed,1518987600000000,,,,,,,,,9523.0,False,True,,,,,Wichita State,Shockers,f38b58de-3273-4723-a78b-2f918e9aa2d5,WICH,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,Cincinnati,Bearcats,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,CIN,American Athletic,AAC,NCAA Division I,D1,NCAA MEN,2,13:59,1561,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,,,,,,,,,,left,,,,,249782b7-c2fb-4f00-a13e-492f0934483e,1518993043000000,"Bearcats lineup change (Jacob Evans III, Gary Clark, Cane Broome, Kyle Washington, Jarron Cumberland)",0.0,0.0,lineupchange,,False,,,False,,,,
5c74a296-4631-4646-bc66-97be4e6c3ba8,1519021768153849,2017,closed,1518985800000000,,,,,,,,,15544.0,False,True,,,,,Nebraska,Cornhuskers,f8b1bf00-5b73-4ac4-98c0-ec554027ae32,NEB,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,Illinois,Fighting Illini,150148c2-ca8f-414f-8f41-d94a55d4a122,ILL,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,1,7:56,724,150148c2-ca8f-414f-8f41-d94a55d4a122,,,,,,,,,,left,,,,,fda79777-13a1-4b4b-bf3f-a78be5a915bd,1518987603000000,Cornhuskers rebound (deadball),,,deadball,,False,,,False,,,,
3ac25641-fd61-4126-8d43-b375abe8443e,1519021764684104,2017,closed,1518976800000000,,,,,,,,,,False,True,,,,,Ohio State,Buckeyes,857462b3-0ab6-4d26-9669-10ca354e382b,OSU,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,Michigan,Wolverines,bdc2561d-f603-4fab-a262-f1d2af462277,MICH,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,1,6:17,823,857462b3-0ab6-4d26-9669-10ca354e382b,,,,,,,,,,left,,,,,b5c818b8-6d56-4d08-bd26-c2ea033af772,1518979123000000,"Buckeyes lineup change (Jae'Sean Tate, C.J. Jackson, Kam Williams, Keita Bates-Diop, Kaleb Wesson)",0.0,0.0,lineupchange,,False,,,False,,,,
d4213cb8-f351-4864-a3e0-71b5d23345e9,1519021704037998,2017,closed,1519002000000000,,,,,,,,,14804.0,False,True,,,,,Penn State,Nittany Lions,4aebd148-8119-4875-954c-66779867989b,PSU,Big Ten,BIG10,NCAA Division I,D1,NCAA MEN,Purdue,Boilermakers,
Query:
SELECT G."season", G."round", G."game_date",
       G."win_market", G."win_name", G."win_seed", G."win_pts",
       G."lose_market", G."lose_name", G."lose_seed", G."lose_pts", G."num_ot"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE G."season" BETWEEN 2010 AND 2018
  AND (
    G."win_market" IN (
        SELECT T."market"
        FROM (
            SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
            FROM (
                SELECT "player_id", "team_id"
                FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                WHERE "season" BETWEEN 2010 AND 2018 
                  AND "period" = 2
                  AND "points_scored" IS NOT NULL
                GROUP BY "player_id", "team_id"
                HAVING SUM("points_scored") >= 15
            ) P
            GROUP BY P."team_id"
        ) P2
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
        WHERE T."market" IS NOT NULL
        GROUP BY T."market"
        ORDER BY SUM(P2."num_players") DESC
        LIMIT 5
    )
    OR G."lose_market" IN (
        SELECT T."market"
        FROM (
            SELECT P."team_id", COUNT(DISTINCT P."player_id") AS "num_players"
            FROM (
                SELECT "player_id", "team_id"
                FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
                WHERE "season" BETWEEN 2010 AND 2018 
                  AND "period" = 2
                  AND "points_scored" IS NOT NULL
                GROUP BY "player_id", "team_id"
                HAVING SUM("points_scored") >= 15
            ) P
            GROUP BY P."team_id"
        ) P2
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P2."team_id" = T."id"
        WHERE T."market" IS NOT NULL
        GROUP BY T."market"
        ORDER BY SUM(P2."num_players") DESC
        LIMIT 5
    )
)
;
Answer:
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2011,64,2011-03-17,Morehead State,Eagles,13,62,Louisville,Cardinals,04,61,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2015,8,2015-03-29,Michigan State,Spartans,07,76,Louisville,Cardinals,04,70,1
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,32,2011-03-19,Kentucky,Wildcats,04,71,West Virginia,Mountaineers,05,63,0
2016,64,2016-03-17,Kentucky,Wildcats,04,85,Stony Brook,Seawolves,13,57,0
2010,16,2010-03-25,Kentucky,Wildcats,01,62,Cornell,Big Red,12,45,0
2010,32,2010-03-20,Kentucky,Wildcats,01,90,Wake Forest,Demon Deacons,09,60,0
2011,8,2011-03-27,Kentucky,Wildcats,04,76,North Carolina,Tar Heels,02,69,0
2011,64,2011-03-17,Kentucky,Wildcats,04,59,Princeton,Tigers,13,57,0
2011,16,2011-03-25,Kentucky,Wildcats,04,62,Ohio State,Buckeyes,01,60,0
2010,64,2010-03-18,Kentucky,Wildcats,01,100,East Tennessee State,Buccaneers,16,71,0
2015,64,2015-03-19,Kentucky,Wildcats,01,79,Hampton,Pirates,16,56,0
2014,8,2014-03-30,Kentucky,Wildcats,08,75,Michigan,Wolverines,02,72,0
2012,64,2012-03-15,Kentucky,Wildcats,01,81,Western Kentucky,Hilltoppers,16,66,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2012,16,2012-03-23,Kentucky,Wildcats,01,102,Indiana,Hoosiers,04,90,0
2012,32,2012-03-17,Kentucky,Wildcats,01,87,Iowa State,Cyclones,08,71,0
2012,2,2012-04-02,Kentucky,Wildcats,01,67,Kansas,Jayhawks,02,59,0
2015,16,2015-03-26,Kentucky,Wildcats,01,78,West Virginia,Mountaineers,05,39,0
2012,8,2012-03-25,Kentucky,Wildcats,01,82,Baylor,Bears,03,70,0
2014,32,2014-03-23,Kentucky,Wildcats,08,78,Wichita State,Shockers,01,76,0
2015,32,2015-03-21,Kentucky,Wildcats,01,64,Cincinnati,Bearcats,08,51,0
2014,4,2014-04-05,Kentucky,Wildcats,08,74,Wisconsin,Badgers,02,73,0
2015,8,2015-03-28,Kentucky,Wildcats,01,68,Notre Dame,Fighting Irish,03,66,0
2014,64,2014-03-21,Kentucky,Wildcats,08,56,Kansas State,Wildcats,09,49,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2017,64,2017-03-17,Kentucky,Wildcats,02,79,Northern Kentucky,Norse,15,70,0
2017,32,2017-03-19,Kentucky,Wildcats,02,65,Wichita State,Shockers,10,62,0
2017,16,2017-03-24,Kentucky,Wildcats,02,86,UCLA,Bruins,03,75,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2017,32,2017-03-19,Michigan,Wolverines,07,73,Louisville,Cardinals,02,69,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2010,64,2010-03-19,California,Golden Bears,08,77,Louisville,Cardinals,09,62,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
Query:
SELECT DISTINCT "event_type"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
Answer:
event_type
kickball
freethrowmade
delay
laneviolation
openinbound
twopointmiss
minortechnicalfoul
shootingfoul
offensivefoul
ejection
personalfoul
technicalfoul
teamtimeout
threepointmiss
threepointmade
clearpathfoul
freethrowmiss
possession
deadball
endperiod
rebound
defensivethreeseconds
officialtimeout
assist
twopointmade
opentip
attemptblocked
flagranttwo
substitution
review
jumpball
lineupchange
tvtimeout
freethrow
turnover
block
flagrantone
Query:
SELECT "player_id", SUM("points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
  AND "points_scored" IS NOT NULL
GROUP BY "player_id"
LIMIT 100
Answer:
player_id,total_points
e7c04544-2cba-42f7-8c25-27606ec743f3,25.0
53cdc99a-e8c8-4d32-be34-5b4ad39e1611,36.0
68d3bb3f-358f-4358-8339-1b0b7b539c95,71.0
956adbd8-16b0-483b-a1c7-de14cdb18a66,97.0
8f1a7e15-5fac-443d-a7d7-b2e5754b4a41,44.0
ae6c3caa-1aa2-4b67-a2ac-85a548140bcf,46.0
eef934a6-f0cf-48aa-90b6-a1d81d97e92e,43.0
087bf0a5-e771-4a29-bd1f-04333a904a47,66.0
018da264-0c34-46ff-bf93-12f08ba6b9a2,584.0
2c0dbd58-1500-43a4-9c26-447df2fafac4,6.0
f9736f34-662c-4154-94ad-cc0a39f01c9f,400.0
54b9624e-1f14-4e87-bdc1-b5b02a2196e6,466.0
ca131f44-bfeb-4ebf-a8d3-b4e6ba126172,725.0
c3cbcada-ce3e-4f74-a5ca-b70e7ecea1e4,33.0
0ddec725-6a64-43b3-b7bf-a25f7469eb09,415.0
a46691c1-bdf2-4736-b136-158ae214c029,19.0
6e185458-c6d8-4b73-ab5f-0f6fbcb20b3a,81.0
5eddf5bc-e974-4902-92a5-306d5113f71a,171.0
4502ddf1-d257-45d4-8a32-bdf5c8101f9c,86.0
821f6f5f-7163-4f21-81e4-49eb71226d04,60.0
e36b3fe5-d382-4090-8f84-fee8d8081268,4.0
fee724be-038f-4f85-8337-9dd9056c4efb,128.0
0dc8a12b-5a96-4893-9c87-d28572ebee77,7.0
3023ef82-0640-45ba-8f1c-56714af7b642,6.0
d1c14dfb-76a1-4506-83e8-0faee1d2b066,148.0
28e8a4a1-2f3d-4bd1-8636-a34db7e48078,34.0
7f2291a6-298b-44ce-9dde-21894f386fd3,187.0
b8a97763-46a7-4dc8-bf11-bbf225cb2c14,380.0
1660606d-3d7e-4a3e-a52c-25e9e23ff158,75.0
13dcbc93-0965-40ad-a732-d1e2cf2ba05c,3.0
9d52dd6a-d305-406b-904f-88440c8e6190,8.0
80b1ceaa-e675-469d-9a6e-397e8b427871,31.0
74c471f0-257f-4824-9996-f55fb7a7989e,239.0
0fe27ecd-0e5f-48de-9fd6-65c725de4a9e,90.0
20e7d420-9cfb-4c27-b140-a4a68a2c0629,54.0
8215b628-624b-4928-a245-06f6ab529bd4,99.0
0f301b05-b477-44c8-a2fe-89ab9f81167c,356.0
2dd6544f-b36b-446b-92c5-75c95389c706,276.0
d83f7cb0-afdf-4b97-8488-f61b7bbb3316,79.0
1badae2e-43b4-487b-9bf3-9c51787d923e,13.0
eb0eb751-6936-41d5-8420-075951057dd7,72.0
374b649f-03a1-4b52-be59-e60880f87e9a,232.0
b494e2df-b823-4895-864b-41e0f6994ad0,73.0
7e38e3e1-07d7-438b-bba3-eae3b2c9841b,418.0
a4156985-3358-4f58-a417-5249b46a61fa,54.0
4daf5942-b21b-4ecb-af9e-bef7df963f0c,4.0
0e1b0850-26fe-4c28-8369-2f6cccd19a5f,118.0
c2af5b0b-dbc3-4449-8f49-58a5ba2fdb28,26.0
dca8aa79-e4e1-4f05-85a0-a6f06d7de321,411.0
f8081da3-5650-4648-b4a7-512723c86583,126.0
71cda45d-3fd4-49c9-9a7f-0222082bfdba,117.0
683aad89-c806-4e55-be81-43ddea3e1d04,767.0
aba866ab-968d-4d98-9142-00d206cedf56,380.0
9cd620b4-1ad9-47c5-ac78-a2b31f9813e5,48.0
39b7a6a4-82e6-4db1-9bd1-63949e86ec6f,321.0
7bd6f388-6be6-4b92-b4fd-75d600d950df,332.0
7105b5ea-014d-4908-a202-1406340fd007,10.0
3025489f-78e7-41a2-93aa-5670119c8808,564.0
62eb9be0-286e-44d8-94fc-6dbff16351be,51.0
b3bbac16-9bf7-4ea7-b9e6-55c30cddba3f,86.0
c36a805c-0824-4c0e-a2bd-df6b39c25c9c,231.0
46a1a9d6-340d-4167-bead-e0bce14c9fd2,197.0
afc43689-8b8d-40e3-a04f-1459ff6e34cb,238.0
42d8a8dc-5c79-433e-a0bd-eb35e7606425,41.0
9fcff632-52b3-42b3-94c7-bf2d7a5800ed,41.0
5786f2a1-479c-4690-bd83-a7a8e6fea3ee,7.0
52ba351e-bfd8-4f1d-85ee-2f7dbea25e56,239.0
0a39d055-0d46-471c-bb18-f040412c7118,27.0
cb028322-eff5-47a5-8fa1-7537b6d42fab,8.0
52a0cef1-90c6-4900-b6d8-b814e437219e,39.0
8a37849b-7be1-4caf-b7c7-07072c68a696,104.0
3525df40-233d-4ae1-bd80-2ac733c995cd,16.0
99c5c6f1-7bd8-4049-8acf-c83a4609ecf4,51.0
62e33406-999f-45b8-adfc-9830c8d59e46,7.0
4a124fef-806a-4f3f-99d3-2152e5479ffe,519.0
8541ea93-1575-408b-9e60-c32fd45c4d8e,157.0
fa16dbd2-ddb5-487c-84ad-33c29bdf6aa5,41.0
cdeda5fd-711f-492c-bb58-97d121dede1d,16.0
7f57820a-ffd6-49eb-b06b-95906f83f44e,8.0
a86f1507-5a81-4eaf-a004-3540243409d7,157.0
7bae6287-2d65-4147-9cd7-6a1c44fabdb9,14.0
b2b937e0-09db-4c8d-81db-e31bc095d91e,57.0
530f3fb9-3c6f-4481-9493-95d7019b57eb,235.0
bc822e5b-7c76-4b1d-be43-54243dc154d1,437.0
ee67cb1a-3948-488e-a2c9-918d4d9ca8c7,268.0
88a7c293-b02b-4a9f-b3d2-659cd80234bd,61.0
dd9858a8-2003-4da4-9c00-4aa51e8ac3bb,128.0
eff24510-1e09-4799-8161-32cf83ff26e7,21.0
6a29cda5-2a33-403b-b172-ce24a70edd57,4.0
206b98d0-5c8e-4a3f-be38-b781fbc82858,28.0
3a7f4067-2a34-48b9-bc44-998648d5a6d3,141.0
899cd469-3a4a-4e14-ae26-8336764d8d9c,9.0
e17f4dec-de8e-458a-99f3-073e41ae20d9,29.0
6b5d5506-191b-4b12-9ff1-dc5dd3ed957a,35.0
b644bd2b-4354-423f-b71a-b5906cdf4c31,104.0
9d2fcda3-53ba-41c0-aca6-42dc4c58dc29,15.0
6d8a3134-2cc3-42c1-9713-f340eeb19ca6,42.0
68f31038-a5d8-485f-a42a-d37c09d3b70b,11.0
7727d502-ea2c-4d68-9af3-2211a7b4a40a,6.0
5aae3032-ce69-4cfc-8291-a0fb54c25ea3,8.0
Query:
SELECT "player_id", "team_id", SUM("points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
  AND "points_scored" IS NOT NULL
GROUP BY "player_id", "team_id"
HAVING SUM("points_scored") >= 15
LIMIT 100
Answer:
Too long, hard cut:
player_id,team_id,total_points
4d4503ad-ee6d-4675-85eb-cf77b4398e4d,b827dbdf-230f-4916-9703-3bb9004e26eb,160.0
6368d89d-a274-45c3-b6c8-6e680043ea7a,23426c0b-1705-4dfb-a0e2-efdbdd8fd6f6,38.0
a2fd2a9d-117c-4f59-aff9-f879810a823f,87721c44-53a2-47aa-9b3a-0f1c99b0f328,56.0
b780b507-d4b0-4179-9379-68707c981553,fe037cba-25d9-42f5-a461-61d7102c17de,15.0
9525b7d1-9151-4caa-acff-887bc95c3bb0,fe037cba-25d9-42f5-a461-61d7102c17de,24.0
9e0c411b-26c3-4e6f-a1df-e345a236f32d,399ad7fb-de60-45a6-a71f-d26e00f1a4ec,32.0
202be29b-86e8-4509-8520-faa096a9bc0c,ef184799-d79b-49d9-a662-991eaf4044cd,114.0
766ea0da-3405-4220-bc2e-a510230a3812,ef184799-d79b-49d9-a662-991eaf4044cd,173.0
a5974574-5371-4c86-be5a-49c19ea24bc7,0dadedb0-2bd3-45e7-91a3-93af6c4e87f2,55.0
05f6462d-a1da-4446-913e-0507fc796553,ec0d6b67-4b16-4b50-92b2-1a651dae6b0f,175.0
a72cbc64-3b2d-44ae-97c4-3411cd80db3a,ec0d6b67-4b16-4b50-92b2-1a651dae6b0f,96.0
723c424e-809e-48ff-a985-f7c6b7f5fd5b,6b170a32-8445-4cb1-8638-724996c3094b,33.0
0e1d2a29-f279-450a-a43d-eec8e650f55f,3b6293f3-03db-46d2-8793-248963c2d83b,144.0
847556ed-23fd-493e-a0b2-f5a49a803248,d20216d8-161c-46e3-b8d2-92208ddf5acf,67.0
c4b06d6c-ba7e-42e0-833d-9bed0f71e3a2,d20216d8-161c-46e3-b8d2-92208ddf5acf,36.0
1832a63a-9460-4476-894f-93d1337bc7f2,820c8f26-cf11-4997-b2e2-19f47bd2f72f,25.0
24bc6f8f-22ec-4d1a-8b2c-fe239baaca18,ad9fce12-6b1a-400c-bcbe-29d84d065fc0,96.0
592204ea-cbdb-46b0-9b94-f6ee74b40e41,612f7f66-1de1-4d42-b842-9a508daab911,47.0
a54b2926-47dd-45f3-973f-3391924963b3,4383eb6a-7fd8-4ff2-94c5-43c933121e88,840.0
04b30276-bb14-4a2e-97b5-8fea8aa8ef0a,ad4bc983-8d2e-4e6f-a8f9-80840a786c64,26.0
279bf10f-e507-4fce-900e-ca2a536e4488,0c0608b3-f349-4f5e-9a10-7e6a744dd0d2,217.0
9bc64a87-00c1-4dde-9164-978d3709ab97,0c0608b3-f349-4f5e-9a10-7e6a744dd0d2,56.0
7a2bbee9-fca1-4883-9789-b57d186bfac0,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,246.0
8e1ce250-680b-4d31-8acc-575b53e41b24,a0a22502-0d84-440c-84af-1fbb070ad54c,43.0
890e444d-be80-4542-ba52-c20c07c9006d,aacdc78d-b7fa-48f6-9686-2fdb8a95030e,166.0
d1a93a29-ac7a-4e7e-9ffe-2b998c42d74b,2f8c85a7-54f4-4942-be16-2cbac77c82d7,28.0
9e1a78de-7360-4854-9f0f-3bd993ab8a2d,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,68.0
93ce74df-00e3-4766-8e48-35b9189768a3,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,47.0
f7cb2a42-099a-4576-a9ea-de9aa89bfc58,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,31.0
f7690658-ae3a-4c86-8d1e-4c55bcf8664f,632616c5-2dbb-4017-a449-c9dfc303f026,37.0
3898a9da-666e-44e3-964b-40335f742503,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,692.0
7c56fc95-0355-4223-bb46-49bf9eb60601,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,438.0
6b0377a1-ef04-415b-b91f-ffbc6de7c208,ca5318f2-48eb-4f6b-896a-966b900aa42f,62.0
d1f0d865-38d9-4fda-bfee-558cb5688a9b,e76479d0-a768-46d2-89bf-7b9dae12bec8,62.0
0e1b0850-26fe-4c28-8369-2f6cccd19a5f,d4dc55b3-94fe-4d4f-b0bf-c50c5f064392,118.0
376bbccd-55ce-407c-95fd-379a623cd2b1,d20216d8-161c-46e3-b8d2-92208ddf5acf,21.0
6d8a3134-2cc3-42c1-9713-f340eeb19ca6,ad9fce12-6b1a-400c-bcbe-29d84d065fc0,42.0
057f915e-607c-4485-ad7f-ae7ce39f287e,612f7f66-1de1-4d42-b842-9a508daab911,128.0
2399d727-b7bf-4969-98d1-5b5f80bef0f8,68a3227f-677f-43b0-9a3a-cad79d0df9e2,254.0
bb6d01d4-37ad-4f5c-a178-faac236f76b6,4fbebf0a-e117-4a0c-8f15-c247535a2a1b,241.0
7e52fc79-092a-4528-a6fb-64b2a806fab6,a17dfc54-415f-49c3-a2e6-d6fa9db18b0a,192.0
1c5d0d50-18da-4dd7-9157-91a0810aa7bf,632616c5-2dbb-4017-a449-c9dfc303f026,87.0
09af4b57-39a9-41a8-a63f-2f0eeccde755,632616c5-2dbb-4017-a449-c9dfc303f026,52.0
b931eadd-8439-472e-8817-018a1372e313,1b78e7f6-f25c-4921-98e2-9bc565f8dfb4,45.0
5db407ad-3fcb-4f46-983a-bbc8446fc165,a601205f-3bfe-4052-ac0b-b8f18cf3efd3,68.0
327eec9a-9e85-4d63-be5a-759e8566c90f,912f8837-1d81-4ef9-a576-a21f271d4c64,81.0
a79937f9-925b-4346-ab79-97816187bc70,7888d144-563d-4f84-b99b-d120aecf1fef,204.0
e71023b2-eb60-40c8-8711-fba007d00395,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,104.0
c707835b-2fe7-446a-a041-a3cdcdd3cfaf,0d037a5d-827a-44dd-8b70-57603d671d5d,121.0
3c9f8734-d26d-4a2d-9661-8b41a3d99734,2ed86226-3fff-4083-90fa-6b02307e6f73,17.0
08e1ce45-37d1-43e0-afb5-ab291ced5fcb,150148c2-ca8f-414f-8f41-d94a55d4a122,117.0
fbfe7c2a-d130-4e3a-8d2c-0c8b1e882312,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,34.0
e4f78e12-8b32-4c81-926a-2968390ca3d8,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,33.0
a3973e58-6747-479e-bdb8-9a225cec6b44,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,83.0
568ae791-0950-419c-bc7f-fd6f84f3384e,b47d10b8-a2a5-47df-a2f9-7bd0b9d51beb,55.0
38eeb6b8-e3a0-40f9-9edb-43ce1f9c1e4f,a9f5c9a2-342c-4881-9996-5d5c05ec9bd9,36.0
e51cbf53-d1c0-4c3b-a94d-552ad4bedefd,4af63ebd-d3c8-4772-bbde-938a078bd057,26.0
2f7643a4-824d-4d5e-be38-1165ea6981be,8ddbfca9-a931-4908-aa31-9fcd17624b5f,21.0
ae6c3caa-1aa2-4b67-a2ac-85a548140bcf,a3fef707-e4fc-48a0-82f1-f4ef01b76f45,46.0
e878b4f3-5ef4-439b-8b52-efd8fabb679a,a3fef707-e4fc-48a0-82f1-f4ef01b76f45,45.0
d9adfbf8-f0cc-4303-a615-b4b7ff579879,9fccbf28-2858-4263-821c-fdefb3c7efa3,125.0
7605aaac-9a5f-423c-b6ef-1444d4e7e77b,efba5350-79bc-47aa-a189-db177b95b491,115.0
4290c928-13c8-4aee-8707-5e8e681af8cd,5f9a90a2-392
Query:
SELECT "id" AS "team_id", "market"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS"
LIMIT 100
Answer:
team_id,market
fe406882-9f22-495e-9df6-ef357a6803c6,Princeton
ca478771-aa3d-4231-81e0-b70f519134fb,Yale
5c7bf63f-bc39-43c5-9907-73b50b7a6b34,Harvard
d60357bd-1205-42e9-9092-d986a2843a34,Dartmouth
88ff8c00-958e-4ccf-a21d-77fab9e93692,Cornell
ca74bd67-034c-4468-8487-6f983f5eb4f6,Columbia
558abf02-97f4-4323-aa99-63c076d35932,Brown
e6c94452-1adf-4fb9-90e5-10f165c57c5a,Pennsylvania
8ab00d43-840a-4c96-bdee-bf88fa6e3f11,Oklahoma State
6ed15092-2670-450a-99c2-61d861e87644,Texas
f8c705b7-87d3-411a-9c8b-5124daab0469,Texas Tech
db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor
0e4258fa-3154-4c16-b693-adecab184c6c,Iowa State
f7fcbb6e-4a55-41ea-ba21-f763ed914467,TCU
b2fda957-e15c-4fb2-8a13-6e58496f561e,Oklahoma
f770d3a2-221c-49ce-9c7a-680f7417fe9e,West Virginia
fae4855b-1b64-4b40-a632-9ed345e1e952,Kansas
d203f38a-a166-4258-bca2-e161b591ecfb,Kansas State
7e42fa84-68cd-47a6-b49a-18b5414d8084,Northern Colorado
de8fc8a7-253f-4597-8a48-a0104ef226ae,North Dakota
6a67ba19-56a8-4dd8-a5ae-9e9f2523c274,Idaho State
54df21af-8f65-42fc-bc01-8bf750856d70,Eastern Washington
c7116621-45ed-4ab1-9ad9-dee524120569,Southern Utah
4743cb7c-784a-4b95-a380-5471f92f2217,Weber State
1753768d-e46e-40b1-8d69-a8ae5cccec03,Northern Arizona
1dc13b18-f9b3-4bb9-b1cf-979fcd8c2b6f,Sacramento State
ec6185b7-4e0c-4eb8-99ef-f3a4dccf6b91,Idaho
79965018-7f6f-4273-9eef-65c99b592b01,Portland State
bec40585-b587-4548-93f5-b7c00b046aea,Montana State
e3848467-66c0-41e5-8283-02e3586d8601,Montana
f8b1bf00-5b73-4ac4-98c0-ec554027ae32,Nebraska
b03bb029-4499-4a2c-9074-5071ed360b21,Rutgers
150148c2-ca8f-414f-8f41-d94a55d4a122,Illinois
c7569eae-5b93-4197-b204-6f3a62146b25,Wisconsin
2778d005-cc14-4e58-9bf2-3fc37bffb62f,Maryland
a41d5a05-4c11-4171-a57e-e7a1ea325a6d,Michigan State
12d7f888-675b-459f-9099-a38f771d8a95,Purdue
c10544de-e3bd-4776-ba2e-83df8c017fd1,Iowa
857462b3-0ab6-4d26-9669-10ca354e382b,Ohio State
fa416692-7e09-4f0a-9bcf-0cf7d5149a14,Minnesota
4aebd148-8119-4875-954c-66779867989b,Penn State
bdc2561d-f603-4fab-a262-f1d2af462277,Michigan
4b7dedc0-7b48-49a4-aad6-8a94a33274d2,Northwestern
c3f0a8ce-af67-497f-a750-3b859376b20a,Indiana
9c396fa7-c165-4599-8542-158bd0d9a199,Wright State
90ec10eb-38a4-4a69-b072-ef71d294933b,IUPUI
da7d41bc-48b0-4a04-948f-792d6470bcb5,Youngstown State
61a3e5ab-1be3-4694-b83f-edae0953f409,Green Bay
dfe0d93f-94a5-47fb-b7aa-f74786e09acb,Illinois-Chicago
ab9a1315-293f-42d3-a164-860216e81576,Northern Kentucky
1b78e7f6-f25c-4921-98e2-9bc565f8dfb4,Detroit
e30c0417-b220-424e-886e-dd1249e2ca5a,Cleveland State
aeaaef0d-5238-414e-ac04-c55a22cba208,Oakland
5d77800f-1ae6-4b66-8e97-b0dbb8bbc717,Milwaukee
06f7c904-0ac7-4125-b0f4-f4871bb69057,Marquette
aef5e386-d8e8-460c-8014-3a2f090fd988,Seton Hall
bdb7d7a4-45f8-4bf3-ab85-15488c451494,Butler
7d3b9c72-cbdd-4b64-9aa3-a5bde9b75fdc,Providence
ee09e6ad-3872-4745-bbb9-ebbd5c6f8318,DePaul
c1f4aae1-aa16-4095-aeab-10e5c2a1236a,St. John's
7d797407-623e-476d-b299-46de4275414d,Creighton
4383eb6a-7fd8-4ff2-94c5-43c933121e88,Villanova
8736b67f-5924-400b-bf94-3bd804c36600,Georgetown
0d8a328f-20ce-410b-bed1-15fc01308aaf,Xavier
8aaad1c0-d16e-4b9f-8541-dac670addd71,UC Davis
45439cdb-af7a-4743-936c-dccc76b30877,Cal Poly
c009914b-3303-4dee-b915-978aa48a31d0,Cal State Fullerton
11a617d5-af03-4cce-bc8a-51114d9e41fe,Long Beach State
3b6293f3-03db-46d2-8793-248963c2d83b,UC Santa Barbara
39d00ef7-320d-47cf-a2fa-859bc24d16b4,UC Irvine
d4dc55b3-94fe-4d4f-b0bf-c50c5f064392,Hawaii
6b170a32-8445-4cb1-8638-724996c3094b,UC Riverside
cb732075-23a5-4e71-9037-50a7a002bdb2,Cal State Northridge
8accb91e-6086-41b3-a420-7a82fa442365,Elon
ad24b724-a11c-4dcd-a68c-67c53833ccb7,William & Mary
0affc15f-641d-4211-970d-fb9fb8d36842,Delaware
36ca2008-cd2e-4549-8b3b-c745167e07f3,Hofstra
6f3eec09-2918-4739-a0e8-5d79e14a8332,Towson
8548dacb-3636-48a8-8c46-611ab0c15fc0,Charleston
c54279f9-3028-4663-893a-7d22482f8098,North Carolina-Wilmington
93df9b18-e9fc-42a7-bb45-a736c203b4dc,Northeastern
f2d01b77-0f5d-4574-9e49-2a3eaf822e44,Drexel
524e3eec-7dde-45c7-b3cc-6308cec73350,James Madison
c13f96ba-c79c-452f-9f63-3b45fae4e543,Samford
4c9fb59b-6cec-4b0d-bb0f-628b391d138c,Chattanooga
6bff595c-32cb-4028-837c-c7de2a2107e6,Western Carolina
612f7f66-1de1-4d42-b842-9a508daab911,UNC Greensboro
d750d88f-f7b8-4bc3-a5f6-36e7a67ec93e,East Tennessee State
412e7f0d-fb93-4e6e-be1f-9a4c7490d121,Citadel
ca5318f2-48eb-4f6b-896a-966b900aa42f,Furman
a14b0057-8eb5-43d2-a33b-666196da933e,Mercer
227d3567-d57b-417e-afc4-735e4cb308a1,Virginia Military
9916713f-b243-452b-93ae-a2c3ccabf68b,Wofford
0dadedb0-2bd3-45e7-91a3-93af6c4e87f2,Arkansas-Little Rock
4af63ebd-d3c8-4772-bbde-938a078bd057,Coastal Carolina
87d88c93-29bc-4306-b0a6-87c6f6e80da1,Appalachian State
7c2b372b-b5f0-466e-90cf-880beec57584,Texas-Arlington
18585f21-1d63-4400-974c-433fd5073c34,Louisiana-Monroe
94ea835b-8ce9-4de2-a5b1-971548fea974,Georgia State
95826e36-ea33-4b51-83a8-7b4cc20999ee,Arkansas State
Query:
SELECT P."player_id", P."team_id", T."market", SUM(P."points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
WHERE P."season" BETWEEN 2010 AND 2018
  AND P."period" = 2
  AND P."points_scored" IS NOT NULL
GROUP BY P."player_id", P."team_id", T."market"
HAVING SUM(P."points_scored") >= 15
LIMIT 100
Answer:
Too long, hard cut:
player_id,team_id,market,total_points
847873b9-124f-4957-8c43-24187cfb20d3,7d3b9c72-cbdd-4b64-9aa3-a5bde9b75fdc,Providence,628.0
85a9e678-ac3c-4be6-be75-5b90e5aaeadd,7672ff16-8436-47e6-8546-0fb5494ec7ee,Utah State,520.0
75e06363-9dd7-48bf-9f0a-b37c46b1f5b2,df3da9d7-2d2b-44e2-99e2-08c4945a203b,Valparaiso,66.0
07e3ab2a-247b-436e-ad79-eab9afcc355b,72971b77-1d35-40b3-bb63-4c5b29f3d22b,Vanderbilt,646.0
244db3e8-2f73-4003-b12d-16fcc2ccadc1,efba5350-79bc-47aa-a189-db177b95b491,Connecticut,98.0
8ecd67f7-5ec5-4710-8576-974d8cead36b,1e42cce3-236b-4f3e-9650-2c45e6332e1e,Saint Louis,97.0
5b0f4704-80be-4a55-b114-24ac1e1731b4,28023973-1d9d-4d01-b939-dc8f9b44fb1c,Santa Clara,776.0
25e10dc7-e4dc-4b8d-97d4-937ba0b01c3f,dd8db4d8-d984-4cab-b7f6-22c6b8c2c45f,Fresno State,123.0
a0928e1b-5881-4153-bccc-82147be78ad9,e76479d0-a768-46d2-89bf-7b9dae12bec8,George Mason,300.0
4457e431-fabd-4388-a143-ef0a2b5f7d2d,0f63a6f5-bda7-4fd9-9271-8d33f555ca19,Georgia Tech,387.0
40c39549-a9f5-406d-aa24-7d0f2f6a6786,0f63a6f5-bda7-4fd9-9271-8d33f555ca19,Georgia Tech,135.0
ee18b078-e778-4c0e-b561-ca18d32af15b,0f63a6f5-bda7-4fd9-9271-8d33f555ca19,Georgia Tech,18.0
079c8c63-c066-4ff2-9b63-656541633a08,fb28bd56-9e56-40c1-992d-71c1e27fe4fd,Jacksonville,30.0
545369e0-8820-4702-9dee-850c86cb7b9a,d203f38a-a166-4258-bca2-e161b591ecfb,Kansas State,59.0
796381b4-45cc-49ca-9809-ae23726767da,576b816b-5b9a-4768-a62b-f8435a8272c2,Morgan State,22.0
ffedc068-dd55-4ab8-95e1-c44b477f6a35,de8fc8a7-253f-4597-8a48-a0104ef226ae,North Dakota,15.0
43f3d550-d3ab-49e5-b031-1191999deec6,4b7dedc0-7b48-49a4-aad6-8a94a33274d2,Northwestern,173.0
fdb3481a-f528-4a21-bad0-93d5a2994ff3,ce967953-5c50-4220-87b2-99acb9606e84,Old Dominion,53.0
363e8522-1170-49ac-b378-42763d266798,532d3874-b4b3-4c5c-acc6-749a6db26c8f,Oregon State,108.0
53425201-ccee-41f4-a800-e7937b858f06,b06b63b0-20e6-4c78-bdcf-5feac3d7995e,Presbyterian,15.0
d8fb6de6-0006-4365-9546-72347c35d360,7e42bca2-3cd7-4aca-aa46-f190fe5d8eb4,Rhode Island,87.0
f7ceea4b-be11-4eca-a282-54cca186de01,9c396fa7-c165-4599-8542-158bd0d9a199,Wright State,41.0
b644bd2b-4354-423f-b71a-b5906cdf4c31,ad4bc983-8d2e-4e6f-a8f9-80840a786c64,Arizona State,79.0
9bd565d2-5908-4775-84fc-108397c003d1,dd8db4d8-d984-4cab-b7f6-22c6b8c2c45f,Fresno State,33.0
eb0921de-1c84-475b-8d2e-75dcc790f05a,3556d445-b3f1-467e-b150-952b32dfb150,Sacred Heart,69.0
d991c56b-2c47-40bf-9e46-7000403a3a49,3556d445-b3f1-467e-b150-952b32dfb150,Sacred Heart,61.0
bf403c06-ce4b-4672-ad1f-7ea96ff31154,ce967953-5c50-4220-87b2-99acb9606e84,Old Dominion,74.0
6da39e95-b307-427d-84c8-9f8d4a80bf3e,2959bd24-7007-41ae-a3a3-abdf26888cfc,Tulsa,203.0
02111dee-eb45-4c6d-80e3-a4dd5ee70c20,2959bd24-7007-41ae-a3a3-abdf26888cfc,Tulsa,27.0
2112b082-11a2-44a7-881e-df5775eba43a,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor,348.0
81c59bb5-446d-40d3-9e5f-21acce7e3751,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor,209.0
eb7b019e-5bd9-4ce4-9218-8b3fc0190c51,632616c5-2dbb-4017-a449-c9dfc303f026,Dayton,97.0
fc1571ea-9123-4a52-92fe-362abd488aba,ca5318f2-48eb-4f6b-896a-966b900aa42f,Furman,94.0
f3e56ca1-6e1a-4339-b479-80d765bb787c,a14b0057-8eb5-43d2-a33b-666196da933e,Mercer,20.0
f8312103-5c78-4b5f-8024-5ccf79903eb0,1da70895-f77f-44ef-b216-d63c02e696eb,Oregon,141.0
5786e861-0ab1-4827-9c82-0cbff61446c5,8598d1b6-106b-4083-a512-2e495729525a,Temple,268.0
b076d524-a708-4e7e-9df8-2803c54d1c2e,6f3eec09-2918-4739-a0e8-5d79e14a8332,Towson,31.0
d5ebfde0-0b85-4f8f-ba9a-1108bf28cfba,399ad7fb-de60-45a6-a71f-d26e00f1a4ec,Tulane,75.0
fdd2e219-7ad1-4da8-8dae-c640ad459959,399ad7fb-de60-45a6-a71f-d26e00f1a4ec,Tulane,59.0
52aa60ad-3aef-4bfc-bedc-a7e55bc400b0,c2104cdc-c83d-40d2-a3cd-df986e29f5d3,Alabama,349.0
cee31184-ef48-4ab6-bf9c-e93681a1754e,a9f5c9a2-342c-4881-9996-5d5c05ec9bd9,Buffalo,79.0
72e71da3-0a63-4bd4-aa92-079893a5afc0,412e7f0d-fb93-4e6e-be1f-9a4c7490d121,Citadel,24.0
74fb8786-680f-443e-8b98-c253162a8942,dcf5c2e7-c227-4c20-af26-715d5f859412,Clemson,420.0
9d9593f3-29dc-47ee-9c0f-bf592964a416,dcf5c2e7-c227-4c20-af26-715d5f859412,Clemson,241.0
69c664f1-aa08-4257-a846-c0072f6fa655,80a19b57-d6ab-4bee-934f-33a72c2e958a,Colgate,20.0
26dc8de0-f715-443e-aaaf-b59a5828f0c6,1b78e7f6-f25c-4921-98e2-9bc565f8dfb4,Detroit,34.0
385e9ead-7d6a-4f28-a74e-d5dc9d3c2369,912f8837-1d81-4ef9-a576-a21f271d4c64,Florida,579.0
17b1dec0-92f4-4378-a83a-fef2f5409e9d,2f4d21f8-6d5f-48a5-abca-52a30583871a,Gonzaga,196.0
c5d8a7ab-a34b-45ee-9541-a80119c2b87f,2f4d21f8-6d5f-48a5-abca-52a30583871a,Gonzaga,66.0
2cd9b23a-c7ed-4f10-864c-d7e9a32283c3,9b166a3f-e64b-4825-bb6b-92c6f0418263,Arizona,269.0
3ed1ecc1-5d66-4c43-8380-8e948bbb0f9f,5c7bf63f-bc39-43c5-9907-73b50b7a6b34,Harvard,23.0
2e37f124-2483-410c-b167-fadf60b81df0,36ca2008-cd2e-4549-8b3b-c745167e07f3,Hofstra,15.0
ec7266dd-6aea-4c87-a131-6e5ab249e277,1f99a164-d593-4d81-85d5-0d7889d6f486,Houston,398.0
f84591cb-bbc8-405e-b596-de596de621b6,c3f0a8ce-af67-497f-a750-3b859376b20a,Indiana,123.0
a28f01f8-028a-406f-bced-0643fab4d09a,7e100f63-0b32-49f6-a954-f5b7c8cf48ad,Seattle,38.0
5513f213-8e65-41c6-af9b-b9b74dfc1be7,18e898
Query:
SELECT T."market", COUNT(DISTINCT P."player_id") AS "num_players"
FROM (
  SELECT "player_id", "team_id"
  FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
  WHERE "season" BETWEEN 2010 AND 2018
    AND "period" = 2
    AND "points_scored" IS NOT NULL
  GROUP BY "player_id", "team_id"
  HAVING SUM("points_scored") >= 15
) P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
GROUP BY T."market"
ORDER BY "num_players" DESC
LIMIT 100
Answer:
market,num_players
Memphis,38
South Florida,34
Missouri,33
UNLV,33
Duke,32
Texas A&M,32
Kentucky,32
Oregon,32
DePaul,32
Louisville,32
Indiana,32
Houston,31
Boston College,31
Rutgers,31
BYU,31
Arizona,31
Florida,31
Connecticut,30
Auburn,30
Creighton,30
Alabama,30
Georgia Tech,30
Wichita State,30
New Mexico,30
Arizona State,30
Utah,30
Kansas,29
Gonzaga,29
California,29
Butler,29
Maryland,29
Ohio State,29
St. John's,29
Loyola Marymount,29
South Carolina,29
Virginia Tech,29
Florida State,28
Iowa,28
LSU,28
Michigan State,28
Pittsburgh,28
Oregon State,28
Texas Tech,28
Marquette,28
San Diego State,28
Oklahoma State,28
Saint Louis,28
San Jose State,28
Michigan,28
Illinois,28
Cincinnati,27
Colorado,27
West Virginia,27
North Carolina,27
Wake Forest,27
Tennessee,27
Mississippi State,27
Arkansas,27
Miami (FL),27
Massachusetts,27
Washington,27
Ole Miss,27
Duquesne,26
Portland,26
USC,26
Air Force,26
Texas,26
Kansas State,26
Minnesota,26
Georgetown,26
Nebraska,26
Syracuse,26
UCF,26
North Carolina State,26
Washington State,26
Virginia Commonwealth,26
Indiana State,26
East Carolina,26
Illinois State,25
Long Beach State,25
Seton Hall,25
SMU,25
Vanderbilt,25
Texas Southern,25
George Washington,25
Xavier,25
Oklahoma,25
Clemson,25
Boise State,25
Missouri State,25
San Francisco,25
TCU,25
Purdue,24
Stanford,24
Colorado State,24
Dayton,24
UCLA,24
Providence,24
Baylor,24
Pacific,24
Query:
SELECT T."market", COUNT(DISTINCT P."player_id") AS "num_players"
FROM (
  SELECT "player_id", "team_id"
  FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
  WHERE "season" BETWEEN 2010 AND 2018
    AND "period" = 2
    AND "points_scored" IS NOT NULL
  GROUP BY "player_id", "team_id"
  HAVING SUM("points_scored") >= 15
) P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
GROUP BY T."market"
ORDER BY "num_players" DESC
LIMIT 5
Answer:
market,num_players
Memphis,38
South Florida,34
UNLV,33
Missouri,33
Indiana,32
Query:
SELECT "season", "round", "game_date", "win_market", "win_name", "win_seed", "win_pts",
       "lose_market", "lose_name", "lose_seed", "lose_pts", "num_ot"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND ("win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
       OR "lose_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova'))
LIMIT 100
Answer:
Too long, hard cut:
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2011,8,2011-03-27,Virginia Commonwealth,Rams,11,71,Kansas,Jayhawks,01,61,0
2014,64,2014-03-21,Mercer,Bears,14,78,Duke,Blue Devils,03,71,0
2017,8,2017-03-25,Oregon,Ducks,03,74,Kansas,Jayhawks,01,60,0
2016,16,2016-03-24,Oregon,Ducks,01,82,Duke,Blue Devils,04,68,0
2010,32,2010-03-20,Saint Mary's,Gaels,10,75,Villanova,Wildcats,02,68,0
2017,32,2017-03-18,Wisconsin,Badgers,08,65,Villanova,Wildcats,01,62,0
2015,16,2015-03-26,Wisconsin,Badgers,01,79,North Carolina,Tar Heels,04,72,0
2015,4,2015-04-04,Wisconsin,Badgers,01,71,Kentucky,Wildcats,01,64,0
2014,2,2014-04-07,Connecticut,Huskies,07,60,Kentucky,Wildcats,08,54,0
2014,32,2014-03-22,Connecticut,Huskies,07,77,Villanova,Wildcats,02,65,0
2011,4,2011-04-02,Connecticut,Huskies,03,56,Kentucky,Wildcats,04,55,0
2014,32,2014-03-23,Stanford,Cardinal,10,60,Kansas,Jayhawks,02,57,0
2014,32,2014-03-23,Iowa State,Cyclones,03,85,North Carolina,Tar Heels,06,83,0
2016,32,2016-03-19,Indiana,Hoosiers,05,73,Kentucky,Wildcats,04,67,0
2012,64,2012-03-16,Kansas,Jayhawks,02,65,Detroit,Titans,15,50,0
2012,32,2012-03-18,Kansas,Jayhawks,02,63,Purdue,Boilermakers,10,60,0
2012,4,2012-03-31,Kansas,Jayhawks,02,64,Ohio State,Buckeyes,02,62,0
2014,64,2014-03-21,Kansas,Jayhawks,02,80,Eastern Kentucky,Colonels,15,69,0
2013,32,2013-03-24,Kansas,Jayhawks,01,70,North Carolina,Tar Heels,08,58,0
2012,8,2012-03-25,Kansas,Jayhawks,02,80,North Carolina,Tar Heels,01,67,0
2012,16,2012-03-23,Kansas,Jayhawks,02,60,North Carolina State,Wolfpack,11,57,0
2013,64,2013-03-22,Kansas,Jayhawks,01,64,Western Kentucky,Hilltoppers,16,57,0
2015,64,2015-03-20,Kansas,Jayhawks,02,75,New Mexico State,Aggies,15,56,0
2010,64,2010-03-18,Kansas,Jayhawks,01,90,Lehigh,Mountain Hawks,16,74,0
2017,64,2017-03-17,Kansas,Jayhawks,01,100,UC Davis,Aggies,16,62,0
2017,32,2017-03-19,Kansas,Jayhawks,01,90,Michigan State,Spartans,09,70,0
2016,16,2016-03-24,Kansas,Jayhawks,01,79,Maryland,Terrapins,05,63,0
2016,32,2016-03-19,Kansas,Jayhawks,01,73,Connecticut,Huskies,09,61,0
2017,16,2017-03-23,Kansas,Jayhawks,01,98,Purdue,Boilermakers,04,66,0
2016,64,2016-03-17,Kansas,Jayhawks,01,105,Austin Peay,Governors,16,79,0
2011,16,2011-03-25,Kansas,Jayhawks,01,77,Richmond,Spiders,12,57,0
2011,64,2011-03-18,Kansas,Jayhawks,01,72,Boston University,Terriers,16,53,0
2011,32,2011-03-20,Kansas,Jayhawks,01,73,Illinois,Fighting Illini,09,59,0
2010,32,2010-03-20,Northern Iowa,Panthers,09,69,Kansas,Jayhawks,01,67,0
2011,64,2011-03-18,George Mason,Patriots,08,61,Villanova,Wildcats,09,57,0
2015,32,2015-03-22,Wichita State,Shockers,07,78,Kansas,Jayhawks,02,65,0
2011,16,2011-03-24,Arizona,Wildcats,05,93,Duke,Blue Devils,01,77,0
2011,32,2011-03-19,Kentucky,Wildcats,04,71,West Virginia,Mountaineers,05,63,0
2016,64,2016-03-17,Kentucky,Wildcats,04,85,Stony Brook,Seawolves,13,57,0
2010,16,2010-03-25,Kentucky,Wildcats,01,62,Cornell,Big Red,12,45,0
2010,32,2010-03-20,Kentucky,Wildcats,01,90,Wake Forest,Demon Deacons,09,60,0
2011,8,2011-03-27,Kentucky,Wildcats,04,76,North Carolina,Tar Heels,02,69,0
2011,64,2011-03-17,Kentucky,Wildcats,04,59,Princeton,Tigers,13,57,0
2011,16,2011-03-25,Kentucky,Wildcats,04,62,Ohio State,Buckeyes,01,60,0
2010,64,2010-03-18,Kentucky,Wildcats,01,100,East Tennessee State,Buccaneers,16,71,0
2015,64,2015-03-19,Kentucky,Wildcats,01,79,Hampton,Pirates,16,56,0
2014,8,2014-03-30,Kentucky,Wildcats,08,75,Michigan,Wolverines,02,72,0
2012,64,2012-03-15,Kentucky,Wildcats,01,81,Western Kentucky,Hilltoppers,16,66,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2012,16,2012-03-23,Kentucky,Wildcats,01,102,Indiana,Hoosiers,04,90,0
2012,32,2012-03-17,Kentucky,Wildcats,01,87,Iowa State,Cyclones,08,71,0
2012,2,2012-04-02,Kentucky,Wildcats,01,67,Kansas,Jayhawks,02,59,0
2015,16,2015-03-26,Kentucky,Wildcats,01,78,West Virginia,Mountaineers,05,39,0
2012,8,2012-03-25,Kentucky,Wildcats,01,82,Baylor,Bears,03,70,0
2014,32,2014-03-23,Kentucky,Wildcats,08,78,Wichita State,Shockers,01,76,0
2015,32,2015-03-21,Kentucky,Wildcats,01,64,Cincinnati,Bearcats,08,51,0
2014,4,2014-04-05,Kentucky,Wildcats,08,74,Wisconsin,Badgers,02,73,0
2015,8,2015-03-28,Kentucky,Wildcats,01,68,Notre Dame,Fighting Irish,03,66,0
2014,64,2014-03-21,Kentucky,Wildcats,08,56,Kansas State,Wildcats,09,49,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2017,64,2017-03-17,Kentucky,Wildcats,02,79,Northern Kentucky,Norse,15,70,0
2017,32,2017-03-19,Kentucky,Wildcats,02,65,Wichita State,Shockers,10,62,0
2017,16,2017-03-24,Kentucky,Wildcats,02,86,UCLA,Bruins,03,75,0
2014,64,2014-03-20,Villanova,Wildcats,02,73,Milwaukee,Panthers,15,53,0
2015,64,2015-03-19,Villanova,Wildcats,01,93,Lafayette,Leopards,16,52,0
2017,64,2017-03-16,Villanova,Wildcats,01,76,Mount St. Mary's,Mountaineers,16,56,0
2010,64,2010-03-18,Villanova,Wildcats,02,73,Robert Morris,Colonials,15,70,1
2016,16,2016-03-24,Villanova,Wildcats,02,92,Miami (FL),Hurricanes,03,69,0
2016,4,2016-04-02,Villanova,Wi
Query:
SELECT "win_market" AS "market", COUNT(*) AS "wins"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND "win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
GROUP BY "win_market"
LIMIT 100
Answer:
market,wins
Kansas,19
Villanova,10
North Carolina,21
Duke,20
Kentucky,26
Query:
SELECT "lose_market" AS "market", COUNT(*) AS "losses"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND "lose_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
GROUP BY "lose_market"
LIMIT 100
Answer:
market,losses
Kansas,8
Duke,6
Villanova,6
North Carolina,6
Kentucky,6
Query:
SELECT *
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND ("win_market" = 'Duke' OR "lose_market" = 'Duke')
LIMIT 100
Answer:
Too long, hard cut:
season,round,days_from_epoch,game_date,day,win_seed,win_region,win_market,win_name,win_alias,win_team_id,win_school_ncaa,win_code_ncaa,win_kaggle_team_id,win_pts,lose_seed,lose_region,lose_market,lose_name,lose_alias,lose_team_id,lose_school_ncaa,lose_code_ncaa,lose_kaggle_team_id,lose_pts,num_ot,academic_year
2014,64,16150,2014-03-21,Friday,14,Y,Mercer,Bears,MER,a14b0057-8eb5-43d2-a33b-666196da933e,Mercer,406,1273,78,03,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,71,0,2013
2016,16,16884,2016-03-24,Thursday,01,Z,Oregon,Ducks,ORE,1da70895-f77f-44ef-b216-d63c02e696eb,Oregon,529,1332,82,04,Z,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,0,2015
2011,16,15057,2011-03-24,Thursday,05,X,Arizona,Wildcats,ARIZ,9b166a3f-e64b-4825-bb6b-92c6f0418263,Arizona,29,1112,93,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,77,0,2010
2013,8,15795,2013-03-31,Sunday,01,Y,Louisville,Cardinals,LOU,b795ddbc-baab-4499-8803-52e8608520ab,Louisville,367,1257,85,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,63,0,2012
2017,32,17244,2017-03-19,Sunday,07,W,South Carolina,Gamecocks,SCAR,1c7ec608-3b36-4cee-adac-9265e3792597,South Carolina,648,1376,88,02,W,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,81,0,2016
2017,64,17242,2017-03-17,Friday,02,W,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,87,15,W,Troy,Trojans,TROY,6373b18c-62f6-49bc-bd4c-8959a2466516,Troy,716,1407,65,0,2016
2010,4,14702,2010-04-03,Saturday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,78,02,W,West Virginia,Mountaineers,WVU,f770d3a2-221c-49ce-9c7a-680f7417fe9e,West Virginia,768,1452,57,0,2009
2010,8,14696,2010-03-28,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,78,03,X,Baylor,Bears,BAY,db6e1cab-3fa3-4a93-a673-8b2a358ff4bf,Baylor,51,1124,71,0,2009
2010,64,14687,2010-03-19,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,73,16,X,Arkansas-Pine Bluff,Golden Lions,ARPB,1394dd8a-040e-4509-9ee3-761d60eaf6c9,Ark.-Pine Bluff,2678,1115,44,0,2009
2015,64,16514,2015-03-20,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,85,16,X,Robert Morris,Colonials,RMU,6906e22d-92fa-40cb-8c05-ec8391ac1979,Robert Morris,579,1352,56,0,2014
2015,2,16531,2015-04-06,Monday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,01,Z,Wisconsin,Badgers,WIS,c7569eae-5b93-4197-b204-6f3a62146b25,Wisconsin,796,1458,63,0,2014
2011,32,15053,2011-03-20,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,73,08,X,Michigan,Wolverines,MICH,bdc2561d-f603-4fab-a262-f1d2af462277,Michigan,418,1276,71,0,2010
2011,64,15051,2011-03-18,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,87,16,X,Hampton,Pirates,HAMP,161354af-1f3e-4d58-88f7-e016ec74b7b6,Hampton,270,1214,45,0,2010
2015,16,16521,2015-03-27,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,63,05,X,Utah,Utes,UTAH,0d037a5d-827a-44dd-8b70-57603d671d5d,Utah,732,1428,57,0,2014
2010,2,14704,2010-04-05,Monday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,61,05,Z,Butler,Bulldogs,BUT,bdb7d7a4-45f8-4bf3-ab85-15488c451494,Butler,87,1139,59,0,2009
2015,8,16523,2015-03-29,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,66,02,X,Gonzaga,Bulldogs,GONZ,2f4d21f8-6d5f-48a5-abca-52a30583871a,Gonzaga,260,1211,52,0,2014
2010,16,14694,2010-03-26,Friday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,70,04,X,Purdue,Boilermakers,PUR,12d7f888-675b-459f-9099-a38f771d8a95,Purdue,559,1345,57,0,2009
2015,4,16529,2015-04-04,Saturday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,81,07,W,Michigan State,Spartans,MSU,a41d5a05-4c11-4171-a57e-e7a1ea325a6d,Michigan St.,416,1277,61,0,2014
2010,32,14689,2010-03-21,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,08,X,California,Golden Bears,CAL,aacdc78d-b7fa-48f6-9686-2fdb8a95030e,California,107,1143,53,0,2009
2015,32,16516,2015-03-22,Sunday,01,X,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,68,08,X,San Diego State,Aztecs,SDSU,e6914f16-ca37-4d2e-ba26-a425910283e2,San Diego St.,626,1361,49,0,2014
2013,16,15793,2013-03-29,Friday,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,71,03,Y,Michigan State,Spartans,MSU,a41d5a05-4c11-4171-a57e-e7a1ea325a6d,Michigan St.,416,1277,61,0,2012
2013,32,15788,2013-03-24,Sunday,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,66,07,Y,Creighton,Bluejays,CREI,7d797407-623e-476d-b299-46de4275414d,Creighton,169,1166,50,0,2012
2013,64,15786,2013-03-22,Friday,02,Y,Duke,Blue Devils,DUKE,faeb1160-5d15-4f26-99fc-c441cf21fc7f,Duke,193,1181,73,1
Query:
SELECT DISTINCT "period"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
ORDER BY "period"
LIMIT 100
Answer:
period
1
2
3
4
5
6
Query:
SELECT "player_id", "team_id", "game_id", SUM("points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
  AND "period" = 2
  AND "points_scored" IS NOT NULL
GROUP BY "player_id", "team_id", "game_id"
ORDER BY "total_points" DESC
LIMIT 100
Answer:
Too long, hard cut:
player_id,team_id,game_id,total_points
d4d53ad5-655a-4c88-837b-afa6e5ae9fc9,2e78bd1b-9422-491e-9c73-37cf83b0e34e,ac13a14d-4eda-47b4-aa82-f80ff90283f2,76.0
0735961f-232c-4450-bbeb-b84d59bc7453,5326c079-3dc3-468f-a601-b776dd9c1e62,ac13a14d-4eda-47b4-aa82-f80ff90283f2,68.0
b90176bc-63b9-49ad-b287-9ca61302d110,5326c079-3dc3-468f-a601-b776dd9c1e62,ac13a14d-4eda-47b4-aa82-f80ff90283f2,56.0
f742a972-f959-4815-aaa6-aaba293ed1d3,2f513e67-f019-4eec-9096-fbc5911858b6,7312a6f6-856f-48ec-81bb-a4541aa4a71e,52.0
47c237c7-7728-4cc3-a486-289dabca1faf,175d34a7-3823-4e4f-9f11-2464f55360b8,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,39.0
df8a5c72-69a9-484b-8fe3-4f821bf8acd4,2c93a75d-5449-4ec1-9ca2-1e6c812399a4,feeaa502-96e7-4a93-9e2d-4f2b8b4689b5,38.0
77f85d65-59e1-4c9e-857d-c80a133d6e7c,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,36.0
ab91866d-c1f9-4d72-a50b-e58988c338c4,fb28bd56-9e56-40c1-992d-71c1e27fe4fd,ba9383fd-a4de-4c20-9595-ab04b1fc6a5f,34.0
7562426d-f08f-44d4-b171-ef3e97910480,6af02334-9ac3-452f-bcf4-20abdb72bd07,7312a6f6-856f-48ec-81bb-a4541aa4a71e,34.0
ae6c3fca-f2f0-49c7-b927-a98f8af08d22,ce967953-5c50-4220-87b2-99acb9606e84,063a38ce-5516-4247-8a89-a6398c063a23,34.0
2951ee11-6120-4e95-950f-52818acf5251,0e4258fa-3154-4c16-b693-adecab184c6c,90e2ef56-83b5-4e66-8f41-8c6429fd5f71,33.0
1139221c-44ac-4b46-a64e-b990bd0505d3,62a73b4a-e281-4483-a1f8-f1160a18e456,6d285c73-f067-4792-92de-52d360e162ea,32.0
f2c0f7ae-5e2c-4f45-98a4-c22c15e07960,5326c079-3dc3-468f-a601-b776dd9c1e62,ac13a14d-4eda-47b4-aa82-f80ff90283f2,32.0
4e2c5570-a16a-4ed0-ba7c-eef828a0513e,24051034-96bb-4f78-a3a6-312f3258780f,f12c2304-4511-402c-af59-e24cdd03301b,32.0
af105cc4-0052-463f-aebb-94ab7a13ec54,2e78bd1b-9422-491e-9c73-37cf83b0e34e,ac13a14d-4eda-47b4-aa82-f80ff90283f2,32.0
7a46a298-55ff-4055-b179-d4d262d35441,2778d005-cc14-4e58-9bf2-3fc37bffb62f,677fa792-4cd0-4c48-8a8c-dfd36e7cd603,32.0
90aa6a86-ae8d-484f-9f35-e8fdd18e978f,62a73b4a-e281-4483-a1f8-f1160a18e456,dfa7ee21-0448-45eb-bceb-494c1d00cdf5,32.0
3251f5cb-f4b5-4d07-a60b-9dc3b8e4b511,06f7c904-0ac7-4125-b0f4-f4871bb69057,7df7c4f4-6296-4de6-a2d3-526be09bbbfe,32.0
8b92d620-b89b-4119-ad6a-98d40e6ab15b,b2fda957-e15c-4fb2-8a13-6e58496f561e,08717055-1ab0-444a-b50a-2c267636afce,31.0
64e44f73-7cd1-42bc-a1c4-93ed243bfa01,c2104cdc-c83d-40d2-a3cd-df986e29f5d3,ce87a9d6-428d-49cc-b07b-de9b8d4e46f3,31.0
cd5a0cd9-576c-4498-be8e-e25a83f75b5f,52df1e19-b142-4a76-a439-ad68455d0581,eb205560-6489-4d8a-a394-a753b8c1cdde,30.0
8ca8f29f-5ee6-46e4-ad34-9d31d5010e74,6dfaf0ba-47c4-4e05-b0a7-72734747d48f,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,30.0
04697d6c-fc52-487d-9f20-fe20645a49ac,175d34a7-3823-4e4f-9f11-2464f55360b8,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,30.0
c08134d3-d9aa-4baf-922b-e0a1a884928c,2e8442e9-bd09-4d46-9dd3-de79433287f3,ba9383fd-a4de-4c20-9595-ab04b1fc6a5f,30.0
ca131f44-bfeb-4ebf-a8d3-b4e6ba126172,efba5350-79bc-47aa-a189-db177b95b491,dbfa5012-4f3a-4362-bd0b-20b0bb60e942,30.0
1211ed3f-92ba-471e-90b2-5698d7ae7513,175d34a7-3823-4e4f-9f11-2464f55360b8,d5f639d0-5aa8-4bd4-802b-a8e4fcad4d0a,30.0
ff9f00e9-484e-41fb-b962-6fd09fc22c7c,faeb1160-5d15-4f26-99fc-c441cf21fc7f,d097e484-af5c-4802-bc3a-7b66de523ca4,30.0
3898a9da-666e-44e3-964b-40335f742503,d3c8a767-b6fc-45d4-a5f2-18406f2993f1,ac05b409-ec26-4e68-a80e-f72e68133ddb,30.0
c0d93945-cc5f-47b1-9691-cce3c2074be0,1a470730-f328-4fb1-8bbf-36a069e4d6b2,3ed55c68-67b7-435e-9cfb-e1ce8036af81,30.0
8b92d620-b89b-4119-ad6a-98d40e6ab15b,b2fda957-e15c-4fb2-8a13-6e58496f561e,b6d5cbe9-74e0-46b8-980f-d438feba8b06,30.0
da862322-5833-4adf-8852-ab67dc749387,2267a1f4-68f6-418b-aaf6-2aa0c4b291f1,07c086d9-851b-4689-a028-765000a824dc,30.0
f0d0bf4b-7948-42ea-848f-1d6fbbc710e1,8cd24de1-2be8-4b77-bcfa-47be0495a5f4,bf005d6e-b3af-4b8e-abae-4772323fa34f,29.0
b8f506b7-2c6f-4a49-beed-f95e40221af1,1da70895-f77f-44ef-b216-d63c02e696eb,0c593192-8f17-4e0f-af71-d0a261018947,29.0
0735961f-232c-4450-bbeb-b84d59bc7453,5326c079-3dc3-468f-a601-b776dd9c1e62,f30d925a-c59c-40b6-8465-522574a49bb1,29.0
55711001-7736-4d70-a409-cb4f0e89b23b,61dadefa-76bf-4db4-8067-f88df540b9cd,dded1b99-abed-408b-9f2f-9cf602f495b8,29.0
97e140c7-04d5-40c9-9994-15965891f0b7,a0a22502-0d84-440c-84af-1fbb070ad54c,d0272323-b47a-4ed4-bc7f-e63abd6f385a,29.0
b0e9b51e-faa3-4d34-b5a8-8c3ae71f395e,08235654-772b-4e4a-9fc7-526c71bcde70,25e1390c-2305-443d-836f-048cfe28675e,29.0
e0eed913-dba5-4e30-a4f3-0b0bf78a3323,b2fda957-e15c-4fb2-8a13-6e58496f561e,d2551c34-8777-4844-9f54-b94edf191c68,29.0
5b0f4704-80be-4a55-b114-24ac1e1731b4,28023973-1d9d-4d01-b939-dc8f9b44fb1c,0d4196cc-787f-47ff-b6e0-f98b5766e8c8,28.0
db084898-ace0-43bd-81d3-e93266d0cc7c,6ed15092-2670-450a-99c2-61d861e87644,5ab4dd12-9bba-4eb8-b95f-af252a8bff7a,28.0
b8f506b7-2c6f-4a49-beed-f95e40221af1,1da70895-f77f-44ef-b216-d63c02e696eb,24849f29-d84b-43f9-82f3-777da6f6e942,28.0
8b92d620-b89b-4119-ad6a-98d40e6ab15b,b2fda957-e15c-4fb2-8a13-6e58496f561e,b91e5f65-4aa8-47ce-bbbf-c870db704516,28.0
35156dfc-e3fa-4aa6-98ac-3d4744fe9cb5,e9ca48b2-00ba-41c0-a02b-6885a2da1ff1,adb38207-2d67-4
Query:
SELECT COUNT(DISTINCT "game_id") AS "num_games"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
WHERE "season" BETWEEN 2010 AND 2018
LIMIT 100
Answer:
num_games
11163
Query:
SELECT COUNT(DISTINCT "player_id") AS "num_players"
FROM (
  SELECT "player_id"
  FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
  WHERE "season" BETWEEN 2010 AND 2018
    AND "period" = 2
    AND "points_scored" IS NOT NULL
  GROUP BY "player_id"
  HAVING SUM("points_scored") >= 15
) AS T
LIMIT 100
Answer:
num_players
6003
Query:
SELECT "event_type", COUNT(*) AS "event_count"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR"
GROUP BY "event_type"
ORDER BY "event_count" DESC
LIMIT 100
Answer:
event_type,event_count
rebound,790490
twopointmiss,425422
turnover,410166
twopointmade,400648
freethrowmade,316637
assist,293403
threepointmiss,291935
personalfoul,243613
shootingfoul,183541
threepointmade,153967
freethrowmiss,134256
block,81863
attemptblocked,81863
tvtimeout,79960
teamtimeout,63613
deadball,55249
offensivefoul,48713
lineupchange,35926
endperiod,23128
opentip,11133
officialtimeout,7528
openinbound,6847
jumpball,6157
technicalfoul,6050
review,3370
flagrantone,1778
kickball,1660
substitution,466
possession,390
laneviolation,242
flagranttwo,118
minortechnicalfoul,89
delay,60
ejection,53
clearpathfoul,53
defensivethreeseconds,4
freethrow,2
Query:
SELECT P."player_id", T."market", SUM(P."points_scored") AS "total_points"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON P."team_id" = T."id"
WHERE P."season" BETWEEN 2010 AND 2018
  AND P."period" = 2
  AND P."points_scored" IS NOT NULL
GROUP BY P."player_id", T."market"
HAVING SUM(P."points_scored") >= 15
LIMIT 100
Answer:
Too long, hard cut:
player_id,market,total_points
0a2151b1-fa37-4025-b399-ad687f68f524,Virginia,315.0
18866a40-11b3-467e-80f7-f954852a4241,Syracuse,17.0
a4ec7add-0b82-48d0-8399-bd92ce43d1f9,Winthrop,38.0
341e5d33-9c00-424a-89a2-05ac5c05060d,Charlotte,49.0
d5106b10-a44b-4a36-b478-9bac2963e2a7,BYU,134.0
9d3cd1e7-0e3a-465e-a1be-34633ee5b8b5,USC,669.0
443d619a-bdf1-474f-9f4f-60aa348abc42,Duke,930.0
1d3c6426-5cfa-4340-bc71-8b3f858c5690,Duke,113.0
12b20916-fa98-443e-9e9f-176d2f3d0359,Iona,93.0
767c93b7-8663-4147-bb70-b617b8659fed,Rice,30.0
18d301ff-b120-406a-a4ec-caafca1ab4e5,Troy,20.0
ffabfceb-eb20-4908-ba7f-f6de86c0b2a1,Utah,278.0
a3d9e6d0-fb79-4384-9f12-1de897adc9b3,Utah,446.0
aecf7b82-b350-4082-ba0b-ce96697c19e1,Yale,80.0
0f301b05-b477-44c8-a2fe-89ab9f81167c,Texas,354.0
39c05ecd-1f37-4345-b0f6-aa46219e8a32,Texas,202.0
6f8c9b90-13c9-4831-9a7c-a70717965ea6,Texas,324.0
262c71bf-0828-45e0-b1ad-f81d2deea99a,Lafayette,53.0
f68ba0e0-f6f6-4a6f-8871-a08f9cd55026,Marquette,164.0
ea317d99-4f6e-4d4d-acd8-d542d852e00c,Minnesota,426.0
1353d9f5-cd27-458a-994d-d9266b50f766,Minnesota,58.0
af0869ea-5d4a-479a-8b3e-aeb1c5b2ef11,Cincinnati,86.0
3753e2ea-bf5e-4e11-87e7-2adbf7fd2f6a,Evansville,374.0
da2acec4-3757-4f07-8016-b532e0898adb,Georgetown,283.0
0e718cf5-9430-44d0-a313-b26e83d98cf6,Georgetown,256.0
106180fd-6947-477e-a988-3c69317cbde8,Miami (FL),78.0
ca68b087-1a29-4d2d-a0aa-367a386393d0,Ohio State,188.0
fd738a12-0dfb-4760-b01d-c7b1d63791ed,Penn State,140.0
66fe3d47-cdba-4111-b493-f946257638fb,Butler,1054.0
3e9d7431-08d6-491e-ae96-4ecdd4152860,Butler,25.0
79ab25d3-7a91-424a-ad7f-8cc1786d3b98,Hawaii,15.0
436439db-3f7d-4c4d-94e3-90f25edfc67c,Kansas,540.0
96a0c23e-879d-46b2-950d-98bb7d6eff1e,Toledo,30.0
c091c00b-26a0-40ef-83a9-ca11397cf3db,Toledo,38.0
da41bc30-1220-4b15-be1f-d914297ee14b,Tulane,111.0
02d9e1b5-d7c7-4b8a-9b75-011a463feec8,Gonzaga,206.0
cf7614f3-b820-4e48-92de-c9fb818a285a,UCF,278.0
ea23bc8c-8008-47f1-928f-012e013220e8,Maine,32.0
4cd372fe-4b8b-4b7b-ae7e-05951be3d3f1,California,118.0
8a26d0ab-487e-4ff9-8a00-6482c069e4fa,California,49.0
c3899f37-1eaa-464b-8542-1b6ce591d180,Louisville,84.0
47c0bc8a-53ff-4e69-a426-5835058ad386,New Mexico,40.0
b42a09ff-9bd1-474d-8ba3-37da5ca63a77,Pepperdine,208.0
5e8bcddf-53b9-4450-8fc8-3e8214c6147d,Denver,50.0
0a6ffb07-08d8-4675-b72f-5d58d9dc003d,Hawaii,36.0
a8841baf-c5a0-44e1-b4f8-5ae06347d465,Purdue,113.0
c64ef5c6-be57-41ae-a812-265f7b976d93,Temple,562.0
7bdf4cda-0079-4fbd-b311-bbb2b79ea74e,Towson,59.0
e1478c5b-c4de-4bd1-b077-59c7c1620c49,Xavier,221.0
bd964756-e587-403a-b2d0-46311aad8de8,Buffalo,22.0
7d5f67ee-1b17-4739-a26c-0936d72706d7,Clemson,37.0
56e8d8b2-ea93-4128-b9eb-8da0c29520f3,Gonzaga,656.0
2e661ad7-3c95-4a05-82e4-c84aafeb21c5,Villanova,705.0
bfdbe15a-0766-4bb4-858a-50d5a7f780d3,Binghamton,44.0
69b5782c-efe6-4352-bfd4-800dddf878cd,Iowa State,828.0
ea3fc090-5edd-4a37-9ae9-7a3d4b32a71b,Buffalo,25.0
39c5b1bc-022a-4805-b12b-d40eb57beaa6,Bowling Green,17.0
fdd92235-668b-438f-be63-73ca4a9048f4,Arizona State,49.0
176ff870-c86f-4c13-ae0f-206f92ce29d3,East Carolina,125.0
4c54aee0-be1d-4f10-951c-36d201c01c4e,East Carolina,116.0
58de0cda-ee61-4943-aa22-5289e198767f,Florida State,354.0
d2d95857-604e-4c9b-8b2b-c681cf4e7d90,Georgia State,71.0
329461b0-7420-4f32-a417-6acc635f804d,Jackson State,20.0
956a322c-2317-49fe-9d91-d525b27940a1,Jackson State,28.0
318c8c99-c83c-4d48-8b39-6ad9c37dbefd,Montana State,22.0
40bf1cee-3107-4564-9700-937be17dc3ae,Massachusetts,51.0
29ea8857-c2ca-4443-a783-4c71b3a2424e,Northern Iowa,103.0
d5538f20-02a0-48c7-a695-4447d30075ff,South Florida,61.0
b6e2383b-265a-4409-bf28-fbbbddbe1089,South Florida,44.0
101dbac2-d812-48d7-9607-2459aea574c6,UNC Asheville,62.0
e99b4298-7565-431c-afc7-77eb45ae2110,Virginia Tech,66.0
60907f66-bd65-4f8d-9554-a3c00491ad3a,Boston College,53.0
94ca9f59-881b-4b99-9952-3131f2f0c93d,Colorado State,274.0
344a1738-7e7c-4a38-ba03-69b5652d0c93,Illinois State,45.0
5807ef5e-5fcc-4747-9c96-b5924b58df69,Illinois State,235.0
042a49d2-15b7-40c1-82a5-697262393e76,Morehead State,28.0
02b1172c-dca4-4ee9-bbaf-d10dae5765a4,Morehead State,74.0
816e5105-f493-4528-8aed-47f65752f254,Oklahoma State,159.0
51965a06-2355-45fb-ad87-c140604a39cd,Oklahoma State,28.0
7ecd52c8-46a7-42db-a1d4-d7a526cfb9c5,Portland State,55.0
b0de0229-3d39-4fed-8fcf-d25e9bc45149,Portland State,40.0
a86ea36d-2e54-4b4f-ba33-8845bc000e73,Portland State,27.0
a7adc1d3-9c3f-4613-98e2-4d3fed3b1a7f,San Jose State,50.0
985c8a5e-be27-401a-9829-54bc8a1a8f21,UNC Greensboro,92.0
6263534c-f7b1-4ad3-8ce7-e0b5a25fd236,Houston Baptist,27.0
723c11ac-7aea-436c-a117-9a68fa7f6271,Texas-Arlington,26.0
28270125-7039-4e4d-bc2f-63f8dcb79e53,Texas-Arlington,178.0
750331a4-cc56-49cc-afbf-60a80b7300ac,Texas-Arlington,71.0
832af432-9ed2-4be4-862b-2622d7871283,Texas-Arlington,37.0
feb54502-9a95-4c85-9aff-ddf2561d9e08,Central Michigan,27.0
0930cd74-8545-4dec-9d34-931621018ebc,Hawaii,17.0
07ffee16-5895-41fb-b595-8e9db5128a91,Colgate,16.0
4655ac49-6be6-4a1a-bad2-08cbb311da81,Cleveland State,17.0
68ead5dc-8541-482f-b691-c5cbfbf54973,Central
Query:
SELECT "win_market" AS "market", SUM("win_pts") AS "total_points_won"
FROM "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES"
WHERE "season" BETWEEN 2010 AND 2018
  AND "win_market" IN ('Kentucky', 'Duke', 'Kansas', 'North Carolina', 'Villanova')
GROUP BY "win_market"
LIMIT 100
Answer:
market,total_points_won
Kansas,1478
Villanova,816
North Carolina,1747
Duke,1480
Kentucky,1969
End Exploring Related Columns
Task: For the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018, provide details of each game they played in NCAA basketball historical tournament matches during the same period, as specified in the data model document.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: Based on the task, we have identified the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018. Below are the details of each game these teams played in NCAA basketball historical tournament matches during the same period:

```csv
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
season:int,round:int,game_date:date,win_market:str,win_name:str,win_seed:str,win_pts:int,lose_market:str,lose_name:str,lose_seed:str,lose_pts:int,num_ot:int
...
```

**Explanation:**

- **season**: The NCAA tournament season year (e.g., 2015).
- **round**: The tournament round during which the game took place (e.g., 3).
- **game_date**: The date when the game was played (e.g., 2015-03-27).
- **win_market**: The market or region associated with the winning team (e.g., "Kentucky").
- **win_name**: The name of the winning team (e.g., "Wildcats").
- **win_seed**: The tournament seed of the winning team (e.g., "1").
- **win_pts**: The points scored by the winning team (e.g., 68).
- **lose_market**: The market or region associated with the losing team (e.g., "Notre Dame").
- **lose_name**: The name of the losing team (e.g., "Fighting Irish").
- **lose_seed**: The tournament seed of the losing team (e.g., "3").
- **lose_pts**: The points scored by the losing team (e.g., 66).
- **num_ot**: The number of overtime periods in the game (e.g., 0).

(Attention: The data includes all games involving the top five team markets in NCAA historical tournament games between 2010 and 2018.).
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NCAA_BASKETBALL': {'NCAA_BASKETBALL': ['MASCOTS', 'MBB_GAMES_SR', 'MBB_HISTORICAL_TEAMS_GAMES', 'MBB_HISTORICAL_TEAMS_SEASONS', 'MBB_HISTORICAL_TOURNAMENT_GAMES', 'MBB_PBP_SR', 'MBB_PLAYERS_GAMES_SR', 'MBB_TEAMS', 'MBB_TEAMS_GAMES_SR', 'TEAM_COLORS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-26 22:17:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:17:11 - root - INFO - ```sql
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        T."market",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON PW."team_id" = T."id"
    GROUP BY
        T."market"
),
top_markets AS (
    SELECT
        PC."market"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    G."num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_market" IN (SELECT "market" FROM top_markets)
        OR G."lose_market" IN (SELECT "market" FROM top_markets)
    )
ORDER BY
    G."season",
    G."game_date",
    G."round";
```
2025-01-26 22:17:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:17:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:17:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:17:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 34
2025-01-26 22:17:12 - snowflake.connector.connection - INFO - closed
2025-01-26 22:17:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:17:13 - root - INFO - itercount: 1
2025-01-26 22:17:13 - root - INFO - 0
2025-01-26 22:17:13 - root - INFO - results: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,Oregon,Ducks,12,68,Oklahoma State,Cowboys,05,55,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2013,32,2013-03-23,Oregon,Ducks,12,74,Saint Louis,Billikens,04,57,0
2013,16,2013-03-29,Louisville,Cardinals,01,77,Oregon,Ducks,12,69,0
2014,64,2014-03-20,Oregon,Ducks,07,87,BYU,Cougars,10,68,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-22,Wisconsin,Badgers,02,85,Oregon,Ducks,07,77,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2015,64,2015-03-20,Oregon,Ducks,08,79,Oklahoma State,Cowboys,09,73,0
2015,32,2015-03-22,Wisconsin,Badgers,01,72,Oregon,Ducks,08,65,0
2016,64,2016-03-18,Oregon,Ducks,01,91,Holy Cross,Crusaders,16,52,0
2016,32,2016-03-20,Oregon,Ducks,01,69,Saint Joseph's (PA),Hawks,08,64,0
2016,16,2016-03-24,Oregon,Ducks,01,82,Duke,Blue Devils,04,68,0
2016,8,2016-03-26,Oklahoma,Sooners,02,80,Oregon,Ducks,01,68,0
2017,64,2017-03-17,Oregon,Ducks,03,93,Iona,Gaels,14,77,0
2017,32,2017-03-19,Oregon,Ducks,03,75,Rhode Island,Rams,11,72,0
2017,16,2017-03-23,Oregon,Ducks,03,69,Michigan,Wolverines,07,68,0
2017,8,2017-03-25,Oregon,Ducks,03,74,Kansas,Jayhawks,01,60,0
2017,4,2017-04-01,North Carolina,Tar Heels,01,77,Oregon,Ducks,03,76,0


2025-01-26 22:17:13 - root - INFO - Please check the answer again by reviewing For the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018, provide details of each game they played in NCAA basketball historical tournament matches during the same period, as specified in the data model document., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Based on the task, we have identified the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018. Below are the details of each game these teams played in NCAA basketball historical tournament matches during the same period:

```csv
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
season:int,round:int,game_date:date,win_market:str,win_name:str,win_seed:str,win_pts:int,lose_market:str,lose_name:str,lose_seed:str,lose_pts:int,num_ot:int
...
```

**Explanation:**

- **season**: The NCAA tournament season year (e.g., 2015).
- **round**: The tournament round during which the game took place (e.g., 3).
- **game_date**: The date when the game was played (e.g., 2015-03-27).
- **win_market**: The market or region associated with the winning team (e.g., "Kentucky").
- **win_name**: The name of the winning team (e.g., "Wildcats").
- **win_seed**: The tournament seed of the winning team (e.g., "1").
- **win_pts**: The points scored by the winning team (e.g., 68).
- **lose_market**: The market or region associated with the losing team (e.g., "Notre Dame").
- **lose_name**: The name of the losing team (e.g., "Fighting Irish").
- **lose_seed**: The tournament seed of the losing team (e.g., "3").
- **lose_pts**: The points scored by the losing team (e.g., 66).
- **num_ot**: The number of overtime periods in the game (e.g., 0).

(Attention: The data includes all games involving the top five team markets in NCAA historical tournament games between 2010 and 2018.) The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,Oregon,Ducks,12,68,Oklahoma State,Cowboys,05,55,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2013,32,2013-03-23,Oregon,Ducks,12,74,Saint Louis,Billikens,04,57,0
2013,16,2013-03-29,Louisville,Cardinals,01,77,Oregon,Ducks,12,69,0
2014,64,2014-03-20,Oregon,Ducks,07,87,BYU,Cougars,10,68,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-22,Wisconsin,Badgers,02,85,Oregon,Ducks,07,77,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2015,64,2015-03-20,Oregon,Ducks,08,79,Oklahoma State,Cowboys,09,73,0
2015,32,2015-03-22,Wisconsin,Badgers,01,72,Oregon,Ducks,08,65,0
2016,64,2016-03-18,Oregon,Ducks,01,91,Holy Cross,Crusaders,16,52,0
2016,32,2016-03-20,Oregon,Ducks,01,69,Saint Joseph's (PA),Hawks,08,64,0
2016,16,2016-03-24,Oregon,Ducks,01,82,Duke,Blue Devils,04,68,0
2016,8,2016-03-26,Oklahoma,Sooners,02,80,Oregon,Ducks,01,68,0
2017,64,2017-03-17,Oregon,Ducks,03,93,Iona,Gaels,14,77,0
2017,32,2017-03-19,Oregon,Ducks,03,75,Rhode Island,Rams,11,72,0
2017,16,2017-03-23,Oregon,Ducks,03,69,Michigan,Wolverines,07,68,0
2017,8,2017-03-25,Oregon,Ducks,03,74,Kansas,Jayhawks,01,60,0
2017,4,2017-04-01,North Carolina,Tar Heels,01,77,Oregon,Ducks,03,76,0
Current sql:
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        T."market",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON PW."team_id" = T."id"
    GROUP BY
        T."market"
),
top_markets AS (
    SELECT
        PC."market"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    G."num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_market" IN (SELECT "market" FROM top_markets)
        OR G."lose_market" IN (SELECT "market" FROM top_markets)
    )
ORDER BY
    G."season",
    G."game_date",
    G."round";Empty results in Column ['num_ot']. Please correct them.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-26 22:18:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:18:15 - root - INFO - ```sql
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        T."market",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON PW."team_id" = T."id"
    GROUP BY
        T."market"
),
top_markets AS (
    SELECT
        PC."market"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC NULLS LAST
    LIMIT 5
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_market" IN (SELECT "market" FROM top_markets)
        OR G."lose_market" IN (SELECT "market" FROM top_markets)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;
```
2025-01-26 22:18:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:18:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:18:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:18:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 40
2025-01-26 22:18:17 - snowflake.connector.connection - INFO - closed
2025-01-26 22:18:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:18:17 - root - INFO - itercount: 2
2025-01-26 22:18:17 - root - INFO - 0
2025-01-26 22:18:17 - root - INFO - results: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,64,2010-03-19,California,Golden Bears,08,77,Louisville,Cardinals,09,62,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Morehead State,Eagles,13,62,Louisville,Cardinals,04,61,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-15,Louisville,Cardinals,04,69,Davidson,Wildcats,13,62,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,32,2012-03-17,Louisville,Cardinals,04,59,New Mexico,Lobos,05,56,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2012,16,2012-03-22,Louisville,Cardinals,04,57,Michigan State,Spartans,01,44,0
2012,8,2012-03-24,Louisville,Cardinals,04,72,Florida,Gators,07,68,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2013,64,2013-03-21,Louisville,Cardinals,01,79,North Carolina A&T,Aggies,16,48,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2013,32,2013-03-23,Louisville,Cardinals,01,82,Colorado State,Rams,08,56,0
2013,16,2013-03-29,Louisville,Cardinals,01,77,Oregon,Ducks,12,69,0
2013,8,2013-03-31,Louisville,Cardinals,01,85,Duke,Blue Devils,02,63,0
2013,4,2013-04-06,Louisville,Cardinals,01,72,Wichita State,Shockers,09,68,0
2013,2,2013-04-08,Louisville,Cardinals,01,82,Michigan,Wolverines,04,76,0
2014,64,2014-03-20,Louisville,Cardinals,04,71,Manhattan,Jaspers,13,64,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-22,Louisville,Cardinals,04,66,Saint Louis,Billikens,05,51,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2015,64,2015-03-20,Louisville,Cardinals,04,57,UC Irvine,Anteaters,13,55,0
2015,32,2015-03-22,Louisville,Cardinals,04,66,Northern Iowa,Panthers,05,53,0
2015,16,2015-03-27,Louisville,Cardinals,04,75,North Carolina State,Wolfpack,08,65,0
2015,8,2015-03-29,Michigan State,Spartans,07,76,Louisville,Cardinals,04,70,1
2017,64,2017-03-17,Louisville,Cardinals,02,78,Jacksonville State,Gamecocks,15,63,0
2017,32,2017-03-19,Michigan,Wolverines,07,73,Louisville,Cardinals,02,69,0


2025-01-26 22:18:17 - root - INFO - Please check the answer again by reviewing For the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018, provide details of each game they played in NCAA basketball historical tournament matches during the same period, as specified in the data model document., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Based on the task, we have identified the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018. Below are the details of each game these teams played in NCAA basketball historical tournament matches during the same period:

```csv
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
season:int,round:int,game_date:date,win_market:str,win_name:str,win_seed:str,win_pts:int,lose_market:str,lose_name:str,lose_seed:str,lose_pts:int,num_ot:int
...
```

**Explanation:**

- **season**: The NCAA tournament season year (e.g., 2015).
- **round**: The tournament round during which the game took place (e.g., 3).
- **game_date**: The date when the game was played (e.g., 2015-03-27).
- **win_market**: The market or region associated with the winning team (e.g., "Kentucky").
- **win_name**: The name of the winning team (e.g., "Wildcats").
- **win_seed**: The tournament seed of the winning team (e.g., "1").
- **win_pts**: The points scored by the winning team (e.g., 68).
- **lose_market**: The market or region associated with the losing team (e.g., "Notre Dame").
- **lose_name**: The name of the losing team (e.g., "Fighting Irish").
- **lose_seed**: The tournament seed of the losing team (e.g., "3").
- **lose_pts**: The points scored by the losing team (e.g., 66).
- **num_ot**: The number of overtime periods in the game (e.g., 0).

(Attention: The data includes all games involving the top five team markets in NCAA historical tournament games between 2010 and 2018.) The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,64,2010-03-19,California,Golden Bears,08,77,Louisville,Cardinals,09,62,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Morehead State,Eagles,13,62,Louisville,Cardinals,04,61,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-15,Louisville,Cardinals,04,69,Davidson,Wildcats,13,62,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,32,2012-03-17,Louisville,Cardinals,04,59,New Mexico,Lobos,05,56,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2012,16,2012-03-22,Louisville,Cardinals,04,57,Michigan State,Spartans,01,44,0
2012,8,2012-03-24,Louisville,Cardinals,04,72,Florida,Gators,07,68,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2013,64,2013-03-21,Louisville,Cardinals,01,79,North Carolina A&T,Aggies,16,48,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2013,32,2013-03-23,Louisville,Cardinals,01,82,Colorado State,Rams,08,56,0
2013,16,2013-03-29,Louisville,Cardinals,01,77,Oregon,Ducks,12,69,0
2013,8,2013-03-31,Louisville,Cardinals,01,85,Duke,Blue Devils,02,63,0
2013,4,2013-04-06,Louisville,Cardinals,01,72,Wichita State,Shockers,09,68,0
2013,2,2013-04-08,Louisville,Cardinals,01,82,Michigan,Wolverines,04,76,0
2014,64,2014-03-20,Louisville,Cardinals,04,71,Manhattan,Jaspers,13,64,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-22,Louisville,Cardinals,04,66,Saint Louis,Billikens,05,51,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2015,64,2015-03-20,Louisville,Cardinals,04,57,UC Irvine,Anteaters,13,55,0
2015,32,2015-03-22,Louisville,Cardinals,04,66,Northern Iowa,Panthers,05,53,0
2015,16,2015-03-27,Louisville,Cardinals,04,75,North Carolina State,Wolfpack,08,65,0
2015,8,2015-03-29,Michigan State,Spartans,07,76,Louisville,Cardinals,04,70,1
2017,64,2017-03-17,Louisville,Cardinals,02,78,Jacksonville State,Gamecocks,15,63,0
2017,32,2017-03-19,Michigan,Wolverines,07,73,Louisville,Cardinals,02,69,0
Current sql:
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        T."market",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON PW."team_id" = T."id"
    GROUP BY
        T."market"
),
top_markets AS (
    SELECT
        PC."market"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC NULLS LAST
    LIMIT 5
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_market" IN (SELECT "market" FROM top_markets)
        OR G."lose_market" IN (SELECT "market" FROM top_markets)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;
2025-01-26 22:18:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:18:57 - root - INFO - ```sql
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        T."market",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON PW."team_id" = T."id"
    WHERE
        T."market" IS NOT NULL
    GROUP BY
        T."market"
),
top_markets AS (
    SELECT
        PC."market"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC NULLS LAST
    LIMIT 5
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_market" IN (SELECT "market" FROM top_markets)
        OR G."lose_market" IN (SELECT "market" FROM top_markets)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;
```
2025-01-26 22:18:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:18:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:18:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:18:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 40
2025-01-26 22:18:59 - snowflake.connector.connection - INFO - closed
2025-01-26 22:18:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:18:59 - root - INFO - itercount: 3
2025-01-26 22:18:59 - root - INFO - 0
2025-01-26 22:18:59 - root - INFO - results: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,64,2010-03-19,California,Golden Bears,08,77,Louisville,Cardinals,09,62,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Morehead State,Eagles,13,62,Louisville,Cardinals,04,61,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-15,Louisville,Cardinals,04,69,Davidson,Wildcats,13,62,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,32,2012-03-17,Louisville,Cardinals,04,59,New Mexico,Lobos,05,56,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2012,16,2012-03-22,Louisville,Cardinals,04,57,Michigan State,Spartans,01,44,0
2012,8,2012-03-24,Louisville,Cardinals,04,72,Florida,Gators,07,68,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,Louisville,Cardinals,01,79,North Carolina A&T,Aggies,16,48,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2013,32,2013-03-23,Louisville,Cardinals,01,82,Colorado State,Rams,08,56,0
2013,16,2013-03-29,Louisville,Cardinals,01,77,Oregon,Ducks,12,69,0
2013,8,2013-03-31,Louisville,Cardinals,01,85,Duke,Blue Devils,02,63,0
2013,4,2013-04-06,Louisville,Cardinals,01,72,Wichita State,Shockers,09,68,0
2013,2,2013-04-08,Louisville,Cardinals,01,82,Michigan,Wolverines,04,76,0
2014,64,2014-03-20,Louisville,Cardinals,04,71,Manhattan,Jaspers,13,64,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-22,Louisville,Cardinals,04,66,Saint Louis,Billikens,05,51,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2015,64,2015-03-20,Louisville,Cardinals,04,57,UC Irvine,Anteaters,13,55,0
2015,32,2015-03-22,Louisville,Cardinals,04,66,Northern Iowa,Panthers,05,53,0
2015,16,2015-03-27,Louisville,Cardinals,04,75,North Carolina State,Wolfpack,08,65,0
2015,8,2015-03-29,Michigan State,Spartans,07,76,Louisville,Cardinals,04,70,1
2017,64,2017-03-17,Louisville,Cardinals,02,78,Jacksonville State,Gamecocks,15,63,0
2017,32,2017-03-19,Michigan,Wolverines,07,73,Louisville,Cardinals,02,69,0


2025-01-26 22:18:59 - root - INFO - Please check the answer again by reviewing For the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018, provide details of each game they played in NCAA basketball historical tournament matches during the same period, as specified in the data model document., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Based on the task, we have identified the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018. Below are the details of each game these teams played in NCAA basketball historical tournament matches during the same period:

```csv
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
season:int,round:int,game_date:date,win_market:str,win_name:str,win_seed:str,win_pts:int,lose_market:str,lose_name:str,lose_seed:str,lose_pts:int,num_ot:int
...
```

**Explanation:**

- **season**: The NCAA tournament season year (e.g., 2015).
- **round**: The tournament round during which the game took place (e.g., 3).
- **game_date**: The date when the game was played (e.g., 2015-03-27).
- **win_market**: The market or region associated with the winning team (e.g., "Kentucky").
- **win_name**: The name of the winning team (e.g., "Wildcats").
- **win_seed**: The tournament seed of the winning team (e.g., "1").
- **win_pts**: The points scored by the winning team (e.g., 68).
- **lose_market**: The market or region associated with the losing team (e.g., "Notre Dame").
- **lose_name**: The name of the losing team (e.g., "Fighting Irish").
- **lose_seed**: The tournament seed of the losing team (e.g., "3").
- **lose_pts**: The points scored by the losing team (e.g., 66).
- **num_ot**: The number of overtime periods in the game (e.g., 0).

(Attention: The data includes all games involving the top five team markets in NCAA historical tournament games between 2010 and 2018.) The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,64,2010-03-19,California,Golden Bears,08,77,Louisville,Cardinals,09,62,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Morehead State,Eagles,13,62,Louisville,Cardinals,04,61,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-15,Louisville,Cardinals,04,69,Davidson,Wildcats,13,62,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,32,2012-03-17,Louisville,Cardinals,04,59,New Mexico,Lobos,05,56,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2012,16,2012-03-22,Louisville,Cardinals,04,57,Michigan State,Spartans,01,44,0
2012,8,2012-03-24,Louisville,Cardinals,04,72,Florida,Gators,07,68,0
2012,4,2012-03-31,Kentucky,Wildcats,01,69,Louisville,Cardinals,04,61,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,Louisville,Cardinals,01,79,North Carolina A&T,Aggies,16,48,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2013,32,2013-03-23,Louisville,Cardinals,01,82,Colorado State,Rams,08,56,0
2013,16,2013-03-29,Louisville,Cardinals,01,77,Oregon,Ducks,12,69,0
2013,8,2013-03-31,Louisville,Cardinals,01,85,Duke,Blue Devils,02,63,0
2013,4,2013-04-06,Louisville,Cardinals,01,72,Wichita State,Shockers,09,68,0
2013,2,2013-04-08,Louisville,Cardinals,01,82,Michigan,Wolverines,04,76,0
2014,64,2014-03-20,Louisville,Cardinals,04,71,Manhattan,Jaspers,13,64,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-22,Louisville,Cardinals,04,66,Saint Louis,Billikens,05,51,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2014,16,2014-03-28,Kentucky,Wildcats,08,74,Louisville,Cardinals,04,69,0
2015,64,2015-03-20,Louisville,Cardinals,04,57,UC Irvine,Anteaters,13,55,0
2015,32,2015-03-22,Louisville,Cardinals,04,66,Northern Iowa,Panthers,05,53,0
2015,16,2015-03-27,Louisville,Cardinals,04,75,North Carolina State,Wolfpack,08,65,0
2015,8,2015-03-29,Michigan State,Spartans,07,76,Louisville,Cardinals,04,70,1
2017,64,2017-03-17,Louisville,Cardinals,02,78,Jacksonville State,Gamecocks,15,63,0
2017,32,2017-03-19,Michigan,Wolverines,07,73,Louisville,Cardinals,02,69,0
Current sql:
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        T."market",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
        JOIN "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T ON PW."team_id" = T."id"
    WHERE
        T."market" IS NOT NULL
    GROUP BY
        T."market"
),
top_markets AS (
    SELECT
        PC."market"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC NULLS LAST
    LIMIT 5
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_market" IN (SELECT "market" FROM top_markets)
        OR G."lose_market" IN (SELECT "market" FROM top_markets)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;
2025-01-26 22:20:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:20:21 - root - INFO - ```sql
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        PW."team_id",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
    GROUP BY
        PW."team_id"
),
top_teams AS (
    SELECT
        PC."team_id"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
),
top_teams_info AS (
    SELECT
        T."id" AS "team_id",
        T."market",
        T."code_ncaa"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T
        JOIN top_teams TT ON T."id" = TT."team_id"
    WHERE
        T."code_ncaa" IS NOT NULL
),
top_codes AS (
    SELECT DISTINCT TTI."code_ncaa"
    FROM top_teams_info TTI
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_code_ncaa" IN (SELECT "code_ncaa" FROM top_codes)
        OR G."lose_code_ncaa" IN (SELECT "code_ncaa" FROM top_codes)
    )
ORDER BY
    G."season",
    G."game_date",
    G."round";
```
2025-01-26 22:20:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:20:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:20:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:20:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 18
2025-01-26 22:20:22 - snowflake.connector.connection - INFO - closed
2025-01-26 22:20:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:20:23 - root - INFO - itercount: 4
2025-01-26 22:20:23 - root - INFO - 0
2025-01-26 22:20:23 - root - INFO - results: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0


2025-01-26 22:20:23 - root - INFO - Please check the answer again by reviewing For the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018, provide details of each game they played in NCAA basketball historical tournament matches during the same period, as specified in the data model document., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Based on the task, we have identified the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018. Below are the details of each game these teams played in NCAA basketball historical tournament matches during the same period:

```csv
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
season:int,round:int,game_date:date,win_market:str,win_name:str,win_seed:str,win_pts:int,lose_market:str,lose_name:str,lose_seed:str,lose_pts:int,num_ot:int
...
```

**Explanation:**

- **season**: The NCAA tournament season year (e.g., 2015).
- **round**: The tournament round during which the game took place (e.g., 3).
- **game_date**: The date when the game was played (e.g., 2015-03-27).
- **win_market**: The market or region associated with the winning team (e.g., "Kentucky").
- **win_name**: The name of the winning team (e.g., "Wildcats").
- **win_seed**: The tournament seed of the winning team (e.g., "1").
- **win_pts**: The points scored by the winning team (e.g., 68).
- **lose_market**: The market or region associated with the losing team (e.g., "Notre Dame").
- **lose_name**: The name of the losing team (e.g., "Fighting Irish").
- **lose_seed**: The tournament seed of the losing team (e.g., "3").
- **lose_pts**: The points scored by the losing team (e.g., 66).
- **num_ot**: The number of overtime periods in the game (e.g., 0).

(Attention: The data includes all games involving the top five team markets in NCAA historical tournament games between 2010 and 2018.) The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
Current sql:
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        PW."team_id",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
    GROUP BY
        PW."team_id"
),
top_teams AS (
    SELECT
        PC."team_id"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
),
top_teams_info AS (
    SELECT
        T."id" AS "team_id",
        T."market",
        T."code_ncaa"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T
        JOIN top_teams TT ON T."id" = TT."team_id"
    WHERE
        T."code_ncaa" IS NOT NULL
),
top_codes AS (
    SELECT DISTINCT TTI."code_ncaa"
    FROM top_teams_info TTI
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_code_ncaa" IN (SELECT "code_ncaa" FROM top_codes)
        OR G."lose_code_ncaa" IN (SELECT "code_ncaa" FROM top_codes)
    )
ORDER BY
    G."season",
    G."game_date",
    G."round";Empty results in Column ['num_ot']. Please correct them.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-26 22:21:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:21:40 - root - INFO - ```sql
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        PW."team_id",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
    GROUP BY
        PW."team_id"
),
top_teams AS (
    SELECT
        PC."team_id"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
),
top_teams_info AS (
    SELECT
        T."id" AS "team_id",
        T."market",
        T."kaggle_team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T
        JOIN top_teams TT ON T."id" = TT."team_id"
    WHERE
        T."kaggle_team_id" IS NOT NULL
),
top_kaggle_ids AS (
    SELECT DISTINCT TTI."kaggle_team_id"
    FROM top_teams_info TTI
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_kaggle_team_id" IN (SELECT "kaggle_team_id" FROM top_kaggle_ids)
        OR G."lose_kaggle_team_id" IN (SELECT "kaggle_team_id" FROM top_kaggle_ids)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;
```
2025-01-26 22:21:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:21:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:21:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:21:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-26 22:21:42 - snowflake.connector.connection - INFO - closed
2025-01-26 22:21:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:21:42 - root - INFO - itercount: 5
2025-01-26 22:21:42 - root - INFO - 0
2025-01-26 22:21:42 - root - INFO - results: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Texas A&M,Aggies,05,69,Utah State,Aggies,12,53,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,32,2010-03-21,Purdue,Boilermakers,04,63,Texas A&M,Aggies,05,61,1
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Florida State,Seminoles,10,57,Texas A&M,Aggies,07,50,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2016,64,2016-03-18,Texas A&M,Aggies,03,92,Green Bay,Phoenix,14,65,0
2016,32,2016-03-20,Texas A&M,Aggies,03,92,Northern Iowa,Panthers,11,88,2
2016,16,2016-03-24,Oklahoma,Sooners,02,77,Texas A&M,Aggies,03,63,0


2025-01-26 22:21:42 - root - INFO - Please check the answer again by reviewing For the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018, provide details of each game they played in NCAA basketball historical tournament matches during the same period, as specified in the data model document., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Based on the task, we have identified the top five team markets with the highest number of distinct players who scored at least 15 points during the second period of games between 2010 and 2018. Below are the details of each game these teams played in NCAA basketball historical tournament matches during the same period:

```csv
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
season:int,round:int,game_date:date,win_market:str,win_name:str,win_seed:str,win_pts:int,lose_market:str,lose_name:str,lose_seed:str,lose_pts:int,num_ot:int
...
```

**Explanation:**

- **season**: The NCAA tournament season year (e.g., 2015).
- **round**: The tournament round during which the game took place (e.g., 3).
- **game_date**: The date when the game was played (e.g., 2015-03-27).
- **win_market**: The market or region associated with the winning team (e.g., "Kentucky").
- **win_name**: The name of the winning team (e.g., "Wildcats").
- **win_seed**: The tournament seed of the winning team (e.g., "1").
- **win_pts**: The points scored by the winning team (e.g., 68).
- **lose_market**: The market or region associated with the losing team (e.g., "Notre Dame").
- **lose_name**: The name of the losing team (e.g., "Fighting Irish").
- **lose_seed**: The tournament seed of the losing team (e.g., "3").
- **lose_pts**: The points scored by the losing team (e.g., 66).
- **num_ot**: The number of overtime periods in the game (e.g., 0).

(Attention: The data includes all games involving the top five team markets in NCAA historical tournament games between 2010 and 2018.) The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
season,round,game_date,win_market,win_name,win_seed,win_pts,lose_market,lose_name,lose_seed,lose_pts,num_ot
2010,64,2010-03-18,Northern Iowa,Panthers,09,69,UNLV,Rebels,08,66,0
2010,64,2010-03-19,Texas A&M,Aggies,05,69,Utah State,Aggies,12,53,0
2010,64,2010-03-19,Missouri,Tigers,10,86,Clemson,Tigers,07,78,0
2010,32,2010-03-21,Purdue,Boilermakers,04,63,Texas A&M,Aggies,05,61,1
2010,32,2010-03-21,West Virginia,Mountaineers,02,68,Missouri,Tigers,10,59,0
2011,64,2011-03-17,Cincinnati,Bearcats,06,78,Missouri,Tigers,11,63,0
2011,64,2011-03-18,Arizona,Wildcats,05,77,Memphis,Tigers,12,75,0
2011,64,2011-03-18,Florida State,Seminoles,10,57,Texas A&M,Aggies,07,50,0
2011,64,2011-03-18,Illinois,Fighting Illini,09,73,UNLV,Rebels,08,62,0
2012,68,2012-03-14,South Florida,Bulls,12,65,California,Golden Bears,12,54,0
2012,64,2012-03-15,Colorado,Buffaloes,11,68,UNLV,Rebels,06,64,0
2012,64,2012-03-16,Saint Louis,Billikens,09,61,Memphis,Tigers,08,54,0
2012,64,2012-03-16,South Florida,Bulls,12,58,Temple,Owls,05,44,0
2012,64,2012-03-16,Norfolk State,Spartans,15,86,Missouri,Tigers,02,84,0
2012,32,2012-03-18,Ohio,Bobcats,13,62,South Florida,Bulls,12,56,0
2013,64,2013-03-21,Memphis,Tigers,06,54,Saint Mary's,Gaels,11,52,0
2013,64,2013-03-21,Colorado State,Rams,08,84,Missouri,Tigers,09,72,0
2013,64,2013-03-21,California,Golden Bears,12,64,UNLV,Rebels,05,61,0
2013,32,2013-03-23,Michigan State,Spartans,03,70,Memphis,Tigers,06,48,0
2014,64,2014-03-21,Memphis,Tigers,08,71,George Washington,Colonials,09,66,0
2014,32,2014-03-23,Virginia,Cavaliers,01,78,Memphis,Tigers,08,60,0
2016,64,2016-03-18,Texas A&M,Aggies,03,92,Green Bay,Phoenix,14,65,0
2016,32,2016-03-20,Texas A&M,Aggies,03,92,Northern Iowa,Panthers,11,88,2
2016,16,2016-03-24,Oklahoma,Sooners,02,77,Texas A&M,Aggies,03,63,0
Current sql:
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        PW."team_id",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
    GROUP BY
        PW."team_id"
),
top_teams AS (
    SELECT
        PC."team_id"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
),
top_teams_info AS (
    SELECT
        T."id" AS "team_id",
        T."market",
        T."kaggle_team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T
        JOIN top_teams TT ON T."id" = TT."team_id"
    WHERE
        T."kaggle_team_id" IS NOT NULL
),
top_kaggle_ids AS (
    SELECT DISTINCT TTI."kaggle_team_id"
    FROM top_teams_info TTI
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_kaggle_team_id" IN (SELECT "kaggle_team_id" FROM top_kaggle_ids)
        OR G."lose_kaggle_team_id" IN (SELECT "kaggle_team_id" FROM top_kaggle_ids)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-26 22:22:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 22:22:39 - root - INFO - ```sql
WITH players_with_15_points AS (
    SELECT
        P."player_id",
        P."team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_PBP_SR" P
    WHERE
        P."season" BETWEEN 2010 AND 2018
        AND P."period" = 2
        AND P."points_scored" IS NOT NULL
    GROUP BY
        P."player_id",
        P."team_id"
    HAVING
        SUM(P."points_scored") >= 15
),
player_counts AS (
    SELECT
        PW."team_id",
        COUNT(DISTINCT PW."player_id") AS "num_players"
    FROM
        players_with_15_points PW
    GROUP BY
        PW."team_id"
),
top_teams AS (
    SELECT
        PC."team_id"
    FROM
        player_counts PC
    ORDER BY
        PC."num_players" DESC
    LIMIT 5
),
top_teams_info AS (
    SELECT
        T."id" AS "team_id",
        T."market",
        T."kaggle_team_id"
    FROM
        "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_TEAMS" T
        JOIN top_teams TT ON T."id" = TT."team_id"
    WHERE
        T."kaggle_team_id" IS NOT NULL
),
top_kaggle_ids AS (
    SELECT DISTINCT TTI."kaggle_team_id"
    FROM top_teams_info TTI
)
SELECT
    G."season",
    G."round",
    G."game_date",
    G."win_market",
    G."win_name",
    G."win_seed",
    G."win_pts",
    G."lose_market",
    G."lose_name",
    G."lose_seed",
    G."lose_pts",
    COALESCE(G."num_ot", 0) AS "num_ot"
FROM
    "NCAA_BASKETBALL"."NCAA_BASKETBALL"."MBB_HISTORICAL_TOURNAMENT_GAMES" G
WHERE
    G."season" BETWEEN 2010 AND 2018
    AND (
        G."win_kaggle_team_id" IN (SELECT "kaggle_team_id" FROM top_kaggle_ids)
        OR G."lose_kaggle_team_id" IN (SELECT "kaggle_team_id" FROM top_kaggle_ids)
    )
ORDER BY
    G."season" ASC NULLS LAST,
    G."game_date" ASC NULLS LAST,
    G."round" ASC NULLS LAST;
```
2025-01-26 22:22:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 22:22:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 22:22:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 22:22:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-26 22:22:41 - snowflake.connector.connection - INFO - closed
2025-01-26 22:22:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 22:22:41 - root - INFO - itercount: 6
2025-01-26 22:22:41 - root - INFO - 0
2025-01-26 22:22:41 - root - INFO - Total iteration counts: 6
