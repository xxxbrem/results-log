To determine which SQL query correctly answers the question, let's analyze both queries:

**0result.sql:**

```sql
SELECT
  ROUND(
    AVG(CASE WHEN LOWER(party.PartyID) LIKE '%lucky%' THEN ABS(t.StrikePrice - t.LastPx) END) -
    AVG(CASE WHEN LOWER(party.PartyID) LIKE '%momo%' THEN ABS(t.StrikePrice - t.LastPx) END),
    4
  ) AS higher
FROM `bigquery-public-data.cymbal_investments.trade_capture_report` AS t,
UNNEST(t.Sides) AS side,
UNNEST(side.PartyIDs) AS party
WHERE side.Side = 'LONG'
  AND (LOWER(party.PartyID) LIKE '%lucky%' OR LOWER(party.PartyID) LIKE '%momo%')
```

- **Uses `party.PartyID`** to identify strategies.
- **Calculates the absolute difference** between `StrikePrice` and `LastPx`.
- **Results in a negative value** (-0.5297), indicating that the average intrinsic value for the 'feeling-lucky' strategy is lower than that of the 'momentum' strategy.

**2result.sql:**

```sql
SELECT
  ROUND(
    AVG(CASE WHEN LOWER(TargetCompID) LIKE 'lucky%' THEN (StrikePrice - LastPx) END) -
    AVG(CASE WHEN LOWER(TargetCompID) LIKE 'momo%' THEN (StrikePrice - LastPx) END),
    4
  ) AS higher
FROM `bigquery-public-data.cymbal_investments.trade_capture_report`,
     UNNEST(Sides) AS side
WHERE LOWER(side.Side) = 'long'
  AND (LOWER(TargetCompID) LIKE 'lucky%' OR LOWER(TargetCompID) LIKE 'momo%')
```

- **Uses `TargetCompID`** to identify strategies.
- **Calculates the signed difference** between `StrikePrice` and `LastPx` without taking the absolute value.
- **Results in a positive value** (0.0231), indicating that the average intrinsic value for the 'feeling-lucky' strategy is higher than that of the 'momentum' strategy.

**Reasoning:**

- **Identification of Strategies:**
  - The `TargetCompID` field contains values like 'MOMOES-COMPID' and 'LUCKYES-COMPID', which directly tie to the 'momentum' and 'feeling-lucky' strategies. Using `TargetCompID` is appropriate for identifying strategies.
  - While `PartyID` also contains strategy-related identifiers, `TargetCompID` is more consistent and less likely to have duplicates or multiple roles.

- **Calculation of Intrinsic Value:**
  - The intrinsic value should consider the signed difference between `StrikePrice` and `LastPx` to reflect whether a trade was profitable or not for a long position.
  - Taking the absolute value (as in `0result.sql`) loses the directionality of the trade's outcome, which is important in determining which strategy yields a higher average intrinsic value.

- **Results Interpretation:**
  - The positive value in `2result.sql` aligns with the question's focus on how much higher the average intrinsic value is for the 'feeling-lucky' strategy compared to the 'momentum' strategy.
  - The negative value in `0result.sql` suggests the opposite, which contradicts the expected outcome unless the question aims to highlight that 'feeling-lucky' performs worse.

**Conclusion:**

Given the appropriate identification of strategies using `TargetCompID`, the correct calculation of intrinsic value without the absolute function, and the direct answer to the question provided by `2result.sql`, this query correctly answers the task.

```plaintext
2result.sql
```