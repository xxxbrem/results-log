After comparing the SQL queries and their results, **`1result.sql`** is the correct answer.

**Reasoning:**

- **Precise Title Selection:** `1result.sql` specifically filters matches for the **'NXT Championship'** by using:
  ```sql
  m."title_id" = (SELECT "id" FROM "Belts" WHERE "name" = 'NXT Championship')
  ```
  This ensures only matches involving the exact title are considered.

- **Accurate Title Change Filter:** It uses:
  ```sql
  m."title_change" = 0
  ```
  This explicitly includes only matches where the title did not change hands, aligning with the requirement to exclude title changes.

- **Correct Duration Parsing:** The query filters out null or empty durations and correctly parses the duration to seconds for accurate ordering:
  ```sql
  AND LENGTH(m."duration") >= 4
  AND INSTR(m."duration", ':') > 0
  ```
  This ensures only valid durations are considered.

- **Order By Clause Precision:** It orders the matches by the total duration in ascending order, accurately calculating the shortest match:
  ```sql
  ORDER BY
    ((CAST(SUBSTR(m."duration", 1, INSTR(m."duration", ':') - 1) AS INTEGER) * 60) +
    CAST(SUBSTR(m."duration", INSTR(m."duration", ':') + 1) AS INTEGER)) ASC,
    m."id" ASC
  ```

- **Comparison with Other Queries:**
  - **`0result.sql`** uses `m."title_change" != 1`, which might include matches where `title_change` is `NULL` or other unintended values. Using `m."title_change" = 0` is more precise.
  - **`2result.sql`** filters belts with `b.name LIKE '%NXT%'`, which could include other titles like 'NXT Women's Championship', potentially leading to incorrect matches.

**Conclusion:** `1result.sql` most accurately fulfills the requirements of the task by precisely selecting the correct title, correctly filtering out title changes, and properly calculating the shortest match duration.

```plaintext
1result.sql
```