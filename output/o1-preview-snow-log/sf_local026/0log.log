2025-01-21 00:48:36 - openai._base_client - INFO - Retrying request to /chat/completions in 0.490016 seconds
2025-01-21 00:49:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 00:49:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:28 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:28 - root - INFO - SQL:
-- 1. Retrieve a list of distinct bowlers from BALL_BY_BALL table
SELECT DISTINCT "bowler"
FROM IPL.IPL.BALL_BY_BALL
LIMIT 100;
Results:
bowler
106
14
15
13
82
1
9
16
63
10
66
22
120
25
121
435
24
68
118
436
32
90
89
37
80
81
12
44
48
61
59
5
4
72
99
148
86
27
8
122
143
111
115
127
147
137
144
140
135
160
440
84
77
29
119
67
38
49
126
39
31
175
73
60
83
131
117
91
71
150
75
78
102
124
98
94
109
41
437
105
116
112
21
151
153
142
145
57
438
174
194
157
159
223
439
243
165
162
158
161

2025-01-21 00:49:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:30 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:31 - root - INFO - SQL:
-- 2. Get bowler IDs along with their names from BALL_BY_BALL and PLAYER tables
SELECT b."bowler", p."player_name"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LIMIT 100;
Results:
bowler,player_name
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
106,AB Dinda
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
82,AB Agarkar
82,AB Agarkar
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan

2025-01-21 00:49:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:32 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:32 - root - INFO - SQL:
-- 3. Retrieve runs scored by batsmen on each delivery from BATSMAN_SCORED table
SELECT "match_id", "over_id", "ball_id", "runs_scored"
FROM IPL.IPL.BATSMAN_SCORED
LIMIT 100;
Results:
match_id,over_id,ball_id,runs_scored
335987,1,1,1
335987,1,2,0
335987,1,3,0
335987,1,4,0
335987,1,4,1
335987,1,5,0
335987,1,5,1
335987,1,6,0
335987,1,6,0
335987,1,7,0
335987,1,7,0
335987,2,1,0
335987,2,1,0
335987,2,2,4
335987,2,2,0
335987,2,3,4
335987,2,3,0
335987,2,4,6
335987,2,4,1
335987,2,5,4
335987,2,5,0
335987,2,6,0
335987,2,6,0
335987,3,1,0
335987,3,1,0
335987,3,2,0
335987,3,2,0
335987,3,3,0
335987,3,3,1
335987,3,4,4
335987,3,4,0
335987,3,5,1
335987,3,6,0
335987,3,6,0
335987,3,7,1
335987,4,1,2
335987,4,2,6
335987,4,2,1
335987,4,3,0
335987,4,3,0
335987,4,4,4
335987,4,4,0
335987,4,5,0
335987,4,5,0
335987,4,6,1
335987,4,6,0
335987,4,7,6
335987,5,1,4
335987,5,1,1
335987,5,2,1
335987,5,2,1
335987,5,3,4
335987,5,3,0
335987,5,4,0
335987,5,4,6
335987,5,5,1
335987,5,5,0
335987,5,6,0
335987,5,6,0
335987,6,1,1
335987,6,1,0
335987,6,2,0
335987,6,2,0
335987,6,3,0
335987,6,3,0
335987,6,4,0
335987,6,4,1
335987,6,5,0
335987,6,5,1
335987,6,6,0
335987,6,6,0
335987,7,1,1
335987,7,1,0
335987,7,2,1
335987,7,2,0
335987,7,3,1
335987,7,3,1
335987,7,4,2
335987,7,5,1
335987,7,6,1
335987,7,6,0
335987,7,7,0
335987,7,8,4
335987,8,1,0
335987,8,1,1
335987,8,2,1
335987,8,2,0
335987,8,3,1
335987,8,3,1
335987,8,4,1
335987,8,4,2
335987,8,5,1
335987,8,5,0
335987,8,6,1
335987,8,6,0
335987,9,1,0
335987,9,1,0
335987,9,2,0
335987,9,2,0
335987,9,3,0

2025-01-21 00:49:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:34 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:34 - root - INFO - SQL:
-- 4. Retrieve extra runs conceded on each delivery from EXTRA_RUNS table
SELECT "match_id", "over_id", "ball_id", "extra_runs"
FROM IPL.IPL.EXTRA_RUNS
LIMIT 100;
Results:
match_id,over_id,ball_id,extra_runs
501229,16,3,1
501229,18,1,1
501229,18,6,4
392239,18,6,1
501229,20,3,1
501230,1,4,4
829714,18,4,1
829816,3,3,1
501230,3,4,1
829816,2,3,4
980962,18,2,1
829714,18,1,1
829714,9,6,1
501231,1,1,1
335994,4,6,1
501231,2,6,1
829714,9,3,2
980962,17,5,2
336045,3,5,4
392240,3,7,1
336045,4,1,1
829714,3,6,1
501231,20,5,1
501232,1,1,1
501232,1,2,1
336045,8,3,1
336017,4,4,1
829814,18,1,1
501232,4,3,1
501232,4,6,1
501232,7,2,1
829714,1,1,4
336045,9,3,1
501232,14,3,1
501232,14,7,1
829712,18,5,1
829712,3,1,4
829712,2,6,1
392240,10,2,2
829712,1,3,4
392240,11,2,1
335991,2,1,1
980962,14,1,1
335988,17,1,1
392240,13,3,1
829814,14,3,1
501232,20,7,1
829812,4,5,1
392240,15,3,1
980960,7,5,1
829710,4,2,1
501233,6,1,1
501233,6,3,1
981018,2,1,1
336045,18,8,1
501233,13,1,1
829812,1,4,1
392241,3,6,1
392241,4,6,1
981018,1,3,1
829810,12,6,1
501234,2,1,1
980958,3,2,1
829710,1,5,1
829710,1,3,1
392241,8,3,1
980956,20,3,1
336017,7,5,1
392186,2,1,1
501234,14,5,2
501234,16,2,1
336001,20,3,1
734054,19,6,1
392186,6,1,4
392241,19,4,1
392186,6,2,1
980986,18,2,1
392186,10,3,1
501235,12,3,1
734054,17,6,1
829808,9,2,1
335994,9,3,1
829808,8,2,2
829808,7,3,1
829808,7,1,1
734054,13,2,1
501235,18,4,1
980956,16,2,1
335994,10,2,1
335991,2,5,4
501236,13,2,1
392187,2,2,1
501236,13,5,1
501236,15,1,1
829808,3,1,1
501236,17,2,1
392243,4,4,1
829806,19,6,1
392243,10,1,1
501237,5,6,1

2025-01-21 00:49:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:36 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:36 - root - INFO - SQL:
-- 5. Combine runs scored and extra runs for each delivery
SELECT bs."match_id", bs."over_id", bs."ball_id", bs."runs_scored", er."extra_runs"
FROM IPL.IPL.BATSMAN_SCORED bs
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON bs."match_id" = er."match_id"
  AND bs."over_id" = er."over_id"
  AND bs."ball_id" = er."ball_id"
LIMIT 100;
Results:
match_id,over_id,ball_id,runs_scored,extra_runs
335987,1,1,1,1.0
335987,1,2,0,1.0
335987,1,3,0,1.0
335987,1,4,0,
335987,1,4,1,
335987,1,5,0,
335987,1,5,1,
335987,1,6,0,
335987,1,6,0,
335987,1,7,0,1.0
335987,1,7,0,1.0
335987,2,1,0,
335987,2,1,0,
335987,2,2,4,
335987,2,2,0,
335987,2,3,4,4.0
335987,2,3,0,4.0
335987,2,4,6,
335987,2,4,1,
335987,2,5,4,
335987,2,5,0,
335987,2,6,0,
335987,2,6,0,
335987,3,1,0,
335987,3,1,0,
335987,3,2,0,
335987,3,2,0,
335987,3,3,0,1.0
335987,3,3,1,1.0
335987,3,4,4,
335987,3,4,0,
335987,3,5,1,1.0
335987,3,6,0,
335987,3,6,0,
335987,3,7,1,
335987,4,1,2,5.0
335987,4,2,6,
335987,4,2,1,
335987,4,3,0,1.0
335987,4,3,0,1.0
335987,4,4,4,1.0
335987,4,4,0,1.0
335987,4,5,0,
335987,4,5,0,
335987,4,6,1,
335987,4,6,0,
335987,4,7,6,
335987,5,1,4,
335987,5,1,1,
335987,5,2,1,
335987,5,2,1,
335987,5,3,4,
335987,5,3,0,
335987,5,4,0,
335987,5,4,6,
335987,5,5,1,
335987,5,5,0,
335987,5,6,0,
335987,5,6,0,
335987,6,1,1,
335987,6,1,0,
335987,6,2,0,
335987,6,2,0,
335987,6,3,0,
335987,6,3,0,
335987,6,4,0,
335987,6,4,1,
335987,6,5,0,
335987,6,5,1,
335987,6,6,0,
335987,6,6,0,
335987,7,1,1,
335987,7,1,0,
335987,7,2,1,
335987,7,2,0,
335987,7,3,1,
335987,7,3,1,
335987,7,4,2,1.0
335987,7,5,1,1.0
335987,7,6,1,
335987,7,6,0,
335987,7,7,0,
335987,7,8,4,
335987,8,1,0,
335987,8,1,1,
335987,8,2,1,1.0
335987,8,2,0,1.0
335987,8,3,1,
335987,8,3,1,
335987,8,4,1,
335987,8,4,2,
335987,8,5,1,
335987,8,5,0,
335987,8,6,1,
335987,8,6,0,
335987,9,1,0,
335987,9,1,0,
335987,9,2,0,
335987,9,2,0,
335987,9,3,0,

2025-01-21 00:49:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:38 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:38 - root - INFO - SQL:
-- 6. Retrieve bowler IDs along with runs conceded on each delivery
SELECT b."bowler", bs."runs_scored", er."extra_runs"
FROM IPL.IPL.BALL_BY_BALL b
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
LIMIT 100;
Results:
bowler,runs_scored,extra_runs
106,1,1.0
14,0,1.0
106,0,1.0
14,0,1.0
106,0,1.0
14,0,
14,1,
106,0,
106,1,
14,0,
14,1,
106,0,
106,1,
14,0,
14,0,
106,0,
106,0,
14,0,1.0
14,0,1.0
106,0,1.0
106,0,1.0
15,0,
15,0,
84,0,
84,0,
15,4,
15,0,
84,4,
84,0,
15,4,4.0
15,0,4.0
84,4,4.0
84,0,4.0
15,6,
15,1,
84,6,
84,1,
15,4,
15,0,
84,4,
84,0,
15,0,
15,0,
84,0,
84,0,
14,0,
14,0,
106,0,
106,0,
14,0,
14,0,
106,0,
106,0,
14,0,1.0
14,1,1.0
106,0,1.0
106,1,1.0
14,4,
14,0,
106,4,
106,0,
14,1,1.0
106,1,1.0
14,0,
14,0,
106,0,
106,0,
106,1,
13,2,5.0
84,2,5.0
13,6,
13,1,
84,6,
84,1,
13,0,1.0
13,0,1.0
84,0,1.0
84,0,1.0
13,4,1.0
13,0,1.0
84,4,1.0
84,0,1.0
13,0,
13,0,
84,0,
84,0,
13,1,
13,0,
84,1,
84,0,
13,6,
14,4,
14,1,
82,4,
82,1,
14,1,
14,1,
82,1,
82,1,
14,4,

2025-01-21 00:49:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:40 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:40 - root - INFO - SQL:
-- 7. Calculate total runs conceded by each bowler in each over
SELECT b."bowler", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY b."bowler", b."match_id", b."over_id"
LIMIT 100;
Results:
bowler,match_id,over_id,total_runs_conceded
106,335987,1,8
13,335987,4,29
14,335987,5,18
82,335987,5,18
106,335987,6,3
15,335987,8,11
16,335987,10,18
1,335987,10,19
16,335987,14,13
9,335987,19,21
22,335988,3,19
16,335987,12,13
84,335987,15,28
120,335988,4,16
25,335988,6,20
121,335988,7,16
435,335988,8,23
119,335988,9,26
121,335988,10,18
25,335988,14,22
119,335988,15,31
29,335988,16,20
435,335988,16,20
29,335988,18,23
66,335988,19,22
126,335989,1,9
89,335989,7,8
31,335989,10,15
89,335989,13,20
14,335990,3,17
49,335990,4,8
24,335988,12,32
90,335989,10,14
12,335990,8,14
14,335990,15,15
49,335990,16,17
80,335990,20,10
60,335991,1,11
84,335991,2,15
59,335991,9,2
56,335991,14,13
83,335991,19,9
126,335992,1,7
48,335990,13,13
60,335991,5,4
32,335992,20,17
117,335993,2,22
121,335994,13,22
22,335994,18,27
126,335995,19,25
73,335996,2,18
67,335996,7,18
32,335997,5,21
124,335997,12,4
39,335997,15,9
5,335998,8,13
148,335999,6,20
71,335999,11,19
78,336000,18,26
66,336000,19,16
49,336002,11,17
84,335998,4,15
435,335998,5,22
61,336007,4,10
9,335987,13,23
24,335988,10,18
68,335988,15,31
436,335989,2,23
126,335989,3,5
32,335989,14,11
39,335989,15,22
80,335990,7,13
435,335988,13,18
12,335990,17,22
60,335991,3,10
83,335991,7,12
58,335991,8,4
5,335991,12,18
32,335992,2,7
66,335992,3,26
77,335992,4,22
66,335992,6,22
38,335992,9,14
38,335992,11,15
75,335992,12,14
29,335992,12,15
39,335992,13,16
37,335992,14,23
31,335992,16,23
25,335992,18,12
126,335992,19,15
89,335993,17,8
90,335993,18,26
73,335994,2,17
119,335994,10,19
48,335994,14,34
126,335992,3,20
150,335994,12,25
72,335994,17,31
73,335994,19,22

2025-01-21 00:49:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:42 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:42 - root - INFO - SQL:
-- 8. Retrieve bowler names and total runs conceded in each over
SELECT p."player_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
LIMIT 100;
Results:
player_name,match_id,over_id,total_runs_conceded
I Sharma,335987,2,27
P Kumar,335987,3,9
AB Dinda,335987,3,10
AB Agarkar,335987,7,14
JH Kallis,335987,13,23
B Lee,335988,1,14
SC Ganguly,335987,14,13
I Sharma,335987,15,28
MS Gony,335988,2,22
JDP Oram,335988,5,20
MS Gony,335988,6,26
M Muralitharan,335988,7,16
Joginder Sharma,335988,9,26
PP Chawla,335988,11,24
K Goel,335988,12,32
WA Mota,335988,15,31
S Sreesanth,335988,17,25
B Lee,335988,19,22
JR Hopes,335988,20,34
Joginder Sharma,335988,20,34
MM Patel,335989,3,5
SR Watson,335989,7,8
R Bhatia,335989,11,11
SK Trivedi,335989,15,22
B Geeves,335989,16,14
JH Kallis,335990,5,29
R Vinay Kumar,335990,7,13
ST Jayasuriya,335990,8,14
Harbhajan Singh,335990,9,28
ST Jayasuriya,335990,10,10
AM Nayar,335990,13,13
Harbhajan Singh,335990,19,17
Mohammad Hafeez,335991,10,8
PP Ojha,335991,15,17
RP Singh,335991,16,10
SR Watson,335992,10,20
SK Warne,335992,11,15
D Salunkhe,335992,14,23
S Sreesanth,335992,14,25
SK Trivedi,335992,15,18
PP Chawla,335992,15,18
GD McGrath,335993,3,18
R Bhatia,335993,13,32
MF Maharoof,335993,18,26
MS Gony,335994,2,17
PP Ojha,335991,17,23
SR Watson,335992,4,18
Shahid Afridi,335993,8,7
JDP Oram,335994,1,16
SK Trivedi,335992,13,16
P Amarnath,335994,14,34
M Muralitharan,335994,16,27
RP Singh,335995,2,21
S Sreesanth,335996,16,12
DS Kulkarni,335996,18,14
Sohail Tanvir,335997,4,18
JH Kallis,335997,9,15
SK Warne,335997,18,13
JDP Oram,335998,1,13
CRD Fernando,336002,4,19
DS Kulkarni,335999,4,11
P Kumar,336003,20,26
Shahid Afridi,336004,10,19
SR Watson,336005,20,1
Joginder Sharma,335988,15,31
IK Pathan,335988,16,20
IK Pathan,335988,18,23
GD McGrath,335989,3,5
P Kumar,335990,3,17
SM Pollock,335990,6,9
MS Gony,335988,17,25
MF Maharoof,335989,10,14
R Vinay Kumar,335990,12,27
A Nehra,335990,14,7
P Kumar,335990,15,15
JH Kallis,335990,16,21
P Kumar,335990,19,17
RP Singh,335991,2,15
WPUJC Vaas,335991,3,10
I Sharma,335991,4,3
Mohammad Hafeez,335991,12,18
DJ Hussey,335991,17,23
SK Trivedi,335992,6,22
SK Warne,335992,17,10
WPUJC Vaas,335993,1,6
Mohammad Asif,335993,4,3
Mohammad Asif,335993,6,9
VY Mahesh,335993,11,14
MF Maharoof,335993,12,22
SM Pollock,335994,1,16
DS Kulkarni,335994,5,24
JDP Oram,335994,5,24
Harbhajan Singh,335994,10,19
P Amarnath,335994,12,24
M Muralitharan,335994,13,22
MM Patel,335992,5,21
GD McGrath,335993,5,12
Shahid Afridi,335993,10,14
R Bhatia,335993,15,5
MS Gony,335994,8,17

2025-01-21 00:49:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 00:49:44 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:44 - root - INFO - SQL:
-- 9. Order the total runs conceded by each bowler in each over in descending order
SELECT p."player_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC
LIMIT 100;
Results:
player_name,match_id,over_id,total_runs_conceded
HV Patel,733996,16,47
P Awana,734052,6,47
P Parameswaran,501252,3,47
L Balaji,733996,16,47
MG Johnson,734052,4,45
MG Johnson,733978,19,44
JD Unadkat,598032,8,44
AJ Finch,598032,8,44
SP Narine,598021,19,43
J Botha,548322,14,43
KA Pollard,548322,14,43
Z Khan,501252,3,43
SC Ganguly,548353,18,43
DW Steyn,548353,18,43
MM Sharma,734052,6,43
A Ashish Reddy,548353,19,43
JW Hastings,734034,6,43
A Nehra,548353,19,43
KW Richardson,734004,19,42
R Dhawan,733992,20,42
A Symonds,419150,17,42
JP Faulkner,734038,19,42
V Kohli,419117,13,42
P Awana,598021,19,42
VR Aaron,734004,19,42
P Kumar,419150,17,42
L Balaji,729296,18,42
Pankaj Singh,336024,17,42
Mashrafe Mortaza,392233,20,42
VRV Singh,336033,20,42
SW Tait,419142,15,42
A Nehra,336033,20,42
DS Kulkarni,729296,18,42
SR Watson,336041,20,41
M Muralitharan,419142,15,41
S Sreesanth,419117,13,41
PC Valthaty,501262,13,41
S Sriram,501262,13,41
JJ Bumrah,829800,17,41
SK Trivedi,335995,15,41
Y Nagar,501248,15,41
R Vinay Kumar,598059,18,41
PP Ojha,336019,14,41
L Balaji,734038,19,41
CRD Fernando,336041,20,41
UT Yadav,598059,18,41
AN Ahmed,734010,17,41
DW Steyn,734012,18,40
AN Ahmed,829742,17,40
CJ Jordan,980986,18,40
JA Morkel,501273,19,40
Imran Tahir,734010,17,40
P Negi,829794,19,40
AR Patel,734012,18,40
MM Patel,548372,20,40
P Kumar,419117,18,40
R Vinay Kumar,829794,19,40
A Mishra,729306,18,40
KA Pollard,980986,18,40
S Aravind,501273,19,40
JJ Bumrah,829742,17,40
IC Pandey,734052,4,39
VRV Singh,336027,6,39
MS Gony,598050,15,39
A Nehra,335990,18,39
M Muralitharan,598050,15,39
PP Chawla,548344,19,39
M Morkel,548338,6,39
JD Unadkat,729306,18,39
RS Bopara,419144,13,39
CJ McKay,548344,19,39
Parvez Rasool,734034,6,39
R Vinay Kumar,335990,18,39
RE van der Merwe,392209,18,39
Sandeep Sharma,734012,5,39
A Mishra,336027,6,39
WD Parnell,501218,6,38
B Kumar,980912,19,38
I Sharma,392216,3,38
DJ Hussey,598042,20,38
B Kumar,548367,6,38
B Akhil,336007,11,38
Karanveer Singh,734048,18,38
AG Murtaza,598032,15,38
AR Patel,829796,14,38
DP Nannes,392216,3,38
Shakib Al Hasan,734048,18,38
NLTC Perera,980936,18,38
S Tyagi,392236,6,38
Y Venugopal Rao,336007,11,38
AB Dinda,548318,19,38
DT Christian,598004,17,38
JP Faulkner,734046,11,38
M Kartik,729296,12,38
M Kartik,419144,13,38
DS Kulkarni,598042,20,38
KP Appanna,548367,6,38
RP Singh,336025,4,38
AC Thomas,501246,19,38
Anand Rajan,501261,20,38

2025-01-21 00:49:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:49:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:49:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:49:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-21 00:49:46 - snowflake.connector.connection - INFO - closed
2025-01-21 00:49:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:49:46 - root - INFO - SQL:
-- 10. Find the top 3 bowlers who conceded the maximum runs in a single over along with matches
SELECT p."player_name" AS "bowler_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC
LIMIT 3;
Results:
bowler_name,match_id,over_id,total_runs_conceded
P Parameswaran,501252,3,47
P Awana,734052,6,47
L Balaji,733996,16,47

2025-01-21 00:49:46 - root - INFO - itercount: 0
2025-01-21 00:49:46 - root - INFO - Database Name: IPL
Schema Name: IPL
DDL describes table information.
,0
table_name,PLAYER_MATCH
description,
DDL,"create or replace TABLE PLAYER_MATCH (
	""match_id"" NUMBER(38,0),
	""player_id"" NUMBER(38,0),
	""role"" VARCHAR(16777216),
	""team_id"" NUMBER(38,0)
);"

,1
table_name,PLAYER
description,
DDL,"create or replace TABLE PLAYER (
	""player_id"" NUMBER(38,0),
	""player_name"" VARCHAR(16777216),
	""dob"" VARCHAR(16777216),
	""batting_hand"" VARCHAR(16777216),
	""bowling_skill"" VARCHAR(16777216),
	""country_name"" VARCHAR(16777216)
);"

,2
table_name,BATSMAN_SCORED
description,
DDL,"create or replace TABLE BATSMAN_SCORED (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""runs_scored"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,3
table_name,WICKET_TAKEN
description,
DDL,"create or replace TABLE WICKET_TAKEN (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""player_out"" NUMBER(38,0),
	""kind_out"" VARCHAR(16777216),
	""innings_no"" NUMBER(38,0)
);"

,4
table_name,BALL_BY_BALL
description,
DDL,"create or replace TABLE BALL_BY_BALL (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0),
	""team_batting"" NUMBER(38,0),
	""team_bowling"" NUMBER(38,0),
	""striker_batting_position"" NUMBER(38,0),
	""striker"" NUMBER(38,0),
	""non_striker"" NUMBER(38,0),
	""bowler"" NUMBER(38,0)
);"

,5
table_name,EXTRA_RUNS
description,
DDL,"create or replace TABLE EXTRA_RUNS (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""extra_type"" VARCHAR(16777216),
	""extra_runs"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,6
table_name,MATCH
description,
DDL,"create or replace TABLE MATCH (
	""match_id"" NUMBER(38,0),
	""team_1"" NUMBER(38,0),
	""team_2"" NUMBER(38,0),
	""match_date"" VARCHAR(16777216),
	""season_id"" NUMBER(38,0),
	""venue"" VARCHAR(16777216),
	""toss_winner"" NUMBER(38,0),
	""toss_decision"" VARCHAR(16777216),
	""win_type"" VARCHAR(16777216),
	""win_margin"" NUMBER(38,0),
	""outcome_type"" VARCHAR(16777216),
	""match_winner"" NUMBER(38,0),
	""man_of_the_match"" NUMBER(38,0)
);"

,7
table_name,TEAM
description,
DDL,"create or replace TABLE TEAM (
	""team_id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}
Begin Exploring Related Columns
To solve this task, we need to consider which tables and columns are relevant to finding the top 3 bowlers who conceded the maximum runs in a single over along with the corresponding matches.

**Relevant Tables and Columns:**

1. **`BALL_BY_BALL`**
   - **Columns:**
     - `"match_id"`: Identifies each match.
     - `"over_id"`: Identifies each over within a match.
     - `"ball_id"`: Identifies each delivery within an over.
     - `"bowler"`: The `player_id` of the bowler delivering the ball.
   - **Potential Usage:** Provides information on which bowler delivered each ball in every over of all matches.

2. **`BATSMAN_SCORED`**
   - **Columns:**
     - `"match_id"`: Identifies each match.
     - `"over_id"`: Identifies each over within a match.
     - `"ball_id"`: Identifies each delivery within an over.
     - `"runs_scored"`: Runs scored by the batsman on that delivery.
   - **Potential Usage:** Helps calculate the runs conceded by the bowler off the bat on each delivery.

3. **`EXTRA_RUNS`**
   - **Columns:**
     - `"match_id"`: Identifies each match.
     - `"over_id"`: Identifies each over within a match.
     - `"ball_id"`: Identifies each delivery within an over.
     - `"extra_runs"`: Extra runs conceded (e.g., wides, no-balls) on that delivery.
   - **Potential Usage:** Accounts for any additional runs conceded by the bowler that are not attributed to the batsman's score.

4. **`PLAYER`**
   - **Columns:**
     - `"player_id"`: Unique identifier for each player.
     - `"player_name"`: Name of the player.
   - **Potential Usage:** Used to retrieve the names of bowlers from their `player_id`.

**Conditions That May Be Used:**

- **Joins:** To combine data across tables using `"match_id"`, `"over_id"`, and `"ball_id"`.
- **Grouping:** By `"bowler"`, `"match_id"`, and `"over_id"` to calculate total runs conceded in each over.
- **Aggregations:** Summing `"runs_scored"` and `"extra_runs"` to get total runs conceded.
- **Ordering:** Sorting results in descending order of runs conceded to find the top instances.

---

**SQL Queries:**

Below are 10 different SQL queries to understand the data and tackle the problem. Each query is limited to 100 rows and uses the correct table and column names enclosed in double quotations.

---

```sql
-- 1. Retrieve a list of distinct bowlers from BALL_BY_BALL table
SELECT DISTINCT "bowler"
FROM IPL.IPL.BALL_BY_BALL
LIMIT 100;
```

---

```sql
-- 2. Get bowler IDs along with their names from BALL_BY_BALL and PLAYER tables
SELECT b."bowler", p."player_name"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LIMIT 100;
```

---

```sql
-- 3. Retrieve runs scored by batsmen on each delivery from BATSMAN_SCORED table
SELECT "match_id", "over_id", "ball_id", "runs_scored"
FROM IPL.IPL.BATSMAN_SCORED
LIMIT 100;
```

---

```sql
-- 4. Retrieve extra runs conceded on each delivery from EXTRA_RUNS table
SELECT "match_id", "over_id", "ball_id", "extra_runs"
FROM IPL.IPL.EXTRA_RUNS
LIMIT 100;
```

---

```sql
-- 5. Combine runs scored and extra runs for each delivery
SELECT bs."match_id", bs."over_id", bs."ball_id", bs."runs_scored", er."extra_runs"
FROM IPL.IPL.BATSMAN_SCORED bs
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON bs."match_id" = er."match_id"
  AND bs."over_id" = er."over_id"
  AND bs."ball_id" = er."ball_id"
LIMIT 100;
```

---

```sql
-- 6. Retrieve bowler IDs along with runs conceded on each delivery
SELECT b."bowler", bs."runs_scored", er."extra_runs"
FROM IPL.IPL.BALL_BY_BALL b
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
LIMIT 100;
```

---

```sql
-- 7. Calculate total runs conceded by each bowler in each over
SELECT b."bowler", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY b."bowler", b."match_id", b."over_id"
LIMIT 100;
```

---

```sql
-- 8. Retrieve bowler names and total runs conceded in each over
SELECT p."player_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
LIMIT 100;
```

---

```sql
-- 9. Order the total runs conceded by each bowler in each over in descending order
SELECT p."player_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC
LIMIT 100;
```

---

```sql
-- 10. Find the top 3 bowlers who conceded the maximum runs in a single over along with matches
SELECT p."player_name" AS "bowler_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC
LIMIT 3;
```

---

**Explanation of the Last Query:**

- **Purpose:** Identifies the top 3 bowlers who conceded the most runs in a single over, along with the corresponding match IDs and over numbers.
- **Joins:**
  - **`BALL_BY_BALL` and `PLAYER`** to get the bowler's name.
  - **`BATSMAN_SCORED`** to get runs scored off the bat.
  - **`EXTRA_RUNS`** to get extra runs conceded (wides, no-balls, etc.).
- **Calculations:**
  - **`SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0))`** computes the total runs conceded in an over by adding runs scored and any extra runs. `COALESCE` ensures that `NULL` values are treated as zero.
- **Grouping:**
  - By `"bowler_name"`, `"match_id"`, and `"over_id"` to aggregate runs per over per bowler.
- **Ordering:**
  - Results are ordered in descending order of `"total_runs_conceded"` to bring the highest totals to the top.
- **Limit:**
  - The query is limited to the top 3 results to fulfill the task requirement.

**Note:** All queries are based solely on the provided table schemas and do not use any external knowledge.Query:
-- 1. Retrieve a list of distinct bowlers from BALL_BY_BALL table
SELECT DISTINCT "bowler"
FROM IPL.IPL.BALL_BY_BALL
LIMIT 100;
Answer:
bowler
106
14
15
13
82
1
9
16
63
10
66
22
120
25
121
435
24
68
118
436
32
90
89
37
80
81
12
44
48
61
59
5
4
72
99
148
86
27
8
122
143
111
115
127
147
137
144
140
135
160
440
84
77
29
119
67
38
49
126
39
31
175
73
60
83
131
117
91
71
150
75
78
102
124
98
94
109
41
437
105
116
112
21
151
153
142
145
57
438
174
194
157
159
223
439
243
165
162
158
161
Query:
-- 2. Get bowler IDs along with their names from BALL_BY_BALL and PLAYER tables
SELECT b."bowler", p."player_name"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LIMIT 100;
Answer:
bowler,player_name
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
106,AB Dinda
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
82,AB Agarkar
82,AB Agarkar
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
Query:
-- 3. Retrieve runs scored by batsmen on each delivery from BATSMAN_SCORED table
SELECT "match_id", "over_id", "ball_id", "runs_scored"
FROM IPL.IPL.BATSMAN_SCORED
LIMIT 100;
Answer:
match_id,over_id,ball_id,runs_scored
335987,1,1,1
335987,1,2,0
335987,1,3,0
335987,1,4,0
335987,1,4,1
335987,1,5,0
335987,1,5,1
335987,1,6,0
335987,1,6,0
335987,1,7,0
335987,1,7,0
335987,2,1,0
335987,2,1,0
335987,2,2,4
335987,2,2,0
335987,2,3,4
335987,2,3,0
335987,2,4,6
335987,2,4,1
335987,2,5,4
335987,2,5,0
335987,2,6,0
335987,2,6,0
335987,3,1,0
335987,3,1,0
335987,3,2,0
335987,3,2,0
335987,3,3,0
335987,3,3,1
335987,3,4,4
335987,3,4,0
335987,3,5,1
335987,3,6,0
335987,3,6,0
335987,3,7,1
335987,4,1,2
335987,4,2,6
335987,4,2,1
335987,4,3,0
335987,4,3,0
335987,4,4,4
335987,4,4,0
335987,4,5,0
335987,4,5,0
335987,4,6,1
335987,4,6,0
335987,4,7,6
335987,5,1,4
335987,5,1,1
335987,5,2,1
335987,5,2,1
335987,5,3,4
335987,5,3,0
335987,5,4,0
335987,5,4,6
335987,5,5,1
335987,5,5,0
335987,5,6,0
335987,5,6,0
335987,6,1,1
335987,6,1,0
335987,6,2,0
335987,6,2,0
335987,6,3,0
335987,6,3,0
335987,6,4,0
335987,6,4,1
335987,6,5,0
335987,6,5,1
335987,6,6,0
335987,6,6,0
335987,7,1,1
335987,7,1,0
335987,7,2,1
335987,7,2,0
335987,7,3,1
335987,7,3,1
335987,7,4,2
335987,7,5,1
335987,7,6,1
335987,7,6,0
335987,7,7,0
335987,7,8,4
335987,8,1,0
335987,8,1,1
335987,8,2,1
335987,8,2,0
335987,8,3,1
335987,8,3,1
335987,8,4,1
335987,8,4,2
335987,8,5,1
335987,8,5,0
335987,8,6,1
335987,8,6,0
335987,9,1,0
335987,9,1,0
335987,9,2,0
335987,9,2,0
335987,9,3,0
Query:
-- 4. Retrieve extra runs conceded on each delivery from EXTRA_RUNS table
SELECT "match_id", "over_id", "ball_id", "extra_runs"
FROM IPL.IPL.EXTRA_RUNS
LIMIT 100;
Answer:
match_id,over_id,ball_id,extra_runs
501229,16,3,1
501229,18,1,1
501229,18,6,4
392239,18,6,1
501229,20,3,1
501230,1,4,4
829714,18,4,1
829816,3,3,1
501230,3,4,1
829816,2,3,4
980962,18,2,1
829714,18,1,1
829714,9,6,1
501231,1,1,1
335994,4,6,1
501231,2,6,1
829714,9,3,2
980962,17,5,2
336045,3,5,4
392240,3,7,1
336045,4,1,1
829714,3,6,1
501231,20,5,1
501232,1,1,1
501232,1,2,1
336045,8,3,1
336017,4,4,1
829814,18,1,1
501232,4,3,1
501232,4,6,1
501232,7,2,1
829714,1,1,4
336045,9,3,1
501232,14,3,1
501232,14,7,1
829712,18,5,1
829712,3,1,4
829712,2,6,1
392240,10,2,2
829712,1,3,4
392240,11,2,1
335991,2,1,1
980962,14,1,1
335988,17,1,1
392240,13,3,1
829814,14,3,1
501232,20,7,1
829812,4,5,1
392240,15,3,1
980960,7,5,1
829710,4,2,1
501233,6,1,1
501233,6,3,1
981018,2,1,1
336045,18,8,1
501233,13,1,1
829812,1,4,1
392241,3,6,1
392241,4,6,1
981018,1,3,1
829810,12,6,1
501234,2,1,1
980958,3,2,1
829710,1,5,1
829710,1,3,1
392241,8,3,1
980956,20,3,1
336017,7,5,1
392186,2,1,1
501234,14,5,2
501234,16,2,1
336001,20,3,1
734054,19,6,1
392186,6,1,4
392241,19,4,1
392186,6,2,1
980986,18,2,1
392186,10,3,1
501235,12,3,1
734054,17,6,1
829808,9,2,1
335994,9,3,1
829808,8,2,2
829808,7,3,1
829808,7,1,1
734054,13,2,1
501235,18,4,1
980956,16,2,1
335994,10,2,1
335991,2,5,4
501236,13,2,1
392187,2,2,1
501236,13,5,1
501236,15,1,1
829808,3,1,1
501236,17,2,1
392243,4,4,1
829806,19,6,1
392243,10,1,1
501237,5,6,1
Query:
-- 5. Combine runs scored and extra runs for each delivery
SELECT bs."match_id", bs."over_id", bs."ball_id", bs."runs_scored", er."extra_runs"
FROM IPL.IPL.BATSMAN_SCORED bs
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON bs."match_id" = er."match_id"
  AND bs."over_id" = er."over_id"
  AND bs."ball_id" = er."ball_id"
LIMIT 100;
Answer:
match_id,over_id,ball_id,runs_scored,extra_runs
335987,1,1,1,1.0
335987,1,2,0,1.0
335987,1,3,0,1.0
335987,1,4,0,
335987,1,4,1,
335987,1,5,0,
335987,1,5,1,
335987,1,6,0,
335987,1,6,0,
335987,1,7,0,1.0
335987,1,7,0,1.0
335987,2,1,0,
335987,2,1,0,
335987,2,2,4,
335987,2,2,0,
335987,2,3,4,4.0
335987,2,3,0,4.0
335987,2,4,6,
335987,2,4,1,
335987,2,5,4,
335987,2,5,0,
335987,2,6,0,
335987,2,6,0,
335987,3,1,0,
335987,3,1,0,
335987,3,2,0,
335987,3,2,0,
335987,3,3,0,1.0
335987,3,3,1,1.0
335987,3,4,4,
335987,3,4,0,
335987,3,5,1,1.0
335987,3,6,0,
335987,3,6,0,
335987,3,7,1,
335987,4,1,2,5.0
335987,4,2,6,
335987,4,2,1,
335987,4,3,0,1.0
335987,4,3,0,1.0
335987,4,4,4,1.0
335987,4,4,0,1.0
335987,4,5,0,
335987,4,5,0,
335987,4,6,1,
335987,4,6,0,
335987,4,7,6,
335987,5,1,4,
335987,5,1,1,
335987,5,2,1,
335987,5,2,1,
335987,5,3,4,
335987,5,3,0,
335987,5,4,0,
335987,5,4,6,
335987,5,5,1,
335987,5,5,0,
335987,5,6,0,
335987,5,6,0,
335987,6,1,1,
335987,6,1,0,
335987,6,2,0,
335987,6,2,0,
335987,6,3,0,
335987,6,3,0,
335987,6,4,0,
335987,6,4,1,
335987,6,5,0,
335987,6,5,1,
335987,6,6,0,
335987,6,6,0,
335987,7,1,1,
335987,7,1,0,
335987,7,2,1,
335987,7,2,0,
335987,7,3,1,
335987,7,3,1,
335987,7,4,2,1.0
335987,7,5,1,1.0
335987,7,6,1,
335987,7,6,0,
335987,7,7,0,
335987,7,8,4,
335987,8,1,0,
335987,8,1,1,
335987,8,2,1,1.0
335987,8,2,0,1.0
335987,8,3,1,
335987,8,3,1,
335987,8,4,1,
335987,8,4,2,
335987,8,5,1,
335987,8,5,0,
335987,8,6,1,
335987,8,6,0,
335987,9,1,0,
335987,9,1,0,
335987,9,2,0,
335987,9,2,0,
335987,9,3,0,
Query:
-- 6. Retrieve bowler IDs along with runs conceded on each delivery
SELECT b."bowler", bs."runs_scored", er."extra_runs"
FROM IPL.IPL.BALL_BY_BALL b
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
LIMIT 100;
Answer:
bowler,runs_scored,extra_runs
106,1,1.0
14,0,1.0
106,0,1.0
14,0,1.0
106,0,1.0
14,0,
14,1,
106,0,
106,1,
14,0,
14,1,
106,0,
106,1,
14,0,
14,0,
106,0,
106,0,
14,0,1.0
14,0,1.0
106,0,1.0
106,0,1.0
15,0,
15,0,
84,0,
84,0,
15,4,
15,0,
84,4,
84,0,
15,4,4.0
15,0,4.0
84,4,4.0
84,0,4.0
15,6,
15,1,
84,6,
84,1,
15,4,
15,0,
84,4,
84,0,
15,0,
15,0,
84,0,
84,0,
14,0,
14,0,
106,0,
106,0,
14,0,
14,0,
106,0,
106,0,
14,0,1.0
14,1,1.0
106,0,1.0
106,1,1.0
14,4,
14,0,
106,4,
106,0,
14,1,1.0
106,1,1.0
14,0,
14,0,
106,0,
106,0,
106,1,
13,2,5.0
84,2,5.0
13,6,
13,1,
84,6,
84,1,
13,0,1.0
13,0,1.0
84,0,1.0
84,0,1.0
13,4,1.0
13,0,1.0
84,4,1.0
84,0,1.0
13,0,
13,0,
84,0,
84,0,
13,1,
13,0,
84,1,
84,0,
13,6,
14,4,
14,1,
82,4,
82,1,
14,1,
14,1,
82,1,
82,1,
14,4,
Query:
-- 7. Calculate total runs conceded by each bowler in each over
SELECT b."bowler", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY b."bowler", b."match_id", b."over_id"
LIMIT 100;
Answer:
bowler,match_id,over_id,total_runs_conceded
106,335987,1,8
13,335987,4,29
14,335987,5,18
82,335987,5,18
106,335987,6,3
15,335987,8,11
16,335987,10,18
1,335987,10,19
16,335987,14,13
9,335987,19,21
22,335988,3,19
16,335987,12,13
84,335987,15,28
120,335988,4,16
25,335988,6,20
121,335988,7,16
435,335988,8,23
119,335988,9,26
121,335988,10,18
25,335988,14,22
119,335988,15,31
29,335988,16,20
435,335988,16,20
29,335988,18,23
66,335988,19,22
126,335989,1,9
89,335989,7,8
31,335989,10,15
89,335989,13,20
14,335990,3,17
49,335990,4,8
24,335988,12,32
90,335989,10,14
12,335990,8,14
14,335990,15,15
49,335990,16,17
80,335990,20,10
60,335991,1,11
84,335991,2,15
59,335991,9,2
56,335991,14,13
83,335991,19,9
126,335992,1,7
48,335990,13,13
60,335991,5,4
32,335992,20,17
117,335993,2,22
121,335994,13,22
22,335994,18,27
126,335995,19,25
73,335996,2,18
67,335996,7,18
32,335997,5,21
124,335997,12,4
39,335997,15,9
5,335998,8,13
148,335999,6,20
71,335999,11,19
78,336000,18,26
66,336000,19,16
49,336002,11,17
84,335998,4,15
435,335998,5,22
61,336007,4,10
9,335987,13,23
24,335988,10,18
68,335988,15,31
436,335989,2,23
126,335989,3,5
32,335989,14,11
39,335989,15,22
80,335990,7,13
435,335988,13,18
12,335990,17,22
60,335991,3,10
83,335991,7,12
58,335991,8,4
5,335991,12,18
32,335992,2,7
66,335992,3,26
77,335992,4,22
66,335992,6,22
38,335992,9,14
38,335992,11,15
75,335992,12,14
29,335992,12,15
39,335992,13,16
37,335992,14,23
31,335992,16,23
25,335992,18,12
126,335992,19,15
89,335993,17,8
90,335993,18,26
73,335994,2,17
119,335994,10,19
48,335994,14,34
126,335992,3,20
150,335994,12,25
72,335994,17,31
73,335994,19,22
Query:
-- 8. Retrieve bowler names and total runs conceded in each over
SELECT p."player_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
LIMIT 100;
Answer:
player_name,match_id,over_id,total_runs_conceded
I Sharma,335987,2,27
P Kumar,335987,3,9
AB Dinda,335987,3,10
AB Agarkar,335987,7,14
JH Kallis,335987,13,23
B Lee,335988,1,14
SC Ganguly,335987,14,13
I Sharma,335987,15,28
MS Gony,335988,2,22
JDP Oram,335988,5,20
MS Gony,335988,6,26
M Muralitharan,335988,7,16
Joginder Sharma,335988,9,26
PP Chawla,335988,11,24
K Goel,335988,12,32
WA Mota,335988,15,31
S Sreesanth,335988,17,25
B Lee,335988,19,22
JR Hopes,335988,20,34
Joginder Sharma,335988,20,34
MM Patel,335989,3,5
SR Watson,335989,7,8
R Bhatia,335989,11,11
SK Trivedi,335989,15,22
B Geeves,335989,16,14
JH Kallis,335990,5,29
R Vinay Kumar,335990,7,13
ST Jayasuriya,335990,8,14
Harbhajan Singh,335990,9,28
ST Jayasuriya,335990,10,10
AM Nayar,335990,13,13
Harbhajan Singh,335990,19,17
Mohammad Hafeez,335991,10,8
PP Ojha,335991,15,17
RP Singh,335991,16,10
SR Watson,335992,10,20
SK Warne,335992,11,15
D Salunkhe,335992,14,23
S Sreesanth,335992,14,25
SK Trivedi,335992,15,18
PP Chawla,335992,15,18
GD McGrath,335993,3,18
R Bhatia,335993,13,32
MF Maharoof,335993,18,26
MS Gony,335994,2,17
PP Ojha,335991,17,23
SR Watson,335992,4,18
Shahid Afridi,335993,8,7
JDP Oram,335994,1,16
SK Trivedi,335992,13,16
P Amarnath,335994,14,34
M Muralitharan,335994,16,27
RP Singh,335995,2,21
S Sreesanth,335996,16,12
DS Kulkarni,335996,18,14
Sohail Tanvir,335997,4,18
JH Kallis,335997,9,15
SK Warne,335997,18,13
JDP Oram,335998,1,13
CRD Fernando,336002,4,19
DS Kulkarni,335999,4,11
P Kumar,336003,20,26
Shahid Afridi,336004,10,19
SR Watson,336005,20,1
Joginder Sharma,335988,15,31
IK Pathan,335988,16,20
IK Pathan,335988,18,23
GD McGrath,335989,3,5
P Kumar,335990,3,17
SM Pollock,335990,6,9
MS Gony,335988,17,25
MF Maharoof,335989,10,14
R Vinay Kumar,335990,12,27
A Nehra,335990,14,7
P Kumar,335990,15,15
JH Kallis,335990,16,21
P Kumar,335990,19,17
RP Singh,335991,2,15
WPUJC Vaas,335991,3,10
I Sharma,335991,4,3
Mohammad Hafeez,335991,12,18
DJ Hussey,335991,17,23
SK Trivedi,335992,6,22
SK Warne,335992,17,10
WPUJC Vaas,335993,1,6
Mohammad Asif,335993,4,3
Mohammad Asif,335993,6,9
VY Mahesh,335993,11,14
MF Maharoof,335993,12,22
SM Pollock,335994,1,16
DS Kulkarni,335994,5,24
JDP Oram,335994,5,24
Harbhajan Singh,335994,10,19
P Amarnath,335994,12,24
M Muralitharan,335994,13,22
MM Patel,335992,5,21
GD McGrath,335993,5,12
Shahid Afridi,335993,10,14
R Bhatia,335993,15,5
MS Gony,335994,8,17
Query:
-- 9. Order the total runs conceded by each bowler in each over in descending order
SELECT p."player_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC
LIMIT 100;
Answer:
player_name,match_id,over_id,total_runs_conceded
HV Patel,733996,16,47
P Awana,734052,6,47
P Parameswaran,501252,3,47
L Balaji,733996,16,47
MG Johnson,734052,4,45
MG Johnson,733978,19,44
JD Unadkat,598032,8,44
AJ Finch,598032,8,44
SP Narine,598021,19,43
J Botha,548322,14,43
KA Pollard,548322,14,43
Z Khan,501252,3,43
SC Ganguly,548353,18,43
DW Steyn,548353,18,43
MM Sharma,734052,6,43
A Ashish Reddy,548353,19,43
JW Hastings,734034,6,43
A Nehra,548353,19,43
KW Richardson,734004,19,42
R Dhawan,733992,20,42
A Symonds,419150,17,42
JP Faulkner,734038,19,42
V Kohli,419117,13,42
P Awana,598021,19,42
VR Aaron,734004,19,42
P Kumar,419150,17,42
L Balaji,729296,18,42
Pankaj Singh,336024,17,42
Mashrafe Mortaza,392233,20,42
VRV Singh,336033,20,42
SW Tait,419142,15,42
A Nehra,336033,20,42
DS Kulkarni,729296,18,42
SR Watson,336041,20,41
M Muralitharan,419142,15,41
S Sreesanth,419117,13,41
PC Valthaty,501262,13,41
S Sriram,501262,13,41
JJ Bumrah,829800,17,41
SK Trivedi,335995,15,41
Y Nagar,501248,15,41
R Vinay Kumar,598059,18,41
PP Ojha,336019,14,41
L Balaji,734038,19,41
CRD Fernando,336041,20,41
UT Yadav,598059,18,41
AN Ahmed,734010,17,41
DW Steyn,734012,18,40
AN Ahmed,829742,17,40
CJ Jordan,980986,18,40
JA Morkel,501273,19,40
Imran Tahir,734010,17,40
P Negi,829794,19,40
AR Patel,734012,18,40
MM Patel,548372,20,40
P Kumar,419117,18,40
R Vinay Kumar,829794,19,40
A Mishra,729306,18,40
KA Pollard,980986,18,40
S Aravind,501273,19,40
JJ Bumrah,829742,17,40
IC Pandey,734052,4,39
VRV Singh,336027,6,39
MS Gony,598050,15,39
A Nehra,335990,18,39
M Muralitharan,598050,15,39
PP Chawla,548344,19,39
M Morkel,548338,6,39
JD Unadkat,729306,18,39
RS Bopara,419144,13,39
CJ McKay,548344,19,39
Parvez Rasool,734034,6,39
R Vinay Kumar,335990,18,39
RE van der Merwe,392209,18,39
Sandeep Sharma,734012,5,39
A Mishra,336027,6,39
WD Parnell,501218,6,38
B Kumar,980912,19,38
I Sharma,392216,3,38
DJ Hussey,598042,20,38
B Kumar,548367,6,38
B Akhil,336007,11,38
Karanveer Singh,734048,18,38
AG Murtaza,598032,15,38
AR Patel,829796,14,38
DP Nannes,392216,3,38
Shakib Al Hasan,734048,18,38
NLTC Perera,980936,18,38
S Tyagi,392236,6,38
Y Venugopal Rao,336007,11,38
AB Dinda,548318,19,38
DT Christian,598004,17,38
JP Faulkner,734046,11,38
M Kartik,729296,12,38
M Kartik,419144,13,38
DS Kulkarni,598042,20,38
KP Appanna,548367,6,38
RP Singh,336025,4,38
AC Thomas,501246,19,38
Anand Rajan,501261,20,38
Query:
-- 10. Find the top 3 bowlers who conceded the maximum runs in a single over along with matches
SELECT p."player_name" AS "bowler_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC
LIMIT 3;
Answer:
bowler_name,match_id,over_id,total_runs_conceded
P Parameswaran,501252,3,47
P Awana,734052,6,47
L Balaji,733996,16,47
End Exploring Related Columns
Task: Please help me find the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding matches.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
bowler_name,match_id,runs_conceded_in_one_over
name1:str,match_id1:int,total_runs1:int
name2:str,match_id2:int,total_runs2:int
name3:str,match_id3:int,total_runs3:int
```

To find the top 3 bowlers who conceded the maximum runs in a single over along with the corresponding matches, we calculate the total runs conceded by each bowler in each over across all matches. This total includes both the runs scored by the batsman (`runs_scored` from `BATSMAN_SCORED` table) and any extra runs conceded (`extra_runs` from `EXTRA_RUNS` table). We join the `BALL_BY_BALL`, `BATSMAN_SCORED`, and `EXTRA_RUNS` tables on `match_id`, `over_id`, and `ball_id` to associate each delivery with the bowler and the runs conceded. We then group the data by `bowler_id`, `match_id`, and `over_id`, summing the runs to find the total runs conceded by each bowler in each over. Sorting these totals in descending order allows us to identify the top 3 instances where bowlers conceded the most runs in a single over..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-21 00:50:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 00:50:03 - root - INFO - ```sql
SELECT p."player_name" AS "bowler_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC NULLS LAST
LIMIT 3;
```
2025-01-21 00:50:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:50:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:50:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:50:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-21 00:50:04 - snowflake.connector.connection - INFO - closed
2025-01-21 00:50:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:50:05 - root - INFO - itercount: 1
2025-01-21 00:50:05 - root - INFO - 0
2025-01-21 00:50:05 - root - INFO - results: 
bowler_name,match_id,over_id,total_runs_conceded
P Parameswaran,501252,3,47
P Awana,734052,6,47
L Balaji,733996,16,47


2025-01-21 00:50:05 - root - INFO - Please check the answer again by reviewing Please help me find the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding matches., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
bowler_name,match_id,runs_conceded_in_one_over
name1:str,match_id1:int,total_runs1:int
name2:str,match_id2:int,total_runs2:int
name3:str,match_id3:int,total_runs3:int
```

To find the top 3 bowlers who conceded the maximum runs in a single over along with the corresponding matches, we calculate the total runs conceded by each bowler in each over across all matches. This total includes both the runs scored by the batsman (`runs_scored` from `BATSMAN_SCORED` table) and any extra runs conceded (`extra_runs` from `EXTRA_RUNS` table). We join the `BALL_BY_BALL`, `BATSMAN_SCORED`, and `EXTRA_RUNS` tables on `match_id`, `over_id`, and `ball_id` to associate each delivery with the bowler and the runs conceded. We then group the data by `bowler_id`, `match_id`, and `over_id`, summing the runs to find the total runs conceded by each bowler in each over. Sorting these totals in descending order allows us to identify the top 3 instances where bowlers conceded the most runs in a single over. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
bowler_name,match_id,over_id,total_runs_conceded
P Parameswaran,501252,3,47
P Awana,734052,6,47
L Balaji,733996,16,47
Current sql:
SELECT p."player_name" AS "bowler_name", b."match_id", b."over_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_conceded"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "total_runs_conceded" DESC NULLS LAST
LIMIT 3;
2025-01-21 00:50:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 00:50:34 - root - INFO - ```sql
SELECT p."player_name" AS "bowler_name", b."match_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "runs_conceded_in_one_over"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "runs_conceded_in_one_over" DESC NULLS LAST
LIMIT 3;
```
2025-01-21 00:50:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:50:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:50:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:50:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-21 00:50:35 - snowflake.connector.connection - INFO - closed
2025-01-21 00:50:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:50:36 - root - INFO - itercount: 2
2025-01-21 00:50:36 - root - INFO - 0
2025-01-21 00:50:36 - root - INFO - results: 
bowler_name,match_id,runs_conceded_in_one_over
P Parameswaran,501252,47
P Awana,734052,47
L Balaji,733996,47


2025-01-21 00:50:36 - root - INFO - Please check the answer again by reviewing Please help me find the top 3 bowlers who conceded the maximum runs in a single over, along with the corresponding matches., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
bowler_name,match_id,runs_conceded_in_one_over
name1:str,match_id1:int,total_runs1:int
name2:str,match_id2:int,total_runs2:int
name3:str,match_id3:int,total_runs3:int
```

To find the top 3 bowlers who conceded the maximum runs in a single over along with the corresponding matches, we calculate the total runs conceded by each bowler in each over across all matches. This total includes both the runs scored by the batsman (`runs_scored` from `BATSMAN_SCORED` table) and any extra runs conceded (`extra_runs` from `EXTRA_RUNS` table). We join the `BALL_BY_BALL`, `BATSMAN_SCORED`, and `EXTRA_RUNS` tables on `match_id`, `over_id`, and `ball_id` to associate each delivery with the bowler and the runs conceded. We then group the data by `bowler_id`, `match_id`, and `over_id`, summing the runs to find the total runs conceded by each bowler in each over. Sorting these totals in descending order allows us to identify the top 3 instances where bowlers conceded the most runs in a single over. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
bowler_name,match_id,runs_conceded_in_one_over
P Parameswaran,501252,47
P Awana,734052,47
L Balaji,733996,47
Current sql:
SELECT p."player_name" AS "bowler_name", b."match_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "runs_conceded_in_one_over"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "runs_conceded_in_one_over" DESC NULLS LAST
LIMIT 3;
2025-01-21 00:50:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 00:50:59 - root - INFO - ```sql
SELECT p."player_name" AS "bowler_name", b."match_id",
  SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "runs_conceded_in_one_over"
FROM IPL.IPL.BALL_BY_BALL b
JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
LEFT JOIN IPL.IPL.BATSMAN_SCORED bs ON b."match_id" = bs."match_id"
  AND b."over_id" = bs."over_id"
  AND b."ball_id" = bs."ball_id"
LEFT JOIN IPL.IPL.EXTRA_RUNS er ON b."match_id" = er."match_id"
  AND b."over_id" = er."over_id"
  AND b."ball_id" = er."ball_id"
GROUP BY p."player_name", b."match_id", b."over_id"
ORDER BY "runs_conceded_in_one_over" DESC NULLS LAST
LIMIT 3;
```

```csv
bowler_name,match_id,runs_conceded_in_one_over
P Parameswaran:str,501252:int,47:int
P Awana:str,734052:int,47:int
L Balaji:str,733996:int,47:int
```
2025-01-21 00:50:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 00:50:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 00:50:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 00:51:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-21 00:51:01 - snowflake.connector.connection - INFO - closed
2025-01-21 00:51:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 00:51:01 - root - INFO - itercount: 3
2025-01-21 00:51:01 - root - INFO - 0
2025-01-21 00:51:01 - root - INFO - Total iteration counts: 3
