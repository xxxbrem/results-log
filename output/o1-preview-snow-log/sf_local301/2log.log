2025-01-20 21:41:27 - openai._base_client - INFO - Retrying request to /chat/completions in 0.466821 seconds
2025-01-20 21:42:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:42:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:42:11 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:12 - root - INFO - SQL:
-- 1. View distinct years available in the data
SELECT DISTINCT "calendar_year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Results:
calendar_year
2020
2019
2018

2025-01-20 21:42:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 21:42:13 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:14 - root - INFO - SQL:
-- 2. View distinct month numbers and their occurrence count
SELECT DISTINCT "month_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Results:
month_number
8
7
5
4
3
9
6

2025-01-20 21:42:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:15 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:16 - root - INFO - SQL:
-- 3. Retrieve week numbers and corresponding week dates for 2018
SELECT "calendar_year", "week_number", "week_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
ORDER BY "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
calendar_year,week_number,week_date
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,

2025-01-20 21:42:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:17 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:17 - root - INFO - SQL:
-- 4. Get sales data for May, June, and July of 2018
SELECT "week_date", "month_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6, 7)
ORDER BY "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
week_date,month_number,sales
2018-05-07,5,29959
2018-05-07,5,373365
2018-05-07,5,30937
2018-05-07,5,66752
2018-05-07,5,2370701
2018-05-07,5,17391976
2018-05-07,5,3359062
2018-05-07,5,75646
2018-05-07,5,36631
2018-05-07,5,3011
2018-05-07,5,3317
2018-05-07,5,25718
2018-05-07,5,43479
2018-05-07,5,17443
2018-05-07,5,930840
2018-05-07,5,1085943
2018-05-07,5,16295
2018-05-07,5,179110
2018-05-07,5,7532908
2018-05-07,5,174966
2018-05-07,5,1246
2018-05-07,5,13855830
2018-05-07,5,1985560
2018-05-07,5,70184
2018-05-07,5,19340602
2018-05-07,5,143888
2018-05-07,5,477
2018-05-07,5,1089
2018-05-07,5,8434
2018-05-07,5,195036
2018-05-07,5,25516277
2018-05-07,5,973973
2018-05-07,5,183364
2018-05-07,5,3902159
2018-05-07,5,516113
2018-05-07,5,1378971
2018-05-07,5,10395
2018-05-07,5,653915
2018-05-07,5,62183194
2018-05-07,5,1364997
2018-05-07,5,8734
2018-05-07,5,11668138
2018-05-07,5,15249286
2018-05-07,5,14657
2018-05-07,5,34761
2018-05-07,5,5419778
2018-05-07,5,3219187
2018-05-07,5,1624628
2018-05-07,5,3196932
2018-05-07,5,34974
2018-05-07,5,171730
2018-05-07,5,7935379
2018-05-07,5,1742168
2018-05-07,5,3707160
2018-05-07,5,318715
2018-05-07,5,194592
2018-05-07,5,14849
2018-05-07,5,3521055
2018-05-07,5,273159
2018-05-07,5,2193324
2018-05-07,5,13949
2018-05-07,5,16673
2018-05-07,5,19483
2018-05-07,5,1632087
2018-05-07,5,203958
2018-05-07,5,4851788
2018-05-07,5,3995
2018-05-07,5,29480
2018-05-07,5,348136
2018-05-07,5,81168
2018-05-07,5,23213
2018-05-07,5,10003
2018-05-07,5,425
2018-05-07,5,1651
2018-05-07,5,1228911
2018-05-07,5,3916
2018-05-07,5,96227
2018-05-07,5,20530
2018-05-07,5,822490
2018-05-07,5,42345
2018-05-07,5,3590
2018-05-07,5,200816
2018-05-07,5,1126810
2018-05-07,5,459122
2018-05-07,5,1108239
2018-05-07,5,6572
2018-05-07,5,499443
2018-05-07,5,39951
2018-05-07,5,3012494
2018-05-07,5,1071436
2018-05-07,5,48038
2018-05-07,5,1396563
2018-05-07,5,2599
2018-05-07,5,179871
2018-05-07,5,475
2018-05-07,5,4388564
2018-05-07,5,3630401
2018-05-07,5,5046895
2018-05-07,5,118454
2018-05-07,5,68964
2018-05-07,5,18105
2018-05-07,5,4019483
2018-05-07,5,45304
2018-05-07,5,2175141
2018-05-07,5,2720566
2018-05-07,5,56375
2018-05-07,5,564827
2018-05-07,5,77773
2018-05-07,5,989622
2018-05-07,5,1651
2018-05-07,5,16629
2018-05-07,5,2822
2018-05-07,5,2585578
2018-05-07,5,26274
2018-05-07,5,5386
2018-05-07,5,16282
2018-05-07,5,1620
2018-05-07,5,316822
2018-05-07,5,9431
2018-05-07,5,2306608
2018-05-07,5,47667
2018-05-07,5,854795
2018-05-07,5,13605415
2018-05-07,5,16335
2018-05-07,5,22134
2018-05-07,5,68351
2018-05-07,5,6543649
2018-05-07,5,2951
2018-05-07,5,5837748
2018-05-07,5,1342
2018-05-07,5,9590
2018-05-07,5,2362346
2018-05-07,5,16407663
2018-05-07,5,8592
2018-05-07,5,40720
2018-05-07,5,69443
2018-05-07,5,114185
2018-05-07,5,19546
2018-05-07,5,36417
2018-05-07,5,536
2018-05-07,5,42856
2018-05-07,5,11032
2018-05-07,5,7053
2018-05-07,5,8836790
2018-05-07,5,108407
2018-05-07,5,1631576
2018-05-07,5,5750
2018-05-07,5,877712
2018-05-07,5,671911
2018-05-07,5,7533
2018-05-07,5,6482
2018-05-07,5,132892
2018-05-07,5,20359
2018-05-07,5,994219
2018-05-07,5,8077
2018-05-07,5,3710548
2018-05-07,5,290224
2018-05-07,5,518936
2018-05-07,5,118462
2018-05-07,5,4477119
2018-05-07,5,2432
2018-05-07,5,200485
2018-05-07,5,136044
2018-05-07,5,25779
2018-05-07,5,265890
2018-05-07,5,4661682
2018-05-07,5,2578025
2018-05-07,5,46408
2018-05-07,5,3631855
2018-05-07,5,47337829
2018-05-07,5,159836
2018-05-07,5,620059
2018-05-07,5,21566
2018-05-07,5,631235
2018-05-07,5,32477
2018-05-07,5,2108
2018-05-07,5,7712
2018-05-07,5,4579656
2018-05-07,5,337741
2018-05-07,5,5088126
2018-05-07,5,511318
2018-05-07,5,1782764
2018-05-07,5,1330291
2018-05-07,5,65931
2018-05-07,5,2573019
2018-05-07,5,2323346
2018-05-07,5,800523
2018-05-07,5,2168166
2018-05-07,5,16749175
2018-05-07,5,40846
2018-05-07,5,206943
2018-05-07,5,24580
2018-05-07,5,403294
2018-05-07,5,44578
2018-05-07,5,9439234
2018-05-07,5,619989
2018-05-07,5,8133
2018-05-07,5,30781
2018-05-07,5,334679
2018-05-07,5,976284
2018-05-07,5,8297
2018-05-07,5,3615797
2018-05-07,5,414658
2018-05-07,5,11965895
2018-05-07,5,539794
2018-05-07,5,34202
2018-05-07,5,299698
2018-05-07,5,30200
2018-05-07,5,45446966
2018-05-07,5,64941
2018-05-07,5,2503403
2018-05-07,5,819151
2018-05-07,5,2192280
2018-05-07,5,398166
2018-05-07,5,4972
2018-05-07,5,828228
2018-05-07,5,61044
2018-05-07,5,18476
2018-05-07,5,568272
2018-05-07,5,6036915
2018-05-07,5,313166
2018-05-07,5,1050332
2018-05-07,5,695066
2018-05-07,5,22598
2018-05-07,5,75075
2018-05-07,5,24336
2018-05-07,5,14185
2018-05-07,5,1168
2018-05-07,5,8925
2018-05-07,5,5449
2018-05-07,5,384541
2018-05-07,5,45538
2018-05-07,5,30688
2018-05-07,5,30722
2018-05-07,5,1701039
2018-05-07,5,56525
2018-05-07,5,20971
2018-05-14,5,1344032
2018-05-14,5,43170
2018-05-14,5,6457425
2018-05-14,5,8822
2018-05-14,5,13393
2018-05-14,5,1813
2018-05-14,5,1001594
2018-05-14,5,7647
2018-05-14,5,2475442
2018-05-14,5,5459
2018-05-14,5,528168
2018-05-14,5,25961
2018-05-14,5,3506788
2018-05-14,5,535
2018-05-14,5,45933
2018-05-1

2025-01-20 21:42:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 951
2025-01-20 21:42:18 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:19 - root - INFO - SQL:
-- 5. View the week numbers around mid-June for 2018
SELECT "week_number", "week_date", "month_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" = 6
ORDER BY "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
week_number,week_date,month_number
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,20

2025-01-20 21:42:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-20 21:42:20 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:21 - root - INFO - SQL:
-- 6. Check the format of week dates in the data
SELECT DISTINCT "week_date", "week_date_formatted"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
ORDER BY "week_date"
LIMIT 1000;
Results:
week_date,week_date_formatted
2018-03-26,2018-3-26
2018-04-02,2018-4-2
2018-04-09,2018-4-9
2018-04-16,2018-4-16
2018-04-23,2018-4-23
2018-04-30,2018-4-30
2018-05-07,2018-5-7
2018-05-14,2018-5-14
2018-05-21,2018-5-21
2018-05-28,2018-5-28
2018-06-04,2018-6-4
2018-06-11,2018-6-11
2018-06-18,2018-6-18
2018-06-25,2018-6-25
2018-07-02,2018-7-2
2018-07-09,2018-7-9
2018-07-16,2018-7-16
2018-07-23,2018-7-23
2018-07-30,2018-7-30
2018-08-06,2018-8-6
2018-08-13,2018-8-13
2018-08-20,2018-8-20
2018-08-27,2018-8-27
2018-09-03,2018-9-3
2019-03-25,2019-3-25
2019-04-01,2019-4-1
2019-04-08,2019-4-8
2019-04-15,2019-4-15
2019-04-22,2019-4-22
2019-04-29,2019-4-29
2019-05-06,2019-5-6
2019-05-13,2019-5-13
2019-05-20,2019-5-20
2019-05-27,2019-5-27
2019-06-03,2019-6-3
2019-06-10,2019-6-10
2019-06-17,2019-6-17
2019-06-24,2019-6-24
2019-07-01,2019-7-1
2019-07-08,2019-7-8
2019-07-15,2019-7-15
2019-07-22,2019-7-22
2019-07-29,2019-7-29
2019-08-05,2019-8-5
2019-08-12,2019-8-12
2019-08-19,2019-8-19
2019-08-26,2019-8-26
2019-09-02,2019-9-2
2020-03-23,2020-3-23
2020-03-30,2020-3-30
2020-04-06,2020-4-6
2020-04-13,2020-4-13
2020-04-20,2020-4-20
2020-04-27,2020-4-27
2020-05-04,2020-5-4
2020-05-11,2020-5-11
2020-05-18,2020-5-18
2020-05-25,2020-5-25
2020-06-01,2020-6-1
2020-06-08,2020-6-8
2020-06-15,2020-6-15
2020-06-22,2020-6-22
2020-06-29,2020-6-29
2020-07-06,2020-7-6
2020-07-13,2020-7-13
2020-07-20,2020-7-20
2020-07-27,2020-7-27
2020-08-03,2020-8-3
2020-08-10,2020-8-10
2020-08-17,2020-8-17
2020-08-24,2020-8-24
2020-08-31,2020-8-31

2025-01-20 21:42:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-20 21:42:22 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:23 - root - INFO - SQL:
-- 7. Get total sales per week for 2018
SELECT "week_number", SUM("sales") AS "total_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
Results:
week_number,total_sales
13,536755452
14,541167115
15,529574544
16,526355503
17,536075195
18,539632290
19,534072854
20,527788555
21,522377362
22,544417653
23,525086015
24,533259779
25,524368733
26,525737676
27,532366710
28,546769795
29,541086855
30,547653578
31,539321534
32,549636536
33,543535235
34,544330787
35,553039709
36,552971362

2025-01-20 21:42:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 21:42:24 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:25 - root - INFO - SQL:
-- 8. Find the minimum and maximum week numbers for each month in 2018
SELECT "month_number", MIN("week_number") AS "min_week", MAX("week_number") AS "max_week"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
GROUP BY "month_number"
ORDER BY "month_number"
LIMIT 1000;
Results:
month_number,min_week,max_week
3,13,13
4,14,18
5,19,22
6,23,26
7,27,31
8,32,35
9,36,36

2025-01-20 21:42:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:26 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:26 - root - INFO - SQL:
-- 9. List sales data around mid-June for all three years
SELECT "calendar_year", "week_number", "week_date", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" IN (2018, 2019, 2020) AND "month_number" = 6
ORDER BY "calendar_year", "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
calendar_year,week_number,week_date,sales
2018,23,2018-06-04,267182
2018,23,2018-06-04,111185
2018,23,2018-06-04,17430358
2018,23,2018-06-04,589621
2018,23,2018-06-04,20404
2018,23,2018-06-04,338624
2018,23,2018-06-04,165882
2018,23,2018-06-04,2791326
2018,23,2018-06-04,31594
2018,23,2018-06-04,457234
2018,23,2018-06-04,2254951
2018,23,2018-06-04,1631288
2018,23,2018-06-04,12739
2018,23,2018-06-04,50960
2018,23,2018-06-04,9916
2018,23,2018-06-04,1665650
2018,23,2018-06-04,1042963
2018,23,2018-06-04,12067
2018,23,2018-06-04,7843
2018,23,2018-06-04,23315
2018,23,2018-06-04,17652
2018,23,2018-06-04,18949
2018,23,2018-06-04,4528994
2018,23,2018-06-04,4631754
2018,23,2018-06-04,109452
2018,23,2018-06-04,19649
2018,23,2018-06-04,4725136
2018,23,2018-06-04,237733
2018,23,2018-06-04,10713
2018,23,2018-06-04,1336703
2018,23,2018-06-04,191161
2018,23,2018-06-04,107912
2018,23,2018-06-04,173530
2018,23,2018-06-04,35954
2018,23,2018-06-04,1152276
2018,23,2018-06-04,190508
2018,23,2018-06-04,5941108
2018,23,2018-06-04,574447
2018,23,2018-06-04,494802
2018,23,2018-06-04,44894
2018,23,2018-06-04,56417
2018,23,2018-06-04,393291
2018,23,2018-06-04,8557
2018,23,2018-06-04,24085
2018,23,2018-06-04,23237
2018,23,2018-06-04,13444926
2018,23,2018-06-04,1037209
2018,23,2018-06-04,72732
2018,23,2018-06-04,64934
2018,23,2018-06-04,721566
2018,23,2018-06-04,215433
2018,23,2018-06-04,9053
2018,23,2018-06-04,27111
2018,23,2018-06-04,11888324
2018,23,2018-06-04,49018
2018,23,2018-06-04,63074384
2018,23,2018-06-04,70614
2018,23,2018-06-04,812605
2018,23,2018-06-04,45603939
2018,23,2018-06-04,3658363
2018,23,2018-06-04,46330
2018,23,2018-06-04,2609117
2018,23,2018-06-04,965704
2018,23,2018-06-04,125463
2018,23,2018-06-04,781760
2018,23,2018-06-04,816880
2018,23,2018-06-04,2288325
2018,23,2018-06-04,35244
2018,23,2018-06-04,2438662
2018,23,2018-06-04,23084
2018,23,2018-06-04,11115
2018,23,2018-06-04,3809465
2018,23,2018-06-04,3860699
2018,23,2018-06-04,1061363
2018,23,2018-06-04,52156
2018,23,2018-06-04,324667
2018,23,2018-06-04,18960302
2018,23,2018-06-04,292374
2018,23,2018-06-04,32955
2018,23,2018-06-04,25270
2018,23,2018-06-04,16291305
2018,23,2018-06-04,1417
2018,23,2018-06-04,68874
2018,23,2018-06-04,36945
2018,23,2018-06-04,402367
2018,23,2018-06-04,13351676
2018,23,2018-06-04,869539
2018,23,2018-06-04,1125
2018,23,2018-06-04,208182
2018,23,2018-06-04,5942
2018,23,2018-06-04,1611020
2018,23,2018-06-04,608
2018,23,2018-06-04,3156
2018,23,2018-06-04,4217
2018,23,2018-06-04,1637433
2018,23,2018-06-04,856954
2018,23,2018-06-04,4119
2018,23,2018-06-04,3548973
2018,23,2018-06-04,69228
2018,23,2018-06-04,663412
2018,23,2018-06-04,364634
2018,23,2018-06-04,73568
2018,23,2018-06-04,930704
2018,23,2018-06-04,24814
2018,23,2018-06-04,37373
2018,23,2018-06-04,1841
2018,23,2018-06-04,897
2018,23,2018-06-04,58389
2018,23,2018-06-04,43208
2018,23,2018-06-04,128650
2018,23,2018-06-04,47601107
2018,23,2018-06-04,800087
2018,23,2018-06-04,12709
2018,23,2018-06-04,4584414
2018,23,2018-06-04,7913
2018,23,2018-06-04,177194
2018,23,2018-06-04,266610
2018,23,2018-06-04,16316
2018,23,2018-06-04,5344
2018,23,2018-06-04,866909
2018,23,2018-06-04,281226
2018,23,2018-06-04,1307
2018,23,2018-06-04,9098
2018,23,2018-06-04,11893
2018,23,2018-06-04,29609
2018,23,2018-06-04,18084
2018,23,2018-06-04,2486850
2018,23,2018-06-04,2048224
2018,23,2018-06-04,8738062
2018,23,2018-06-04,42021
2018,23,2018-06-04,304043
2018,23,2018-06-04,435243
2018,23,2018-06-04,1807
2018,23,2018-06-04,1430325
2018,23,2018-06-04,488696
2018,23,2018-06-04,8876
2018,23,2018-06-04,15921694
2018,23,2018-06-04,15095995
2018,23,2018-06-04,383314
2018,23,2018-06-04,45486
2018,23,2018-06-04,964865
2018,23,2018-06-04,3093577
2018,23,2018-06-04,607760
2018,23,2018-06-04,3380788
2018,23,2018-06-04,1057671
2018,23,2018-06-04,9197
2018,23,2018-06-04,660944
2018,23,2018-06-04,3090
2018,23,2018-06-04,19407
2018,23,2018-06-04,182710
2018,23,2018-06-04,32389
2018,23,2018-06-04,701349
2018,23,2018-06-04,464256
2018,23,2018-06-04,479062
2018,23,2018-06-04,20111
2018,23,2018-06-04,20452
2018,23,2018-06-04,3710
2018,23,2018-06-04,550332
2018,23,2018-06-04,1816121
2018,23,2018-06-04,289
2018,23,2018-06-04,2543396
2018,23,2018-06-04,3394128
2018,23,2018-06-04,267449
2018,23,2018-06-04,25295650
2018,23,2018-06-04,394845
2018,23,2018-06-04,2972
2018,23,2018-06-04,30436
2018,23,2018-06-04,27450
2018,23,2018-06-04,7321
2018,23,2018-06-04,44199
2018,23,2018-06-04,2986
2018,23,2018-06-04,186052
2018,23,2018-06-04,30454
2018,23,2018-06-04,55807
2018,23,2018-06-04,20366
2018,23,2018-06-04,1457
2018,23,2018-06-04,9022027
2018,23,2018-06-04,266010
2018,23,2018-06-04,19187
2018,23,2018-06-04,912720
2018,23,2018-06-04,11305312
2018,23,2018-06-04,82832
2018,23,2018-06-04,1883
2018,23,2018-06-04,46317
2018,23,2018-06-04,27541
2018,23,2018-06-04,20124
2018,23,2018-06-04,143841
2018,23,2018-06-04,5812133
2018,23,2018-06-04,102197
2018,23,2018-06-04,3278
2018,23,2018-06-04,40963
2018,23,2018-06-04,2129350
2018,23,2018-06-04,1078

2025-01-20 21:42:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:28 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:28 - root - INFO - SQL:
-- 10. Retrieve total sales for the weeks before and after June 15, 2018
SELECT "week_number", "week_date", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 21 AND 26
ORDER BY "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
week_number,week_date,sales
21,2018-05-21,188138
21,2018-05-21,927931
21,2018-05-21,27477
21,2018-05-21,3645951
21,2018-05-21,2159936
21,2018-05-21,8524
21,2018-05-21,8713
21,2018-05-21,3210
21,2018-05-21,1133844
21,2018-05-21,9989
21,2018-05-21,4658478
21,2018-05-21,3832060
21,2018-05-21,2490585
21,2018-05-21,161280
21,2018-05-21,3147089
21,2018-05-21,30578
21,2018-05-21,497388
21,2018-05-21,611755
21,2018-05-21,12337
21,2018-05-21,971075
21,2018-05-21,19049028
21,2018-05-21,1146
21,2018-05-21,3580630
21,2018-05-21,23435
21,2018-05-21,56913
21,2018-05-21,8842
21,2018-05-21,46473593
21,2018-05-21,94247
21,2018-05-21,20596
21,2018-05-21,924826
21,2018-05-21,62492
21,2018-05-21,3241
21,2018-05-21,1851
21,2018-05-21,14001
21,2018-05-21,22258
21,2018-05-21,939230
21,2018-05-21,56322
21,2018-05-21,13395441
21,2018-05-21,1398357
21,2018-05-21,399064
21,2018-05-21,16578
21,2018-05-21,3867192
21,2018-05-21,37171
21,2018-05-21,108399
21,2018-05-21,4987285
21,2018-05-21,2048
21,2018-05-21,44818650
21,2018-05-21,25019
21,2018-05-21,305004
21,2018-05-21,41562
21,2018-05-21,539286
21,2018-05-21,61201495
21,2018-05-21,302861
21,2018-05-21,25427
21,2018-05-21,31573
21,2018-05-21,1225
21,2018-05-21,2366617
21,2018-05-21,141719
21,2018-05-21,40530
21,2018-05-21,266997
21,2018-05-21,9100851
21,2018-05-21,1637482
21,2018-05-21,18770
21,2018-05-21,128
21,2018-05-21,93234
21,2018-05-21,927659
21,2018-05-21,4289215
21,2018-05-21,2149075
21,2018-05-21,28470
21,2018-05-21,22992
21,2018-05-21,3440414
21,2018-05-21,211545
21,2018-05-21,2419
21,2018-05-21,196339
21,2018-05-21,5211031
21,2018-05-21,14961019
21,2018-05-21,19220
21,2018-05-21,27476
21,2018-05-21,2652286
21,2018-05-21,7668
21,2018-05-21,7490
21,2018-05-21,8194
21,2018-05-21,30662
21,2018-05-21,2053556
21,2018-05-21,11637390
21,2018-05-21,1803724
21,2018-05-21,37955
21,2018-05-21,30725
21,2018-05-21,3284958
21,2018-05-21,390234
21,2018-05-21,68159
21,2018-05-21,34346
21,2018-05-21,615671
21,2018-05-21,67916
21,2018-05-21,448723
21,2018-05-21,2199
21,2018-05-21,10170
21,2018-05-21,380245
21,2018-05-21,40773
21,2018-05-21,2050
21,2018-05-21,54304
21,2018-05-21,1953405
21,2018-05-21,10714
21,2018-05-21,4415258
21,2018-05-21,8815
21,2018-05-21,9952
21,2018-05-21,64370
21,2018-05-21,1042819
21,2018-05-21,735845
21,2018-05-21,1440638
21,2018-05-21,2303519
21,2018-05-21,218928
21,2018-05-21,933
21,2018-05-21,41139
21,2018-05-21,12438
21,2018-05-21,1053586
21,2018-05-21,256678
21,2018-05-21,178776
21,2018-05-21,19333
21,2018-05-21,311368
21,2018-05-21,4631
21,2018-05-21,71897
21,2018-05-21,1082258
21,2018-05-21,15947
21,2018-05-21,894408
21,2018-05-21,274179
21,2018-05-21,72944
21,2018-05-21,267586
21,2018-05-21,2423606
21,2018-05-21,66910
21,2018-05-21,15823156
21,2018-05-21,2309
21,2018-05-21,3637
21,2018-05-21,2144631
21,2018-05-21,3130
21,2018-05-21,760233
21,2018-05-21,533422
21,2018-05-21,285117
21,2018-05-21,5072090
21,2018-05-21,451
21,2018-05-21,194622
21,2018-05-21,30899
21,2018-05-21,42666
21,2018-05-21,3980
21,2018-05-21,72545
21,2018-05-21,60857
21,2018-05-21,1235
21,2018-05-21,20920
21,2018-05-21,20306
21,2018-05-21,16486757
21,2018-05-21,630759
21,2018-05-21,796546
21,2018-05-21,820002
21,2018-05-21,17267796
21,2018-05-21,462670
21,2018-05-21,39546
21,2018-05-21,110858
21,2018-05-21,1628991
21,2018-05-21,5391
21,2018-05-21,134079
21,2018-05-21,3678765
21,2018-05-21,7948
21,2018-05-21,169166
21,2018-05-21,15907
21,2018-05-21,12902
21,2018-05-21,67817
21,2018-05-21,856064
21,2018-05-21,3588849
21,2018-05-21,8835
21,2018-05-21,1347670
21,2018-05-21,14807
21,2018-05-21,432398
21,2018-05-21,1362599
21,2018-05-21,2491437
21,2018-05-21,13251767
21,2018-05-21,24811
21,2018-05-21,1220141
21,2018-05-21,6577
21,2018-05-21,8014
21,2018-05-21,372575
21,2018-05-21,160714
21,2018-05-21,24854
21,2018-05-21,7781097
21,2018-05-21,68428
21,2018-05-21,133107
21,2018-05-21,305373
21,2018-05-21,5758040
21,2018-05-21,1586
21,2018-05-21,815811
21,2018-05-21,208
21,2018-05-21,660500
21,2018-05-21,2919
21,2018-05-21,523208
21,2018-05-21,1583716
21,2018-05-21,6351481
21,2018-05-21,17997
21,2018-05-21,37301
21,2018-05-21,22503
21,2018-05-21,4624567
21,2018-05-21,2264303
21,2018-05-21,16556
21,2018-05-21,5932781
21,2018-05-21,2891882
21,2018-05-21,7410092
21,2018-05-21,21068
21,2018-05-21,3016196
21,2018-05-21,105674
21,2018-05-21,372903
21,2018-05-21,1631475
21,2018-05-21,211345
21,2018-05-21,6606
21,2018-05-21,22031
21,2018-05-21,989314
21,2018-05-21,38115
21,2018-05-21,11454192
21,2018-05-21,575772
21,2018-05-21,31371
21,2018-05-21,50422
21,2018-05-21,3630092
21,2018-05-21,327279
21,2018-05-21,3394
21,2018-05-21,25121884
21,2018-05-21,31963
21,2018-05-21,469536
21,2018-05-21,396
21,2018-05-21,43782
21,2018-05-21,32938
21,2018-05-21,5261
21,2018-05-21,8566788
21,2018-05-21,2172498
21,2018-05-21,179574
21,2018-05-21,66796
21,2018-05-21,2430418
21,2018-05-21,4549120
21,2018-05-21,4527
21,2018-05-21,178002
21,2018-05-21,810850
22,2018-05-28,577899
22,2018-05-28,2198177
22,2018-05-28,11977
22,20

2025-01-20 21:42:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-20 21:42:29 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:30 - root - INFO - SQL:
-- 11. View distinct week numbers to understand the weekly division
SELECT DISTINCT "week_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
ORDER BY "week_number"
LIMIT 1000;
Results:
week_number
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

2025-01-20 21:42:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:42:31 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:32 - root - INFO - SQL:
-- 12. Get average sales per week for each year
SELECT "calendar_year", AVG("sales") AS "average_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
GROUP BY "calendar_year"
ORDER BY "calendar_year"
LIMIT 1000;
Results:
calendar_year,average_sales
2018,2263492.598631
2019,2408204.712684
2020,2468958.308527

2025-01-20 21:42:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-20 21:42:33 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:33 - root - INFO - SQL:
-- 13. Identify the total number of transactions per week in June for 2019
SELECT "week_number", SUM("transactions") AS "total_transactions"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2019 AND "month_number" = 6
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
Results:
week_number,total_transactions
23,14969739
24,15184213
25,15188595
26,15053941

2025-01-20 21:42:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:35 - root - INFO - SQL:
-- 14. Examine the sales trend for weeks around mid-June in 2020
SELECT "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2020 AND "week_number" BETWEEN 20 AND 27
ORDER BY "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
week_number,sales
20,11213200
20,136798
20,864005
20,1295
20,924372
20,6072
20,6575969
20,7493
20,3205479
20,2774068
20,6157
20,32888
20,14970812
20,1759
20,17796
20,103772
20,19302
20,1319
20,35326
20,154724
20,18431
20,876562
20,392604
20,1748274
20,937494
20,5720394
20,975600
20,15095
20,1424
20,2088699
20,3322130
20,619588
20,22399960
20,10921751
20,1226747
20,185507
20,40708
20,4517920
20,26248
20,29420
20,5889856
20,2411
20,14447370
20,33873
20,996430
20,2176608
20,30227
20,846923
20,50991
20,787
20,66963
20,517290
20,1776394
20,16567397
20,213719
20,447537
20,2550318
20,18475442
20,1007521
20,21056
20,267121
20,31937
20,75002
20,3560216
20,23259
20,153959
20,5870
20,6140
20,11167
20,941004
20,49780
20,4788109
20,42079
20,13181
20,2231451
20,664
20,7523707
20,2427780
20,13429
20,126410
20,587325
20,1306163
20,821647
20,425531
20,2760471
20,1135
20,81347
20,579716
20,1086
20,25988
20,260783
20,896799
20,882536
20,225370
20,9129781
20,2301552
20,67453
20,49238621
20,1457353
20,3321731
20,6683
20,1653037
20,1035
20,252835
20,386278
20,44407097
20,3290057
20,888358
20,16661822
20,19319
20,6681
20,6724340
20,13243
20,1379437
20,483739
20,44697
20,16864
20,1299660
20,761524
20,2202493
20,383617
20,992683
20,68221
20,2625
20,125662
20,16436
20,36427
20,42922
20,52311
20,7278
20,1491
20,24343
20,48294
20,51564
20,129128
20,140452
20,58385
20,10941
20,362625
20,11246344
20,452714
20,11109
20,90637
20,258471
20,25288
20,119976
20,5829757
20,2028916
20,30149337
20,34235
20,400950
20,38268
20,2502473
20,6772
20,89553
20,5231682
20,22505
20,436951
20,129919
20,832700
20,2767160
20,5033895
20,2098706
20,78994
20,940
20,59460
20,762670
20,7402426
20,2194071
20,42841
20,271535
20,1666719
20,296032
20,45478
20,26106
20,121053
20,23475
20,32985
20,51321
20,3491442
20,44326
20,90846
20,2390461
20,343658
20,4405823
20,2170354
20,27961
20,7199
20,2197028
20,726795
20,429645
20,59817
20,3355882
20,30802
20,437290
20,15861
20,51162
20,639292
20,4927487
20,593362
20,19007
20,65279
20,64658287
20,128595
20,5298559
20,9825
20,1382847
20,15047
20,256439
20,11817
20,33819
20,868
20,534
20,46505
20,8206
20,50867
20,1596286
20,17587
20,364828
20,52179
20,778617
20,20077866
20,1770055
20,512523
20,2157702
20,17003395
20,387067
20,3995
20,736120
20,1138053
20,6023151
20,497187
20,10426
20,344707
20,8691039
20,3235
20,13755
20,74679
21,1685671
21,5342
21,11043793
21,262445
21,34915
21,793
21,27642
21,634015
21,364412
21,66634
21,1280896
21,141441
21,19672
21,361882
21,96732
21,3181673
21,2006122
21,9204042
21,53175
21,29915
21,6723137
21,429979
21,119937
21,33358
21,64211904
21,1602793
21,1765
21,4618567
21,7445
21,789634
21,1041064
21,30026087
21,2272218
21,2181810
21,109364
21,2342
21,522563
21,27544
21,3566897
21,2284891
21,2599
21,4719
21,854624
21,258708
21,11017216
21,13996
21,11356688
21,214428
21,7584111
21,12755
21,152602
21,66849
21,993855
21,1011014
21,12427
21,293977
21,76494
21,617637
21,845405
21,155355
21,3887
21,5918845
21,8066
21,2146858
21,15073
21,600119
21,359051
21,39994
21,218
21,1986987
21,12524
21,20031
21,49090
21,47270
21,23920
21,939066
21,3334217
21,465648
21,2100027
21,465393
21,461278
21,4559208
21,954785
21,4956551
21,64714
21,87706
21,535805
21,383797
21,123920
21,1306
21,5161179
21,480498
21,270980
21,5180
21,1429280
21,3352
21,11704
21,15037298
21,62387
21,907257
21,3900
21,119530
21,2588654
21,2502063
21,40431
21,897722
21,1834416
21,52738
21,55710
21,14592
21,124572
21,1172060
21,802055
21,4801310
21,858130
21,53463
21,8614840
21,1447820
21,14872
21,46560
21,3474692
21,3036
21,395124
21,553428
21,42638
21,1268
21,73718
21,34920
21,9188
21,49587
21,1303250
21,31967
21,2667
21,130015
21,254131
21,3358384
21,451976
21,4193
21,66955
21,25609
21,3247033
21,1448578
21,991
21,62635
21,27513
21,2143224
21,98181
21,6485
21,34101
21,2851231
21,127924
21,2390319
21,282150
21,19294
21,266727
21,42583
21,44550
21,21419
21,2137229
21,5376453
21,2666444
21,88372
21,33079
21,16232292
21,11298
21,5577831
21,446036
21,4052
21,20850
21,1330104
21,190616
21,1704710
21,32220
21,2397635
21,2763891
21,446379
21,4394
21,7531190
21,7421
21,77180
21,6165599
21,44493573
21,22785
21,3624839
21,26133
21,52205
21,47653
21,54615
21,407517
21,18360291
21,935950
21,835929
21,44786
21,747640
21,22377941
21,758167
21,1258891
21,16097
21,10807
21,11595
21,1919
21,2210786
21,33872
21,30045
21,5879139
21,915413
21,1109858
21,5354
21,30940
21,39618
21,6931
21,5062985
21,20396901
21,6517112
21,19570
21,39477
21,405243
21,863512
21,269246
21,14498529
21,1758894
21,16652063
21,13502
21,16562
21,101218
21,243183
21,1952
21,13412
21,49309503
21,408215
21,518467
21,616473
21,811341
21,16718027
21,27920
21,8518
21,36469
21,1671
22,402203
22,59847
22,1706118
22,866297
22,50955
22,10832358
22,197038
22,78053
22,127974
22,31126
22,30990
22,38597
22,638483
22,5827
22,35632
22,30110314
22,5195267
22,128601
22,22382
22,9356
22,2001324
22,1669
22,29908
22,3324021
22,73470
22,2055441
22,14815771
22,45385
22,878454
22,2263831
22,11531995
22,258
22,2904

2025-01-20 21:42:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-20 21:42:36 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:37 - root - INFO - SQL:
-- 15. Find the date format used in "week_date_formatted"
SELECT DISTINCT "week_date_formatted"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Results:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26

2025-01-20 21:42:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 951
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:38 - root - INFO - SQL:
-- 16. Retrieve sales data for specific regions in June 2018
SELECT "region", "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" = 6
ORDER BY "region", "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
region,week_number,sales
AFRICA,23,30436
AFRICA,23,1611020
AFRICA,23,2288325
AFRICA,23,4725136
AFRICA,23,3809465
AFRICA,23,23367
AFRICA,23,31994
AFRICA,23,42021
AFRICA,23,314628
AFRICA,23,23237
AFRICA,23,267182
AFRICA,23,4631754
AFRICA,23,35244
AFRICA,23,479062
AFRICA,23,11888324
AFRICA,23,18960302
AFRICA,23,3658363
AFRICA,23,45603939
AFRICA,23,2329823
AFRICA,23,32389
AFRICA,23,869539
AFRICA,23,2254951
AFRICA,23,292374
AFRICA,23,12709
AFRICA,23,6012
AFRICA,23,1430325
AFRICA,23,13351676
AFRICA,23,304043
AFRICA,23,574447
AFRICA,23,912720
AFRICA,23,31594
AFRICA,23,2184400
AFRICA,23,173530
AFRICA,23,5941108
AFRICA,24,4747642
AFRICA,24,11700
AFRICA,24,264516
AFRICA,24,12219442
AFRICA,24,147672
AFRICA,24,34876
AFRICA,24,505429
AFRICA,24,675764
AFRICA,24,13407541
AFRICA,24,35506
AFRICA,24,233158
AFRICA,24,4783369
AFRICA,24,2295726
AFRICA,24,295585
AFRICA,24,2364447
AFRICA,24,27988
AFRICA,24,1474258
AFRICA,24,19120
AFRICA,24,28537
AFRICA,24,1657858
AFRICA,24,1025535
AFRICA,24,45457692
AFRICA,24,863137
AFRICA,24,20648
AFRICA,24,3773700
AFRICA,24,2308082
AFRICA,24,19258180
AFRICA,24,29761
AFRICA,24,4283
AFRICA,24,6065268
AFRICA,24,3935578
AFRICA,24,36422
AFRICA,24,292720
AFRICA,24,2270402
AFRICA,25,3881100
AFRICA,25,5845
AFRICA,25,5946149
AFRICA,25,2265293
AFRICA,25,16771
AFRICA,25,12443714
AFRICA,25,38763
AFRICA,25,302549
AFRICA,25,1612884
AFRICA,25,1506931
AFRICA,25,4916648
AFRICA,25,31776
AFRICA,25,166890
AFRICA,25,12695412
AFRICA,25,315628
AFRICA,25,425500
AFRICA,25,41134
AFRICA,25,42166
AFRICA,25,18867353
AFRICA,25,2266992
AFRICA,25,259145
AFRICA,25,23047
AFRICA,25,1107562
AFRICA,25,21662
AFRICA,25,34585
AFRICA,25,29865
AFRICA,25,2357121
AFRICA,25,4679278
AFRICA,25,3809105
AFRICA,25,44907107
AFRICA,25,527226
AFRICA,25,302317
AFRICA,25,847409
AFRICA,25,2219349
AFRICA,26,163954
AFRICA,26,12842306
AFRICA,26,35723
AFRICA,26,18254
AFRICA,26,33563
AFRICA,26,257011
AFRICA,26,1626236
AFRICA,26,5977
AFRICA,26,31208
AFRICA,26,4784320
AFRICA,26,2234500
AFRICA,26,291230
AFRICA,26,2367537
AFRICA,26,31719
AFRICA,26,1498072
AFRICA,26,886488
AFRICA,26,5985851
AFRICA,26,24949
AFRICA,26,305064
AFRICA,26,3903411
AFRICA,26,1207888
AFRICA,26,12284532
AFRICA,26,3739885
AFRICA,26,4914683
AFRICA,26,46154511
AFRICA,26,23955
AFRICA,26,2303157
AFRICA,26,527867
AFRICA,26,2306973
AFRICA,26,302838
AFRICA,26,18917331
AFRICA,26,427332
AFRICA,26,35581
AFRICA,26,41931
ASIA,23,364634
ASIA,23,4950802
ASIA,23,20111
ASIA,23,109452
ASIA,23,2129350
ASIA,23,24085
ASIA,23,27541
ASIA,23,11810
ASIA,23,8738062
ASIA,23,47601107
ASIA,23,9022027
ASIA,23,16291305
ASIA,23,2609117
ASIA,23,701349
ASIA,23,3675214
ASIA,23,20124
ASIA,23,182710
ASIA,23,4119
ASIA,23,1971041
ASIA,23,281226
ASIA,23,27136
ASIA,23,3860699
ASIA,23,23315
ASIA,23,19407
ASIA,23,2486850
ASIA,23,191161
ASIA,23,1924468
ASIA,23,3394128
ASIA,23,29609
ASIA,23,3691016
ASIA,23,965704
ASIA,23,182468
ASIA,23,1341643
ASIA,23,195120
ASIA,24,16338668
ASIA,24,2503852
ASIA,24,3451215
ASIA,24,8844241
ASIA,24,190429
ASIA,24,2025226
ASIA,24,3862038
ASIA,24,194891
ASIA,24,949969
ASIA,24,3735576
ASIA,24,24975
ASIA,24,99690
ASIA,24,274177
ASIA,24,46374089
ASIA,24,789593
ASIA,24,1391101
ASIA,24,3688874
ASIA,24,2111113
ASIA,24,20499
ASIA,24,24213
ASIA,24,2601253
ASIA,24,554435
ASIA,24,3855
ASIA,24,191115
ASIA,24,8950657
ASIA,24,4981850
ASIA,24,25171
ASIA,24,1982463
ASIA,24,24241
ASIA,24,176422
ASIA,24,10046
ASIA,24,34453
ASIA,24,22006
ASIA,24,22862
ASIA,25,13484
ASIA,25,306649
ASIA,25,28212
ASIA,25,1955977
ASIA,25,32007
ASIA,25,8886725
ASIA,25,197694
ASIA,25,1394355
ASIA,25,3661933
ASIA,25,3441752
ASIA,25,15812417
ASIA,25,208196
ASIA,25,28471
ASIA,25,26297
ASIA,25,45742866
ASIA,25,214792
ASIA,25,3849727
ASIA,25,2584766
ASIA,25,39276
ASIA,25,30354
ASIA,25,212302
ASIA,25,946829
ASIA,25,112501
ASIA,25,8464278
ASIA,25,32768
ASIA,25,5126
ASIA,25,850432
ASIA,25,23680
ASIA,25,371060
ASIA,25,2051876
ASIA,25,3837630
ASIA,25,2486017
ASIA,25,4870238
ASIA,25,2009778
ASIA,26,3805316
ASIA,26,362831
ASIA,26,12307
ASIA,26,102674
ASIA,26,46194251
ASIA,26,33131
ASIA,26,3363509
ASIA,26,2056991
ASIA,26,1360266
ASIA,26,969548
ASIA,26,1947375
ASIA,26,25017
ASIA,26,184592
ASIA,26,15435775
ASIA,26,181791
ASIA,26,200901
ASIA,26,2430726
ASIA,26,27885
ASIA,26,2008147
ASIA,26,8297875
ASIA,26,3347
ASIA,26,26129
ASIA,26,885815
ASIA,26,2547864
ASIA,26,4781297
ASIA,26,189722
ASIA,26,24295
ASIA,26,26513
ASIA,26,3812138
ASIA,26,3587807
ASIA,26,23649
ASIA,26,293192
ASIA,26,18376
ASIA,26,8738789
CANADA,23,125463
CANADA,23,215433
CANADA,23,7913
CANADA,23,2079950
CANADA,23,550332
CANADA,23,64934
CANADA,23,11305312
CANADA,23,4228448
CANADA,23,267449
CANADA,23,50960
CANADA,23,383314
CANADA,23,9197
CANADA,23,663412
CANADA,23,812605
CANADA,23,7721
CANADA,23,1042963
CANADA,23,72732
CANADA,23,5344
CANADA,23,70614
CANADA,23,9916
CANADA,23,2791326
CANADA,23,930704
CANADA,23,394845
CANADA,23,107912
CANADA,23,607760
CANADA,23,9098
CANADA,23,12048
CANADA,23,2438662
CANADA,23,7843
CANADA,23,1883
CANADA,23,728035
CANADA,23,69615
CANADA,23,2972
CANADA,23,1152276
CAN

2025-01-20 21:42:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 952
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:40 - root - INFO - SQL:
-- 17. Compare sales between different platforms around mid-June 2019
SELECT "platform", "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2019 AND "week_number" BETWEEN 22 AND 25
ORDER BY "platform", "week_number"
LIMIT 1000;
Results:
Too long, hard cut:
platform,week_number,sales
Retail,22,537728
Retail,22,1261957
Retail,22,14142
Retail,22,77994
Retail,22,1368641
Retail,22,59846
Retail,22,11200
Retail,22,10133729
Retail,22,19743
Retail,22,14519012
Retail,22,407181
Retail,22,424918
Retail,22,44008
Retail,22,4287216
Retail,22,116253
Retail,22,26633
Retail,22,1343869
Retail,22,2945308
Retail,22,611378
Retail,22,1039651
Retail,22,5007272
Retail,22,2198404
Retail,22,5317960
Retail,22,3258172
Retail,22,1898654
Retail,22,48319102
Retail,22,2421273
Retail,22,780923
Retail,22,1343480
Retail,22,371786
Retail,22,2248577
Retail,22,36099
Retail,22,15890634
Retail,22,17500209
Retail,22,4354342
Retail,22,4281816
Retail,22,2664099
Retail,22,124267
Retail,22,1764057
Retail,22,59400
Retail,22,15565079
Retail,22,2179798
Retail,22,68404
Retail,22,164728
Retail,22,452379
Retail,22,1106037
Retail,22,24469
Retail,22,8196299
Retail,22,2362584
Retail,22,21477926
Retail,22,10143740
Retail,22,64581778
Retail,22,2515886
Retail,22,51528
Retail,22,1956247
Retail,22,3473394
Retail,22,666626
Retail,22,4474154
Retail,22,1143743
Retail,22,5466006
Retail,22,28725
Retail,22,916053
Retail,22,50538
Retail,22,12302
Retail,22,72329
Retail,22,858756
Retail,22,1579930
Retail,22,246678
Retail,22,5532284
Retail,22,3357654
Retail,22,3184296
Retail,22,613972
Retail,22,323889
Retail,22,7960
Retail,22,3404361
Retail,22,2098106
Retail,22,257014
Retail,22,2283740
Retail,22,997406
Retail,22,28766028
Retail,22,938078
Retail,22,801367
Retail,22,1323488
Retail,22,550872
Retail,22,2110118
Retail,22,5972766
Retail,22,965719
Retail,22,5371202
Retail,22,404818
Retail,22,166119
Retail,22,909179
Retail,22,18592046
Retail,22,46030335
Retail,22,1940308
Retail,22,2337524
Retail,22,2525867
Retail,22,877272
Retail,22,8588671
Retail,22,641348
Retail,22,4516588
Retail,22,6364450
Retail,22,7291613
Retail,22,3624617
Retail,22,7030990
Retail,22,32421
Retail,22,1736084
Retail,22,1363770
Retail,22,45982
Retail,22,17192641
Retail,22,11341
Retail,22,13619466
Retail,22,1593860
Retail,22,5210213
Retail,22,3210013
Retail,22,820896
Retail,22,747297
Retail,22,11944493
Retail,22,3014466
Retail,22,89293
Retail,23,62541
Retail,23,165747
Retail,23,2095862
Retail,23,1435531
Retail,23,8490293
Retail,23,74055
Retail,23,11428
Retail,23,607616
Retail,23,3620060
Retail,23,50710
Retail,23,6907095
Retail,23,1298192
Retail,23,12164
Retail,23,724761
Retail,23,5462733
Retail,23,598011
Retail,23,926872
Retail,23,3282143
Retail,23,337318
Retail,23,117988
Retail,23,589845
Retail,23,909254
Retail,23,1074904
Retail,23,5966719
Retail,23,816408
Retail,23,2151091
Retail,23,67115
Retail,23,29715
Retail,23,1449178
Retail,23,2731504
Retail,23,20538
Retail,23,4388868
Retail,23,2344702
Retail,23,14309178
Retail,23,1977678
Retail,23,50318
Retail,23,1825446
Retail,23,1067882
Retail,23,986375
Retail,23,4465405
Retail,23,885653
Retail,23,5448670
Retail,23,90274
Retail,23,43851
Retail,23,3080038
Retail,23,1643855
Retail,23,4773298
Retail,23,681786
Retail,23,17435465
Retail,23,838067
Retail,23,3317407
Retail,23,2902083
Retail,23,1239396
Retail,23,7393194
Retail,23,7469
Retail,23,2530412
Retail,23,1315931
Retail,23,401792
Retail,23,75911
Retail,23,13811
Retail,23,40421
Retail,23,3506275
Retail,23,2948816
Retail,23,1986365
Retail,23,793027
Retail,23,15360658
Retail,23,48764427
Retail,23,175896
Retail,23,1945746
Retail,23,21045895
Retail,23,17200330
Retail,23,11420255
Retail,23,442201
Retail,23,6283607
Retail,23,2265493
Retail,23,607838
Retail,23,2475741
Retail,23,1340706
Retail,23,436445
Retail,23,4344007
Retail,23,2578994
Retail,23,2295913
Retail,23,1849402
Retail,23,15762408
Retail,23,255671
Retail,23,2218774
Retail,23,256703
Retail,23,30023
Retail,23,5305669
Retail,23,10045104
Retail,23,380500
Retail,23,4459363
Retail,23,1357741
Retail,23,18206165
Retail,23,23373
Retail,23,53625
Retail,23,943816
Retail,23,10306
Retail,23,385829
Retail,23,28028599
Retail,23,10067270
Retail,23,3426756
Retail,23,4412254
Retail,23,64596717
Retail,23,5172845
Retail,23,803972
Retail,23,63098
Retail,23,45637911
Retail,23,1021034
Retail,23,1586511
Retail,23,3395023
Retail,23,128857
Retail,23,8119725
Retail,23,607669
Retail,23,30851
Retail,23,2162952
Retail,23,2398317
Retail,23,13452948
Retail,23,5403063
Retail,24,608300
Retail,24,9939148
Retail,24,3563545
Retail,24,2167545
Retail,24,176906
Retail,24,18238815
Retail,24,2146934
Retail,24,50407
Retail,24,622599
Retail,24,260829
Retail,24,48587
Retail,24,3397422
Retail,24,1361886
Retail,24,2331370
Retail,24,2308933
Retail,24,7229407
Retail,24,2473137
Retail,24,1298346
Retail,24,35899
Retail,24,17187874
Retail,24,2989057
Retail,24,1072062
Retail,24,6864037
Retail,24,1043270
Retail,24,599201
Retail,24,22935
Retail,24,2934750
Retail,24,2385371
Retail,24,4385594
Retail,24,1453001
Retail,24,4424506
Retail,24,594425
Retail,24,1814066
Retail,24,2085600
Retail,24,28506
Retail,24,69776
Retail,24,21058788
Retail,24,48186
Retail,24,440532
Retail,24,388425
Retail,24,815552
Retail,24,1213423
Retail,24,29386
Retail,24,647734
Retail,24,21058
Retail,24,1348660

2025-01-20 21:42:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:42:41 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:42 - root - INFO - SQL:
-- 18. View the demographic segments in the sales data
SELECT DISTINCT "demographic"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Results:
demographic
Couples
Families
unknown

2025-01-20 21:42:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-20 21:42:43 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:44 - root - INFO - SQL:
-- 19. Get average transaction value per week for June 2020
SELECT "week_number", AVG("avg_transaction") AS "avg_transaction_value"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2020 AND "month_number" = 6
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
Results:
week_number,avg_transaction_value
23,100.08189075630253
24,106.49327731092437
25,106.97806722689076
26,111.20718487394959
27,108.80411764705883

2025-01-20 21:42:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 16
2025-01-20 21:42:45 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:45 - root - INFO - SQL:
-- 20. Examine age bands of customers in weeks around mid-June 2018
SELECT "week_number", "age_band", SUM("sales") AS "total_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 21 AND 24
GROUP BY "week_number", "age_band"
ORDER BY "week_number"
LIMIT 1000;
Results:
week_number,age_band,total_sales
21,Middle Aged,83152708
21,unknown,216201212
21,Young Adults,58500027
21,Retirees,164523415
22,unknown,225625841
22,Middle Aged,86345405
22,Young Adults,62274184
22,Retirees,170172223
23,unknown,218360798
23,Retirees,165462863
23,Young Adults,58475504
23,Middle Aged,82786850
24,Retirees,169304633
24,Young Adults,59836732
24,unknown,219636685
24,Middle Aged,84481729

2025-01-20 21:42:45 - root - INFO - itercount: 0
2025-01-20 21:42:45 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
Consider which tables and columns are relevant to the task.

**Relevant Table:**
- **Database:** `BANK_SALES_TRADING`
- **Schema:** `BANK_SALES_TRADING`
- **Table:** `CLEANED_WEEKLY_SALES`

**Relevant Columns and Potential Usage:**

- `"calendar_year"`: To filter records for the years **2018**, **2019**, and **2020**.
- `"month_number"`: To identify months around **June** (month **6**).
- `"week_number"`: To identify specific weeks before and after **June 15**.
- `"week_date"`: May contain the date representing the week; useful for determining specific dates.
- `"week_date_formatted"`: Possibly a standardized date format; may help with date comparisons.
- `"sales"`: To calculate total sales in the specified periods.

**Conditions that may be used:**

- Filter by `"calendar_year"` to include **2018**, **2019**, and **2020**.
- Use `"month_number"` and `"week_number"` to select the four weeks before and after **June 15**.
- Utilize `"week_date"` or `"week_date_formatted"` to accurately identify dates around **mid-June**.

---

**SQL Queries:**

```sql
-- 1. View distinct years available in the data
SELECT DISTINCT "calendar_year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
```

```sql
-- 2. View distinct month numbers and their occurrence count
SELECT DISTINCT "month_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
```

```sql
-- 3. Retrieve week numbers and corresponding week dates for 2018
SELECT "calendar_year", "week_number", "week_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 4. Get sales data for May, June, and July of 2018
SELECT "week_date", "month_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6, 7)
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 5. View the week numbers around mid-June for 2018
SELECT "week_number", "week_date", "month_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" = 6
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 6. Check the format of week dates in the data
SELECT DISTINCT "week_date", "week_date_formatted"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
ORDER BY "week_date"
LIMIT 1000;
```

```sql
-- 7. Get total sales per week for 2018
SELECT "week_number", SUM("sales") AS "total_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 8. Find the minimum and maximum week numbers for each month in 2018
SELECT "month_number", MIN("week_number") AS "min_week", MAX("week_number") AS "max_week"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
GROUP BY "month_number"
ORDER BY "month_number"
LIMIT 1000;
```

```sql
-- 9. List sales data around mid-June for all three years
SELECT "calendar_year", "week_number", "week_date", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" IN (2018, 2019, 2020) AND "month_number" = 6
ORDER BY "calendar_year", "week_number"
LIMIT 1000;
```

```sql
-- 10. Retrieve total sales for the weeks before and after June 15, 2018
SELECT "week_number", "week_date", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 21 AND 26
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 11. View distinct week numbers to understand the weekly division
SELECT DISTINCT "week_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 12. Get average sales per week for each year
SELECT "calendar_year", AVG("sales") AS "average_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
GROUP BY "calendar_year"
ORDER BY "calendar_year"
LIMIT 1000;
```

```sql
-- 13. Identify the total number of transactions per week in June for 2019
SELECT "week_number", SUM("transactions") AS "total_transactions"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2019 AND "month_number" = 6
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 14. Examine the sales trend for weeks around mid-June in 2020
SELECT "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2020 AND "week_number" BETWEEN 20 AND 27
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 15. Find the date format used in "week_date_formatted"
SELECT DISTINCT "week_date_formatted"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
```

```sql
-- 16. Retrieve sales data for specific regions in June 2018
SELECT "region", "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" = 6
ORDER BY "region", "week_number"
LIMIT 1000;
```

```sql
-- 17. Compare sales between different platforms around mid-June 2019
SELECT "platform", "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2019 AND "week_number" BETWEEN 22 AND 25
ORDER BY "platform", "week_number"
LIMIT 1000;
```

```sql
-- 18. View the demographic segments in the sales data
SELECT DISTINCT "demographic"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
```

```sql
-- 19. Get average transaction value per week for June 2020
SELECT "week_number", AVG("avg_transaction") AS "avg_transaction_value"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2020 AND "month_number" = 6
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
```

```sql
-- 20. Examine age bands of customers in weeks around mid-June 2018
SELECT "week_number", "age_band", SUM("sales") AS "total_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 21 AND 24
GROUP BY "week_number", "age_band"
ORDER BY "week_number"
LIMIT 1000;
```

These queries are designed to explore the data in the `CLEANED_WEEKLY_SALES` table and understand the values in the relevant columns. They help in:

- Identifying the date formats and how weeks are numbered.
- Understanding how sales are distributed across weeks, months, and years.
- Finding the exact weeks that fall four weeks before and after June 15.
- Exploring additional dimensions like region, platform, and demographic segments that might impact sales around mid-June.

This exploration is essential to accurately calculate the percentage change in sales between the specified periods for each year.Query:
-- 1. View distinct years available in the data
SELECT DISTINCT "calendar_year"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Answer:
calendar_year
2020
2019
2018
Query:
-- 2. View distinct month numbers and their occurrence count
SELECT DISTINCT "month_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Answer:
month_number
8
7
5
4
3
9
6
Query:
-- 3. Retrieve week numbers and corresponding week dates for 2018
SELECT "calendar_year", "week_number", "week_date"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
ORDER BY "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
calendar_year,week_number,week_date
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,13,2018-03-26
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,14,2018-04-02
2018,
Query:
-- 4. Get sales data for May, June, and July of 2018
SELECT "week_date", "month_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6, 7)
ORDER BY "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
week_date,month_number,sales
2018-05-07,5,29959
2018-05-07,5,373365
2018-05-07,5,30937
2018-05-07,5,66752
2018-05-07,5,2370701
2018-05-07,5,17391976
2018-05-07,5,3359062
2018-05-07,5,75646
2018-05-07,5,36631
2018-05-07,5,3011
2018-05-07,5,3317
2018-05-07,5,25718
2018-05-07,5,43479
2018-05-07,5,17443
2018-05-07,5,930840
2018-05-07,5,1085943
2018-05-07,5,16295
2018-05-07,5,179110
2018-05-07,5,7532908
2018-05-07,5,174966
2018-05-07,5,1246
2018-05-07,5,13855830
2018-05-07,5,1985560
2018-05-07,5,70184
2018-05-07,5,19340602
2018-05-07,5,143888
2018-05-07,5,477
2018-05-07,5,1089
2018-05-07,5,8434
2018-05-07,5,195036
2018-05-07,5,25516277
2018-05-07,5,973973
2018-05-07,5,183364
2018-05-07,5,3902159
2018-05-07,5,516113
2018-05-07,5,1378971
2018-05-07,5,10395
2018-05-07,5,653915
2018-05-07,5,62183194
2018-05-07,5,1364997
2018-05-07,5,8734
2018-05-07,5,11668138
2018-05-07,5,15249286
2018-05-07,5,14657
2018-05-07,5,34761
2018-05-07,5,5419778
2018-05-07,5,3219187
2018-05-07,5,1624628
2018-05-07,5,3196932
2018-05-07,5,34974
2018-05-07,5,171730
2018-05-07,5,7935379
2018-05-07,5,1742168
2018-05-07,5,3707160
2018-05-07,5,318715
2018-05-07,5,194592
2018-05-07,5,14849
2018-05-07,5,3521055
2018-05-07,5,273159
2018-05-07,5,2193324
2018-05-07,5,13949
2018-05-07,5,16673
2018-05-07,5,19483
2018-05-07,5,1632087
2018-05-07,5,203958
2018-05-07,5,4851788
2018-05-07,5,3995
2018-05-07,5,29480
2018-05-07,5,348136
2018-05-07,5,81168
2018-05-07,5,23213
2018-05-07,5,10003
2018-05-07,5,425
2018-05-07,5,1651
2018-05-07,5,1228911
2018-05-07,5,3916
2018-05-07,5,96227
2018-05-07,5,20530
2018-05-07,5,822490
2018-05-07,5,42345
2018-05-07,5,3590
2018-05-07,5,200816
2018-05-07,5,1126810
2018-05-07,5,459122
2018-05-07,5,1108239
2018-05-07,5,6572
2018-05-07,5,499443
2018-05-07,5,39951
2018-05-07,5,3012494
2018-05-07,5,1071436
2018-05-07,5,48038
2018-05-07,5,1396563
2018-05-07,5,2599
2018-05-07,5,179871
2018-05-07,5,475
2018-05-07,5,4388564
2018-05-07,5,3630401
2018-05-07,5,5046895
2018-05-07,5,118454
2018-05-07,5,68964
2018-05-07,5,18105
2018-05-07,5,4019483
2018-05-07,5,45304
2018-05-07,5,2175141
2018-05-07,5,2720566
2018-05-07,5,56375
2018-05-07,5,564827
2018-05-07,5,77773
2018-05-07,5,989622
2018-05-07,5,1651
2018-05-07,5,16629
2018-05-07,5,2822
2018-05-07,5,2585578
2018-05-07,5,26274
2018-05-07,5,5386
2018-05-07,5,16282
2018-05-07,5,1620
2018-05-07,5,316822
2018-05-07,5,9431
2018-05-07,5,2306608
2018-05-07,5,47667
2018-05-07,5,854795
2018-05-07,5,13605415
2018-05-07,5,16335
2018-05-07,5,22134
2018-05-07,5,68351
2018-05-07,5,6543649
2018-05-07,5,2951
2018-05-07,5,5837748
2018-05-07,5,1342
2018-05-07,5,9590
2018-05-07,5,2362346
2018-05-07,5,16407663
2018-05-07,5,8592
2018-05-07,5,40720
2018-05-07,5,69443
2018-05-07,5,114185
2018-05-07,5,19546
2018-05-07,5,36417
2018-05-07,5,536
2018-05-07,5,42856
2018-05-07,5,11032
2018-05-07,5,7053
2018-05-07,5,8836790
2018-05-07,5,108407
2018-05-07,5,1631576
2018-05-07,5,5750
2018-05-07,5,877712
2018-05-07,5,671911
2018-05-07,5,7533
2018-05-07,5,6482
2018-05-07,5,132892
2018-05-07,5,20359
2018-05-07,5,994219
2018-05-07,5,8077
2018-05-07,5,3710548
2018-05-07,5,290224
2018-05-07,5,518936
2018-05-07,5,118462
2018-05-07,5,4477119
2018-05-07,5,2432
2018-05-07,5,200485
2018-05-07,5,136044
2018-05-07,5,25779
2018-05-07,5,265890
2018-05-07,5,4661682
2018-05-07,5,2578025
2018-05-07,5,46408
2018-05-07,5,3631855
2018-05-07,5,47337829
2018-05-07,5,159836
2018-05-07,5,620059
2018-05-07,5,21566
2018-05-07,5,631235
2018-05-07,5,32477
2018-05-07,5,2108
2018-05-07,5,7712
2018-05-07,5,4579656
2018-05-07,5,337741
2018-05-07,5,5088126
2018-05-07,5,511318
2018-05-07,5,1782764
2018-05-07,5,1330291
2018-05-07,5,65931
2018-05-07,5,2573019
2018-05-07,5,2323346
2018-05-07,5,800523
2018-05-07,5,2168166
2018-05-07,5,16749175
2018-05-07,5,40846
2018-05-07,5,206943
2018-05-07,5,24580
2018-05-07,5,403294
2018-05-07,5,44578
2018-05-07,5,9439234
2018-05-07,5,619989
2018-05-07,5,8133
2018-05-07,5,30781
2018-05-07,5,334679
2018-05-07,5,976284
2018-05-07,5,8297
2018-05-07,5,3615797
2018-05-07,5,414658
2018-05-07,5,11965895
2018-05-07,5,539794
2018-05-07,5,34202
2018-05-07,5,299698
2018-05-07,5,30200
2018-05-07,5,45446966
2018-05-07,5,64941
2018-05-07,5,2503403
2018-05-07,5,819151
2018-05-07,5,2192280
2018-05-07,5,398166
2018-05-07,5,4972
2018-05-07,5,828228
2018-05-07,5,61044
2018-05-07,5,18476
2018-05-07,5,568272
2018-05-07,5,6036915
2018-05-07,5,313166
2018-05-07,5,1050332
2018-05-07,5,695066
2018-05-07,5,22598
2018-05-07,5,75075
2018-05-07,5,24336
2018-05-07,5,14185
2018-05-07,5,1168
2018-05-07,5,8925
2018-05-07,5,5449
2018-05-07,5,384541
2018-05-07,5,45538
2018-05-07,5,30688
2018-05-07,5,30722
2018-05-07,5,1701039
2018-05-07,5,56525
2018-05-07,5,20971
2018-05-14,5,1344032
2018-05-14,5,43170
2018-05-14,5,6457425
2018-05-14,5,8822
2018-05-14,5,13393
2018-05-14,5,1813
2018-05-14,5,1001594
2018-05-14,5,7647
2018-05-14,5,2475442
2018-05-14,5,5459
2018-05-14,5,528168
2018-05-14,5,25961
2018-05-14,5,3506788
2018-05-14,5,535
2018-05-14,5,45933
2018-05-1
Query:
-- 5. View the week numbers around mid-June for 2018
SELECT "week_number", "week_date", "month_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" = 6
ORDER BY "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
week_number,week_date,month_number
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
23,2018-06-04,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,2018-06-11,6
24,20
Query:
-- 6. Check the format of week dates in the data
SELECT DISTINCT "week_date", "week_date_formatted"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
ORDER BY "week_date"
LIMIT 1000;
Answer:
week_date,week_date_formatted
2018-03-26,2018-3-26
2018-04-02,2018-4-2
2018-04-09,2018-4-9
2018-04-16,2018-4-16
2018-04-23,2018-4-23
2018-04-30,2018-4-30
2018-05-07,2018-5-7
2018-05-14,2018-5-14
2018-05-21,2018-5-21
2018-05-28,2018-5-28
2018-06-04,2018-6-4
2018-06-11,2018-6-11
2018-06-18,2018-6-18
2018-06-25,2018-6-25
2018-07-02,2018-7-2
2018-07-09,2018-7-9
2018-07-16,2018-7-16
2018-07-23,2018-7-23
2018-07-30,2018-7-30
2018-08-06,2018-8-6
2018-08-13,2018-8-13
2018-08-20,2018-8-20
2018-08-27,2018-8-27
2018-09-03,2018-9-3
2019-03-25,2019-3-25
2019-04-01,2019-4-1
2019-04-08,2019-4-8
2019-04-15,2019-4-15
2019-04-22,2019-4-22
2019-04-29,2019-4-29
2019-05-06,2019-5-6
2019-05-13,2019-5-13
2019-05-20,2019-5-20
2019-05-27,2019-5-27
2019-06-03,2019-6-3
2019-06-10,2019-6-10
2019-06-17,2019-6-17
2019-06-24,2019-6-24
2019-07-01,2019-7-1
2019-07-08,2019-7-8
2019-07-15,2019-7-15
2019-07-22,2019-7-22
2019-07-29,2019-7-29
2019-08-05,2019-8-5
2019-08-12,2019-8-12
2019-08-19,2019-8-19
2019-08-26,2019-8-26
2019-09-02,2019-9-2
2020-03-23,2020-3-23
2020-03-30,2020-3-30
2020-04-06,2020-4-6
2020-04-13,2020-4-13
2020-04-20,2020-4-20
2020-04-27,2020-4-27
2020-05-04,2020-5-4
2020-05-11,2020-5-11
2020-05-18,2020-5-18
2020-05-25,2020-5-25
2020-06-01,2020-6-1
2020-06-08,2020-6-8
2020-06-15,2020-6-15
2020-06-22,2020-6-22
2020-06-29,2020-6-29
2020-07-06,2020-7-6
2020-07-13,2020-7-13
2020-07-20,2020-7-20
2020-07-27,2020-7-27
2020-08-03,2020-8-3
2020-08-10,2020-8-10
2020-08-17,2020-8-17
2020-08-24,2020-8-24
2020-08-31,2020-8-31
Query:
-- 7. Get total sales per week for 2018
SELECT "week_number", SUM("sales") AS "total_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
Answer:
week_number,total_sales
13,536755452
14,541167115
15,529574544
16,526355503
17,536075195
18,539632290
19,534072854
20,527788555
21,522377362
22,544417653
23,525086015
24,533259779
25,524368733
26,525737676
27,532366710
28,546769795
29,541086855
30,547653578
31,539321534
32,549636536
33,543535235
34,544330787
35,553039709
36,552971362
Query:
-- 8. Find the minimum and maximum week numbers for each month in 2018
SELECT "month_number", MIN("week_number") AS "min_week", MAX("week_number") AS "max_week"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018
GROUP BY "month_number"
ORDER BY "month_number"
LIMIT 1000;
Answer:
month_number,min_week,max_week
3,13,13
4,14,18
5,19,22
6,23,26
7,27,31
8,32,35
9,36,36
Query:
-- 9. List sales data around mid-June for all three years
SELECT "calendar_year", "week_number", "week_date", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" IN (2018, 2019, 2020) AND "month_number" = 6
ORDER BY "calendar_year", "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
calendar_year,week_number,week_date,sales
2018,23,2018-06-04,267182
2018,23,2018-06-04,111185
2018,23,2018-06-04,17430358
2018,23,2018-06-04,589621
2018,23,2018-06-04,20404
2018,23,2018-06-04,338624
2018,23,2018-06-04,165882
2018,23,2018-06-04,2791326
2018,23,2018-06-04,31594
2018,23,2018-06-04,457234
2018,23,2018-06-04,2254951
2018,23,2018-06-04,1631288
2018,23,2018-06-04,12739
2018,23,2018-06-04,50960
2018,23,2018-06-04,9916
2018,23,2018-06-04,1665650
2018,23,2018-06-04,1042963
2018,23,2018-06-04,12067
2018,23,2018-06-04,7843
2018,23,2018-06-04,23315
2018,23,2018-06-04,17652
2018,23,2018-06-04,18949
2018,23,2018-06-04,4528994
2018,23,2018-06-04,4631754
2018,23,2018-06-04,109452
2018,23,2018-06-04,19649
2018,23,2018-06-04,4725136
2018,23,2018-06-04,237733
2018,23,2018-06-04,10713
2018,23,2018-06-04,1336703
2018,23,2018-06-04,191161
2018,23,2018-06-04,107912
2018,23,2018-06-04,173530
2018,23,2018-06-04,35954
2018,23,2018-06-04,1152276
2018,23,2018-06-04,190508
2018,23,2018-06-04,5941108
2018,23,2018-06-04,574447
2018,23,2018-06-04,494802
2018,23,2018-06-04,44894
2018,23,2018-06-04,56417
2018,23,2018-06-04,393291
2018,23,2018-06-04,8557
2018,23,2018-06-04,24085
2018,23,2018-06-04,23237
2018,23,2018-06-04,13444926
2018,23,2018-06-04,1037209
2018,23,2018-06-04,72732
2018,23,2018-06-04,64934
2018,23,2018-06-04,721566
2018,23,2018-06-04,215433
2018,23,2018-06-04,9053
2018,23,2018-06-04,27111
2018,23,2018-06-04,11888324
2018,23,2018-06-04,49018
2018,23,2018-06-04,63074384
2018,23,2018-06-04,70614
2018,23,2018-06-04,812605
2018,23,2018-06-04,45603939
2018,23,2018-06-04,3658363
2018,23,2018-06-04,46330
2018,23,2018-06-04,2609117
2018,23,2018-06-04,965704
2018,23,2018-06-04,125463
2018,23,2018-06-04,781760
2018,23,2018-06-04,816880
2018,23,2018-06-04,2288325
2018,23,2018-06-04,35244
2018,23,2018-06-04,2438662
2018,23,2018-06-04,23084
2018,23,2018-06-04,11115
2018,23,2018-06-04,3809465
2018,23,2018-06-04,3860699
2018,23,2018-06-04,1061363
2018,23,2018-06-04,52156
2018,23,2018-06-04,324667
2018,23,2018-06-04,18960302
2018,23,2018-06-04,292374
2018,23,2018-06-04,32955
2018,23,2018-06-04,25270
2018,23,2018-06-04,16291305
2018,23,2018-06-04,1417
2018,23,2018-06-04,68874
2018,23,2018-06-04,36945
2018,23,2018-06-04,402367
2018,23,2018-06-04,13351676
2018,23,2018-06-04,869539
2018,23,2018-06-04,1125
2018,23,2018-06-04,208182
2018,23,2018-06-04,5942
2018,23,2018-06-04,1611020
2018,23,2018-06-04,608
2018,23,2018-06-04,3156
2018,23,2018-06-04,4217
2018,23,2018-06-04,1637433
2018,23,2018-06-04,856954
2018,23,2018-06-04,4119
2018,23,2018-06-04,3548973
2018,23,2018-06-04,69228
2018,23,2018-06-04,663412
2018,23,2018-06-04,364634
2018,23,2018-06-04,73568
2018,23,2018-06-04,930704
2018,23,2018-06-04,24814
2018,23,2018-06-04,37373
2018,23,2018-06-04,1841
2018,23,2018-06-04,897
2018,23,2018-06-04,58389
2018,23,2018-06-04,43208
2018,23,2018-06-04,128650
2018,23,2018-06-04,47601107
2018,23,2018-06-04,800087
2018,23,2018-06-04,12709
2018,23,2018-06-04,4584414
2018,23,2018-06-04,7913
2018,23,2018-06-04,177194
2018,23,2018-06-04,266610
2018,23,2018-06-04,16316
2018,23,2018-06-04,5344
2018,23,2018-06-04,866909
2018,23,2018-06-04,281226
2018,23,2018-06-04,1307
2018,23,2018-06-04,9098
2018,23,2018-06-04,11893
2018,23,2018-06-04,29609
2018,23,2018-06-04,18084
2018,23,2018-06-04,2486850
2018,23,2018-06-04,2048224
2018,23,2018-06-04,8738062
2018,23,2018-06-04,42021
2018,23,2018-06-04,304043
2018,23,2018-06-04,435243
2018,23,2018-06-04,1807
2018,23,2018-06-04,1430325
2018,23,2018-06-04,488696
2018,23,2018-06-04,8876
2018,23,2018-06-04,15921694
2018,23,2018-06-04,15095995
2018,23,2018-06-04,383314
2018,23,2018-06-04,45486
2018,23,2018-06-04,964865
2018,23,2018-06-04,3093577
2018,23,2018-06-04,607760
2018,23,2018-06-04,3380788
2018,23,2018-06-04,1057671
2018,23,2018-06-04,9197
2018,23,2018-06-04,660944
2018,23,2018-06-04,3090
2018,23,2018-06-04,19407
2018,23,2018-06-04,182710
2018,23,2018-06-04,32389
2018,23,2018-06-04,701349
2018,23,2018-06-04,464256
2018,23,2018-06-04,479062
2018,23,2018-06-04,20111
2018,23,2018-06-04,20452
2018,23,2018-06-04,3710
2018,23,2018-06-04,550332
2018,23,2018-06-04,1816121
2018,23,2018-06-04,289
2018,23,2018-06-04,2543396
2018,23,2018-06-04,3394128
2018,23,2018-06-04,267449
2018,23,2018-06-04,25295650
2018,23,2018-06-04,394845
2018,23,2018-06-04,2972
2018,23,2018-06-04,30436
2018,23,2018-06-04,27450
2018,23,2018-06-04,7321
2018,23,2018-06-04,44199
2018,23,2018-06-04,2986
2018,23,2018-06-04,186052
2018,23,2018-06-04,30454
2018,23,2018-06-04,55807
2018,23,2018-06-04,20366
2018,23,2018-06-04,1457
2018,23,2018-06-04,9022027
2018,23,2018-06-04,266010
2018,23,2018-06-04,19187
2018,23,2018-06-04,912720
2018,23,2018-06-04,11305312
2018,23,2018-06-04,82832
2018,23,2018-06-04,1883
2018,23,2018-06-04,46317
2018,23,2018-06-04,27541
2018,23,2018-06-04,20124
2018,23,2018-06-04,143841
2018,23,2018-06-04,5812133
2018,23,2018-06-04,102197
2018,23,2018-06-04,3278
2018,23,2018-06-04,40963
2018,23,2018-06-04,2129350
2018,23,2018-06-04,1078
Query:
-- 10. Retrieve total sales for the weeks before and after June 15, 2018
SELECT "week_number", "week_date", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 21 AND 26
ORDER BY "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
week_number,week_date,sales
21,2018-05-21,188138
21,2018-05-21,927931
21,2018-05-21,27477
21,2018-05-21,3645951
21,2018-05-21,2159936
21,2018-05-21,8524
21,2018-05-21,8713
21,2018-05-21,3210
21,2018-05-21,1133844
21,2018-05-21,9989
21,2018-05-21,4658478
21,2018-05-21,3832060
21,2018-05-21,2490585
21,2018-05-21,161280
21,2018-05-21,3147089
21,2018-05-21,30578
21,2018-05-21,497388
21,2018-05-21,611755
21,2018-05-21,12337
21,2018-05-21,971075
21,2018-05-21,19049028
21,2018-05-21,1146
21,2018-05-21,3580630
21,2018-05-21,23435
21,2018-05-21,56913
21,2018-05-21,8842
21,2018-05-21,46473593
21,2018-05-21,94247
21,2018-05-21,20596
21,2018-05-21,924826
21,2018-05-21,62492
21,2018-05-21,3241
21,2018-05-21,1851
21,2018-05-21,14001
21,2018-05-21,22258
21,2018-05-21,939230
21,2018-05-21,56322
21,2018-05-21,13395441
21,2018-05-21,1398357
21,2018-05-21,399064
21,2018-05-21,16578
21,2018-05-21,3867192
21,2018-05-21,37171
21,2018-05-21,108399
21,2018-05-21,4987285
21,2018-05-21,2048
21,2018-05-21,44818650
21,2018-05-21,25019
21,2018-05-21,305004
21,2018-05-21,41562
21,2018-05-21,539286
21,2018-05-21,61201495
21,2018-05-21,302861
21,2018-05-21,25427
21,2018-05-21,31573
21,2018-05-21,1225
21,2018-05-21,2366617
21,2018-05-21,141719
21,2018-05-21,40530
21,2018-05-21,266997
21,2018-05-21,9100851
21,2018-05-21,1637482
21,2018-05-21,18770
21,2018-05-21,128
21,2018-05-21,93234
21,2018-05-21,927659
21,2018-05-21,4289215
21,2018-05-21,2149075
21,2018-05-21,28470
21,2018-05-21,22992
21,2018-05-21,3440414
21,2018-05-21,211545
21,2018-05-21,2419
21,2018-05-21,196339
21,2018-05-21,5211031
21,2018-05-21,14961019
21,2018-05-21,19220
21,2018-05-21,27476
21,2018-05-21,2652286
21,2018-05-21,7668
21,2018-05-21,7490
21,2018-05-21,8194
21,2018-05-21,30662
21,2018-05-21,2053556
21,2018-05-21,11637390
21,2018-05-21,1803724
21,2018-05-21,37955
21,2018-05-21,30725
21,2018-05-21,3284958
21,2018-05-21,390234
21,2018-05-21,68159
21,2018-05-21,34346
21,2018-05-21,615671
21,2018-05-21,67916
21,2018-05-21,448723
21,2018-05-21,2199
21,2018-05-21,10170
21,2018-05-21,380245
21,2018-05-21,40773
21,2018-05-21,2050
21,2018-05-21,54304
21,2018-05-21,1953405
21,2018-05-21,10714
21,2018-05-21,4415258
21,2018-05-21,8815
21,2018-05-21,9952
21,2018-05-21,64370
21,2018-05-21,1042819
21,2018-05-21,735845
21,2018-05-21,1440638
21,2018-05-21,2303519
21,2018-05-21,218928
21,2018-05-21,933
21,2018-05-21,41139
21,2018-05-21,12438
21,2018-05-21,1053586
21,2018-05-21,256678
21,2018-05-21,178776
21,2018-05-21,19333
21,2018-05-21,311368
21,2018-05-21,4631
21,2018-05-21,71897
21,2018-05-21,1082258
21,2018-05-21,15947
21,2018-05-21,894408
21,2018-05-21,274179
21,2018-05-21,72944
21,2018-05-21,267586
21,2018-05-21,2423606
21,2018-05-21,66910
21,2018-05-21,15823156
21,2018-05-21,2309
21,2018-05-21,3637
21,2018-05-21,2144631
21,2018-05-21,3130
21,2018-05-21,760233
21,2018-05-21,533422
21,2018-05-21,285117
21,2018-05-21,5072090
21,2018-05-21,451
21,2018-05-21,194622
21,2018-05-21,30899
21,2018-05-21,42666
21,2018-05-21,3980
21,2018-05-21,72545
21,2018-05-21,60857
21,2018-05-21,1235
21,2018-05-21,20920
21,2018-05-21,20306
21,2018-05-21,16486757
21,2018-05-21,630759
21,2018-05-21,796546
21,2018-05-21,820002
21,2018-05-21,17267796
21,2018-05-21,462670
21,2018-05-21,39546
21,2018-05-21,110858
21,2018-05-21,1628991
21,2018-05-21,5391
21,2018-05-21,134079
21,2018-05-21,3678765
21,2018-05-21,7948
21,2018-05-21,169166
21,2018-05-21,15907
21,2018-05-21,12902
21,2018-05-21,67817
21,2018-05-21,856064
21,2018-05-21,3588849
21,2018-05-21,8835
21,2018-05-21,1347670
21,2018-05-21,14807
21,2018-05-21,432398
21,2018-05-21,1362599
21,2018-05-21,2491437
21,2018-05-21,13251767
21,2018-05-21,24811
21,2018-05-21,1220141
21,2018-05-21,6577
21,2018-05-21,8014
21,2018-05-21,372575
21,2018-05-21,160714
21,2018-05-21,24854
21,2018-05-21,7781097
21,2018-05-21,68428
21,2018-05-21,133107
21,2018-05-21,305373
21,2018-05-21,5758040
21,2018-05-21,1586
21,2018-05-21,815811
21,2018-05-21,208
21,2018-05-21,660500
21,2018-05-21,2919
21,2018-05-21,523208
21,2018-05-21,1583716
21,2018-05-21,6351481
21,2018-05-21,17997
21,2018-05-21,37301
21,2018-05-21,22503
21,2018-05-21,4624567
21,2018-05-21,2264303
21,2018-05-21,16556
21,2018-05-21,5932781
21,2018-05-21,2891882
21,2018-05-21,7410092
21,2018-05-21,21068
21,2018-05-21,3016196
21,2018-05-21,105674
21,2018-05-21,372903
21,2018-05-21,1631475
21,2018-05-21,211345
21,2018-05-21,6606
21,2018-05-21,22031
21,2018-05-21,989314
21,2018-05-21,38115
21,2018-05-21,11454192
21,2018-05-21,575772
21,2018-05-21,31371
21,2018-05-21,50422
21,2018-05-21,3630092
21,2018-05-21,327279
21,2018-05-21,3394
21,2018-05-21,25121884
21,2018-05-21,31963
21,2018-05-21,469536
21,2018-05-21,396
21,2018-05-21,43782
21,2018-05-21,32938
21,2018-05-21,5261
21,2018-05-21,8566788
21,2018-05-21,2172498
21,2018-05-21,179574
21,2018-05-21,66796
21,2018-05-21,2430418
21,2018-05-21,4549120
21,2018-05-21,4527
21,2018-05-21,178002
21,2018-05-21,810850
22,2018-05-28,577899
22,2018-05-28,2198177
22,2018-05-28,11977
22,20
Query:
-- 11. View distinct week numbers to understand the weekly division
SELECT DISTINCT "week_number"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
ORDER BY "week_number"
LIMIT 1000;
Answer:
week_number
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
Query:
-- 12. Get average sales per week for each year
SELECT "calendar_year", AVG("sales") AS "average_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
GROUP BY "calendar_year"
ORDER BY "calendar_year"
LIMIT 1000;
Answer:
calendar_year,average_sales
2018,2263492.598631
2019,2408204.712684
2020,2468958.308527
Query:
-- 13. Identify the total number of transactions per week in June for 2019
SELECT "week_number", SUM("transactions") AS "total_transactions"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2019 AND "month_number" = 6
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
Answer:
week_number,total_transactions
23,14969739
24,15184213
25,15188595
26,15053941
Query:
-- 14. Examine the sales trend for weeks around mid-June in 2020
SELECT "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2020 AND "week_number" BETWEEN 20 AND 27
ORDER BY "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
week_number,sales
20,11213200
20,136798
20,864005
20,1295
20,924372
20,6072
20,6575969
20,7493
20,3205479
20,2774068
20,6157
20,32888
20,14970812
20,1759
20,17796
20,103772
20,19302
20,1319
20,35326
20,154724
20,18431
20,876562
20,392604
20,1748274
20,937494
20,5720394
20,975600
20,15095
20,1424
20,2088699
20,3322130
20,619588
20,22399960
20,10921751
20,1226747
20,185507
20,40708
20,4517920
20,26248
20,29420
20,5889856
20,2411
20,14447370
20,33873
20,996430
20,2176608
20,30227
20,846923
20,50991
20,787
20,66963
20,517290
20,1776394
20,16567397
20,213719
20,447537
20,2550318
20,18475442
20,1007521
20,21056
20,267121
20,31937
20,75002
20,3560216
20,23259
20,153959
20,5870
20,6140
20,11167
20,941004
20,49780
20,4788109
20,42079
20,13181
20,2231451
20,664
20,7523707
20,2427780
20,13429
20,126410
20,587325
20,1306163
20,821647
20,425531
20,2760471
20,1135
20,81347
20,579716
20,1086
20,25988
20,260783
20,896799
20,882536
20,225370
20,9129781
20,2301552
20,67453
20,49238621
20,1457353
20,3321731
20,6683
20,1653037
20,1035
20,252835
20,386278
20,44407097
20,3290057
20,888358
20,16661822
20,19319
20,6681
20,6724340
20,13243
20,1379437
20,483739
20,44697
20,16864
20,1299660
20,761524
20,2202493
20,383617
20,992683
20,68221
20,2625
20,125662
20,16436
20,36427
20,42922
20,52311
20,7278
20,1491
20,24343
20,48294
20,51564
20,129128
20,140452
20,58385
20,10941
20,362625
20,11246344
20,452714
20,11109
20,90637
20,258471
20,25288
20,119976
20,5829757
20,2028916
20,30149337
20,34235
20,400950
20,38268
20,2502473
20,6772
20,89553
20,5231682
20,22505
20,436951
20,129919
20,832700
20,2767160
20,5033895
20,2098706
20,78994
20,940
20,59460
20,762670
20,7402426
20,2194071
20,42841
20,271535
20,1666719
20,296032
20,45478
20,26106
20,121053
20,23475
20,32985
20,51321
20,3491442
20,44326
20,90846
20,2390461
20,343658
20,4405823
20,2170354
20,27961
20,7199
20,2197028
20,726795
20,429645
20,59817
20,3355882
20,30802
20,437290
20,15861
20,51162
20,639292
20,4927487
20,593362
20,19007
20,65279
20,64658287
20,128595
20,5298559
20,9825
20,1382847
20,15047
20,256439
20,11817
20,33819
20,868
20,534
20,46505
20,8206
20,50867
20,1596286
20,17587
20,364828
20,52179
20,778617
20,20077866
20,1770055
20,512523
20,2157702
20,17003395
20,387067
20,3995
20,736120
20,1138053
20,6023151
20,497187
20,10426
20,344707
20,8691039
20,3235
20,13755
20,74679
21,1685671
21,5342
21,11043793
21,262445
21,34915
21,793
21,27642
21,634015
21,364412
21,66634
21,1280896
21,141441
21,19672
21,361882
21,96732
21,3181673
21,2006122
21,9204042
21,53175
21,29915
21,6723137
21,429979
21,119937
21,33358
21,64211904
21,1602793
21,1765
21,4618567
21,7445
21,789634
21,1041064
21,30026087
21,2272218
21,2181810
21,109364
21,2342
21,522563
21,27544
21,3566897
21,2284891
21,2599
21,4719
21,854624
21,258708
21,11017216
21,13996
21,11356688
21,214428
21,7584111
21,12755
21,152602
21,66849
21,993855
21,1011014
21,12427
21,293977
21,76494
21,617637
21,845405
21,155355
21,3887
21,5918845
21,8066
21,2146858
21,15073
21,600119
21,359051
21,39994
21,218
21,1986987
21,12524
21,20031
21,49090
21,47270
21,23920
21,939066
21,3334217
21,465648
21,2100027
21,465393
21,461278
21,4559208
21,954785
21,4956551
21,64714
21,87706
21,535805
21,383797
21,123920
21,1306
21,5161179
21,480498
21,270980
21,5180
21,1429280
21,3352
21,11704
21,15037298
21,62387
21,907257
21,3900
21,119530
21,2588654
21,2502063
21,40431
21,897722
21,1834416
21,52738
21,55710
21,14592
21,124572
21,1172060
21,802055
21,4801310
21,858130
21,53463
21,8614840
21,1447820
21,14872
21,46560
21,3474692
21,3036
21,395124
21,553428
21,42638
21,1268
21,73718
21,34920
21,9188
21,49587
21,1303250
21,31967
21,2667
21,130015
21,254131
21,3358384
21,451976
21,4193
21,66955
21,25609
21,3247033
21,1448578
21,991
21,62635
21,27513
21,2143224
21,98181
21,6485
21,34101
21,2851231
21,127924
21,2390319
21,282150
21,19294
21,266727
21,42583
21,44550
21,21419
21,2137229
21,5376453
21,2666444
21,88372
21,33079
21,16232292
21,11298
21,5577831
21,446036
21,4052
21,20850
21,1330104
21,190616
21,1704710
21,32220
21,2397635
21,2763891
21,446379
21,4394
21,7531190
21,7421
21,77180
21,6165599
21,44493573
21,22785
21,3624839
21,26133
21,52205
21,47653
21,54615
21,407517
21,18360291
21,935950
21,835929
21,44786
21,747640
21,22377941
21,758167
21,1258891
21,16097
21,10807
21,11595
21,1919
21,2210786
21,33872
21,30045
21,5879139
21,915413
21,1109858
21,5354
21,30940
21,39618
21,6931
21,5062985
21,20396901
21,6517112
21,19570
21,39477
21,405243
21,863512
21,269246
21,14498529
21,1758894
21,16652063
21,13502
21,16562
21,101218
21,243183
21,1952
21,13412
21,49309503
21,408215
21,518467
21,616473
21,811341
21,16718027
21,27920
21,8518
21,36469
21,1671
22,402203
22,59847
22,1706118
22,866297
22,50955
22,10832358
22,197038
22,78053
22,127974
22,31126
22,30990
22,38597
22,638483
22,5827
22,35632
22,30110314
22,5195267
22,128601
22,22382
22,9356
22,2001324
22,1669
22,29908
22,3324021
22,73470
22,2055441
22,14815771
22,45385
22,878454
22,2263831
22,11531995
22,258
22,2904
Query:
-- 15. Find the date format used in "week_date_formatted"
SELECT DISTINCT "week_date_formatted"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Answer:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26
Query:
-- 16. Retrieve sales data for specific regions in June 2018
SELECT "region", "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "month_number" = 6
ORDER BY "region", "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
region,week_number,sales
AFRICA,23,30436
AFRICA,23,1611020
AFRICA,23,2288325
AFRICA,23,4725136
AFRICA,23,3809465
AFRICA,23,23367
AFRICA,23,31994
AFRICA,23,42021
AFRICA,23,314628
AFRICA,23,23237
AFRICA,23,267182
AFRICA,23,4631754
AFRICA,23,35244
AFRICA,23,479062
AFRICA,23,11888324
AFRICA,23,18960302
AFRICA,23,3658363
AFRICA,23,45603939
AFRICA,23,2329823
AFRICA,23,32389
AFRICA,23,869539
AFRICA,23,2254951
AFRICA,23,292374
AFRICA,23,12709
AFRICA,23,6012
AFRICA,23,1430325
AFRICA,23,13351676
AFRICA,23,304043
AFRICA,23,574447
AFRICA,23,912720
AFRICA,23,31594
AFRICA,23,2184400
AFRICA,23,173530
AFRICA,23,5941108
AFRICA,24,4747642
AFRICA,24,11700
AFRICA,24,264516
AFRICA,24,12219442
AFRICA,24,147672
AFRICA,24,34876
AFRICA,24,505429
AFRICA,24,675764
AFRICA,24,13407541
AFRICA,24,35506
AFRICA,24,233158
AFRICA,24,4783369
AFRICA,24,2295726
AFRICA,24,295585
AFRICA,24,2364447
AFRICA,24,27988
AFRICA,24,1474258
AFRICA,24,19120
AFRICA,24,28537
AFRICA,24,1657858
AFRICA,24,1025535
AFRICA,24,45457692
AFRICA,24,863137
AFRICA,24,20648
AFRICA,24,3773700
AFRICA,24,2308082
AFRICA,24,19258180
AFRICA,24,29761
AFRICA,24,4283
AFRICA,24,6065268
AFRICA,24,3935578
AFRICA,24,36422
AFRICA,24,292720
AFRICA,24,2270402
AFRICA,25,3881100
AFRICA,25,5845
AFRICA,25,5946149
AFRICA,25,2265293
AFRICA,25,16771
AFRICA,25,12443714
AFRICA,25,38763
AFRICA,25,302549
AFRICA,25,1612884
AFRICA,25,1506931
AFRICA,25,4916648
AFRICA,25,31776
AFRICA,25,166890
AFRICA,25,12695412
AFRICA,25,315628
AFRICA,25,425500
AFRICA,25,41134
AFRICA,25,42166
AFRICA,25,18867353
AFRICA,25,2266992
AFRICA,25,259145
AFRICA,25,23047
AFRICA,25,1107562
AFRICA,25,21662
AFRICA,25,34585
AFRICA,25,29865
AFRICA,25,2357121
AFRICA,25,4679278
AFRICA,25,3809105
AFRICA,25,44907107
AFRICA,25,527226
AFRICA,25,302317
AFRICA,25,847409
AFRICA,25,2219349
AFRICA,26,163954
AFRICA,26,12842306
AFRICA,26,35723
AFRICA,26,18254
AFRICA,26,33563
AFRICA,26,257011
AFRICA,26,1626236
AFRICA,26,5977
AFRICA,26,31208
AFRICA,26,4784320
AFRICA,26,2234500
AFRICA,26,291230
AFRICA,26,2367537
AFRICA,26,31719
AFRICA,26,1498072
AFRICA,26,886488
AFRICA,26,5985851
AFRICA,26,24949
AFRICA,26,305064
AFRICA,26,3903411
AFRICA,26,1207888
AFRICA,26,12284532
AFRICA,26,3739885
AFRICA,26,4914683
AFRICA,26,46154511
AFRICA,26,23955
AFRICA,26,2303157
AFRICA,26,527867
AFRICA,26,2306973
AFRICA,26,302838
AFRICA,26,18917331
AFRICA,26,427332
AFRICA,26,35581
AFRICA,26,41931
ASIA,23,364634
ASIA,23,4950802
ASIA,23,20111
ASIA,23,109452
ASIA,23,2129350
ASIA,23,24085
ASIA,23,27541
ASIA,23,11810
ASIA,23,8738062
ASIA,23,47601107
ASIA,23,9022027
ASIA,23,16291305
ASIA,23,2609117
ASIA,23,701349
ASIA,23,3675214
ASIA,23,20124
ASIA,23,182710
ASIA,23,4119
ASIA,23,1971041
ASIA,23,281226
ASIA,23,27136
ASIA,23,3860699
ASIA,23,23315
ASIA,23,19407
ASIA,23,2486850
ASIA,23,191161
ASIA,23,1924468
ASIA,23,3394128
ASIA,23,29609
ASIA,23,3691016
ASIA,23,965704
ASIA,23,182468
ASIA,23,1341643
ASIA,23,195120
ASIA,24,16338668
ASIA,24,2503852
ASIA,24,3451215
ASIA,24,8844241
ASIA,24,190429
ASIA,24,2025226
ASIA,24,3862038
ASIA,24,194891
ASIA,24,949969
ASIA,24,3735576
ASIA,24,24975
ASIA,24,99690
ASIA,24,274177
ASIA,24,46374089
ASIA,24,789593
ASIA,24,1391101
ASIA,24,3688874
ASIA,24,2111113
ASIA,24,20499
ASIA,24,24213
ASIA,24,2601253
ASIA,24,554435
ASIA,24,3855
ASIA,24,191115
ASIA,24,8950657
ASIA,24,4981850
ASIA,24,25171
ASIA,24,1982463
ASIA,24,24241
ASIA,24,176422
ASIA,24,10046
ASIA,24,34453
ASIA,24,22006
ASIA,24,22862
ASIA,25,13484
ASIA,25,306649
ASIA,25,28212
ASIA,25,1955977
ASIA,25,32007
ASIA,25,8886725
ASIA,25,197694
ASIA,25,1394355
ASIA,25,3661933
ASIA,25,3441752
ASIA,25,15812417
ASIA,25,208196
ASIA,25,28471
ASIA,25,26297
ASIA,25,45742866
ASIA,25,214792
ASIA,25,3849727
ASIA,25,2584766
ASIA,25,39276
ASIA,25,30354
ASIA,25,212302
ASIA,25,946829
ASIA,25,112501
ASIA,25,8464278
ASIA,25,32768
ASIA,25,5126
ASIA,25,850432
ASIA,25,23680
ASIA,25,371060
ASIA,25,2051876
ASIA,25,3837630
ASIA,25,2486017
ASIA,25,4870238
ASIA,25,2009778
ASIA,26,3805316
ASIA,26,362831
ASIA,26,12307
ASIA,26,102674
ASIA,26,46194251
ASIA,26,33131
ASIA,26,3363509
ASIA,26,2056991
ASIA,26,1360266
ASIA,26,969548
ASIA,26,1947375
ASIA,26,25017
ASIA,26,184592
ASIA,26,15435775
ASIA,26,181791
ASIA,26,200901
ASIA,26,2430726
ASIA,26,27885
ASIA,26,2008147
ASIA,26,8297875
ASIA,26,3347
ASIA,26,26129
ASIA,26,885815
ASIA,26,2547864
ASIA,26,4781297
ASIA,26,189722
ASIA,26,24295
ASIA,26,26513
ASIA,26,3812138
ASIA,26,3587807
ASIA,26,23649
ASIA,26,293192
ASIA,26,18376
ASIA,26,8738789
CANADA,23,125463
CANADA,23,215433
CANADA,23,7913
CANADA,23,2079950
CANADA,23,550332
CANADA,23,64934
CANADA,23,11305312
CANADA,23,4228448
CANADA,23,267449
CANADA,23,50960
CANADA,23,383314
CANADA,23,9197
CANADA,23,663412
CANADA,23,812605
CANADA,23,7721
CANADA,23,1042963
CANADA,23,72732
CANADA,23,5344
CANADA,23,70614
CANADA,23,9916
CANADA,23,2791326
CANADA,23,930704
CANADA,23,394845
CANADA,23,107912
CANADA,23,607760
CANADA,23,9098
CANADA,23,12048
CANADA,23,2438662
CANADA,23,7843
CANADA,23,1883
CANADA,23,728035
CANADA,23,69615
CANADA,23,2972
CANADA,23,1152276
CAN
Query:
-- 17. Compare sales between different platforms around mid-June 2019
SELECT "platform", "week_number", "sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2019 AND "week_number" BETWEEN 22 AND 25
ORDER BY "platform", "week_number"
LIMIT 1000;
Answer:
Too long, hard cut:
platform,week_number,sales
Retail,22,537728
Retail,22,1261957
Retail,22,14142
Retail,22,77994
Retail,22,1368641
Retail,22,59846
Retail,22,11200
Retail,22,10133729
Retail,22,19743
Retail,22,14519012
Retail,22,407181
Retail,22,424918
Retail,22,44008
Retail,22,4287216
Retail,22,116253
Retail,22,26633
Retail,22,1343869
Retail,22,2945308
Retail,22,611378
Retail,22,1039651
Retail,22,5007272
Retail,22,2198404
Retail,22,5317960
Retail,22,3258172
Retail,22,1898654
Retail,22,48319102
Retail,22,2421273
Retail,22,780923
Retail,22,1343480
Retail,22,371786
Retail,22,2248577
Retail,22,36099
Retail,22,15890634
Retail,22,17500209
Retail,22,4354342
Retail,22,4281816
Retail,22,2664099
Retail,22,124267
Retail,22,1764057
Retail,22,59400
Retail,22,15565079
Retail,22,2179798
Retail,22,68404
Retail,22,164728
Retail,22,452379
Retail,22,1106037
Retail,22,24469
Retail,22,8196299
Retail,22,2362584
Retail,22,21477926
Retail,22,10143740
Retail,22,64581778
Retail,22,2515886
Retail,22,51528
Retail,22,1956247
Retail,22,3473394
Retail,22,666626
Retail,22,4474154
Retail,22,1143743
Retail,22,5466006
Retail,22,28725
Retail,22,916053
Retail,22,50538
Retail,22,12302
Retail,22,72329
Retail,22,858756
Retail,22,1579930
Retail,22,246678
Retail,22,5532284
Retail,22,3357654
Retail,22,3184296
Retail,22,613972
Retail,22,323889
Retail,22,7960
Retail,22,3404361
Retail,22,2098106
Retail,22,257014
Retail,22,2283740
Retail,22,997406
Retail,22,28766028
Retail,22,938078
Retail,22,801367
Retail,22,1323488
Retail,22,550872
Retail,22,2110118
Retail,22,5972766
Retail,22,965719
Retail,22,5371202
Retail,22,404818
Retail,22,166119
Retail,22,909179
Retail,22,18592046
Retail,22,46030335
Retail,22,1940308
Retail,22,2337524
Retail,22,2525867
Retail,22,877272
Retail,22,8588671
Retail,22,641348
Retail,22,4516588
Retail,22,6364450
Retail,22,7291613
Retail,22,3624617
Retail,22,7030990
Retail,22,32421
Retail,22,1736084
Retail,22,1363770
Retail,22,45982
Retail,22,17192641
Retail,22,11341
Retail,22,13619466
Retail,22,1593860
Retail,22,5210213
Retail,22,3210013
Retail,22,820896
Retail,22,747297
Retail,22,11944493
Retail,22,3014466
Retail,22,89293
Retail,23,62541
Retail,23,165747
Retail,23,2095862
Retail,23,1435531
Retail,23,8490293
Retail,23,74055
Retail,23,11428
Retail,23,607616
Retail,23,3620060
Retail,23,50710
Retail,23,6907095
Retail,23,1298192
Retail,23,12164
Retail,23,724761
Retail,23,5462733
Retail,23,598011
Retail,23,926872
Retail,23,3282143
Retail,23,337318
Retail,23,117988
Retail,23,589845
Retail,23,909254
Retail,23,1074904
Retail,23,5966719
Retail,23,816408
Retail,23,2151091
Retail,23,67115
Retail,23,29715
Retail,23,1449178
Retail,23,2731504
Retail,23,20538
Retail,23,4388868
Retail,23,2344702
Retail,23,14309178
Retail,23,1977678
Retail,23,50318
Retail,23,1825446
Retail,23,1067882
Retail,23,986375
Retail,23,4465405
Retail,23,885653
Retail,23,5448670
Retail,23,90274
Retail,23,43851
Retail,23,3080038
Retail,23,1643855
Retail,23,4773298
Retail,23,681786
Retail,23,17435465
Retail,23,838067
Retail,23,3317407
Retail,23,2902083
Retail,23,1239396
Retail,23,7393194
Retail,23,7469
Retail,23,2530412
Retail,23,1315931
Retail,23,401792
Retail,23,75911
Retail,23,13811
Retail,23,40421
Retail,23,3506275
Retail,23,2948816
Retail,23,1986365
Retail,23,793027
Retail,23,15360658
Retail,23,48764427
Retail,23,175896
Retail,23,1945746
Retail,23,21045895
Retail,23,17200330
Retail,23,11420255
Retail,23,442201
Retail,23,6283607
Retail,23,2265493
Retail,23,607838
Retail,23,2475741
Retail,23,1340706
Retail,23,436445
Retail,23,4344007
Retail,23,2578994
Retail,23,2295913
Retail,23,1849402
Retail,23,15762408
Retail,23,255671
Retail,23,2218774
Retail,23,256703
Retail,23,30023
Retail,23,5305669
Retail,23,10045104
Retail,23,380500
Retail,23,4459363
Retail,23,1357741
Retail,23,18206165
Retail,23,23373
Retail,23,53625
Retail,23,943816
Retail,23,10306
Retail,23,385829
Retail,23,28028599
Retail,23,10067270
Retail,23,3426756
Retail,23,4412254
Retail,23,64596717
Retail,23,5172845
Retail,23,803972
Retail,23,63098
Retail,23,45637911
Retail,23,1021034
Retail,23,1586511
Retail,23,3395023
Retail,23,128857
Retail,23,8119725
Retail,23,607669
Retail,23,30851
Retail,23,2162952
Retail,23,2398317
Retail,23,13452948
Retail,23,5403063
Retail,24,608300
Retail,24,9939148
Retail,24,3563545
Retail,24,2167545
Retail,24,176906
Retail,24,18238815
Retail,24,2146934
Retail,24,50407
Retail,24,622599
Retail,24,260829
Retail,24,48587
Retail,24,3397422
Retail,24,1361886
Retail,24,2331370
Retail,24,2308933
Retail,24,7229407
Retail,24,2473137
Retail,24,1298346
Retail,24,35899
Retail,24,17187874
Retail,24,2989057
Retail,24,1072062
Retail,24,6864037
Retail,24,1043270
Retail,24,599201
Retail,24,22935
Retail,24,2934750
Retail,24,2385371
Retail,24,4385594
Retail,24,1453001
Retail,24,4424506
Retail,24,594425
Retail,24,1814066
Retail,24,2085600
Retail,24,28506
Retail,24,69776
Retail,24,21058788
Retail,24,48186
Retail,24,440532
Retail,24,388425
Retail,24,815552
Retail,24,1213423
Retail,24,29386
Retail,24,647734
Retail,24,21058
Retail,24,1348660
Query:
-- 18. View the demographic segments in the sales data
SELECT DISTINCT "demographic"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
LIMIT 1000;
Answer:
demographic
Couples
Families
unknown
Query:
-- 19. Get average transaction value per week for June 2020
SELECT "week_number", AVG("avg_transaction") AS "avg_transaction_value"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2020 AND "month_number" = 6
GROUP BY "week_number"
ORDER BY "week_number"
LIMIT 1000;
Answer:
week_number,avg_transaction_value
23,100.08189075630253
24,106.49327731092437
25,106.97806722689076
26,111.20718487394959
27,108.80411764705883
Query:
-- 20. Examine age bands of customers in weeks around mid-June 2018
SELECT "week_number", "age_band", SUM("sales") AS "total_sales"
FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 21 AND 24
GROUP BY "week_number", "age_band"
ORDER BY "week_number"
LIMIT 1000;
Answer:
week_number,age_band,total_sales
21,Middle Aged,83152708
21,unknown,216201212
21,Young Adults,58500027
21,Retirees,164523415
22,unknown,225625841
22,Middle Aged,86345405
22,Young Adults,62274184
22,Retirees,170172223
23,unknown,218360798
23,Retirees,165462863
23,Young Adults,58475504
23,Middle Aged,82786850
24,Retirees,169304633
24,Young Adults,59836732
24,unknown,219636685
24,Middle Aged,84481729
End Exploring Related Columns
Task: For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Percentage_Change
2018,percentage_change1:float
2019,percentage_change2:float
2020,percentage_change3:float
```

This table shows the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-20 21:43:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:43:56 - root - INFO - ```sql
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        TO_DATE("week_date") + INTERVAL '6' DAY AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= j."june_15" - INTERVAL '28' DAY THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= j."june_15" + INTERVAL '28' DAY THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND( ( (p1."after_sales" - p1."before_sales") / p1."before_sales" ) * 100, 4 ) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
    FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1;
```
2025-01-20 21:43:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:43:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:43:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:43:58 - snowflake.connector.connection - INFO - closed
2025-01-20 21:43:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:43:58 - root - INFO - itercount: 1
2025-01-20 21:43:58 - root - INFO - 001002 (42601): 01b9d897-0004-7e70-0001-11c300f2bf4a: syntax error line 5 at position 40 unexpected 'TOK_INTERVAL'.
2025-01-20 21:43:58 - root - INFO - Input sql:
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        TO_DATE("week_date") + INTERVAL '6' DAY AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= j."june_15" - INTERVAL '28' DAY THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= j."june_15" + INTERVAL '28' DAY THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND( ( (p1."after_sales" - p1."before_sales") / p1."before_sales" ) * 100, 4 ) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
    FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1;
The error information is:
001002 (42601): 01b9d897-0004-7e70-0001-11c300f2bf4a: syntax error line 5 at position 40 unexpected 'TOK_INTERVAL'.
Please correct it and output only 1 complete SQL query.
2025-01-20 21:44:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:44:18 - root - INFO - ```sql
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        DATEADD('day', 6, TO_DATE("week_date")) AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= DATEADD('day', -28, j."june_15") THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= DATEADD('day', 28, j."june_15") THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND(((p1."after_sales" - p1."before_sales") / p1."before_sales") * 100, 4) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
    FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1;
```
2025-01-20 21:44:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:44:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:44:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:44:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:44:19 - snowflake.connector.connection - INFO - closed
2025-01-20 21:44:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:44:20 - root - INFO - itercount: 2
2025-01-20 21:44:20 - root - INFO - 0
2025-01-20 21:44:20 - root - INFO - results: 
Year,Percentage_Change
2020,-0.4678
2019,-0.2480
2018,0.4516


2025-01-20 21:44:20 - root - INFO - Please check the answer again by reviewing For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Percentage_Change
2018,percentage_change1:float
2019,percentage_change2:float
2020,percentage_change3:float
```

This table shows the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Percentage_Change
2020,-0.4678
2019,-0.2480
2018,0.4516
Current sql:
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        DATEADD('day', 6, TO_DATE("week_date")) AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= DATEADD('day', -28, j."june_15") THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= DATEADD('day', 28, j."june_15") THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND(((p1."after_sales" - p1."before_sales") / p1."before_sales") * 100, 4) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
    FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1;
2025-01-20 21:44:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:44:39 - root - INFO - ```sql
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        DATEADD('day', 6, TO_DATE("week_date")) AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= DATEADD('day', -28, j."june_15") THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= DATEADD('day', 28, j."june_15") THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND(((p1."after_sales" - p1."before_sales") / p1."before_sales") * 100, 4) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
        FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1
ORDER BY p1."calendar_year";
```
2025-01-20 21:44:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:44:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:44:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:44:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:44:40 - snowflake.connector.connection - INFO - closed
2025-01-20 21:44:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:44:41 - root - INFO - itercount: 3
2025-01-20 21:44:41 - root - INFO - 0
2025-01-20 21:44:41 - root - INFO - results: 
Year,Percentage_Change
2018,0.4516
2019,-0.2480
2020,-0.4678


2025-01-20 21:44:41 - root - INFO - Please check the answer again by reviewing For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Percentage_Change
2018,percentage_change1:float
2019,percentage_change2:float
2020,percentage_change3:float
```

This table shows the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Percentage_Change
2018,0.4516
2019,-0.2480
2020,-0.4678
Current sql:
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        DATEADD('day', 6, TO_DATE("week_date")) AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= DATEADD('day', -28, j."june_15") THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= DATEADD('day', 28, j."june_15") THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND(((p1."after_sales" - p1."before_sales") / p1."before_sales") * 100, 4) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
        FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1
ORDER BY p1."calendar_year";
2025-01-20 21:45:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:45:06 - root - INFO - ```sql
WITH sales_data AS (
    SELECT
        "calendar_year",
        TO_DATE("week_date") AS "week_start_date",
        DATEADD('day', 6, TO_DATE("week_date")) AS "week_end_date",
        "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
),
june_15_dates AS (
    SELECT
        DISTINCT "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15')) AS "june_15"
    FROM sales_data
),
periods AS (
    SELECT
        sd."calendar_year",
        sd."sales",
        CASE
            WHEN sd."week_end_date" < j."june_15"
                 AND sd."week_end_date" >= DATEADD('day', -28, j."june_15") THEN 'before'
            WHEN sd."week_start_date" > j."june_15"
                 AND sd."week_start_date" <= DATEADD('day', 28, j."june_15") THEN 'after'
            ELSE NULL
        END AS "period"
    FROM sales_data sd
    JOIN june_15_dates j ON sd."calendar_year" = j."calendar_year"
)
SELECT
    p1."calendar_year" AS "Year",
    ROUND(((p1."after_sales" - p1."before_sales") / p1."before_sales") * 100, 4) AS "Percentage_Change"
FROM (
    SELECT
        "calendar_year",
        SUM(CASE WHEN "period" = 'before' THEN "sales" ELSE 0 END) AS "before_sales",
        SUM(CASE WHEN "period" = 'after' THEN "sales" ELSE 0 END) AS "after_sales"
        FROM periods
    WHERE "period" IN ('before', 'after')
    GROUP BY "calendar_year"
) p1
ORDER BY p1."calendar_year";
```
2025-01-20 21:45:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:45:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:45:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:45:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:45:07 - snowflake.connector.connection - INFO - closed
2025-01-20 21:45:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:45:08 - root - INFO - itercount: 4
2025-01-20 21:45:08 - root - INFO - 0
2025-01-20 21:45:08 - root - INFO - Total iteration counts: 4
