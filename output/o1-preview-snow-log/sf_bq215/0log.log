2025-01-21 06:54:04 - openai._base_client - INFO - Retrying request to /chat/completions in 0.415686 seconds
2025-01-21 06:55:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 06:55:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:55:06 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:55:07 - root - INFO - SQL:
SELECT "publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
publication_number
US-9096672-B2
US-8975572-B2
US-9345037-B2
US-9416401-B2
US-8968078-B2
US-9297098-B2
US-9311616-B2
US-8938935-B2
US-9126271-B2
US-9086872-B2
US-9358525-B2
US-9393029-B2
US-9426685-B2
US-9352353-B2
US-8987912-B2
US-9098673-B2
US-9041403-B2
US-9008057-B2
US-9029456-B2
US-8973118-B2
US-9387271-B2
US-8941865-B2
US-9216062-B2
US-8972311-B2
US-9102763-B2
US-8953633-B2
US-9048737-B2
US-9047171-B2
US-9114472-B2
US-9244831-B2
US-9334538-B2
US-8962897-B2
US-9231429-B2
US-9283474-B2
US-9051055-B2
US-9254639-B2
US-9153405-B2
US-9548460-B2
US-9259497-B2
US-9389317-B2
US-8953723-B2
US-9308847-B2
US-9063965-B2
US-9040982-B2
US-10082314-B2
US-9288570-B2
US-9115370-B2
US-9238086-B2
US-9557061-B2
US-9360341-B2
US-9466467-B2
US-9461303-B2
US-9286693-B2
US-9310518-B2
US-9279991-B2
US-9442373-B2
US-9150339-B2
US-9494485-B2
US-9563921-B2
US-10084192-B2
US-10106695-B2
US-8992566-B2
US-9232740-B2
US-9026486-B2
US-9346721-B2
US-9104556-B2
US-9187027-B2
US-9288625-B2
US-9462735-B2
US-9288048-B2
US-9522458-B2
US-9219084-B2
US-9387499-B2
US-9175021-B2
US-9240234-B2
US-10002249-B2
US-9133587-B2
US-9481196-B2
US-9485000-B2
US-9278095-B2
US-9509860-B2
US-10075826-B2
US-10018905-B2
US-10143806-B2
US-10017961-B2
US-10153300-B2
US-9462505-B2
US-10105167-B2
US-10018128-B2
US-10060968-B2
US-10040376-B2
US-10162213-B2
US-10052433-B2
US-10051368-B2
US-10047052-B2
US-10065428-B2
US-10110576-B2
US-10109645-B2
US-9292092-B2
US-9619652-B2

2025-01-21 06:55:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:55:08 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:55:08 - root - INFO - SQL:
SELECT "publication_number", "grant_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
publication_number,grant_date
US-8942653-B2,20150127
US-9166782-B2,20151020
US-9037990-B2,20150519
US-9008007-B2,20150414
US-9068692-B2,20150630
US-9080562-B2,20150714
US-8944695-B2,20150203
US-9453104-B2,20160927
US-9104711-B2,20150811
US-9362818-B2,20160607
US-10034007-B2,20180724
US-9200186-B2,20151201
US-8984387-B2,20150317
US-8954747-B2,20150210
US-9164153-B2,20151020
US-9438879-B2,20160906
US-10153865-B2,20181211
US-9351806-B2,20160531
US-9072319-B2,20150707
US-8992024-B2,20150331
US-8988175-B2,20150324
US-9038783-B2,20150526
US-8943915-B2,20150203
US-9069544-B2,20150630
US-8948859-B2,20150203
US-9236642-B2,20160112
US-9049991-B2,20150609
US-9393557-B2,20160719
US-9006081-B2,20150414
US-9046276-B2,20150602
US-9297942-B2,20160329
US-9121051-B2,20150901
US-9019050-B2,20150428
US-9405938-B2,20160802
US-9246583-B2,20160126
US-8996516-B2,20150331
US-9009469-B2,20150414
US-8998654-B2,20150407
US-9281167-B2,20160308
US-9181681-B2,20151110
US-9394731-B2,20160719
US-9068384-B2,20150630
US-9082772-B2,20150714
US-9136098-B2,20150915
US-10047399-B2,20180814
US-10098361-B2,20181016
US-9009580-B2,20150414
US-9332944-B2,20160510
US-9413238-B2,20160809
US-9381070-B2,20160705
US-9288404-B2,20160315
US-9546122-B2,20170117
US-9211434-B2,20151215
US-9139000-B2,20150922
US-9019995-B2,20150428
US-9151260-B2,20151006
US-9296093-B2,20160329
US-9197847-B2,20151124
US-9254356-B2,20160209
US-9461623-B2,20161004
US-9315115-B2,20160419
US-9005111-B2,20150414
US-9494095-B2,20161115
US-10111159-B2,20181023
US-9318320-B2,20160419
US-9279853-B2,20160308
US-9410163-B2,20160809
US-10113222-B2,20181030
US-9385307-B2,20160705
US-10057816-B2,20180821
US-9531867-B2,20161227
US-10136234-B2,20181120
US-9563163-B2,20170207
US-10102286-B2,20181016
US-9340464-B2,20160517
US-9454722-B2,20160927
US-10143019-B2,20181127
US-10087640-B2,20181002
US-10058243-B2,20180828
US-10121264-B2,20181106
US-10144609-B2,20181204
US-10036966-B2,20180731
US-10141634-B2,20181127
US-10050072-B2,20180814
US-10056901-B2,20180821
US-10005222-B2,20180626
US-10066347-B2,20180904
US-10153866-B2,20181211
US-9258696-B2,20160209
US-9637570-B2,20170502
US-9056087-B2,20150616
US-9358141-B2,20160607
US-8998077-B2,20150407
US-9175419-B2,20151103
US-8930853-B2,20150106
US-9468034-B2,20161011
US-9079868-B2,20150714
US-9068776-B2,20150630
US-9028724-B2,20150512
US-9005400-B2,20150414

2025-01-21 06:55:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-21 06:55:09 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:55:10 - root - INFO - SQL:
SELECT COUNT(*) AS "total_patents"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231;
Results:
total_patents
1549

2025-01-21 06:55:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:55:11 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:55:12 - root - INFO - SQL:
SELECT t."publication_number", c.value AS "citation"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
Too long, hard cut:
publication_number,citation
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-5231049-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-5895932-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6404125-B1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6410940-B1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2003087462-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2003142728-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2003152220-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""FR-2842832-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6806115-B2"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2005194598-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6995030-B2"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2006099781-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2006208273-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-8163575-B2"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Akira Sakai, et al., Defect structure in selectively grown GaN films with low threading dislocation density, Appl. Phys. Lett. 71 (16) Oct. 20, 1997."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Akira Usui, et al., Thick GaN Epitaxial Growth with Low Dislocation Density by Hybride Vapor Phase Epitaxy, Japanese J, Phys. vol. 36 (1997) pp. L899-L902, Part 2, No. 7B, Jul. 15, 1997."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Communication dated Sep. 18, 2015, issued by the European Patent Office in corresponding European Application No. 05 777 119.8."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""K. Hiramatsu, \""Fabrication and characterization of low defect density GaN using facet-controlled epitaxial lateral overgrowth (FACELO)\"", Journal of Crystal Growth, Amsterdam, vol. 221, No. 1-4, Dec. 2000, pp. 316-326."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""K. Kusakabe, \""Overgrowth of GaN layer on GaN nano-columns by RF-molecular beam epitaxy\"", Journal of Crystal Growth, Amsterdam. vol. 237-239, Apr. 2002, pp. 988-992."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Kawai et al., \""RF-MBE-ho ni yoru InN no Kessho Seicho to Nano Kozo no Sakusei\"", The Institute of Electronics, Information and Communication Engineers Gijutsu Kenkyu Hokoku, vol. 13, No. 343 (CPM2003 102-116), 2003, pp. 33 to 37."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA,SEA"",
  ""filing_date"": 0,
  ""npl_text"": ""Kikuchi et al., \""InGaN/GaN Multiple Quantum Disk Nanocolumn Light-Emitting Diodes Grown on (111) Si Substrate\"", Japanese Journal of Applied Physics

2025-01-21 06:55:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:55:13 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:55:13 - root - INFO - SQL:
SELECT t."publication_number", ipc.value:"code"::STRING AS "ipc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
publication_number,ipc_code
US-8942653-B2,H04B1/04
US-8942653-B2,H01Q3/30
US-8942653-B2,H01Q21/00
US-8942653-B2,H04B7/06
US-9146908-B2,G06F40/189
US-9146908-B2,G06F19/00
US-9146908-B2,G06F17/30
US-9146908-B2,G06F17/00
US-9146908-B2,G06F40/143
US-8957034-B2,A61K9/16
US-8957034-B2,B82Y5/00
US-8957034-B2,A61K47/48
US-8957034-B2,A61K9/51
US-8957034-B2,A61K9/50
US-8957034-B2,A61K48/00
US-8957034-B2,A61K9/00
US-10156954-B2,G06F17/30
US-10156954-B2,G06F3/048
US-9173903-B2,A61K9/70
US-9173903-B2,A61K9/00
US-9173903-B2,C12N5/02
US-9173903-B2,A61P25/00
US-9173903-B2,A61M1/00
US-9173903-B2,A61K8/02
US-9173903-B2,A61Q19/08
US-9173903-B2,A61P3/10
US-9173903-B2,A61K38/18
US-9173903-B2,A61P9/00
US-9173903-B2,A61P29/00
US-9173903-B2,A61P37/04
US-9173903-B2,A61K39/00
US-9173903-B2,A61P17/02
US-9173903-B2,A61K35/24
US-9173903-B2,A61K35/12
US-9173903-B2,C12N5/07
US-8997953-B2,F16F9/348
US-8997953-B2,F16F9/34
US-9277849-B2,A47L15/00
US-9277849-B2,A47L15/42
US-8989275-B2,H04N19/18
US-8989275-B2,H04N19/102
US-8989275-B2,H04N19/176
US-8989275-B2,H04N19/61
US-8989275-B2,G06T9/00
US-8989275-B2,H04N19/174
US-8989275-B2,H04N19/146
US-8989275-B2,H04N19/12
US-8989275-B2,H04N19/90
US-8989275-B2,H04N19/593
US-8989275-B2,H04N19/46
US-8989275-B2,H04N19/423
US-8989275-B2,H04N19/182
US-8989275-B2,H04N7/12
US-8955172-B2,E03D11/16
US-9115075-B2,C07C67/20
US-9115075-B2,C07C67/31
US-9115075-B2,C07C51/06
US-8945273-B2,C21B13/00
US-9173714-B2,A61B1/32
US-9173714-B2,A61B17/00
US-9173714-B2,A61B19/00
US-9183552-B2,G06Q20/32
US-9183552-B2,G06Q20/36
US-9183552-B2,G06Q20/20
US-9183552-B2,G06Q20/00
US-9147924-B2,H01P5/107
US-9297959-B2,G11B5/00
US-9297959-B2,G02B6/138
US-9297959-B2,G11B5/31
US-9297959-B2,G02B6/136
US-9163563-B2,F16K17/38
US-9163563-B2,F02C9/28
US-9163563-B2,F02C9/26
US-9229575-B2,G06F3/042
US-9229575-B2,G06F3/041
US-8973012-B2,G06N5/00
US-8973012-B2,G06F9/50
US-8973012-B2,G06F9/46
US-8973012-B2,G06F17/30
US-8973012-B2,G06F9/44
US-9464497-B2,E21B33/12
US-9464497-B2,E21B33/035
US-9464497-B2,E21B33/03
US-9464497-B2,E21B33/038
US-9328749-B2,B60G7/00
US-9328749-B2,B62D7/20
US-9328749-B2,F16C7/06
US-9328749-B2,F16B2/06
US-9328749-B2,F16B7/18
US-8939670-B2,A45D40/26
US-8939670-B2,A46B11/00
US-8939670-B2,A46B11/02
US-8939670-B2,A45D34/04
US-9209269-B2,H01L27/12
US-9209269-B2,H01L29/786
US-9209269-B2,H01L21/324
US-9209269-B2,H01L21/285
US-9209269-B2,H01L29/66
US-9209269-B2,H01L29/45
US-9202080-B2,G06F21/62

2025-01-21 06:55:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:55:15 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:55:15 - root - INFO - SQL:
SELECT t."publication_number", SUBSTR(ipc.value:"code"::STRING, 1, 4) AS "ipc_4_digit"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
publication_number,ipc_4_digit
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04L
US-9042351-B2,H04W
US-9042351-B2,H04L
US-9042351-B2,H04B
US-9042351-B2,H04W
US-9042351-B2,H04W
US-9042351-B2,H04W
US-9042351-B2,H04J
US-9042351-B2,H04W
US-8962445-B2,H10B
US-8962445-B2,H01L
US-8962445-B2,H01L
US-8962445-B2,H01L
US-9270639-B2,H04L
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,H04N
US-8938152-B2,H04N
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,H04N
US-8938152-B2,H04N
US-8938152-B2,H04N
US-8938152-B2,G11B
US-8938152-B2,H04N
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,H04N
US-9389656-B2,G06F
US-9389656-B2,H05K
US-9389656-B2,H05K
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9386020-B2,G06F
US-9386020-B2,G06F
US-9386020-B2,H04L
US-10142276-B2,H04L
US-10142276-B2,G06Q
US-10142276-B2,G06Q
US-10142276-B2,H04N
US-10142276-B2,H04L
US-10142276-B2,H04L
US-9216545-B2,B29C
US-9216545-B2,B33Y
US-9548844-B2,H04L
US-9548844-B2,H04B
US-9548844-B2,H04L
US-9111730-B2,G02B
US-9111730-B2,G02B
US-9111730-B2,B82Y
US-9111730-B2,G02B
US-9111730-B2,G02B
US-9111730-B2,H01J
US-9111730-B2,G02B
US-9340798-B2,A01K
US-9340798-B2,C12N
US-9340798-B2,A61K
US-9340798-B2,A61P
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,A61K
US-9340798-B2,A61K
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04L
US-9650743-B2,F16J
US-9650743-B2,F16C

2025-01-21 06:55:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:55:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:55:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:55:16 - snowflake.connector.connection - INFO - closed
2025-01-21 06:55:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:56:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 06:56:01 - root - INFO - The error you're encountering is due to the way Snowflake handles `LATERAL` joins and table functions like `FLATTEN`. In Snowflake, using `LEFT JOIN LATERAL` with an `ON` clause is not supported in the way it's written in your query.

**Problem Explanation:**

The error message:

```
Unsupported feature 'lateral table function called with OUTER JOIN syntax or a join predicate (ON clause)'.
```

indicates that Snowflake does not support using `LEFT JOIN LATERAL` with an `ON` clause in this context. Specifically, `LATERAL` joins with table functions like `FLATTEN` cannot be used with an outer join syntax that includes an `ON` condition.

**Solution:**

To fix this, we can avoid the `LEFT JOIN LATERAL` syntax and instead use a subquery or an alternative approach to count the number of citations for each patent.

---

**Alternative Approach Using `ARRAY_SIZE`:**

Since the `"citation"` field is an array (or can be treated as one), we can use the `ARRAY_SIZE` function to count the number of citations directly, without needing to `FLATTEN` the array.

**Rewritten Query:**

```sql
SELECT t."publication_number",
       COALESCE(ARRAY_SIZE(t."citation"), 0) AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
```

**Explanation:**

- **`ARRAY_SIZE(t."citation")`**: Returns the number of elements in the `"citation"` array for each patent.
- **`COALESCE(ARRAY_SIZE(t."citation"), 0)`**: Ensures that if the `"citation"` field is `NULL` (i.e., the patent has no citations), the count is set to `0` instead of `NULL`.

---

**Example Result:**

```csv
publication_number,citation_count
US-8942653-B2,5
US-9166782-B2,3
US-9037990-B2,0
US-9008007-B2,2
US-9068692-B2,4
...
```

---

**Explanation of the New Query:**

- The query selects the `"publication_number"` and calculates the `"citation_count"` for each patent.
- It filters the patents to include only those that are:
  - From the United States (`"country_code" = 'US'`)
  - Have a `kind_code` of `'B2'`
  - Granted between 2015 and 2018 (`"grant_date" BETWEEN 20150101 AND 20181231`)
- The `LIMIT 100` clause restricts the output to 100 rows.

**Note:**

This approach is more efficient and avoids the complications of using `LATERAL` joins with `FLATTEN`. It directly computes the number of citations for each patent, including those with zero citations.

---

**If You Still Need to Use `FLATTEN`:**

If for some reason you need to process the citations using `FLATTEN` (e.g., to extract specific data from each citation), you can adjust your query as follows:

```sql
SELECT t."publication_number",
       COUNT(c.value) AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
LEFT JOIN LATERAL TABLE(
  FLATTEN(input => t."citation")
) c ON TRUE
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
```

**Explanation:**

- **`LEFT JOIN LATERAL TABLE(FLATTEN(...)) c ON TRUE`**: Performs a lateral join with the `FLATTEN` function without an unsupported `ON` clause.
- Snowflake allows `LATERAL` joins without specifying an `ON` condition when using table functions.
- The `LEFT JOIN` ensures that patents with no citations are included, with `NULL` values for `c.value`.

**However**, using `ARRAY_SIZE` is simpler and more efficient if you only need to count the number of citations.

---

**Recommendation:**

Use the `ARRAY_SIZE` approach unless you specifically need to access the contents of each citation. If you encounter issues or have further questions, feel free to ask for additional assistance.
2025-01-21 06:56:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:56:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:56:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:56:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:56:03 - snowflake.connector.connection - INFO - closed
2025-01-21 06:56:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:57:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 06:57:31 - root - INFO - SQL:
SELECT t."publication_number",
       COALESCE(ARRAY_SIZE(t."citation"), 0) AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Results:
publication_number,citation_count
US-9362717-B2,27
US-9275036-B2,33
US-8974982-B2,30
US-8992882-B2,5
US-9045208-B2,16
US-9067254-B2,138
US-8978724-B2,17
US-9072850-B2,88
US-9115075-B2,9
US-8945273-B2,21
US-9173714-B2,9
US-9183552-B2,42
US-9147924-B2,5
US-9297959-B2,4
US-9163563-B2,5
US-9229575-B2,20
US-8973012-B2,26
US-9464497-B2,23
US-9328749-B2,36
US-8939670-B2,10
US-9209269-B2,14
US-9202080-B2,13
US-8995504-B2,11
US-8984389-B2,35
US-9031134-B2,10
US-9137031-B2,18
US-9228180-B2,29
US-9116317-B2,25
US-9042660-B2,29
US-9034622-B2,23
US-8930147-B2,1
US-9597149-B2,109
US-9060824-B2,6
US-8962096-B2,15
US-9095227-B2,18
US-9266974-B2,36
US-9225092-B2,14
US-9369013-B2,9
US-9414597-B2,8
US-9029140-B2,229
US-9299549-B2,15
US-8944640-B2,15
US-9185094-B2,140
US-9332671-B2,15
US-9033517-B2,9
US-9087697-B2,25
US-9126237-B2,29
US-9202938-B2,3
US-9367503-B2,75
US-9120113-B2,9
US-9218317-B2,9
US-9141121-B2,4
US-8964230-B2,10
US-9404962-B2,3
US-9469815-B2,14
US-9173003-B2,33
US-9557812-B2,23
US-9220860-B2,572
US-8938247-B2,19
US-9127863-B2,8
US-8953196-B2,14
US-9258696-B2,22
US-9637570-B2,39
US-9056087-B2,123
US-9176893-B2,83
US-9037976-B2,55
US-9136162-B2,2
US-9531453-B2,23
US-9584192-B2,13
US-9280023-B2,12
US-8987159-B2,31
US-9370974-B2,37
US-10137186-B2,23
US-9350450-B2,11
US-9264594-B2,24
US-8942268-B2,0
US-10126904-B2,77
US-9167496-B2,16
US-9469348-B2,14
US-9220106-B2,5
US-9372352-B2,31
US-9627183-B2,32
US-9356222-B2,6
US-10045088-B2,44
US-9199445-B2,4
US-9560083-B2,34
US-9447521-B2,508
US-9269629-B2,25
US-9209146-B2,6
US-10059184-B2,29
US-9428407-B2,0
US-9573970-B2,18
US-10137049-B2,12
US-10076341-B2,2
US-9464982-B2,104
US-10036488-B2,40
US-9371099-B2,879
US-9429369-B2,13
US-8952769-B2,11
US-9095517-B2,13

2025-01-21 06:57:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:57:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:57:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:57:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:57:33 - snowflake.connector.connection - INFO - closed
2025-01-21 06:57:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:57:33 - root - INFO - SQL:
-- Corrected SQL for Query 1:
SELECT DISTINCT t."publication_number", SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS "cited_ipc_4_digit"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100
Results:
publication_number,cited_ipc_4_digit
US-9121016-B2,C12M
US-9415120-B2,C12P
US-9235943-B2,G06F
US-9447521-B2,C30B
US-10019265-B2,G06F
US-9384632-B2,A63F
US-10119947-B2,C10L
US-9619652-B2,G06F
US-9619652-B2,G06Q
US-9332944-B2,G06F
US-9464982-B2,C07K
US-9153188-B2,G02F
US-9048913-B2,H01Q
US-9636072-B2,G01T
US-9155586-B2,A61B
US-9044021-B2,F27D
US-9089261-B2,A61B
US-9457510-B2,G09F
US-9347655-B2,G03F
US-10076611-B2,A61M
US-9001770-B2,H04B
US-9526699-B2,C07C
US-9436499-B2,G06F
US-9622691-B2,G06F
US-9185094-B2,G06F
US-9474734-B2,A61K
US-9214830-B2,H01M
US-9410163-B2,C12N
US-9548844-B2,H04J
US-10101801-B2,H04W
US-8932208-B2,A61F
US-9597149-B2,A61M
US-9293644-B2,B01J
US-9447521-B2,H01L
US-9100526-B2,B41J
US-9226006-B2,G11B
US-9293644-B2,C30B
US-9518924-B2,G03B
US-9332944-B2,A61B
US-9457510-B2,G07D
US-9182815-B2,G01B
US-9270639-B2,H04L
US-9371099-B2,G06K
US-9169941-B2,F16K
US-9518924-B2,G01J
US-9293644-B2,F01N
US-9372790-B2,G06F
US-9100526-B2,G03G
US-9399738-B2,B01J
US-9184581-B2,B60L
US-9270639-B2,G06F
US-10059084-B2,B27N
US-10042510-B2,A61B
US-9048913-B2,H03F
US-9448946-B2,G11C
US-9437430-B2,C30B
US-9211498-B2,G08B
US-9235943-B2,H04L
US-10036488-B2,F16L
US-9371099-B2,G08G
US-8984387-B2,G06Q
US-9048913-B2,G01S
US-9646713-B2,H03K
US-10059084-B2,E04B
US-9068247-B2,C22B
US-9173003-B2,H04L
US-9226006-B2,F25D
US-9597149-B2,A61B
US-8967144-B2,A61M
US-9355294-B2,G06F
US-9355294-B2,G06K
US-10105167-B2,A61F
US-8932208-B2,A61B
US-9636072-B2,G06T
US-9474734-B2,A61P
US-9622691-B2,G01N
US-9044021-B2,A47J
US-9001770-B2,H04W
US-10101801-B2,G06F
US-9437430-B2,H01L
US-9153188-B2,G09G
US-10137283-B2,A61F
US-9100526-B2,G06F
US-9622691-B2,A61B
US-9173003-B2,H04N
US-10119947-B2,C12P
US-9284409-B2,B22F
US-9585927-B2,A61P
US-8932208-B2,A61N
US-10007422-B2,G06T
US-10060975-B2,G01D
US-8992024-B2,G09F
US-9522312-B2,B23K
US-9415120-B2,C12R
US-8954157-B2,A61N
US-9142476-B2,H01L
US-9048913-B2,H04B
US-9548844-B2,H04B
US-9293644-B2,H01L
US-8984387-B2,G06F

2025-01-21 06:57:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:57:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:57:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:57:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:57:35 - snowflake.connector.connection - INFO - closed
2025-01-21 06:57:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:57:35 - root - INFO - SQL:
-- Corrected SQL for Query 2:
SELECT t."publication_number", COUNT(DISTINCT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)) AS "unique_cited_ipc_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100
Results:
publication_number,unique_cited_ipc_count
US-9068247-B2,1
US-9585927-B2,2
US-9207691-B2,1
US-9293644-B2,8
US-9173003-B2,3
US-9175419-B2,2
US-10034624-B2,3
US-9362579-B2,1
US-9436499-B2,1
US-9211498-B2,2
US-9404565-B2,2
US-10100810-B2,1
US-9155586-B2,1
US-9622691-B2,5
US-9636072-B2,3
US-9447521-B2,2
US-9200186-B2,1
US-9197224-B2,1
US-9212846-B2,1
US-9151260-B2,1
US-9402981-B2,2
US-8984387-B2,2
US-10076611-B2,2
US-10017537-B2,2
US-9399738-B2,2
US-9121016-B2,9
US-9437430-B2,2
US-10077795-B2,1
US-9184581-B2,2
US-9235943-B2,2
US-9290472-B2,3
US-8992024-B2,5
US-9410163-B2,1
US-9100526-B2,5
US-9448946-B2,2
US-9185094-B2,2
US-9384632-B2,2
US-9182815-B2,4
US-9131283-B2,1
US-9548844-B2,2
US-10060975-B2,2
US-9233513-B2,1
US-10101801-B2,3
US-10139262-B2,1
US-8954157-B2,2
US-9270639-B2,2
US-9160809-B2,1
US-9244073-B2,2
US-9457510-B2,3
US-9355294-B2,4
US-9284409-B2,5
US-9518924-B2,4
US-9372790-B2,1
US-9089261-B2,1
US-10141118-B2,2
US-9214830-B2,1
US-10042510-B2,1
US-9169941-B2,2
US-10036488-B2,1
US-9202992-B2,3
US-9311616-B2,1
US-10137283-B2,3
US-9464982-B2,1
US-9332944-B2,4
US-9526699-B2,1
US-9546744-B2,2
US-9306600-B2,1
US-9048913-B2,4
US-9415120-B2,4
US-9044021-B2,4
US-9575648-B2,4
US-9597149-B2,3
US-9117791-B2,1
US-9067254-B2,1
US-9564199-B2,1
US-10037903-B2,1
US-10007422-B2,2
US-10107583-B2,2
US-10105167-B2,3
US-9302085-B2,1
US-9371099-B2,4
US-9474734-B2,2
US-9522312-B2,2
US-9142476-B2,1
US-9347655-B2,5
US-10059084-B2,5
US-9315115-B2,1
US-8986850-B2,1
US-9226006-B2,6
US-9456204-B2,1
US-10130893-B2,1
US-10010405-B2,1
US-9291935-B2,1
US-9551731-B2,1
US-9649467-B2,3
US-10019265-B2,1
US-9317887-B2,1
US-10067609-B2,2
US-9646713-B2,1
US-9619652-B2,2

2025-01-21 06:57:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:57:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:57:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:57:37 - snowflake.connector.connection - INFO - closed
2025-01-21 06:57:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:58:45 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 06:58:45 - root - INFO - The error you're encountering is due to a scoping issue with `ipc_cited.value` in the `CROSS JOIN (SELECT ...)` subquery. In SQL, subqueries in a `CROSS JOIN` (or any subquery) do not have access to the outer query's aliases or columns unless they are correlated subqueries.

**Problem Explanation:**

- **Error Message:**

  ```
  invalid identifier 'IPC_CITED.VALUE'
  ```

- **Cause:**

  In your query, you're attempting to reference `ipc_cited.value` within a subquery:

  ```sql
  CROSS JOIN (SELECT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class)
  ```

  However, this subquery doesn't have access to the `ipc_cited` alias from the outer query. As a result, SQL cannot recognize `ipc_cited.value` within that subquery.

---

**Solution:**

To fix this issue, we can modify the query to:

1. Extract the `ipc_class` directly in the main query after flattening the `cited."ipc"` array.
2. Use this `ipc_class` in the grouping and calculations.

**Corrected Query:**

```sql
SELECT
  sub."publication_number",
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
FROM (
  SELECT
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
    COUNT(*) AS n_ik,
    SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  JOIN PATENTS.PATENTS.PUBLICATIONS cited
    ON c.value:"publication_number"::STRING = cited."publication_number"
  CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
  WHERE t."country_code" = 'US'
    AND t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
) sub
GROUP BY sub."publication_number"
LIMIT 100;
```

**Explanation:**

- **Step 1:** **Extract `ipc_class` Directly**

  We extract the 4-digit IPC code directly in the subquery:

  ```sql
  SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class
  ```

- **Step 2:** **Calculate `n_ik` and `n_i`**

  - `n_ik`: The count of citations in each IPC class for each publication.
  - `n_i`: The total number of citations for each publication.

  ```sql
  COUNT(*) AS n_ik,
  SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  ```

  We use `SUM(COUNT(*)) OVER (PARTITION BY t."publication_number")` to compute the total citations per publication.

- **Step 3:** **Group By Appropriate Columns**

  The `GROUP BY` in the subquery should include both the `publication_number` and `ipc_class`:

  ```sql
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
  ```

- **Step 4:** **Calculate Originality Score**

  In the outer query, we calculate the originality score using the formula:

  \[
  \text{Originality Score} = 1 - \sum_k \left( \frac{n_{ik}}{n_i} \right)^2
  \]

  ```sql
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
  ```

  - We multiply `n_ik` by `1.0` to ensure floating-point division.
  - We sum the squared proportions for each `ipc_class` per `publication_number`.

- **Step 5:** **Final Grouping**

  In the outer query, we group by `sub."publication_number"` to get the originality score per patent.

---

**Test the Corrected Query:**

Run the corrected query to ensure it executes without errors and returns the expected results.

**Example Results:**

```csv
publication_number,originality_score
US-1234567-B2,0.75
US-2345678-B2,0.83
US-3456789-B2,0.92
...
```

**Notes:**

- The originality score ranges between 0 and 1, where a higher score indicates greater diversity in the IPC classes of the backward citations.
- The `LIMIT 100` clause restricts the output to the top 100 patents.

---

**Additional Recommendations:**

- **Ensure Data Availability:** Make sure that the `citation` and `ipc` fields are populated for the patents in question. Patents without citations or IPC codes will not be processed correctly.
- **Data Types:** Be cautious with data types, especially when dealing with numeric fields and potential `NULL` values.
- **Performance Considerations:** This query can be resource-intensive due to multiple `FLATTEN` operations and window functions. Consider adding appropriate indexes or optimizing the query if performance issues arise.

---

Feel free to run the corrected query and let me know if you encounter any further issues or have questions about the results.
2025-01-21 06:58:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:58:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:58:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:58:46 - snowflake.connector.connection - INFO - closed
2025-01-21 06:58:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 06:59:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 06:59:47 - root - INFO - I see that you're encountering an error with the corrected SQL query:

```
001003 (42000): SQL compilation error:
syntax error line 1 at position 0 unexpected 'CROSS'.
```

**Explanation of the Error:**

The error message indicates that there is a syntax error at the very beginning of the SQL statement, specifically with the unexpected keyword `'CROSS'`. This suggests that the SQL parser is not expecting a `CROSS` keyword where it's placed in the query.

**Cause of the Error:**

In the original query provided, there is a `CROSS JOIN (SELECT ...)` clause. However, in SQL (and specifically in Snowflake), you cannot perform a `CROSS JOIN` directly with a subquery without proper aliasing or structure. The syntax used in the query is incorrect.

**Solution:**

To fix this issue, we need to remove the problematic `CROSS JOIN (SELECT ...)` clause and instead compute the `ipc_class` directly in the SELECT statement and the GROUP BY clause.

---

**Corrected SQL Query:**

```sql
SELECT
  sub."publication_number",
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
FROM (
  SELECT
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
    COUNT(*) AS n_ik,
    SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  JOIN PATENTS.PATENTS.PUBLICATIONS cited
    ON c.value:"publication_number"::STRING = cited."publication_number"
  CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
  WHERE t."country_code" = 'US'
    AND t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
) sub
GROUP BY sub."publication_number"
LIMIT 100;
```

**Explanation:**

- **Removed the Problematic `CROSS JOIN (SELECT ...)`:**
  
  The `CROSS JOIN (SELECT ...)` clause was causing the syntax error because it is not valid to perform a `CROSS JOIN` directly on a subquery without aliasing it properly.

- **Computed `ipc_class` Directly:**
  
  Instead of using the `CROSS JOIN (SELECT ...)`, we compute `ipc_class` directly in the SELECT clause and the GROUP BY clause:

  ```sql
  SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class
  ```

- **Adjusted the GROUP BY Clause:**

  Ensure that the `GROUP BY` clause includes the computed `ipc_class`:

  ```sql
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
  ```

- **Use of Subquery `sub`:**

  The subquery computes the necessary counts (`n_ik` and `n_i`) for each `publication_number` and `ipc_class`. The outer query then calculates the originality score using the formula:

  \[
  \text{Originality}_i = 1 - \sum_k \left( \frac{n_{ik}}{n_i} \right)^2
  \]

- **Window Function for Total Citations (`n_i`):**

  We calculate `n_i` using a window function:

  ```sql
  SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  ```

  This computes the total number of citations (`n_i`) for each `publication_number`.

---

**Testing the Corrected Query:**

Before running the query, ensure that:

- **Data Availability:**
  
  The `citation` and `ipc` fields are populated for the patents in the `PUBLICATIONS` table.

- **Permissions:**

  You have the necessary permissions to access the `PATENTS.PATENTS.PUBLICATIONS` table and its data.

---

**Further Explanation:**

- **Handling the `ipc_class`:**

  By extracting the `ipc_class` directly in the subquery, we avoid the need for an additional `CROSS JOIN` or subquery. This simplifies the query and adheres to proper SQL syntax.

- **Overall Structure:**

  The query structure is as follows:

  1. **Subquery (`sub`):**

     - **Selects:**
       - `publication_number`: The patent in question.
       - `ipc_class`: The 4-digit IPC code of the cited patents.
       - `n_ik`: The count of citations in each IPC class for each patent.
       - `n_i`: The total number of citations for each patent.

     - **Joins:**
       - Flattens the `citation` array to get individual citations.
       - Joins to the `cited` patents using `publication_number`.
       - Flattens the `ipc` array of the cited patents to get IPC codes.

     - **Grouping:**
       - Groups by `publication_number` and `ipc_class` to get counts per IPC class.

  2. **Outer Query:**

     - **Selects:**
       - `publication_number`
       - `originality_score`: Calculated using the formula.

     - **Grouping:**
       - Groups by `publication_number` to sum up the originality score components.

---

**Example Result:**

Assuming the query runs successfully, you should get results like:

```csv
publication_number,originality_score
US-1234567-B2,0.75
US-2345678-B2,0.83
US-3456789-B2,0.92
...
```

- **Interpretation:**

  - **Originality Score:**
    
    - Scores range from 0 to 1.
    - A higher score indicates that the patent cites prior art across a more diverse set of IPC classes (more "original").

---

**Additional Considerations:**

- **Performance:**

  - The query involves multiple `FLATTEN` operations and window functions, which may be resource-intensive.
  - Consider optimizing the query or running it during off-peak hours if performance is an issue.

- **Error Handling:**

  - If you encounter any other errors, double-check the column names and data types.
  - Ensure that all `NULL` values are properly handled.

---

**Try the Corrected Query:**

Please try running the corrected query provided above. If you encounter any further errors or have questions about the results, feel free to reach out, and I'll be happy to assist you further.
2025-01-21 06:59:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 06:59:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 06:59:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 06:59:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 06:59:49 - snowflake.connector.connection - INFO - closed
2025-01-21 06:59:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:01:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 07:01:10 - root - INFO - SQL:
SELECT
  sub."publication_number",
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
FROM (
  SELECT
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
    COUNT(*) AS n_ik,
    SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  JOIN PATENTS.PATENTS.PUBLICATIONS cited
    ON c.value:"publication_number"::STRING = cited."publication_number"
  CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
  WHERE t."country_code" = 'US'
    AND t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
) sub
GROUP BY sub."publication_number"
LIMIT 100;
Results:
publication_number,originality_score
US-9585927-B2,0.07986172222199994
US-9068247-B2,0.0
US-9207691-B2,0.0
US-9202992-B2,0.625
US-9311616-B2,0.0
US-10017537-B2,0.5
US-9399738-B2,0.5
US-9448946-B2,0.444444222222
US-9182815-B2,0.740741259259
US-9384632-B2,0.444444222222
US-9185094-B2,0.31999999999999984
US-8984387-B2,0.31999999999999984
US-9410163-B2,0.0
US-9100526-B2,0.7777775555549999
US-8992024-B2,0.7999999999999999
US-9290472-B2,0.625
US-9293644-B2,0.781163301938
US-9211498-B2,0.5
US-9175419-B2,0.49382706172799995
US-9173003-B2,0.5714282857140001
US-10034624-B2,0.5599999999999999
US-9436499-B2,0.0
US-9404565-B2,0.5
US-9362579-B2,0.0
US-10100810-B2,0.0
US-9155586-B2,0.0
US-10141118-B2,0.5
US-10077795-B2,0.0
US-9184581-B2,0.444444222222
US-9548844-B2,0.5
US-10060975-B2,0.277778222222
US-9153188-B2,0.625
US-9546744-B2,0.375
US-8967144-B2,0.0
US-9646713-B2,0.0
US-9619652-B2,0.5
US-9272338-B2,0.5
US-9622691-B2,0.6982254556209999
US-9430016-B2,0.0
US-9456204-B2,0.0
US-9226006-B2,0.4850000000000001
US-10130893-B2,0.0
US-10010405-B2,0.0
US-9284409-B2,0.694215487603
US-9518924-B2,0.693878163265
US-10105167-B2,0.567900987654
US-10107583-B2,0.5
US-10007422-B2,0.48979579591800004
US-9636072-B2,0.6399999999999999
US-9212846-B2,0.0
US-10042510-B2,0.0
US-9214830-B2,0.0
US-8954157-B2,0.5
US-9270639-B2,0.375
US-9160809-B2,0.0
US-9244073-B2,0.444444222222
US-9457510-B2,0.666667333333
US-9597149-B2,0.666667333333
US-9575648-B2,0.58
US-9117791-B2,0.0
US-9447521-B2,0.21875
US-9332944-B2,0.5680469704140001
US-9526699-B2,0.0
US-9233513-B2,0.0
US-9402981-B2,0.48979579591800004
US-9151260-B2,0.0
US-9169941-B2,0.444444222222
US-10036488-B2,0.0
US-9235943-B2,0.444444222222
US-10137283-B2,0.666667333333
US-9464982-B2,0.0
US-10076611-B2,0.444444222222
US-9089261-B2,0.0
US-9197224-B2,0.0
US-9200186-B2,0.0
US-9306600-B2,0.0
US-9347655-B2,0.721894047337
US-10059084-B2,0.740741259259
US-9315115-B2,0.0
US-8986850-B2,0.0
US-9121016-B2,0.836564903046
US-9437430-B2,0.21875
US-9551731-B2,0.0
US-9291935-B2,0.0
US-9317887-B2,0.0
US-9649467-B2,0.611111222222
US-10019265-B2,0.0
US-9564199-B2,0.0
US-10037903-B2,0.0
US-9067254-B2,0.0
US-9131283-B2,0.0
US-10139262-B2,0.0
US-10101801-B2,0.4489792653060001
US-9048913-B2,0.6172836049379999
US-9415120-B2,0.65625
US-9044021-B2,0.71875
US-9355294-B2,0.72
US-10067609-B2,0.5
US-9372790-B2,0.0
US-9474734-B2,0.31999999999999984

2025-01-21 07:01:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:01:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:01:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:01:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 07:01:11 - snowflake.connector.connection - INFO - closed
2025-01-21 07:01:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:01:12 - root - INFO - SQL:
-- Corrected SQL for Query 4:
SELECT
  sub."publication_number",
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
FROM (
  SELECT
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
    COUNT(*) AS n_ik,
    SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  JOIN PATENTS.PATENTS.PUBLICATIONS cited
    ON c.value:"publication_number"::STRING = cited."publication_number"
  CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
  WHERE t."country_code" = 'US'
    AND t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
) sub
GROUP BY sub."publication_number"
ORDER BY "originality_score" DESC
LIMIT 100
Results:
publication_number,originality_score
US-9121016-B2,0.8365649030460001
US-8992024-B2,0.7999999999999999
US-9293644-B2,0.781163301938
US-9100526-B2,0.7777775555549999
US-10059084-B2,0.740741259259
US-9182815-B2,0.740741259259
US-9347655-B2,0.721894047337
US-9355294-B2,0.72
US-9044021-B2,0.71875
US-9622691-B2,0.6982254556209999
US-9284409-B2,0.694215487603
US-9518924-B2,0.693878163265
US-9457510-B2,0.666667333333
US-9597149-B2,0.666667333333
US-10137283-B2,0.666667333333
US-9415120-B2,0.65625
US-9636072-B2,0.6399999999999999
US-9153188-B2,0.625
US-9202992-B2,0.625
US-9290472-B2,0.625
US-9048913-B2,0.6172836049379999
US-10119947-B2,0.611111222222
US-9649467-B2,0.611111222222
US-9575648-B2,0.58
US-9173003-B2,0.5714282857140001
US-9332944-B2,0.5680469704140001
US-10105167-B2,0.567900987654
US-10034624-B2,0.5599999999999999
US-9001770-B2,0.556212828402
US-9548844-B2,0.5
US-10141118-B2,0.5
US-9399738-B2,0.5
US-8954157-B2,0.5
US-10017537-B2,0.5
US-9404565-B2,0.5
US-9211498-B2,0.5
US-10067609-B2,0.5
US-9272338-B2,0.5
US-9619652-B2,0.5
US-10107583-B2,0.5
US-8932208-B2,0.49999933333299995
US-9175419-B2,0.49382706172799995
US-9402981-B2,0.48979579591800004
US-10007422-B2,0.48979579591800004
US-9226006-B2,0.4850000000000001
US-10101801-B2,0.4489792653060001
US-9384632-B2,0.444444222222
US-9448946-B2,0.444444222222
US-9235943-B2,0.444444222222
US-9169941-B2,0.444444222222
US-9522312-B2,0.444444222222
US-10076611-B2,0.444444222222
US-9184581-B2,0.444444222222
US-9244073-B2,0.444444222222
US-9371099-B2,0.390532224852
US-9270639-B2,0.375
US-9546744-B2,0.375
US-9474734-B2,0.31999999999999984
US-8984387-B2,0.31999999999999984
US-9185094-B2,0.31999999999999984
US-10060975-B2,0.277778222222
US-9437430-B2,0.21875
US-9447521-B2,0.21875
US-9585927-B2,0.07986172222199994
US-9410163-B2,0.0
US-9089261-B2,0.0
US-9306600-B2,0.0
US-9302085-B2,0.0
US-9220860-B2,0.0
US-10010405-B2,0.0
US-9131283-B2,0.0
US-10130893-B2,0.0
US-9207691-B2,0.0
US-9068247-B2,0.0
US-10019265-B2,0.0
US-9317887-B2,0.0
US-9551731-B2,0.0
US-9564199-B2,0.0
US-9067254-B2,0.0
US-9233513-B2,0.0
US-9291935-B2,0.0
US-10037903-B2,0.0
US-9526699-B2,0.0
US-9372790-B2,0.0
US-9197224-B2,0.0
US-9200186-B2,0.0
US-9117791-B2,0.0
US-10042510-B2,0.0
US-9151260-B2,0.0
US-9456204-B2,0.0
US-9315115-B2,0.0
US-9212846-B2,0.0
US-9436499-B2,0.0
US-9362579-B2,0.0
US-9214830-B2,0.0
US-9155586-B2,0.0
US-9160809-B2,0.0
US-10100810-B2,0.0
US-9464982-B2,0.0
US-10077795-B2,0.0

2025-01-21 07:01:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:01:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:01:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:01:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 07:01:13 - snowflake.connector.connection - INFO - closed
2025-01-21 07:01:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:01:14 - root - INFO - SQL:
-- Corrected SQL for Query 5:
SELECT t."publication_number", COUNT(DISTINCT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)) AS "unique_ipc_classes"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
ORDER BY "unique_ipc_classes" DESC
LIMIT 100
Results:
publication_number,unique_ipc_classes
US-9121016-B2,9
US-9293644-B2,8
US-9226006-B2,6
US-8992024-B2,5
US-9347655-B2,5
US-9100526-B2,5
US-10059084-B2,5
US-9622691-B2,5
US-9284409-B2,5
US-9575648-B2,4
US-9355294-B2,4
US-9332944-B2,4
US-9415120-B2,4
US-9518924-B2,4
US-9048913-B2,4
US-9371099-B2,4
US-9044021-B2,4
US-9182815-B2,4
US-9001770-B2,3
US-10119947-B2,3
US-10034624-B2,3
US-9597149-B2,3
US-9457510-B2,3
US-8932208-B2,3
US-9202992-B2,3
US-10105167-B2,3
US-9636072-B2,3
US-9173003-B2,3
US-10137283-B2,3
US-10101801-B2,3
US-9290472-B2,3
US-9649467-B2,3
US-9153188-B2,3
US-9270639-B2,2
US-10007422-B2,2
US-9235943-B2,2
US-9402981-B2,2
US-9175419-B2,2
US-9404565-B2,2
US-9211498-B2,2
US-10017537-B2,2
US-9399738-B2,2
US-9184581-B2,2
US-9585927-B2,2
US-10107583-B2,2
US-9244073-B2,2
US-9169941-B2,2
US-10067609-B2,2
US-9474734-B2,2
US-10060975-B2,2
US-8954157-B2,2
US-9522312-B2,2
US-9447521-B2,2
US-10076611-B2,2
US-9437430-B2,2
US-8984387-B2,2
US-9448946-B2,2
US-9185094-B2,2
US-9619652-B2,2
US-9272338-B2,2
US-10141118-B2,2
US-9548844-B2,2
US-9384632-B2,2
US-9546744-B2,2
US-9233513-B2,1
US-9212846-B2,1
US-9151260-B2,1
US-9564199-B2,1
US-9464982-B2,1
US-9197224-B2,1
US-9362579-B2,1
US-9436499-B2,1
US-9200186-B2,1
US-10037903-B2,1
US-10077795-B2,1
US-9456204-B2,1
US-9067254-B2,1
US-8986850-B2,1
US-9315115-B2,1
US-9117791-B2,1
US-10010405-B2,1
US-10130893-B2,1
US-9220860-B2,1
US-9214830-B2,1
US-10042510-B2,1
US-9311616-B2,1
US-9372790-B2,1
US-9410163-B2,1
US-9306600-B2,1
US-9068247-B2,1
US-9160809-B2,1
US-9302085-B2,1
US-9526699-B2,1
US-9089261-B2,1
US-9131283-B2,1
US-8967144-B2,1
US-9646713-B2,1
US-9155586-B2,1
US-10100810-B2,1
US-9430016-B2,1

2025-01-21 07:01:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:01:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:01:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:01:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 07:01:15 - snowflake.connector.connection - INFO - closed
2025-01-21 07:01:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:01:16 - root - INFO - SQL:
-- Corrected SQL for Query 6:
SELECT
  t."publication_number",
  SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
  COUNT(*) AS "n_ik",
  COUNT(*) OVER (PARTITION BY t."publication_number") AS "n_i"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number", SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
LIMIT 100
Results:
publication_number,IPC_CLASS,n_ik,n_i
US-9226006-B2,H04N,28,6
US-9202992-B2,B23K,1,3
US-9384632-B2,G07F,1,2
US-9347655-B2,G06K,2,5
US-9001770-B2,H04B,1,3
US-9526699-B2,C07C,1,1
US-9436499-B2,G06F,4,1
US-9185094-B2,G06F,4,2
US-10076611-B2,A61M,1,2
US-9622691-B2,G06F,1,5
US-10105167-B2,A61F,3,3
US-8932208-B2,A61B,4,3
US-8967144-B2,A61M,4,1
US-9355294-B2,G06F,2,4
US-9355294-B2,G06K,1,4
US-9214830-B2,H01M,6,1
US-9474734-B2,A61K,4,2
US-9548844-B2,H04J,1,2
US-9410163-B2,C12N,3,1
US-9048913-B2,G01S,1,4
US-8984387-B2,G06Q,4,2
US-9371099-B2,G08G,1,4
US-9575648-B2,A61B,1,4
US-8984387-B2,G06F,1,2
US-9293644-B2,H01L,7,8
US-10137283-B2,A61L,1,3
US-9622691-B2,H01L,2,5
US-10034624-B2,G06F,1,3
US-9121016-B2,A01N,1,9
US-9182815-B2,G09G,2,4
US-10059084-B2,B27N,1,5
US-10042510-B2,A61B,1,1
US-9636072-B2,G01V,1,3
US-9302085-B2,A61K,4,1
US-9404565-B2,F16H,1,2
US-9415120-B2,A61K,1,4
US-10105167-B2,A61N,1,3
US-10059084-B2,D21H,3,5
US-9649467-B2,A61M,3,3
US-10007422-B2,G06T,4,2
US-9284409-B2,B22F,1,5
US-9585927-B2,A61P,1,2
US-8932208-B2,A61N,1,3
US-9226006-B2,G11B,2,6
US-9332944-B2,A61B,8,4
US-9457510-B2,G07D,1,3
US-9182815-B2,G01B,2,4
US-9518924-B2,G03B,3,4
US-9270639-B2,H04L,3,2
US-9293644-B2,C30B,1,8
US-9399738-B2,B01J,1,2
US-9184581-B2,B60L,2,2
US-9270639-B2,G06F,1,2
US-9233513-B2,G06F,1,1
US-9001770-B2,H04L,5,3
US-9371099-B2,H03M,1,4
US-9311616-B2,G06F,1,1
US-9160809-B2,G06F,2,1
US-9131283-B2,G06Q,1,1
US-9362579-B2,H01M,1,1
US-10105167-B2,A61B,5,3
US-9355294-B2,G01S,1,4
US-9121016-B2,C09D,2,9
US-9121016-B2,A61K,4,9
US-9121016-B2,C12N,5,9
US-9315115-B2,B62M,1,1
US-9121016-B2,C12M,1,9
US-9415120-B2,C12P,1,4
US-9235943-B2,G06F,2,2
US-9100526-B2,G06K,1,5
US-9402981-B2,A61B,3,2
US-9290472-B2,A61K,1,3
US-9575648-B2,G06F,6,4
US-10137283-B2,B29D,1,3
US-9293644-B2,H01S,1,8
US-9044021-B2,F24C,3,4
US-9290472-B2,A61P,1,3
US-10077795-B2,F16B,1,1
US-9202992-B2,H01L,2,3
US-9456204-B2,H04N,2,1
US-9585927-B2,A61K,23,2
US-10067609-B2,G02F,2,2
US-9402981-B2,A61M,4,2
US-9100526-B2,B41J,2,5
US-9447521-B2,H01L,7,2
US-10101801-B2,H04W,1,3
US-9597149-B2,A61M,1,3
US-9293644-B2,B01J,4,8
US-8932208-B2,A61F,1,3
US-9546744-B2,F16B,3,2
US-10060975-B2,G01R,5,2
US-9244073-B2,C07K,2,2
US-9317887-B2,G06F,1,1
US-9207691-B2,H02P,2,1
US-8992024-B2,H04N,1,5
US-9272338-B2,B64F,1,2
US-9347655-B2,H05B,1,5
US-10101801-B2,H04L,1,3
US-10034624-B2,G06Q,1,3
US-9546744-B2,E04B,1,2

2025-01-21 07:01:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:01:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:01:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:01:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 07:01:17 - snowflake.connector.connection - INFO - closed
2025-01-21 07:01:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:01:17 - root - INFO - SQL:
-- Corrected SQL for Query 7:
SELECT t."publication_number", COUNT(*) AS "total_citations"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100
Results:
publication_number,total_citations
US-10144495-B2,4
US-9270639-B2,34
US-10142276-B2,231
US-9100914-B2,7
US-9404543-B2,6
US-9245361-B2,20
US-9160809-B2,230
US-8954157-B2,13
US-9527297-B2,22
US-9562348-B2,8
US-9150564-B2,222
US-9297098-B2,22
US-10136806-B2,10
US-9084483-B2,11
US-10040376-B2,5
US-9534310-B2,16
US-8964230-B2,10
US-9277390-B2,39
US-9291582-B2,2
US-9322880-B2,21
US-9452411-B2,5
US-9650743-B2,23
US-9376833-B2,16
US-9124016-B2,6
US-10070538-B2,22
US-10112826-B2,5
US-8996479-B2,15
US-9143515-B2,15
US-8981843-B2,14
US-9169941-B2,14
US-9499521-B2,303
US-9081290-B2,43
US-8994331-B2,31
US-10078378-B2,4
US-10137049-B2,12
US-10036488-B2,40
US-9279991-B2,22
US-9308847-B2,14
US-9300877-B2,21
US-9474616-B2,144
US-8933524-B2,20
US-9011636-B2,26
US-9146908-B2,20
US-9028637-B2,4
US-9026162-B2,72
US-9302877-B2,12
US-9141212-B2,8
US-9359468-B2,9
US-9483346-B2,134
US-9632295-B2,60
US-9332804-B2,17
US-9025581-B2,162
US-10125499-B2,574
US-10122285-B2,31
US-9276150-B2,20
US-9084785-B2,12
US-9301656-B2,11
US-9434173-B2,8
US-8945273-B2,21
US-9202080-B2,13
US-9394548-B2,13
US-9079868-B2,130
US-9071420-B2,18
US-10047399-B2,30
US-9296093-B2,25
US-10056901-B2,13
US-9143444-B2,46
US-9257174-B2,12
US-9581920-B2,2
US-10089334-B2,7
US-9211492-B2,11
US-8991274-B2,25
US-9277223-B2,12
US-9452153-B2,147
US-9478344-B2,17
US-9157667-B2,17
US-10074804-B2,23
US-9418132-B2,33
US-9467234-B2,4
US-10138044-B2,11
US-10132243-B2,9
US-9252662-B2,22
US-9008057-B2,19
US-9577092-B2,19
US-9068473-B2,18
US-10034007-B2,3
US-9365493-B2,348
US-8986050-B2,11
US-10087640-B2,8
US-9176909-B2,150
US-8955414-B2,13
US-9458215-B2,29
US-9353886-B2,17
US-9310751-B2,21
US-9258696-B2,22
US-9503862-B2,7
US-10015072-B2,5
US-9585927-B2,10
US-10155928-B2,22
US-10134165-B2,13

2025-01-21 07:01:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:01:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:01:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:01:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-21 07:01:19 - snowflake.connector.connection - INFO - closed
2025-01-21 07:01:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:01:19 - root - INFO - SQL:
-- SQL for Query 8 (No correction needed as it doesn't have the error):
SELECT "publication_number", "grant_date"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "country_code" = 'US'
  AND "kind_code" = 'B2'
  AND "grant_date" BETWEEN 20150101 AND 20181231
ORDER BY "grant_date" ASC
LIMIT 100
Results:
publication_number,grant_date
US-8927699-B2,20150106
US-8925849-B2,20150106
US-8926231-B2,20150106
US-8930147-B2,20150106
US-8928823-B2,20150106
US-8930853-B2,20150106
US-8930617-B2,20150106
US-8926908-B2,20150106
US-8929103-B2,20150106
US-8928311-B2,20150106
US-8926651-B2,20150106
US-8930201-B2,20150106
US-8928865-B2,20150106
US-8926208-B2,20150106
US-8929638-B2,20150106
US-8934992-B2,20150113
US-8934781-B2,20150113
US-8932673-B2,20150113
US-8932956-B2,20150113
US-8934933-B2,20150113
US-8935377-B2,20150113
US-8932208-B2,20150113
US-8934621-B2,20150113
US-8935511-B2,20150113
US-8931323-B2,20150113
US-8933524-B2,20150113
US-8933415-B2,20150113
US-8935238-B2,20150113
US-8932532-B2,20150113
US-8938591-B2,20150120
US-8938152-B2,20150120
US-8938247-B2,20150120
US-8939670-B2,20150127
US-8942268-B2,20150127
US-8939137-B2,20150127
US-8942488-B2,20150127
US-8943311-B2,20150127
US-8938935-B2,20150127
US-8942918-B2,20150127
US-8942512-B2,20150127
US-8942653-B2,20150127
US-8942800-B2,20150127
US-8942526-B2,20150127
US-8943157-B2,20150127
US-8942708-B2,20150127
US-8941865-B2,20150127
US-8943342-B2,20150127
US-8947874-B2,20150203
US-8945273-B2,20150203
US-8944640-B2,20150203
US-8949431-B2,20150203
US-8948619-B2,20150203
US-8945898-B2,20150203
US-8946076-B2,20150203
US-8945691-B2,20150203
US-8948635-B2,20150203
US-8943915-B2,20150203
US-8944695-B2,20150203
US-8944512-B2,20150203
US-8948859-B2,20150203
US-8945354-B2,20150203
US-8952559-B2,20150210
US-8952769-B2,20150210
US-8954198-B2,20150210
US-8953723-B2,20150210
US-8951295-B2,20150210
US-8951972-B2,20150210
US-8954157-B2,20150210
US-8953633-B2,20150210
US-8953196-B2,20150210
US-8953160-B2,20150210
US-8951042-B2,20150210
US-8950264-B2,20150210
US-8954747-B2,20150210
US-8955172-B2,20150217
US-8957034-B2,20150217
US-8958489-B2,20150217
US-8956998-B2,20150217
US-8958899-B2,20150217
US-8957501-B2,20150217
US-8957450-B2,20150217
US-8957912-B2,20150217
US-8957947-B2,20150217
US-8955766-B2,20150217
US-8955414-B2,20150217
US-8955748-B2,20150217
US-8956258-B2,20150217
US-8957637-B2,20150217
US-8955530-B2,20150217
US-8962146-B2,20150224
US-8961368-B2,20150224
US-8966077-B2,20150224
US-8964683-B2,20150224
US-8962897-B2,20150224
US-8962445-B2,20150224
US-8961767-B2,20150224
US-8962096-B2,20150224
US-8964230-B2,20150224
US-8961216-B2,20150224
US-8963461-B2,20150224

2025-01-21 07:01:19 - root - INFO - itercount: 0
2025-01-21 07:01:19 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
DDL describes table information.
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
Considered Tables and Columns:

- **Table**: `PATENTS.PATENTS.PUBLICATIONS`

  - `"publication_number"`: To retrieve the publication numbers.
  - `"country_code"`: To filter for US patents.
  - `"kind_code"`: To filter for B2 classification.
  - `"grant_date"`: To select patents granted between 2015 and 2018.
  - `"citation"`: Contains backward citations.
  - `"ipc"`: Contains IPC codes.

Conditions that may be used:

- `"country_code" = 'US'`
- `"kind_code" = 'B2'`
- `"grant_date" BETWEEN 20150101 AND 20181231"`

---

**SQL Queries:**

1. **Retrieve publication numbers of US B2 patents granted between 2015 and 2018:**

   ```sql
   SELECT "publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

2. **List publication numbers and grant dates of relevant patents:**

   ```sql
   SELECT "publication_number", "grant_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

3. **Count total number of US B2 patents granted between 2015 and 2018:**

   ```sql
   SELECT COUNT(*) AS "total_patents"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231;
   ```

4. **Retrieve backward citations for each patent (flattened):**

   ```sql
   SELECT t."publication_number", c.value AS "citation"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

5. **List IPC codes for each patent (flattened):**

   ```sql
   SELECT t."publication_number", ipc.value:"code"::STRING AS "ipc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

6. **Extract 4-digit IPC codes for each patent:**

   ```sql
   SELECT t."publication_number", SUBSTR(ipc.value:"code"::STRING, 1, 4) AS "ipc_4_digit"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

7. **Count the number of backward citations per patent:**

   ```sql
   SELECT t."publication_number", COUNT(c.value) AS "citation_count"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LEFT JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   GROUP BY t."publication_number"
   LIMIT 100;
   ```

8. **Identify unique 4-digit IPC codes from backward citations:**

   ```sql
   SELECT DISTINCT t."publication_number", SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS "cited_ipc_4_digit"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
   JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
   JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited ON TRUE
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

9. **Count unique 4-digit IPC codes cited by each patent:**

   ```sql
   SELECT t."publication_number", COUNT(DISTINCT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)) AS "unique_cited_ipc_count"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
   JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
   JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited ON TRUE
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   GROUP BY t."publication_number"
   LIMIT 100;
   ```

10. **Calculate originality score for patents:**

    ```sql
    SELECT
      t."publication_number",
      1 - SUM(POWER(COUNT(*) OVER (PARTITION BY t."publication_number", ipc_class) / COUNT(*) OVER (PARTITION BY t."publication_number"), 2)) AS "originality_score"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited ON TRUE
    CROSS JOIN LATERAL (SELECT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class) AS ipc_class
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    LIMIT 100;
    ```

11. **Retrieve patents with their originality scores sorted descending:**

    ```sql
    SELECT
      t."publication_number",
      1 - SUM(POWER(COUNT(*) OVER (PARTITION BY t."publication_number", ipc_class) / COUNT(*) OVER (PARTITION BY t."publication_number"), 2)) AS "originality_score"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited ON TRUE
    CROSS JOIN LATERAL (SELECT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class) AS ipc_class
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    ORDER BY "originality_score" DESC
    LIMIT 100;
    ```

12. **Find patents with the highest uniqueness in cited IPC classes:**

    ```sql
    SELECT t."publication_number", COUNT(DISTINCT ipc_class) AS "unique_ipc_classes"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited ON TRUE
    CROSS JOIN LATERAL (SELECT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class) AS ipc_class
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    ORDER BY "unique_ipc_classes" DESC
    LIMIT 100;
    ```

13. **Compute total and per-class citation counts for originality calculation:**

    ```sql
    SELECT
      t."publication_number",
      ipc_class,
      COUNT(*) AS "n_ik",
      COUNT(*) OVER (PARTITION BY t."publication_number") AS "n_i"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited ON TRUE
    CROSS JOIN LATERAL (SELECT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class) AS ipc_class
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number", ipc_class
    LIMIT 100;
    ```

14. **List patents with their total backward citations:**

    ```sql
    SELECT t."publication_number", COUNT(*) AS "total_citations"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    LIMIT 100;
    ```

15. **Retrieve the earliest grant dates among the selected patents:**

    ```sql
    SELECT "publication_number", "grant_date"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE "country_code" = 'US'
      AND "kind_code" = 'B2'
      AND "grant_date" BETWEEN 20150101 AND 20181231
    ORDER BY "grant_date" ASC
    LIMIT 100;
    ```

---

These queries help in understanding the data and extracting the necessary information to calculate the originality scores based on the diversity of 4-digit IPC codes from backward citations.Query:
SELECT "publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
publication_number
US-9096672-B2
US-8975572-B2
US-9345037-B2
US-9416401-B2
US-8968078-B2
US-9297098-B2
US-9311616-B2
US-8938935-B2
US-9126271-B2
US-9086872-B2
US-9358525-B2
US-9393029-B2
US-9426685-B2
US-9352353-B2
US-8987912-B2
US-9098673-B2
US-9041403-B2
US-9008057-B2
US-9029456-B2
US-8973118-B2
US-9387271-B2
US-8941865-B2
US-9216062-B2
US-8972311-B2
US-9102763-B2
US-8953633-B2
US-9048737-B2
US-9047171-B2
US-9114472-B2
US-9244831-B2
US-9334538-B2
US-8962897-B2
US-9231429-B2
US-9283474-B2
US-9051055-B2
US-9254639-B2
US-9153405-B2
US-9548460-B2
US-9259497-B2
US-9389317-B2
US-8953723-B2
US-9308847-B2
US-9063965-B2
US-9040982-B2
US-10082314-B2
US-9288570-B2
US-9115370-B2
US-9238086-B2
US-9557061-B2
US-9360341-B2
US-9466467-B2
US-9461303-B2
US-9286693-B2
US-9310518-B2
US-9279991-B2
US-9442373-B2
US-9150339-B2
US-9494485-B2
US-9563921-B2
US-10084192-B2
US-10106695-B2
US-8992566-B2
US-9232740-B2
US-9026486-B2
US-9346721-B2
US-9104556-B2
US-9187027-B2
US-9288625-B2
US-9462735-B2
US-9288048-B2
US-9522458-B2
US-9219084-B2
US-9387499-B2
US-9175021-B2
US-9240234-B2
US-10002249-B2
US-9133587-B2
US-9481196-B2
US-9485000-B2
US-9278095-B2
US-9509860-B2
US-10075826-B2
US-10018905-B2
US-10143806-B2
US-10017961-B2
US-10153300-B2
US-9462505-B2
US-10105167-B2
US-10018128-B2
US-10060968-B2
US-10040376-B2
US-10162213-B2
US-10052433-B2
US-10051368-B2
US-10047052-B2
US-10065428-B2
US-10110576-B2
US-10109645-B2
US-9292092-B2
US-9619652-B2
Query:
SELECT "publication_number", "grant_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
publication_number,grant_date
US-8942653-B2,20150127
US-9166782-B2,20151020
US-9037990-B2,20150519
US-9008007-B2,20150414
US-9068692-B2,20150630
US-9080562-B2,20150714
US-8944695-B2,20150203
US-9453104-B2,20160927
US-9104711-B2,20150811
US-9362818-B2,20160607
US-10034007-B2,20180724
US-9200186-B2,20151201
US-8984387-B2,20150317
US-8954747-B2,20150210
US-9164153-B2,20151020
US-9438879-B2,20160906
US-10153865-B2,20181211
US-9351806-B2,20160531
US-9072319-B2,20150707
US-8992024-B2,20150331
US-8988175-B2,20150324
US-9038783-B2,20150526
US-8943915-B2,20150203
US-9069544-B2,20150630
US-8948859-B2,20150203
US-9236642-B2,20160112
US-9049991-B2,20150609
US-9393557-B2,20160719
US-9006081-B2,20150414
US-9046276-B2,20150602
US-9297942-B2,20160329
US-9121051-B2,20150901
US-9019050-B2,20150428
US-9405938-B2,20160802
US-9246583-B2,20160126
US-8996516-B2,20150331
US-9009469-B2,20150414
US-8998654-B2,20150407
US-9281167-B2,20160308
US-9181681-B2,20151110
US-9394731-B2,20160719
US-9068384-B2,20150630
US-9082772-B2,20150714
US-9136098-B2,20150915
US-10047399-B2,20180814
US-10098361-B2,20181016
US-9009580-B2,20150414
US-9332944-B2,20160510
US-9413238-B2,20160809
US-9381070-B2,20160705
US-9288404-B2,20160315
US-9546122-B2,20170117
US-9211434-B2,20151215
US-9139000-B2,20150922
US-9019995-B2,20150428
US-9151260-B2,20151006
US-9296093-B2,20160329
US-9197847-B2,20151124
US-9254356-B2,20160209
US-9461623-B2,20161004
US-9315115-B2,20160419
US-9005111-B2,20150414
US-9494095-B2,20161115
US-10111159-B2,20181023
US-9318320-B2,20160419
US-9279853-B2,20160308
US-9410163-B2,20160809
US-10113222-B2,20181030
US-9385307-B2,20160705
US-10057816-B2,20180821
US-9531867-B2,20161227
US-10136234-B2,20181120
US-9563163-B2,20170207
US-10102286-B2,20181016
US-9340464-B2,20160517
US-9454722-B2,20160927
US-10143019-B2,20181127
US-10087640-B2,20181002
US-10058243-B2,20180828
US-10121264-B2,20181106
US-10144609-B2,20181204
US-10036966-B2,20180731
US-10141634-B2,20181127
US-10050072-B2,20180814
US-10056901-B2,20180821
US-10005222-B2,20180626
US-10066347-B2,20180904
US-10153866-B2,20181211
US-9258696-B2,20160209
US-9637570-B2,20170502
US-9056087-B2,20150616
US-9358141-B2,20160607
US-8998077-B2,20150407
US-9175419-B2,20151103
US-8930853-B2,20150106
US-9468034-B2,20161011
US-9079868-B2,20150714
US-9068776-B2,20150630
US-9028724-B2,20150512
US-9005400-B2,20150414
Query:
SELECT COUNT(*) AS "total_patents"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" = 'US'
     AND "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231;
Answer:
total_patents
1549
Query:
SELECT t."publication_number", c.value AS "citation"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
Too long, hard cut:
publication_number,citation
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-5231049-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-5895932-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6404125-B1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6410940-B1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2003087462-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2003142728-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2003152220-A"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""FR-2842832-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6806115-B2"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2005194598-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6995030-B2"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2006099781-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2006208273-A1"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-8163575-B2"",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Akira Sakai, et al., Defect structure in selectively grown GaN films with low threading dislocation density, Appl. Phys. Lett. 71 (16) Oct. 20, 1997."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Akira Usui, et al., Thick GaN Epitaxial Growth with Low Dislocation Density by Hybride Vapor Phase Epitaxy, Japanese J, Phys. vol. 36 (1997) pp. L899-L902, Part 2, No. 7B, Jul. 15, 1997."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Communication dated Sep. 18, 2015, issued by the European Patent Office in corresponding European Application No. 05 777 119.8."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""K. Hiramatsu, \""Fabrication and characterization of low defect density GaN using facet-controlled epitaxial lateral overgrowth (FACELO)\"", Journal of Crystal Growth, Amsterdam, vol. 221, No. 1-4, Dec. 2000, pp. 316-326."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""K. Kusakabe, \""Overgrowth of GaN layer on GaN nano-columns by RF-molecular beam epitaxy\"", Journal of Crystal Growth, Amsterdam. vol. 237-239, Apr. 2002, pp. 988-992."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""APP,APP"",
  ""filing_date"": 0,
  ""npl_text"": ""Kawai et al., \""RF-MBE-ho ni yoru InN no Kessho Seicho to Nano Kozo no Sakusei\"", The Institute of Electronics, Information and Communication Engineers Gijutsu Kenkyu Hokoku, vol. 13, No. 343 (CPM2003 102-116), 2003, pp. 33 to 37."",
  ""publication_number"": """",
  ""type"": """"
}"
US-9362717-B2,"{
  ""application_number"": """",
  ""category"": ""SEA,SEA"",
  ""filing_date"": 0,
  ""npl_text"": ""Kikuchi et al., \""InGaN/GaN Multiple Quantum Disk Nanocolumn Light-Emitting Diodes Grown on (111) Si Substrate\"", Japanese Journal of Applied Physics
Query:
SELECT t."publication_number", ipc.value:"code"::STRING AS "ipc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
publication_number,ipc_code
US-8942653-B2,H04B1/04
US-8942653-B2,H01Q3/30
US-8942653-B2,H01Q21/00
US-8942653-B2,H04B7/06
US-9146908-B2,G06F40/189
US-9146908-B2,G06F19/00
US-9146908-B2,G06F17/30
US-9146908-B2,G06F17/00
US-9146908-B2,G06F40/143
US-8957034-B2,A61K9/16
US-8957034-B2,B82Y5/00
US-8957034-B2,A61K47/48
US-8957034-B2,A61K9/51
US-8957034-B2,A61K9/50
US-8957034-B2,A61K48/00
US-8957034-B2,A61K9/00
US-10156954-B2,G06F17/30
US-10156954-B2,G06F3/048
US-9173903-B2,A61K9/70
US-9173903-B2,A61K9/00
US-9173903-B2,C12N5/02
US-9173903-B2,A61P25/00
US-9173903-B2,A61M1/00
US-9173903-B2,A61K8/02
US-9173903-B2,A61Q19/08
US-9173903-B2,A61P3/10
US-9173903-B2,A61K38/18
US-9173903-B2,A61P9/00
US-9173903-B2,A61P29/00
US-9173903-B2,A61P37/04
US-9173903-B2,A61K39/00
US-9173903-B2,A61P17/02
US-9173903-B2,A61K35/24
US-9173903-B2,A61K35/12
US-9173903-B2,C12N5/07
US-8997953-B2,F16F9/348
US-8997953-B2,F16F9/34
US-9277849-B2,A47L15/00
US-9277849-B2,A47L15/42
US-8989275-B2,H04N19/18
US-8989275-B2,H04N19/102
US-8989275-B2,H04N19/176
US-8989275-B2,H04N19/61
US-8989275-B2,G06T9/00
US-8989275-B2,H04N19/174
US-8989275-B2,H04N19/146
US-8989275-B2,H04N19/12
US-8989275-B2,H04N19/90
US-8989275-B2,H04N19/593
US-8989275-B2,H04N19/46
US-8989275-B2,H04N19/423
US-8989275-B2,H04N19/182
US-8989275-B2,H04N7/12
US-8955172-B2,E03D11/16
US-9115075-B2,C07C67/20
US-9115075-B2,C07C67/31
US-9115075-B2,C07C51/06
US-8945273-B2,C21B13/00
US-9173714-B2,A61B1/32
US-9173714-B2,A61B17/00
US-9173714-B2,A61B19/00
US-9183552-B2,G06Q20/32
US-9183552-B2,G06Q20/36
US-9183552-B2,G06Q20/20
US-9183552-B2,G06Q20/00
US-9147924-B2,H01P5/107
US-9297959-B2,G11B5/00
US-9297959-B2,G02B6/138
US-9297959-B2,G11B5/31
US-9297959-B2,G02B6/136
US-9163563-B2,F16K17/38
US-9163563-B2,F02C9/28
US-9163563-B2,F02C9/26
US-9229575-B2,G06F3/042
US-9229575-B2,G06F3/041
US-8973012-B2,G06N5/00
US-8973012-B2,G06F9/50
US-8973012-B2,G06F9/46
US-8973012-B2,G06F17/30
US-8973012-B2,G06F9/44
US-9464497-B2,E21B33/12
US-9464497-B2,E21B33/035
US-9464497-B2,E21B33/03
US-9464497-B2,E21B33/038
US-9328749-B2,B60G7/00
US-9328749-B2,B62D7/20
US-9328749-B2,F16C7/06
US-9328749-B2,F16B2/06
US-9328749-B2,F16B7/18
US-8939670-B2,A45D40/26
US-8939670-B2,A46B11/00
US-8939670-B2,A46B11/02
US-8939670-B2,A45D34/04
US-9209269-B2,H01L27/12
US-9209269-B2,H01L29/786
US-9209269-B2,H01L21/324
US-9209269-B2,H01L21/285
US-9209269-B2,H01L29/66
US-9209269-B2,H01L29/45
US-9202080-B2,G06F21/62
Query:
SELECT t."publication_number", SUBSTR(ipc.value:"code"::STRING, 1, 4) AS "ipc_4_digit"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc
   WHERE t."country_code" = 'US'
     AND t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
publication_number,ipc_4_digit
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04W
US-9370027-B2,H04L
US-9042351-B2,H04W
US-9042351-B2,H04L
US-9042351-B2,H04B
US-9042351-B2,H04W
US-9042351-B2,H04W
US-9042351-B2,H04W
US-9042351-B2,H04J
US-9042351-B2,H04W
US-8962445-B2,H10B
US-8962445-B2,H01L
US-8962445-B2,H01L
US-8962445-B2,H01L
US-9270639-B2,H04L
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,H04N
US-8938152-B2,H04N
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,H04N
US-8938152-B2,H04N
US-8938152-B2,H04N
US-8938152-B2,G11B
US-8938152-B2,H04N
US-8938152-B2,G11B
US-8938152-B2,G11B
US-8938152-B2,H04N
US-9389656-B2,G06F
US-9389656-B2,H05K
US-9389656-B2,H05K
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9482287-B2,F16D
US-9386020-B2,G06F
US-9386020-B2,G06F
US-9386020-B2,H04L
US-10142276-B2,H04L
US-10142276-B2,G06Q
US-10142276-B2,G06Q
US-10142276-B2,H04N
US-10142276-B2,H04L
US-10142276-B2,H04L
US-9216545-B2,B29C
US-9216545-B2,B33Y
US-9548844-B2,H04L
US-9548844-B2,H04B
US-9548844-B2,H04L
US-9111730-B2,G02B
US-9111730-B2,G02B
US-9111730-B2,B82Y
US-9111730-B2,G02B
US-9111730-B2,G02B
US-9111730-B2,H01J
US-9111730-B2,G02B
US-9340798-B2,A01K
US-9340798-B2,C12N
US-9340798-B2,A61K
US-9340798-B2,A61P
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,A61K
US-9340798-B2,A61K
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9340798-B2,C12N
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9190745-B2,H01R
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04W
US-9380603-B2,H04L
US-9650743-B2,F16J
US-9650743-B2,F16C
Query:
SELECT t."publication_number",
       COALESCE(ARRAY_SIZE(t."citation"), 0) AS "citation_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Answer:
publication_number,citation_count
US-9362717-B2,27
US-9275036-B2,33
US-8974982-B2,30
US-8992882-B2,5
US-9045208-B2,16
US-9067254-B2,138
US-8978724-B2,17
US-9072850-B2,88
US-9115075-B2,9
US-8945273-B2,21
US-9173714-B2,9
US-9183552-B2,42
US-9147924-B2,5
US-9297959-B2,4
US-9163563-B2,5
US-9229575-B2,20
US-8973012-B2,26
US-9464497-B2,23
US-9328749-B2,36
US-8939670-B2,10
US-9209269-B2,14
US-9202080-B2,13
US-8995504-B2,11
US-8984389-B2,35
US-9031134-B2,10
US-9137031-B2,18
US-9228180-B2,29
US-9116317-B2,25
US-9042660-B2,29
US-9034622-B2,23
US-8930147-B2,1
US-9597149-B2,109
US-9060824-B2,6
US-8962096-B2,15
US-9095227-B2,18
US-9266974-B2,36
US-9225092-B2,14
US-9369013-B2,9
US-9414597-B2,8
US-9029140-B2,229
US-9299549-B2,15
US-8944640-B2,15
US-9185094-B2,140
US-9332671-B2,15
US-9033517-B2,9
US-9087697-B2,25
US-9126237-B2,29
US-9202938-B2,3
US-9367503-B2,75
US-9120113-B2,9
US-9218317-B2,9
US-9141121-B2,4
US-8964230-B2,10
US-9404962-B2,3
US-9469815-B2,14
US-9173003-B2,33
US-9557812-B2,23
US-9220860-B2,572
US-8938247-B2,19
US-9127863-B2,8
US-8953196-B2,14
US-9258696-B2,22
US-9637570-B2,39
US-9056087-B2,123
US-9176893-B2,83
US-9037976-B2,55
US-9136162-B2,2
US-9531453-B2,23
US-9584192-B2,13
US-9280023-B2,12
US-8987159-B2,31
US-9370974-B2,37
US-10137186-B2,23
US-9350450-B2,11
US-9264594-B2,24
US-8942268-B2,0
US-10126904-B2,77
US-9167496-B2,16
US-9469348-B2,14
US-9220106-B2,5
US-9372352-B2,31
US-9627183-B2,32
US-9356222-B2,6
US-10045088-B2,44
US-9199445-B2,4
US-9560083-B2,34
US-9447521-B2,508
US-9269629-B2,25
US-9209146-B2,6
US-10059184-B2,29
US-9428407-B2,0
US-9573970-B2,18
US-10137049-B2,12
US-10076341-B2,2
US-9464982-B2,104
US-10036488-B2,40
US-9371099-B2,879
US-9429369-B2,13
US-8952769-B2,11
US-9095517-B2,13
Query:
-- Corrected SQL for Query 1:
SELECT DISTINCT t."publication_number", SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS "cited_ipc_4_digit"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100
Answer:
publication_number,cited_ipc_4_digit
US-9121016-B2,C12M
US-9415120-B2,C12P
US-9235943-B2,G06F
US-9447521-B2,C30B
US-10019265-B2,G06F
US-9384632-B2,A63F
US-10119947-B2,C10L
US-9619652-B2,G06F
US-9619652-B2,G06Q
US-9332944-B2,G06F
US-9464982-B2,C07K
US-9153188-B2,G02F
US-9048913-B2,H01Q
US-9636072-B2,G01T
US-9155586-B2,A61B
US-9044021-B2,F27D
US-9089261-B2,A61B
US-9457510-B2,G09F
US-9347655-B2,G03F
US-10076611-B2,A61M
US-9001770-B2,H04B
US-9526699-B2,C07C
US-9436499-B2,G06F
US-9622691-B2,G06F
US-9185094-B2,G06F
US-9474734-B2,A61K
US-9214830-B2,H01M
US-9410163-B2,C12N
US-9548844-B2,H04J
US-10101801-B2,H04W
US-8932208-B2,A61F
US-9597149-B2,A61M
US-9293644-B2,B01J
US-9447521-B2,H01L
US-9100526-B2,B41J
US-9226006-B2,G11B
US-9293644-B2,C30B
US-9518924-B2,G03B
US-9332944-B2,A61B
US-9457510-B2,G07D
US-9182815-B2,G01B
US-9270639-B2,H04L
US-9371099-B2,G06K
US-9169941-B2,F16K
US-9518924-B2,G01J
US-9293644-B2,F01N
US-9372790-B2,G06F
US-9100526-B2,G03G
US-9399738-B2,B01J
US-9184581-B2,B60L
US-9270639-B2,G06F
US-10059084-B2,B27N
US-10042510-B2,A61B
US-9048913-B2,H03F
US-9448946-B2,G11C
US-9437430-B2,C30B
US-9211498-B2,G08B
US-9235943-B2,H04L
US-10036488-B2,F16L
US-9371099-B2,G08G
US-8984387-B2,G06Q
US-9048913-B2,G01S
US-9646713-B2,H03K
US-10059084-B2,E04B
US-9068247-B2,C22B
US-9173003-B2,H04L
US-9226006-B2,F25D
US-9597149-B2,A61B
US-8967144-B2,A61M
US-9355294-B2,G06F
US-9355294-B2,G06K
US-10105167-B2,A61F
US-8932208-B2,A61B
US-9636072-B2,G06T
US-9474734-B2,A61P
US-9622691-B2,G01N
US-9044021-B2,A47J
US-9001770-B2,H04W
US-10101801-B2,G06F
US-9437430-B2,H01L
US-9153188-B2,G09G
US-10137283-B2,A61F
US-9100526-B2,G06F
US-9622691-B2,A61B
US-9173003-B2,H04N
US-10119947-B2,C12P
US-9284409-B2,B22F
US-9585927-B2,A61P
US-8932208-B2,A61N
US-10007422-B2,G06T
US-10060975-B2,G01D
US-8992024-B2,G09F
US-9522312-B2,B23K
US-9415120-B2,C12R
US-8954157-B2,A61N
US-9142476-B2,H01L
US-9048913-B2,H04B
US-9548844-B2,H04B
US-9293644-B2,H01L
US-8984387-B2,G06F
Query:
-- Corrected SQL for Query 2:
SELECT t."publication_number", COUNT(DISTINCT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)) AS "unique_cited_ipc_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100
Answer:
publication_number,unique_cited_ipc_count
US-9068247-B2,1
US-9585927-B2,2
US-9207691-B2,1
US-9293644-B2,8
US-9173003-B2,3
US-9175419-B2,2
US-10034624-B2,3
US-9362579-B2,1
US-9436499-B2,1
US-9211498-B2,2
US-9404565-B2,2
US-10100810-B2,1
US-9155586-B2,1
US-9622691-B2,5
US-9636072-B2,3
US-9447521-B2,2
US-9200186-B2,1
US-9197224-B2,1
US-9212846-B2,1
US-9151260-B2,1
US-9402981-B2,2
US-8984387-B2,2
US-10076611-B2,2
US-10017537-B2,2
US-9399738-B2,2
US-9121016-B2,9
US-9437430-B2,2
US-10077795-B2,1
US-9184581-B2,2
US-9235943-B2,2
US-9290472-B2,3
US-8992024-B2,5
US-9410163-B2,1
US-9100526-B2,5
US-9448946-B2,2
US-9185094-B2,2
US-9384632-B2,2
US-9182815-B2,4
US-9131283-B2,1
US-9548844-B2,2
US-10060975-B2,2
US-9233513-B2,1
US-10101801-B2,3
US-10139262-B2,1
US-8954157-B2,2
US-9270639-B2,2
US-9160809-B2,1
US-9244073-B2,2
US-9457510-B2,3
US-9355294-B2,4
US-9284409-B2,5
US-9518924-B2,4
US-9372790-B2,1
US-9089261-B2,1
US-10141118-B2,2
US-9214830-B2,1
US-10042510-B2,1
US-9169941-B2,2
US-10036488-B2,1
US-9202992-B2,3
US-9311616-B2,1
US-10137283-B2,3
US-9464982-B2,1
US-9332944-B2,4
US-9526699-B2,1
US-9546744-B2,2
US-9306600-B2,1
US-9048913-B2,4
US-9415120-B2,4
US-9044021-B2,4
US-9575648-B2,4
US-9597149-B2,3
US-9117791-B2,1
US-9067254-B2,1
US-9564199-B2,1
US-10037903-B2,1
US-10007422-B2,2
US-10107583-B2,2
US-10105167-B2,3
US-9302085-B2,1
US-9371099-B2,4
US-9474734-B2,2
US-9522312-B2,2
US-9142476-B2,1
US-9347655-B2,5
US-10059084-B2,5
US-9315115-B2,1
US-8986850-B2,1
US-9226006-B2,6
US-9456204-B2,1
US-10130893-B2,1
US-10010405-B2,1
US-9291935-B2,1
US-9551731-B2,1
US-9649467-B2,3
US-10019265-B2,1
US-9317887-B2,1
US-10067609-B2,2
US-9646713-B2,1
US-9619652-B2,2
Query:
SELECT
  sub."publication_number",
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
FROM (
  SELECT
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
    COUNT(*) AS n_ik,
    SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  JOIN PATENTS.PATENTS.PUBLICATIONS cited
    ON c.value:"publication_number"::STRING = cited."publication_number"
  CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
  WHERE t."country_code" = 'US'
    AND t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
) sub
GROUP BY sub."publication_number"
LIMIT 100;
Answer:
publication_number,originality_score
US-9585927-B2,0.07986172222199994
US-9068247-B2,0.0
US-9207691-B2,0.0
US-9202992-B2,0.625
US-9311616-B2,0.0
US-10017537-B2,0.5
US-9399738-B2,0.5
US-9448946-B2,0.444444222222
US-9182815-B2,0.740741259259
US-9384632-B2,0.444444222222
US-9185094-B2,0.31999999999999984
US-8984387-B2,0.31999999999999984
US-9410163-B2,0.0
US-9100526-B2,0.7777775555549999
US-8992024-B2,0.7999999999999999
US-9290472-B2,0.625
US-9293644-B2,0.781163301938
US-9211498-B2,0.5
US-9175419-B2,0.49382706172799995
US-9173003-B2,0.5714282857140001
US-10034624-B2,0.5599999999999999
US-9436499-B2,0.0
US-9404565-B2,0.5
US-9362579-B2,0.0
US-10100810-B2,0.0
US-9155586-B2,0.0
US-10141118-B2,0.5
US-10077795-B2,0.0
US-9184581-B2,0.444444222222
US-9548844-B2,0.5
US-10060975-B2,0.277778222222
US-9153188-B2,0.625
US-9546744-B2,0.375
US-8967144-B2,0.0
US-9646713-B2,0.0
US-9619652-B2,0.5
US-9272338-B2,0.5
US-9622691-B2,0.6982254556209999
US-9430016-B2,0.0
US-9456204-B2,0.0
US-9226006-B2,0.4850000000000001
US-10130893-B2,0.0
US-10010405-B2,0.0
US-9284409-B2,0.694215487603
US-9518924-B2,0.693878163265
US-10105167-B2,0.567900987654
US-10107583-B2,0.5
US-10007422-B2,0.48979579591800004
US-9636072-B2,0.6399999999999999
US-9212846-B2,0.0
US-10042510-B2,0.0
US-9214830-B2,0.0
US-8954157-B2,0.5
US-9270639-B2,0.375
US-9160809-B2,0.0
US-9244073-B2,0.444444222222
US-9457510-B2,0.666667333333
US-9597149-B2,0.666667333333
US-9575648-B2,0.58
US-9117791-B2,0.0
US-9447521-B2,0.21875
US-9332944-B2,0.5680469704140001
US-9526699-B2,0.0
US-9233513-B2,0.0
US-9402981-B2,0.48979579591800004
US-9151260-B2,0.0
US-9169941-B2,0.444444222222
US-10036488-B2,0.0
US-9235943-B2,0.444444222222
US-10137283-B2,0.666667333333
US-9464982-B2,0.0
US-10076611-B2,0.444444222222
US-9089261-B2,0.0
US-9197224-B2,0.0
US-9200186-B2,0.0
US-9306600-B2,0.0
US-9347655-B2,0.721894047337
US-10059084-B2,0.740741259259
US-9315115-B2,0.0
US-8986850-B2,0.0
US-9121016-B2,0.836564903046
US-9437430-B2,0.21875
US-9551731-B2,0.0
US-9291935-B2,0.0
US-9317887-B2,0.0
US-9649467-B2,0.611111222222
US-10019265-B2,0.0
US-9564199-B2,0.0
US-10037903-B2,0.0
US-9067254-B2,0.0
US-9131283-B2,0.0
US-10139262-B2,0.0
US-10101801-B2,0.4489792653060001
US-9048913-B2,0.6172836049379999
US-9415120-B2,0.65625
US-9044021-B2,0.71875
US-9355294-B2,0.72
US-10067609-B2,0.5
US-9372790-B2,0.0
US-9474734-B2,0.31999999999999984
Query:
-- Corrected SQL for Query 4:
SELECT
  sub."publication_number",
  1 - SUM(POWER(sub.n_ik * 1.0 / sub.n_i, 2)) AS "originality_score"
FROM (
  SELECT
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
    COUNT(*) AS n_ik,
    SUM(COUNT(*)) OVER (PARTITION BY t."publication_number") AS n_i
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  JOIN PATENTS.PATENTS.PUBLICATIONS cited
    ON c.value:"publication_number"::STRING = cited."publication_number"
  CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
  WHERE t."country_code" = 'US'
    AND t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
) sub
GROUP BY sub."publication_number"
ORDER BY "originality_score" DESC
LIMIT 100
Answer:
publication_number,originality_score
US-9121016-B2,0.8365649030460001
US-8992024-B2,0.7999999999999999
US-9293644-B2,0.781163301938
US-9100526-B2,0.7777775555549999
US-10059084-B2,0.740741259259
US-9182815-B2,0.740741259259
US-9347655-B2,0.721894047337
US-9355294-B2,0.72
US-9044021-B2,0.71875
US-9622691-B2,0.6982254556209999
US-9284409-B2,0.694215487603
US-9518924-B2,0.693878163265
US-9457510-B2,0.666667333333
US-9597149-B2,0.666667333333
US-10137283-B2,0.666667333333
US-9415120-B2,0.65625
US-9636072-B2,0.6399999999999999
US-9153188-B2,0.625
US-9202992-B2,0.625
US-9290472-B2,0.625
US-9048913-B2,0.6172836049379999
US-10119947-B2,0.611111222222
US-9649467-B2,0.611111222222
US-9575648-B2,0.58
US-9173003-B2,0.5714282857140001
US-9332944-B2,0.5680469704140001
US-10105167-B2,0.567900987654
US-10034624-B2,0.5599999999999999
US-9001770-B2,0.556212828402
US-9548844-B2,0.5
US-10141118-B2,0.5
US-9399738-B2,0.5
US-8954157-B2,0.5
US-10017537-B2,0.5
US-9404565-B2,0.5
US-9211498-B2,0.5
US-10067609-B2,0.5
US-9272338-B2,0.5
US-9619652-B2,0.5
US-10107583-B2,0.5
US-8932208-B2,0.49999933333299995
US-9175419-B2,0.49382706172799995
US-9402981-B2,0.48979579591800004
US-10007422-B2,0.48979579591800004
US-9226006-B2,0.4850000000000001
US-10101801-B2,0.4489792653060001
US-9384632-B2,0.444444222222
US-9448946-B2,0.444444222222
US-9235943-B2,0.444444222222
US-9169941-B2,0.444444222222
US-9522312-B2,0.444444222222
US-10076611-B2,0.444444222222
US-9184581-B2,0.444444222222
US-9244073-B2,0.444444222222
US-9371099-B2,0.390532224852
US-9270639-B2,0.375
US-9546744-B2,0.375
US-9474734-B2,0.31999999999999984
US-8984387-B2,0.31999999999999984
US-9185094-B2,0.31999999999999984
US-10060975-B2,0.277778222222
US-9437430-B2,0.21875
US-9447521-B2,0.21875
US-9585927-B2,0.07986172222199994
US-9410163-B2,0.0
US-9089261-B2,0.0
US-9306600-B2,0.0
US-9302085-B2,0.0
US-9220860-B2,0.0
US-10010405-B2,0.0
US-9131283-B2,0.0
US-10130893-B2,0.0
US-9207691-B2,0.0
US-9068247-B2,0.0
US-10019265-B2,0.0
US-9317887-B2,0.0
US-9551731-B2,0.0
US-9564199-B2,0.0
US-9067254-B2,0.0
US-9233513-B2,0.0
US-9291935-B2,0.0
US-10037903-B2,0.0
US-9526699-B2,0.0
US-9372790-B2,0.0
US-9197224-B2,0.0
US-9200186-B2,0.0
US-9117791-B2,0.0
US-10042510-B2,0.0
US-9151260-B2,0.0
US-9456204-B2,0.0
US-9315115-B2,0.0
US-9212846-B2,0.0
US-9436499-B2,0.0
US-9362579-B2,0.0
US-9214830-B2,0.0
US-9155586-B2,0.0
US-9160809-B2,0.0
US-10100810-B2,0.0
US-9464982-B2,0.0
US-10077795-B2,0.0
Query:
-- Corrected SQL for Query 5:
SELECT t."publication_number", COUNT(DISTINCT SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)) AS "unique_ipc_classes"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
ORDER BY "unique_ipc_classes" DESC
LIMIT 100
Answer:
publication_number,unique_ipc_classes
US-9121016-B2,9
US-9293644-B2,8
US-9226006-B2,6
US-8992024-B2,5
US-9347655-B2,5
US-9100526-B2,5
US-10059084-B2,5
US-9622691-B2,5
US-9284409-B2,5
US-9575648-B2,4
US-9355294-B2,4
US-9332944-B2,4
US-9415120-B2,4
US-9518924-B2,4
US-9048913-B2,4
US-9371099-B2,4
US-9044021-B2,4
US-9182815-B2,4
US-9001770-B2,3
US-10119947-B2,3
US-10034624-B2,3
US-9597149-B2,3
US-9457510-B2,3
US-8932208-B2,3
US-9202992-B2,3
US-10105167-B2,3
US-9636072-B2,3
US-9173003-B2,3
US-10137283-B2,3
US-10101801-B2,3
US-9290472-B2,3
US-9649467-B2,3
US-9153188-B2,3
US-9270639-B2,2
US-10007422-B2,2
US-9235943-B2,2
US-9402981-B2,2
US-9175419-B2,2
US-9404565-B2,2
US-9211498-B2,2
US-10017537-B2,2
US-9399738-B2,2
US-9184581-B2,2
US-9585927-B2,2
US-10107583-B2,2
US-9244073-B2,2
US-9169941-B2,2
US-10067609-B2,2
US-9474734-B2,2
US-10060975-B2,2
US-8954157-B2,2
US-9522312-B2,2
US-9447521-B2,2
US-10076611-B2,2
US-9437430-B2,2
US-8984387-B2,2
US-9448946-B2,2
US-9185094-B2,2
US-9619652-B2,2
US-9272338-B2,2
US-10141118-B2,2
US-9548844-B2,2
US-9384632-B2,2
US-9546744-B2,2
US-9233513-B2,1
US-9212846-B2,1
US-9151260-B2,1
US-9564199-B2,1
US-9464982-B2,1
US-9197224-B2,1
US-9362579-B2,1
US-9436499-B2,1
US-9200186-B2,1
US-10037903-B2,1
US-10077795-B2,1
US-9456204-B2,1
US-9067254-B2,1
US-8986850-B2,1
US-9315115-B2,1
US-9117791-B2,1
US-10010405-B2,1
US-10130893-B2,1
US-9220860-B2,1
US-9214830-B2,1
US-10042510-B2,1
US-9311616-B2,1
US-9372790-B2,1
US-9410163-B2,1
US-9306600-B2,1
US-9068247-B2,1
US-9160809-B2,1
US-9302085-B2,1
US-9526699-B2,1
US-9089261-B2,1
US-9131283-B2,1
US-8967144-B2,1
US-9646713-B2,1
US-9155586-B2,1
US-10100810-B2,1
US-9430016-B2,1
Query:
-- Corrected SQL for Query 6:
SELECT
  t."publication_number",
  SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS ipc_class,
  COUNT(*) AS "n_ik",
  COUNT(*) OVER (PARTITION BY t."publication_number") AS "n_i"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
JOIN PATENTS.PATENTS.PUBLICATIONS cited
  ON c.value:"publication_number"::STRING = cited."publication_number"
CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number", SUBSTR(ipc_cited.value:"code"::STRING, 1, 4)
LIMIT 100
Answer:
publication_number,IPC_CLASS,n_ik,n_i
US-9226006-B2,H04N,28,6
US-9202992-B2,B23K,1,3
US-9384632-B2,G07F,1,2
US-9347655-B2,G06K,2,5
US-9001770-B2,H04B,1,3
US-9526699-B2,C07C,1,1
US-9436499-B2,G06F,4,1
US-9185094-B2,G06F,4,2
US-10076611-B2,A61M,1,2
US-9622691-B2,G06F,1,5
US-10105167-B2,A61F,3,3
US-8932208-B2,A61B,4,3
US-8967144-B2,A61M,4,1
US-9355294-B2,G06F,2,4
US-9355294-B2,G06K,1,4
US-9214830-B2,H01M,6,1
US-9474734-B2,A61K,4,2
US-9548844-B2,H04J,1,2
US-9410163-B2,C12N,3,1
US-9048913-B2,G01S,1,4
US-8984387-B2,G06Q,4,2
US-9371099-B2,G08G,1,4
US-9575648-B2,A61B,1,4
US-8984387-B2,G06F,1,2
US-9293644-B2,H01L,7,8
US-10137283-B2,A61L,1,3
US-9622691-B2,H01L,2,5
US-10034624-B2,G06F,1,3
US-9121016-B2,A01N,1,9
US-9182815-B2,G09G,2,4
US-10059084-B2,B27N,1,5
US-10042510-B2,A61B,1,1
US-9636072-B2,G01V,1,3
US-9302085-B2,A61K,4,1
US-9404565-B2,F16H,1,2
US-9415120-B2,A61K,1,4
US-10105167-B2,A61N,1,3
US-10059084-B2,D21H,3,5
US-9649467-B2,A61M,3,3
US-10007422-B2,G06T,4,2
US-9284409-B2,B22F,1,5
US-9585927-B2,A61P,1,2
US-8932208-B2,A61N,1,3
US-9226006-B2,G11B,2,6
US-9332944-B2,A61B,8,4
US-9457510-B2,G07D,1,3
US-9182815-B2,G01B,2,4
US-9518924-B2,G03B,3,4
US-9270639-B2,H04L,3,2
US-9293644-B2,C30B,1,8
US-9399738-B2,B01J,1,2
US-9184581-B2,B60L,2,2
US-9270639-B2,G06F,1,2
US-9233513-B2,G06F,1,1
US-9001770-B2,H04L,5,3
US-9371099-B2,H03M,1,4
US-9311616-B2,G06F,1,1
US-9160809-B2,G06F,2,1
US-9131283-B2,G06Q,1,1
US-9362579-B2,H01M,1,1
US-10105167-B2,A61B,5,3
US-9355294-B2,G01S,1,4
US-9121016-B2,C09D,2,9
US-9121016-B2,A61K,4,9
US-9121016-B2,C12N,5,9
US-9315115-B2,B62M,1,1
US-9121016-B2,C12M,1,9
US-9415120-B2,C12P,1,4
US-9235943-B2,G06F,2,2
US-9100526-B2,G06K,1,5
US-9402981-B2,A61B,3,2
US-9290472-B2,A61K,1,3
US-9575648-B2,G06F,6,4
US-10137283-B2,B29D,1,3
US-9293644-B2,H01S,1,8
US-9044021-B2,F24C,3,4
US-9290472-B2,A61P,1,3
US-10077795-B2,F16B,1,1
US-9202992-B2,H01L,2,3
US-9456204-B2,H04N,2,1
US-9585927-B2,A61K,23,2
US-10067609-B2,G02F,2,2
US-9402981-B2,A61M,4,2
US-9100526-B2,B41J,2,5
US-9447521-B2,H01L,7,2
US-10101801-B2,H04W,1,3
US-9597149-B2,A61M,1,3
US-9293644-B2,B01J,4,8
US-8932208-B2,A61F,1,3
US-9546744-B2,F16B,3,2
US-10060975-B2,G01R,5,2
US-9244073-B2,C07K,2,2
US-9317887-B2,G06F,1,1
US-9207691-B2,H02P,2,1
US-8992024-B2,H04N,1,5
US-9272338-B2,B64F,1,2
US-9347655-B2,H05B,1,5
US-10101801-B2,H04L,1,3
US-10034624-B2,G06Q,1,3
US-9546744-B2,E04B,1,2
Query:
-- Corrected SQL for Query 7:
SELECT t."publication_number", COUNT(*) AS "total_citations"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
WHERE t."country_code" = 'US'
  AND t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100
Answer:
publication_number,total_citations
US-10144495-B2,4
US-9270639-B2,34
US-10142276-B2,231
US-9100914-B2,7
US-9404543-B2,6
US-9245361-B2,20
US-9160809-B2,230
US-8954157-B2,13
US-9527297-B2,22
US-9562348-B2,8
US-9150564-B2,222
US-9297098-B2,22
US-10136806-B2,10
US-9084483-B2,11
US-10040376-B2,5
US-9534310-B2,16
US-8964230-B2,10
US-9277390-B2,39
US-9291582-B2,2
US-9322880-B2,21
US-9452411-B2,5
US-9650743-B2,23
US-9376833-B2,16
US-9124016-B2,6
US-10070538-B2,22
US-10112826-B2,5
US-8996479-B2,15
US-9143515-B2,15
US-8981843-B2,14
US-9169941-B2,14
US-9499521-B2,303
US-9081290-B2,43
US-8994331-B2,31
US-10078378-B2,4
US-10137049-B2,12
US-10036488-B2,40
US-9279991-B2,22
US-9308847-B2,14
US-9300877-B2,21
US-9474616-B2,144
US-8933524-B2,20
US-9011636-B2,26
US-9146908-B2,20
US-9028637-B2,4
US-9026162-B2,72
US-9302877-B2,12
US-9141212-B2,8
US-9359468-B2,9
US-9483346-B2,134
US-9632295-B2,60
US-9332804-B2,17
US-9025581-B2,162
US-10125499-B2,574
US-10122285-B2,31
US-9276150-B2,20
US-9084785-B2,12
US-9301656-B2,11
US-9434173-B2,8
US-8945273-B2,21
US-9202080-B2,13
US-9394548-B2,13
US-9079868-B2,130
US-9071420-B2,18
US-10047399-B2,30
US-9296093-B2,25
US-10056901-B2,13
US-9143444-B2,46
US-9257174-B2,12
US-9581920-B2,2
US-10089334-B2,7
US-9211492-B2,11
US-8991274-B2,25
US-9277223-B2,12
US-9452153-B2,147
US-9478344-B2,17
US-9157667-B2,17
US-10074804-B2,23
US-9418132-B2,33
US-9467234-B2,4
US-10138044-B2,11
US-10132243-B2,9
US-9252662-B2,22
US-9008057-B2,19
US-9577092-B2,19
US-9068473-B2,18
US-10034007-B2,3
US-9365493-B2,348
US-8986050-B2,11
US-10087640-B2,8
US-9176909-B2,150
US-8955414-B2,13
US-9458215-B2,29
US-9353886-B2,17
US-9310751-B2,21
US-9258696-B2,22
US-9503862-B2,7
US-10015072-B2,5
US-9585927-B2,10
US-10155928-B2,22
US-10134165-B2,13
Query:
-- SQL for Query 8 (No correction needed as it doesn't have the error):
SELECT "publication_number", "grant_date"
FROM PATENTS.PATENTS.PUBLICATIONS
WHERE "country_code" = 'US'
  AND "kind_code" = 'B2'
  AND "grant_date" BETWEEN 20150101 AND 20181231
ORDER BY "grant_date" ASC
LIMIT 100
Answer:
publication_number,grant_date
US-8927699-B2,20150106
US-8925849-B2,20150106
US-8926231-B2,20150106
US-8930147-B2,20150106
US-8928823-B2,20150106
US-8930853-B2,20150106
US-8930617-B2,20150106
US-8926908-B2,20150106
US-8929103-B2,20150106
US-8928311-B2,20150106
US-8926651-B2,20150106
US-8930201-B2,20150106
US-8928865-B2,20150106
US-8926208-B2,20150106
US-8929638-B2,20150106
US-8934992-B2,20150113
US-8934781-B2,20150113
US-8932673-B2,20150113
US-8932956-B2,20150113
US-8934933-B2,20150113
US-8935377-B2,20150113
US-8932208-B2,20150113
US-8934621-B2,20150113
US-8935511-B2,20150113
US-8931323-B2,20150113
US-8933524-B2,20150113
US-8933415-B2,20150113
US-8935238-B2,20150113
US-8932532-B2,20150113
US-8938591-B2,20150120
US-8938152-B2,20150120
US-8938247-B2,20150120
US-8939670-B2,20150127
US-8942268-B2,20150127
US-8939137-B2,20150127
US-8942488-B2,20150127
US-8943311-B2,20150127
US-8938935-B2,20150127
US-8942918-B2,20150127
US-8942512-B2,20150127
US-8942653-B2,20150127
US-8942800-B2,20150127
US-8942526-B2,20150127
US-8943157-B2,20150127
US-8942708-B2,20150127
US-8941865-B2,20150127
US-8943342-B2,20150127
US-8947874-B2,20150203
US-8945273-B2,20150203
US-8944640-B2,20150203
US-8949431-B2,20150203
US-8948619-B2,20150203
US-8945898-B2,20150203
US-8946076-B2,20150203
US-8945691-B2,20150203
US-8948635-B2,20150203
US-8943915-B2,20150203
US-8944695-B2,20150203
US-8944512-B2,20150203
US-8948859-B2,20150203
US-8945354-B2,20150203
US-8952559-B2,20150210
US-8952769-B2,20150210
US-8954198-B2,20150210
US-8953723-B2,20150210
US-8951295-B2,20150210
US-8951972-B2,20150210
US-8954157-B2,20150210
US-8953633-B2,20150210
US-8953196-B2,20150210
US-8953160-B2,20150210
US-8951042-B2,20150210
US-8950264-B2,20150210
US-8954747-B2,20150210
US-8955172-B2,20150217
US-8957034-B2,20150217
US-8958489-B2,20150217
US-8956998-B2,20150217
US-8958899-B2,20150217
US-8957501-B2,20150217
US-8957450-B2,20150217
US-8957912-B2,20150217
US-8957947-B2,20150217
US-8955766-B2,20150217
US-8955414-B2,20150217
US-8955748-B2,20150217
US-8956258-B2,20150217
US-8957637-B2,20150217
US-8955530-B2,20150217
US-8962146-B2,20150224
US-8961368-B2,20150224
US-8966077-B2,20150224
US-8964683-B2,20150224
US-8962897-B2,20150224
US-8962445-B2,20150224
US-8961767-B2,20150224
US-8962096-B2,20150224
US-8964230-B2,20150224
US-8961216-B2,20150224
US-8963461-B2,20150224
End Exploring Related Columns
Task: What is the publication number of US patent under the B2 classification granted during 2015 to 2018, with the highest originality score based on the diversity of 4-digits IPC codes from its backward citations?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
publication_number
[str]
(Attention: answer in one row)
```

To find the US patent under the B2 classification granted during 2015 to 2018 with the highest originality score based on the diversity of 4-digit IPC codes from its backward citations, we need to:

1. **Select Relevant Patents**: Identify all patents in the `PUBLICATIONS` table with `country_code` equal to 'US', `kind_code` equal to 'B2', and `grant_date` between 2015 and 2018.

2. **Gather Backward Citations**: For each selected patent, retrieve all its backward citations from the citations data.

3. **Extract IPC Codes**: For each backward citation, extract the 4-digit IPC codes from the `ipc` field.

4. **Calculate Originality Score**:
   
   - **Total Citations (\( n_i \))**: Count the total number of backward citations for each patent.
   
   - **Citations per IPC Class (\( n_{ik} \))**: Count the number of backward citations in each 4-digit IPC class.
   
   - **Compute Originality**:

     \[
     \text{Originality}_i = 1 - \sum_{k} \left( \frac{n_{ik}}{n_i} \right)^2
     \]

     - A higher originality score indicates that a patent cites prior art across a more diverse set of IPC classes.

5. **Find the Patent with Highest Originality**: Compare the originality scores and identify the patent with the highest score.

Since we do not have access to the actual data, the specific `publication_number` cannot be provided here. The format above represents the required output..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-21 07:02:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 07:02:00 - root - INFO - ```sql
WITH citation_ipc AS (
    SELECT
        t."publication_number",
        SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS "ipc_class"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    CROSS JOIN LATERAL FLATTEN(input => t."citation") c
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
),
counts AS (
    SELECT
        "publication_number",
        "ipc_class",
        COUNT(*) AS n_ik
    FROM citation_ipc
    GROUP BY "publication_number", "ipc_class"
),
total_counts AS (
    SELECT
        "publication_number",
        SUM(n_ik) AS n_i
    FROM counts
    GROUP BY "publication_number"
),
originality_calc AS (
    SELECT
        c."publication_number",
        1 - SUM(POWER(c.n_ik * 1.0 / t.n_i, 2)) AS "originality_score"
    FROM counts c
    JOIN total_counts t ON c."publication_number" = t."publication_number"
    GROUP BY c."publication_number"
)
SELECT "publication_number"
FROM originality_calc
ORDER BY "originality_score" DESC NULLS LAST
LIMIT 1;
```
2025-01-21 07:02:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:02:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:02:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:02:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-21 07:02:01 - snowflake.connector.connection - INFO - closed
2025-01-21 07:02:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:02:02 - root - INFO - itercount: 1
2025-01-21 07:02:02 - root - INFO - 0
2025-01-21 07:02:02 - root - INFO - results: 
publication_number
US-9121016-B2


2025-01-21 07:02:02 - root - INFO - Please check the answer again by reviewing What is the publication number of US patent under the B2 classification granted during 2015 to 2018, with the highest originality score based on the diversity of 4-digits IPC codes from its backward citations?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number
[str]
(Attention: answer in one row)
```

To find the US patent under the B2 classification granted during 2015 to 2018 with the highest originality score based on the diversity of 4-digit IPC codes from its backward citations, we need to:

1. **Select Relevant Patents**: Identify all patents in the `PUBLICATIONS` table with `country_code` equal to 'US', `kind_code` equal to 'B2', and `grant_date` between 2015 and 2018.

2. **Gather Backward Citations**: For each selected patent, retrieve all its backward citations from the citations data.

3. **Extract IPC Codes**: For each backward citation, extract the 4-digit IPC codes from the `ipc` field.

4. **Calculate Originality Score**:
   
   - **Total Citations (\( n_i \))**: Count the total number of backward citations for each patent.
   
   - **Citations per IPC Class (\( n_{ik} \))**: Count the number of backward citations in each 4-digit IPC class.
   
   - **Compute Originality**:

     \[
     \text{Originality}_i = 1 - \sum_{k} \left( \frac{n_{ik}}{n_i} \right)^2
     \]

     - A higher originality score indicates that a patent cites prior art across a more diverse set of IPC classes.

5. **Find the Patent with Highest Originality**: Compare the originality scores and identify the patent with the highest score.

Since we do not have access to the actual data, the specific `publication_number` cannot be provided here. The format above represents the required output. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number
US-9121016-B2
Current sql:
WITH citation_ipc AS (
    SELECT
        t."publication_number",
        SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS "ipc_class"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    CROSS JOIN LATERAL FLATTEN(input => t."citation") c
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
),
counts AS (
    SELECT
        "publication_number",
        "ipc_class",
        COUNT(*) AS n_ik
    FROM citation_ipc
    GROUP BY "publication_number", "ipc_class"
),
total_counts AS (
    SELECT
        "publication_number",
        SUM(n_ik) AS n_i
    FROM counts
    GROUP BY "publication_number"
),
originality_calc AS (
    SELECT
        c."publication_number",
        1 - SUM(POWER(c.n_ik * 1.0 / t.n_i, 2)) AS "originality_score"
    FROM counts c
    JOIN total_counts t ON c."publication_number" = t."publication_number"
    GROUP BY c."publication_number"
)
SELECT "publication_number"
FROM originality_calc
ORDER BY "originality_score" DESC NULLS LAST
LIMIT 1;
2025-01-21 07:02:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-21 07:02:40 - root - INFO - ```sql
WITH citation_ipc AS (
    SELECT
        t."publication_number",
        SUBSTR(ipc_cited.value:"code"::STRING, 1, 4) AS "ipc_class"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    CROSS JOIN LATERAL FLATTEN(input => t."citation") c
    JOIN PATENTS.PATENTS.PUBLICATIONS cited ON c.value:"publication_number"::STRING = cited."publication_number"
    CROSS JOIN LATERAL FLATTEN(input => cited."ipc") ipc_cited
    WHERE t."country_code" = 'US'
      AND t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
),
counts AS (
    SELECT
        "publication_number",
        "ipc_class",
        COUNT(*) AS n_ik
    FROM citation_ipc
    GROUP BY "publication_number", "ipc_class"
),
total_counts AS (
    SELECT
        "publication_number",
        SUM(n_ik) AS n_i
    FROM counts
    GROUP BY "publication_number"
),
originality_calc AS (
    SELECT
        c."publication_number",
        ROUND(1 - SUM(POWER(c.n_ik * 1.0 / t.n_i, 2)), 4) AS "originality_score"
    FROM counts c
    JOIN total_counts t ON c."publication_number" = t."publication_number"
    GROUP BY c."publication_number"
)
SELECT "publication_number"
FROM originality_calc
ORDER BY "originality_score" DESC NULLS LAST
LIMIT 1;
```
2025-01-21 07:02:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-21 07:02:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-21 07:02:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-21 07:02:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-21 07:02:42 - snowflake.connector.connection - INFO - closed
2025-01-21 07:02:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-21 07:02:42 - root - INFO - itercount: 2
2025-01-21 07:02:42 - root - INFO - 0
2025-01-21 07:02:42 - root - INFO - Total iteration counts: 2
