2025-01-25 11:48:23 - openai._base_client - INFO - Retrying request to /chat/completions in 0.442021 seconds
2025-01-25 11:49:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:09 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:09 - root - INFO - SQL:
SELECT "station_name", "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   LIMIT 100;
Results:
station_name,borough_name
Astoria - Ditmars Blvd,Queens
Astoria Blvd,Queens
30 Av,Queens
Broadway,Queens
36 Av,Queens
39 Av,Queens
Lexington Av/59 St,Manhattan
5 Av/59 St,Manhattan
57 St - 7 Av,Manhattan
49 St,Manhattan
Times Sq - 42 St,Manhattan
34 St - Herald Sq,Manhattan
28 St,Manhattan
23 St,Manhattan
14 St - Union Sq,Manhattan
8 St - NYU,Manhattan
Prince St,Manhattan
Canal St,Manhattan
Canal St,Manhattan
City Hall,Manhattan
Cortlandt St,Manhattan
Rector St,Manhattan
Whitehall St,Manhattan
Court St,Brooklyn
Jay St - MetroTech,Brooklyn
DeKalb Av,Brooklyn
Atlantic Av - Barclays Ctr,Brooklyn
Union St,Brooklyn
9 St,Brooklyn
Prospect Av,Brooklyn
25 St,Brooklyn
36 St,Brooklyn
45 St,Brooklyn
53 St,Brooklyn
59 St,Brooklyn
Bay Ridge Av,Brooklyn
77 St,Brooklyn
86 St,Brooklyn
Bay Ridge - 95 St,Brooklyn
Atlantic Av - Barclays Ctr,Brooklyn
7 Av,Brooklyn
Prospect Park,Brooklyn
Parkside Av,Brooklyn
Church Av,Brooklyn
Beverley Rd,Brooklyn
Cortelyou Rd,Brooklyn
Newkirk Plaza,Brooklyn
Avenue H,Brooklyn
Avenue J,Brooklyn
Avenue M,Brooklyn
Kings Hwy,Brooklyn
Avenue U,Brooklyn
Neck Rd,Brooklyn
Sheepshead Bay,Brooklyn
Brighton Beach,Brooklyn
Ocean Pkwy,Brooklyn
W 8 St - NY Aquarium,Brooklyn
Coney Island - Stillwell Av,Brooklyn
9 Av,Brooklyn
Fort Hamilton Pkwy,Brooklyn
50 St,Brooklyn
55 St,Brooklyn
62 St,Brooklyn
71 St,Brooklyn
79 St,Brooklyn
18 Av,Brooklyn
20 Av,Brooklyn
Bay Pkwy,Brooklyn
25 Av,Brooklyn
Bay 50 St,Brooklyn
8 Av,Brooklyn
Fort Hamilton Pkwy,Brooklyn
New Utrecht Av,Brooklyn
18 Av,Brooklyn
20 Av,Brooklyn
Bay Pkwy,Brooklyn
Kings Hwy,Brooklyn
Avenue U,Brooklyn
86 St,Brooklyn
121 St,Queens
111 St,Queens
104 St,Queens
Woodhaven Blvd,Queens
85 St - Forest Pkwy,Queens
75 St,Queens
Cypress Hills,Brooklyn
Crescent St,Brooklyn
Norwood Av,Brooklyn
Cleveland St,Brooklyn
Van Siclen Av,Brooklyn
Alabama Av,Brooklyn
Broadway Jct,Brooklyn
Chauncey St,Brooklyn
Halsey St,Brooklyn
Gates Av,Brooklyn
Kosciuszko St,Brooklyn
Myrtle Av,Brooklyn
Flushing Av,Brooklyn
Lorimer St,Brooklyn
Hewes St,Brooklyn

2025-01-25 11:49:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:49:11 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:11 - root - INFO - SQL:
SELECT DISTINCT "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
Results:
borough_name
Queens
Manhattan
Brooklyn
Bronx
Staten Island

2025-01-25 11:49:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:12 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:13 - root - INFO - SQL:
SELECT "ada_compliant"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
Results:
ada_compliant
False
False
False
False
False
False
False
False
False
False
False
False
True
True
True
True
False
False
True
True
True
True
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
True
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
True
True
True
True
True
False
False
False
False
False
False
False
False
False

2025-01-25 11:49:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:49:14 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:14 - root - INFO - SQL:
SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   GROUP BY "borough_name";
Results:
borough_name,total_stations
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21

2025-01-25 11:49:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-25 11:49:16 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:16 - root - INFO - SQL:
SELECT DISTINCT "station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "ada_compliant" = TRUE;
Results:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St

2025-01-25 11:49:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-25 11:49:17 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:18 - root - INFO - SQL:
SELECT "station_name", COUNT(*) AS "ada_entrance_count"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "ada_compliant" = TRUE
   GROUP BY "station_name"
   LIMIT 100;
Results:
station_name,ada_entrance_count
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,10
42nd St,9
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,6
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,9
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,6
Times Square,9
South Ferry,5
Chambers St,5
Jackson Heights-Roosevelt Ave,7
21st St,5
59th St-Columbus Circle,5
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,8
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,7
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,7
72nd St,4

2025-01-25 11:49:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-25 11:49:19 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:19 - root - INFO - SQL:
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   WHERE se."ada_compliant" = TRUE
   GROUP BY s."borough_name";
Results:
borough_name,ada_stations
Brooklyn,19
Bronx,4
Queens,2
Manhattan,13

2025-01-25 11:49:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:21 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:49:49 - root - INFO - ```sql
SELECT
  s."borough_name",
  ROUND((COUNT(DISTINCT ada."station_id")::float / COUNT(DISTINCT s."station_id") * 100), 2) AS "percentage_ada_stations"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
GROUP BY
  s."borough_name";
```
2025-01-25 11:49:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:49:51 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:50:50 - root - INFO - SQL:
SELECT
  s."borough_name",
  ROUND((COUNT(DISTINCT ada."station_id")::float / COUNT(DISTINCT s."station_id") * 100), 2) AS "percentage_ada_stations"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
GROUP BY
  s."borough_name";
Results:
borough_name,percentage_ada_stations
Brooklyn,11.24
Queens,2.44
Bronx,5.71
Manhattan,8.61
Staten Island,0.0

2025-01-25 11:50:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:50:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-25 11:50:51 - snowflake.connector.connection - INFO - closed
2025-01-25 11:50:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:52 - root - INFO - SQL:
SELECT "entrance_type", "ada_compliant", COUNT(*) AS "count"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
GROUP BY "entrance_type", "ada_compliant"
ORDER BY "count" DESC
Results:
entrance_type,ada_compliant,count
Stair,False,1285
Stair,True,329
Door,False,64
Easement,True,54
Elevator,True,47
Easement,False,37
Escalator,True,18
Door,True,17
Escalator,False,10
Ramp,False,3
Walkway,True,1
Elevator,False,1

2025-01-25 11:50:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:50:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:50:53 - snowflake.connector.connection - INFO - closed
2025-01-25 11:50:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:54 - root - INFO - SQL:
SELECT DISTINCT s."station_name"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
WHERE ada."station_id" IS NULL
LIMIT 100
Results:
station_name
Astoria - Ditmars Blvd
Broadway
36 Av
Lexington Av/59 St
57 St - 7 Av
49 St
Times Sq - 42 St
Cortlandt St
Jay St - MetroTech
Union St
36 St
86 St
Neck Rd
W 8 St - NY Aquarium
20 Av
25 Av
Woodhaven Blvd
72 St
77 St
79 St
121 St
Bedford Av
1 Av
Clinton - Washington Avs
53 St
71 St
Myrtle - Wyckoff Avs
168 St
81 St - Museum of Natural History
City Hall
Bay Ridge - 95 St
Sheepshead Bay
Fort Hamilton Pkwy
Gates Av
Broad St
New Lots Av
Park Pl
Kingston - Throop Avs
Beach 36 St
Delancey St
Norwood Av
Bowery
Fulton St
3 Av
Jefferson St
E 105 St
Lafayette Av
Norwood - 205 St
75 Av
63 Dr - Rego Park
Brook Av
Graham Av
Ralph Av
Ozone Park - Lefferts Blvd
161 St - Yankee Stadium
207 St
Burnside Av
Grand Central - 42 St
Gun Hill Rd
34 St - 11 Av
Oakwood Heights
Central Av
Grant Av
34 St - Herald Sq
Avenue H
Dyckman St
Beach 60 St
28 St
9 St
8 Av
75 St
Halsey St
Kosciuszko St
34 St - Penn Station
Hoyt - Schermerhorn Sts
Beach 105 St
Chauncey St
181 St
14 St
Aqueduct - N Conduit Av
Broad Channel
182-183 Sts
Neptune Av
Grand Av - Newtown
Lexington Av/53 St
21 St
Intervale Av
Queensboro Plaza
Hunters Point Av
Old Town
90 St - Elmhurst Av
New Utrecht Av
Middle Village - Metropolitan Av
175 St
Beach 90 St
15 St - Prospect Park
155 St
96 St
Beach 25 St
Broadway-Lafayette St

2025-01-25 11:50:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:50:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:50:55 - snowflake.connector.connection - INFO - closed
2025-01-25 11:50:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:56 - root - INFO - SQL:
SELECT "station_name", COUNT(*) AS "total_entrances"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
GROUP BY "station_name"
ORDER BY "total_entrances" DESC
LIMIT 100
Results:
station_name,total_entrances
34th St,41
23rd St,40
14th St,26
59th St,25
86th St,22
50th St,20
125th St,19
42nd St,18
28th St,17
Canal St,17
Fulton St,17
47-50th Sts Rockefeller Center,17
Yankee Stadium-161st St,16
Chambers St,16
57th St,16
Jamaica-179th St,16
Church Av,15
Rector St,15
DeKalb Av,14
7th Av,14
Wall St,14
Jay St - Borough Hall,13
145th St,13
96th St,13
116th St,12
103rd St,12
Bergen St,11
Utica Av,11
77th St,11
Parsons Blvd-Archer Av - Jamaica Center,10
5th Av,10
135th St,10
Fort Hamilton Parkway,10
Times Square,10
Flushing-Main St,10
Fordham Rd,10
167th St,10
18th Av,9
Borough Hall,9
Brooklyn Bridge-City Hall,9
Lafayette Av,9
Grand Central-42nd St,9
Broad St,9
Lexington Av,9
33rd St,9
51st St,9
Kings Highway,9
Kingsbridge Rd,8
Clinton-Washington Avs,8
Brighton Beach,8
Flatbush Av-Brooklyn College,8
Kew Gardens-Union Turnpike,8
Van Siclen Av,8
79th St,8
21st St,8
Halsey St,8
149th St-3rd Av,8
Rockaway Av,8
Vernon Blvd-Jackson Av,8
8th St,8
36th St,8
Prospect Av,8
Marcy Av,8
169th St,8
170th St,8
World Trade Center,8
Houston St,8
138th St-3rd Ave,7
63rd Drive-Rego Park,7
Grand St,7
49th St,7
Bleecker St,7
Lexington Av-53rd St,7
Lawrence St,7
Broadway,7
155th St,7
181st St,7
175th St,7
Dyckman St-200th St,7
Canal St (UL),7
Woodhaven Blvd,7
Spring St,7
Jackson Heights-Roosevelt Ave,7
72nd St,7
Grand Central,7
Queens Plaza,7
Av U,7
Franklin Av,6
Cathedral Parkway-110th St,6
West 4th St,6
Lorimer St,6
Bliss St-46th St,6
Nostrand Av,6
Nassau Av,6
Rawson St-33rd St,6
Parsons Blvd,6
18th St,6
Pelham Parkway,6
Prospect Park-15 St,6
Bedford-Nostrand Avs,6

2025-01-25 11:50:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:50:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-25 11:50:57 - snowflake.connector.connection - INFO - closed
2025-01-25 11:50:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:57 - root - INFO - SQL:
SELECT "entry", "exit_only", COUNT(*) AS "entrance_count"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
GROUP BY "entry", "exit_only"
Results:
entry,exit_only,entrance_count
True,False,1743
False,False,67
False,True,48
True,True,8

2025-01-25 11:50:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:50:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:50:59 - snowflake.connector.connection - INFO - closed
2025-01-25 11:50:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:59 - root - INFO - SQL:
SELECT DISTINCT "station_id", "station_name"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
LIMIT 100
Results:
station_id,station_name
1,Astoria - Ditmars Blvd
2,Astoria Blvd
3,30 Av
4,Broadway
6,39 Av
7,Lexington Av/59 St
11,Times Sq - 42 St
14,23 St
16,8 St - NYU
17,Prince St
19,Canal St
20,City Hall
21,Cortlandt St
23,Whitehall St
28,Union St
31,25 St
35,59 St
36,Bay Ridge Av
38,86 St
39,Bay Ridge - 95 St
42,Prospect Park
50,Avenue M
61,50 St
69,25 Av
87,Crescent St
97,Myrtle Av
98,Flushing Av
113,Knickerbocker Av
128,Myrtle - Wyckoff Avs
129,Halsey St
131,Bushwick Av - Aberdeen St
139,Franklin Av
190,80 St
204,Beach 67 St
226,42 St - Bryant Pk
227,34 St - Herald Sq
24,Court St
27,Atlantic Av - Barclays Ctr
29,9 St
34,53 St
46,Cortelyou Rd
53,Neck Rd
55,Brighton Beach
56,Ocean Pkwy
73,New Utrecht Av
79,86 St
100,Hewes St
102,Essex St
103,Bowery
109,Fresh Pond Rd
111,Seneca Av
118,3 Av
152,135 St
187,Shepherd Av
195,Ozone Park - Lefferts Blvd
238,Smith - 9 Sts
10,49 St
95,Gates Av
126,Jefferson St
149,163 St - Amsterdam Av
225,47-50 Sts - Rockefeller Ctr
242,Fort Hamilton Pkwy
255,169 St
5,36 Av
8,5 Av/59 St
12,34 St - Herald Sq
13,28 St
18,Canal St
22,Rector St
30,Prospect Av
32,36 St
33,45 St
44,Church Av
47,Newkirk Plaza
48,Avenue H
49,Avenue J
57,W 8 St - NY Aquarium
59,9 Av
63,62 St
70,Bay 50 St
96,Kosciuszko St
121,Lorimer St
123,Grand St
130,Wilson Av
154,116 St
166,14 St
9,57 St - 7 Av
25,Jay St - MetroTech
26,DeKalb Av
40,Atlantic Av - Barclays Ctr
41,7 Av
45,Beverley Rd
52,Avenue U
54,Sheepshead Bay
60,Fort Hamilton Pkwy
62,55 St
64,71 St
65,79 St
66,18 Av
68,Bay Pkwy

2025-01-25 11:50:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:51:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-25 11:51:00 - snowflake.connector.connection - INFO - closed
2025-01-25 11:51:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:51:01 - root - INFO - SQL:
SELECT DISTINCT "station_name"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
WHERE "ada_compliant" = TRUE AND "exit_only" = FALSE
Results:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St

2025-01-25 11:51:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:51:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:51:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:51:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-25 11:51:02 - snowflake.connector.connection - INFO - closed
2025-01-25 11:51:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:51:03 - root - INFO - SQL:
SELECT
  s."borough_name",
  COUNT(DISTINCT s."station_id") AS "ada_entrances"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
GROUP BY
  s."borough_name"
Results:
borough_name,ada_entrances
Brooklyn,19
Queens,2
Bronx,4
Manhattan,13

2025-01-25 11:51:03 - root - INFO - itercount: 0
2025-01-25 11:51:03 - root - INFO - Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_311
DDL describes table information.
,0
table_name,_311_SERVICE_REQUESTS
description,
DDL,"create or replace TABLE _311_SERVICE_REQUESTS (
	""unique_key"" NUMBER(38,0),
	""created_date"" NUMBER(38,0),
	""closed_date"" NUMBER(38,0),
	""agency"" VARCHAR(16777216),
	""agency_name"" VARCHAR(16777216),
	""complaint_type"" VARCHAR(16777216),
	""descriptor"" VARCHAR(16777216),
	""location_type"" VARCHAR(16777216),
	""incident_zip"" VARCHAR(16777216),
	""incident_address"" VARCHAR(16777216),
	""street_name"" VARCHAR(16777216),
	""cross_street_1"" VARCHAR(16777216),
	""cross_street_2"" VARCHAR(16777216),
	""intersection_street_1"" VARCHAR(16777216),
	""intersection_street_2"" VARCHAR(16777216),
	""address_type"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""landmark"" VARCHAR(16777216),
	""facility_type"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""due_date"" NUMBER(38,0),
	""resolution_description"" VARCHAR(16777216),
	""resolution_action_updated_date"" NUMBER(38,0),
	""community_board"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""x_coordinate"" NUMBER(38,0),
	""y_coordinate"" NUMBER(38,0),
	""park_facility_name"" VARCHAR(16777216),
	""park_borough"" VARCHAR(16777216),
	""bbl"" NUMBER(38,0),
	""open_data_channel_type"" VARCHAR(16777216),
	""vehicle_type"" VARCHAR(16777216),
	""taxi_company_borough"" VARCHAR(16777216),
	""taxi_pickup_location"" VARCHAR(16777216),
	""bridge_highway_name"" VARCHAR(16777216),
	""bridge_highway_direction"" VARCHAR(16777216),
	""road_ramp"" VARCHAR(16777216),
	""bridge_highway_segment"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_CITIBIKE
DDL describes table information.
,0
table_name,CITIBIKE_STATIONS
description,
DDL,"create or replace TABLE CITIBIKE_STATIONS (
	""station_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_id"" NUMBER(38,0),
	""rental_methods"" VARCHAR(16777216),
	""capacity"" NUMBER(38,0),
	""eightd_has_key_dispenser"" BOOLEAN,
	""num_bikes_available"" NUMBER(38,0),
	""num_bikes_disabled"" NUMBER(38,0),
	""num_docks_available"" NUMBER(38,0),
	""num_docks_disabled"" NUMBER(38,0),
	""is_installed"" BOOLEAN,
	""is_renting"" BOOLEAN,
	""is_returning"" BOOLEAN,
	""eightd_has_available_keys"" BOOLEAN,
	""last_reported"" NUMBER(38,0)
);"

,1
table_name,CITIBIKE_TRIPS
description,
DDL,"create or replace TABLE CITIBIKE_TRIPS (
	""tripduration"" NUMBER(38,0),
	""starttime"" NUMBER(38,0),
	""stoptime"" NUMBER(38,0),
	""start_station_id"" NUMBER(38,0),
	""start_station_name"" VARCHAR(16777216),
	""start_station_latitude"" FLOAT,
	""start_station_longitude"" FLOAT,
	""end_station_id"" NUMBER(38,0),
	""end_station_name"" VARCHAR(16777216),
	""end_station_latitude"" FLOAT,
	""end_station_longitude"" FLOAT,
	""bikeid"" NUMBER(38,0),
	""usertype"" VARCHAR(16777216),
	""birth_year"" NUMBER(38,0),
	""gender"" VARCHAR(16777216),
	""customer_plan"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_MV_COLLISIONS
DDL describes table information.
,0
table_name,NYPD_MV_COLLISIONS
description,
DDL,"create or replace TABLE NYPD_MV_COLLISIONS (
	""borough"" VARCHAR(16777216),
	""contributing_factor_vehicle_1"" VARCHAR(16777216),
	""contributing_factor_vehicle_2"" VARCHAR(16777216),
	""contributing_factor_vehicle_3"" VARCHAR(16777216),
	""contributing_factor_vehicle_4"" VARCHAR(16777216),
	""contributing_factor_vehicle_5"" VARCHAR(16777216),
	""cross_street_name"" VARCHAR(16777216),
	""timestamp"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216),
	""number_of_cyclist_injured"" NUMBER(38,0),
	""number_of_cyclist_killed"" NUMBER(38,0),
	""number_of_motorist_injured"" NUMBER(38,0),
	""number_of_motorist_killed"" NUMBER(38,0),
	""number_of_pedestrians_injured"" NUMBER(38,0),
	""number_of_pedestrians_killed"" NUMBER(38,0),
	""number_of_persons_injured"" NUMBER(38,0),
	""number_of_persons_killed"" NUMBER(38,0),
	""off_street_name"" VARCHAR(16777216),
	""on_street_name"" VARCHAR(16777216),
	""unique_key"" NUMBER(38,0),
	""vehicle_type_code1"" VARCHAR(16777216),
	""vehicle_type_code2"" VARCHAR(16777216),
	""vehicle_type_code_3"" VARCHAR(16777216),
	""vehicle_type_code_4"" VARCHAR(16777216),
	""vehicle_type_code_5"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
DDL describes table information.
,0
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""station_id"" VARCHAR(16777216),
	""complex_id"" VARCHAR(16777216),
	""gtfs_stop_id"" VARCHAR(16777216),
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""daytime_routes"" VARCHAR(16777216),
	""structure"" VARCHAR(16777216),
	""north_direction_label"" VARCHAR(16777216),
	""south_direction_label"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""station_geom"" BINARY(8388608)
);"

,1
table_name,STATION_ENTRANCES
description,
DDL,"create or replace TABLE STATION_ENTRANCES (
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""route_1"" VARCHAR(16777216),
	""route_2"" VARCHAR(16777216),
	""route_3"" VARCHAR(16777216),
	""route_4"" VARCHAR(16777216),
	""route_5"" VARCHAR(16777216),
	""route_6"" VARCHAR(16777216),
	""route_7"" VARCHAR(16777216),
	""route_8"" VARCHAR(16777216),
	""route_9"" VARCHAR(16777216),
	""route_10"" VARCHAR(16777216),
	""route_11"" VARCHAR(16777216),
	""entrance_type"" VARCHAR(16777216),
	""staff"" VARCHAR(16777216),
	""staff_hours"" VARCHAR(16777216),
	""ada_notes"" VARCHAR(16777216),
	""free_crossover"" BOOLEAN,
	""north_south_street"" VARCHAR(16777216),
	""east_west_street"" VARCHAR(16777216),
	""corner"" VARCHAR(16777216),
	""entrance_lat"" FLOAT,
	""entrance_lon"" FLOAT,
	""entry"" BOOLEAN,
	""exit_only"" BOOLEAN,
	""vending"" BOOLEAN,
	""ada_compliant"" BOOLEAN,
	""station_geom"" BINARY(8388608),
	""entrance_geom"" BINARY(8388608)
);"

,2
table_name,GEO_NYC_BOROUGH_BOUNDARIES
description,
DDL,"create or replace TABLE GEO_NYC_BOROUGH_BOUNDARIES (
	""borough_code"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""borough_area"" FLOAT,
	""borough_len"" FLOAT,
	""borough_geom"" BINARY(8388608)
);"

,3
table_name,STOP_TIMES
description,
DDL,"create or replace TABLE STOP_TIMES (
	""trip_id"" VARCHAR(16777216),
	""arrival_time"" VARCHAR(16777216),
	""departure_time"" VARCHAR(16777216),
	""stop_id"" VARCHAR(16777216),
	""stop_sequence"" VARCHAR(16777216),
	""stop_headsign"" VARCHAR(16777216),
	""pickup_type"" VARCHAR(16777216),
	""dropoff_type"" VARCHAR(16777216),
	""shape_dist_traveled"" VARCHAR(16777216)
);"

,4
table_name,ROUTES
description,
DDL,"create or replace TABLE ROUTES (
	""route_id"" VARCHAR(16777216),
	""route_short_name"" VARCHAR(16777216),
	""route_long_name"" VARCHAR(16777216),
	""route_describe"" VARCHAR(16777216),
	""route_type"" VARCHAR(16777216)
);"

,5
table_name,STATION_COMPLEXES
description,
DDL,"create or replace TABLE STATION_COMPLEXES (
	""complex_id"" VARCHAR(16777216),
	""complex_name"" VARCHAR(16777216)
);"

,6
table_name,SUBWAY_RIDERSHIP_2013_PRESENT
description,
DDL,"create or replace TABLE SUBWAY_RIDERSHIP_2013_PRESENT (
	""station_name"" VARCHAR(16777216),
	""routes"" VARCHAR(16777216),
	""ridership_2013"" NUMBER(38,0),
	""ridership_2014"" NUMBER(38,0),
	""ridership_2015"" NUMBER(38,0),
	""ridership_2016"" NUMBER(38,0),
	""ridership_2017"" NUMBER(38,0),
	""ridership_2018"" NUMBER(38,0),
	""change_2018_raw"" NUMBER(38,0),
	""change_2018_percent"" FLOAT,
	""rank_ridership_2018"" NUMBER(38,0)
);"

,7
table_name,TRIPS
description,
DDL,"create or replace TABLE TRIPS (
	""route_id"" VARCHAR(16777216),
	""service_id"" VARCHAR(16777216),
	""trip_id"" VARCHAR(16777216),
	""trip_headsign"" VARCHAR(16777216),
	""direction_id"" VARCHAR(16777216),
	""block_id"" VARCHAR(16777216),
	""shape_id"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
DDL describes table information.
,0
table_name,TLC_GREEN_TRIPS_2021
description,
DDL,"create or replace TABLE TLC_GREEN_TRIPS_2021 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""rate_code"" VARCHAR(16777216),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""ehail_fee"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""payment_type"" VARCHAR(16777216),
	""distance_between_service"" NUMBER(38,9),
	""time_between_service"" NUMBER(38,0),
	""trip_type"" VARCHAR(16777216),
	""imp_surcharge"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020']
,1
table_name,TLC_YELLOW_TRIPS_2011
description,
DDL,"create or replace TABLE TLC_YELLOW_TRIPS_2011 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""rate_code"" VARCHAR(16777216),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""payment_type"" VARCHAR(16777216),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""imp_surcharge"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021']
,2
table_name,TAXI_ZONE_GEOM
description,
DDL,"create or replace TABLE TAXI_ZONE_GEOM (
	""zone_id"" VARCHAR(16777216),
	""zone_name"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone_geom"" BINARY(8388608)
);"

,3
table_name,TLC_FHV_TRIPS_2015
description,
DDL,"create or replace TABLE TLC_FHV_TRIPS_2015 (
	""location_id"" NUMBER(38,0),
	""pickup_datetime"" NUMBER(38,0),
	""dispatching_base_num"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""service_zone"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TREES
DDL describes table information.
,0
table_name,TREE_CENSUS_2015
description,
DDL,"create or replace TABLE TREE_CENSUS_2015 (
	""tree_id"" NUMBER(38,0),
	""block_id"" NUMBER(38,0),
	""created_at"" DATE,
	""tree_dbh"" NUMBER(38,0),
	""stump_diam"" NUMBER(38,0),
	""curb_loc"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""health"" VARCHAR(16777216),
	""spc_latin"" VARCHAR(16777216),
	""spc_common"" VARCHAR(16777216),
	""steward"" VARCHAR(16777216),
	""guards"" VARCHAR(16777216),
	""sidewalk"" VARCHAR(16777216),
	""user_type"" VARCHAR(16777216),
	""problems"" VARCHAR(16777216),
	""root_stone"" VARCHAR(16777216),
	""root_grate"" VARCHAR(16777216),
	""root_other"" VARCHAR(16777216),
	""trunk_wire"" VARCHAR(16777216),
	""trnk_light"" VARCHAR(16777216),
	""trnk_other"" VARCHAR(16777216),
	""brch_light"" VARCHAR(16777216),
	""brch_shoe"" VARCHAR(16777216),
	""brch_other"" VARCHAR(16777216),
	""address"" VARCHAR(16777216),
	""zipcode"" NUMBER(38,0),
	""zip_city"" VARCHAR(16777216),
	""cb_num"" NUMBER(38,0),
	""borocode"" NUMBER(38,0),
	""boroname"" VARCHAR(16777216),
	""cncldist"" NUMBER(38,0),
	""st_assem"" NUMBER(38,0),
	""st_senate"" NUMBER(38,0),
	""nta"" VARCHAR(16777216),
	""nta_name"" VARCHAR(16777216),
	""boro_ct"" NUMBER(38,0),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""x_sp"" FLOAT,
	""y_sp"" FLOAT
);"

Some other tables have the similar structure: ['TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995']
,1
table_name,TREE_SPECIES
description,
DDL,"create or replace TABLE TREE_SPECIES (
	""species_scientific_name"" VARCHAR(16777216),
	""species_common_name"" VARCHAR(16777216),
	""form"" VARCHAR(16777216),
	""growth_rate"" VARCHAR(16777216),
	""fall_color"" VARCHAR(16777216),
	""environmental_tolerances"" VARCHAR(16777216),
	""location_tolerances"" VARCHAR(16777216),
	""notes_suggested_cultivars"" VARCHAR(16777216),
	""tree_size"" VARCHAR(16777216),
	""comments"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['GEO_NYC_BOROUGH_BOUNDARIES', 'ROUTES', 'STATIONS', 'STATION_COMPLEXES', 'STATION_ENTRANCES', 'STOP_TIMES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2016', 'TLC_FHV_TRIPS_2017', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2020', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2021', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2023'], 'NEW_YORK_TREES': ['TREE_CENSUS_1995', 'TREE_CENSUS_2005', 'TREE_CENSUS_2015', 'TREE_SPECIES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **STATIONS**
  - **"station_id"**: Unique identifier for each subway station; used to count total stations.
  - **"station_name"**: Name of the subway station; used to join with entrances.
  - **"borough_name"**: Name of the borough where the station is located; used to group stations by borough.

- **STATION_ENTRANCES**
  - **"station_name"**: Name of the subway station; used to join with stations.
  - **"ada_compliant"**: Indicates whether an entrance is ADA-compliant; used to identify ADA-compliant entrances.
  - **"exit_only"**: Indicates if the entrance is exit-only; may affect accessibility.
  - **"entry"**: Indicates if the entrance allows entry; relevant for accessible entrances.

**Possible Conditions:**

- **"ada_compliant" = TRUE**: To filter for ADA-compliant entrances.
- **"exit_only" = FALSE**: To ensure entrances allow entry into the station.
- **Matching "station_name" between STATIONS and STATION_ENTRANCES**: To associate entrances with their respective stations.

---

**SQL Queries:**

1. **List all station names and their boroughs:**
   ```sql
   SELECT "station_name", "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   LIMIT 100;
   ```

2. **Get the distinct borough names:**
   ```sql
   SELECT DISTINCT "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
   ```

3. **View ADA compliance statuses in station entrances:**
   ```sql
   SELECT "ada_compliant"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
   ```

4. **Count total stations per borough:**
   ```sql
   SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   GROUP BY "borough_name";
   ```

5. **List stations with at least one ADA-compliant entrance:**
   ```sql
   SELECT DISTINCT "station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "ada_compliant" = TRUE;
   ```

6. **Count ADA-compliant entrances per station:**
   ```sql
   SELECT "station_name", COUNT(*) AS "ada_entrance_count"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "ada_compliant" = TRUE
   GROUP BY "station_name"
   LIMIT 100;
   ```

7. **Count the number of stations with at least one ADA-compliant entrance per borough:**
   ```sql
   SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   WHERE se."ada_compliant" = TRUE
   GROUP BY s."borough_name";
   ```

8. **Retrieve ADA notes from station entrances:**
   ```sql
   SELECT "ada_notes"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
   ```

9. **Check entrance types and their ADA compliance:**
   ```sql
   SELECT "entrance_type", "ada_compliant", COUNT(*) AS "count"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   GROUP BY "entrance_type", "ada_compliant"
   ORDER BY "count" DESC;
   ```

10. **List stations without any ADA-compliant entrances:**
    ```sql
    SELECT DISTINCT s."station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN (
      SELECT DISTINCT "station_name"
      FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
      WHERE "ada_compliant" = TRUE
    ) ada ON s."station_name" = ada."station_name"
    WHERE ada."station_name" IS NULL
    LIMIT 100;
    ```

11. **Total number of entrances per station:**
    ```sql
    SELECT "station_name", COUNT(*) AS "total_entrances"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    GROUP BY "station_name"
    ORDER BY "total_entrances" DESC
    LIMIT 100;
    ```

12. **Entrance entry and exit statuses:**
    ```sql
    SELECT "entry", "exit_only", COUNT(*) AS "entrance_count"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    GROUP BY "entry", "exit_only";
    ```

13. **List unique station IDs and names:**
    ```sql
    SELECT DISTINCT "station_id", "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
    LIMIT 100;
    ```

14. **Stations with ADA-compliant and non-exit-only entrances:**
    ```sql
    SELECT DISTINCT "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "ada_compliant" = TRUE AND "exit_only" = FALSE;
    ```

15. **Count of ADA-compliant entrances by borough:**
    ```sql
    SELECT s."borough_name", COUNT(*) AS "ada_entrances"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    WHERE se."ada_compliant" = TRUE
    GROUP BY s."borough_name";
    ```

---

These queries progressively explore the necessary data to understand the distribution of ADA-compliant subway stations across New York boroughs, without directly answering the task. They examine station and entrance details, ADA compliance flags, and group data by boroughs to provide insights into the required computation.Query:
SELECT "station_name", "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   LIMIT 100;
Answer:
station_name,borough_name
Astoria - Ditmars Blvd,Queens
Astoria Blvd,Queens
30 Av,Queens
Broadway,Queens
36 Av,Queens
39 Av,Queens
Lexington Av/59 St,Manhattan
5 Av/59 St,Manhattan
57 St - 7 Av,Manhattan
49 St,Manhattan
Times Sq - 42 St,Manhattan
34 St - Herald Sq,Manhattan
28 St,Manhattan
23 St,Manhattan
14 St - Union Sq,Manhattan
8 St - NYU,Manhattan
Prince St,Manhattan
Canal St,Manhattan
Canal St,Manhattan
City Hall,Manhattan
Cortlandt St,Manhattan
Rector St,Manhattan
Whitehall St,Manhattan
Court St,Brooklyn
Jay St - MetroTech,Brooklyn
DeKalb Av,Brooklyn
Atlantic Av - Barclays Ctr,Brooklyn
Union St,Brooklyn
9 St,Brooklyn
Prospect Av,Brooklyn
25 St,Brooklyn
36 St,Brooklyn
45 St,Brooklyn
53 St,Brooklyn
59 St,Brooklyn
Bay Ridge Av,Brooklyn
77 St,Brooklyn
86 St,Brooklyn
Bay Ridge - 95 St,Brooklyn
Atlantic Av - Barclays Ctr,Brooklyn
7 Av,Brooklyn
Prospect Park,Brooklyn
Parkside Av,Brooklyn
Church Av,Brooklyn
Beverley Rd,Brooklyn
Cortelyou Rd,Brooklyn
Newkirk Plaza,Brooklyn
Avenue H,Brooklyn
Avenue J,Brooklyn
Avenue M,Brooklyn
Kings Hwy,Brooklyn
Avenue U,Brooklyn
Neck Rd,Brooklyn
Sheepshead Bay,Brooklyn
Brighton Beach,Brooklyn
Ocean Pkwy,Brooklyn
W 8 St - NY Aquarium,Brooklyn
Coney Island - Stillwell Av,Brooklyn
9 Av,Brooklyn
Fort Hamilton Pkwy,Brooklyn
50 St,Brooklyn
55 St,Brooklyn
62 St,Brooklyn
71 St,Brooklyn
79 St,Brooklyn
18 Av,Brooklyn
20 Av,Brooklyn
Bay Pkwy,Brooklyn
25 Av,Brooklyn
Bay 50 St,Brooklyn
8 Av,Brooklyn
Fort Hamilton Pkwy,Brooklyn
New Utrecht Av,Brooklyn
18 Av,Brooklyn
20 Av,Brooklyn
Bay Pkwy,Brooklyn
Kings Hwy,Brooklyn
Avenue U,Brooklyn
86 St,Brooklyn
121 St,Queens
111 St,Queens
104 St,Queens
Woodhaven Blvd,Queens
85 St - Forest Pkwy,Queens
75 St,Queens
Cypress Hills,Brooklyn
Crescent St,Brooklyn
Norwood Av,Brooklyn
Cleveland St,Brooklyn
Van Siclen Av,Brooklyn
Alabama Av,Brooklyn
Broadway Jct,Brooklyn
Chauncey St,Brooklyn
Halsey St,Brooklyn
Gates Av,Brooklyn
Kosciuszko St,Brooklyn
Myrtle Av,Brooklyn
Flushing Av,Brooklyn
Lorimer St,Brooklyn
Hewes St,Brooklyn
Query:
SELECT DISTINCT "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
Answer:
borough_name
Queens
Manhattan
Brooklyn
Bronx
Staten Island
Query:
SELECT "ada_compliant"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
Answer:
ada_compliant
False
False
False
False
False
False
False
False
False
False
False
False
True
True
True
True
False
False
True
True
True
True
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
True
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
True
True
True
True
True
False
False
False
False
False
False
False
False
False
Query:
SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   GROUP BY "borough_name";
Answer:
borough_name,total_stations
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21
Query:
SELECT DISTINCT "station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "ada_compliant" = TRUE;
Answer:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St
Query:
SELECT "station_name", COUNT(*) AS "ada_entrance_count"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "ada_compliant" = TRUE
   GROUP BY "station_name"
   LIMIT 100;
Answer:
station_name,ada_entrance_count
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,10
42nd St,9
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,6
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,9
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,6
Times Square,9
South Ferry,5
Chambers St,5
Jackson Heights-Roosevelt Ave,7
21st St,5
59th St-Columbus Circle,5
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,8
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,7
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,7
72nd St,4
Query:
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   WHERE se."ada_compliant" = TRUE
   GROUP BY s."borough_name";
Answer:
borough_name,ada_stations
Brooklyn,19
Bronx,4
Queens,2
Manhattan,13
Query:
SELECT
  s."borough_name",
  ROUND((COUNT(DISTINCT ada."station_id")::float / COUNT(DISTINCT s."station_id") * 100), 2) AS "percentage_ada_stations"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
GROUP BY
  s."borough_name";
Answer:
borough_name,percentage_ada_stations
Brooklyn,11.24
Queens,2.44
Bronx,5.71
Manhattan,8.61
Staten Island,0.0
Query:
SELECT "entrance_type", "ada_compliant", COUNT(*) AS "count"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
GROUP BY "entrance_type", "ada_compliant"
ORDER BY "count" DESC
Answer:
entrance_type,ada_compliant,count
Stair,False,1285
Stair,True,329
Door,False,64
Easement,True,54
Elevator,True,47
Easement,False,37
Escalator,True,18
Door,True,17
Escalator,False,10
Ramp,False,3
Walkway,True,1
Elevator,False,1
Query:
SELECT DISTINCT s."station_name"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
WHERE ada."station_id" IS NULL
LIMIT 100
Answer:
station_name
Astoria - Ditmars Blvd
Broadway
36 Av
Lexington Av/59 St
57 St - 7 Av
49 St
Times Sq - 42 St
Cortlandt St
Jay St - MetroTech
Union St
36 St
86 St
Neck Rd
W 8 St - NY Aquarium
20 Av
25 Av
Woodhaven Blvd
72 St
77 St
79 St
121 St
Bedford Av
1 Av
Clinton - Washington Avs
53 St
71 St
Myrtle - Wyckoff Avs
168 St
81 St - Museum of Natural History
City Hall
Bay Ridge - 95 St
Sheepshead Bay
Fort Hamilton Pkwy
Gates Av
Broad St
New Lots Av
Park Pl
Kingston - Throop Avs
Beach 36 St
Delancey St
Norwood Av
Bowery
Fulton St
3 Av
Jefferson St
E 105 St
Lafayette Av
Norwood - 205 St
75 Av
63 Dr - Rego Park
Brook Av
Graham Av
Ralph Av
Ozone Park - Lefferts Blvd
161 St - Yankee Stadium
207 St
Burnside Av
Grand Central - 42 St
Gun Hill Rd
34 St - 11 Av
Oakwood Heights
Central Av
Grant Av
34 St - Herald Sq
Avenue H
Dyckman St
Beach 60 St
28 St
9 St
8 Av
75 St
Halsey St
Kosciuszko St
34 St - Penn Station
Hoyt - Schermerhorn Sts
Beach 105 St
Chauncey St
181 St
14 St
Aqueduct - N Conduit Av
Broad Channel
182-183 Sts
Neptune Av
Grand Av - Newtown
Lexington Av/53 St
21 St
Intervale Av
Queensboro Plaza
Hunters Point Av
Old Town
90 St - Elmhurst Av
New Utrecht Av
Middle Village - Metropolitan Av
175 St
Beach 90 St
15 St - Prospect Park
155 St
96 St
Beach 25 St
Broadway-Lafayette St
Query:
SELECT "station_name", COUNT(*) AS "total_entrances"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
GROUP BY "station_name"
ORDER BY "total_entrances" DESC
LIMIT 100
Answer:
station_name,total_entrances
34th St,41
23rd St,40
14th St,26
59th St,25
86th St,22
50th St,20
125th St,19
42nd St,18
28th St,17
Canal St,17
Fulton St,17
47-50th Sts Rockefeller Center,17
Yankee Stadium-161st St,16
Chambers St,16
57th St,16
Jamaica-179th St,16
Church Av,15
Rector St,15
DeKalb Av,14
7th Av,14
Wall St,14
Jay St - Borough Hall,13
145th St,13
96th St,13
116th St,12
103rd St,12
Bergen St,11
Utica Av,11
77th St,11
Parsons Blvd-Archer Av - Jamaica Center,10
5th Av,10
135th St,10
Fort Hamilton Parkway,10
Times Square,10
Flushing-Main St,10
Fordham Rd,10
167th St,10
18th Av,9
Borough Hall,9
Brooklyn Bridge-City Hall,9
Lafayette Av,9
Grand Central-42nd St,9
Broad St,9
Lexington Av,9
33rd St,9
51st St,9
Kings Highway,9
Kingsbridge Rd,8
Clinton-Washington Avs,8
Brighton Beach,8
Flatbush Av-Brooklyn College,8
Kew Gardens-Union Turnpike,8
Van Siclen Av,8
79th St,8
21st St,8
Halsey St,8
149th St-3rd Av,8
Rockaway Av,8
Vernon Blvd-Jackson Av,8
8th St,8
36th St,8
Prospect Av,8
Marcy Av,8
169th St,8
170th St,8
World Trade Center,8
Houston St,8
138th St-3rd Ave,7
63rd Drive-Rego Park,7
Grand St,7
49th St,7
Bleecker St,7
Lexington Av-53rd St,7
Lawrence St,7
Broadway,7
155th St,7
181st St,7
175th St,7
Dyckman St-200th St,7
Canal St (UL),7
Woodhaven Blvd,7
Spring St,7
Jackson Heights-Roosevelt Ave,7
72nd St,7
Grand Central,7
Queens Plaza,7
Av U,7
Franklin Av,6
Cathedral Parkway-110th St,6
West 4th St,6
Lorimer St,6
Bliss St-46th St,6
Nostrand Av,6
Nassau Av,6
Rawson St-33rd St,6
Parsons Blvd,6
18th St,6
Pelham Parkway,6
Prospect Park-15 St,6
Bedford-Nostrand Avs,6
Query:
SELECT "entry", "exit_only", COUNT(*) AS "entrance_count"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
GROUP BY "entry", "exit_only"
Answer:
entry,exit_only,entrance_count
True,False,1743
False,False,67
False,True,48
True,True,8
Query:
SELECT DISTINCT "station_id", "station_name"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
LIMIT 100
Answer:
station_id,station_name
1,Astoria - Ditmars Blvd
2,Astoria Blvd
3,30 Av
4,Broadway
6,39 Av
7,Lexington Av/59 St
11,Times Sq - 42 St
14,23 St
16,8 St - NYU
17,Prince St
19,Canal St
20,City Hall
21,Cortlandt St
23,Whitehall St
28,Union St
31,25 St
35,59 St
36,Bay Ridge Av
38,86 St
39,Bay Ridge - 95 St
42,Prospect Park
50,Avenue M
61,50 St
69,25 Av
87,Crescent St
97,Myrtle Av
98,Flushing Av
113,Knickerbocker Av
128,Myrtle - Wyckoff Avs
129,Halsey St
131,Bushwick Av - Aberdeen St
139,Franklin Av
190,80 St
204,Beach 67 St
226,42 St - Bryant Pk
227,34 St - Herald Sq
24,Court St
27,Atlantic Av - Barclays Ctr
29,9 St
34,53 St
46,Cortelyou Rd
53,Neck Rd
55,Brighton Beach
56,Ocean Pkwy
73,New Utrecht Av
79,86 St
100,Hewes St
102,Essex St
103,Bowery
109,Fresh Pond Rd
111,Seneca Av
118,3 Av
152,135 St
187,Shepherd Av
195,Ozone Park - Lefferts Blvd
238,Smith - 9 Sts
10,49 St
95,Gates Av
126,Jefferson St
149,163 St - Amsterdam Av
225,47-50 Sts - Rockefeller Ctr
242,Fort Hamilton Pkwy
255,169 St
5,36 Av
8,5 Av/59 St
12,34 St - Herald Sq
13,28 St
18,Canal St
22,Rector St
30,Prospect Av
32,36 St
33,45 St
44,Church Av
47,Newkirk Plaza
48,Avenue H
49,Avenue J
57,W 8 St - NY Aquarium
59,9 Av
63,62 St
70,Bay 50 St
96,Kosciuszko St
121,Lorimer St
123,Grand St
130,Wilson Av
154,116 St
166,14 St
9,57 St - 7 Av
25,Jay St - MetroTech
26,DeKalb Av
40,Atlantic Av - Barclays Ctr
41,7 Av
45,Beverley Rd
52,Avenue U
54,Sheepshead Bay
60,Fort Hamilton Pkwy
62,55 St
64,71 St
65,79 St
66,18 Av
68,Bay Pkwy
Query:
SELECT DISTINCT "station_name"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
WHERE "ada_compliant" = TRUE AND "exit_only" = FALSE
Answer:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St
Query:
SELECT
  s."borough_name",
  COUNT(DISTINCT s."station_id") AS "ada_entrances"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
JOIN (
  SELECT DISTINCT s2."station_id"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s2
  JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s2."station_name" = se."station_name"
  WHERE se."ada_compliant" = TRUE
) ada ON s."station_id" = ada."station_id"
GROUP BY
  s."borough_name"
Answer:
borough_name,ada_entrances
Brooklyn,19
Queens,2
Bronx,4
Manhattan,13
End Exploring Related Columns
Task: What percentage of subway stations in each New York borough have at least one ADA-compliant entrance?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```csv
borough_name,percentage_ada_stations
borough_name1:str,percentage1:float between 0 and 100
borough_name2:str,percentage2:float between 0 and 100
...
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['GEO_NYC_BOROUGH_BOUNDARIES', 'ROUTES', 'STATIONS', 'STATION_COMPLEXES', 'STATION_ENTRANCES', 'STOP_TIMES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2016', 'TLC_FHV_TRIPS_2017', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2020', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2021', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2023'], 'NEW_YORK_TREES': ['TREE_CENSUS_1995', 'TREE_CENSUS_2005', 'TREE_CENSUS_2015', 'TREE_SPECIES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 11:51:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:51:36 - root - INFO - To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables from the `NEW_YORK_PLUS`.`NEW_YORK_SUBWAY` schema. We join these tables on `"station_name"` to associate entrances with their respective stations. We filter for entrances that are ADA-compliant and allow entry (i.e., not exit-only). Then, we calculate the percentage of such stations within each borough.

```sql
SELECT
  s."borough_name",
  ROUND(
    COUNT(DISTINCT CASE WHEN se."ada_compliant" = TRUE AND se."exit_only" = FALSE THEN s."station_id" END) * 100.0
    /
    COUNT(DISTINCT s."station_id"),
    2
  ) AS "percentage_ada_stations"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s."station_name" = se."station_name"
GROUP BY
  s."borough_name"
ORDER BY
  s."borough_name";
```
2025-01-25 11:51:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:51:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:51:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:51:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:51:37 - snowflake.connector.connection - INFO - closed
2025-01-25 11:51:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:51:38 - root - INFO - itercount: 1
2025-01-25 11:51:38 - root - INFO - 0
2025-01-25 11:51:38 - root - INFO - results: 
borough_name,percentage_ada_stations
Bronx,5.71
Brooklyn,11.24
Manhattan,8.61
Queens,2.44
Staten Island,0.00


2025-01-25 11:51:38 - root - INFO - Please check the answer again by reviewing What percentage of subway stations in each New York borough have at least one ADA-compliant entrance?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```csv
borough_name,percentage_ada_stations
borough_name1:str,percentage1:float between 0 and 100
borough_name2:str,percentage2:float between 0 and 100
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
borough_name,percentage_ada_stations
Bronx,5.71
Brooklyn,11.24
Manhattan,8.61
Queens,2.44
Staten Island,0.00
Current sql:
SELECT
  s."borough_name",
  ROUND(
    COUNT(DISTINCT CASE WHEN se."ada_compliant" = TRUE AND se."exit_only" = FALSE THEN s."station_id" END) * 100.0
    /
    COUNT(DISTINCT s."station_id"),
    2
  ) AS "percentage_ada_stations"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s."station_name" = se."station_name"
GROUP BY
  s."borough_name"
ORDER BY
  s."borough_name";
2025-01-25 11:51:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:51:57 - root - INFO - To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```csv
borough_name,percentage_ada_stations
Bronx,5.7143
Brooklyn,11.2426
Manhattan,8.6093
Queens,2.4390
Staten Island,0.0000
```

```sql
SELECT
  s."borough_name",
  ROUND(
    COUNT(DISTINCT CASE WHEN se."ada_compliant" = TRUE AND se."exit_only" = FALSE THEN s."station_id" END) * 100.0
    /
    COUNT(DISTINCT s."station_id"),
    4
  ) AS "percentage_ada_stations"
FROM
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN
  "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s."station_name" = se."station_name"
GROUP BY
  s."borough_name"
ORDER BY
  s."borough_name";
```
2025-01-25 11:51:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:51:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:51:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:51:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:51:58 - snowflake.connector.connection - INFO - closed
2025-01-25 11:51:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:51:59 - root - INFO - itercount: 2
2025-01-25 11:51:59 - root - INFO - 0
2025-01-25 11:51:59 - root - INFO - Total iteration counts: 2
