2025-01-27 01:17:16 - openai._base_client - INFO - Retrying request to /chat/completions in 0.416218 seconds
2025-01-27 01:19:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:19:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:19:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:19:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:19:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:19:06 - snowflake.connector.connection - INFO - closed
2025-01-27 01:19:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:19:06 - root - INFO - SQL:
SELECT
     "provider_id",
     SUM("total_discharges" * "average_covered_charges") AS "total_inpatient_charges_2011"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
   GROUP BY
     "provider_id"
   LIMIT 100;
Results:
provider_id,total_inpatient_charges_2011
220024,20804063.0
220015,33417620.0
220030,16044795.0
220050,2463649.0
220065,11744351.0
220066,57497606.0
220077,163493680.0
220046,65298227.0
220051,12137697.0
220016,16682756.0
220095,12414115.0
220001,23041016.0
220058,2717425.0
220062,6640617.0
220176,45714478.0
220163,295365847.0
220019,11662840.0
220175,58805092.0
220049,16520416.0
220174,17449604.0
220080,50002024.0
220082,32753267.0
220063,45808781.0
220105,34691546.0
220033,58757591.0
220029,25551868.0
220035,185429821.0
220126,43782928.0
220071,474564394.0
220088,45556502.0
220017,19376018.0
220002,42292578.0
220011,35048861.0
220070,59932992.0
220108,21831210.0
220100,110751541.0
220060,48902500.0
220101,90568568.0
220012,106767563.0
220074,261386595.0
410009,120226332.0
410012,124802935.0
300011,39356492.0
300012,58429205.0
300005,35732975.0
300001,103388196.0
300003,141765332.0
300029,70491268.0
300023,49635095.0
200040,10337720.0
200031,9188635.0
470005,45082252.0
70029,36335663.0
70027,40859127.0
70003,14705128.0
300019,19836710.0
70040,695573.0
70015,18913715.0
310058,11211880.0
310111,193090362.0
310112,147283684.0
310028,195953614.0
310029,266203260.0
330028,72830901.0
220098,7968509.0
220084,29513877.0
220090,46384179.0
220171,102178004.0
220116,95215054.0
220031,95559151.0
220119,42308147.0
220036,51537576.0
220067,21196415.0
220086,174732292.0
220111,48233157.0
220052,43242332.0
220135,42536122.0
220008,37688210.0
220073,26930586.0
220083,9297385.0
410006,21785852.0
410001,34232793.0
410008,22384307.0
410013,18143676.0
410011,46107446.0
410007,202221774.0
410010,1561924.0
300017,26584592.0
300020,38016960.0
300034,97334401.0
300018,56851943.0
200019,36055044.0
200025,3888778.0
200034,23532135.0
200001,24563441.0
200002,11939619.0
200018,15300531.0
470003,109599978.0
470024,9295201.0
70012,15870685.0

2025-01-27 01:19:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:19:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:19:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:19:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:19:08 - snowflake.connector.connection - INFO - closed
2025-01-27 01:19:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:19:08 - root - INFO - SQL:
SELECT
     "provider_id",
     SUM("total_discharges" * "average_covered_charges") AS "total_inpatient_charges_2012"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
   GROUP BY
     "provider_id"
   LIMIT 100;
Results:
provider_id,total_inpatient_charges_2012
220024,19355634.0
220015,35927921.0
220030,13883163.0
220050,2525661.0
220065,10724911.0
220066,55866144.0
220077,175665597.0
220046,67328109.0
220051,14242547.0
220016,19494505.0
220095,11336978.0
220001,27495850.0
220058,1659090.0
220062,6666896.0
220176,47419295.0
220163,257001909.0
220019,9658966.0
220175,57145006.0
220049,16292607.0
220174,15186373.0
220080,50888143.0
220082,31120325.0
220063,48076076.0
220105,30817408.0
220033,55554517.0
220029,23957773.0
220035,172460088.0
220126,43484004.0
220071,503229629.0
220088,57311650.0
220017,14558760.0
220002,45350530.0
220011,29036706.0
220070,51198504.0
220108,26117268.0
220100,114040452.0
220060,46565968.0
220101,94070100.0
220012,105402457.0
220074,237980335.0
410009,124755499.0
410012,131677759.0
300011,39237104.0
300012,60357446.0
300005,41783933.0
300001,109868385.0
300003,160908221.0
300029,76844212.0
300023,49772382.0
200040,10336000.0
200031,7449589.0
470005,46422897.0
70029,35688276.0
70027,47368689.0
70003,15047518.0
300019,19848057.0
70040,376350.0
70015,17246787.0
310058,7662472.0
310111,179010291.0
310112,153535475.0
310028,164702770.0
310029,239212882.0
330028,69376277.0
220098,6824309.0
220084,26294866.0
220090,44135101.0
220171,101235902.0
220116,86615157.0
220031,79698725.0
220119,41779077.0
220036,43253245.0
220067,18995027.0
220086,149050303.0
220111,49732093.0
220052,45824795.0
220135,41260874.0
220008,33586953.0
220073,25388060.0
410001,25837702.0
220083,9788664.0
410006,18923066.0
410008,22613076.0
410013,16975025.0
410011,38781369.0
410007,181182783.0
300017,27773169.0
300020,39612289.0
300034,99540209.0
300018,62153077.0
200019,32276657.0
200025,3778492.0
200034,22565170.0
200001,23936973.0
200002,10759052.0
200018,13455199.0
200041,3698593.0
470003,122228183.0
470024,12745486.0
70012,18688804.0

2025-01-27 01:19:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:19:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:19:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:19:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:19:10 - snowflake.connector.connection - INFO - closed
2025-01-27 01:19:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:19:11 - root - INFO - SQL:
SELECT
     "provider_id",
     SUM("total_charges") AS "total_inpatient_charges"
   FROM (
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
   ) AS combined_inpatient
   GROUP BY
     "provider_id"
   LIMIT 100;
Results:
provider_id,total_inpatient_charges
220024,89989392.0
220015,187521217.0
220030,69023839.0
220050,13097157.0
220065,52361636.0
220066,266181388.0
220077,1154752963.0
220016,91366007.0
220098,33533832.0
220095,59932384.0
220001,133978945.0
220058,8806789.0
220062,62941511.0
220176,265438769.0
220163,1679649943.0
220175,270827840.0
220084,128501938.0
220049,86846075.0
220090,215193656.0
220174,55917927.0
220080,264471524.0
220105,174823725.0
220029,123932564.0
220035,978240035.0
220063,417937093.0
220126,204902156.0
220116,596890389.0
220071,4115268700.0
220110,3266352663.0
220011,150422598.0
220070,255102431.0
220108,134547859.0
220100,703156309.0
220086,1142059069.0
220111,261349276.0
220083,47965888.0
220177,399550.0
220074,1397614322.0
220052,263193606.0
410008,138192259.0
410011,263701756.0
410007,1367123367.0
410005,119552428.0
300012,334114421.0
200020,130050910.0
200009,1218485954.0
200063,100113028.0
470011,28691774.0
470024,63772210.0
70025,1948897436.0
300018,332472579.0
200002,34996748.0
470001,94077367.0
70016,352896735.0
310074,844674003.0
310017,1047703749.0
310112,879220698.0
310031,629727702.0
310108,1622793347.0
330199,30834015.0
330385,25220320.0
330273,353249148.0
330104,896846114.0
390052,35963349.0
220046,391857173.0
220051,45324208.0
220171,689505175.0
220010,255044527.0
220082,98470776.0
220033,319242242.0
220031,516246320.0
220017,66655226.0
220119,253708759.0
220067,74755942.0
220060,251311564.0
220135,227399904.0
220012,651808432.0
220073,119267627.0
220088,348361723.0
220101,507970513.0
220008,185074768.0
220020,169733867.0
410006,105017552.0
410001,115499772.0
410009,640242746.0
410013,97062671.0
410010,5794021.0
410012,779156982.0
410004,146876613.0
300017,161823298.0
300011,199561089.0
300034,697448261.0
300003,1204083555.0
300029,526907666.0
300023,249673314.0
200019,206416560.0
200040,32257148.0
200008,192252243.0
200024,329778503.0
200039,370873789.0

2025-01-27 01:19:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:19:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:19:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:19:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-27 01:19:13 - snowflake.connector.connection - INFO - closed
2025-01-27 01:19:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:19:13 - root - INFO - SQL:
SELECT
     "provider_id",
     SUM("total_charges") AS "total_inpatient_charges"
   FROM (
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
   ) AS combined_inpatient
   GROUP BY
     "provider_id"
   ORDER BY
     "total_inpatient_charges" DESC
   LIMIT 1;
Results:
provider_id,total_inpatient_charges
50625,9644314164.0

2025-01-27 01:19:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:19:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:19:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:19:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-27 01:19:14 - snowflake.connector.connection - INFO - closed
2025-01-27 01:19:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:20:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:20:19 - root - INFO - ```sql
SELECT
  "year",
  "avg_inpatient_revenue_per_case",
  "avg_outpatient_revenue_per_case"
FROM
(
  SELECT
    '2011' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2012' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2013' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2014' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2015' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
) AS yearly_data;
```
2025-01-27 01:20:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:20:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:20:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:20:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:20:21 - snowflake.connector.connection - INFO - closed
2025-01-27 01:20:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:22:10 - root - INFO - SQL:
SELECT
  "year",
  "avg_inpatient_revenue_per_case",
  "avg_outpatient_revenue_per_case"
FROM
(
  SELECT
    '2011' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2012' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2013' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2014' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2015' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
) AS yearly_data;
Results:
year,avg_inpatient_revenue_per_case,avg_outpatient_revenue_per_case
2011,112947.43942222658,906.7765011223345
2012,114030.06865837818,976.842926904295
2013,124324.8839121602,952.2019428005565
2014,183225.06990801578,1656.531157482571
2015,195636.1917136553,

2025-01-27 01:22:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-27 01:22:12 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:12 - root - INFO - SQL:
SELECT
    '2011' AS "year",
    CASE
        WHEN SUM("outpatient_services") > 0 THEN SUM("outpatient_services" * "average_estimated_submitted_charges") / SUM("outpatient_services")
        ELSE NULL
    END AS "avg_outpatient_revenue_per_case"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
LIMIT 100
Results:
year,avg_outpatient_revenue_per_case
2011,906.7765011223345

2025-01-27 01:22:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:22:14 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:14 - root - INFO - SQL:
SELECT
    "year",
    CASE
        WHEN SUM("total_discharges") > 0 THEN SUM("total_charges") / SUM("total_discharges")
        ELSE NULL
    END AS "avg_inpatient_revenue_per_case"
FROM (
    SELECT
        '2011' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2012' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2013' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2014' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2015' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
    WHERE
        "provider_id" = '50625'
) AS inpatient_yearly
GROUP BY
    "year"
ORDER BY
    "year"
LIMIT 100
Results:
year,avg_inpatient_revenue_per_case
2011,112947.43942222658
2012,114030.06865837818
2013,124324.8839121602
2014,183225.06990801578
2015,195636.1917136553

2025-01-27 01:22:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-27 01:22:16 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:17 - root - INFO - SQL:
SELECT
    "year",
    CASE
        WHEN SUM("outpatient_services") > 0 THEN SUM("total_charges") / SUM("outpatient_services")
        ELSE NULL
    END AS "avg_outpatient_revenue_per_case"
FROM (
    SELECT
        '2011' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2012' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2013' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2014' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2015' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
    WHERE
        "provider_id" = '50625'
) AS outpatient_yearly
GROUP BY
    "year"
ORDER BY
    "year"
LIMIT 100
Results:
year,avg_outpatient_revenue_per_case
2011,906.7765011223345
2012,976.842926904295
2013,952.2019428005565
2014,1656.531157482571

2025-01-27 01:22:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-27 01:22:19 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:19 - root - INFO - SQL:
SELECT
    inpatient."year",
    inpatient."avg_inpatient_revenue_per_case",
    outpatient."avg_outpatient_revenue_per_case"
FROM (
    SELECT
        "year",
        CASE
            WHEN SUM("total_discharges") > 0 THEN SUM("total_charges") / SUM("total_discharges")
            ELSE NULL
        END AS "avg_inpatient_revenue_per_case"
    FROM (
        SELECT
            '2011' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2012' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2013' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2014' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2015' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
        WHERE
            "provider_id" = '50625'
    ) AS inpatient_yearly
    GROUP BY
        "year"
) AS inpatient
JOIN (
    SELECT
        "year",
        CASE
            WHEN SUM("outpatient_services") > 0 THEN SUM("total_charges") / SUM("outpatient_services")
            ELSE NULL
        END AS "avg_outpatient_revenue_per_case"
    FROM (
        SELECT
            '2011' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2012' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2013' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2014' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2015' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
        WHERE
            "provider_id" = '50625'
    ) AS outpatient_yearly
    GROUP BY
        "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY
    inpatient."year"
LIMIT 100
Results:
year,avg_inpatient_revenue_per_case,avg_outpatient_revenue_per_case
2011,112947.43942222658,906.7765011223345
2012,114030.06865837818,976.842926904295
2013,124324.8839121602,952.2019428005565
2014,183225.06990801578,1656.531157482571

2025-01-27 01:22:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-27 01:22:21 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:21 - root - INFO - SQL:
SELECT DISTINCT
    "provider_id",
    "provider_name",
    "provider_street_address",
    "provider_city",
    "provider_state",
    "provider_zipcode"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
LIMIT 100
Results:
provider_id,provider_name,provider_street_address,provider_city,provider_state,provider_zipcode
50625,CEDARS-SINAI MEDICAL CENTER,8700 BEVERLY BLVD,LOS ANGELES,CA,90048

2025-01-27 01:22:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-01-27 01:22:23 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:23 - root - INFO - SQL:
SELECT
    "provider_id",
    SUM("total_charges") AS "total_inpatient_charges"
FROM (
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
) AS combined_inpatient
GROUP BY
    "provider_id"
ORDER BY
    "total_inpatient_charges" DESC
LIMIT 10
Results:
provider_id,total_inpatient_charges
50625,9644314164.0
100007,9004742087.0
330101,7091270344.0
390164,5809092177.0
50441,5214445568.0
450388,5008308366.0
330059,4337920762.0
70022,4270774971.0
330106,4136141184.0
220071,4115268700.0

2025-01-27 01:22:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-27 01:22:25 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:25 - root - INFO - SQL:
SELECT DISTINCT
    "drg_definition"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
LIMIT 100
Results:
drg_definition
039 - EXTRACRANIAL PROCEDURES W/O CC/MCC
057 - DEGENERATIVE NERVOUS SYSTEM DISORDERS W/O MCC
064 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W MCC
065 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W CC
066 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W/O CC/MCC
069 - TRANSIENT ISCHEMIA
074 - CRANIAL & PERIPHERAL NERVE DISORDERS W/O MCC
101 - SEIZURES W/O MCC
149 - DYSEQUILIBRIUM
176 - PULMONARY EMBOLISM W/O MCC
177 - RESPIRATORY INFECTIONS & INFLAMMATIONS W MCC
189 - PULMONARY EDEMA & RESPIRATORY FAILURE
190 - CHRONIC OBSTRUCTIVE PULMONARY DISEASE W MCC
194 - SIMPLE PNEUMONIA & PLEURISY W CC
195 - SIMPLE PNEUMONIA & PLEURISY W/O CC/MCC
202 - BRONCHITIS & ASTHMA W CC/MCC
238 - MAJOR CARDIOVASC PROCEDURES W/O MCC
243 - PERMANENT CARDIAC PACEMAKER IMPLANT W CC
246 - PERC CARDIOVASC PROC W DRUG-ELUTING STENT W MCC OR 4+ VESSELS/STENTS
252 - OTHER VASCULAR PROCEDURES W MCC
254 - OTHER VASCULAR PROCEDURES W/O CC/MCC
"280 - ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE W MCC"
"281 - ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE W CC"
"282 - ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE W/O CC/MCC"
"286 - CIRCULATORY DISORDERS EXCEPT AMI, W CARD CATH W MCC"
"287 - CIRCULATORY DISORDERS EXCEPT AMI, W CARD CATH W/O MCC"
292 - HEART FAILURE & SHOCK W CC
293 - HEART FAILURE & SHOCK W/O CC/MCC
310 - CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS W/O CC/MCC
372 - MAJOR GASTROINTESTINAL DISORDERS & PERITONEAL INFECTIONS W CC
379 - G.I. HEMORRHAGE W/O CC/MCC
390 - G.I. OBSTRUCTION W/O CC/MCC
460 - SPINAL FUSION EXCEPT CERVICAL W/O MCC
481 - HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT W CC
491 - BACK & NECK PROC EXC SPINAL FUSION W/O CC/MCC
689 - KIDNEY & URINARY TRACT INFECTIONS W MCC
872 - SEPTICEMIA OR SEVERE SEPSIS W/O MV 96+ HOURS W/O MCC
948 - SIGNS & SYMPTOMS W/O MCC
244 - PERMANENT CARDIAC PACEMAKER IMPLANT W/O CC/MCC
312 - SYNCOPE & COLLAPSE
314 - OTHER CIRCULATORY SYSTEM DIAGNOSES W MCC
"392 - ESOPHAGITIS, GASTROENT & MISC DIGEST DISORDERS W/O MCC"
419 - LAPAROSCOPIC CHOLECYSTECTOMY W/O C.D.E. W/O CC/MCC
470 - MAJOR JOINT REPLACEMENT OR REATTACHMENT OF LOWER EXTREMITY W/O MCC
473 - CERVICAL SPINAL FUSION W/O CC/MCC
480 - HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT W MCC
482 - HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT W/O CC/MCC
536 - FRACTURES OF HIP & PELVIS W/O MCC
603 - CELLULITIS W/O MCC
698 - OTHER KIDNEY & URINARY TRACT DIAGNOSES W MCC
871 - SEPTICEMIA OR SEVERE SEPSIS W/O MV 96+ HOURS W MCC
193 - SIMPLE PNEUMONIA & PLEURISY W MCC
178 - RESPIRATORY INFECTIONS & INFLAMMATIONS W CC
192 - CHRONIC OBSTRUCTIVE PULMONARY DISEASE W/O CC/MCC
208 - RESPIRATORY SYSTEM DIAGNOSIS W VENTILATOR SUPPORT <96 HOURS
247 - PERC CARDIOVASC PROC W DRUG-ELUTING STENT W/O MCC
251 - PERC CARDIOVASC PROC W/O CORONARY ARTERY STENT W/O MCC
291 - HEART FAILURE & SHOCK W MCC
300 - PERIPHERAL VASCULAR DISORDERS W CC
301 - PERIPHERAL VASCULAR DISORDERS W/O CC/MCC
303 - ATHEROSCLEROSIS W/O MCC
305 - HYPERTENSION W/O MCC
308 - CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS W MCC
389 - G.I. OBSTRUCTION W CC
418 - LAPAROSCOPIC CHOLECYSTECTOMY W/O C.D.E. W CC
439 - DISORDERS OF PANCREAS EXCEPT MALIGNANCY W CC
683 - RENAL FAILURE W CC
191 - CHRONIC OBSTRUCTIVE PULMONARY DISEASE W CC
207 - RESPIRATORY SYSTEM DIAGNOSIS W VENTILATOR SUPPORT 96+ HOURS
253 - OTHER VASCULAR PROCEDURES W CC
309 - CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS W CC
313 - CHEST PAIN
329 - MAJOR SMALL & LARGE BOWEL PROCEDURES W MCC
330 - MAJOR SMALL & LARGE BOWEL PROCEDURES W CC
377 - G.I. HEMORRHAGE W MCC
378 - G.I. HEMORRHAGE W CC
"391 - ESOPHAGITIS, GASTROENT & MISC DIGEST DISORDERS W MCC"
469 - MAJOR JOINT REPLACEMENT OR REATTACHMENT OF LOWER EXTREMITY W MCC
"563 - FX, SPRN, STRN & DISL EXCEPT FEMUR, HIP, PELVIS & THIGH W/O MCC"
602 - CELLULITIS W MCC
638 - DIABETES W CC
"640 - MISC DISORDERS OF NUTRITION,METABOLISM,FLUIDS/ELECTROLYTES W MCC"
690 - KIDNEY & URINARY TRACT INFECTIONS W/O MCC
699 - OTHER KIDNEY & URINARY TRACT DIAGNOSES W CC
812 - RED BLOOD CELL DISORDERS W/O MCC
853 - INFECTIOUS & PARASITIC DISEASES W O.R. PROCEDURE W MCC
870 - SEPTICEMIA OR SEVERE SEPSIS W MV 96+ HOURS
885 - PSYCHOSES
682 - RENAL FAILURE W MCC
918 - POISONING & TOXIC EFFECTS OF DRUGS W/O MCC
203 - BRONCHITIS & ASTHMA W/O CC/MCC
249 - PERC CARDIOVASC PROC W NON-DRUG-ELUTING STENT W/O MCC
315 - OTHER CIRCULATORY SYSTEM DIAGNOSES W CC
394 - OTHER DIGESTIVE SYSTEM DIAGNOSES W CC
552 - MEDICAL BACK PROBLEMS W/O MCC
684 - RENAL FAILURE W/O CC/MCC
811 - RED BLOOD CELL DISORDERS W MCC
897 - ALCOHOL/DRUG ABUSE OR DEPENDENCE W/O REHABILITATION THERAPY W/O MCC
917 - POISONING & TOXIC EFFECTS OF DRUGS W MCC
"641 - MISC DISORDERS OF NUTRITION,METABOLISM,FLUIDS/ELECTROLYTES W/O MCC"

2025-01-27 01:22:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:22:26 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:27 - root - INFO - SQL:
SELECT
    '2011' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2012' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2013' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2014' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2015' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
WHERE
    "provider_id" = '50625'
LIMIT 100
Results:
year,total_inpatient_discharges
2011,10177
2012,10778
2013,10337
2014,15220
2015,16316

2025-01-27 01:22:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:22:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:22:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:22:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:22:29 - snowflake.connector.connection - INFO - closed
2025-01-27 01:22:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:22:29 - root - INFO - SQL:
SELECT
    '2011' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2012' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2013' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2014' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2015' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
WHERE
    "provider_id" = '50625'
LIMIT 100
Results:
year,total_outpatient_services
2011,71280.0
2012,78021.0
2013,84826.0
2014,83768.0
2015,

2025-01-27 01:22:29 - root - INFO - itercount: 0
2025-01-27 01:22:29 - root - INFO - Database Name: CMS_DATA
Schema Name: CMS_CODES
DDL describes table information.
,0
table_name,HCPCS
description,
DDL,"create or replace TABLE HCPCS (
	HCPC VARCHAR(16777216),
	SEQNUM VARCHAR(16777216),
	RECID NUMBER(38,0),
	LONG_DESCRIPTION VARCHAR(16777216),
	SHORT_DESCRIPTION VARCHAR(16777216),
	PRICE1 VARCHAR(16777216),
	PRICE2 VARCHAR(16777216),
	PRICE3 VARCHAR(16777216),
	PRICE4 VARCHAR(16777216),
	MULT_PI VARCHAR(16777216),
	CIM1 VARCHAR(16777216),
	CIM2 VARCHAR(16777216),
	CIM3 VARCHAR(16777216),
	MCM1 FLOAT,
	MCM2 NUMBER(38,0),
	MCM3 VARCHAR(16777216),
	STATUTE VARCHAR(16777216),
	LABCERT1 VARCHAR(16777216),
	LABCERT2 VARCHAR(16777216),
	LABCERT3 VARCHAR(16777216),
	LABCERT4 VARCHAR(16777216),
	LABCERT5 VARCHAR(16777216),
	LABCERT6 VARCHAR(16777216),
	LABCERT7 VARCHAR(16777216),
	LABCERT8 VARCHAR(16777216),
	XREF1 VARCHAR(16777216),
	XREF2 VARCHAR(16777216),
	XREF3 VARCHAR(16777216),
	XREF4 VARCHAR(16777216),
	XREF5 VARCHAR(16777216),
	COV VARCHAR(16777216),
	ASC_GRP VARCHAR(16777216),
	ASC_DT VARCHAR(16777216),
	OPPS VARCHAR(16777216),
	OPPS_PI VARCHAR(16777216),
	OPPS_DT VARCHAR(16777216),
	PROCNOTE VARCHAR(16777216),
	BETOS VARCHAR(16777216),
	TOS1 VARCHAR(16777216),
	TOS2 VARCHAR(16777216),
	TOS3 VARCHAR(16777216),
	TOS4 VARCHAR(16777216),
	TOS5 VARCHAR(16777216),
	ANEST_BU VARCHAR(16777216),
	ADD_DT VARCHAR(16777216),
	ACT_EFF_DT VARCHAR(16777216),
	TERM_DT VARCHAR(16777216),
	ACTION_CD BOOLEAN
);"

,1
table_name,ICD10_PROCEDURES_2019
description,
DDL,"create or replace TABLE ICD10_PROCEDURES_2019 (
	""order_number"" VARCHAR(16777216),
	""pcs_code"" VARCHAR(16777216),
	""is_header_code"" BOOLEAN,
	""short_description"" VARCHAR(16777216),
	""long_description"" VARCHAR(16777216)
);"

,2
table_name,ICD9_DIAGNOSES
description,
DDL,"create or replace TABLE ICD9_DIAGNOSES (
	DIAGNOSIS_CODE VARCHAR(16777216),
	LONG_DESCRIPTION VARCHAR(16777216),
	SHORT_DESCRIPTION VARCHAR(16777216)
);"

,3
table_name,ICD10_DIAGNOSES_2019
description,
DDL,"create or replace TABLE ICD10_DIAGNOSES_2019 (
	""order_number"" VARCHAR(16777216),
	""cm_code"" VARCHAR(16777216),
	""is_header_code"" BOOLEAN,
	""short_description"" VARCHAR(16777216),
	""long_description"" VARCHAR(16777216)
);"

,4
table_name,ICD9_PROCEDURES
description,
DDL,"create or replace TABLE ICD9_PROCEDURES (
	PROCEDURE_CODE VARCHAR(16777216),
	LONG_DESCRIPTION VARCHAR(16777216),
	SHORT_DESCRIPTION VARCHAR(16777216)
);"

Database Name: CMS_DATA
Schema Name: CMS_MEDICARE
DDL describes table information.
,0
table_name,HOME_HEALTH_AGENCIES_2013
description,
DDL,"create or replace TABLE HOME_HEALTH_AGENCIES_2013 (
	""provider_id"" VARCHAR(16777216),
	""agency_name"" VARCHAR(16777216),
	""street_address"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0),
	""total_episodes_non_lupa"" NUMBER(38,0),
	""distinct_users_non_lupa"" NUMBER(38,0),
	""total_hha_charge_amount_non_lupa"" NUMBER(38,0),
	""total_hha_medicare_payment_amount_non_lupa"" NUMBER(38,0),
	""total_hha_medicare_standard_payment_amount_non_lupa"" NUMBER(38,0),
	""outlier_payments_as_a_percent_of_medicare_payment_amount_non_lupa"" NUMBER(38,0),
	""total_lupa_episodes"" NUMBER(38,0),
	""total_hha_medicare_payment_amount_for_lupas"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['HOME_HEALTH_AGENCIES_2013', 'HOME_HEALTH_AGENCIES_2014']
,1
table_name,HOSPICE_PROVIDERS_2014
description,
DDL,"create or replace TABLE HOSPICE_PROVIDERS_2014 (
	""provider_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""street_address"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0),
	""hrr"" VARCHAR(16777216),
	""hospice_beneficiaries"" NUMBER(38,0),
	""total_days"" NUMBER(38,0),
	""total_medicare_payment_amount"" NUMBER(38,0),
	""total_medicare_standard_payment_amount"" NUMBER(38,0),
	""total_charge_amount"" NUMBER(38,0),
	""percent_routine_home_care_days"" NUMBER(38,0),
	""physician_services"" NUMBER(38,0),
	""home_health_visit_hours_per_day"" FLOAT,
	""skilled_nursing_visit_hours_per_day"" FLOAT,
	""social_service_visit_hours_per_day"" FLOAT,
	""total_live_discharges"" NUMBER(38,0),
	""hospice_beneficiaries_with_seven_or_fewer_hospice_care_days"" NUMBER(38,0),
	""hospice_beneficiaries_with_more_than_sixty_hospice_care_days"" NUMBER(38,0),
	""hospice_beneficiaries_with_more_than_one_hundred_eighty_hospice_care_days"" NUMBER(38,0),
	""home_health_visit_hours_per_day_during_week_prior_to_death"" FLOAT,
	""skilled_nursing_visit_hours_per_day_during_week_prior_to_death"" FLOAT,
	""social_service_visit_hours_per_day_during_week_prior_to_death"" FLOAT,
	""average_age"" FLOAT,
	""male_hospice_beneficiaries"" NUMBER(38,0),
	""female_hospice_beneficiaries"" NUMBER(38,0),
	""white_hospice_beneficiaries"" NUMBER(38,0),
	""black_hospice_beneficiaries"" NUMBER(38,0),
	""asian_hospice_beneficiaries"" NUMBER(38,0),
	""hispanic_hospice_beneficiaries"" NUMBER(38,0),
	""other_unknown_race_hospice_beneficiaries"" NUMBER(38,0),
	""medicare_advantage_hospice_beneficiaries"" NUMBER(38,0),
	""medicaid_eligible_hospice_beneficiaries"" NUMBER(38,0),
	""hospice_beneficiaries_with_a_primary_diagnosis_of_cancer"" NUMBER(38,0),
	""hospice_beneficiaries_with_a_primary_diagnosis_of_dementia"" NUMBER(38,0),
	""hospice_beneficiaries_with_a_primary_diagnosis_of_stroke"" NUMBER(38,0),
	""hospice_beneficiaries_with_a_primary_diagnosis_of_circulatory_heart_disease"" NUMBER(38,0),
	""hospice_beneficiaries_with_a_primary_diagnosis_of_respiratory_disease"" NUMBER(38,0),
	""hospice_beneficiaries_with_other_primary_diagnoses"" NUMBER(38,0),
	""site_of_service_home_hospice_beneficiaries"" NUMBER(38,0),
	""site_of_service_assisted_living_facility_hospice_beneficiaries"" NUMBER(38,0),
	""site_of_service_long_term_care_or_non_skilled_nursing_facility_hospice_beneficiaries"" NUMBER(38,0),
	""site_of_service_skilled_nursing_facility_hospice_beneficiaries"" NUMBER(38,0),
	""site_of_service_inpatient_hospital_hospice_beneficiaries"" NUMBER(38,0),
	""site_of_service_inpatient_hospice_hospice_beneficiaries"" NUMBER(38,0),
	""site_of_service_other_facility_hospice_beneficiaries"" NUMBER(38,0)
);"

,2
table_name,HOSPITAL_GENERAL_INFO
description,
DDL,"create or replace TABLE HOSPITAL_GENERAL_INFO (
	""provider_id"" VARCHAR(16777216),
	""hospital_name"" VARCHAR(16777216),
	""address"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""zip_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""phone_number"" VARCHAR(16777216),
	""hospital_type"" VARCHAR(16777216),
	""hospital_ownership"" VARCHAR(16777216),
	""emergency_services"" BOOLEAN,
	""meets_criteria_for_promoting_interoperability_of_ehrs"" BOOLEAN,
	""hospital_overall_rating"" VARCHAR(16777216),
	""hospital_overall_rating_footnote"" VARCHAR(16777216),
	""mortality_group_measure_count"" VARCHAR(16777216),
	""facility_mortaility_measures_count"" VARCHAR(16777216),
	""mortality_measures_better_count"" VARCHAR(16777216),
	""mortality_measures_no_different_count"" VARCHAR(16777216),
	""mortality_measures_worse_count"" VARCHAR(16777216),
	""mortaility_group_footnote"" VARCHAR(16777216),
	""safety_measures_count"" VARCHAR(16777216),
	""facility_care_safety_measures_count"" VARCHAR(16777216),
	""safety_measures_better_count"" VARCHAR(16777216),
	""safety_measures_no_different_count"" VARCHAR(16777216),
	""safety_measures_worse_count"" VARCHAR(16777216),
	""safety_group_footnote"" VARCHAR(16777216),
	""readmission_measures_count"" VARCHAR(16777216),
	""facility_readmission_measures_count"" VARCHAR(16777216),
	""readmission_measures_better_count"" VARCHAR(16777216),
	""readmission_measures_no_different_count"" VARCHAR(16777216),
	""readmission_measures_worse_count"" VARCHAR(16777216),
	""readmission_measures_footnote"" VARCHAR(16777216),
	""patient_experience_measures_count"" VARCHAR(16777216),
	""facility_patient_experience_measures_count"" VARCHAR(16777216),
	""patient_experience_measures_footnote"" VARCHAR(16777216),
	""timely_and_effective_care_measures_count"" VARCHAR(16777216),
	""facility_timely_and_effective_care_measures_count"" VARCHAR(16777216),
	""timely_and_effective_care_measures_footnote"" VARCHAR(16777216)
);"

,3
table_name,INPATIENT_CHARGES_2011
description,
DDL,"create or replace TABLE INPATIENT_CHARGES_2011 (
	""provider_id"" VARCHAR(16777216),
	""provider_name"" VARCHAR(16777216),
	""provider_street_address"" VARCHAR(16777216),
	""provider_city"" VARCHAR(16777216),
	""provider_state"" VARCHAR(16777216),
	""provider_zipcode"" VARCHAR(16777216),
	""drg_definition"" VARCHAR(16777216),
	""hospital_referral_region_description"" VARCHAR(16777216),
	""total_discharges"" NUMBER(38,0),
	""average_covered_charges"" FLOAT,
	""average_total_payments"" FLOAT,
	""average_medicare_payments"" FLOAT
);"

Some other tables have the similar structure: ['INPATIENT_CHARGES_2011', 'INPATIENT_CHARGES_2014', 'INPATIENT_CHARGES_2012', 'INPATIENT_CHARGES_2013', 'INPATIENT_CHARGES_2015']
,4
table_name,NURSING_FACILITIES_2014
description,
DDL,"create or replace TABLE NURSING_FACILITIES_2014 (
	""provider_id"" VARCHAR(16777216),
	""facility_name"" VARCHAR(16777216),
	""street_address"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0),
	""total_stays"" NUMBER(38,0),
	""distinct_beneficiaries_per_provider"" NUMBER(38,0),
	""average_length_of_stays_days"" FLOAT,
	""total_snf_charge_amount"" NUMBER(38,0),
	""total_snf_medicare_allowed_amount"" NUMBER(38,0),
	""total_snf_medicare_payment_amount"" NUMBER(38,0),
	""total_snf_medicare_standard_payment_amount"" NUMBER(38,0),
	""average_age"" NUMBER(38,0),
	""male_beneficiaries"" NUMBER(38,0),
	""female_beneficiaries"" NUMBER(38,0),
	""nondual_beneficiaries"" NUMBER(38,0),
	""dual_beneficiaries"" NUMBER(38,0),
	""white_beneficiaries"" NUMBER(38,0),
	""black_beneficiaries"" NUMBER(38,0),
	""asian_pacific_islander_beneficiaries"" NUMBER(38,0),
	""hispanic_beneficiaries"" NUMBER(38,0),
	""american_indian_or_alaska_native_beneficiaries"" NUMBER(38,0),
	""other_unknown_beneficiaries"" NUMBER(38,0),
	""average_hcc_score"" FLOAT,
	""percent_of_beneficiaries_with_atrial_fibrillation"" NUMBER(38,0),
	""percent_of_beneficiaries_with_alzheimers"" NUMBER(38,0),
	""percent_of_beneficiaries_with_asthma"" NUMBER(38,0),
	""percent_of_beneficiaries_with_cancer"" NUMBER(38,0),
	""percent_of_beneficiaries_with_chf"" NUMBER(38,0),
	""percent_of_beneficiaries_with_chronic_kidney_disease"" NUMBER(38,0),
	""percent_of_beneficiaries_with_copd"" NUMBER(38,0),
	""percent_of_beneficiaries_with_depression"" NUMBER(38,0),
	""percent_of_beneficiaries_with_diabetes"" NUMBER(38,0),
	""percent_of_beneficiaries_with_hyperlipidemia"" NUMBER(38,0),
	""percent_of_beneficiaries_with_hypertension"" NUMBER(38,0),
	""percent_of_beneficiaries_with_ihd"" NUMBER(38,0),
	""percent_of_beneficiaries_with_osteoporosis"" NUMBER(38,0),
	""percent_of_beneficiaries_with_ra_oa"" NUMBER(38,0),
	""percent_of_beneficiaries_with_schizophrenia"" NUMBER(38,0),
	""percent_of_beneficiaries_with_stroke"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['NURSING_FACILITIES_2014', 'NURSING_FACILITIES_2013']
,5
table_name,OUTPATIENT_CHARGES_2012
description,
DDL,"create or replace TABLE OUTPATIENT_CHARGES_2012 (
	""provider_id"" VARCHAR(16777216),
	""provider_name"" VARCHAR(16777216),
	""provider_street_address"" VARCHAR(16777216),
	""provider_city"" VARCHAR(16777216),
	""provider_state"" VARCHAR(16777216),
	""provider_zipcode"" VARCHAR(16777216),
	""apc"" VARCHAR(16777216),
	""hospital_referral_region"" VARCHAR(16777216),
	""outpatient_services"" NUMBER(38,0),
	""average_estimated_submitted_charges"" FLOAT,
	""average_total_payments"" FLOAT
);"

Some other tables have the similar structure: ['OUTPATIENT_CHARGES_2012', 'OUTPATIENT_CHARGES_2014', 'OUTPATIENT_CHARGES_2011', 'OUTPATIENT_CHARGES_2013', 'OUTPATIENT_CHARGES_2015']
,6
table_name,PART_D_PRESCRIBER_2014
description,
DDL,"create or replace TABLE PART_D_PRESCRIBER_2014 (
	""npi"" VARCHAR(16777216),
	""nppes_provider_last_org_name"" VARCHAR(16777216),
	""nppes_provider_first_name"" VARCHAR(16777216),
	""nppes_provider_city"" VARCHAR(16777216),
	""nppes_provider_state"" VARCHAR(16777216),
	""specialty_description"" VARCHAR(16777216),
	""description_flag"" VARCHAR(16777216),
	""drug_name"" VARCHAR(16777216),
	""generic_name"" VARCHAR(16777216),
	""bene_count"" NUMBER(38,0),
	""total_claim_count"" NUMBER(38,0),
	""total_day_supply"" NUMBER(38,0),
	""total_drug_cost"" FLOAT,
	""bene_count_ge65"" NUMBER(38,0),
	""bene_count_ge65_suppress_flag"" VARCHAR(16777216),
	""total_claim_count_ge65"" NUMBER(38,0),
	""ge65_suppress_flag"" VARCHAR(16777216),
	""total_day_supply_ge65"" NUMBER(38,0),
	""total_drug_cost_ge65"" FLOAT,
	""total_30_day_fill_count"" FLOAT,
	""total_30_day_fill_count_ge65"" FLOAT
);"

,7
table_name,REFERRING_DURABLE_MEDICAL_EQUIP_2013
description,
DDL,"create or replace TABLE REFERRING_DURABLE_MEDICAL_EQUIP_2013 (
	""referring_npi"" VARCHAR(16777216),
	""referring_provider_last_name_organization_name"" VARCHAR(16777216),
	""referring_provider_first_name"" VARCHAR(16777216),
	""referring_provider_middle_initial"" VARCHAR(16777216),
	""referring_provider_credentials"" VARCHAR(16777216),
	""referring_provider_gender"" VARCHAR(16777216),
	""referring_provider_entity_code"" VARCHAR(16777216),
	""referring_provider_street_1"" VARCHAR(16777216),
	""referring_provider_street_2"" VARCHAR(16777216),
	""referring_provider_city"" VARCHAR(16777216),
	""referring_provider_state"" VARCHAR(16777216),
	""referring_provider_zip"" VARCHAR(16777216),
	""referring_provider_country"" VARCHAR(16777216),
	""referring_provider_type"" VARCHAR(16777216),
	""referring_provider_type_flag"" VARCHAR(16777216),
	""number_of_suppliers"" NUMBER(38,0),
	""number_of_supplier_hcpcs"" NUMBER(38,0),
	""number_of_supplier_beneficiaries"" NUMBER(38,0),
	""number_of_supplier_claims"" NUMBER(38,0),
	""number_of_supplier_services"" NUMBER(38,0),
	""supplier_submitted_charges"" FLOAT,
	""supplier_medicare_allowed_amount"" FLOAT,
	""supplier_medicare_payment_amount"" FLOAT,
	""durable_medical_equipment_suppression_indicator"" VARCHAR(16777216),
	""number_of_durable_medical_equipment_suppliers"" NUMBER(38,0),
	""number_of_durable_medical_equipment_hcpcs"" NUMBER(38,0),
	""number_of_durable_medical_equipment_beneficiaries"" NUMBER(38,0),
	""number_of_durable_medical_equipment_claims"" NUMBER(38,0),
	""number_of_durable_medical_equipment_services"" NUMBER(38,0),
	""durable_medical_equipment_submitted_charges"" FLOAT,
	""durable_medical_equipment_medicare_allowed_amount"" FLOAT,
	""durable_medical_equipment_medicare_payment_amount"" FLOAT,
	""prosthetic_and_orthotic_suppression_indicator"" VARCHAR(16777216),
	""number_of_prosthetic_and_orthotic_suppliers"" NUMBER(38,0),
	""number_of_prosthetic_and_orthotic_hcpcs"" NUMBER(38,0),
	""number_of_prosthetic_and_orthotic_beneficiaries"" NUMBER(38,0),
	""number_of_prosthetic_and_orthotic_claims"" NUMBER(38,0),
	""number_of_prosthetic_and_orthotic_services"" NUMBER(38,0),
	""prosthetic_and_orthotic_submitted_charges"" FLOAT,
	""prosthetic_and_orthotic_medicare_allowed_amount"" FLOAT,
	""prosthetic_and_orthotic_medicare_payment_amount"" FLOAT,
	""drug_and_nutritional_suppression_indicator"" VARCHAR(16777216),
	""number_of_drug_and_nutritional_products_suppliers"" NUMBER(38,0),
	""number_of_drug_and_nutritional_products_hcpcs"" NUMBER(38,0),
	""number_of_drug_and_nutritional_products_beneficiaries"" NUMBER(38,0),
	""number_of_drug_and_nutritional_products_claims"" NUMBER(38,0),
	""number_of_drug_and_nutritional_products_services"" NUMBER(38,0),
	""drug_and_nutritional_products_submitted_charges"" FLOAT,
	""drug_and_nutritional_products_medicare_allowed_amount"" FLOAT,
	""drug_and_nutritional_products_medicare_payment_amount"" FLOAT
);"

Some other tables have the similar structure: ['REFERRING_DURABLE_MEDICAL_EQUIP_2013', 'REFERRING_DURABLE_MEDICAL_EQUIP_2014']
,8
table_name,PHYSICIANS_AND_OTHER_SUPPLIER_2015
description,
DDL,"create or replace TABLE PHYSICIANS_AND_OTHER_SUPPLIER_2015 (
	""npi"" VARCHAR(16777216),
	""nppes_provider_last_org_name"" VARCHAR(16777216),
	""nppes_provider_first_name"" VARCHAR(16777216),
	""nppes_provider_mi"" VARCHAR(16777216),
	""nppes_credentials"" VARCHAR(16777216),
	""nppes_provider_gender"" VARCHAR(16777216),
	""nppes_entity_code"" VARCHAR(16777216),
	""nppes_provider_street1"" VARCHAR(16777216),
	""nppes_provider_street2"" VARCHAR(16777216),
	""nppes_provider_city"" VARCHAR(16777216),
	""nppes_provider_zip"" VARCHAR(16777216),
	""nppes_provider_state"" VARCHAR(16777216),
	""nppes_provider_country"" VARCHAR(16777216),
	""provider_type"" VARCHAR(16777216),
	""medicare_participation_indicator"" VARCHAR(16777216),
	""place_of_service"" VARCHAR(16777216),
	""hcpcs_code"" VARCHAR(16777216),
	""hcpcs_description"" VARCHAR(16777216),
	""hcpcs_drug_indicator"" VARCHAR(16777216),
	""line_srvc_cnt"" FLOAT,
	""bene_unique_cnt"" NUMBER(38,0),
	""bene_day_srvc_cnt"" NUMBER(38,0),
	""average_medicare_allowed_amt"" FLOAT,
	""average_submitted_chrg_amt"" FLOAT,
	""average_medicare_payment_amt"" FLOAT,
	""average_medicare_standard_amt"" FLOAT
);"

Some other tables have the similar structure: ['PHYSICIANS_AND_OTHER_SUPPLIER_2015', 'PHYSICIANS_AND_OTHER_SUPPLIER_2012', 'PHYSICIANS_AND_OTHER_SUPPLIER_2013', 'PHYSICIANS_AND_OTHER_SUPPLIER_2014']
Database Name: CMS_DATA
Schema Name: CMS_SYNTHETIC_PATIENT_DATA_OMOP
DDL describes table information.
,0
table_name,CONDITION_OCCURRENCE
description,
DDL,"create or replace TABLE CONDITION_OCCURRENCE (
	""condition_occurrence_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""condition_concept_id"" NUMBER(38,0),
	""condition_start_date"" DATE,
	""condition_start_datetime"" NUMBER(38,0),
	""condition_end_date"" DATE,
	""condition_end_datetime"" NUMBER(38,0),
	""condition_type_concept_id"" NUMBER(38,0),
	""stop_reason"" VARCHAR(16777216),
	""provider_id"" NUMBER(38,0),
	""visit_occurrence_id"" NUMBER(38,0),
	""visit_detail_id"" NUMBER(38,0),
	""condition_source_value"" VARCHAR(16777216),
	""condition_source_concept_id"" NUMBER(38,0),
	""condition_status_source_value"" VARCHAR(16777216),
	""condition_status_concept_id"" NUMBER(38,0)
);"

,1
table_name,DRUG_ERA
description,
DDL,"create or replace TABLE DRUG_ERA (
	""drug_era_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""drug_concept_id"" NUMBER(38,0),
	""drug_era_start_date"" DATE,
	""drug_era_end_date"" DATE,
	""drug_exposure_count"" NUMBER(38,0),
	""gap_days"" NUMBER(38,0)
);"

,2
table_name,LOCATION
description,
DDL,"create or replace TABLE LOCATION (
	""location_id"" NUMBER(38,0),
	""address_1"" VARCHAR(16777216),
	""address_2"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""zip"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""location_source_value"" VARCHAR(16777216)
);"

,3
table_name,PERSON
description,
DDL,"create or replace TABLE PERSON (
	""race_concept_id"" NUMBER(38,0),
	""ethnicity_concept_id"" NUMBER(38,0),
	""location_id"" NUMBER(38,0),
	""provider_id"" NUMBER(38,0),
	""care_site_id"" NUMBER(38,0),
	""person_source_value"" VARCHAR(16777216),
	""gender_source_value"" VARCHAR(16777216),
	""gender_source_concept_id"" NUMBER(38,0),
	""race_source_value"" VARCHAR(16777216),
	""race_source_concept_id"" NUMBER(38,0),
	""ethnicity_source_value"" VARCHAR(16777216),
	""ethnicity_source_concept_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""gender_concept_id"" NUMBER(38,0),
	""year_of_birth"" NUMBER(38,0),
	""month_of_birth"" NUMBER(38,0),
	""day_of_birth"" NUMBER(38,0),
	""birth_datetime"" NUMBER(38,0)
);"

,4
table_name,CONDITION_ERA
description,
DDL,"create or replace TABLE CONDITION_ERA (
	""condition_era_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""condition_concept_id"" NUMBER(38,0),
	""condition_era_start_date"" DATE,
	""condition_era_end_date"" DATE,
	""condition_occurrence_count"" NUMBER(38,0)
);"

,5
table_name,DEVICE_EXPOSURE
description,
DDL,"create or replace TABLE DEVICE_EXPOSURE (
	""device_exposure_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""device_concept_id"" NUMBER(38,0),
	""device_exposure_start_date"" DATE,
	""device_exposure_start_datetime"" NUMBER(38,0),
	""device_exposure_end_date"" DATE,
	""device_exposure_end_datetime"" NUMBER(38,0),
	""device_type_concept_id"" NUMBER(38,0),
	""unique_device_id"" VARCHAR(16777216),
	""quantity"" NUMBER(38,0),
	""provider_id"" NUMBER(38,0),
	""visit_occurrence_id"" NUMBER(38,0),
	""visit_detail_id"" NUMBER(38,0),
	""device_source_value"" VARCHAR(16777216),
	""device_source_concept_id"" NUMBER(38,0)
);"

,6
table_name,DOMAIN
description,
DDL,"create or replace TABLE DOMAIN (
	""domain_id"" VARCHAR(16777216),
	""domain_name"" VARCHAR(16777216),
	""domain_concept_id"" NUMBER(38,0)
);"

,7
table_name,DOSE_ERA
description,
DDL,"create or replace TABLE DOSE_ERA (
	""dose_era_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""drug_concept_id"" NUMBER(38,0),
	""unit_concept_id"" NUMBER(38,0),
	""dose_value"" FLOAT,
	""dose_era_start_date"" DATE,
	""dose_era_end_date"" DATE
);"

,8
table_name,OBSERVATION
description,
DDL,"create or replace TABLE OBSERVATION (
	""observation_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""observation_concept_id"" NUMBER(38,0),
	""observation_date"" DATE,
	""observation_datetime"" NUMBER(38,0),
	""observation_type_concept_id"" NUMBER(38,0),
	""value_as_number"" FLOAT,
	""value_as_string"" VARCHAR(16777216),
	""value_as_concept_id"" NUMBER(38,0),
	""qualifier_concept_id"" NUMBER(38,0),
	""unit_concept_id"" NUMBER(38,0),
	""provider_id"" NUMBER(38,0),
	""visit_occurrence_id"" NUMBER(38,0),
	""visit_detail_id"" NUMBER(38,0),
	""observation_source_value"" VARCHAR(16777216),
	""observation_source_concept_id"" NUMBER(38,0),
	""unit_source_value"" VARCHAR(16777216),
	""qualifier_source_value"" VARCHAR(16777216)
);"

,9
table_name,COST
description,
DDL,"create or replace TABLE COST (
	""cost_id"" NUMBER(38,0),
	""cost_event_id"" NUMBER(38,0),
	""cost_domain_id"" VARCHAR(16777216),
	""cost_type_concept_id"" NUMBER(38,0),
	""currency_concept_id"" NUMBER(38,0),
	""total_charge"" FLOAT,
	""total_cost"" FLOAT,
	""total_paid"" FLOAT,
	""paid_by_payer"" FLOAT,
	""paid_by_patient"" FLOAT,
	""paid_patient_copay"" FLOAT,
	""paid_patient_coinsurance"" FLOAT,
	""paid_patient_deductible"" FLOAT,
	""paid_by_primary"" FLOAT,
	""paid_ingredient_cost"" FLOAT,
	""paid_dispensing_fee"" FLOAT,
	""payer_plan_period_id"" NUMBER(38,0),
	""amount_allowed"" FLOAT,
	""revenue_code_concept_id"" NUMBER(38,0),
	""revenue_code_source_value"" VARCHAR(16777216),
	""drg_concept_id"" NUMBER(38,0),
	""drg_source_value"" VARCHAR(16777216)
);"

,10
table_name,PROVIDER
description,
DDL,"create or replace TABLE PROVIDER (
	""provider_id"" NUMBER(38,0),
	""provider_name"" VARCHAR(16777216),
	""npi"" VARCHAR(16777216),
	""dea"" VARCHAR(16777216),
	""specialty_concept_id"" NUMBER(38,0),
	""care_site_id"" NUMBER(38,0),
	""year_of_birth"" NUMBER(38,0),
	""gender_concept_id"" NUMBER(38,0),
	""provider_source_value"" VARCHAR(16777216),
	""specialty_source_value"" VARCHAR(16777216),
	""specialty_source_concept_id"" NUMBER(38,0),
	""gender_source_value"" VARCHAR(16777216),
	""gender_source_concept_id"" NUMBER(38,0)
);"

,11
table_name,CARE_SITE
description,
DDL,"create or replace TABLE CARE_SITE (
	""care_site_id"" NUMBER(38,0),
	""care_site_name"" VARCHAR(16777216),
	""place_of_service_concept_id"" NUMBER(38,0),
	""location_id"" NUMBER(38,0),
	""care_site_source_value"" VARCHAR(16777216),
	""place_of_service_source_value"" VARCHAR(16777216)
);"

,12
table_name,CONCEPT_ANCESTOR
description,
DDL,"create or replace TABLE CONCEPT_ANCESTOR (
	""ancestor_concept_id"" NUMBER(38,0),
	""descendant_concept_id"" NUMBER(38,0),
	""min_levels_of_separation"" NUMBER(38,0),
	""max_levels_of_separation"" NUMBER(38,0)
);"

,13
table_name,CONCEPT_RELATIONSHIP
description,
DDL,"create or replace TABLE CONCEPT_RELATIONSHIP (
	""concept_id_1"" NUMBER(38,0),
	""concept_id_2"" NUMBER(38,0),
	""relationship_id"" VARCHAR(16777216),
	""valid_start_date"" DATE,
	""valid_end_date"" DATE,
	""invalid_reason"" VARCHAR(16777216)
);"

,14
table_name,DEATH
description,
DDL,"create or replace TABLE DEATH (
	""person_id"" NUMBER(38,0),
	""death_date"" DATE,
	""death_datetime"" NUMBER(38,0),
	""death_type_concept_id"" NUMBER(38,0),
	""cause_concept_id"" NUMBER(38,0),
	""cause_source_value"" VARCHAR(16777216),
	""cause_source_concept_id"" NUMBER(38,0)
);"

,15
table_name,DRUG_STRENGTH
description,
DDL,"create or replace TABLE DRUG_STRENGTH (
	""drug_concept_id"" NUMBER(38,0),
	""ingredient_concept_id"" NUMBER(38,0),
	""amount_value"" FLOAT,
	""amount_unit_concept_id"" NUMBER(38,0),
	""numerator_value"" FLOAT,
	""numerator_unit_concept_id"" NUMBER(38,0),
	""denominator_value"" FLOAT,
	""denominator_unit_concept_id"" NUMBER(38,0),
	""box_size"" NUMBER(38,0),
	""valid_start_date"" DATE,
	""valid_end_date"" DATE,
	""invalid_reason"" VARCHAR(16777216)
);"

,16
table_name,CONCEPT
description,
DDL,"create or replace TABLE CONCEPT (
	""concept_id"" NUMBER(38,0),
	""concept_name"" VARCHAR(16777216),
	""domain_id"" VARCHAR(16777216),
	""vocabulary_id"" VARCHAR(16777216),
	""concept_class_id"" VARCHAR(16777216),
	""standard_concept"" VARCHAR(16777216),
	""concept_code"" VARCHAR(16777216),
	""valid_start_date"" DATE,
	""valid_end_date"" DATE,
	""invalid_reason"" VARCHAR(16777216)
);"

,17
table_name,CONCEPT_CLASS
description,
DDL,"create or replace TABLE CONCEPT_CLASS (
	""concept_class_id"" VARCHAR(16777216),
	""concept_class_name"" VARCHAR(16777216),
	""concept_class_concept_id"" NUMBER(38,0)
);"

,18
table_name,DRUG_EXPOSURE
description,
DDL,"create or replace TABLE DRUG_EXPOSURE (
	""drug_type_concept_id"" NUMBER(38,0),
	""stop_reason"" VARCHAR(16777216),
	""refills"" NUMBER(38,0),
	""quantity"" FLOAT,
	""days_supply"" NUMBER(38,0),
	""sig"" VARCHAR(16777216),
	""route_concept_id"" NUMBER(38,0),
	""lot_number"" VARCHAR(16777216),
	""provider_id"" NUMBER(38,0),
	""visit_occurrence_id"" NUMBER(38,0),
	""visit_detail_id"" NUMBER(38,0),
	""drug_source_value"" VARCHAR(16777216),
	""drug_source_concept_id"" NUMBER(38,0),
	""route_source_value"" VARCHAR(16777216),
	""dose_unit_source_value"" VARCHAR(16777216),
	""drug_exposure_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""drug_concept_id"" NUMBER(38,0),
	""drug_exposure_start_date"" DATE,
	""drug_exposure_start_datetime"" NUMBER(38,0),
	""drug_exposure_end_date"" DATE,
	""drug_exposure_end_datetime"" NUMBER(38,0),
	""verbatim_end_date"" DATE
);"

,19
table_name,OBSERVATION_PERIOD
description,
DDL,"create or replace TABLE OBSERVATION_PERIOD (
	""observation_period_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""observation_period_start_date"" DATE,
	""observation_period_end_date"" DATE,
	""period_type_concept_id"" NUMBER(38,0)
);"

,20
table_name,PAYER_PLAN_PERIOD
description,
DDL,"create or replace TABLE PAYER_PLAN_PERIOD (
	""payer_concept_id"" NUMBER(38,0),
	""payer_source_value"" VARCHAR(16777216),
	""payer_source_concept_id"" NUMBER(38,0),
	""plan_concept_id"" NUMBER(38,0),
	""plan_source_value"" VARCHAR(16777216),
	""plan_source_concept_id"" NUMBER(38,0),
	""sponsor_concept_id"" NUMBER(38,0),
	""sponsor_source_value"" VARCHAR(16777216),
	""sponsor_source_concept_id"" NUMBER(38,0),
	""family_source_value"" VARCHAR(16777216),
	""stop_reason_concept_id"" NUMBER(38,0),
	""stop_reason_source_value"" VARCHAR(16777216),
	""stop_reason_source_concept_id"" NUMBER(38,0),
	""payer_plan_period_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""payer_plan_period_start_date"" DATE,
	""payer_plan_period_end_date"" DATE
);"

,21
table_name,RELATIONSHIP
description,
DDL,"create or replace TABLE RELATIONSHIP (
	""relationship_id"" VARCHAR(16777216),
	""relationship_name"" VARCHAR(16777216),
	""is_hierarchical"" VARCHAR(16777216),
	""defines_ancestry"" VARCHAR(16777216),
	""reverse_relationship_id"" VARCHAR(16777216),
	""relationship_concept_id"" NUMBER(38,0)
);"

,22
table_name,VOCABULARY
description,
DDL,"create or replace TABLE VOCABULARY (
	""vocabulary_id"" VARCHAR(16777216),
	""vocabulary_name"" VARCHAR(16777216),
	""vocabulary_reference"" VARCHAR(16777216),
	""vocabulary_version"" VARCHAR(16777216),
	""vocabulary_concept_id"" NUMBER(38,0)
);"

,23
table_name,PROCEDURE_OCCURRENCE
description,
DDL,"create or replace TABLE PROCEDURE_OCCURRENCE (
	""procedure_type_concept_id"" NUMBER(38,0),
	""modifier_concept_id"" NUMBER(38,0),
	""quantity"" NUMBER(38,0),
	""provider_id"" NUMBER(38,0),
	""visit_occurrence_id"" NUMBER(38,0),
	""visit_detail_id"" NUMBER(38,0),
	""procedure_source_value"" VARCHAR(16777216),
	""procedure_source_concept_id"" NUMBER(38,0),
	""modifier_source_value"" VARCHAR(16777216),
	""procedure_occurrence_id"" NUMBER(38,0),
	""person_id"" NUMBER(38,0),
	""procedure_concept_id"" NUMBER(38,0),
	""procedure_dat"" DATE,
	""procedure_datetime"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'CMS_DATA': {'CMS_CODES': ['HCPCS', 'ICD10_DIAGNOSES_2019', 'ICD10_PROCEDURES_2019', 'ICD9_DIAGNOSES', 'ICD9_PROCEDURES'], 'CMS_MEDICARE': ['HOME_HEALTH_AGENCIES_2013', 'HOME_HEALTH_AGENCIES_2014', 'HOSPICE_PROVIDERS_2014', 'HOSPITAL_GENERAL_INFO', 'INPATIENT_CHARGES_2011', 'INPATIENT_CHARGES_2012', 'INPATIENT_CHARGES_2013', 'INPATIENT_CHARGES_2014', 'INPATIENT_CHARGES_2015', 'NURSING_FACILITIES_2013', 'NURSING_FACILITIES_2014', 'OUTPATIENT_CHARGES_2011', 'OUTPATIENT_CHARGES_2012', 'OUTPATIENT_CHARGES_2013', 'OUTPATIENT_CHARGES_2014', 'OUTPATIENT_CHARGES_2015', 'PART_D_PRESCRIBER_2014', 'PHYSICIANS_AND_OTHER_SUPPLIER_2012', 'PHYSICIANS_AND_OTHER_SUPPLIER_2013', 'PHYSICIANS_AND_OTHER_SUPPLIER_2014', 'PHYSICIANS_AND_OTHER_SUPPLIER_2015', 'REFERRING_DURABLE_MEDICAL_EQUIP_2013', 'REFERRING_DURABLE_MEDICAL_EQUIP_2014'], 'CMS_SYNTHETIC_PATIENT_DATA_OMOP': ['CARE_SITE', 'CONCEPT', 'CONCEPT_ANCESTOR', 'CONCEPT_CLASS', 'CONCEPT_RELATIONSHIP', 'CONDITION_ERA', 'CONDITION_OCCURRENCE', 'COST', 'DEATH', 'DEVICE_EXPOSURE', 'DOMAIN', 'DOSE_ERA', 'DRUG_ERA', 'DRUG_EXPOSURE', 'DRUG_STRENGTH', 'LOCATION', 'OBSERVATION', 'OBSERVATION_PERIOD', 'PAYER_PLAN_PERIOD', 'PERSON', 'PROCEDURE_OCCURRENCE', 'PROVIDER', 'RELATIONSHIP', 'VOCABULARY']}}
Begin Exploring Related Columns
To address the task, we'll first identify the relevant tables and columns, and then construct SQL queries to extract and analyze the required data.

---

**Relevant Tables and Columns:**

1. **INPATIENT_CHARGES_2011 to INPATIENT_CHARGES_2015** (located in `CMS_DATA.CMS_MEDICARE`)

   - `"provider_id"`: Identifies the provider.
     - **Usage**: To group data by provider.
   - `"provider_name"`: Name of the provider.
     - **Usage**: For identification and display purposes.
   - `"total_discharges"`: Number of discharges for each DRG code.
     - **Usage**: Represents the number of inpatient cases.
   - `"average_covered_charges"`: Average charges billed by the provider.
     - **Usage**: Used to calculate total charges per provider.
   - `"drg_definition"`: Diagnosis-related group code.
     - **Usage**: May be used for detailed analysis by DRG.

2. **OUTPATIENT_CHARGES_2011 to OUTPATIENT_CHARGES_2015** (located in `CMS_DATA.CMS_MEDICARE`)

   - `"provider_id"`: Identifies the provider.
     - **Usage**: To match and group outpatient data with inpatient data.
   - `"provider_name"`: Name of the provider.
     - **Usage**: For identification and display purposes.
   - `"outpatient_services"`: Number of outpatient services provided.
     - **Usage**: Represents the number of outpatient cases.
   - `"average_estimated_submitted_charges"`: Average outpatient charges billed by the provider.
     - **Usage**: Used to calculate total outpatient charges.
   - `"apc"`: Ambulatory payment classification code.
     - **Usage**: May be used for detailed analysis by APC.

---

**Conditions that may be used:**

- Filtering data for the years 2011 to 2015.
- Calculating total charges by multiplying average charges with the number of discharges/services.
- Summing total charges per provider to find the provider with the highest inpatient charges.
- Matching `"provider_id"` across different tables to consolidate data.
- Calculating average revenues per case by year for both inpatient and outpatient services.

---

**SQL Queries:**

1. **Retrieve total inpatient charges per provider for 2011**

   ```sql
   SELECT
     "provider_id",
     SUM("total_discharges" * "average_covered_charges") AS "total_inpatient_charges_2011"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
   GROUP BY
     "provider_id"
   LIMIT 100;
   ```

2. **Retrieve total inpatient charges per provider for 2012**

   ```sql
   SELECT
     "provider_id",
     SUM("total_discharges" * "average_covered_charges") AS "total_inpatient_charges_2012"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
   GROUP BY
     "provider_id"
   LIMIT 100;
   ```

3. **Calculate total inpatient charges per provider from 2011 to 2015**

   ```sql
   SELECT
     "provider_id",
     SUM("total_charges") AS "total_inpatient_charges"
   FROM (
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
   ) AS combined_inpatient
   GROUP BY
     "provider_id"
   LIMIT 100;
   ```

4. **Identify the provider with the highest total inpatient charges from 2011 to 2015**

   ```sql
   SELECT
     "provider_id",
     SUM("total_charges") AS "total_inpatient_charges"
   FROM (
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
   ) AS combined_inpatient
   GROUP BY
     "provider_id"
   ORDER BY
     "total_inpatient_charges" DESC
   LIMIT 1;
   ```

5. **Fetch inpatient revenue averaged by case for each year for the top provider**

   ```sql
   SELECT
     '2011' AS "year",
     SUM("total_discharges" * "average_covered_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
   WHERE
     "provider_id" = 'TOP_PROVIDER_ID'
   LIMIT 100;
   ```

   *(Replace `'TOP_PROVIDER_ID'` with the actual provider ID from query 4.)*

6. **Fetch outpatient revenue averaged by case for each year for the top provider**

   ```sql
   SELECT
     '2011' AS "year",
     SUM("outpatient_services" * "average_estimated_submitted_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
   FROM
     CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
   WHERE
     "provider_id" = 'TOP_PROVIDER_ID'
   LIMIT 100;
   ```

7. **Consolidate inpatient average revenues per case from 2011 to 2015 for the top provider**

   ```sql
   SELECT
     "year",
     SUM("total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
   FROM (
     SELECT
       '2011' AS "year",
       "provider_id",
       "total_discharges",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2012' AS "year",
       "provider_id",
       "total_discharges",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2013' AS "year",
       "provider_id",
       "total_discharges",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2014' AS "year",
       "provider_id",
       "total_discharges",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2015' AS "year",
       "provider_id",
       "total_discharges",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
   ) AS inpatient_yearly
   GROUP BY
     "year"
   ORDER BY
     "year"
   LIMIT 100;
   ```

8. **Consolidate outpatient average revenues per case from 2011 to 2015 for the top provider**

   ```sql
   SELECT
     "year",
     SUM("total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
   FROM (
     SELECT
       '2011' AS "year",
       "provider_id",
       "outpatient_services",
       ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2012' AS "year",
       "provider_id",
       "outpatient_services",
       ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2013' AS "year",
       "provider_id",
       "outpatient_services",
       ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2014' AS "year",
       "provider_id",
       "outpatient_services",
       ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
     UNION ALL
     SELECT
       '2015' AS "year",
       "provider_id",
       "outpatient_services",
       ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
     WHERE
       "provider_id" = 'TOP_PROVIDER_ID'
   ) AS outpatient_yearly
   GROUP BY
     "year"
   ORDER BY
     "year"
   LIMIT 100;
   ```

9. **Combine inpatient and outpatient average revenues per case by year for the top provider**

   ```sql
   SELECT
     inpatient."year",
     inpatient."avg_inpatient_revenue_per_case",
     outpatient."avg_outpatient_revenue_per_case"
   FROM (
     -- Inpatient revenue per case from query 7
     SELECT
       "year",
       SUM("total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
     FROM
       (...inpatient data...)
   ) AS inpatient
   JOIN (
     -- Outpatient revenue per case from query 8
     SELECT
       "year",
       SUM("total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
     FROM
       (...outpatient data...)
   ) AS outpatient
   ON
     inpatient."year" = outpatient."year"
   ORDER BY
     inpatient."year"
   LIMIT 100;
   ```

10. **Retrieve provider's details for reference**

    ```sql
    SELECT DISTINCT
      "provider_id",
      "provider_name",
      "provider_street_address",
      "provider_city",
      "provider_state",
      "provider_zipcode"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    LIMIT 100;
    ```

11. **List the top 10 providers with the highest total inpatient charges from 2011 to 2015**

    ```sql
    SELECT
      "provider_id",
      SUM("total_charges") AS "total_inpatient_charges"
    FROM (
      -- Same combined inpatient data as query 3
    ) AS combined_inpatient
    GROUP BY
      "provider_id"
    ORDER BY
      "total_inpatient_charges" DESC
    LIMIT 10;
    ```

12. **Retrieve the DRG definitions billed by the top provider**

    ```sql
    SELECT DISTINCT
      "drg_definition"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    LIMIT 100;
    ```

13. **Calculate total inpatient discharges per year for the top provider**

    ```sql
    SELECT
      '2011' AS "year",
      SUM("total_discharges") AS "total_inpatient_discharges"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2012' AS "year",
      SUM("total_discharges") AS "total_inpatient_discharges"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2013' AS "year",
      SUM("total_discharges") AS "total_inpatient_discharges"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2014' AS "year",
      SUM("total_discharges") AS "total_inpatient_discharges"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2015' AS "year",
      SUM("total_discharges") AS "total_inpatient_discharges"
    FROM
      CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    LIMIT 100;
    ```

14. **Calculate total outpatient services per year for the top provider**

    ```sql
    SELECT
      '2011' AS "year",
      SUM("outpatient_services") AS "total_outpatient_services"
    FROM
      CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2012' AS "year",
      SUM("outpatient_services") AS "total_outpatient_services"
    FROM
      CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2013' AS "year",
      SUM("outpatient_services") AS "total_outpatient_services"
    FROM
      CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2014' AS "year",
      SUM("outpatient_services") AS "total_outpatient_services"
    FROM
      CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    UNION ALL
    SELECT
      '2015' AS "year",
      SUM("outpatient_services") AS "total_outpatient_services"
    FROM
      CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
    WHERE
      "provider_id" = 'TOP_PROVIDER_ID'
    LIMIT 100;
    ```

---

In these queries, we've:

- Identified the provider with the highest total inpatient charges over the specified period.
- Calculated the average inpatient and outpatient revenues per case for each year.
- Ensured all column names are enclosed in double quotations as per Snowflake SQL syntax.
- Used UNION ALL to combine data from multiple years.
- Refrained from using common table expressions (CTEs) and kept the queries within the specified guidelines.

Please replace `'TOP_PROVIDER_ID'` with the actual provider ID obtained from query 4 when executing the queries.

---

**Note:** These queries should help in understanding the values in the related columns and provide the necessary data to fulfill the task requirements based on the available tables and columns.Query:
SELECT
     "provider_id",
     SUM("total_discharges" * "average_covered_charges") AS "total_inpatient_charges_2011"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
   GROUP BY
     "provider_id"
   LIMIT 100;
Answer:
provider_id,total_inpatient_charges_2011
220024,20804063.0
220015,33417620.0
220030,16044795.0
220050,2463649.0
220065,11744351.0
220066,57497606.0
220077,163493680.0
220046,65298227.0
220051,12137697.0
220016,16682756.0
220095,12414115.0
220001,23041016.0
220058,2717425.0
220062,6640617.0
220176,45714478.0
220163,295365847.0
220019,11662840.0
220175,58805092.0
220049,16520416.0
220174,17449604.0
220080,50002024.0
220082,32753267.0
220063,45808781.0
220105,34691546.0
220033,58757591.0
220029,25551868.0
220035,185429821.0
220126,43782928.0
220071,474564394.0
220088,45556502.0
220017,19376018.0
220002,42292578.0
220011,35048861.0
220070,59932992.0
220108,21831210.0
220100,110751541.0
220060,48902500.0
220101,90568568.0
220012,106767563.0
220074,261386595.0
410009,120226332.0
410012,124802935.0
300011,39356492.0
300012,58429205.0
300005,35732975.0
300001,103388196.0
300003,141765332.0
300029,70491268.0
300023,49635095.0
200040,10337720.0
200031,9188635.0
470005,45082252.0
70029,36335663.0
70027,40859127.0
70003,14705128.0
300019,19836710.0
70040,695573.0
70015,18913715.0
310058,11211880.0
310111,193090362.0
310112,147283684.0
310028,195953614.0
310029,266203260.0
330028,72830901.0
220098,7968509.0
220084,29513877.0
220090,46384179.0
220171,102178004.0
220116,95215054.0
220031,95559151.0
220119,42308147.0
220036,51537576.0
220067,21196415.0
220086,174732292.0
220111,48233157.0
220052,43242332.0
220135,42536122.0
220008,37688210.0
220073,26930586.0
220083,9297385.0
410006,21785852.0
410001,34232793.0
410008,22384307.0
410013,18143676.0
410011,46107446.0
410007,202221774.0
410010,1561924.0
300017,26584592.0
300020,38016960.0
300034,97334401.0
300018,56851943.0
200019,36055044.0
200025,3888778.0
200034,23532135.0
200001,24563441.0
200002,11939619.0
200018,15300531.0
470003,109599978.0
470024,9295201.0
70012,15870685.0
Query:
SELECT
     "provider_id",
     SUM("total_discharges" * "average_covered_charges") AS "total_inpatient_charges_2012"
   FROM
     CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
   GROUP BY
     "provider_id"
   LIMIT 100;
Answer:
provider_id,total_inpatient_charges_2012
220024,19355634.0
220015,35927921.0
220030,13883163.0
220050,2525661.0
220065,10724911.0
220066,55866144.0
220077,175665597.0
220046,67328109.0
220051,14242547.0
220016,19494505.0
220095,11336978.0
220001,27495850.0
220058,1659090.0
220062,6666896.0
220176,47419295.0
220163,257001909.0
220019,9658966.0
220175,57145006.0
220049,16292607.0
220174,15186373.0
220080,50888143.0
220082,31120325.0
220063,48076076.0
220105,30817408.0
220033,55554517.0
220029,23957773.0
220035,172460088.0
220126,43484004.0
220071,503229629.0
220088,57311650.0
220017,14558760.0
220002,45350530.0
220011,29036706.0
220070,51198504.0
220108,26117268.0
220100,114040452.0
220060,46565968.0
220101,94070100.0
220012,105402457.0
220074,237980335.0
410009,124755499.0
410012,131677759.0
300011,39237104.0
300012,60357446.0
300005,41783933.0
300001,109868385.0
300003,160908221.0
300029,76844212.0
300023,49772382.0
200040,10336000.0
200031,7449589.0
470005,46422897.0
70029,35688276.0
70027,47368689.0
70003,15047518.0
300019,19848057.0
70040,376350.0
70015,17246787.0
310058,7662472.0
310111,179010291.0
310112,153535475.0
310028,164702770.0
310029,239212882.0
330028,69376277.0
220098,6824309.0
220084,26294866.0
220090,44135101.0
220171,101235902.0
220116,86615157.0
220031,79698725.0
220119,41779077.0
220036,43253245.0
220067,18995027.0
220086,149050303.0
220111,49732093.0
220052,45824795.0
220135,41260874.0
220008,33586953.0
220073,25388060.0
410001,25837702.0
220083,9788664.0
410006,18923066.0
410008,22613076.0
410013,16975025.0
410011,38781369.0
410007,181182783.0
300017,27773169.0
300020,39612289.0
300034,99540209.0
300018,62153077.0
200019,32276657.0
200025,3778492.0
200034,22565170.0
200001,23936973.0
200002,10759052.0
200018,13455199.0
200041,3698593.0
470003,122228183.0
470024,12745486.0
70012,18688804.0
Query:
SELECT
     "provider_id",
     SUM("total_charges") AS "total_inpatient_charges"
   FROM (
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
   ) AS combined_inpatient
   GROUP BY
     "provider_id"
   LIMIT 100;
Answer:
provider_id,total_inpatient_charges
220024,89989392.0
220015,187521217.0
220030,69023839.0
220050,13097157.0
220065,52361636.0
220066,266181388.0
220077,1154752963.0
220016,91366007.0
220098,33533832.0
220095,59932384.0
220001,133978945.0
220058,8806789.0
220062,62941511.0
220176,265438769.0
220163,1679649943.0
220175,270827840.0
220084,128501938.0
220049,86846075.0
220090,215193656.0
220174,55917927.0
220080,264471524.0
220105,174823725.0
220029,123932564.0
220035,978240035.0
220063,417937093.0
220126,204902156.0
220116,596890389.0
220071,4115268700.0
220110,3266352663.0
220011,150422598.0
220070,255102431.0
220108,134547859.0
220100,703156309.0
220086,1142059069.0
220111,261349276.0
220083,47965888.0
220177,399550.0
220074,1397614322.0
220052,263193606.0
410008,138192259.0
410011,263701756.0
410007,1367123367.0
410005,119552428.0
300012,334114421.0
200020,130050910.0
200009,1218485954.0
200063,100113028.0
470011,28691774.0
470024,63772210.0
70025,1948897436.0
300018,332472579.0
200002,34996748.0
470001,94077367.0
70016,352896735.0
310074,844674003.0
310017,1047703749.0
310112,879220698.0
310031,629727702.0
310108,1622793347.0
330199,30834015.0
330385,25220320.0
330273,353249148.0
330104,896846114.0
390052,35963349.0
220046,391857173.0
220051,45324208.0
220171,689505175.0
220010,255044527.0
220082,98470776.0
220033,319242242.0
220031,516246320.0
220017,66655226.0
220119,253708759.0
220067,74755942.0
220060,251311564.0
220135,227399904.0
220012,651808432.0
220073,119267627.0
220088,348361723.0
220101,507970513.0
220008,185074768.0
220020,169733867.0
410006,105017552.0
410001,115499772.0
410009,640242746.0
410013,97062671.0
410010,5794021.0
410012,779156982.0
410004,146876613.0
300017,161823298.0
300011,199561089.0
300034,697448261.0
300003,1204083555.0
300029,526907666.0
300023,249673314.0
200019,206416560.0
200040,32257148.0
200008,192252243.0
200024,329778503.0
200039,370873789.0
Query:
SELECT
     "provider_id",
     SUM("total_charges") AS "total_inpatient_charges"
   FROM (
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
     UNION ALL
     SELECT
       "provider_id",
       ("total_discharges" * "average_covered_charges") AS "total_charges"
     FROM
       CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
   ) AS combined_inpatient
   GROUP BY
     "provider_id"
   ORDER BY
     "total_inpatient_charges" DESC
   LIMIT 1;
Answer:
provider_id,total_inpatient_charges
50625,9644314164.0
Query:
SELECT
  "year",
  "avg_inpatient_revenue_per_case",
  "avg_outpatient_revenue_per_case"
FROM
(
  SELECT
    '2011' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2012' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2013' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2014' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
UNION ALL
  SELECT
    '2015' AS "year",
    CASE 
      WHEN inpatient.total_discharges > 0 THEN inpatient.total_inpatient_revenue / inpatient.total_discharges 
      ELSE NULL 
    END AS "avg_inpatient_revenue_per_case",
    CASE 
      WHEN outpatient.total_services > 0 THEN outpatient.total_outpatient_revenue / outpatient.total_services 
      ELSE NULL 
    END AS "avg_outpatient_revenue_per_case"
  FROM
    (
      SELECT
        SUM("total_discharges") AS total_discharges,
        SUM("total_discharges" * "average_covered_charges") AS total_inpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      WHERE
        "provider_id" = '50625'
    ) AS inpatient
    LEFT JOIN
    (
      SELECT
        SUM("outpatient_services") AS total_services,
        SUM("outpatient_services" * "average_estimated_submitted_charges") AS total_outpatient_revenue
      FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
      WHERE
        "provider_id" = '50625'
    ) AS outpatient ON 1=1
) AS yearly_data;
Answer:
year,avg_inpatient_revenue_per_case,avg_outpatient_revenue_per_case
2011,112947.43942222658,906.7765011223345
2012,114030.06865837818,976.842926904295
2013,124324.8839121602,952.2019428005565
2014,183225.06990801578,1656.531157482571
2015,195636.1917136553,
Query:
SELECT
    '2011' AS "year",
    CASE
        WHEN SUM("outpatient_services") > 0 THEN SUM("outpatient_services" * "average_estimated_submitted_charges") / SUM("outpatient_services")
        ELSE NULL
    END AS "avg_outpatient_revenue_per_case"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
LIMIT 100
Answer:
year,avg_outpatient_revenue_per_case
2011,906.7765011223345
Query:
SELECT
    "year",
    CASE
        WHEN SUM("total_discharges") > 0 THEN SUM("total_charges") / SUM("total_discharges")
        ELSE NULL
    END AS "avg_inpatient_revenue_per_case"
FROM (
    SELECT
        '2011' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2012' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2013' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2014' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2015' AS "year",
        "provider_id",
        "total_discharges",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
    WHERE
        "provider_id" = '50625'
) AS inpatient_yearly
GROUP BY
    "year"
ORDER BY
    "year"
LIMIT 100
Answer:
year,avg_inpatient_revenue_per_case
2011,112947.43942222658
2012,114030.06865837818
2013,124324.8839121602
2014,183225.06990801578
2015,195636.1917136553
Query:
SELECT
    "year",
    CASE
        WHEN SUM("outpatient_services") > 0 THEN SUM("total_charges") / SUM("outpatient_services")
        ELSE NULL
    END AS "avg_outpatient_revenue_per_case"
FROM (
    SELECT
        '2011' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2012' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2013' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2014' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    WHERE
        "provider_id" = '50625'
    UNION ALL
    SELECT
        '2015' AS "year",
        "provider_id",
        "outpatient_services",
        ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
    WHERE
        "provider_id" = '50625'
) AS outpatient_yearly
GROUP BY
    "year"
ORDER BY
    "year"
LIMIT 100
Answer:
year,avg_outpatient_revenue_per_case
2011,906.7765011223345
2012,976.842926904295
2013,952.2019428005565
2014,1656.531157482571
Query:
SELECT
    inpatient."year",
    inpatient."avg_inpatient_revenue_per_case",
    outpatient."avg_outpatient_revenue_per_case"
FROM (
    SELECT
        "year",
        CASE
            WHEN SUM("total_discharges") > 0 THEN SUM("total_charges") / SUM("total_discharges")
            ELSE NULL
        END AS "avg_inpatient_revenue_per_case"
    FROM (
        SELECT
            '2011' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2012' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2013' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2014' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2015' AS "year",
            "total_discharges",
            ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
        WHERE
            "provider_id" = '50625'
    ) AS inpatient_yearly
    GROUP BY
        "year"
) AS inpatient
JOIN (
    SELECT
        "year",
        CASE
            WHEN SUM("outpatient_services") > 0 THEN SUM("total_charges") / SUM("outpatient_services")
            ELSE NULL
        END AS "avg_outpatient_revenue_per_case"
    FROM (
        SELECT
            '2011' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2012' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2013' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2014' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
        WHERE
            "provider_id" = '50625'
        UNION ALL
        SELECT
            '2015' AS "year",
            "outpatient_services",
            ("outpatient_services" * "average_estimated_submitted_charges") AS "total_charges"
        FROM
            CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
        WHERE
            "provider_id" = '50625'
    ) AS outpatient_yearly
    GROUP BY
        "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY
    inpatient."year"
LIMIT 100
Answer:
year,avg_inpatient_revenue_per_case,avg_outpatient_revenue_per_case
2011,112947.43942222658,906.7765011223345
2012,114030.06865837818,976.842926904295
2013,124324.8839121602,952.2019428005565
2014,183225.06990801578,1656.531157482571
Query:
SELECT DISTINCT
    "provider_id",
    "provider_name",
    "provider_street_address",
    "provider_city",
    "provider_state",
    "provider_zipcode"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
LIMIT 100
Answer:
provider_id,provider_name,provider_street_address,provider_city,provider_state,provider_zipcode
50625,CEDARS-SINAI MEDICAL CENTER,8700 BEVERLY BLVD,LOS ANGELES,CA,90048
Query:
SELECT
    "provider_id",
    SUM("total_charges") AS "total_inpatient_charges"
FROM (
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT
        "provider_id",
        ("total_discharges" * "average_covered_charges") AS "total_charges"
    FROM
        CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
) AS combined_inpatient
GROUP BY
    "provider_id"
ORDER BY
    "total_inpatient_charges" DESC
LIMIT 10
Answer:
provider_id,total_inpatient_charges
50625,9644314164.0
100007,9004742087.0
330101,7091270344.0
390164,5809092177.0
50441,5214445568.0
450388,5008308366.0
330059,4337920762.0
70022,4270774971.0
330106,4136141184.0
220071,4115268700.0
Query:
SELECT DISTINCT
    "drg_definition"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
LIMIT 100
Answer:
drg_definition
039 - EXTRACRANIAL PROCEDURES W/O CC/MCC
057 - DEGENERATIVE NERVOUS SYSTEM DISORDERS W/O MCC
064 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W MCC
065 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W CC
066 - INTRACRANIAL HEMORRHAGE OR CEREBRAL INFARCTION W/O CC/MCC
069 - TRANSIENT ISCHEMIA
074 - CRANIAL & PERIPHERAL NERVE DISORDERS W/O MCC
101 - SEIZURES W/O MCC
149 - DYSEQUILIBRIUM
176 - PULMONARY EMBOLISM W/O MCC
177 - RESPIRATORY INFECTIONS & INFLAMMATIONS W MCC
189 - PULMONARY EDEMA & RESPIRATORY FAILURE
190 - CHRONIC OBSTRUCTIVE PULMONARY DISEASE W MCC
194 - SIMPLE PNEUMONIA & PLEURISY W CC
195 - SIMPLE PNEUMONIA & PLEURISY W/O CC/MCC
202 - BRONCHITIS & ASTHMA W CC/MCC
238 - MAJOR CARDIOVASC PROCEDURES W/O MCC
243 - PERMANENT CARDIAC PACEMAKER IMPLANT W CC
246 - PERC CARDIOVASC PROC W DRUG-ELUTING STENT W MCC OR 4+ VESSELS/STENTS
252 - OTHER VASCULAR PROCEDURES W MCC
254 - OTHER VASCULAR PROCEDURES W/O CC/MCC
"280 - ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE W MCC"
"281 - ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE W CC"
"282 - ACUTE MYOCARDIAL INFARCTION, DISCHARGED ALIVE W/O CC/MCC"
"286 - CIRCULATORY DISORDERS EXCEPT AMI, W CARD CATH W MCC"
"287 - CIRCULATORY DISORDERS EXCEPT AMI, W CARD CATH W/O MCC"
292 - HEART FAILURE & SHOCK W CC
293 - HEART FAILURE & SHOCK W/O CC/MCC
310 - CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS W/O CC/MCC
372 - MAJOR GASTROINTESTINAL DISORDERS & PERITONEAL INFECTIONS W CC
379 - G.I. HEMORRHAGE W/O CC/MCC
390 - G.I. OBSTRUCTION W/O CC/MCC
460 - SPINAL FUSION EXCEPT CERVICAL W/O MCC
481 - HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT W CC
491 - BACK & NECK PROC EXC SPINAL FUSION W/O CC/MCC
689 - KIDNEY & URINARY TRACT INFECTIONS W MCC
872 - SEPTICEMIA OR SEVERE SEPSIS W/O MV 96+ HOURS W/O MCC
948 - SIGNS & SYMPTOMS W/O MCC
244 - PERMANENT CARDIAC PACEMAKER IMPLANT W/O CC/MCC
312 - SYNCOPE & COLLAPSE
314 - OTHER CIRCULATORY SYSTEM DIAGNOSES W MCC
"392 - ESOPHAGITIS, GASTROENT & MISC DIGEST DISORDERS W/O MCC"
419 - LAPAROSCOPIC CHOLECYSTECTOMY W/O C.D.E. W/O CC/MCC
470 - MAJOR JOINT REPLACEMENT OR REATTACHMENT OF LOWER EXTREMITY W/O MCC
473 - CERVICAL SPINAL FUSION W/O CC/MCC
480 - HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT W MCC
482 - HIP & FEMUR PROCEDURES EXCEPT MAJOR JOINT W/O CC/MCC
536 - FRACTURES OF HIP & PELVIS W/O MCC
603 - CELLULITIS W/O MCC
698 - OTHER KIDNEY & URINARY TRACT DIAGNOSES W MCC
871 - SEPTICEMIA OR SEVERE SEPSIS W/O MV 96+ HOURS W MCC
193 - SIMPLE PNEUMONIA & PLEURISY W MCC
178 - RESPIRATORY INFECTIONS & INFLAMMATIONS W CC
192 - CHRONIC OBSTRUCTIVE PULMONARY DISEASE W/O CC/MCC
208 - RESPIRATORY SYSTEM DIAGNOSIS W VENTILATOR SUPPORT <96 HOURS
247 - PERC CARDIOVASC PROC W DRUG-ELUTING STENT W/O MCC
251 - PERC CARDIOVASC PROC W/O CORONARY ARTERY STENT W/O MCC
291 - HEART FAILURE & SHOCK W MCC
300 - PERIPHERAL VASCULAR DISORDERS W CC
301 - PERIPHERAL VASCULAR DISORDERS W/O CC/MCC
303 - ATHEROSCLEROSIS W/O MCC
305 - HYPERTENSION W/O MCC
308 - CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS W MCC
389 - G.I. OBSTRUCTION W CC
418 - LAPAROSCOPIC CHOLECYSTECTOMY W/O C.D.E. W CC
439 - DISORDERS OF PANCREAS EXCEPT MALIGNANCY W CC
683 - RENAL FAILURE W CC
191 - CHRONIC OBSTRUCTIVE PULMONARY DISEASE W CC
207 - RESPIRATORY SYSTEM DIAGNOSIS W VENTILATOR SUPPORT 96+ HOURS
253 - OTHER VASCULAR PROCEDURES W CC
309 - CARDIAC ARRHYTHMIA & CONDUCTION DISORDERS W CC
313 - CHEST PAIN
329 - MAJOR SMALL & LARGE BOWEL PROCEDURES W MCC
330 - MAJOR SMALL & LARGE BOWEL PROCEDURES W CC
377 - G.I. HEMORRHAGE W MCC
378 - G.I. HEMORRHAGE W CC
"391 - ESOPHAGITIS, GASTROENT & MISC DIGEST DISORDERS W MCC"
469 - MAJOR JOINT REPLACEMENT OR REATTACHMENT OF LOWER EXTREMITY W MCC
"563 - FX, SPRN, STRN & DISL EXCEPT FEMUR, HIP, PELVIS & THIGH W/O MCC"
602 - CELLULITIS W MCC
638 - DIABETES W CC
"640 - MISC DISORDERS OF NUTRITION,METABOLISM,FLUIDS/ELECTROLYTES W MCC"
690 - KIDNEY & URINARY TRACT INFECTIONS W/O MCC
699 - OTHER KIDNEY & URINARY TRACT DIAGNOSES W CC
812 - RED BLOOD CELL DISORDERS W/O MCC
853 - INFECTIOUS & PARASITIC DISEASES W O.R. PROCEDURE W MCC
870 - SEPTICEMIA OR SEVERE SEPSIS W MV 96+ HOURS
885 - PSYCHOSES
682 - RENAL FAILURE W MCC
918 - POISONING & TOXIC EFFECTS OF DRUGS W/O MCC
203 - BRONCHITIS & ASTHMA W/O CC/MCC
249 - PERC CARDIOVASC PROC W NON-DRUG-ELUTING STENT W/O MCC
315 - OTHER CIRCULATORY SYSTEM DIAGNOSES W CC
394 - OTHER DIGESTIVE SYSTEM DIAGNOSES W CC
552 - MEDICAL BACK PROBLEMS W/O MCC
684 - RENAL FAILURE W/O CC/MCC
811 - RED BLOOD CELL DISORDERS W MCC
897 - ALCOHOL/DRUG ABUSE OR DEPENDENCE W/O REHABILITATION THERAPY W/O MCC
917 - POISONING & TOXIC EFFECTS OF DRUGS W MCC
"641 - MISC DISORDERS OF NUTRITION,METABOLISM,FLUIDS/ELECTROLYTES W/O MCC"
Query:
SELECT
    '2011' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2012' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2013' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2014' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2015' AS "year",
    SUM("total_discharges") AS "total_inpatient_discharges"
FROM
    CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
WHERE
    "provider_id" = '50625'
LIMIT 100
Answer:
year,total_inpatient_discharges
2011,10177
2012,10778
2013,10337
2014,15220
2015,16316
Query:
SELECT
    '2011' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2012' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2013' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2014' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
WHERE
    "provider_id" = '50625'
UNION ALL
SELECT
    '2015' AS "year",
    SUM("outpatient_services") AS "total_outpatient_services"
FROM
    CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
WHERE
    "provider_id" = '50625'
LIMIT 100
Answer:
year,total_outpatient_services
2011,71280.0
2012,78021.0
2013,84826.0
2014,83768.0
2015,
End Exploring Related Columns
Task: For the provider with the highest total inpatient service cost from 2011-2015, tell me its annual inpatient and outpatient revenues averaged by case for each year during that period.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: Sure, here's the information you requested:

```csv
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,avg_inpatient_revenue_2011:float,avg_outpatient_revenue_2011:float
2012,avg_inpatient_revenue_2012:float,avg_outpatient_revenue_2012:float
2013,avg_inpatient_revenue_2013:float,avg_outpatient_revenue_2013:float
2014,avg_inpatient_revenue_2014:float,avg_outpatient_revenue_2014:float
2015,avg_inpatient_revenue_2015:float,avg_outpatient_revenue_2015:float
```

**Explanation:**

The table displays the annual inpatient and outpatient revenues averaged by case for each year from 2011 to 2015 for the provider with the highest total inpatient service cost during that period. The values represent the average revenue per case, calculated by dividing the total revenue by the total number of cases for both inpatient and outpatient services..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'CMS_DATA': {'CMS_CODES': ['HCPCS', 'ICD10_DIAGNOSES_2019', 'ICD10_PROCEDURES_2019', 'ICD9_DIAGNOSES', 'ICD9_PROCEDURES'], 'CMS_MEDICARE': ['HOME_HEALTH_AGENCIES_2013', 'HOME_HEALTH_AGENCIES_2014', 'HOSPICE_PROVIDERS_2014', 'HOSPITAL_GENERAL_INFO', 'INPATIENT_CHARGES_2011', 'INPATIENT_CHARGES_2012', 'INPATIENT_CHARGES_2013', 'INPATIENT_CHARGES_2014', 'INPATIENT_CHARGES_2015', 'NURSING_FACILITIES_2013', 'NURSING_FACILITIES_2014', 'OUTPATIENT_CHARGES_2011', 'OUTPATIENT_CHARGES_2012', 'OUTPATIENT_CHARGES_2013', 'OUTPATIENT_CHARGES_2014', 'OUTPATIENT_CHARGES_2015', 'PART_D_PRESCRIBER_2014', 'PHYSICIANS_AND_OTHER_SUPPLIER_2012', 'PHYSICIANS_AND_OTHER_SUPPLIER_2013', 'PHYSICIANS_AND_OTHER_SUPPLIER_2014', 'PHYSICIANS_AND_OTHER_SUPPLIER_2015', 'REFERRING_DURABLE_MEDICAL_EQUIP_2013', 'REFERRING_DURABLE_MEDICAL_EQUIP_2014'], 'CMS_SYNTHETIC_PATIENT_DATA_OMOP': ['CARE_SITE', 'CONCEPT', 'CONCEPT_ANCESTOR', 'CONCEPT_CLASS', 'CONCEPT_RELATIONSHIP', 'CONDITION_ERA', 'CONDITION_OCCURRENCE', 'COST', 'DEATH', 'DEVICE_EXPOSURE', 'DOMAIN', 'DOSE_ERA', 'DRUG_ERA', 'DRUG_EXPOSURE', 'DRUG_STRENGTH', 'LOCATION', 'OBSERVATION', 'OBSERVATION_PERIOD', 'PAYER_PLAN_PERIOD', 'PERSON', 'PROCEDURE_OCCURRENCE', 'PROVIDER', 'RELATIONSHIP', 'VOCABULARY']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 01:24:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:24:08 - root - INFO - Sure, here's the SQL query to get the information you requested:

```sql
SELECT
  COALESCE(inpatient."year", outpatient."year") AS "Year",
  inpatient."avg_inpatient_revenue_per_case" AS "Inpatient_Revenue_Avg_Per_Case",
  outpatient."avg_outpatient_revenue_per_case" AS "Outpatient_Revenue_Avg_Per_Case"
FROM (
  SELECT
    "year",
    SUM("inpatient_total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges") AS "inpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
  ) AS inpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS inpatient
FULL OUTER JOIN (
  SELECT
    "year",
    SUM("outpatient_total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges") AS "outpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
  ) AS outpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY COALESCE(inpatient."year", outpatient."year");
```

This query calculates the annual average inpatient and outpatient revenues per case for each year from 2011 to 2015 for the provider with the highest total inpatient service cost during that period.

**Explanation:**

- **Subquery to Find the Top Provider:**
  - The innermost subquery calculates the total inpatient charges for each provider from 2011 to 2015 by multiplying the number of discharges by the average covered charges.
  - Providers are then grouped, and the one with the highest total inpatient charges is selected (`LIMIT 1`).

- **Calculating Inpatient Revenue Averages:**
  - The inpatient data from 2011 to 2015 is combined using `UNION ALL`.
  - For the top provider, the total inpatient charges and total discharges are summed for each year.
  - The average inpatient revenue per case is calculated by dividing the total charges by the total discharges for each year.

- **Calculating Outpatient Revenue Averages:**
  - Similarly, the outpatient data from 2011 to 2015 is combined.
  - For the same provider, the total outpatient charges and total services are summed for each year.
  - The average outpatient revenue per case is calculated by dividing the total charges by the total services for each year.

- **Combining Results:**
  - The inpatient and outpatient results are joined on the year to present a consolidated view.
  - The `COALESCE` function ensures that years are correctly aligned even if data is missing in inpatient or outpatient tables.

- **Ordering and Presentation:**
  - The final result is ordered by year for clarity.

This single SQL statement adheres to the requirements and provides the desired information.
2025-01-27 01:24:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:24:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:24:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:24:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:24:10 - snowflake.connector.connection - INFO - closed
2025-01-27 01:24:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:24:11 - root - INFO - itercount: 1
2025-01-27 01:24:11 - root - INFO - 0
2025-01-27 01:24:11 - root - INFO - results: 
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,112947.43942222658,906.7765011223345
2012,114030.06865837818,976.842926904295
2013,124324.8839121602,952.2019428005565
2014,183225.06990801578,1656.531157482571
2015,195636.1917136553,


2025-01-27 01:24:11 - root - INFO - Please check the answer again by reviewing For the provider with the highest total inpatient service cost from 2011-2015, tell me its annual inpatient and outpatient revenues averaged by case for each year during that period., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Sure, here's the information you requested:

```csv
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,avg_inpatient_revenue_2011:float,avg_outpatient_revenue_2011:float
2012,avg_inpatient_revenue_2012:float,avg_outpatient_revenue_2012:float
2013,avg_inpatient_revenue_2013:float,avg_outpatient_revenue_2013:float
2014,avg_inpatient_revenue_2014:float,avg_outpatient_revenue_2014:float
2015,avg_inpatient_revenue_2015:float,avg_outpatient_revenue_2015:float
```

**Explanation:**

The table displays the annual inpatient and outpatient revenues averaged by case for each year from 2011 to 2015 for the provider with the highest total inpatient service cost during that period. The values represent the average revenue per case, calculated by dividing the total revenue by the total number of cases for both inpatient and outpatient services. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,112947.43942222658,906.7765011223345
2012,114030.06865837818,976.842926904295
2013,124324.8839121602,952.2019428005565
2014,183225.06990801578,1656.531157482571
2015,195636.1917136553,
Current sql:
SELECT
  COALESCE(inpatient."year", outpatient."year") AS "Year",
  inpatient."avg_inpatient_revenue_per_case" AS "Inpatient_Revenue_Avg_Per_Case",
  outpatient."avg_outpatient_revenue_per_case" AS "Outpatient_Revenue_Avg_Per_Case"
FROM (
  SELECT
    "year",
    SUM("inpatient_total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges") AS "inpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
  ) AS inpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS inpatient
FULL OUTER JOIN (
  SELECT
    "year",
    SUM("outpatient_total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges") AS "outpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
  ) AS outpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY COALESCE(inpatient."year", outpatient."year");When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-27 01:24:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:24:54 - root - INFO - Sure, here's the information you requested:

```csv
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,112947.4394,906.7765
2012,114030.0687,976.8429
2013,124324.8839,952.2019
2014,183225.0699,1656.5312
2015,195636.1917,
```

**Explanation:**

The table displays the annual inpatient and outpatient revenues averaged by case for each year from 2011 to 2015 for the provider with the highest total inpatient service cost during that period. The values represent the average revenue per case, calculated by dividing the total revenue by the total number of cases for both inpatient and outpatient services. All decimals are kept to four decimal places as per your request.

Here is the final SQL query:

```sql
SELECT
  COALESCE(inpatient."year", outpatient."year") AS "Year",
  ROUND(inpatient."avg_inpatient_revenue_per_case", 4) AS "Inpatient_Revenue_Avg_Per_Case",
  ROUND(outpatient."avg_outpatient_revenue_per_case", 4) AS "Outpatient_Revenue_Avg_Per_Case"
FROM (
  SELECT
    "year",
    SUM("inpatient_total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges") AS "inpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
  ) AS inpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC NULLS LAST
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS inpatient
FULL OUTER JOIN (
  SELECT
    "year",
    SUM("outpatient_total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges") AS "outpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
  ) AS outpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC NULLS LAST
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY COALESCE(inpatient."year", outpatient."year") NULLS LAST;
```

**Notes:**

- **Decimals Rounded:** The `ROUND` function is used to keep all decimals to four decimal places as per your request.
- **NULLS LAST:** In the `ORDER BY` clauses, `NULLS LAST` is added to handle any potential `NULL` values and ensure they appear at the end.
- **Provider Selection:** The provider with the highest total inpatient service cost from 2011 to 2015 is identified dynamically within the query.

This SQL query will produce the table above when executed in a Snowflake database.
2025-01-27 01:24:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:24:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:24:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:24:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:24:56 - snowflake.connector.connection - INFO - closed
2025-01-27 01:24:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:24:56 - root - INFO - itercount: 2
2025-01-27 01:24:56 - root - INFO - 0
2025-01-27 01:24:56 - root - INFO - results: 
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,112947.4394,906.7765
2012,114030.0687,976.8429
2013,124324.8839,952.2019
2014,183225.0699,1656.5312
2015,195636.1917,


2025-01-27 01:24:56 - root - INFO - Please check the answer again by reviewing For the provider with the highest total inpatient service cost from 2011-2015, tell me its annual inpatient and outpatient revenues averaged by case for each year during that period., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Sure, here's the information you requested:

```csv
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,avg_inpatient_revenue_2011:float,avg_outpatient_revenue_2011:float
2012,avg_inpatient_revenue_2012:float,avg_outpatient_revenue_2012:float
2013,avg_inpatient_revenue_2013:float,avg_outpatient_revenue_2013:float
2014,avg_inpatient_revenue_2014:float,avg_outpatient_revenue_2014:float
2015,avg_inpatient_revenue_2015:float,avg_outpatient_revenue_2015:float
```

**Explanation:**

The table displays the annual inpatient and outpatient revenues averaged by case for each year from 2011 to 2015 for the provider with the highest total inpatient service cost during that period. The values represent the average revenue per case, calculated by dividing the total revenue by the total number of cases for both inpatient and outpatient services. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Inpatient_Revenue_Avg_Per_Case,Outpatient_Revenue_Avg_Per_Case
2011,112947.4394,906.7765
2012,114030.0687,976.8429
2013,124324.8839,952.2019
2014,183225.0699,1656.5312
2015,195636.1917,
Current sql:
SELECT
  COALESCE(inpatient."year", outpatient."year") AS "Year",
  ROUND(inpatient."avg_inpatient_revenue_per_case", 4) AS "Inpatient_Revenue_Avg_Per_Case",
  ROUND(outpatient."avg_outpatient_revenue_per_case", 4) AS "Outpatient_Revenue_Avg_Per_Case"
FROM (
  SELECT
    "year",
    SUM("inpatient_total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges") AS "inpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
  ) AS inpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC NULLS LAST
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS inpatient
FULL OUTER JOIN (
  SELECT
    "year",
    SUM("outpatient_total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges") AS "outpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
  ) AS outpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC NULLS LAST
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY COALESCE(inpatient."year", outpatient."year") NULLS LAST;
2025-01-27 01:25:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 01:25:27 - root - INFO - Sure, here's the final SQL query:

```sql
SELECT
  COALESCE(inpatient."year", outpatient."year") AS "Year",
  ROUND(inpatient."avg_inpatient_revenue_per_case", 4) AS "Inpatient_Revenue_Avg_Per_Case",
  ROUND(outpatient."avg_outpatient_revenue_per_case", 4) AS "Outpatient_Revenue_Avg_Per_Case"
FROM (
  SELECT
    "year",
    SUM("inpatient_total_charges") / SUM("total_discharges") AS "avg_inpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges") AS "inpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "total_discharges", ("total_discharges" * "average_covered_charges")
    FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
  ) AS inpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC NULLS LAST
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS inpatient
FULL OUTER JOIN (
  SELECT
    "year",
    SUM("outpatient_total_charges") / SUM("outpatient_services") AS "avg_outpatient_revenue_per_case"
  FROM (
    SELECT '2011' AS "year", "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges") AS "outpatient_total_charges"
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2011
    UNION ALL
    SELECT '2012', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2012
    UNION ALL
    SELECT '2013', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2013
    UNION ALL
    SELECT '2014', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2014
    UNION ALL
    SELECT '2015', "provider_id", "outpatient_services", ("outpatient_services" * "average_estimated_submitted_charges")
    FROM CMS_DATA.CMS_MEDICARE.OUTPATIENT_CHARGES_2015
  ) AS outpatient_data
  WHERE "provider_id" = (
    SELECT "provider_id"
    FROM (
      SELECT "provider_id", SUM("total_charges") AS "total_inpatient_charges"
      FROM (
        SELECT "provider_id", ("total_discharges" * "average_covered_charges") AS "total_charges"
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2011
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2012
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2013
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2014
        UNION ALL
        SELECT "provider_id", ("total_discharges" * "average_covered_charges")
        FROM CMS_DATA.CMS_MEDICARE.INPATIENT_CHARGES_2015
      ) AS combined_inpatient
      GROUP BY "provider_id"
      ORDER BY "total_inpatient_charges" DESC NULLS LAST
      LIMIT 1
    )
  )
  GROUP BY "year"
) AS outpatient ON inpatient."year" = outpatient."year"
ORDER BY COALESCE(inpatient."year", outpatient."year") NULLS LAST;
```
2025-01-27 01:25:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-27 01:25:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-27 01:25:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-27 01:25:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-27 01:25:29 - snowflake.connector.connection - INFO - closed
2025-01-27 01:25:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-27 01:25:29 - root - INFO - itercount: 3
2025-01-27 01:25:29 - root - INFO - 0
2025-01-27 01:25:29 - root - INFO - Total iteration counts: 3
