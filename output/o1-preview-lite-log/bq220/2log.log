2025-01-27 08:14:01 - openai._base_client - INFO - Retrying request to /chat/completions in 0.406442 seconds
2025-01-27 08:16:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:16:09 - root - INFO - SQL:
SELECT
  plot_sequence_number,
  state_code,
  inventory_year,
  condition_status_code_name
FROM
  `bigquery-public-data.usfs_fia.condition`
LIMIT 100;
Results:
plot_sequence_number,state_code,inventory_year,condition_status_code_name
48205986010497,41,2011,Accessible forest land
490388558126144,41,2018,Accessible forest land
484818105489998,41,2018,Accessible forest land
44542184020004,41,2013,Accessible forest land
484818122489998,41,2018,Accessible forest land
30764910020004,41,2012,Accessible forest land
345934138489998,41,2016,Accessible forest land
490388006126144,41,2018,Accessible forest land
345934292489998,41,2016,Accessible forest land
273641571489998,41,2015,Accessible forest land
238861681489998,41,2014,Accessible forest land
238861623489998,41,2014,Accessible forest land
30763459020004,41,2012,Accessible forest land
273643192489998,41,2015,Accessible forest land
174763642020004,41,2013,Accessible forest land
238861512489998,41,2014,Accessible forest land
484818175489998,41,2018,Accessible forest land
273640076489998,41,2015,Accessible forest land
174763871020004,41,2013,Accessible forest land
490388507126144,41,2018,Accessible forest land
44542507020004,41,2013,Accessible forest land
216960279020004,41,2014,Accessible forest land
30763905020004,41,2012,Accessible forest land
48206628010497,41,2011,Accessible forest land
412220246489998,41,2017,Accessible forest land
484818496489998,41,2018,Accessible forest land
216960555020004,41,2014,Accessible forest land
48204757010497,41,2011,Accessible forest land
490388025126144,41,2018,Accessible forest land
216959176020004,41,2014,Accessible forest land
30763676020004,41,2012,Accessible forest land
216959465020004,41,2014,Accessible forest land
444202487489998,41,2017,Accessible forest land
490387903126144,41,2018,Accessible forest land
345935872489998,41,2016,Accessible forest land
44542371020004,41,2013,Accessible forest land
30852752020004,41,2012,Accessible forest land

2025-01-27 08:16:11 - root - INFO - SQL:
SELECT
  plot_sequence_number,
  state_code,
  inventory_year,
  condition_status_code_name
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
  AND inventory_year IN (2015, 2016, 2017)
LIMIT 100;
Results:
plot_sequence_number,state_code,inventory_year,condition_status_code_name
345934138489998,41,2016,Accessible forest land
345934292489998,41,2016,Accessible forest land
273641571489998,41,2015,Accessible forest land
273643192489998,41,2015,Accessible forest land
273640076489998,41,2015,Accessible forest land
412220246489998,41,2017,Accessible forest land
444202487489998,41,2017,Accessible forest land
345935872489998,41,2016,Accessible forest land
412222956489998,41,2017,Accessible forest land
290009080489998,41,2015,Accessible forest land
444202736489998,41,2017,Accessible forest land
444202495489998,41,2017,Accessible forest land
444202824489998,41,2017,Accessible forest land
444202730489998,41,2017,Accessible forest land
290008534489998,41,2015,Accessible forest land
412222002489998,41,2017,Accessible forest land
346864383489998,41,2016,Accessible forest land
290008631489998,41,2015,Accessible forest land
273641745489998,41,2015,Accessible forest land
444202540489998,41,2017,Accessible forest land
346864293489998,41,2016,Accessible forest land
346864390489998,41,2016,Accessible forest land
346864433489998,41,2016,Accessible forest land
345934330489998,41,2016,Accessible forest land
412222804489998,41,2017,Accessible forest land
290009066489998,41,2015,Accessible forest land
412221835489998,41,2017,Accessible forest land
345933965489998,41,2016,Accessible forest land
290008645489998,41,2015,Accessible forest land
444202490489998,41,2017,Accessible forest land
345934903489998,41,2016,Accessible forest land
345934139489998,41,2016,Accessible forest land
273640719489998,41,2015,Accessible forest land
444202479489998,41,2017,Accessible forest land
346864482489998,41,2016,Accessible forest land
290009075489998,41,2015,Accessible forest land

2025-01-27 08:18:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:18:18 - root - INFO - It seems the error occurs because the column `prop_basis` does not exist in the `condition` table. The correct column name is `proportion_basis`.

Here's the corrected query:

```sql
SELECT DISTINCT
  proportion_basis
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
LIMIT 100;
```

Please try running this query. It should return the distinct values for `proportion_basis`.

**Explanation:**

- The column `proportion_basis` in the `condition` table indicates whether the plot is a subplot ('SUBP') or a macroplot ('MACR').
- In previous queries, any references to `prop_basis` should be updated to `proportion_basis`.
- Also, the column `condprop_unadj` should be `condition_proportion_unadjusted` based on the table schema.

**Updated Queries:**

**1. Check distinct `proportion_basis` values for accessible forest land:**

```sql
SELECT DISTINCT
  proportion_basis
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
LIMIT 100;
```

**2. Calculate subplot sizes:**

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
  AND c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND p.evaluation_type = 'EXPCURR'
LIMIT 100;
```

**3. Calculate macroplot sizes:**

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND p.adjustment_factor_for_the_macroplot > 0
  AND c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND p.evaluation_type = 'EXPCURR'
LIMIT 100;
```

**4. Compute average subplot size per state and year:**

```sql
SELECT
  c.state_code,
  c.state_code_name AS state_name,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
  AND c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND p.evaluation_type = 'EXPCURR'
GROUP BY
  c.state_code,
  c.state_code_name,
  c.inventory_year
ORDER BY
  c.inventory_year,
  average_subplot_size DESC
LIMIT 100;
```

**5. Compute average macroplot size per state and year:**

```sql
SELECT
  c.state_code,
  c.state_code_name AS state_name,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND p.adjustment_factor_for_the_macroplot > 0
  AND c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND p.evaluation_type = 'EXPCURR'
GROUP BY
  c.state_code,
  c.state_code_name,
  c.inventory_year
ORDER BY
  c.inventory_year,
  average_macroplot_size DESC
LIMIT 100;
```

**6. Identify states with the largest average subplot size for each year:**

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS avg_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND p.adjustment_factor_for_the_subplot > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
)
SELECT
  inventory_year,
  'subplot' AS type_of_plot,
  state_name AS state,
  MAX(avg_subplot_size) AS average_size
FROM
  average_subplot_sizes
GROUP BY
  inventory_year, type_of_plot, state
ORDER BY
  inventory_year
```

**7. Identify states with the largest average macroplot size for each year:**

```sql
WITH average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS avg_macroplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND p.adjustment_factor_for_the_macroplot > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
)
SELECT
  inventory_year,
  'macroplot' AS type_of_plot,
  state_name AS state,
  MAX(avg_macroplot_size) AS average_size
FROM
  average_macroplot_sizes
GROUP BY
  inventory_year, type_of_plot, state
ORDER BY
  inventory_year
```

**Note:**

- The `WITH` clauses in the last two queries create temporary tables of average sizes per state and year.
- We then select the state with the maximum average size for each year.

**Final Combined Query to Get the Required Output:**

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND p.adjustment_factor_for_the_subplot > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND p.adjustment_factor_for_the_macroplot > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
largest_subplot_per_year AS (
  SELECT
    inventory_year,
    'subplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    inventory_year,
    'macroplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE rn = 1
)
SELECT
  *
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  *
FROM
  largest_macroplot_per_year
ORDER BY
  type_of_plot,
  inventory_year;
```

**This query will produce the required output:**

```csv
Type_of_Plot,Year,State,Average_Size
subplot,2015,state_name:str,average_size:float
subplot,2016,state_name:str,average_size:float
subplot,2017,state_name:str,average_size:float
macroplot,2015,state_name:str,average_size:float
macroplot,2016,state_name:str,average_size:float
macroplot,2017,state_name:str,average_size:float
(Attention: answer in six rows)
```

**Explanation:**

- **Type_of_Plot**: Indicates whether the plot type is a subplot or macroplot.
- **Year**: The year of the evaluation (2015, 2016, or 2017).
- **State**: The state that had the largest average subplot or macroplot size for the specified year.
- **Average_Size**: The average size of the subplot or macroplot for that state and year.

**Notes:**

- Ensure all column names in your queries match the actual column names in the tables.
- If you encounter any more errors, double-check the table schemas or let me know, and I'll be happy to assist further.
- You can remove the `LIMIT` clause when you are confident the query works correctly.

Feel free to run these queries and proceed with your analysis. Let me know if you need any more help!
2025-01-27 08:20:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:20:59 - root - INFO - SQL:
SELECT DISTINCT
  proportion_basis
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
LIMIT 100;
Results:
proportion_basis
MACR
SUBP
""

2025-01-27 08:22:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:22:33 - root - INFO - Here's the corrected SQL query:

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
largest_subplot_per_year AS (
  SELECT
    inventory_year,
    'subplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    inventory_year,
    'macroplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE rn = 1
)
SELECT
  type_of_plot,
  inventory_year AS year,
  state,
  average_size
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  type_of_plot,
  inventory_year AS year,
  state,
  average_size
FROM
  largest_macroplot_per_year
ORDER BY
  type_of_plot,
  year;
```
2025-01-27 08:25:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:25:41 - root - INFO - SQL:
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
largest_subplot_per_year AS (
  SELECT
    inventory_year,
    'subplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    inventory_year,
    'macroplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE rn = 1
)
SELECT
  type_of_plot,
  inventory_year AS year,
  state,
  average_size
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  type_of_plot,
  inventory_year AS year,
  state,
  average_size
FROM
  largest_macroplot_per_year
ORDER BY
  type_of_plot,
  year;
Results:
type_of_plot,year,state,average_size
macroplot,2015,California,4937.295863300521
macroplot,2016,California,5128.199385365016
macroplot,2017,California,5043.937060736363
subplot,2015,Wyoming,7634.419129440119
subplot,2016,Alaska,15679.879103970106
subplot,2017,Wyoming,6284.7925181703895

2025-01-27 08:25:43 - root - INFO - SQL:
SELECT DISTINCT
  evaluation_type
FROM
  `bigquery-public-data.usfs_fia.population_evaluation_type`
WHERE
  evaluation_type = 'EXPCURR'
LIMIT 100
Results:
evaluation_type
EXPCURR

2025-01-27 08:25:45 - root - INFO - SQL:
SELECT
  p.plot_sequence_number,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.population` AS p
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
LIMIT 100
Results:
plot_sequence_number,evaluation_type
14521895020004,EXPALL
247058489010661,EXPALL
373996018489998,EXPALL
220866477010661,EXPALL
247058490010661,EXPALL
247058491010661,EXPALL
14521896020004,EXPALL
168243270020004,EXPALL
247058492010661,EXPALL
304201343489998,EXPALL
168243271020004,EXPALL
304201344489998,EXPALL
14521897020004,EXPALL
373996019489998,EXPALL
14522279020004,EXPALL
14522280020004,EXPALL
247059018010661,EXPALL
304201589489998,EXPALL
373996318489998,EXPALL
168243656020004,EXPALL
373996319489998,EXPALL
247059019010661,EXPALL
245363698489998,EXPALL
247059020010661,EXPALL
304201590489998,EXPALL
168243657020004,EXPALL
247059021010661,EXPALL
168243658020004,EXPALL
304201591489998,EXPALL
14522282020004,EXPALL
168243659020004,EXPALL
304201592489998,EXPALL
14522283020004,EXPALL
373996320489998,EXPALL
247059022010661,EXPALL
168243660020004,EXPALL
14522285020004,EXPALL
168243661020004,EXPALL
247059024010661,EXPALL
245363700489998,EXPALL
373996321489998,EXPALL
304202094489998,EXPALL
247059025010661,EXPALL
304201593489998,EXPALL
373996322489998,EXPALL
247059026010661,EXPALL
245363701489998,EXPALL
14522286020004,EXPALL
247059027010661,EXPALL
245363702489998,EXPALL
14522287020004,EXPALL
168243662020004,EXPALL
304201594489998,EXPALL
168242456020004,EXPALL
373995449489998,EXPALL
168242457020004,EXPALL
373995450489998,EXPALL
373995451489998,EXPALL
304200879489998,EXPALL
14521113020004,EXPALL
220865269010661,EXPALL
304200880489998,EXPALL
14521114020004,EXPALL
14521788020004,EXPALL
245363480489998,EXPALL
373995941489998,EXPALL
304201278489998,EXPALL
168243148020004,EXPALL
247058758010661,EXPALL
168243149020004,EXPALL
304201279489998,EXPALL
14521790020004,EXPALL

2025-01-27 08:26:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:26:17 - root - INFO - ```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.proportion_basis,
  c.condition_proportion_unadjusted,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
LIMIT 100;
```
2025-01-27 08:29:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:29:36 - root - INFO - SQL:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.proportion_basis,
  c.condition_proportion_unadjusted,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
LIMIT 100;
Results:
plot_sequence_number,state_code,inventory_year,proportion_basis,condition_proportion_unadjusted,expansion_factor,adjustment_factor_for_the_subplot,adjustment_factor_for_the_macroplot,evaluation_type
299960809489998,20,2016,SUBP,0.5,6655.533333333334,1.0,0.0,EXPCURR
373994206489998,20,2017,SUBP,0.25,6184.669842946241,1.0,0.0,EXPCURR
299930065489998,20,2016,SUBP,0.25,4204.626980774184,1.0,0.0,EXPCURR
245794197489998,20,2015,SUBP,0.25,6996.420519083514,1.0,0.0,EXPCURR
245793587489998,20,2015,SUBP,0.8216469883918762,6996.420519083514,1.0,0.0,EXPCURR
373994764489998,20,2017,SUBP,0.25,8573.88076117834,1.0,0.0,EXPCURR
299930931489998,20,2016,SUBP,0.30753499269485474,8573.88076117834,1.0,0.0,EXPCURR
373994928489998,20,2017,SUBP,1.0,8573.88076117834,1.0,0.0,EXPCURR
299930744489998,20,2016,SUBP,0.5,5747.465564590641,1.0078731317480354,0.0,EXPCURR
373994557489998,20,2017,SUBP,0.75,5104.595656081034,1.0,0.0,EXPCURR
299930705489998,20,2016,SUBP,0.75,5104.595656081034,1.0,0.0,EXPCURR
373994981489998,20,2017,SUBP,0.46974000334739685,5104.595656081034,1.0,0.0,EXPCURR
373994714489998,20,2017,SUBP,1.0,5104.595656081034,1.0,0.0,EXPCURR
373994780489998,20,2017,SUBP,0.25,5104.595656081034,1.0,0.0,EXPCURR
168237028020004,20,2015,SUBP,0.25,5104.595656081034,1.0,0.0,EXPCURR
168237028020004,20,2015,SUBP,0.25,5104.595656081034,1.0,0.0,EXPCURR
373993755489998,20,2017,SUBP,0.25,6972.578967682296,1.0,0.0,EXPCURR

2025-01-27 08:30:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:30:37 - root - INFO - ```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.proportion_basis,
  c.condition_proportion_unadjusted,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
  AND (
    (p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0)
    OR
    (p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0)
  )
LIMIT 100;
```
2025-01-27 08:33:45 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:33:45 - root - INFO - SQL:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.proportion_basis,
  c.condition_proportion_unadjusted,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
  AND (
    (p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0)
    OR
    (p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0)
  )
LIMIT 100;
Results:
plot_sequence_number,state_code,inventory_year,proportion_basis,condition_proportion_unadjusted,expansion_factor,adjustment_factor_for_the_subplot,adjustment_factor_for_the_macroplot,evaluation_type
282496873489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282496945489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282496950489998,45,2015,SUBP,0.8976430296897888,5820.623058587151,1.0,0.0,EXPCURR
282496951489998,45,2015,SUBP,0.6844850182533264,5820.623058587151,1.0,0.0,EXPCURR
282496952489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282496988489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497025489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497028489998,45,2015,SUBP,0.2502399981021881,5820.623058587151,1.0,0.0,EXPCURR
282497028489998,45,2015,SUBP,0.7497599720954895,5820.623058587151,1.0,0.0,EXPCURR
282497029489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497030489998,45,2015,SUBP,0.75,5820.623058587151,1.0,0.0,EXPCURR
282497030489998,45,2015,SUBP,0.25,5820.623058587151,1.0,0.0,EXPCURR
282497034489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497074489998,45,2015,SUBP,0.6946899890899658,5820.623058587151,1.0,0.0,EXPCURR
282497074489998,45,2015,SUBP,0.3053100109100342,5820.623058587151,1.0,0.0,EXPCURR
282497101489998,45,2015,SUBP,0.035363998264074326,5820.623058587151,1.0,0.0,EXPCURR

2025-01-27 08:37:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:37:05 - root - INFO - ```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
```

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
```

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
```

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
```

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code,
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1;
```

```sql
SELECT
  c.state_code,
  c.state_code_name
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
GROUP BY
  c.state_code,
  c.state_code_name
LIMIT 100;
```

```sql
SELECT DISTINCT
  inventory_year
FROM
  `bigquery-public-data.usfs_fia.condition`
ORDER BY
  inventory_year
LIMIT 100;
```
2025-01-27 08:39:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:39:16 - root - INFO - SQL:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
Results:
plot_sequence_number,state_code,inventory_year,subplot_size
445255983489998,20,2018,6655.533333333334
373993986489998,20,2017,6655.533333333334
299960809489998,20,2016,3327.766666666667
299960809489998,20,2016,3327.766666666667
247051054010661,20,2012,6655.533333333334
373994218489998,20,2017,6655.533333333334
14516742020004,20,2013,6655.533333333334
168236852020004,20,2014,6655.533333333334
445256408489998,20,2018,6655.533333333334
14517400020004,20,2013,6655.533333333334
373994092489998,20,2017,6655.533333333334
14516748020004,20,2013,6655.533333333334
14517632020004,20,2013,6655.533333333334
14517286020004,20,2013,6655.533333333334
299930680489998,20,2016,6655.533333333334
14518298020004,20,2013,6655.533333333334
445255431489998,20,2018,5702.178947368421
373993882489998,20,2017,5702.178947368421
168235995020004,20,2015,5702.178947368421
299930192489998,20,2016,5702.178947368421
168235871020004,20,2015,5702.178947368421
445255302489998,20,2018,6184.669842946241
14517547020004,20,2013,6184.669842946241
445255280489998,20,2018,6184.669842946241
14517434020004,20,2013,6184.669842946241
168236563020004,20,2015,6184.669842946241
299960304489998,20,2016,6184.669842946241
14516747020004,20,2013,6184.669842946241
299930604489998,20,2016,6184.669842946241
168236802020004,20,2014,6184.669842946241
245794020489998,20,2015,6184.669842946241
14517653020004,20,2013,6184.669842946241
14517572020004,20,2013,6184.669842946241
247051853010661,20,2012,6184.669842946241
373994445489998,20,2017,6184.669842946241
247051278010661,20,2012,6184.669842946241
168235831020004,20,2015,6184.669842946241
299958196489998,20,2016,6184.669842946241
168236671020004,20,2015,6184.669842946241
445255886489998,20,2018,6184.669842946241
445255864489998,20,2018,6184.669842946241
373994335489998,20,2017,6184.669842946241
14517348020004,20,2013,6184.669842946241

2025-01-27 08:39:19 - root - INFO - SQL:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
LIMIT 100
Results:
plot_sequence_number,state_code,inventory_year,subplot_size
145763468010478,37,2007,6024.668536545274
258880934010854,37,2012,1506.1671341363185
258880934010854,37,2012,4518.501402408956
258880954010854,37,2012,4288.961505886065
258880954010854,37,2012,1735.7070306592086
258880955010854,37,2012,6024.668536545274
258880960010854,37,2012,4518.501402408956
258880960010854,37,2012,1506.1671341363185
145805354010854,37,2009,2082.12550023842
145805354010854,37,2009,3942.543036306854
145805371010854,37,2009,1506.1671341363185
145805371010854,37,2009,4518.501402408956
196872730010854,37,2010,1580.8730317460017
196872730010854,37,2010,4443.795684348386
196872764010854,37,2010,6024.668536545274
196872812010854,37,2010,6024.668536545274
196872968010854,37,2010,4949.867789708044
196872968010854,37,2010,1074.8008366117865
196872972010854,37,2010,6024.668536545274
196872992010854,37,2010,1506.1671341363185
196872992010854,37,2010,2834.6065004799784
196872992010854,37,2010,1683.8949019289773
196873012010854,37,2010,6024.668536545274
196873046010854,37,2010,329.5493590020056
196873046010854,37,2010,5695.119065325072
196873144010854,37,2010,6024.668536545274
196873154010854,37,2010,1506.1671341363185
196873154010854,37,2010,4518.501402408956
196873158010854,37,2010,6024.668536545274
196873160010854,37,2010,6024.668536545274
196872822010854,37,2010,6024.668536545274
196872874010854,37,2010,26.508541417159915
196872874010854,37,2010,5998.159905353557
196872878010854,37,2010,853.0930519909139
196872878010854,37,2010,5171.575394779803
196872930010854,37,2010,4518.501402408956
196872930010854,37,2010,1506.1671341363185
54913272010478,37,2003,6024.668536545274
196872852010854,37,2010,4518.501402408956
196872852010854,37,2010,1506.1671341363185
145727001010478,37,2007,6024.668536545274
258880850010854,37,2012,6024.668536545274
54897629010478,37,2003,1506.1671341363185

2025-01-27 08:40:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:40:56 - root - INFO - ```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
```

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c 
JOIN
  `bigquery-public-data.usfs_fia.population` AS p 
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP' 
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code, 
  c.inventory_year
LIMIT 100;
```

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c 
JOIN
  `bigquery-public-data.usfs_fia.population` AS p 
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR' 
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code, 
  c.inventory_year
LIMIT 100;
```

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code,
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1;
```

```sql
SELECT
  c.state_code,
  c.state_code_name
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
GROUP BY
  c.state_code,
  c.state_code_name
LIMIT 100;
```

```sql
SELECT DISTINCT
  inventory_year
FROM
  `bigquery-public-data.usfs_fia.condition`
ORDER BY
  inventory_year
LIMIT 100;
```
2025-01-27 08:43:24 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:43:24 - root - INFO - SQL:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
Results:
plot_sequence_number,state_code,inventory_year,macroplot_size
48205986010497,41,2011,5596.681639302727
48205986010497,41,2011,3773.4314730443148
48205986010497,41,2011,4209.310670916283
48205986010497,41,2011,4209.310670916283
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,3773.4314730443148
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5007.262844632496
48205986010497,41,2011,3773.4314730443148
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4618.169970922756
490388558126144,41,2018,5685.59366826637
490388558126144,41,2018,6173.457724221831
490388558126144,41,2018,6173.457724221831
490388558126144,41,2018,7142.939486340117
490388558126144,41,2018,4548.474934613096
490388558126144,41,2018,4921.10520356658
490388558126144,41,2018,4921.10520356658
490388558126144,41,2018,5518.124454091912
484818105489998,41,2018,1995.5381587997554
484818105489998,41,2018,2187.3182663925745
484818105489998,41,2018,2187.3182663925745
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2648.0364487824927
484818105489998,41,2018,1995.5381587997554
484818105489998,41,2018,2187.3182663925745

2025-01-27 08:43:26 - root - INFO - SQL:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND p.adjustment_factor_for_the_macroplot > 0
LIMIT 100
Results:
plot_sequence_number,state_code,inventory_year,macroplot_size
48204106010497,53,2011,5914.940866181514
345936134489998,53,2016,5914.940866181514
484819510489998,53,2018,5914.940866181514
40220533010497,53,2010,5914.940866181514
30764978020004,53,2012,5914.940866181514
216959537020004,53,2014,5914.940866181514
216961766020004,53,2014,5914.940866181514
30764970020004,53,2012,5914.940866181514
29883249010497,53,2009,5914.940866181514
48204378010497,53,2011,5914.940866181514
44542454020004,53,2013,5914.940866181514
29883250010497,53,2009,5914.940866181514
48205723010497,53,2011,5914.940866181514
345936299489998,53,2016,5914.940866181514
484819505489998,53,2018,5914.940866181514
40220541010497,53,2010,5914.940866181514
345936357489998,53,2016,5914.940866181514
484819501489998,53,2018,5914.940866181514
30765124020004,53,2012,5914.940866181514
412220214489998,53,2017,5914.940866181514
273642825489998,53,2015,5914.940866181514
44542499020004,53,2013,5914.940866181514
412220837489998,53,2017,5914.940866181514
29883260010497,53,2009,5914.940866181514
216960193020004,53,2014,5914.940866181514
345935960489998,53,2016,5914.940866181514
216958544020004,53,2014,5914.940866181514
345935959489998,53,2016,5914.940866181514
484819517489998,53,2018,5914.940866181514
40220558010497,53,2010,5914.940866181514
29883310010497,53,2009,5914.940866181514
48205038010497,53,2011,5914.940866181514
44542909020004,53,2013,5914.940866181514
216961111020004,53,2014,5914.940866181514
48205051010497,53,2011,5914.940866181514
345934249489998,53,2016,5914.940866181514
484819519489998,53,2018,5914.940866181514
40220567010497,53,2010,5914.940866181514
30765123020004,53,2012,5914.940866181514
216961364020004,53,2014,5914.940866181514
345936133489998,53,2016,3640.9653626907325
345936133489998,53,2016,2273.975327211807

2025-01-27 08:44:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:44:12 - root - INFO - The error occurs because the column `prop_basis` does not exist in the `condition` table. The correct column name is `proportion_basis`. Additionally, ensure that you replace `c.condprop_unadj` with `c.condition_proportion_unadjusted`.

Here's the corrected SQL query:

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

**Explanation:**

- **Corrected Column Names:**
  - Replaced `c.prop_basis` with `c.proportion_basis`.
  - Replaced `c.condprop_unadj` with `c.condition_proportion_unadjusted`.

- **Added NULL and Zero Checks:**
  - Ensured that `c.condition_proportion_unadjusted` is not null and greater than zero.
  - Ensured that `p.adjustment_factor_for_the_subplot` is not null and greater than zero.
  - Ensured that `p.expansion_factor` is not null and greater than zero.

These checks help to avoid any potential calculation errors due to null or zero values.

**Note:** Always verify that column names match exactly with those in the dataset schema to avoid such errors.

Let me know if you need any further assistance!
2025-01-27 08:45:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:45:23 - root - INFO - SQL:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
Results:
state_code,inventory_year,average_subplot_size
30,2006,7943.391358568785
30,2008,6469.471568458465
30,2003,10115.243291994315
40,2014,7017.153970594862
39,2008,6474.499880770435
39,2011,4905.32175343952
9,2009,6349.214863761256
4,2001,8170.910392472521
8,2011,5453.829146009249
4,2018,5830.088186428622
1,2001,4930.990136118922
1,2008,4561.201710450686
1,2011,4294.793410809591
17,2009,5725.863037669541
17,2012,6577.0289692716515
17,2016,7809.464274884738
19,2015,8362.953311314288
46,2008,6631.6690479946465
46,2005,5867.530637396028
39,2017,7159.083439142694
13,2019,4375.762835336739
55,2015,3452.8719311236205
55,2010,2393.291810552599
27,2019,4162.878374971447
56,2015,8364.660548403539
28,2015,4840.776836931437
28,1977,6090.376446918359
31,2018,9390.863722263224
42,2002,4292.2929031961385
42,2001,4380.917475223322
34,2010,6506.18192750155
35,2011,6069.140282081407
35,2013,6060.705646734254
35,2007,6116.164157830345
35,2014,5892.723586673248
38,2005,5880.773476199589
33,2011,4812.873740990954
38,2004,6172.790623752245
51,2003,5918.662465060452
51,2009,4665.231152094457
51,2010,4513.202228208749
51,2013,4931.513703641512
23,2015,6930.808811919165
23,2014,6911.198303423551
37,2016,4911.194556748863
54,2004,10994.055473928605
54,2005,7324.469101274839
54,2015,7137.298440026684
54,2018,7138.949717816594
17,2005,5984.4198667289365
26,2015,6363.368800854954
49,2004,6520.607985175386
25,2004,7035.900701891611
49,2009,5593.135481886226
42,2009,5040.076075283268
42,2005,6148.323223456211
30,2017,5565.724973517962
26,2004,2247.8165496071965
12,1980,3465.5708639991535

2025-01-27 08:45:26 - root - INFO - SQL:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100
Results:
state_code,inventory_year,average_subplot_size
42,2015,6721.087313410698
46,2016,8418.940744527365
38,2019,9140.553646051336
38,2018,9180.514810059605
28,2006,4345.034951562033
56,2011,12397.816378926977
56,2014,9153.423617993172
28,2012,4640.196568113134
56,2017,7077.665428903343
30,2010,5870.639914344
30,2005,9239.85617406018
40,2017,6366.703617112738
39,2010,5050.083801624664
40,1986,6179.798756462872
40,2009,11856.492138009722
40,2011,7588.933030403471
39,2001,6500.799387407837
23,2012,5756.9186941099615
23,2002,4439.065037595704
47,2012,4779.244897483048
47,2009,4532.121541753609
49,2013,5642.561343143614
47,2008,4627.705160919828
4,2006,6813.352404625599
9,2012,5650.874245579673
8,2005,7903.699189014756
8,2017,5475.78228453313
4,2016,5790.800490815838
4,2019,5813.582934927203
26,2008,3331.210307694115
27,2010,2617.9392062381125
51,1992,3678.4670728607916
51,2018,4364.869227722128
27,2002,3101.8275824738494
27,2000,3265.8713659665486
27,2001,3116.1071919322403
5,2008,4822.8162534261155
33,2018,6746.117425788718
33,2009,6174.3695732350825
33,2005,6283.018182663901
31,2002,7153.016806981453
12,1987,3115.56980669924
13,2009,4374.936913584385
13,2017,4514.2277503716605
5,2000,4644.582250776662
42,2010,5025.608453336516
42,2007,5511.0025143628545
45,2013,4913.4810401613695
45,2002,4827.8041396990075
28,2018,4308.219385273849
1,2014,4946.449423467554
22,2014,5985.92527436983
1,2010,4508.562573007561
32,2014,5654.254594686532
32,2004,13364.135549536028
21,2007,5051.035776677624
21,2000,4427.341979823271
21,1988,12457.468457589091
37,2004,4692.387973100858

2025-01-27 08:46:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:46:49 - root - INFO - ```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

---

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c 
JOIN
  `bigquery-public-data.usfs_fia.population` AS p 
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR' 
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0 
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0 
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code, 
  c.inventory_year
LIMIT 100;
```

---

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c 
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p 
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP' 
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0 
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0 
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code, 
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1;
```

---

```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c 
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p 
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP' 
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0 
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0 
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code, 
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1;
```

---

```sql
SELECT
  c.state_code,
  c.state_code_name
FROM
  `bigquery-public-data.usfs_fia.condition` AS c 
GROUP BY
  c.state_code, 
  c.state_code_name
LIMIT 100;
```

---

```sql
SELECT DISTINCT
  inventory_year
FROM
  `bigquery-public-data.usfs_fia.condition` 
ORDER BY
  inventory_year
LIMIT 100;
```
2025-01-27 08:47:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:47:38 - root - INFO - SQL:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
Results:
state_code,inventory_year,average_macroplot_size
41,2006,3227.228540672201
41,2011,3890.9909379920273
41,2018,3479.90422366112
6,2018,6064.985662006346
53,2009,3542.2820983218267
6,2002,5460.405807882156
6,2003,5310.658959314615
41,2015,3665.9620380065185
53,2012,4531.4762490408975
53,2013,4448.542515991391
53,2017,4466.519078541113
6,2012,6251.503818501157
6,2017,6292.137009624956
53,2004,3609.370853258373
41,2012,3642.4199940817275
41,2009,3213.9371366622427
41,2005,3154.585703041415
6,2015,6222.547604089212
6,2016,6347.06500953717
41,2001,3209.239243694589
53,2008,3638.944673186196
53,2005,3704.2471216204626
6,2005,5321.386891358993
41,2019,3353.4951513142187
41,2010,3176.9337431726135
53,2014,4581.113088382801
6,2011,6296.4716335819985
6,2010,5223.059974279793
41,2003,3224.943761174505
53,2019,4062.1609839810926
6,2014,6336.549770040787
41,2002,3139.7594314460257
53,2010,3683.7508257505306
41,2008,3148.675073667899
53,2003,3692.035680609592
6,2004,5420.880156922204
41,2013,3710.82286821735
41,2014,3654.085035047078
41,2017,3709.908107636844
41,2007,3208.8242422722865
53,2018,4417.367175633813
53,2016,4643.6902187334235
53,2011,3490.5374123146717
6,2013,6227.714193167395
6,2009,5352.711663228114
53,2006,3665.294898648104
53,2002,3602.8535816322815
6,2001,5364.952370622563
15,2010,4644.357050410681
41,2016,3724.8948543277115
41,2004,3161.5113047736672
53,2015,4688.547258710304
6,2019,5844.956815018198
53,2007,3614.667348106689
6,2008,5282.228303463622
6,2007,5354.15756639119
6,2006,5378.361773887664

2025-01-27 08:47:40 - root - INFO - SQL:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100
Results:
state_code,inventory_year,average_macroplot_size
53,2010,3683.7508257505297
53,2019,4062.1609839810894
41,2002,3139.7594314460393
6,2014,6336.549770040759
53,2014,4581.1130883827755
41,2003,3224.943761174501
41,2010,3176.9337431726062
41,2019,3353.4951513142055
6,2011,6296.471633582038
6,2010,5223.059974279801
41,2006,3227.2285406722062
53,2004,3609.3708532583737
53,2012,4531.476249040908
53,2013,4448.542515991425
53,2017,4466.519078541095
41,2015,3665.962038006524
6,2017,6292.137009625002
6,2012,6251.503818501144
53,2009,3542.2820983218276
41,2011,3890.990937992059
41,2018,3479.9042236610876
6,2018,6064.985662006346
6,2002,5460.405807882131
6,2003,5310.658959314618
53,2003,3692.0356806096006
41,2008,3148.6750736679105
6,2004,5420.880156922191
15,2010,4644.35705041068
53,2006,3665.294898648105
53,2002,3602.8535816322774
53,2011,3490.5374123146644
53,2016,4643.6902187334035
53,2018,4417.36717563383
41,2017,3709.9081076368066
41,2014,3654.085035047051
41,2013,3710.822868217342
41,2007,3208.824242272281
6,2013,6227.714193167389
6,2009,5352.711663228117
6,2001,5364.952370622567
53,2008,3638.94467318619
53,2005,3704.2471216204567
41,2012,3642.419994081733
41,2001,3209.239243694587
41,2009,3213.937136662234
41,2005,3154.5857030413963
6,2016,6347.065009537122
6,2015,6222.547604089239
6,2005,5321.386891358982
53,2007,3614.667348106686
53,2015,4688.5472587102995
41,2016,3724.8948543276892
41,2004,3161.511304773667
6,2019,5844.956815018188
6,2008,5282.22830346361
6,2007,5354.157566391204
6,2006,5378.36177388767

2025-01-27 08:47:42 - root - INFO - SQL:
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code,
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1
Results:
inventory_year,state_code,largest_average_subplot_size
2016,2,14076.94780398066
2017,38,8847.767780072261
2015,48,12334.373044626558

2025-01-27 08:47:44 - root - INFO - SQL:
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code,
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1
Results:
inventory_year,state_code,largest_average_subplot_size
2016,2,14076.94780398066
2017,38,8847.767780072261
2015,48,12334.373044626558

2025-01-27 08:47:46 - root - INFO - SQL:
SELECT
  c.state_code,
  c.state_code_name
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
GROUP BY
  c.state_code,
  c.state_code_name
LIMIT 100
Results:
state_code,state_code_name
41,Oregon
27,Minnesota
29,Missouri
55,Wisconsin
26,Michigan
13,Georgia
60,American Samoa
12,Florida
23,Maine
48,Texas
53,Washington
45,South Carolina
56,Wyoming
49,Utah
46,South Dakota
28,Mississippi
37,North Carolina
32,Nevada
6,California
42,Pennsylvania
1,Alabama
51,Virginia
21,Kentucky
35,New Mexico
5,Arkansas
47,Tennessee
30,Montana
22,Louisiana
4,Arizona
16,Idaho
18,Indiana
19,Iowa
17,Illinois
8,Colorado
39,Ohio
36,New York
38,North Dakota
72,Puerto Rico
31,Nebraska
20,Kansas
2,Alaska
40,Oklahoma
15,Hawaii
10,Delaware
25,Massachusetts
34,New Jersey
9,Connecticut
68,Marshall Islands
70,Palau
24,Maryland
33,New Hampshire
54,West Virginia
50,Vermont
69,Northern Mariana Islands
44,Rhode Island
64,Federated States of Micronesia
66,Guam
78,Virgin Islands of the U.S.

2025-01-27 08:47:48 - root - INFO - SQL:
SELECT DISTINCT
  inventory_year
FROM
  `bigquery-public-data.usfs_fia.condition`
ORDER BY
  inventory_year
LIMIT 100
Results:
inventory_year
1968
1970
1972
1974
1975
1976
1977
1978
1980
1981
1982
1983
1984
1985
1986
1987
1988
1989
1990
1991
1992
1993
1994
1995
1996
1997
1998
1999
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
9999

2025-01-27 08:47:48 - root - INFO - itercount: 0
2025-01-27 08:47:48 - root - INFO - Database Name: bigquery-public-data
Schema Name: usfs_fia
DDL describes table information.
,0
table_name,population_stratum_assign
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population_stratum_assign`
(
  stratum_assign_sequence_number STRING ,
  stratum_sequence_number INT64 ,
  plot_sequence_number INT64 ,
  state_code INT64  two-digit code for each State. Refer to appendix B. For evaluations that do not conform to the boundaries of a single State the value of STATECD should be set to 99.""),
  inventory_year INT64 ,
  survey_unit_code INT64 ,
  county_code INT64 ,
  phase_2_plot_number INT64 ,
  region_or_station_code INT64  that provided the inventory data (see appendix B for more information).""),
  evaluation_identifier INT64 ,
  estimation_unit INT64 ,
  stratum_code INT64 ,
  stratum_assign_created_by STRING ,
  stratum_assign_created_date DATE ,
  stratum_assign_created_in_instance INT64 ,
  stratum_assign_modified_by STRING ,
  stratum_assign_modified_date DATE ,
  stratum_assign_modified_in_instance INT64 
)
OPTIONS(
  description=""Links plot to stratum information and basic information about the stratum. \t\n\nPages in FIA Documentation: 7-17""
);"

,1
table_name,plot
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.plot`
(
  plot_sequence_number INT64 ,
  survey_sequence_number INT64 ,
  county_sequence_number INT64 ,
  previous_plot_sequence_number INT64 ,
  plot_inventory_year INT64 . Under periodic inventory, a reporting inventory year was selected, usually based on the year in which the majority of the plots were collected or the mid-point of the years over which the inventory spanned. For either annual or periodic inventory, Inventory year is not necessarily the same as measurement year.""),
  plot_state_code INT64  two-digit code for each State. Refer to appendix B.""),
  plot_state_code_name STRING  two-digit code for each State. Refer to appendix B.""),
  plot_survey_unit_code INT64 ,
  plot_county_code INT64 ,
  plot_phase_2_plot_number INT64 ,
  plot_status_code INT64  values may be present for periodic inventories.""),
  plot_status_code_name STRING  values may be present for periodic inventories.""),
  plot_nonsampled_reason_code INT64 ,
  plot_nonsampled_reason_code_name STRING ,
  measurement_year INT64 ,
  measurement_month INT64  for periodic inventory or when plot status code = 3""),
  measurement_month_name STRING  for periodic inventory.""),
  measurement_day INT64  for periodic inventory or when plot status code = 3.""),
  remeasurement_period FLOAT64  for new plots or remeasured plots that are not used for growth, removals, or mortality estimates. For data processed with NIMS, REMPER, remeasurement period, is the number of years between measurements (to the nearest 0.1 year). For data processed with systems other than NIMS, remeasurement period is based on the number of growing seasons between measurements. Allocation of parts of the growing season by month is different for each FIA work unit. Contact the appropriate FIA work unit for information on how this is done for a particular State.""),
  sample_kind_code INT64 ,
  sample_kind_code_name STRING ,
  plot_design_code INT64 ,
  horizontal_distance_to_improved_road_code INT64  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  horizontal_distance_to_improved_road_code_name STRING  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  water_on_plot_code INT64  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  water_on_plot_code_name STRING  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  latitude FLOAT64 . Actual plot coordinates cannot be released because of a Privacy provision enacted by Congress in the Food Security Act of 1985. Therefore, this attribute is approximately +/- 1 mile and, for annual inventory data, most plots are within +/- ½ mile. Annual data have additional uncertainty for private plots caused by swapping plot coordinates for up to 20 percent of the plots. In some cases, the county centroid is used when the actual coordinate is not available.""),
  longitude FLOAT64 . Actual plot coordinates cannot be released because of a Privacy provision enacted by Congress in the Food Security Act of 1985. Therefore, this attribute is approximately +/- 1 mile and, for annual inventory data, most plots are within +/- ½ mile. Annual data have additional uncertainty for private plots caused by swapping plot coordinates for up to 20 percent of the plots. In some cases, the county centroid is used when the actual coordinate is not available.""),
  elevation INT64 , and rounded to the nearest 100-foot category for other FIA work units (SURVEY.RSCD = 22, 26, 27, or 33). Negative values indicate distance below sea level.""),
  type_of_annual_volume_growth_code INT64  if the plot does not contribute to the growth estimate.""),
  type_of_annual_volume_growth_code_name STRING  if the plot does not contribute to the growth estimate.""),
  type_of_annual_mortality_volume_code INT64  if the plot does not contribute to the mortality estimate.""),
  type_of_annual_mortality_volume_code_name STRING  if the plot does not contribute to the mortality estimate.""),
  phase_2_panel_number INT64  for periodic inventories. A panel is a sample in which the same elements are measured on two or more occasions. FIA divides the plots in each State into 5 panels that can be used to independently sample the population.""),
  phase_3_panel_number INT64 .""),
  ecological_subsection_code STRING . For Alaska, the ecological section codes are equivalent to the ecoregions designated by Nowacki and others in Ecoregions of Alaska: 2001. U.S. Geological Survey Open-File Report 02-297 (map). The ecological subsection code is based on fuzzed and swapped plot coordinates. This attribute is coded for the coterminous United States, southeast and south coastal Alaska, and is left blank (null) in all other instances""),
  congressional_district_code INT64  is for the current Congress; the assignment is made based on the plot's approximate coordinates. CONGCD is a four-digit number. The first two digits are the State FIPS code and the last two digits are the congressional district number. If a State has only one congressional district, the congressional district number is 00. If a plot's congressional district assignment falls in a State other than the plot's actual State due to using the approximate coordinates, the congressional district code will be for the nearest congressional district in the correct State. This attribute is coded for the coterminous States and Alaska, and is left blank (null) in all other instances. For more information about the coverage used to assign this attribute, see National Atlas of the United States (2007).""),
  manual_version_number FLOAT64 ,
  sample_kind_code_north_central INT64  and is blank (null) for all other FIA work units.""),
  quality_assurance_status INT64 . Codes 2-6 indicate additional quality assurance data that are not included in the FIADB.""),
  quality_assurance_status_name STRING . Codes 2-6 indicate additional quality assurance data that are not included in the FIADB.""),
  plot_created_by STRING ,
  plot_created_date DATE ,
  plot_created_in_instance INT64 ,
  plot_modified_by STRING  if the data have not been modified since initial creation. This attribute is intentionally left blank in download files.""),
  plot_modified_date DATE  if the data have not been modified since initial creation.""),
  plot_modified_in_instance INT64  if the data have not been modified since initial creation.""),
  microplot_location STRING  of subplot center. The current standard is that the microplot is located in the 'OFFSET' location, but some earlier inventories, including some early panels of the annual inventory, may contain data where the microplot was located at the 'CENTER' location. Populated for annual inventory and may be populated for periodic inventory.""),
  declination FLOAT64 ""),
  emap_hexagon INT64  hexagon in which the plot is located. EMAP hexagons are available to the public, cover the coterminous United States, and have been used in summarizing and aggregating data about numerous natural resources. Populated for annual inventory and may be populated for periodic inventory.""),
  sample_method_code INT64 ,
  sample_method_code_name STRING ,
  subplots_examined_code INT64 ,
  subplots_examined_code_name STRING ,
  macroplot_breakpoint_diameter INT64  above which trees are measured on the plot extending from 0.01 to 58.9 feet horizontal distance from the center of each subplot. Examples of different breakpoint diameters used by western FIA work units are 24 inches or 30 inches (Pacific Northwest), or 21 inches (Interior West). Installation of macroplots is core optional and is used to have a larger plot size in order to more adequately sample large trees. If macroplots are not being installed, this item will be left blank (null).""),
  intensity INT64 ,
  plot_inventory_cycle_number INT64 ,
  plot_inventory_subcycle_number INT64 ,
  ecological_unit_pacific_northwest_research_station STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26 or 27).""),
  topographic_position_pacific_northwest_research_station INT64 . Adapted from information found in Wilson (1900). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  topographic_position_pacific_northwest_research_station_name STRING . Adapted from information found in Wilson (1900). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  nonforest_sampling_status_code INT64 ,
  nonforest_sampling_status_code_name STRING ,
  nonforest_plot_status_code INT64 ,
  nonforest_plot_status_code_name STRING ,
  nonforest_plot_nonsampled_reason_code INT64 ,
  nonforest_plot_nonsampled_reason_code_name STRING ,
  p2_vegetation_sampling_status_code INT64 . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  p2_vegetation_sampling_status_code_name STRING . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  p2_vegetation_sampling_level_detail_code INT64 . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  p2_vegetation_sampling_level_detail_code_name STRING . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  invasive_sampling_status_code INT64  on which the data were recorded.""),
  invasive_sampling_status_code_name STRING  on which the data were recorded.""),
  invasive_specimen_rule_code INT64 ,
  invasive_specimen_rule_code_name STRING ,
  design_code_periodic_to_annual INT64 . Refer to appendix I for a list of codes and descriptions.""),
  manual_version_of_the_data FLOAT64 .""),
  subpanel INT64 , but may further subdivide the 5 panels into subpanels. The following FIA work units subdivide each phase 2 panel number into 2 subpanels (SUBPANEL = 1 or 2), for a total of 10 subpanels. For these FIA work units, 1 subpanel is usually scheduled for measurement each year: RMRS (SURVEY.RSCD = 22); PNWRS (SURVEY.RSCD = 26 or 27); SRS (SURVEY.RSCD = 33, only for Oklahoma where UNITCD 3. Populated for all plots using the National Field Guide protocols (MANUAL 1.0).""),
  subpanel_name STRING , but may further subdivide the 5 panels into subpanels. The following FIA work units subdivide each phase 2 panel number into 2 subpanels (SUBPANEL = 1 or 2), for a total of 10 subpanels. For these FIA work units, 1 subpanel is usually scheduled for measurement each year: RMRS (SURVEY.RSCD = 22); PNWRS (SURVEY.RSCD = 26 or 27); SRS (SURVEY.RSCD = 33, only for Oklahoma where UNITCD 3. Populated for all plots using the National Field Guide protocols (MANUAL 1.0).""),
  unique_plot STRING ,
  colocated_code_rmrs STRING ,
  condchng_code_rmrs STRING ,
  futfor_code_rmrs STRING ,
  manual_ncrs STRING ,
  manual_ners STRING ,
  manual_rmrs STRING ,
  pac_island_pnwrs STRING ,
  plot_season_ners STRING ,
  precipitation STRING ,
  prev_microplot_loc_rmrs STRING ,
  prev_plot_status_code_rmrs STRING ,
  reuse_code_1 STRING ,
  reuse_code_2 STRING ,
  reuse_code_3 STRING 
)
OPTIONS(
  description=""Description of the plot sampled on the ground. Note that locations are not exact, please see pg 1-6 of FIA documentation for full description. \n\nPages in FIA documentation: 1-6, 2-9""
);"

,2
table_name,plot_tree
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.plot_tree`
(
  plot_sequence_number INT64 ,
  survey_sequence_number INT64 ,
  county_sequence_number INT64 ,
  previous_plot_sequence_number INT64 ,
  plot_inventory_year INT64 . Under periodic inventory, a reporting inventory year was selected, usually based on the year in which the majority of the plots were collected or the mid-point of the years over which the inventory spanned. For either annual or periodic inventory, Inventory year is not necessarily the same as measurement year.""),
  plot_state_code INT64  two-digit code for each State. Refer to appendix B.""),
  plot_state_code_name STRING  two-digit code for each State. Refer to appendix B.""),
  plot_survey_unit_code INT64 ,
  plot_county_code INT64 ,
  plot_phase_2_plot_number INT64 ,
  plot_status_code INT64  values may be present for periodic inventories.""),
  plot_status_code_name STRING  values may be present for periodic inventories.""),
  plot_nonsampled_reason_code INT64 ,
  plot_nonsampled_reason_code_name STRING ,
  measurement_year INT64 ,
  measurement_month INT64  for periodic inventory or when plot status code = 3""),
  measurement_month_name STRING  for periodic inventory.""),
  measurement_day INT64  for periodic inventory or when plot status code = 3.""),
  remeasurement_period FLOAT64  for new plots or remeasured plots that are not used for growth, removals, or mortality estimates. For data processed with NIMS, REMPER, remeasurement period, is the number of years between measurements (to the nearest 0.1 year). For data processed with systems other than NIMS, remeasurement period is based on the number of growing seasons between measurements. Allocation of parts of the growing season by month is different for each FIA work unit. Contact the appropriate FIA work unit for information on how this is done for a particular State.""),
  sample_kind_code INT64 ,
  sample_kind_code_name STRING ,
  plot_design_code INT64 ,
  horizontal_distance_to_improved_road_code INT64  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  horizontal_distance_to_improved_road_code_name STRING  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  water_on_plot_code INT64  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  water_on_plot_code_name STRING  and populated by some FIA work units for inventory plots collected where MANUAL <1.0.""),
  latitude FLOAT64 . Actual plot coordinates cannot be released because of a Privacy provision enacted by Congress in the Food Security Act of 1985. Therefore, this attribute is approximately +/- 1 mile and, for annual inventory data, most plots are within +/- ½ mile. Annual data have additional uncertainty for private plots caused by swapping plot coordinates for up to 20 percent of the plots. In some cases, the county centroid is used when the actual coordinate is not available.""),
  longitude FLOAT64 . Actual plot coordinates cannot be released because of a Privacy provision enacted by Congress in the Food Security Act of 1985. Therefore, this attribute is approximately +/- 1 mile and, for annual inventory data, most plots are within +/- ½ mile. Annual data have additional uncertainty for private plots caused by swapping plot coordinates for up to 20 percent of the plots. In some cases, the county centroid is used when the actual coordinate is not available.""),
  elevation INT64 , and rounded to the nearest 100-foot category for other FIA work units (SURVEY.RSCD = 22, 26, 27, or 33). Negative values indicate distance below sea level.""),
  type_of_annual_volume_growth_code INT64  if the plot does not contribute to the growth estimate.""),
  type_of_annual_volume_growth_code_name STRING  if the plot does not contribute to the growth estimate.""),
  type_of_annual_mortality_volume_code INT64  if the plot does not contribute to the mortality estimate.""),
  type_of_annual_mortality_volume_code_name STRING  if the plot does not contribute to the mortality estimate.""),
  phase_2_panel_number INT64  for periodic inventories. A panel is a sample in which the same elements are measured on two or more occasions. FIA divides the plots in each State into 5 panels that can be used to independently sample the population.""),
  phase_3_panel_number INT64 .""),
  ecological_subsection_code STRING . For Alaska, the ecological section codes are equivalent to the ecoregions designated by Nowacki and others in Ecoregions of Alaska: 2001. U.S. Geological Survey Open-File Report 02-297 (map). The ecological subsection code is based on fuzzed and swapped plot coordinates. This attribute is coded for the coterminous United States, southeast and south coastal Alaska, and is left blank (null) in all other instances""),
  congressional_district_code INT64  is for the current Congress; the assignment is made based on the plot's approximate coordinates. CONGCD is a four-digit number. The first two digits are the State FIPS code and the last two digits are the congressional district number. If a State has only one congressional district, the congressional district number is 00. If a plot's congressional district assignment falls in a State other than the plot's actual State due to using the approximate coordinates, the congressional district code will be for the nearest congressional district in the correct State. This attribute is coded for the coterminous States and Alaska, and is left blank (null) in all other instances. For more information about the coverage used to assign this attribute, see National Atlas of the United States (2007).""),
  manual_version_number FLOAT64 ,
  sample_kind_code_north_central INT64  and is blank (null) for all other FIA work units.""),
  quality_assurance_status INT64 . Codes 2-6 indicate additional quality assurance data that are not included in the FIADB.""),
  quality_assurance_status_name STRING . Codes 2-6 indicate additional quality assurance data that are not included in the FIADB.""),
  plot_created_by STRING ,
  plot_created_date DATE ,
  plot_created_in_instance INT64 ,
  plot_modified_by STRING  if the data have not been modified since initial creation. This attribute is intentionally left blank in download files.""),
  plot_modified_date DATE  if the data have not been modified since initial creation.""),
  plot_modified_in_instance INT64  if the data have not been modified since initial creation.""),
  microplot_location STRING  of subplot center. The current standard is that the microplot is located in the 'OFFSET' location, but some earlier inventories, including some early panels of the annual inventory, may contain data where the microplot was located at the 'CENTER' location. Populated for annual inventory and may be populated for periodic inventory.""),
  declination FLOAT64 ""),
  emap_hexagon INT64  hexagon in which the plot is located. EMAP hexagons are available to the public, cover the coterminous United States, and have been used in summarizing and aggregating data about numerous natural resources. Populated for annual inventory and may be populated for periodic inventory.""),
  sample_method_code INT64 ,
  sample_method_code_name STRING ,
  subplots_examined_code INT64 ,
  subplots_examined_code_name STRING ,
  macroplot_breakpoint_diameter INT64  above which trees are measured on the plot extending from 0.01 to 58.9 feet horizontal distance from the center of each subplot. Examples of different breakpoint diameters used by western FIA work units are 24 inches or 30 inches (Pacific Northwest), or 21 inches (Interior West). Installation of macroplots is core optional and is used to have a larger plot size in order to more adequately sample large trees. If macroplots are not being installed, this item will be left blank (null).""),
  intensity INT64 ,
  plot_inventory_cycle_number INT64 ,
  plot_inventory_subcycle_number INT64 ,
  ecological_unit_pacific_northwest_research_station STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26 or 27).""),
  topographic_position_pacific_northwest_research_station INT64 . Adapted from information found in Wilson (1900). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  topographic_position_pacific_northwest_research_station_name STRING . Adapted from information found in Wilson (1900). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  nonforest_sampling_status_code INT64 ,
  nonforest_sampling_status_code_name STRING ,
  nonforest_plot_status_code INT64 ,
  nonforest_plot_status_code_name STRING ,
  nonforest_plot_nonsampled_reason_code INT64 ,
  nonforest_plot_nonsampled_reason_code_name STRING ,
  p2_vegetation_sampling_status_code INT64 . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  p2_vegetation_sampling_status_code_name STRING . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  p2_vegetation_sampling_level_detail_code INT64 . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  p2_vegetation_sampling_level_detail_code_name STRING . A code indicating whether data were collected for vegetation structure growth habits only, or for individual species (that qualify as most abundant) as well. If LOD = 3, then a tree species could be recorded twice, but it would have two different species growth habits.""),
  invasive_sampling_status_code INT64  on which the data were recorded.""),
  invasive_sampling_status_code_name STRING  on which the data were recorded.""),
  invasive_specimen_rule_code INT64 ,
  invasive_specimen_rule_code_name STRING ,
  design_code_periodic_to_annual INT64 . Refer to appendix I for a list of codes and descriptions.""),
  manual_version_of_the_data FLOAT64 .""),
  subpanel INT64 , but may further subdivide the 5 panels into subpanels. The following FIA work units subdivide each phase 2 panel number into 2 subpanels (SUBPANEL = 1 or 2), for a total of 10 subpanels. For these FIA work units, 1 subpanel is usually scheduled for measurement each year: RMRS (SURVEY.RSCD = 22); PNWRS (SURVEY.RSCD = 26 or 27); SRS (SURVEY.RSCD = 33, only for Oklahoma where UNITCD 3. Populated for all plots using the National Field Guide protocols (MANUAL 1.0).""),
  subpanel_name STRING , but may further subdivide the 5 panels into subpanels. The following FIA work units subdivide each phase 2 panel number into 2 subpanels (SUBPANEL = 1 or 2), for a total of 10 subpanels. For these FIA work units, 1 subpanel is usually scheduled for measurement each year: RMRS (SURVEY.RSCD = 22); PNWRS (SURVEY.RSCD = 26 or 27); SRS (SURVEY.RSCD = 33, only for Oklahoma where UNITCD 3. Populated for all plots using the National Field Guide protocols (MANUAL 1.0).""),
  unique_plot STRING ,
  colocated_code_rmrs STRING ,
  condchng_code_rmrs STRING ,
  futfor_code_rmrs STRING ,
  manual_ncrs STRING ,
  manual_ners STRING ,
  manual_rmrs STRING ,
  pac_island_pnwrs STRING ,
  plot_season_ners STRING ,
  precipitation STRING ,
  prev_microplot_loc_rmrs STRING ,
  prev_plot_status_code_rmrs STRING ,
  reuse_code_1 STRING ,
  reuse_code_2 STRING ,
  reuse_code_3 STRING ,
  tree_sequence_number INT64 ,
  previous_tree_sequence_number INT64 ,
  tree_inventory_year INT64 . Under periodic inventory, a reporting inventory year was selected, usually based on the year in which the majority of the plots were collected or the mid-point of the years over which the inventory spanned. For either annual or periodic inventory, Inventory year is not necessarily the same as measurement year.""),
  tree_state_code INT64  two-digit code for each State. Refer to appendix B.""),
  tree_survey_unit_code INT64 ,
  tree_county_code INT64 ,
  tree_phase_2_plot_number INT64 ,
  subplot_number INT64  has subplot number values of 1 through 4. Other plot designs have various subplot number values. See PLOT.DESIGNCD and appendix I for information about plot designs. For more explanation about SUBP, contact the appropriate FIA work unit (table 1-1).""),
  tree_record_number INT64 ,
  condition_class_number INT64 ,
  azimuth INT64 . Due north is represented by 360 degrees.""),
  horizontal_distance FLOAT64  to the center of the base of the tree (geographic center for multi-stemmed woodland species). This attribute is populated for live and standing dead trees 1.0 inch DBH/DRC in a forest condition that were measured on any of the four subplots of the national plot design. It may be populated for other tree records.""),
  previous_condition_number INT64 ,
  tree_status_code INT64 ,
  tree_status_code_name STRING ,
  species_code INT64 ,
  species_common_name STRING ,
  species_scientific_name STRING ,
  species_group_code INT64 ,
  species_group_code_name STRING ,
  current_diameter FLOAT64  of the sample tree at the point of diameter measurement. DIA is measured at either breast height (DBH) or at root collar (DRC). DBH is usually measured at 4.5 feet above the ground line on the uphill side of the tree. DRC is measured on woodland species (often multi-stemmed) at the ground line or at the stem root collar, whichever is higher. DRC is computed using the following formula: DRC = SQRT [SUM (stem diameter2)] For additional information about where the tree diameter is measured, see Diameter height code or Height to diameter measurement point. Current diameter for live trees contains the measured value. DIA for cut and dead trees presents problems associated with uncertainty of when the tree was cut or died as well as structural deterioration of dead trees. Consult individual FIA work units for explanations of how Current diameter is collected for dead and cut trees.""),
  diameter_height_code INT64 , the actual measurement point may be found in Height to diameter measurement point.""),
  diameter_height_code_name STRING , the actual measurement point may be found in Height to diameter measurement point.""),
  total_height INT64  of a sample tree (in feet) from the ground to the tip of the apical meristem beginning in PLOT.MANUAL = 1.1. The total length of a tree is not always its actual length. If the main stem is broken, the actual length is measured or estimated and the missing piece is added to the actual length to estimate total length. The amount added is determined by measuring the broken piece if it can be located on the ground; otherwise it is estimated. The minimum height for timber species is 5 feet and for woodland species is 1 foot. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  height_method_code INT64  was determined beginning in PLOT.MANUAL = 1.1. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  height_method_code_name STRING  was determined beginning in PLOT.MANUAL = 1.1. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  actual_height INT64  of the tree to the nearest foot from ground level to the highest remaining portion of the tree still present and attached to the bole. If ACTUALHT = HT, then the tree does not have a broken top. If ACTUALHT <HT, then the tree does have a broken or missing top. The minimum height for timber species is 5 feet and for woodland species is 1 foot. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  tree_class_code INT64 ,
  tree_class_code_name STRING ,
  compacted_crown_ratio INT64  when compared to actual length (Actual Height). When PLOT.MANUAL <1.0 the variable may have been a code, which was converted to the midpoint of the ranges represented by the codes, and is stored as a percentage. May not be populated for periodic inventories.""),
  crown_class_code INT64 ,
  crown_class_code_name STRING ,
  tree_grade_code INT64 . Tree grade codes range from 1 to 5.""),
  cause_death_agent_code INT64 . Cause of damage was recorded for live trees if the presence of damage or pathogen activity was serious enough to reduce the quality or vigor of the tree. When a tree was damaged by more than one agent, the most severe damage was coded. When no damage was observed on a live tree, 00 was recorded. Damage recorded for dead trees was the cause of death. Each FIA program records specific codes that may differ from one State to the next. These codes fall within the ranges listed below. For the specific codes used in a particular State, contact the FIA work unit responsible for that State (table 1-1).""),
  cause_death_agent_code_name STRING . Cause of damage was recorded for live trees if the presence of damage or pathogen activity was serious enough to reduce the quality or vigor of the tree. When a tree was damaged by more than one agent, the most severe damage was coded. When no damage was observed on a live tree, 00 was recorded. Damage recorded for dead trees was the cause of death. Each FIA program records specific codes that may differ from one State to the next. These codes fall within the ranges listed below. For the specific codes used in a particular State, contact the FIA work unit responsible for that State (table 1-1).""),
  rotten_and_missing_cull INT64  and any additional cull due to broken top.""),
  damage_location_1 INT64  is present on the tree.""),
  damage_location_1_name STRING  is present on the tree""),
  damage_type_1 INT64  present. If Damage location 1 = 0, then Damage type 1 = blank (null).""),
  damage_type_1_name STRING  present. If Damage location 1 = 0, then Damage type 1 = blank (null).""),
  damage_severity_1 INT64 .""),
  damage_severity_1_name STRING .""),
  damage_location_2 INT64  is present. Use same codes as Damage location 1. If Damage location 1 = 0, then Damage location 2 = blank (null) or 0.""),
  damage_location_2_name STRING  is present. Use same codes as Damage location 1. If Damage location 1 = 0, then Damage location 2 = blank (null) or 0.""),
  damage_type_2 INT64  present. Use same codes as Damage type 1. If Damage location 1 = 0, then Damage type 2 = blank (null).""),
  damage_type_2_name STRING  present. Use same codes as Damage type 1. If Damage location 1 = 0, then Damage type 2 = blank (null).""),
  damage_severity_2 INT64 .""),
  damage_severity_2_name STRING .""),
  decay_class_code INT64 ,
  decay_class_code_name STRING ,
  tree_stocking FLOAT64 ,
  woodland_tree_species_stem_count INT64 ,
  net_cubicfoot_volume FLOAT64 , this is the net volume of wood in the central stem of a sample tree 5.0 inches in diameter, from a 1-foot stump to a minimum 4-inch top diameter, or to where the central stem breaks into limbs all of which are <4.0 inches in diameter. For woodland species, net cubicfoot volume is the net volume of wood and bark from the DRC measurement point(s) to a 1½-inch top diameter; includes branches that are at least 1½ inches in diameter along the length of the branch. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table table to obtain per acre information. This attribute is blank (null) for trees with DIA <5.0 inches. All trees measured after 1998 with DIA 5.0 inches (including standing dead trees) will have entries in this field. Does not include rotten, missing, and form cull.""),
  gross_cubicfoot_volume FLOAT64 , this is the net volume of wood in the central stem of a sample tree 5.0 inches in diameter, from a 1-foot stump to a minimum 4-inch top diameter, or to where the central stem breaks into limbs all of which are <4.0 inches in diameter. For woodland species, net cubicfoot volume is the net volume of wood and bark from the DRC measurement point(s) to a 1½-inch top diameter; includes branches that are at least 1½ inches in diameter along the length of the branch. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table table to obtain per acre information. This attribute is blank (null) for trees with DIA <5.0 inches. All trees measured after 1998 with DIA 5.0 inches (including standing dead trees) will have entries in this field. Does not include rotten, missing, and form cull.""),
  net_cubicfoot_volume_sawlog_portion_sawtimber_tree FLOAT64 , from a 1-foot stump to a minimum top diameter, (7.0 inches for softwoods, 9.0 inches for hardwoods) or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component table to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field. Form cull and rotten/missing cull are excluded.""),
  gross_cubicfoot_volume_sawlog_portion_sawtimber_tree FLOAT64 , from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods), or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field.""),
  net_boardfoot_volume_sawlog_portion_sawtimber_tree FLOAT64  of wood in the central stem of a timber species tree of sawtimber size (9.0 inches DIA minimum for softwoods, 11.0 inches DIA minimum for hardwoods), from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods), or to where the central stem breaks into limbs all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per unit area information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees should have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field. Form cull and rotten/missing cull are excluded.""),
  gross_boardfoot_volume_sawlog_portion_sawtimber_tree FLOAT64  of wood in the central stem of a timber species tree of sawtimber size (9.0 inches DIA minimum for softwoods, 11.0 inches DIA minimum for Chapter 3 (revision: 03.2017) Tree Table FIA Database Description and User Guide for Phase 2 (version: 7.0) 3-19 hardwoods), from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods), or to where the central stem breaks into limbs all of which are less than the minimum top DIA. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per unit area information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees should have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field.""),
  sound_cubicfoot_volume FLOAT64 , the volume of sound wood in the central stem of a sample tree 5.0 inches in diameter from a 1-foot stump to a minimum 4-inch top diameter or to where the central stem breaks into limbs all of which are <4.0 inches in diameter. For woodland species (woodland species can be identified by REF_SPECIES.WOODLAND = X), sound cubicfoot volume is the net volume of wood and bark from the DRC measurement point(s) to a minimum 1½-inch top diameter; includes branches that are at least 1½ inches in diameter along the length of the branch. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for trees with DIA <5.0 inches. All trees with DIA 5.0 inches (including dead trees) have entries in this field. Does not include rotten and missing cull (volume loss due to rotten and missing cull defect has been deducted).""),
  net_annual_merchantable_cubicfoot_growth_growingstock_tree_timberland FLOAT64  per year of this tree (for trees on remeasured plots, (V2 - V1)/(T2 - T1)where 1 and 2 denote the past and current measurement, respectively, V is volume, and T indicates year of measurement, and T2 - T1 = PLOT.REMPER). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_merchantable_boardfoot_growth_sawtimber_tree_timberland FLOAT64  volume per year of this tree (for trees on remeasured plots, (V2 - V1)/(T2 -T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_sound_cubicfoot_growth_live_tree_timberland FLOAT64  per year of the tree (for trees on remeasured plots, (V2 -V1)/(T2 -T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_timberland_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by Mortality trees per acre per year unadjusted.""),
  merchantable_boardfoot_volume_sawtimber_tree_timberland_mortality_purposes FLOAT64  volume of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by removal trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_tree_timberland_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by mortality trees per acre per year unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_timberland_removal_purposes FLOAT64  of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  merchantable_boardfoot_volume_sawtimber_tree_timberland_removal_purposes FLOAT64  volume of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_live_tree_timberland_removal_purposes FLOAT64  of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  diameter_check_code INT64 ,
  diameter_check_code_name STRING ,
  mortality_year INT64 ,
  salvable_dead_code INT64 .""),
  salvable_dead_code_name STRING .""),
  uncompacted_live_crown_ratio INT64 ,
  crown_position_code INT64 ,
  crown_position_code_name STRING ,
  crown_light_exposure_code INT64 ,
  crown_light_exposure_code_name STRING ,
  crown_vigor_code_sapling INT64 ,
  crown_vigor_code_sapling_name STRING ,
  crown_density_code INT64 ,
  crown_density_code_name STRING ,
  crown_dieback_code INT64 ,
  crown_dieback_code_name STRING ,
  foliage_transparency_code INT64 ,
  foliage_transparency_code_name STRING ,
  tree_history_code INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 23, 24, or 33).""),
  current_diameter_calculated FLOAT64 , the diameter is calculated (in inches) and stored in this attribute.""),
  breast_height_age INT64 . This data item is used to calculate classification attributes such as stand age. For PNWRS, one tree is sampled for BHAGE for each species, within each crown class, and for each condition class present on a plot. Age of saplings (<5.0 inches DBH) may be aged by counting branch whorls above 4.5 feet. No timber hardwood species other than red alder are bored for age. For RMRS, one tree is sampled for each species and broad diameter class present on a plot. Only collected by certain FIA work units (SURVEY.RSCD = 22 or 26) and is left blank (null) when it is not collected.""),
  total_age INT64 , or for small saplings (1.0 to 2.9 inches DBH) by counting all branch whorls, or by adding a species-dependent number of years to breast height age. Total age is collected for a subset of trees and is used to calculate classification attributes such as stand age. Only collected by certain FIA work units (SURVEY.RSCD = 22 or 26) and is left blank (null) when it is not collected.""),
  dead_cull INT64 . This attribute is blank (null) for trees smaller than 5 inches and is always null for the other FIA work units.""),
  form_cull INT64 . This attribute is blank (null) for dead trees, trees smaller than 5 inches DBH, for all trees where the diameter is measured at root collar (DRC), and is always null for the other FIA work units.""),
  missing_top_cull_field_recorded INT64  merchantable top. Recorded for trees that are at least 5.0 inches in diameter. The volume estimate does not include any portion of the missing top that is <4.0 inches DOB (diameter outside bark). Many broken top trees may have 0 percent missing top cull because no merchantable volume was lost. Only collected by certain FIA work units (SURVEY.RSCD = 22). This attribute is blank (null) for trees smaller than 5 inches diameter and is always null for the other FIA work units.""),
  boardfoot_cull INT64 .""),
  cubicfoot_cull INT64 .""),
  boardfootcull_soundness INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  cubicfootcull_soundness INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  sawlog_height INT64  of a tree, recorded to a 7-inch top (9-inch for hardwoods), where at least one 8-foot log, merchantable or not, is present. On broken topped trees, sawlog length is recorded to the point of the break. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  bole_height INT64 , where at least one 4-foot section is present. In periodic inventories, this attribute was measured in the field. For annual inventories, this attribute is a calculated, modeled value. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  form_class INT64 .""),
  form_class_name STRING .""),
  current_height_calculated INT64 , the height is calculated (in feet) and stored in this attribute. Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  hardwood_clump_code INT64 .""),
  calculated_site_index INT64 . It is expressed as height in feet that the tree is expected to attain at a base- or reference age (see SIBASE). Most commonly, site index is calculated using a family of curves that show site index as a function of total length and either breast-height age or total age. The height-intercept (or growth-intercept) method is commonly used for young trees or species that produce conspicuous annual branch whorls; using this method, site index is calculated with the height growth attained for a short period (usually 3 to 5 years) after the tree has reached breast height. Neither age nor total length determination are necessary when using the height-intercept method, so one or more of those variables may be null for a site tree on which the height-intercept method was used.""),
  tree_created_by INT64 ,
  tree_created_date DATE ,
  tree_created_in_instance INT64 ,
  tree_modified_by INT64  if the data have not been modified since initial creation. This attribute is intentionally left blank in download files.""),
  tree_modified_date DATE  if the data have not been modified since initial creation.""),
  tree_modified_in_instance INT64  if the data have not been modified since initial creation.""),
  mortality_code INT64 ,
  mortality_code_name STRING ,
  height_to_diameter_measurement_point FLOAT64 . If the diameter is not measured at 4.5 feet, the actual length from the ground, to the nearest 0.1 foot, at which the diameter was measured for each tally tree, 1.0-inch DBH and larger.""),
  rough_cull INT64 ,
  mistletoe_class_code INT64  six-class rating system, the live crown is divided into thirds, and each third is rated using the following scale: 0 is for no visible infection, 1 for <50 percent of branches infected, 2 for >50 percent of branches infected. The ratings for each third are summed together to yield the Hawksworth rating.""),
  mistletoe_class_code_name STRING  six-class rating system, the live crown is divided into thirds, and each third is rated using the following scale: 0 is for no visible infection, 1 for <50 percent of branches infected, 2 for >50 percent of branches infected. The ratings for each third are summed together to yield the Hawksworth rating.""),
  rotten_missing_cull_field_recorded INT64 . When field crews estimate volume loss (tree cull), they only consider the cull on the merchantable bole/portion of the tree, from a 1-foot stump to a 4-inch top diameter outside bark (DOB). For woodland species, the merchantable portion is between the point of DRC measurement to a 1.5-inch top DOB""),
  reconcile_code INT64 ,
  reconcile_code_name STRING ,
  previous_diameter FLOAT64  of the sample tree at the point of diameter measurement. Populated for remeasured trees.""),
  net_annual_merchantable_cubicfoot_growth_growingstock_tree_forest_land FLOAT64  per year of the tree (for trees on remeasured plots, (V2 - V1)/(T2 - T1) where 1 and 2 denote the past and current measurement, respectively, V is volume, T indicates date of measurement, and T2 - T1 = PLOT.REMPER). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_merchantable_boardfoot_growth_sawtimber_tree_forest_land FLOAT64  volume per year of the tree (for trees on remeasured plots, (V2 - V1)/(T2 - T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_sound_cubicfoot_growth_live_tree_forest_land FLOAT64  per year of the tree (for trees on remeasured plots (V2 - V1)/(T2 -T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_forest_land_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by removal trees per acre per year unadjusted.""),
  merchantable_boardfoot_volume_sawtimber_tree_forest_land_mortality_purposes FLOAT64  volume of the tree at time of mortality. To obtain estimates of annual per acre mortality, multiply by mortality trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_tree_forest_land_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by mortality trees per acre per year unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_forest_land_removal_purposes FLOAT64 ,
  merchantable_boardfoot_volume_sawtimber_tree_forest_land_removal_purposes FLOAT64  volume of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_live_tree_forest_land_removal_purposes FLOAT64  of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  periodic_annual_growth_removal_mortality_flag STRING  that is only included for the purposes of computing growth, removals and/or mortality estimates. Tree data associated with this subplot does not contribute to current estimates of such attributes as volume, biomass or number of trees. The flag is set to Y for those subplots that are needed for estimation and otherwise is left blank (null).""),
  tree_class_code_northeastern_research_station INT64 . For more detailed description, see the regional field guide. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  tree_class_code_northeastern_research_station_name STRING . For more detailed description, see the regional field guide. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  tree_class_code_southern_research_station INT64 , a growing-stock classification (code 2) was only assigned to species that were considered to have commercial value. Since the merger (INVYR >1997), code 2 has been applied to all tree species meeting the growing-stock form, grade, size and soundness requirements, regardless of commercial value. Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  tree_class_code_southern_research_station_name STRING , a growing-stock classification (code 2) was only assigned to species that were considered to have commercial value. Since the merger (INVYR >1997), code 2 has been applied to all tree species meeting the growing-stock form, grade, size and soundness requirements, regardless of commercial value. Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  tree_class_code_north_central_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 23).""),
  tree_class_code_north_central_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 23).""),
  tree_class_code_rocky_mountain_research_station INT64 .""),
  tree_class_code_rocky_mountain_research_station_name STRING .""),
  standing_dead_code INT64 ,
  standing_dead_code_name STRING ,
  previous_tree_status_code INT64 ,
  previous_tree_status_code_name STRING ,
  previous_woodland_stem_count STRING ,
  trees_per_acre_unadjusted FLOAT64 , TPA_UNADJ equals 74.965282 times the number of seedlings counted. For plots taken with other sample designs, this attribute may be blank (null). Based on the procedures described in Bechtold and Patterson (2005), this attribute can be adjusted using factors stored in the POP_STRATUM table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  mortality_trees_per_acre_per_year_unadjusted FLOAT64 , TPAMORT_UNADJ is set to a constant derived from the plot size divided by PLOT.REMPER. Variable-radius plots were often used in earlier inventories, so the value in TPAMORT_UNADJ decreases as the tree diameter increases. This attribute will be blank (null) if the tree does not contribute to mortality estimates. Based on the procedures described in Bechtold and Patterson (2005), this attribute must be adjusted using factors stored in the POP_STRATUM table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  removal_trees_per_acre_per_year_unadjusted FLOAT64 , Removal trees per acre per year unadjusted is set to a constant derived from the plot size divided by PLOT.REMPER. Variable-radius plots were often used in earlier inventories, so the value in removal trees per acre per year unadjusted decreases as the tree diameter increases. This attribute will be blank(null) if the tree does not contribute to removals estimates. Based on the procedures described in Bechtold and Patterson (2005), this attribute must be adjusted using factors stored in the Population Stratum Table table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  growth_trees_per_acre_unadjusted FLOAT64 , Growth trees per acre unadjusted is set to a constant derived from the plot size. Variable-radius plots were often used in earlier inventories, so the value in Growth trees per acre unadjusted decreases as the tree diameter increases. This attribute will be blank (null) if the tree does not contribute to growth estimates. Based on the procedures described in Bechtold and Patterson (2005), this attribute must be adjusted using factors stored in the Population Stratum Table table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  dry_biomass_in_the_merchantable_bole FLOAT64  in the merchantable bole of timber species [trees where diameter is measured at breast height (DBH)] 5.0 inches in diameter. This is the biomass of sound wood in live and dead trees, including bark, from a 1-foot stump to a minimum 4-inch top diameter of the central stem. This is a per tree value and must be multiplied by Trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for timber species with DIA <5.0 inches and for woodland species. See Aboveground dry biomass woodland tree species for biomass of woodland species and Aboveground dry biomass of saplings for biomass of timber species with DIA <5.0 inches. For dead or cut timber trees, this number represents the biomass at the time of death or last measurement. Dry biomass in the merchantable bole is based on Sound cubic-foot volume at the midpoint and specific gravity information derived by the Forest Products Lab and others (values stored in the Reference Species table).""),
  dry_biomass_top_limbs_tree FLOAT64  in the top and branches (combined) of timber species [trees where diameter is measured at breast height (DBH)] 5.0 inches in diameter. Dry biomass top limbs tree includes the tip, the portion of the stem above the merchantable bole (i.e., above the 4-inch top diameter), and all branches; excludes foliage. Estimated for live and dead trees. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table  table to obtain per acre information. For dead or cut trees, this number represents the biomass at the time of death or last measurement. This attribute is blank for timber species with DIA <5.0 inches and for woodland species. See aboveground dry biomass woodland tree species for biomass of woodland species, and aboveground dry biomass saplings for biomass of timber species with DIA <5.0 inches. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  dry_biomass_tree_stump_at_T_1 FLOAT64  in the top and branches (combined) of timber species [trees where diameter is measured at breast height (DBH)] 5.0 inches in diameter. Dry biomass top limbs tree includes the tip, the portion of the stem above the merchantable bole (i.e., above the 4-inch top diameter), and all branches; excludes foliage. Estimated for live and dead trees. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table  table to obtain per acre information. For dead or cut trees, this number represents the biomass at the time of death or last measurement. This attribute is blank for timber species with DIA <5.0 inches and for woodland species. See aboveground dry biomass woodland tree species for biomass of woodland species, and aboveground dry biomass saplings for biomass of timber species with DIA <5.0 inches. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  aboveground_dry_biomass_saplings FLOAT64  of the aboveground portion, excluding foliage, of live trees with a diameter from 1.0 to 4.9 inches. Calculated for timber species only. The biomass of saplings is based on biomass computed from Jenkins and others (2003), using the observed diameter and an adjustment factor. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the TREE_GRM_COMPONENT table to obtain per acre information. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  aboveground_dry_biomass_woodland_tree_species FLOAT64  of the aboveground portion of a live or dead tree, excluding foliage, the tree tip Tree Net Growth, Removal, and Mortality Begin Table Chapter 3 (revision: 03.2017) 3-94 FIA Database Description and User Guide for Phase 2 (version: 7.0) (top of the tree above 1½ inches in diameter), and a portion of the stump from ground to diameter at root collar (DRC). Calculated for woodland species (trees where diameter is measured at DRC) with a diameter 1.0 inch. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the TREE_GRM_COMPONENT table to obtain per acre information. This attribute is blank (null) for woodland species with DIA <1.0 inch and for all timber species. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  belowground_dry_biomass FLOAT64  of the aboveground portion of a tree. This is a modeled estimate, calculated on live trees with a diameter of 1.0 inch, for both timber and woodland species. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the TREE_GRM_COMPONENT table to obtain per acre information. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  aboveground_carbon FLOAT64  in the aboveground portion, excluding foliage, of live trees with a diameter 1.0 inch, and dead trees with a diameter 5.0 inches. Calculated for both timber and woodland species. This is a per tree value and must be multiplied by TPA_UNADJ to obtain per acre information. Carbon is assumed to be one-half the value of biomass and is derived by summing the aboveground biomass estimates and multiplying by 0.5 as follows: CARBON_AG = 0.5 * (DRYBIO_BOLE + DRYBIO_STUMP + DRYBIO_TOP + DRYBIO_SAPLING + DRYBIO_WDLD_SPP)""),
  belowground_carbon FLOAT64  of coarse roots >0.1 inch in root diameter. Calculated for live trees with a diameter 1.0 inch, and dead trees with a diameter 5.0 inches, for both timber and woodland species. This is a per tree value and must be multiplied by TPA_UNADJ to obtain per acre information. Carbon is assumed to be one-half the value of belowground biomass as follows: Belowground carbon = 0.5 * Belowground dry biomass""),
  tree_inventory_cycle_number INT64 ,
  tree_inventory_subcycle_number INT64 ,
  tree_bored_code_pacific_northwest_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  tree_bored_code_pacific_northwest_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_location_1_pacific_northwest_research_station INT64 .""),
  damage_location_1_pacific_northwest_research_station_name STRING .""),
  damage_location_2_pacific_northwest_research_station INT64 .""),
  damage_location_2_pacific_northwest_research_station_name STRING .""),
  diameter_check_pacific_northwest_research_station INT64 .""),
  diameter_check_pacific_northwest_research_station_name STRING .""),
  damage_agent_1_pacific_northwest_research_station INT64  indicating the tree damaging agent that is considered to be of greatest importance to predict tree growth, survival, and forest composition and structure. Additionally, there are two classes of damaging agents. Class I damage agents are considered more important than class II agents and are thus coded as a primary agent before the class II agents. For more information, see appendix K. Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_agent_2_pacific_northwest_research_station INT64  indicating the tree damaging agent that is considered to be of greatest importance to predict tree growth, survival, and forest composition and structure. Additionally, there are two classes of damaging agents. Class I damage agents are considered more important than class II agents and are thus coded as a primary agent before the class II agents. For more information, see appendix K. Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_agent_3_pacific_northwest_research_station INT64  indicating the tree damaging agent that is considered to be of greatest importance to predict tree growth, survival, and forest composition and structure. Additionally, there are two classes of damaging agents. Class I damage agents are considered more important than class II agents and are thus coded as a primary agent before the class II agents. For more information, see appendix K. Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  leafy_mistletoe_class_code_pacific_northwest_research_station INT64  and oak trees are rated for leafy mistletoe infection. This item is used to describe the extent and severity of leafy mistletoe infection (see MIST_CL_CD for dwarf mistletoe information). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  leafy_mistletoe_class_code_pacific_northwest_research_station_name STRING  and oak trees are rated for leafy mistletoe infection. This item is used to describe the extent and severity of leafy mistletoe infection (see MIST_CL_CD for dwarf mistletoe information). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_pacific_northwest_research_station_years_2001_2004 INT64 . This is a 2-digit code that indicates either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-9 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_a_pacific_northwest_research_station INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-4 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_b_pacific_northwest_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_b_pacific_northwest_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_2_pacific_northwest_research_station_years_2001_2004 INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-9 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_2_a_pacific_northwest_research_station_starting_2005 INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-4 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_2_b_pacific_northwest_research_station_starting_2005 STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_3_pacific_northwest_research_station_years_2001_2004 INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-9 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  unknown_damage_type_1_pacific_northwest_research_station INT64 .""),
  unknown_damage_type_1_pacific_northwest_research_station_name STRING .""),
  unknown_damage_type_2_pacific_northwest_research_station INT64 .""),
  unknown_damage_type_2_pacific_northwest_research_station_name STRING .""),
  previous_periodic_prism_point_tree_number_southern_research_station INT64  of the current cycle did not match the previous cycle's prism point, tree number. Previous periodic prism point tree number southern research station is used to join the current and the previous prism plot trees.""),
  disease_southern_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  disease_southern_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  dieback_severity_southern_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  dieback_severity_southern_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  damage_agent_code_1 INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_1_name STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_2 STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_2_name STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_3 INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_3_name STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  centroid_diameter FLOAT64  measured at CENTROID_DIA_HT_ACTUAL. For tree ferns, diameter is measured where the fronds emerge from the trunk. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This diameter is part of a new upper stem diameter protocol that began with remeasurement, except for Hawaii where the protocol was implemented in the first measurement.""),
  calculated_centroid_diameter_height FLOAT64  to stem centroid. The stem centroid is located at 30 percent of the TOTAL LENGTH of the stem. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This height is part of a new upper stem diameter protocol that began with the first remeasurement, except for Hawaii where the protocol was implemented in the first measurement.""),
  actual_centroid_diameter_height FLOAT64  to where stem centroid diameter was actually measured. It may differ from CENTROID_DIA_HT if abnormalities in the stem prevented a normal diameter measurement. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This height is part of a new upper stem diameter protocol that began with the first remeasurement, except for Hawaii where the protocol was implemented in the first measurement.""),
  upper_stem_diameter INT64 , measured at least 3 feet above the point where the DIA was taken. For larger trees, UPPER_DIA was recorded at the point where the main stem was at least 4.0 inches in diameter. This diameter is used in the calculation of stem taper, needed to improve the estimation of stem volume. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This is the legacy upper stem diameter protocol and will not be collected after the first remeasurement.""),
  upper_stem_diameter_height INT64  to where upper stem diameter (UPPER_DIA) was measured. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This is the legacy upper stem diameter protocol and will not be collected after the first remeasurement.""),
  sound_cubicfoot_volume_sawlog_portion FLOAT64 , from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods) or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field. Does not include rotten and missing cull (volume loss due to rotten and missing cull defect has been deducted).""),
  dry_biomass_sawlog_portion_sawtimber_tree FLOAT64  in the sawlog portion of timber species trees of sawtimber size (9.0 inches DIA minimum for softwoods, 11.0 inches minimum DIA for hardwoods), from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods) or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). For dead or cut timber trees, this number represents the biomass at the time of death or last measurement. Dry biomass sawlog portion sawtimber tree is based on sound cubicfoot volume sawlog portion and specific gravity information derived by the Forest Products Lab and others (values stored in the Reference Species table).""),
  damage_agent_code_1_southern_research_station INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_2_southern_research_station INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_3_southern_research_station STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  aboveground_dry_biomass FLOAT64  in the aboveground portion, excluding foliage, of live trees with a diameter 1 inch, and dead trees with a diameter 5 inches. Calculated for both timber and woodland species. This is a per tree value and must be multiplied by TPA_UNADJ to obtain per acre information. Appendix M contains equations used to estimate biomass components in the FIADB. DRYBIO_AG = (DRYBIO_BOLE + DRYBIO_STUMP + DRYBIO_TOP + DRYBIO_SAPLING + DRYBIO_WDLD_SPP)""),
  unique_tree STRING ,
  actualht_calc STRING ,
  actualht_calc_code STRING ,
  cull_bf_rotten STRING ,
  cull_bf_rotten_code STRING ,
  cull_bf_rough STRING ,
  cull_bf_rough_code STRING ,
  prevdia_fld STRING ,
  treecl_code_31_ncrs STRING ,
  tree_grade_ncrs STRING ,
  boughs_available_ncrs STRING ,
  boughs_hrvst_ncrs STRING ,
  treecl_code_31_ners STRING ,
  agent_code_ners STRING ,
  bfsnd_code_ners STRING ,
  agechk_code_rmrs STRING ,
  dia_1yrago_rmrs STRING ,
  growbfscr_rmrs STRING ,
  growcfsawlog_rmrs STRING ,
  ht_1yrago_rmrs STRING ,
  prev_actualht_rmrs STRING ,
  prev_agechk_code_rmrs STRING ,
  prev_bhage_rmrs STRING ,
  prev_ht_rmrs STRING ,
  prev_totage_rmrs STRING ,
  prev_treecl_code_rmrs STRING ,
  radage_code_rmrs STRING ,
  radgrw_rmrs STRING ,
  volbfscrgrs_rmrs STRING ,
  volbfscrnet_rmrs STRING ,
  volcfdeadgrs_rmrs STRING ,
  volcfsawgrs_rmrs STRING ,
  volcfsawnet_rmrs STRING ,
  volcftotnet_rmrs STRING ,
  volcfuppgrs_rmrs STRING ,
  volcfuppnet_rmrs STRING ,
  sapling_fusiform_srs STRING ,
  epiphyte_pnwrs STRING ,
  root_ht_pnwrs STRING ,
  cavity_use_pnwrs STRING ,
  core_length_pnwrs STRING ,
  culturally_killed_pnwrs STRING ,
  dia_est_pnwrs STRING ,
  gst_pnwrs STRING ,
  inc10yr_pnwrs STRING ,
  inc5yrht_pnwrs STRING ,
  inc5yr_pnwrs STRING ,
  ring_count_inner_2inches_pnwrs STRING ,
  ring_count_pnwrs STRING ,
  snag_dis_code_pnwrs STRING 
)
OPTIONS(
  description=""Join of the plot and tree table. Joined on the plot sequence number and tree.plot_sequence_number fields. \t\n\nPages in FIA Documentation: 2-9, 3-3""
);"

,3
table_name,tree
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.tree`
(
  tree_sequence_number INT64 ,
  plot_sequence_number INT64 ,
  previous_tree_sequence_number INT64 ,
  tree_inventory_year INT64 . Under periodic inventory, a reporting inventory year was selected, usually based on the year in which the majority of the plots were collected or the mid-point of the years over which the inventory spanned. For either annual or periodic inventory, Inventory year is not necessarily the same as measurement year.""),
  tree_state_code INT64  two-digit code for each State. Refer to appendix B.""),
  tree_survey_unit_code INT64 ,
  tree_county_code INT64 ,
  tree_phase_2_plot_number INT64 ,
  subplot_number INT64  has subplot number values of 1 through 4. Other plot designs have various subplot number values. See PLOT.DESIGNCD and appendix I for information about plot designs. For more explanation about SUBP, contact the appropriate FIA work unit (table 1-1).""),
  tree_record_number INT64 ,
  condition_class_number INT64 ,
  azimuth INT64 . Due north is represented by 360 degrees.""),
  horizontal_distance FLOAT64  to the center of the base of the tree (geographic center for multi-stemmed woodland species). This attribute is populated for live and standing dead trees 1.0 inch DBH/DRC in a forest condition that were measured on any of the four subplots of the national plot design. It may be populated for other tree records.""),
  previous_condition_number INT64 ,
  tree_status_code INT64 ,
  tree_status_code_name STRING ,
  species_code INT64 ,
  species_common_name STRING ,
  species_scientific_name STRING ,
  species_group_code INT64 ,
  species_group_code_name STRING ,
  current_diameter FLOAT64  of the sample tree at the point of diameter measurement. DIA is measured at either breast height (DBH) or at root collar (DRC). DBH is usually measured at 4.5 feet above the ground line on the uphill side of the tree. DRC is measured on woodland species (often multi-stemmed) at the ground line or at the stem root collar, whichever is higher. DRC is computed using the following formula: DRC = SQRT [SUM (stem diameter2)] For additional information about where the tree diameter is measured, see Diameter height code or Height to diameter measurement point. Current diameter for live trees contains the measured value. DIA for cut and dead trees presents problems associated with uncertainty of when the tree was cut or died as well as structural deterioration of dead trees. Consult individual FIA work units for explanations of how Current diameter is collected for dead and cut trees.""),
  diameter_height_code INT64 , the actual measurement point may be found in Height to diameter measurement point.""),
  diameter_height_code_name STRING , the actual measurement point may be found in Height to diameter measurement point.""),
  total_height INT64  of a sample tree (in feet) from the ground to the tip of the apical meristem beginning in PLOT.MANUAL = 1.1. The total length of a tree is not always its actual length. If the main stem is broken, the actual length is measured or estimated and the missing piece is added to the actual length to estimate total length. The amount added is determined by measuring the broken piece if it can be located on the ground; otherwise it is estimated. The minimum height for timber species is 5 feet and for woodland species is 1 foot. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  height_method_code INT64  was determined beginning in PLOT.MANUAL = 1.1. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  height_method_code_name STRING  was determined beginning in PLOT.MANUAL = 1.1. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  actual_height INT64  of the tree to the nearest foot from ground level to the highest remaining portion of the tree still present and attached to the bole. If ACTUALHT = HT, then the tree does not have a broken top. If ACTUALHT <HT, then the tree does have a broken or missing top. The minimum height for timber species is 5 feet and for woodland species is 1 foot. Starting with PLOT.MANUAL = 7.0, the Core minimum diameter to qualify for a standing dead tree was changed from 5.0 inches to 1.0 inch.""),
  tree_class_code INT64 ,
  tree_class_code_name STRING ,
  compacted_crown_ratio INT64  when compared to actual length (Actual Height). When PLOT.MANUAL <1.0 the variable may have been a code, which was converted to the midpoint of the ranges represented by the codes, and is stored as a percentage. May not be populated for periodic inventories.""),
  crown_class_code INT64 ,
  crown_class_code_name STRING ,
  tree_grade_code INT64 . Tree grade codes range from 1 to 5.""),
  cause_death_agent_code INT64 . Cause of damage was recorded for live trees if the presence of damage or pathogen activity was serious enough to reduce the quality or vigor of the tree. When a tree was damaged by more than one agent, the most severe damage was coded. When no damage was observed on a live tree, 00 was recorded. Damage recorded for dead trees was the cause of death. Each FIA program records specific codes that may differ from one State to the next. These codes fall within the ranges listed below. For the specific codes used in a particular State, contact the FIA work unit responsible for that State (table 1-1).""),
  cause_death_agent_code_name STRING . Cause of damage was recorded for live trees if the presence of damage or pathogen activity was serious enough to reduce the quality or vigor of the tree. When a tree was damaged by more than one agent, the most severe damage was coded. When no damage was observed on a live tree, 00 was recorded. Damage recorded for dead trees was the cause of death. Each FIA program records specific codes that may differ from one State to the next. These codes fall within the ranges listed below. For the specific codes used in a particular State, contact the FIA work unit responsible for that State (table 1-1).""),
  rotten_and_missing_cull INT64  and any additional cull due to broken top.""),
  damage_location_1 INT64  is present on the tree.""),
  damage_location_1_name STRING  is present on the tree""),
  damage_type_1 INT64  present. If Damage location 1 = 0, then Damage type 1 = blank (null).""),
  damage_type_1_name STRING  present. If Damage location 1 = 0, then Damage type 1 = blank (null).""),
  damage_severity_1 INT64 .""),
  damage_severity_1_name STRING .""),
  damage_location_2 INT64  is present. Use same codes as Damage location 1. If Damage location 1 = 0, then Damage location 2 = blank (null) or 0.""),
  damage_location_2_name STRING  is present. Use same codes as Damage location 1. If Damage location 1 = 0, then Damage location 2 = blank (null) or 0.""),
  damage_type_2 INT64  present. Use same codes as Damage type 1. If Damage location 1 = 0, then Damage type 2 = blank (null).""),
  damage_type_2_name STRING  present. Use same codes as Damage type 1. If Damage location 1 = 0, then Damage type 2 = blank (null).""),
  damage_severity_2 INT64 .""),
  damage_severity_2_name STRING .""),
  decay_class_code INT64 ,
  decay_class_code_name STRING ,
  tree_stocking FLOAT64 ,
  woodland_tree_species_stem_count INT64 ,
  net_cubicfoot_volume FLOAT64 , this is the net volume of wood in the central stem of a sample tree 5.0 inches in diameter, from a 1-foot stump to a minimum 4-inch top diameter, or to where the central stem breaks into limbs all of which are <4.0 inches in diameter. For woodland species, net cubicfoot volume is the net volume of wood and bark from the DRC measurement point(s) to a 1½-inch top diameter; includes branches that are at least 1½ inches in diameter along the length of the branch. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table table to obtain per acre information. This attribute is blank (null) for trees with DIA <5.0 inches. All trees measured after 1998 with DIA 5.0 inches (including standing dead trees) will have entries in this field. Does not include rotten, missing, and form cull.""),
  gross_cubicfoot_volume FLOAT64 , this is the net volume of wood in the central stem of a sample tree 5.0 inches in diameter, from a 1-foot stump to a minimum 4-inch top diameter, or to where the central stem breaks into limbs all of which are <4.0 inches in diameter. For woodland species, net cubicfoot volume is the net volume of wood and bark from the DRC measurement point(s) to a 1½-inch top diameter; includes branches that are at least 1½ inches in diameter along the length of the branch. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table table to obtain per acre information. This attribute is blank (null) for trees with DIA <5.0 inches. All trees measured after 1998 with DIA 5.0 inches (including standing dead trees) will have entries in this field. Does not include rotten, missing, and form cull.""),
  net_cubicfoot_volume_sawlog_portion_sawtimber_tree FLOAT64 , from a 1-foot stump to a minimum top diameter, (7.0 inches for softwoods, 9.0 inches for hardwoods) or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component table to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field. Form cull and rotten/missing cull are excluded.""),
  gross_cubicfoot_volume_sawlog_portion_sawtimber_tree FLOAT64 , from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods), or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field.""),
  net_boardfoot_volume_sawlog_portion_sawtimber_tree FLOAT64  of wood in the central stem of a timber species tree of sawtimber size (9.0 inches DIA minimum for softwoods, 11.0 inches DIA minimum for hardwoods), from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods), or to where the central stem breaks into limbs all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per unit area information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees should have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field. Form cull and rotten/missing cull are excluded.""),
  gross_boardfoot_volume_sawlog_portion_sawtimber_tree FLOAT64  of wood in the central stem of a timber species tree of sawtimber size (9.0 inches DIA minimum for softwoods, 11.0 inches DIA minimum for Chapter 3 (revision: 03.2017) Tree Table FIA Database Description and User Guide for Phase 2 (version: 7.0) 3-19 hardwoods), from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods), or to where the central stem breaks into limbs all of which are less than the minimum top DIA. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per unit area information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees should have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field.""),
  sound_cubicfoot_volume FLOAT64 , the volume of sound wood in the central stem of a sample tree 5.0 inches in diameter from a 1-foot stump to a minimum 4-inch top diameter or to where the central stem breaks into limbs all of which are <4.0 inches in diameter. For woodland species (woodland species can be identified by REF_SPECIES.WOODLAND = X), sound cubicfoot volume is the net volume of wood and bark from the DRC measurement point(s) to a minimum 1½-inch top diameter; includes branches that are at least 1½ inches in diameter along the length of the branch. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for trees with DIA <5.0 inches. All trees with DIA 5.0 inches (including dead trees) have entries in this field. Does not include rotten and missing cull (volume loss due to rotten and missing cull defect has been deducted).""),
  net_annual_merchantable_cubicfoot_growth_growingstock_tree_timberland FLOAT64  per year of this tree (for trees on remeasured plots, (V2 - V1)/(T2 - T1)where 1 and 2 denote the past and current measurement, respectively, V is volume, and T indicates year of measurement, and T2 - T1 = PLOT.REMPER). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_merchantable_boardfoot_growth_sawtimber_tree_timberland FLOAT64  volume per year of this tree (for trees on remeasured plots, (V2 - V1)/(T2 -T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_sound_cubicfoot_growth_live_tree_timberland FLOAT64  per year of the tree (for trees on remeasured plots, (V2 -V1)/(T2 -T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_timberland_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by Mortality trees per acre per year unadjusted.""),
  merchantable_boardfoot_volume_sawtimber_tree_timberland_mortality_purposes FLOAT64  volume of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by removal trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_tree_timberland_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by mortality trees per acre per year unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_timberland_removal_purposes FLOAT64  of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  merchantable_boardfoot_volume_sawtimber_tree_timberland_removal_purposes FLOAT64  volume of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_live_tree_timberland_removal_purposes FLOAT64  of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  diameter_check_code INT64 ,
  diameter_check_code_name STRING ,
  mortality_year INT64 ,
  salvable_dead_code INT64 .""),
  salvable_dead_code_name STRING .""),
  uncompacted_live_crown_ratio INT64 ,
  crown_position_code INT64 ,
  crown_position_code_name STRING ,
  crown_light_exposure_code INT64 ,
  crown_light_exposure_code_name STRING ,
  crown_vigor_code_sapling INT64 ,
  crown_vigor_code_sapling_name STRING ,
  crown_density_code INT64 ,
  crown_density_code_name STRING ,
  crown_dieback_code INT64 ,
  crown_dieback_code_name STRING ,
  foliage_transparency_code INT64 ,
  foliage_transparency_code_name STRING ,
  tree_history_code INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 23, 24, or 33).""),
  current_diameter_calculated FLOAT64 , the diameter is calculated (in inches) and stored in this attribute.""),
  breast_height_age INT64 . This data item is used to calculate classification attributes such as stand age. For PNWRS, one tree is sampled for BHAGE for each species, within each crown class, and for each condition class present on a plot. Age of saplings (<5.0 inches DBH) may be aged by counting branch whorls above 4.5 feet. No timber hardwood species other than red alder are bored for age. For RMRS, one tree is sampled for each species and broad diameter class present on a plot. Only collected by certain FIA work units (SURVEY.RSCD = 22 or 26) and is left blank (null) when it is not collected.""),
  total_age INT64 , or for small saplings (1.0 to 2.9 inches DBH) by counting all branch whorls, or by adding a species-dependent number of years to breast height age. Total age is collected for a subset of trees and is used to calculate classification attributes such as stand age. Only collected by certain FIA work units (SURVEY.RSCD = 22 or 26) and is left blank (null) when it is not collected.""),
  dead_cull INT64 . This attribute is blank (null) for trees smaller than 5 inches and is always null for the other FIA work units.""),
  form_cull INT64 . This attribute is blank (null) for dead trees, trees smaller than 5 inches DBH, for all trees where the diameter is measured at root collar (DRC), and is always null for the other FIA work units.""),
  missing_top_cull_field_recorded INT64  merchantable top. Recorded for trees that are at least 5.0 inches in diameter. The volume estimate does not include any portion of the missing top that is <4.0 inches DOB (diameter outside bark). Many broken top trees may have 0 percent missing top cull because no merchantable volume was lost. Only collected by certain FIA work units (SURVEY.RSCD = 22). This attribute is blank (null) for trees smaller than 5 inches diameter and is always null for the other FIA work units.""),
  boardfoot_cull INT64 .""),
  cubicfoot_cull INT64 .""),
  boardfootcull_soundness INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  cubicfootcull_soundness INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  sawlog_height INT64  of a tree, recorded to a 7-inch top (9-inch for hardwoods), where at least one 8-foot log, merchantable or not, is present. On broken topped trees, sawlog length is recorded to the point of the break. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  bole_height INT64 , where at least one 4-foot section is present. In periodic inventories, this attribute was measured in the field. For annual inventories, this attribute is a calculated, modeled value. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  form_class INT64 .""),
  form_class_name STRING .""),
  current_height_calculated INT64 , the height is calculated (in feet) and stored in this attribute. Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  hardwood_clump_code INT64 .""),
  calculated_site_index INT64 . It is expressed as height in feet that the tree is expected to attain at a base- or reference age (see SIBASE). Most commonly, site index is calculated using a family of curves that show site index as a function of total length and either breast-height age or total age. The height-intercept (or growth-intercept) method is commonly used for young trees or species that produce conspicuous annual branch whorls; using this method, site index is calculated with the height growth attained for a short period (usually 3 to 5 years) after the tree has reached breast height. Neither age nor total length determination are necessary when using the height-intercept method, so one or more of those variables may be null for a site tree on which the height-intercept method was used.""),
  tree_created_by INT64 ,
  tree_created_date DATE ,
  tree_created_in_instance INT64 ,
  tree_modified_by INT64  if the data have not been modified since initial creation. This attribute is intentionally left blank in download files.""),
  tree_modified_date DATE  if the data have not been modified since initial creation.""),
  tree_modified_in_instance INT64  if the data have not been modified since initial creation.""),
  mortality_code INT64 ,
  mortality_code_name STRING ,
  height_to_diameter_measurement_point FLOAT64 . If the diameter is not measured at 4.5 feet, the actual length from the ground, to the nearest 0.1 foot, at which the diameter was measured for each tally tree, 1.0-inch DBH and larger.""),
  rough_cull INT64 ,
  mistletoe_class_code INT64  six-class rating system, the live crown is divided into thirds, and each third is rated using the following scale: 0 is for no visible infection, 1 for <50 percent of branches infected, 2 for >50 percent of branches infected. The ratings for each third are summed together to yield the Hawksworth rating.""),
  mistletoe_class_code_name STRING  six-class rating system, the live crown is divided into thirds, and each third is rated using the following scale: 0 is for no visible infection, 1 for <50 percent of branches infected, 2 for >50 percent of branches infected. The ratings for each third are summed together to yield the Hawksworth rating.""),
  rotten_missing_cull_field_recorded INT64 . When field crews estimate volume loss (tree cull), they only consider the cull on the merchantable bole/portion of the tree, from a 1-foot stump to a 4-inch top diameter outside bark (DOB). For woodland species, the merchantable portion is between the point of DRC measurement to a 1.5-inch top DOB""),
  reconcile_code INT64 ,
  reconcile_code_name STRING ,
  previous_diameter FLOAT64 ,
  net_annual_merchantable_cubicfoot_growth_growingstock_tree_forest_land FLOAT64  per year of the tree (for trees on remeasured plots, (V2 - V1)/(T2 - T1) where 1 and 2 denote the past and current measurement, respectively, V is volume, T indicates date of measurement, and T2 - T1 = PLOT.REMPER). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_merchantable_boardfoot_growth_sawtimber_tree_forest_land FLOAT64  volume per year of the tree (for trees on remeasured plots, (V2 - V1)/(T2 - T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  net_annual_sound_cubicfoot_growth_live_tree_forest_land FLOAT64  per year of the tree (for trees on remeasured plots (V2 - V1)/(T2 -T1)). Because this value is net growth, it may be a negative number. Negative growth values are usually due to mortality (V2 = 0) but can also occur on live trees that have a net loss in volume because of damage, rot, broken top, or other causes. To expand to a per acre value, multiply by growth trees per acre unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_forest_land_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by removal trees per acre per year unadjusted.""),
  merchantable_boardfoot_volume_sawtimber_tree_forest_land_mortality_purposes FLOAT64  volume of the tree at time of mortality. To obtain estimates of annual per acre mortality, multiply by mortality trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_tree_forest_land_mortality_purposes FLOAT64  of the tree at the time of mortality. To obtain estimates of annual per acre mortality, multiply by mortality trees per acre per year unadjusted.""),
  merchantable_cubicfoot_volume_growingstock_tree_forest_land_removal_purposes FLOAT64 ,
  merchantable_boardfoot_volume_sawtimber_tree_forest_land_removal_purposes FLOAT64  volume of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  sound_cubicfoot_volume_live_tree_forest_land_removal_purposes FLOAT64  of the tree at the time of removal. To obtain estimates of annual per acre removals, multiply by removal trees per acre per year unadjusted.""),
  periodic_annual_growth_removal_mortality_flag STRING  that is only included for the purposes of computing growth, removals and/or mortality estimates. Tree data associated with this subplot does not contribute to current estimates of such attributes as volume, biomass or number of trees. The flag is set to Y for those subplots that are needed for estimation and otherwise is left blank (null).""),
  tree_class_code_northeastern_research_station INT64 . For more detailed description, see the regional field guide. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  tree_class_code_northeastern_research_station_name STRING . For more detailed description, see the regional field guide. Only collected by certain FIA work units (SURVEY.RSCD = 24).""),
  tree_class_code_southern_research_station INT64 , a growing-stock classification (code 2) was only assigned to species that were considered to have commercial value. Since the merger (INVYR >1997), code 2 has been applied to all tree species meeting the growing-stock form, grade, size and soundness requirements, regardless of commercial value. Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  tree_class_code_southern_research_station_name STRING , a growing-stock classification (code 2) was only assigned to species that were considered to have commercial value. Since the merger (INVYR >1997), code 2 has been applied to all tree species meeting the growing-stock form, grade, size and soundness requirements, regardless of commercial value. Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  tree_class_code_north_central_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 23).""),
  tree_class_code_north_central_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 23).""),
  tree_class_code_rocky_mountain_research_station INT64 .""),
  tree_class_code_rocky_mountain_research_station_name STRING .""),
  standing_dead_code INT64 ,
  standing_dead_code_name STRING ,
  previous_tree_status_code INT64 ,
  previous_tree_status_code_name STRING ,
  previous_woodland_stem_count STRING ,
  trees_per_acre_unadjusted FLOAT64 , TPA_UNADJ equals 74.965282 times the number of seedlings counted. For plots taken with other sample designs, this attribute may be blank (null). Based on the procedures described in Bechtold and Patterson (2005), this attribute can be adjusted using factors stored in the POP_STRATUM table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  mortality_trees_per_acre_per_year_unadjusted FLOAT64 , TPAMORT_UNADJ is set to a constant derived from the plot size divided by PLOT.REMPER. Variable-radius plots were often used in earlier inventories, so the value in TPAMORT_UNADJ decreases as the tree diameter increases. This attribute will be blank (null) if the tree does not contribute to mortality estimates. Based on the procedures described in Bechtold and Patterson (2005), this attribute must be adjusted using factors stored in the POP_STRATUM table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  removal_trees_per_acre_per_year_unadjusted FLOAT64 , Removal trees per acre per year unadjusted is set to a constant derived from the plot size divided by PLOT.REMPER. Variable-radius plots were often used in earlier inventories, so the value in removal trees per acre per year unadjusted decreases as the tree diameter increases. This attribute will be blank(null) if the tree does not contribute to removals estimates. Based on the procedures described in Bechtold and Patterson (2005), this attribute must be adjusted using factors stored in the Population Stratum Table table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  growth_trees_per_acre_unadjusted FLOAT64 , Growth trees per acre unadjusted is set to a constant derived from the plot size. Variable-radius plots were often used in earlier inventories, so the value in Growth trees per acre unadjusted decreases as the tree diameter increases. This attribute will be blank (null) if the tree does not contribute to growth estimates. Based on the procedures described in Bechtold and Patterson (2005), this attribute must be adjusted using factors stored in the Population Stratum Table table to derive population estimates. Examples of estimating population totals are shown in The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017).""),
  dry_biomass_in_the_merchantable_bole FLOAT64  in the merchantable bole of timber species [trees where diameter is measured at breast height (DBH)] 5.0 inches in diameter. This is the biomass of sound wood in live and dead trees, including bark, from a 1-foot stump to a minimum 4-inch top diameter of the central stem. This is a per tree value and must be multiplied by Trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for timber species with DIA <5.0 inches and for woodland species. See Aboveground dry biomass woodland tree species for biomass of woodland species and Aboveground dry biomass of saplings for biomass of timber species with DIA <5.0 inches. For dead or cut timber trees, this number represents the biomass at the time of death or last measurement. Dry biomass in the merchantable bole is based on Sound cubic-foot volume at the midpoint and specific gravity information derived by the Forest Products Lab and others (values stored in the Reference Species table).""),
  dry_biomass_top_limbs_tree FLOAT64  in the top and branches (combined) of timber species [trees where diameter is measured at breast height (DBH)] 5.0 inches in diameter. Dry biomass top limbs tree includes the tip, the portion of the stem above the merchantable bole (i.e., above the 4-inch top diameter), and all branches; excludes foliage. Estimated for live and dead trees. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table  table to obtain per acre information. For dead or cut trees, this number represents the biomass at the time of death or last measurement. This attribute is blank for timber species with DIA <5.0 inches and for woodland species. See aboveground dry biomass woodland tree species for biomass of woodland species, and aboveground dry biomass saplings for biomass of timber species with DIA <5.0 inches. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  dry_biomass_tree_stump_at_t_1 FLOAT64  in the top and branches (combined) of timber species [trees where diameter is measured at breast height (DBH)] 5.0 inches in diameter. Dry biomass top limbs tree includes the tip, the portion of the stem above the merchantable bole (i.e., above the 4-inch top diameter), and all branches; excludes foliage. Estimated for live and dead trees. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the Tree Net Growth, Removal, and Mortality Component Table  table to obtain per acre information. For dead or cut trees, this number represents the biomass at the time of death or last measurement. This attribute is blank for timber species with DIA <5.0 inches and for woodland species. See aboveground dry biomass woodland tree species for biomass of woodland species, and aboveground dry biomass saplings for biomass of timber species with DIA <5.0 inches. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  aboveground_dry_biomass_saplings FLOAT64  of the aboveground portion, excluding foliage, of live trees with a diameter from 1.0 to 4.9 inches. Calculated for timber species only. The biomass of saplings is based on biomass computed from Jenkins and others (2003), using the observed diameter and an adjustment factor. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the TREE_GRM_COMPONENT table to obtain per acre information. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  aboveground_dry_biomass_woodland_tree_species FLOAT64  of the aboveground portion of a live or dead tree, excluding foliage, the tree tip Tree Net Growth, Removal, and Mortality Begin Table Chapter 3 (revision: 03.2017) 3-94 FIA Database Description and User Guide for Phase 2 (version: 7.0) (top of the tree above 1½ inches in diameter), and a portion of the stump from ground to diameter at root collar (DRC). Calculated for woodland species (trees where diameter is measured at DRC) with a diameter 1.0 inch. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the TREE_GRM_COMPONENT table to obtain per acre information. This attribute is blank (null) for woodland species with DIA <1.0 inch and for all timber species. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  belowground_dry_biomass FLOAT64  of the aboveground portion of a tree. This is a modeled estimate, calculated on live trees with a diameter of 1.0 inch, for both timber and woodland species. This is a per tree value and must be multiplied by the appropriate trees per acre expansion factor found in the TREE_GRM_COMPONENT table to obtain per acre information. Appendix M contains equations used to estimate biomass components in the FIADB.""),
  aboveground_carbon FLOAT64  in the aboveground portion, excluding foliage, of live trees with a diameter 1.0 inch, and dead trees with a diameter 5.0 inches. Calculated for both timber and woodland species. This is a per tree value and must be multiplied by TPA_UNADJ to obtain per acre information. Carbon is assumed to be one-half the value of biomass and is derived by summing the aboveground biomass estimates and multiplying by 0.5 as follows: CARBON_AG = 0.5 * (DRYBIO_BOLE + DRYBIO_STUMP + DRYBIO_TOP + DRYBIO_SAPLING + DRYBIO_WDLD_SPP)""),
  belowground_carbon FLOAT64  of coarse roots >0.1 inch in root diameter. Calculated for live trees with a diameter 1.0 inch, and dead trees with a diameter 5.0 inches, for both timber and woodland species. This is a per tree value and must be multiplied by TPA_UNADJ to obtain per acre information. Carbon is assumed to be one-half the value of belowground biomass as follows: Belowground carbon = 0.5 * Belowground dry biomass""),
  tree_inventory_cycle_number INT64 ,
  tree_inventory_subcycle_number INT64 ,
  tree_bored_code_pacific_northwest_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  tree_bored_code_pacific_northwest_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_location_1_pacific_northwest_research_station INT64 .""),
  damage_location_1_pacific_northwest_research_station_name STRING .""),
  damage_location_2_pacific_northwest_research_station INT64 .""),
  damage_location_2_pacific_northwest_research_station_name STRING .""),
  diameter_check_pacific_northwest_research_station INT64 .""),
  diameter_check_pacific_northwest_research_station_name STRING .""),
  damage_agent_1_pacific_northwest_research_station INT64  indicating the tree damaging agent that is considered to be of greatest importance to predict tree growth, survival, and forest composition and structure. Additionally, there are two classes of damaging agents. Class I damage agents are considered more important than class II agents and are thus coded as a primary agent before the class II agents. For more information, see appendix K. Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_agent_2_pacific_northwest_research_station INT64  indicating the tree damaging agent that is considered to be of greatest importance to predict tree growth, survival, and forest composition and structure. Additionally, there are two classes of damaging agents. Class I damage agents are considered more important than class II agents and are thus coded as a primary agent before the class II agents. For more information, see appendix K. Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_agent_3_pacific_northwest_research_station INT64  indicating the tree damaging agent that is considered to be of greatest importance to predict tree growth, survival, and forest composition and structure. Additionally, there are two classes of damaging agents. Class I damage agents are considered more important than class II agents and are thus coded as a primary agent before the class II agents. For more information, see appendix K. Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  leafy_mistletoe_class_code_pacific_northwest_research_station INT64  and oak trees are rated for leafy mistletoe infection. This item is used to describe the extent and severity of leafy mistletoe infection (see MIST_CL_CD for dwarf mistletoe information). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  leafy_mistletoe_class_code_pacific_northwest_research_station_name STRING  and oak trees are rated for leafy mistletoe infection. This item is used to describe the extent and severity of leafy mistletoe infection (see MIST_CL_CD for dwarf mistletoe information). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_pacific_northwest_research_station_years_2001_2004 INT64 . This is a 2-digit code that indicates either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-9 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_a_pacific_northwest_research_station INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-4 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_b_pacific_northwest_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_1_b_pacific_northwest_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_2_pacific_northwest_research_station_years_2001_2004 INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-9 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_2_a_pacific_northwest_research_station_starting_2005 INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-4 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_2_b_pacific_northwest_research_station_starting_2005 STRING . Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  damage_severity_3_pacific_northwest_research_station_years_2001_2004 INT64 . This is a 2-digit code indicating either percent of location damaged (01-99), or the appropriate class of damage (values vary from 0-9 depending on the specific Damage Agent). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  unknown_damage_type_1_pacific_northwest_research_station INT64 .""),
  unknown_damage_type_1_pacific_northwest_research_station_name STRING .""),
  unknown_damage_type_2_pacific_northwest_research_station INT64 .""),
  unknown_damage_type_2_pacific_northwest_research_station_name STRING .""),
  previous_periodic_prism_point_tree_number_southern_research_station INT64  of the current cycle did not match the previous cycle's prism point, tree number. Previous periodic prism point tree number southern research station is used to join the current and the previous prism plot trees.""),
  disease_southern_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  disease_southern_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  dieback_severity_southern_research_station INT64 . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  dieback_severity_southern_research_station_name STRING . Only collected by certain FIA work units (SURVEY.RSCD = 33).""),
  damage_agent_code_1 INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_1_name STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_2 STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_2_name STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_3 INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_3_name STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  centroid_diameter FLOAT64  measured at CENTROID_DIA_HT_ACTUAL. For tree ferns, diameter is measured where the fronds emerge from the trunk. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This diameter is part of a new upper stem diameter protocol that began with remeasurement, except for Hawaii where the protocol was implemented in the first measurement.""),
  calculated_centroid_diameter_height FLOAT64  to stem centroid. The stem centroid is located at 30 percent of the TOTAL LENGTH of the stem. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This height is part of a new upper stem diameter protocol that began with the first remeasurement, except for Hawaii where the protocol was implemented in the first measurement.""),
  actual_centroid_diameter_height FLOAT64  to where stem centroid diameter was actually measured. It may differ from CENTROID_DIA_HT if abnormalities in the stem prevented a normal diameter measurement. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This height is part of a new upper stem diameter protocol that began with the first remeasurement, except for Hawaii where the protocol was implemented in the first measurement.""),
  upper_stem_diameter INT64 , measured at least 3 feet above the point where the DIA was taken. For larger trees, UPPER_DIA was recorded at the point where the main stem was at least 4.0 inches in diameter. This diameter is used in the calculation of stem taper, needed to improve the estimation of stem volume. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This is the legacy upper stem diameter protocol and will not be collected after the first remeasurement.""),
  upper_stem_diameter_height INT64  to where upper stem diameter (UPPER_DIA) was measured. Only collected by certain FIA work units (SURVEY.RSCD = 26) for the Pacific Islands. This is the legacy upper stem diameter protocol and will not be collected after the first remeasurement.""),
  sound_cubicfoot_volume_sawlog_portion FLOAT64 , from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods) or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). All larger trees have entries in this field if they are growing-stock trees (tree class code = 2 and tree status code = 1). All rough and rotten trees (tree class code = 3 or 4) and dead and cut trees (tree status code = 2 or 3) are blank (null) in this field. Does not include rotten and missing cull (volume loss due to rotten and missing cull defect has been deducted).""),
  dry_biomass_sawlog_portion_sawtimber_tree FLOAT64  in the sawlog portion of timber species trees of sawtimber size (9.0 inches DIA minimum for softwoods, 11.0 inches minimum DIA for hardwoods), from a 1-foot stump to a minimum top diameter (7.0 inches for softwoods, 9.0 inches for hardwoods) or to where the central stem breaks into limbs, all of which are less than the minimum top diameter. This is a per tree value and must be multiplied by trees per acre unadjusted to obtain per acre information. This attribute is blank (null) for softwood trees with DIA <9.0 inches (11.0 inches for hardwoods). For dead or cut timber trees, this number represents the biomass at the time of death or last measurement. Dry biomass sawlog portion sawtimber tree is based on sound cubicfoot volume sawlog portion and specific gravity information derived by the Forest Products Lab and others (values stored in the Reference Species table).""),
  damage_agent_code_1_southern_research_station INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_2_southern_research_station INT64 . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  damage_agent_code_3_southern_research_station STRING . If more than one agent is observed, the most threatening one is listed first where agents threatening survival are listed first and agents threatening wood quality second. Up to three damage agents can be recorded, from most important to least important (Damage agent code 1, Damage agent code 2 and Damage agent code 3). The codes used for damage agents come from the January 2012 Pest Trend Impact Plot System (PTIPS) list from the Forest Health Technology Enterprise Team (FHTET) that has been modified to meet FIA's needs. The list is modified by each region to meet the specific needs of that region. The general agent codes are listed here. See appendix J for the complete list of codes.""),
  aboveground_dry_biomass FLOAT64  in the aboveground portion, excluding foliage, of live trees with a diameter 1 inch, and dead trees with a diameter 5 inches. Calculated for both timber and woodland species. This is a per tree value and must be multiplied by TPA_UNADJ to obtain per acre information. Appendix M contains equations used to estimate biomass components in the FIADB. DRYBIO_AG = (DRYBIO_BOLE + DRYBIO_STUMP + DRYBIO_TOP + DRYBIO_SAPLING + DRYBIO_WDLD_SPP)""),
  unique_tree STRING ,
  actualht_calc STRING ,
  actualht_calc_code STRING ,
  cull_bf_rotten STRING ,
  cull_bf_rotten_code STRING ,
  cull_bf_rough STRING ,
  cull_bf_rough_code STRING ,
  prevdia_fld STRING ,
  treecl_code_31_ncrs STRING ,
  tree_grade_ncrs STRING ,
  boughs_available_ncrs STRING ,
  boughs_hrvst_ncrs STRING ,
  treecl_code_31_ners STRING ,
  agent_code_ners STRING ,
  bfsnd_code_ners STRING ,
  agechk_code_rmrs STRING ,
  dia_1yrago_rmrs STRING ,
  growbfscr_rmrs STRING ,
  growcfsawlog_rmrs STRING ,
  ht_1yrago_rmrs STRING ,
  prev_actualht_rmrs STRING ,
  prev_agechk_code_rmrs STRING ,
  prev_bhage_rmrs STRING ,
  prev_ht_rmrs STRING ,
  prev_totage_rmrs STRING ,
  prev_treecl_code_rmrs STRING ,
  radage_code_rmrs STRING ,
  radgrw_rmrs STRING ,
  volbfscrgrs_rmrs STRING ,
  volbfscrnet_rmrs STRING ,
  volcfdeadgrs_rmrs STRING ,
  volcfsawgrs_rmrs STRING ,
  volcfsawnet_rmrs STRING ,
  volcftotnet_rmrs STRING ,
  volcfuppgrs_rmrs STRING ,
  volcfuppnet_rmrs STRING ,
  sapling_fusiform_srs STRING ,
  epiphyte_pnwrs STRING ,
  root_ht_pnwrs STRING ,
  cavity_use_pnwrs STRING ,
  core_length_pnwrs STRING ,
  culturally_killed_pnwrs STRING ,
  dia_est_pnwrs STRING ,
  gst_pnwrs STRING ,
  inc10yr_pnwrs STRING ,
  inc5yrht_pnwrs STRING ,
  inc5yr_pnwrs STRING ,
  ring_count_inner_2inches_pnwrs STRING ,
  ring_count_pnwrs STRING ,
  snag_dis_code_pnwrs STRING 
)
OPTIONS(
  description=""Trees measured on the plots. \t\n\nPages in FIA Documentation: 3-3""
);"

,4
table_name,population_stratum
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population_stratum`
(
  stratum_sequence_number INT64 ,
  estimation_unit_sequence_number INT64 ,
  region_or_station_code INT64  that provided the inventory data (see appendix B for more information).""),
  evaluation_identifier INT64 ,
  estimation_unit INT64 ,
  stratum_code INT64 ,
  stratum_description STRING  but may also be based on other criteria such as ownership (e.g., private/public/national forest).""),
  state_code INT64  two-digit code for each State. Refer to appendix B. For evaluations that do not conform to the boundaries of a single State the value of STATECD should be set to 99.""),
  phase_1_point_count INT64  in the stratum.""),
  phase_2_point_count INT64 ,
  expansion_factor FLOAT64 ,
  adjustment_factor_for_the_macroplot FLOAT64 . It is used with condition proportion (COND.CONDPROP_UNADJ) and area expansion (EXPNS) to provide area estimates, when COND.PROP_BASIS = \""\""MACR\""\"" (indicating macroplot installed). ADJ_FACTOR_MACR is also used with EXPNS and trees per acre unadjusted (TREE.TPA_UNADJ, TREE.TPAMORT_UNADJ, TREE.TPAREMV_UNADJ, TREE.TPAGROW_UNADJ) to provide tree estimates for sampled land. If a macroplot was not installed, this attribute is left blank (null). Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_the_subplot FLOAT64 . It is used with condition proportion (COND.CONDPROP_UNADJ) and area expansion (EXPNS) to provide area estimates, when COND.PROP_BASIS = \""\""SUBP\""\"" (indicating subplots installed). ADJ_FACTOR_SUBP is also used with EXPNS and trees per acre unadjusted (TREE.TPA_UNADJ, TREE.TPAMORT_UNADJ, TREE.TPAREMV_UNADJ, TREE.TPAGROW_UNADJ) to provide tree estimates for sampled land. Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_the_microplot FLOAT64 . It is used with POP_STRATUM.EXPNS and seedlings per acre unadjusted (SEEDLING.TPA_UNADJ) or saplings per acre unadjusted (TREE.TPA_UNADJ where TREE DIA <5.0) to provide tree estimates for sampled land. Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_coarse_woody_debris FLOAT64 ,
  adjustment_factor_for_small_fine_woody_debris FLOAT64 ,
  adjustment_factor_for_large_fine_woody_debris FLOAT64 ,
  adjustment_factor_for_the_duff_and_litter_layer FLOAT64 ,
  pop_stratum_created_by STRING ,
  pop_stratum_created_date DATE ,
  pop_stratum_created_in_instance INT64 ,
  pop_stratum_modified_by STRING ,
  pop_stratum_modified_date DATE ,
  pop_stratum_modified_in_instance INT64 ,
  pop_stratum_adjustment_factor_for_piles FLOAT64 ,
  adj_factor_regen_micr STRING ,
  adj_factor_inv_subp STRING ,
  adj_factor_p2veg_subp STRING ,
  adj_factor_grndlyr_quad STRING 
)
OPTIONS(
  description=""Describes the stratum used in the estimation unit.\t\n\nPages in FIA Documentation: 7-21""
);"

,5
table_name,population_evaluation_group
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population_evaluation_group`
(
  evaluation_group_sequence_number INT64 ,
  region_or_station_code INT64  that provided the inventory data (see appendix B for more information).""),
  evaluation_group INT64 ,
  evaluation_group_description STRING ,
  state_code INT64  two-digit code for each State. Refer to appendix B. For evaluations that do not conform to the boundaries of a single State the value of STATECD should be set to 99.""),
  notes STRING ,
  pop_evaluation_group_created_by STRING ,
  pop_evaluation_group_created_date DATE ,
  pop_evaluation_group_created_in_instance INT64 ,
  pop_evaluation_group_modified_by STRING ,
  pop_evaluation_group_modified_date DATE ,
  pop_evaluation_group_modified_in_instance INT64 
)
OPTIONS(
  description=""Contains information about types of evaluations used, also includes information to select the appropriate state and inventory year for summary reports. \t\n\nPages in FIA Documentation: 7-13""
);"

,6
table_name,condition
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.condition`
(
  sequence_number INT64 ,
  plot_sequence_number INT64 ,
  inventory_year INT64 ,
  state_code INT64  two-digit code for each State. Refer to appendix B.""),
  state_code_name STRING ,
  survey_unit_code INT64 ,
  survey_unit_code_name STRING ,
  county_code INT64 ,
  county_code_name STRING ,
  phase_2_plot_number INT64 ,
  condition_class_number INT64  is usually designated as condition class 1. Other condition classes are assigned numbers sequentially at the time each condition class is delineated. On a plot, each sampled condition class must have a unique number that can change at remeasurement to reflect new conditions on the plot.""),
  condition_status_code INT64 , codes 1 and 2 have been modified to match FIA's new definition for accessible forest land and nonforest land. The current wording of \""at least 10 percent canopy cover\"" replaces older wording of \""at least 10 percent stocked\"" as the qualifying criteria in classification. This criteria applies to any tally tree species, including woodland tree species. For more info on the codes, please look at condition_status_code_name Column.""),
  condition_status_code_name STRING ,
  condition_nonsampled_reason_code INT64 ,
  condition_nonsampled_reason_code_name STRING ,
  reserved_status_code INT64  A code indicating the reserved status of the condition on publicly owned land. Starting with FIADB version 6.0 (PLOT.MANUAL ≥6.0), the description has been modified to match FIA's new application of the definition for reserved land. Reserved land is permanently prohibited from being managed for the production of wood products through statute or agency mandate; the prohibition cannot be changed through decision of the land manager. Logging may occur to meet protected area objectives. Examples include designated federal Wilderness areas, National Parks and Monuments, and most State Parks. Private land cannot be reserved. RESERVCD differs from RESERVCD_5, which stores reserved status based on the previous definition. See appendix N for applications of RESERVCD by FIA region and State. For more info on the codes, please look at reserved_status_code_name Column.""),
  reserved_status_code_name STRING ,
  owner_class_code INT64  A code indicating the class in which the landowner (at the time of the inventory) belongs. When PLOT.DESIGNCD = 999, OWNCD may be blank (null). For more info on the codes, please look at owner_class_code_name Column.""),
  owner_class_code_name STRING ,
  owner_group_code INT64  A broader group of landowner classes. When PLOT.DESIGNCD = 999, OWNGRPCD may be blank (null). For more info on the codes, please look at owner_group_code_name Column.""),
  owner_group_code_name STRING ,
  private_owner_industrial_status_code BOOL  A code indicating whether the landowner owns and operates a primary wood-processing plant. A primary wood-processing plant is any commercial operation that originates the primary processing of wood on a regular and continuing basis. Examples include: pulp or paper mill, sawmill, panel board mill, post or pole mill. This attribute is retained in this database for informational purposes but is intentionally left blank (null) because of the FIA data confidentiality policy. Users needing this type of information should contact the FIA Spatial Data Services (SDS) group by following the instructions provided at: http://www.fia.fs.fed.us/tools-data/spatial/. For more info on the codes, please look at private_owner_industrial_status_code_name Column.""),
  private_owner_industrial_status_code_name STRING ,
  administrative_forest_code INT64  in which the condition is located. The first two digits of the four digit code are for the region number and the last two digits are for the Administrative National Forest number. Refer to appendix C for codes. Populated for U.S. Forest Service lands OWNGRPCD = 10 and blank (null) for all other owners, except in a few cases where an administrative forest manages land owned by another federal agency; in this case OWNGRPCD = 20 and ADFORCD >0.""),
  administrative_forest_code_name STRING ,
  forest_type_code INT64 ,
  forest_type_code_name STRING ,
  field_forest_type_code INT64 ,
  field_forest_type_code_name STRING ,
  mapping_density INT64  for periodic inventories. For more info on the codes, please look at mapping_density_name Column.""),
  mapping_density_name STRING ,
  stand_age INT64 , stand age is equal to the field-recorded stand age (FLDAGE) with some exceptions: • FLDAGE = 999, tree cores are first sent to the office for the counting of rings. Stand age is then estimated based upon the average total age of live trees that fall within the calculated stand-size assignment. • When FLDAGE = 998, STDAGE may be blank (null) because no trees were cored in the field. • If no tree ages are available, then RMRS (SURVEY.RSCD = 22) sets this attribute equal to FLDAGE. For annual inventories, nonstocked stands have STDAGE set to 0. When FLDSZCD = 0 (nonstocked) but STDSZCD <5 (not nonstocked), STDAGE may be set to 0 because FLDAGE = 0. Annual inventory data will contain stand ages assigned to the nearest year. For periodic data, stand age was calculated using various methods. Contact the appropriate FIA unit (table 1-1) for details.""),
  standsize_class_code INT64  diameter class of live trees within the condition assigned using an algorithm. Large diameter trees are at least 11.0 inches diameter for hardwoods and at least 9.0 inches diameter for softwoods. Medium diameter trees are at least 5.0 inches diameter and smaller than large diameter trees. Small diameter trees are <5.0 inches diameter. When <25 percent of the plot samples the forested condition (CONDPROP_UNADJ <0.25), this attribute is set to the equivalent field-recorded stand-size class (FLDSZCD). Populated for all forest annual plots, all forest periodic plots, and all NCRS periodic plots that were measured as \""nonforest with trees\"" (e.g., wooded pasture, windbreaks). This attribute is blank (null) for periodic plots that are used only for growth, mortality and removal estimates, and modeling of reserved and unproductive conditions. For more info on the codes, please look at standsize_class_code_name Column.""),
  standsize_class_code_name STRING ,
  field_standsize_class_code INT64  diameter class of live trees within the condition. Blank (null) values may be present for periodic inventories. For more info on the codes, please refer field_standsize_class_code_name column.""),
  field_standsize_class_code_name STRING ,
  site_productivity_class_code INT64 ,
  site_productivity_class_code_name STRING ,
  site_index_for_the_condition INT64 . Site index is estimated for the condition by either using an individual tree or by averaging site index values that have been calculated for individual site trees (see SITETREE.SITREE) of the same species (SISP). As a result, it may be possible to find additional site index values that are not used in the calculation of SICOND in the SITETREE tables when site index has been calculated for more than one species in a condition. This attribute is blank (null) when no site index data are available.""),
  site_index_base_age INT64 , in years, of the site index curve used to derive site index. Base age may be breast height age or total age, depending on the specifications of the site index curves being used. This attribute is blank (null) when no site tree data are available.""),
  site_index_species_code INT64 . In cases where there are no suitable site trees of the type species, other suitable species may be used. This attribute is blank (null) when no site tree data are available.""),
  stand_origin_code BOOL . For more info on the codes, please refer stand_origin_code_name column.""),
  stand_origin_code_name STRING ,
  stand_origin_species_code INT64 . See appendix F. May not be populated for some FIA work units when PLOT.MANUAL <1.0.""),
  stand_origin_species_code_name STRING ,
  proportion_basis STRING  Usually 24-foot radius subplots are installed and in this case, the value for PROP_BASIS is \""SUBP.\"" However, when 58.9-foot radius macroplots are installed, the value is \""MACR.\"" This attribute may not be populated for periodic inventories.""),
  condition_proportion_unadjusted FLOAT64 .""),
  microplot_proportion_unadjusted FLOAT64 ,
  subplot_proportion_unadjusted FLOAT64 ,
  macroplot_proportion_unadjusted FLOAT64 .""),
  slope INT64 .""),
  aspect INT64 .""),
  physiographic_class_code INT64 . For more info on the codes, please refer physiographic_class_code_name column""),
  physiographic_class_code_name STRING ,
  growingstock_stocking_code STRING  equals 2, or for seedlings that do not have tree class assigned where species group (TREE.SPGRPCD) is not equal to 23 (woodland softwoods), 43 (eastern noncommercial hardwoods), and 48 (woodland hardwoods). Populated for all forest plots, and all NCRS periodic plots that were measured as \""nonforest with trees\"" (e.g., wooded pasture, windbreaks). This attribute is blank (null) for periodic plots that are used only for growth, mortality and removal estimates, and modeling of reserved and unproductive conditions.Estimates (e.g., forest land area, tree volume) associated with nonstocked areas identified with stocking code, stand-size class, and forest type can differ. For more details refer to GSSTKCD in https://www.fia.fs.fed.us/library/database-documentation/current/ver70/FIADB%20User%20Guide%20P2_7-0_ntc.final.pdf""),
  growingstock_stocking_code_name STRING ,
  all_live_stocking_code INT64 .Estimates (e.g., forest land area, tree volume) associated with nonstocked areas identified with stocking code (GSSTKCD and ALSTKCD), stand-size class (STDSZCD and FLDSZCD), and forest type (FORTYPCDCALC, FORTYPCD, and FLDTYPCD) can differ. For more details refer to ALSTKCD in https://www.fia.fs.fed.us/library/database-documentation/current/ver70/FIADB%20User%20Guide%20P2_7-0_ntc.final.pdf""),
  disturbance_code_1 INT64  is required. Populated for all forested conditions using the National Field Guide protocols (PLOT.MANUAL ≥1.0) and populated by some FIA work units where PLOT.MANUAL <1.0. Codes 11, 12, 21, and 22 are valid where PLOT.MANUAL ≥2.0. Up to three different disturbances per condition can be recorded, from most important to least important (DSTRBCD1, DSTRBCD2, and DSTRBCD1).For more info on the codes, please refer disturbance_code_1_name column.""),
  disturbance_code_1_name STRING ,
  disturbance_year_1 INT64  is estimated to have occurred. If the disturbance occurs continuously over a period of time, the value 9999 is used. Populated for all forested conditions that have some disturbance using the National Field Guide protocols (PLOT.MANUAL ≥1.0) and populated by some FIA work units where PLOT.MANUAL <1.0. If DISTRBCD1 = 0 then DSTRBYR1 = blank (null) or 0.""),
  disturbance_code_2 INT64 ,
  disturbance_year_2 INT64  occurred. See DSTRBYR1 for more information. This attribute is new in annual inventory.""),
  disturbance_code_3 INT64 ,
  disturbance_year_3 INT64  occurred. See DSTRBYR1 for more information. This attribute is new in annual inventory""),
  treatment_code_1 INT64  and populated by some FIA work units where PLOT.MANUAL <1.0. When PLOT.MANUAL <1.0, inventories may record treatments occurring within the last 20 years for new plots. Up to three different treatments per condition can be recorded, from most important to least important (TRTCD1, TRTCD2, and TRTCD3). For more info on the codes, please refer treatment_code_1_name column.""),
  treatment_code_1_name STRING ,
  treatment_year_1 INT64  is estimated to have occurred. Populated for all forested conditions that have some treatment using the National Field Guide protocols (PLOT.MANUAL ≥1.0) and populated by some FIA work units where PLOT.MANUAL <1.0. If TRTCD1 = 00 then TRTYR1 = blank (null) or 0.""),
  treatment_code_2 INT64 ,
  treatment_year_2 INT64  is estimated to have occurred. See TRTYR1 for more information.""),
  treatment_code_3 INT64 ,
  treatment_year_3 INT64  is estimated to have occurred. See TRTYR1 for more information.""),
  present_nonforest_code INT64 ,
  present_nonforest_code_name STRING ,
  basal_area_per_acre_of_live_trees FLOAT64 . Not used in population estimates.""),
  fieldrecorded_stand_age INT64 , 998 is recorded. If tree cores are not counted in the field, but are collected and sent to the office for the counting of rings, 999 is recorded.""),
  alllivetree_stocking_percent FLOAT64 . More detailed information on how stocking values were determined from plot data in a particular State can be obtained directly from the FIA work units.""),
  growingstock_stocking_percent FLOAT64 . More detailed information on how stocking values were determined from plot data in a particular State can be obtained directly from the FIA work units.""),
  forest_type_code_calculated INT64 . For more details refer to ALSTKCD in https://www.fia.fs.fed.us/library/database-documentation/current/ver70/FIADB%20User%20Guide%20P2_7-0_ntc.final.pdf""),
  habitat_type_code_1 STRING  for this condition. Unique codes are determined by combining both habitat type code and publication code (HABTYPCD1 and HABTYPCD1_PUB_CD). Habitat type captures information about both the overstory and understory vegetation and usually describes the vegetation that is predicted to become established after all successional stages of the ecosystem are completed without any disturbance. This code can be translated using the publication in which it was named and described (see HABTYPCD1_PUB_CD and HABYTYPCD1_DESCR_PUB_CD). Only collected by certain FIA work units (SURVEY.RSCD = 22, 23, or 26).""),
  habitat_type_code_1_publication_code STRING . Publication information is documented in the REF_HABTYP_PUBLICATION table. Only used by certain FIA work units (SURVEY.RSCD = 22, 23, or 26).""),
  habitat_type_code_1_description_publication_code STRING . This publication may or may not be the same publication that lists the name of the habitat type (HABTYPCD1_PUB_CD). Publication information is documented in REF_HABTYP_PUBLICATION table. Only used by certain FIA work units (SURVEY.RSCD = 22, 23, or 26).""),
  habitat_type_code_2 STRING  for this condition. See HABTYPCD1 for description.""),
  habitat_type_code_2_publication_code STRING . See HABTYPCD1_PUB_CD for description.""),
  habitat_type_code_2_description_publication_code STRING . See HABTYPCD1_DESCR_PUB_CD for description.""),
  mixed_conifer_code STRING  for all other States. Only collected by certain FIA work units (SURVEY.RSCD = 26). For more info on the codes, please refer mixed_conifer_code_name column.""),
  mixed_conifer_code_name STRING ,
  volume_location_group STRING ,
  volume_location_group_name STRING ,
  site_productivity_class_code_estimated INT64 . For more info on the codes, please refer site_productivity_class_code_estimated_name column.""),
  site_productivity_class_code_estimated_name STRING ,
  site_tree_tree_number INT64  used. Only collected by certain FIA work units (SURVEY.RSCD = 23 or 33).""),
  site_class_method INT64 ,
  site_class_method_name STRING ,
  carbon_in_down_dead FLOAT64  of woody material >3 inches in diameter on the ground, and stumps and their roots >3 inches in diameter. Estimated from models based on geographic area, forest type, and live tree carbon density (Smith and Heath 2008). This modeled attribute is a component of the EPA's Greenhouse Gas Inventory and is not a direct sum of Phase 2 or Phase 3 measurements. This is a per acre estimate and must be multiplied by COND.CONDPROP_UNADJ and the appropriate expansion and adjustment factor located in the POP_STRATUM table.""),
  carbon_in_litter FLOAT64  of organic material on the floor of the forest, including fine woody debris, humus, and fine roots in the organic forest floor layer above mineral soil. Estimated from models based on geographic area, forest type, and (except for nonstocked and pinyon-juniper stands) stand age (Smith and Heath 2002). This modeled attribute is a component of the EPA's Greenhouse Gas Inventory and is not a direct sum of Phase 2 or Phase 3 measurements. This is a per acre estimate and must be multiplied by COND.CONDPROP_UNADJ and the appropriate expansion and adjustment factor located in the POP_STRATUM table.""),
  carbon_in_soil_organic_material FLOAT64  in fine organic material below the soil surface to a depth of 1 meter. Does not include roots. Estimated from models based on geographic area and forest type (Smith and Heath 2008). This modeled attribute is a component of the EPA's Greenhouse Gas Inventory and is not a direct sum of Phase 2 or Phase 3 measurements. This is a per acre estimate and must be multiplied by COND.CONDPROP_UNADJ and the appropriate expansion and adjustment factor located in the POP_STRATUM table.""),
  carbon_in_standing_dead_trees FLOAT64  in standing dead trees ≥1.0 inch diameter, including coarse roots, is estimated from models based on geographic area, forest type, and (except for nonstocked stands) growing-stock volume (Smith and Heath 2008). This modeled attribute is a component of the EPA's Greenhouse Gas Inventory and is not a direct sum of Phase 2 or Phase 3 measurements. For most users it is preferable to calculate carbon (tons per acre) for annual inventories from the Phase 2 tree data. This is a per acre estimate and must be multiplied by COND.CONDPROP_UNADJ and the appropriate expansion and adjustment factor located in the POP_STRATUM table.""),
  carbon_in_understory_aboveground FLOAT64  in the aboveground portions of seedlings and woody shrubs. Estimated from models based on geographic area, forest type, and (except for nonstocked and pinyon-juniper stands) live tree carbon density (Smith and Health 2008). This modeled attribute is a component of the EPA's Greenhouse Gas Inventory and is not a direct sum of Phase 2 or Phase 3 measurements. This is a per acre estimate and must be multiplied by COND.CONDPROP_UNADJ and the appropriate expansion and adjustment factor located in the POP_STRATUM table.""),
  carbon_in_understory_belowground FLOAT64  in the belowground portions of seedlings and woody shrubs. Estimated from models based on geographic area, forest type, and (except for nonstocked and pinyon-juniper stands) live tree carbon density (Smith and Heath 2008). This modeled attribute is a component of the EPA's Greenhouse Gas Inventory and is not a direct sum of Phase 2 or Phase 3 measurements. This is a per acre estimate and must be multiplied by COND.CONDPROP_UNADJ and the appropriate expansion and adjustment factor located in the POP_STRATUM table.""),
  created_by STRING ,
  created_date DATE ,
  created_in_instance INT64 ,
  modified_by STRING ,
  modified_date DATE ,
  modified_in_instance INT64 ,
  inventory_cycle_number INT64 ,
  inventory_subcycle_number INT64 ,
  soil_rooting_depth_pacific_northwest_research_station INT64  within each forest land condition class. Required for all forest condition classes. This variable is coded 1 when more than half of area in the condition class is estimated to be 20 inches deep. Ground pumice, decomposed granite, and sand all qualify as types of soil. Only collected by certain FIA work units (SURVEY.RSCD = 26). For more info on the codes, soil_rooting_depth_pacific_northwest_research_station_name column.""),
  soil_rooting_depth_pacific_northwest_research_station_name STRING ,
  present_ground_land_class_pacific_northwest_research_station INT64  name and description are listed. Only collected by certain FIA work units (SURVEY.RSCD = 26). For more info on the codes, present_ground_land_class_pacific_northwest_research_station_name column.""),
  present_ground_land_class_pacific_northwest_research_station_name STRING ,
  plant_stockability_factor_pacific_northwest_research_station FLOAT64  must be discounted. Most forested conditions have a default value of 1 assigned; those conditions that meet the low site criteria have a value between 0.1 and 1. Key plant indicators and plant communities are used to assign discount factors, using procedures outlined in MacLean and Bolsinger (1974) and Hanson and others (2002). Only collected by certain FIA work units (SURVEY.RSCD = 26).""),
  stand_condition_code_pacific_northwest_research_station INT64 . For more info on the codes, stand_condition_code_pacific_northwest_research_station_name column.""),
  stand_condition_code_pacific_northwest_research_station_name STRING ,
  stand_structure_code_pacific_northwest_research_station INT64 . For more info on the codes, stump_code_pacific_northwest_research_station_name column.""),
  stand_structure_code_pacific_northwest_research_station_name STRING ,
  stump_code_pacific_northwest_research_station STRING .  For more info on the codes, stump_code_pacific_northwest_research_station_name column.""),
  stump_code_pacific_northwest_research_station_name STRING ,
  fire_southern_research_station BOOL .  For more info on the codes, fire_southern_research_station_name column.""),
  fire_southern_research_station_name STRING ,
  grazing_southern_research_station BOOL . For more info on the codes, grazing_southern_research_station_name column.""),
  grazing_southern_research_station_name STRING ,
  harvest_type_code_1_southern_research_station INT64 . For more info on the codes, harvest_type_code_1_southern_research_station_name column.""),
  harvest_type_code_1_southern_research_station_name STRING ,
  harvest_type_code_2_southern_research_station INT64 ,
  harvest_type_code_3_southern_research_station INT64 ,
  land_use_southern_research_station INT64 . For more info on the codes, land_use_southern_research_station_name column.""),
  land_use_southern_research_station_name STRING ,
  operability_southern_research_station INT64 . For more info on the codes, operability_southern_research_station_name column.""),
  operability_southern_research_station_name STRING ,
  stand_structure_southern_research_station INT64 . For more info on the codes, stand_structure_southern_research_station_name column.""),
  stand_structure_southern_research_station_name STRING ,
  nonforest_condition_status_code INT64 ,
  nonforest_condition_status_code_name STRING ,
  nonforest_condition_nonsampled_reason_code INT64 ,
  nonforest_condition_nonsampled_reason_code_name STRING ,
  canopy_cover_sample_method_code INT64 ,
  canopy_cover_sample_method_code_name STRING ,
  live_canopy_cover_percent INT64 ,
  live_plus_missing_canopy_cover_percent INT64 . Included are live and dead and removed tally trees, saplings, and seedlings. Dead trees and dead portions of live trees are not considered as missing unless it is part of the condition disturbance. The estimate is based on field observations, aerial photos, historical aerial imagery, and similar evidence of undisturbed conditions. The total of LIVE_MISSING_CANOPY_CVR_PCT cannot exceed 100 percent.""),
  number_of_live_stems INT64 ,
  owner_subclass_code STRING  A code that further subdivides the owner class into detailed subcategories. Currently, this attribute only has subcategories for the \""State\"" owner class. For more info on the codes, owner_subclass_code_name column.""),
  owner_subclass_code_name STRING ,
  industrial_code_in_fiadb STRING ,
  industrial_code_in_fiadb_name STRING ,
  reserve_code_field BOOL  prohibiting the management of land for the production of wood products. Conditions measured prior to PLOT.MANUAL = 6.0 may have different values in RESERVCD and RESERVCD_5 due to changes in the application of the RESERVCD definition. RESERVCD_5 holds the reserved status associated with the previous definition of RESERVCD. Only populated for PLOT.MANUAL ≥1.0 and PLOT.MANUAL <6.0. For more info on the codes, reserve_code_field_name column.""),
  reserve_code_field_name STRING ,
  administratively_withdrawn_code STRING  A code indicating whether or not a condition has an administratively withdrawn designation. Administratively withdrawn land is public land withdrawn by management plans or government regulations prohibiting the management of land for the production of wood products (not merely controlling or prohibiting wood-harvesting methods). Such plans and regulations are formally adopted by land managers and the prohibition against management for wood products cannot be changed through decision of the land manager except by a formal modification of management plans or regulations. For more info on the codes, administratively_withdrawn_code_name column.""),
  administratively_withdrawn_code_name STRING ,
  chaining_code BOOL ,
  chaining_code_name STRING ,
  land_cover_class INT64 . If the condition was less than 1 acre, a land cover classification key was used to assign a land cover class. For more info on the codes, land_cover_class_name column.""),
  land_cover_class_name STRING ,
  current_afforestation_code BOOL  to convert to forest in the current inventory cycle or since the last measurement. For more info on the codes, current_afforestation_code_name column.""),
  current_afforestation_code_name STRING ,
  previous_afforestation_code BOOL  to convert to forest in the prior inventory cycle or prior to the last measurement. For more info on the codes, previous_afforestation_code_name column.""),
  previous_afforestation_code_name STRING ,
  dwm_condition_fuelbed_type_code STRING . For more info on the codes, dwm_condition_fuelbed_type_code_name column.""),
  dwm_condition_fuelbed_type_code_name STRING ,
  unique_condition STRING 
)
OPTIONS(
  description=""Condition of the plot.\n\nConditions are defined by changes in land use or changes in vegetation that occur along more-or-less distinct boundaries. \nReserved status, owner group, forest type, stand-size class, regeneration status, and stand density are used to define forest conditions.\n\nPages in FIA Documentation: 1-8, 2-23""
);"

,7
table_name,population_evaluation
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population_evaluation`
(
  evaluation_sequence_number INT64 ,
  evaluation_group_sequence_number INT64 ,
  region_or_station_code INT64  that provided the inventory data (see appendix B for more information).""),
  evaluation_identifier INT64 ,
  evaluation_description STRING , the time period of the evaluation, and the type of estimates the evaluation can be used to compute (e.g., all lands, area, volume, growth, removals, mortality).""),
  state_code INT64  two-digit code for each State. Refer to appendix B. For evaluations that do not conform to the boundaries of a single State the value of STATECD should be set to 99.""),
  location_name STRING ,
  report_year_name STRING ,
  start_inventory_year STRING ,
  end_inventory_year STRING ,
  land_only STRING ,
  timberland_only STRING .""),
  growth_accounting STRING  when the POP_EVAL_TYP.EVAL_TYP is not 'EXPGROW' evaluation type. See The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for examples of the growth accounting method.""),
  estimation_method STRING ,
  notes STRING ,
  pop_evaluation_created_by STRING ,
  pop_evaluation_created_date DATE ,
  pop_evaluation_created_in_instance INT64 ,
  pop_evaluation_modified_by STRING ,
  pop_evaluation_modified_date DATE ,
  pop_evaluation_modified_in_instance INT64 
)
OPTIONS(
  description=""Describes the evaluation area, which is often a State. \nPages in FIA Documentation:\t7-7""
);"

,8
table_name,population_estimation_unit
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population_estimation_unit`
(
  estimation_unit_sequence_number INT64 ,
  evaluation_sequence_number INT64 ,
  region_or_station_code INT64  that provided the inventory data (see appendix B for more information).""),
  evaluation_identifier INT64 ,
  estimation_unit INT64 ,
  estimation_unit_description STRING .""),
  state_code INT64  two-digit code for each State. Refer to appendix B. For evaluations that do not conform to the boundaries of a single State the value of STATECD should be set to 99.""),
  land_area_within_the_estimation_unit FLOAT64 ,
  total_area_within_the_estimation_unit FLOAT64 ,
  area_used_to_calculate_all_expansion_factors FLOAT64 ,
  area_source STRING ,
  phase_1_point_count_for_the_estimation_unit INT64 ,
  phase_1_source STRING ,
  eval_unit_created_by STRING ,
  eval_unit_created_date DATE ,
  eval_unit_created_in_instance INT64 ,
  eval_unit_modified_by STRING ,
  eval_unit_modified_date DATE ,
  eval_unit_modified_in_instance INT64 
)
OPTIONS(
  description=""Describes the estimation unit.\t\n\nPages in FIA Documentation: 7-3""
);"

,9
table_name,population_evaluation_type
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population_evaluation_type`
(
  evaluation_type_sequence_number INT64 ,
  evaluation_group_sequence_number INT64 ,
  evaluation_sequence_number INT64 ,
  evaluation_type STRING . At the present time, nine types of evaluations can be produced. See also the REF_POP_EVAL_TYP_DESCR table.""),
  eval_type_created_by STRING ,
  eval_type_created_date DATE ,
  eval_type_created_in_instance INT64 ,
  eval_type_modified_by STRING ,
  eval_type_modified_date DATE ,
  eval_type_modified_in_instance INT64 
)
OPTIONS(
  description=""Describes the type of evaluation. Evaluation type is needed to generate summary reports for an inventory.\t\n\nPages in FIA Documentation: 7-15""
);"

,10
table_name,population
ddl,"CREATE TABLE `bigquery-public-data.usfs_fia.population`
(
  stratum_assign_sequence_number STRING ,
  stratum_sequence_number INT64 ,
  plot_sequence_number INT64 ,
  state_code INT64  two-digit code for each State. Refer to appendix B. For evaluations that do not conform to the boundaries of a single State the value of STATECD should be set to 99.""),
  inventory_year INT64 ,
  survey_unit_code INT64 ,
  county_code INT64 ,
  phase_2_plot_number INT64 ,
  region_or_station_code INT64  that provided the inventory data (see appendix B for more information).""),
  evaluation_identifier INT64 ,
  estimation_unit INT64 ,
  stratum_code INT64 ,
  stratum_assign_created_by STRING ,
  stratum_assign_created_date DATE ,
  stratum_assign_created_in_instance INT64 ,
  stratum_assign_modified_by STRING ,
  stratum_assign_modified_date DATE ,
  stratum_assign_modified_in_instance INT64 ,
  estimation_unit_sequence_number INT64 ,
  evaluation_sequence_number INT64 ,
  estimation_unit_description STRING .""),
  land_area_within_the_estimation_unit FLOAT64 ,
  total_area_within_the_estimation_unit FLOAT64 ,
  area_used_to_calculate_all_expansion_factors FLOAT64 ,
  area_source STRING ,
  phase_1_point_count_for_the_estimation_unit INT64 ,
  phase_1_source STRING ,
  eval_unit_created_by STRING ,
  eval_unit_created_date DATE ,
  eval_unit_created_in_instance INT64 ,
  eval_unit_modified_by STRING ,
  eval_unit_modified_date DATE ,
  eval_unit_modified_in_instance INT64 ,
  evaluation_group_sequence_number INT64 ,
  evaluation_description STRING , the time period of the evaluation, and the type of estimates the evaluation can be used to compute (e.g., all lands, area, volume, growth, removals, mortality).""),
  location_name STRING ,
  report_year_name STRING ,
  start_inventory_year STRING ,
  end_inventory_year STRING ,
  land_only STRING ,
  timberland_only STRING .""),
  growth_accounting STRING  when the POP_EVAL_TYP.EVAL_TYP is not 'EXPGROW' evaluation type. See The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for examples of the growth accounting method.""),
  estimation_method STRING ,
  notes STRING ,
  pop_evaluation_created_by STRING ,
  pop_evaluation_created_date DATE ,
  pop_evaluation_created_in_instance INT64 ,
  pop_evaluation_modified_by STRING ,
  pop_evaluation_modified_date DATE ,
  pop_evaluation_modified_in_instance INT64 ,
  evaluation_type_sequence_number INT64 ,
  evaluation_type STRING . At the present time, nine types of evaluations can be produced. See also the REF_POP_EVAL_TYP_DESCR table.""),
  eval_type_created_by STRING ,
  eval_type_created_date DATE ,
  eval_type_created_in_instance INT64 ,
  eval_type_modified_by STRING ,
  eval_type_modified_date DATE ,
  eval_type_modified_in_instance INT64 ,
  stratum_description STRING  but may also be based on other criteria such as ownership (e.g., private/public/national forest).""),
  phase_1_point_count INT64  in the stratum.""),
  phase_2_point_count INT64 ,
  expansion_factor FLOAT64 /P 2POINTCNT. This attribute can be used to obtain estimates of population area when summed across all the plots in the population of interest. Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_the_macroplot FLOAT64 . It is used with condition proportion (COND.CONDPROP_UNADJ) and area expansion (EXPNS) to provide area estimates, when COND.PROP_BASIS = \""\""MACR\""\"" (indicating macroplot installed). ADJ_FACTOR_MACR is also used with EXPNS and trees per acre unadjusted (TREE.TPA_UNADJ, TREE.TPAMORT_UNADJ, TREE.TPAREMV_UNADJ, TREE.TPAGROW_UNADJ) to provide tree estimates for sampled land. If a macroplot was not installed, this attribute is left blank (null). Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_the_subplot FLOAT64 . It is used with condition proportion (COND.CONDPROP_UNADJ) and area expansion (EXPNS) to provide area estimates, when COND.PROP_BASIS = \""\""SUBP\""\"" (indicating subplots installed). ADJ_FACTOR_SUBP is also used with EXPNS and trees per acre unadjusted (TREE.TPA_UNADJ, TREE.TPAMORT_UNADJ, TREE.TPAREMV_UNADJ, TREE.TPAGROW_UNADJ) to provide tree estimates for sampled land. Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_the_microplot FLOAT64 . It is used with POP_STRATUM.EXPNS and seedlings per acre unadjusted (SEEDLING.TPA_UNADJ) or saplings per acre unadjusted (TREE.TPA_UNADJ where TREE DIA <5.0) to provide tree estimates for sampled land. Refer to The Forest Inventory and Analysis Database: Population Estimation User Guide (Edition: March, 2017) for detailed examples.""),
  adjustment_factor_for_coarse_woody_debris FLOAT64 ,
  adjustment_factor_for_small_fine_woody_debris FLOAT64 ,
  adjustment_factor_for_large_fine_woody_debris FLOAT64 ,
  adjustment_factor_for_the_duff_and_litter_layer FLOAT64 ,
  pop_stratum_created_by STRING ,
  pop_stratum_created_date DATE ,
  pop_stratum_created_in_instance INT64 ,
  pop_stratum_modified_by STRING ,
  pop_stratum_modified_date DATE ,
  pop_stratum_modified_in_instance INT64 ,
  pop_stratum_adjustment_factor_for_piles FLOAT64 ,
  evaluation_group INT64 ,
  evaluation_group_description STRING ,
  pop_evaluation_group_created_by STRING ,
  pop_evaluation_group_created_date DATE ,
  pop_evaluation_group_created_in_instance INT64 ,
  pop_evaluation_group_modified_by STRING ,
  pop_evaluation_group_modified_date DATE ,
  pop_evaluation_group_modified_in_instance INT64 
)
OPTIONS(
  description=""Join of all the population tables, so each row has all of the information for a plot. Can be joined to the plot_tree table on plot sequence number.""
);"

External knowledge that might be helpful: 
# Subplot Size and Macroplot Size Calculation Methods

## Overview

In forest inventory analysis, different types of plots are used to estimate forest characteristics. Two commonly used plot sizes are **subplot** and **macroplot**, each serving a distinct purpose for data collection at different scales.

This document provides a detailed explanation of the **subplot size** and **macroplot size** calculation methods using mathematical formulas.

## Subplot Size Calculation

### Definition
A **subplot** is a smaller area within a larger plot, often used to collect more detailed forest data. Subplots are utilized when fine-grained measurements are needed for specific forest conditions.

### Calculation Formula
The size of a subplot is calculated as follows:

\[
\text{Subplot Area} = 
\begin{cases} 
E \times P \times A_s, & \text{if proportion basis} = \text{'SUBP'} \text{ and } A_s > 0 \\
0, & \text{otherwise}
\end{cases}
\]

### Explanation of Terms:
- **E** (Expansion Factor): A multiplier used to adjust the size of the subplot to account for its proportion within a larger area.
- **P** (Condition Proportion Unadjusted): Represents the unadjusted proportion of the forest condition within the subplot.
- **A_s** (Adjustment Factor for Subplot): A factor applied to adjust the subplot size based on specific conditions or measurements.

### Interpretation:
If the **proportion basis** is `'SUBP'` and the **adjustment factor for the subplot** \( A_s \) is greater than 0, the subplot size is calculated by multiplying the **expansion factor** \( E \), **condition proportion** \( P \), and the **adjustment factor** \( A_s \):

\[
\text{Subplot Area} = E \times P \times A_s
\]

If these conditions are not met, the subplot size is set to 0.

## Macroplot Size Calculation

### Definition
A **macroplot** is a larger area within a forest inventory used for broader data collection. Macroplots cover more extensive areas compared to subplots and are used to estimate forest characteristics applicable to large sections of the forest.

### Calculation Formula
The size of a macroplot is calculated as follows:

\[
\text{Macroplot Area} = 
\begin{cases} 
E \times P \times A_m, & \text{if proportion basis} = \text{'MACR'} \text{ and } A_m > 0 \\
0, & \text{otherwise}
\end{cases}
\]

### Explanation of Terms:
- **E** (Expansion Factor): A factor that adjusts the macroplot size to reflect its relative size within the larger forest area.
- **P** (Condition Proportion Unadjusted): The unadjusted proportion of the forest condition within the macroplot.
- **A_m** (Adjustment Factor for Macroplot): A factor used to adjust the macroplot size based on specific forest conditions or measurements.

### Interpretation:
If the **proportion basis** is `'MACR'` and the **adjustment factor for the macroplot** \( A_m \) is greater than 0, the macroplot size is calculated using the following formula:

\[
\text{Macroplot Area} = E \times P \times A_m
\]

If these conditions are not met, the macroplot size is set to 0.

## Summary of Key Differences

| Parameter                     | Subplot Size Calculation                   | Macroplot Size Calculation                  |
|--------------------------------|--------------------------------------------|---------------------------------------------|
| **Proportion Basis**           | `'SUBP'`                                   | `'MACR'`                                    |
| **Adjustment Factor Applied**  | Adjustment Factor for Subplot \( A_s \)     | Adjustment Factor for Macroplot \( A_m \)   |
| **Applicability**              | Used for fine-grained data collection       | Used for broader, large-scale data collection |

### Common Calculation Components:
Both **subplot** and **macroplot** calculations use:
- **E** (Expansion Factor): Reflects how much area the plot represents in the larger forest.
- **P** (Condition Proportion Unadjusted): The proportion of the forest condition applicable to the plot.

These components are scaled based on whether the condition applies to a subplot or macroplot.

The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'usfs_fia': ['condition', 'plot', 'plot_tree', 'population', 'population_estimation_unit', 'population_evaluation', 'population_evaluation_group', 'population_evaluation_type', 'population_stratum', 'population_stratum_assign', 'tree']}}
Begin Exploring Related Columns
**Columns and their Potential Usage:**

1. **Table**: `bigquery-public-data.usfs_fia.condition`
   - `plot_sequence_number`: Used to join with the `population` table.
   - `state_code`: To group data by state.
   - `inventory_year`: To filter data for the years 2015, 2016, and 2017.
   - `condition_status_code_name`: To filter for "Accessible forest land".
   - `condprop_unadj`: Represents **P**, the condition proportion unadjusted.
   - `prop_basis`: Indicates if the plot is a subplot ('SUBP') or macroplot ('MACR').

2. **Table**: `bigquery-public-data.usfs_fia.population`
   - `plot_sequence_number`: Used to join with the `condition` table.
   - `expansion_factor`: Represents **E**, the expansion factor.
   - `adjustment_factor_for_the_subplot`: Represents **A_s**.
   - `adjustment_factor_for_the_macroplot`: Represents **A_m**.
   - `evaluation_type`: To filter for current evaluations ('EXPCURR').

3. **Table**: `bigquery-public-data.usfs_fia.population_evaluation_type`
   - `evaluation_type_sequence_number`: Used to join with the `population` table.
   - `evaluation_type`: To filter for 'EXPCURR'.

4. **Conditions that may be used:**
   - `condition_status_code_name` = 'Accessible forest land'
   - `inventory_year` IN (2015, 2016, 2017)
   - `prop_basis` = 'SUBP' or 'MACR'
   - `evaluation_type` = 'EXPCURR'
   - `adjustment_factor_for_the_subplot` > 0
   - `adjustment_factor_for_the_macroplot` > 0

**SQL Queries:**

1. **Select basic information from the `condition` table:**

```sql
SELECT
  plot_sequence_number,
  state_code,
  inventory_year,
  condition_status_code_name
FROM
  `bigquery-public-data.usfs_fia.condition`
LIMIT 100;
```

2. **Filter conditions for 'Accessible forest land' and specific years:**

```sql
SELECT
  plot_sequence_number,
  state_code,
  inventory_year,
  condition_status_code_name
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
  AND inventory_year IN (2015, 2016, 2017)
LIMIT 100;
```

3. **Check distinct `prop_basis` values for accessible forest land:**

```sql
SELECT DISTINCT
  prop_basis
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
LIMIT 100;
```

4. **Join `condition` and `population` tables to get expansion factors:**

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
LIMIT 100;
```

5. **Filter for current evaluations ('EXPCURR') in `population_evaluation_type`:**

```sql
SELECT DISTINCT
  evaluation_type
FROM
  `bigquery-public-data.usfs_fia.population_evaluation_type`
WHERE
  evaluation_type = 'EXPCURR'
LIMIT 100;
```

6. **Join `population` with `population_evaluation_type` for evaluation types:**

```sql
SELECT
  p.plot_sequence_number,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.population` AS p
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
LIMIT 100;
```

7. **Combine tables to get all relevant data for the task:**

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.prop_basis,
  c.condprop_unadj,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
LIMIT 100;
```

8. **Calculate subplot sizes:**

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condprop_unadj * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.prop_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
LIMIT 100;
```

9. **Calculate macroplot sizes:**

```sql
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condprop_unadj * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.prop_basis = 'MACR'
  AND p.adjustment_factor_for_the_macroplot > 0
LIMIT 100;
```

10. **Compute average subplot size per state and year:**

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condprop_unadj * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.prop_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

11. **Compute average macroplot size per state and year:**

```sql
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condprop_unadj * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.prop_basis = 'MACR'
  AND p.adjustment_factor_for_the_macroplot > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
```

12. **Identify states with the largest average subplot size for each year:**

```sql
SELECT
  inventory_year,
  state_code,
  MAX(average_subplot_size) AS largest_average_subplot_size
FROM
  (
    SELECT
      c.state_code,
      c.inventory_year,
      AVG(c.condprop_unadj * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
    FROM
      `bigquery-public-data.usfs_fia.condition` AS c
    JOIN
      `bigquery-public-data.usfs_fia.population` AS p
    ON
      c.plot_sequence_number = p.plot_sequence_number
    WHERE
      c.prop_basis = 'SUBP'
      AND p.adjustment_factor_for_the_subplot > 0
      AND c.inventory_year IN (2015, 2016, 2017)
    GROUP BY
      c.state_code,
      c.inventory_year
  )
GROUP BY
  inventory_year
LIMIT 100;
```

13. **Identify states with the largest average macroplot size for each year:**

```sql
SELECT
  inventory_year,
  state_code,
  MAX(average_macroplot_size) AS largest_average_macroplot_size
FROM
  (
    SELECT
      c.state_code,
      c.inventory_year,
      AVG(c.condprop_unadj * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
    FROM
      `bigquery-public-data.usfs_fia.condition` AS c
    JOIN
      `bigquery-public-data.usfs_fia.population` AS p
    ON
      c.plot_sequence_number = p.plot_sequence_number
    WHERE
      c.prop_basis = 'MACR'
      AND p.adjustment_factor_for_the_macroplot > 0
      AND c.inventory_year IN (2015, 2016, 2017)
    GROUP BY
      c.state_code,
      c.inventory_year
  )
GROUP BY
  inventory_year
LIMIT 100;
```

14. **Obtain state names using `state_code` (joining with a reference table if available):**

```sql
SELECT
  c.state_code,
  c.state_code_name
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
GROUP BY
  c.state_code,
  c.state_code_name
LIMIT 100;
```

15. **Check the available years in the data:**

```sql
SELECT DISTINCT
  inventory_year
FROM
  `bigquery-public-data.usfs_fia.condition`
ORDER BY
  inventory_year
LIMIT 100;
```

These queries help in understanding the data and extracting the necessary information to perform the analysis required for the task.Query:
SELECT
  plot_sequence_number,
  state_code,
  inventory_year,
  condition_status_code_name
FROM
  `bigquery-public-data.usfs_fia.condition`
LIMIT 100;
Answer:
plot_sequence_number,state_code,inventory_year,condition_status_code_name
48205986010497,41,2011,Accessible forest land
490388558126144,41,2018,Accessible forest land
484818105489998,41,2018,Accessible forest land
44542184020004,41,2013,Accessible forest land
484818122489998,41,2018,Accessible forest land
30764910020004,41,2012,Accessible forest land
345934138489998,41,2016,Accessible forest land
490388006126144,41,2018,Accessible forest land
345934292489998,41,2016,Accessible forest land
273641571489998,41,2015,Accessible forest land
238861681489998,41,2014,Accessible forest land
238861623489998,41,2014,Accessible forest land
30763459020004,41,2012,Accessible forest land
273643192489998,41,2015,Accessible forest land
174763642020004,41,2013,Accessible forest land
238861512489998,41,2014,Accessible forest land
484818175489998,41,2018,Accessible forest land
273640076489998,41,2015,Accessible forest land
174763871020004,41,2013,Accessible forest land
490388507126144,41,2018,Accessible forest land
44542507020004,41,2013,Accessible forest land
216960279020004,41,2014,Accessible forest land
30763905020004,41,2012,Accessible forest land
48206628010497,41,2011,Accessible forest land
412220246489998,41,2017,Accessible forest land
484818496489998,41,2018,Accessible forest land
216960555020004,41,2014,Accessible forest land
48204757010497,41,2011,Accessible forest land
490388025126144,41,2018,Accessible forest land
216959176020004,41,2014,Accessible forest land
30763676020004,41,2012,Accessible forest land
216959465020004,41,2014,Accessible forest land
444202487489998,41,2017,Accessible forest land
490387903126144,41,2018,Accessible forest land
345935872489998,41,2016,Accessible forest land
44542371020004,41,2013,Accessible forest land
30852752020004,41,2012,Accessible forest land
Query:
SELECT
  plot_sequence_number,
  state_code,
  inventory_year,
  condition_status_code_name
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
  AND inventory_year IN (2015, 2016, 2017)
LIMIT 100;
Answer:
plot_sequence_number,state_code,inventory_year,condition_status_code_name
345934138489998,41,2016,Accessible forest land
345934292489998,41,2016,Accessible forest land
273641571489998,41,2015,Accessible forest land
273643192489998,41,2015,Accessible forest land
273640076489998,41,2015,Accessible forest land
412220246489998,41,2017,Accessible forest land
444202487489998,41,2017,Accessible forest land
345935872489998,41,2016,Accessible forest land
412222956489998,41,2017,Accessible forest land
290009080489998,41,2015,Accessible forest land
444202736489998,41,2017,Accessible forest land
444202495489998,41,2017,Accessible forest land
444202824489998,41,2017,Accessible forest land
444202730489998,41,2017,Accessible forest land
290008534489998,41,2015,Accessible forest land
412222002489998,41,2017,Accessible forest land
346864383489998,41,2016,Accessible forest land
290008631489998,41,2015,Accessible forest land
273641745489998,41,2015,Accessible forest land
444202540489998,41,2017,Accessible forest land
346864293489998,41,2016,Accessible forest land
346864390489998,41,2016,Accessible forest land
346864433489998,41,2016,Accessible forest land
345934330489998,41,2016,Accessible forest land
412222804489998,41,2017,Accessible forest land
290009066489998,41,2015,Accessible forest land
412221835489998,41,2017,Accessible forest land
345933965489998,41,2016,Accessible forest land
290008645489998,41,2015,Accessible forest land
444202490489998,41,2017,Accessible forest land
345934903489998,41,2016,Accessible forest land
345934139489998,41,2016,Accessible forest land
273640719489998,41,2015,Accessible forest land
444202479489998,41,2017,Accessible forest land
346864482489998,41,2016,Accessible forest land
290009075489998,41,2015,Accessible forest land
Query:
SELECT DISTINCT
  proportion_basis
FROM
  `bigquery-public-data.usfs_fia.condition`
WHERE
  condition_status_code_name = 'Accessible forest land'
LIMIT 100;
Answer:
proportion_basis
MACR
SUBP
""
Query:
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS state_name,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS avg_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND p.evaluation_type = 'EXPCURR'
  GROUP BY
    c.state_code,
    state_name,
    c.inventory_year
),
largest_subplot_per_year AS (
  SELECT
    inventory_year,
    'subplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    inventory_year,
    'macroplot' AS type_of_plot,
    state_name AS state,
    avg_size AS average_size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY avg_size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE rn = 1
)
SELECT
  type_of_plot,
  inventory_year AS year,
  state,
  average_size
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  type_of_plot,
  inventory_year AS year,
  state,
  average_size
FROM
  largest_macroplot_per_year
ORDER BY
  type_of_plot,
  year;
Answer:
type_of_plot,year,state,average_size
macroplot,2015,California,4937.295863300521
macroplot,2016,California,5128.199385365016
macroplot,2017,California,5043.937060736363
subplot,2015,Wyoming,7634.419129440119
subplot,2016,Alaska,15679.879103970106
subplot,2017,Wyoming,6284.7925181703895
Query:
SELECT DISTINCT
  evaluation_type
FROM
  `bigquery-public-data.usfs_fia.population_evaluation_type`
WHERE
  evaluation_type = 'EXPCURR'
LIMIT 100
Answer:
evaluation_type
EXPCURR
Query:
SELECT
  p.plot_sequence_number,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.population` AS p
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
LIMIT 100
Answer:
plot_sequence_number,evaluation_type
14521895020004,EXPALL
247058489010661,EXPALL
373996018489998,EXPALL
220866477010661,EXPALL
247058490010661,EXPALL
247058491010661,EXPALL
14521896020004,EXPALL
168243270020004,EXPALL
247058492010661,EXPALL
304201343489998,EXPALL
168243271020004,EXPALL
304201344489998,EXPALL
14521897020004,EXPALL
373996019489998,EXPALL
14522279020004,EXPALL
14522280020004,EXPALL
247059018010661,EXPALL
304201589489998,EXPALL
373996318489998,EXPALL
168243656020004,EXPALL
373996319489998,EXPALL
247059019010661,EXPALL
245363698489998,EXPALL
247059020010661,EXPALL
304201590489998,EXPALL
168243657020004,EXPALL
247059021010661,EXPALL
168243658020004,EXPALL
304201591489998,EXPALL
14522282020004,EXPALL
168243659020004,EXPALL
304201592489998,EXPALL
14522283020004,EXPALL
373996320489998,EXPALL
247059022010661,EXPALL
168243660020004,EXPALL
14522285020004,EXPALL
168243661020004,EXPALL
247059024010661,EXPALL
245363700489998,EXPALL
373996321489998,EXPALL
304202094489998,EXPALL
247059025010661,EXPALL
304201593489998,EXPALL
373996322489998,EXPALL
247059026010661,EXPALL
245363701489998,EXPALL
14522286020004,EXPALL
247059027010661,EXPALL
245363702489998,EXPALL
14522287020004,EXPALL
168243662020004,EXPALL
304201594489998,EXPALL
168242456020004,EXPALL
373995449489998,EXPALL
168242457020004,EXPALL
373995450489998,EXPALL
373995451489998,EXPALL
304200879489998,EXPALL
14521113020004,EXPALL
220865269010661,EXPALL
304200880489998,EXPALL
14521114020004,EXPALL
14521788020004,EXPALL
245363480489998,EXPALL
373995941489998,EXPALL
304201278489998,EXPALL
168243148020004,EXPALL
247058758010661,EXPALL
168243149020004,EXPALL
304201279489998,EXPALL
14521790020004,EXPALL
Query:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.proportion_basis,
  c.condition_proportion_unadjusted,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
LIMIT 100;
Answer:
plot_sequence_number,state_code,inventory_year,proportion_basis,condition_proportion_unadjusted,expansion_factor,adjustment_factor_for_the_subplot,adjustment_factor_for_the_macroplot,evaluation_type
299960809489998,20,2016,SUBP,0.5,6655.533333333334,1.0,0.0,EXPCURR
373994206489998,20,2017,SUBP,0.25,6184.669842946241,1.0,0.0,EXPCURR
299930065489998,20,2016,SUBP,0.25,4204.626980774184,1.0,0.0,EXPCURR
245794197489998,20,2015,SUBP,0.25,6996.420519083514,1.0,0.0,EXPCURR
245793587489998,20,2015,SUBP,0.8216469883918762,6996.420519083514,1.0,0.0,EXPCURR
373994764489998,20,2017,SUBP,0.25,8573.88076117834,1.0,0.0,EXPCURR
299930931489998,20,2016,SUBP,0.30753499269485474,8573.88076117834,1.0,0.0,EXPCURR
373994928489998,20,2017,SUBP,1.0,8573.88076117834,1.0,0.0,EXPCURR
299930744489998,20,2016,SUBP,0.5,5747.465564590641,1.0078731317480354,0.0,EXPCURR
373994557489998,20,2017,SUBP,0.75,5104.595656081034,1.0,0.0,EXPCURR
299930705489998,20,2016,SUBP,0.75,5104.595656081034,1.0,0.0,EXPCURR
373994981489998,20,2017,SUBP,0.46974000334739685,5104.595656081034,1.0,0.0,EXPCURR
373994714489998,20,2017,SUBP,1.0,5104.595656081034,1.0,0.0,EXPCURR
373994780489998,20,2017,SUBP,0.25,5104.595656081034,1.0,0.0,EXPCURR
168237028020004,20,2015,SUBP,0.25,5104.595656081034,1.0,0.0,EXPCURR
168237028020004,20,2015,SUBP,0.25,5104.595656081034,1.0,0.0,EXPCURR
373993755489998,20,2017,SUBP,0.25,6972.578967682296,1.0,0.0,EXPCURR
Query:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.proportion_basis,
  c.condition_proportion_unadjusted,
  p.expansion_factor,
  p.adjustment_factor_for_the_subplot,
  p.adjustment_factor_for_the_macroplot,
  pet.evaluation_type
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
JOIN
  `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
ON
  p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
WHERE
  c.condition_status_code_name = 'Accessible forest land'
  AND c.inventory_year IN (2015, 2016, 2017)
  AND pet.evaluation_type = 'EXPCURR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
  AND (
    (p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0)
    OR
    (p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0)
  )
LIMIT 100;
Answer:
plot_sequence_number,state_code,inventory_year,proportion_basis,condition_proportion_unadjusted,expansion_factor,adjustment_factor_for_the_subplot,adjustment_factor_for_the_macroplot,evaluation_type
282496873489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282496945489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282496950489998,45,2015,SUBP,0.8976430296897888,5820.623058587151,1.0,0.0,EXPCURR
282496951489998,45,2015,SUBP,0.6844850182533264,5820.623058587151,1.0,0.0,EXPCURR
282496952489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282496988489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497025489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497028489998,45,2015,SUBP,0.2502399981021881,5820.623058587151,1.0,0.0,EXPCURR
282497028489998,45,2015,SUBP,0.7497599720954895,5820.623058587151,1.0,0.0,EXPCURR
282497029489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497030489998,45,2015,SUBP,0.75,5820.623058587151,1.0,0.0,EXPCURR
282497030489998,45,2015,SUBP,0.25,5820.623058587151,1.0,0.0,EXPCURR
282497034489998,45,2015,SUBP,1.0,5820.623058587151,1.0,0.0,EXPCURR
282497074489998,45,2015,SUBP,0.6946899890899658,5820.623058587151,1.0,0.0,EXPCURR
282497074489998,45,2015,SUBP,0.3053100109100342,5820.623058587151,1.0,0.0,EXPCURR
282497101489998,45,2015,SUBP,0.035363998264074326,5820.623058587151,1.0,0.0,EXPCURR
Query:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
Answer:
plot_sequence_number,state_code,inventory_year,subplot_size
445255983489998,20,2018,6655.533333333334
373993986489998,20,2017,6655.533333333334
299960809489998,20,2016,3327.766666666667
299960809489998,20,2016,3327.766666666667
247051054010661,20,2012,6655.533333333334
373994218489998,20,2017,6655.533333333334
14516742020004,20,2013,6655.533333333334
168236852020004,20,2014,6655.533333333334
445256408489998,20,2018,6655.533333333334
14517400020004,20,2013,6655.533333333334
373994092489998,20,2017,6655.533333333334
14516748020004,20,2013,6655.533333333334
14517632020004,20,2013,6655.533333333334
14517286020004,20,2013,6655.533333333334
299930680489998,20,2016,6655.533333333334
14518298020004,20,2013,6655.533333333334
445255431489998,20,2018,5702.178947368421
373993882489998,20,2017,5702.178947368421
168235995020004,20,2015,5702.178947368421
299930192489998,20,2016,5702.178947368421
168235871020004,20,2015,5702.178947368421
445255302489998,20,2018,6184.669842946241
14517547020004,20,2013,6184.669842946241
445255280489998,20,2018,6184.669842946241
14517434020004,20,2013,6184.669842946241
168236563020004,20,2015,6184.669842946241
299960304489998,20,2016,6184.669842946241
14516747020004,20,2013,6184.669842946241
299930604489998,20,2016,6184.669842946241
168236802020004,20,2014,6184.669842946241
245794020489998,20,2015,6184.669842946241
14517653020004,20,2013,6184.669842946241
14517572020004,20,2013,6184.669842946241
247051853010661,20,2012,6184.669842946241
373994445489998,20,2017,6184.669842946241
247051278010661,20,2012,6184.669842946241
168235831020004,20,2015,6184.669842946241
299958196489998,20,2016,6184.669842946241
168236671020004,20,2015,6184.669842946241
445255886489998,20,2018,6184.669842946241
445255864489998,20,2018,6184.669842946241
373994335489998,20,2017,6184.669842946241
14517348020004,20,2013,6184.669842946241
Query:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot AS subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
LIMIT 100
Answer:
plot_sequence_number,state_code,inventory_year,subplot_size
145763468010478,37,2007,6024.668536545274
258880934010854,37,2012,1506.1671341363185
258880934010854,37,2012,4518.501402408956
258880954010854,37,2012,4288.961505886065
258880954010854,37,2012,1735.7070306592086
258880955010854,37,2012,6024.668536545274
258880960010854,37,2012,4518.501402408956
258880960010854,37,2012,1506.1671341363185
145805354010854,37,2009,2082.12550023842
145805354010854,37,2009,3942.543036306854
145805371010854,37,2009,1506.1671341363185
145805371010854,37,2009,4518.501402408956
196872730010854,37,2010,1580.8730317460017
196872730010854,37,2010,4443.795684348386
196872764010854,37,2010,6024.668536545274
196872812010854,37,2010,6024.668536545274
196872968010854,37,2010,4949.867789708044
196872968010854,37,2010,1074.8008366117865
196872972010854,37,2010,6024.668536545274
196872992010854,37,2010,1506.1671341363185
196872992010854,37,2010,2834.6065004799784
196872992010854,37,2010,1683.8949019289773
196873012010854,37,2010,6024.668536545274
196873046010854,37,2010,329.5493590020056
196873046010854,37,2010,5695.119065325072
196873144010854,37,2010,6024.668536545274
196873154010854,37,2010,1506.1671341363185
196873154010854,37,2010,4518.501402408956
196873158010854,37,2010,6024.668536545274
196873160010854,37,2010,6024.668536545274
196872822010854,37,2010,6024.668536545274
196872874010854,37,2010,26.508541417159915
196872874010854,37,2010,5998.159905353557
196872878010854,37,2010,853.0930519909139
196872878010854,37,2010,5171.575394779803
196872930010854,37,2010,4518.501402408956
196872930010854,37,2010,1506.1671341363185
54913272010478,37,2003,6024.668536545274
196872852010854,37,2010,4518.501402408956
196872852010854,37,2010,1506.1671341363185
145727001010478,37,2007,6024.668536545274
258880850010854,37,2012,6024.668536545274
54897629010478,37,2003,1506.1671341363185
Query:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
LIMIT 100;
Answer:
plot_sequence_number,state_code,inventory_year,macroplot_size
48205986010497,41,2011,5596.681639302727
48205986010497,41,2011,3773.4314730443148
48205986010497,41,2011,4209.310670916283
48205986010497,41,2011,4209.310670916283
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,5873.204570449887
48205986010497,41,2011,3773.4314730443148
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5344.9959613616475
48205986010497,41,2011,5007.262844632496
48205986010497,41,2011,3773.4314730443148
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,4136.075049015735
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4903.956957735296
48205986010497,41,2011,4618.169970922756
490388558126144,41,2018,5685.59366826637
490388558126144,41,2018,6173.457724221831
490388558126144,41,2018,6173.457724221831
490388558126144,41,2018,7142.939486340117
490388558126144,41,2018,4548.474934613096
490388558126144,41,2018,4921.10520356658
490388558126144,41,2018,4921.10520356658
490388558126144,41,2018,5518.124454091912
484818105489998,41,2018,1995.5381587997554
484818105489998,41,2018,2187.3182663925745
484818105489998,41,2018,2187.3182663925745
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2826.642931168049
484818105489998,41,2018,2648.0364487824927
484818105489998,41,2018,1995.5381587997554
484818105489998,41,2018,2187.3182663925745
Query:
SELECT
  c.plot_sequence_number,
  c.state_code,
  c.inventory_year,
  c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot AS macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND p.adjustment_factor_for_the_macroplot > 0
LIMIT 100
Answer:
plot_sequence_number,state_code,inventory_year,macroplot_size
48204106010497,53,2011,5914.940866181514
345936134489998,53,2016,5914.940866181514
484819510489998,53,2018,5914.940866181514
40220533010497,53,2010,5914.940866181514
30764978020004,53,2012,5914.940866181514
216959537020004,53,2014,5914.940866181514
216961766020004,53,2014,5914.940866181514
30764970020004,53,2012,5914.940866181514
29883249010497,53,2009,5914.940866181514
48204378010497,53,2011,5914.940866181514
44542454020004,53,2013,5914.940866181514
29883250010497,53,2009,5914.940866181514
48205723010497,53,2011,5914.940866181514
345936299489998,53,2016,5914.940866181514
484819505489998,53,2018,5914.940866181514
40220541010497,53,2010,5914.940866181514
345936357489998,53,2016,5914.940866181514
484819501489998,53,2018,5914.940866181514
30765124020004,53,2012,5914.940866181514
412220214489998,53,2017,5914.940866181514
273642825489998,53,2015,5914.940866181514
44542499020004,53,2013,5914.940866181514
412220837489998,53,2017,5914.940866181514
29883260010497,53,2009,5914.940866181514
216960193020004,53,2014,5914.940866181514
345935960489998,53,2016,5914.940866181514
216958544020004,53,2014,5914.940866181514
345935959489998,53,2016,5914.940866181514
484819517489998,53,2018,5914.940866181514
40220558010497,53,2010,5914.940866181514
29883310010497,53,2009,5914.940866181514
48205038010497,53,2011,5914.940866181514
44542909020004,53,2013,5914.940866181514
216961111020004,53,2014,5914.940866181514
48205051010497,53,2011,5914.940866181514
345934249489998,53,2016,5914.940866181514
484819519489998,53,2018,5914.940866181514
40220567010497,53,2010,5914.940866181514
30765123020004,53,2012,5914.940866181514
216961364020004,53,2014,5914.940866181514
345936133489998,53,2016,3640.9653626907325
345936133489998,53,2016,2273.975327211807
Query:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
Answer:
state_code,inventory_year,average_subplot_size
30,2006,7943.391358568785
30,2008,6469.471568458465
30,2003,10115.243291994315
40,2014,7017.153970594862
39,2008,6474.499880770435
39,2011,4905.32175343952
9,2009,6349.214863761256
4,2001,8170.910392472521
8,2011,5453.829146009249
4,2018,5830.088186428622
1,2001,4930.990136118922
1,2008,4561.201710450686
1,2011,4294.793410809591
17,2009,5725.863037669541
17,2012,6577.0289692716515
17,2016,7809.464274884738
19,2015,8362.953311314288
46,2008,6631.6690479946465
46,2005,5867.530637396028
39,2017,7159.083439142694
13,2019,4375.762835336739
55,2015,3452.8719311236205
55,2010,2393.291810552599
27,2019,4162.878374971447
56,2015,8364.660548403539
28,2015,4840.776836931437
28,1977,6090.376446918359
31,2018,9390.863722263224
42,2002,4292.2929031961385
42,2001,4380.917475223322
34,2010,6506.18192750155
35,2011,6069.140282081407
35,2013,6060.705646734254
35,2007,6116.164157830345
35,2014,5892.723586673248
38,2005,5880.773476199589
33,2011,4812.873740990954
38,2004,6172.790623752245
51,2003,5918.662465060452
51,2009,4665.231152094457
51,2010,4513.202228208749
51,2013,4931.513703641512
23,2015,6930.808811919165
23,2014,6911.198303423551
37,2016,4911.194556748863
54,2004,10994.055473928605
54,2005,7324.469101274839
54,2015,7137.298440026684
54,2018,7138.949717816594
17,2005,5984.4198667289365
26,2015,6363.368800854954
49,2004,6520.607985175386
25,2004,7035.900701891611
49,2009,5593.135481886226
42,2009,5040.076075283268
42,2005,6148.323223456211
30,2017,5565.724973517962
26,2004,2247.8165496071965
12,1980,3465.5708639991535
Query:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'SUBP'
  AND p.adjustment_factor_for_the_subplot > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100
Answer:
state_code,inventory_year,average_subplot_size
42,2015,6721.087313410698
46,2016,8418.940744527365
38,2019,9140.553646051336
38,2018,9180.514810059605
28,2006,4345.034951562033
56,2011,12397.816378926977
56,2014,9153.423617993172
28,2012,4640.196568113134
56,2017,7077.665428903343
30,2010,5870.639914344
30,2005,9239.85617406018
40,2017,6366.703617112738
39,2010,5050.083801624664
40,1986,6179.798756462872
40,2009,11856.492138009722
40,2011,7588.933030403471
39,2001,6500.799387407837
23,2012,5756.9186941099615
23,2002,4439.065037595704
47,2012,4779.244897483048
47,2009,4532.121541753609
49,2013,5642.561343143614
47,2008,4627.705160919828
4,2006,6813.352404625599
9,2012,5650.874245579673
8,2005,7903.699189014756
8,2017,5475.78228453313
4,2016,5790.800490815838
4,2019,5813.582934927203
26,2008,3331.210307694115
27,2010,2617.9392062381125
51,1992,3678.4670728607916
51,2018,4364.869227722128
27,2002,3101.8275824738494
27,2000,3265.8713659665486
27,2001,3116.1071919322403
5,2008,4822.8162534261155
33,2018,6746.117425788718
33,2009,6174.3695732350825
33,2005,6283.018182663901
31,2002,7153.016806981453
12,1987,3115.56980669924
13,2009,4374.936913584385
13,2017,4514.2277503716605
5,2000,4644.582250776662
42,2010,5025.608453336516
42,2007,5511.0025143628545
45,2013,4913.4810401613695
45,2002,4827.8041396990075
28,2018,4308.219385273849
1,2014,4946.449423467554
22,2014,5985.92527436983
1,2010,4508.562573007561
32,2014,5654.254594686532
32,2004,13364.135549536028
21,2007,5051.035776677624
21,2000,4427.341979823271
21,1988,12457.468457589091
37,2004,4692.387973100858
Query:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100;
Answer:
state_code,inventory_year,average_macroplot_size
41,2006,3227.228540672201
41,2011,3890.9909379920273
41,2018,3479.90422366112
6,2018,6064.985662006346
53,2009,3542.2820983218267
6,2002,5460.405807882156
6,2003,5310.658959314615
41,2015,3665.9620380065185
53,2012,4531.4762490408975
53,2013,4448.542515991391
53,2017,4466.519078541113
6,2012,6251.503818501157
6,2017,6292.137009624956
53,2004,3609.370853258373
41,2012,3642.4199940817275
41,2009,3213.9371366622427
41,2005,3154.585703041415
6,2015,6222.547604089212
6,2016,6347.06500953717
41,2001,3209.239243694589
53,2008,3638.944673186196
53,2005,3704.2471216204626
6,2005,5321.386891358993
41,2019,3353.4951513142187
41,2010,3176.9337431726135
53,2014,4581.113088382801
6,2011,6296.4716335819985
6,2010,5223.059974279793
41,2003,3224.943761174505
53,2019,4062.1609839810926
6,2014,6336.549770040787
41,2002,3139.7594314460257
53,2010,3683.7508257505306
41,2008,3148.675073667899
53,2003,3692.035680609592
6,2004,5420.880156922204
41,2013,3710.82286821735
41,2014,3654.085035047078
41,2017,3709.908107636844
41,2007,3208.8242422722865
53,2018,4417.367175633813
53,2016,4643.6902187334235
53,2011,3490.5374123146717
6,2013,6227.714193167395
6,2009,5352.711663228114
53,2006,3665.294898648104
53,2002,3602.8535816322815
6,2001,5364.952370622563
15,2010,4644.357050410681
41,2016,3724.8948543277115
41,2004,3161.5113047736672
53,2015,4688.547258710304
6,2019,5844.956815018198
53,2007,3614.667348106689
6,2008,5282.228303463622
6,2007,5354.15756639119
6,2006,5378.361773887664
Query:
SELECT
  c.state_code,
  c.inventory_year,
  AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS average_macroplot_size
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
JOIN
  `bigquery-public-data.usfs_fia.population` AS p
ON
  c.plot_sequence_number = p.plot_sequence_number
WHERE
  c.proportion_basis = 'MACR'
  AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
  AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
  AND p.adjustment_factor_for_the_macroplot IS NOT NULL AND p.adjustment_factor_for_the_macroplot > 0
GROUP BY
  c.state_code,
  c.inventory_year
LIMIT 100
Answer:
state_code,inventory_year,average_macroplot_size
53,2010,3683.7508257505297
53,2019,4062.1609839810894
41,2002,3139.7594314460393
6,2014,6336.549770040759
53,2014,4581.1130883827755
41,2003,3224.943761174501
41,2010,3176.9337431726062
41,2019,3353.4951513142055
6,2011,6296.471633582038
6,2010,5223.059974279801
41,2006,3227.2285406722062
53,2004,3609.3708532583737
53,2012,4531.476249040908
53,2013,4448.542515991425
53,2017,4466.519078541095
41,2015,3665.962038006524
6,2017,6292.137009625002
6,2012,6251.503818501144
53,2009,3542.2820983218276
41,2011,3890.990937992059
41,2018,3479.9042236610876
6,2018,6064.985662006346
6,2002,5460.405807882131
6,2003,5310.658959314618
53,2003,3692.0356806096006
41,2008,3148.6750736679105
6,2004,5420.880156922191
15,2010,4644.35705041068
53,2006,3665.294898648105
53,2002,3602.8535816322774
53,2011,3490.5374123146644
53,2016,4643.6902187334035
53,2018,4417.36717563383
41,2017,3709.9081076368066
41,2014,3654.085035047051
41,2013,3710.822868217342
41,2007,3208.824242272281
6,2013,6227.714193167389
6,2009,5352.711663228117
6,2001,5364.952370622567
53,2008,3638.94467318619
53,2005,3704.2471216204567
41,2012,3642.419994081733
41,2001,3209.239243694587
41,2009,3213.937136662234
41,2005,3154.5857030413963
6,2016,6347.065009537122
6,2015,6222.547604089239
6,2005,5321.386891358982
53,2007,3614.667348106686
53,2015,4688.5472587102995
41,2016,3724.8948543276892
41,2004,3161.511304773667
6,2019,5844.956815018188
6,2008,5282.22830346361
6,2007,5354.157566391204
6,2006,5378.36177388767
Query:
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.inventory_year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS average_subplot_size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_proportion_unadjusted IS NOT NULL AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor IS NOT NULL AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_subplot IS NOT NULL AND p.adjustment_factor_for_the_subplot > 0
    AND c.inventory_year IN (2015, 2016, 2017)
  GROUP BY
    c.state_code,
    c.inventory_year
)
SELECT
  inventory_year,
  state_code,
  average_subplot_size AS largest_average_subplot_size
FROM (
  SELECT
    *,
    ROW_NUMBER() OVER (PARTITION BY inventory_year ORDER BY average_subplot_size DESC) AS rn
  FROM
    average_subplot_sizes
)
WHERE rn = 1
Answer:
inventory_year,state_code,largest_average_subplot_size
2016,2,14076.94780398066
2017,38,8847.767780072261
2015,48,12334.373044626558
Query:
SELECT
  c.state_code,
  c.state_code_name
FROM
  `bigquery-public-data.usfs_fia.condition` AS c
GROUP BY
  c.state_code,
  c.state_code_name
LIMIT 100
Answer:
state_code,state_code_name
41,Oregon
27,Minnesota
29,Missouri
55,Wisconsin
26,Michigan
13,Georgia
60,American Samoa
12,Florida
23,Maine
48,Texas
53,Washington
45,South Carolina
56,Wyoming
49,Utah
46,South Dakota
28,Mississippi
37,North Carolina
32,Nevada
6,California
42,Pennsylvania
1,Alabama
51,Virginia
21,Kentucky
35,New Mexico
5,Arkansas
47,Tennessee
30,Montana
22,Louisiana
4,Arizona
16,Idaho
18,Indiana
19,Iowa
17,Illinois
8,Colorado
39,Ohio
36,New York
38,North Dakota
72,Puerto Rico
31,Nebraska
20,Kansas
2,Alaska
40,Oklahoma
15,Hawaii
10,Delaware
25,Massachusetts
34,New Jersey
9,Connecticut
68,Marshall Islands
70,Palau
24,Maryland
33,New Hampshire
54,West Virginia
50,Vermont
69,Northern Mariana Islands
44,Rhode Island
64,Federated States of Micronesia
66,Guam
78,Virgin Islands of the U.S.
Query:
SELECT DISTINCT
  inventory_year
FROM
  `bigquery-public-data.usfs_fia.condition`
ORDER BY
  inventory_year
LIMIT 100
Answer:
inventory_year
1968
1970
1972
1974
1975
1976
1977
1978
1980
1981
1982
1983
1984
1985
1986
1987
1988
1989
1990
1991
1992
1993
1994
1995
1996
1997
1998
1999
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
9999
End Exploring Related Columns
Task: Which states had the largest average subplot size and the largest average macroplot size respectively for each of the years 2015, 2016, and 2017, based on accessible forest land and current evaluations (EXPCURR)? Display the type of plot (subplot or macroplot), the year, the state, and the corresponding average size for each type and each specific year.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: To determine the states with the largest average subplot size and the largest average macroplot size for each of the years 2015, 2016, and 2017, based on accessible forest land and current evaluations (EXPCURR), we focus on plots where the proportion basis is `'SUBP'` for subplots and `'MACR'` for macroplots.

Here's the requested information in CSV format:

```csv
Type_of_Plot,Year,State,Average_Size
subplot,2015,state_name:str,average_size:float
subplot,2016,state_name:str,average_size:float
subplot,2017,state_name:str,average_size:float
macroplot,2015,state_name:str,average_size:float
macroplot,2016,state_name:str,average_size:float
macroplot,2017,state_name:str,average_size:float
(Attention: answer in six rows)
```

Please replace `state_name:str` with the appropriate state names and `average_size:float` with the corresponding average sizes calculated from the data.

**Explanation:**

- **Type_of_Plot**: Indicates whether the plot type is a subplot or a macroplot.
- **Year**: The year of the evaluation (2015, 2016, or 2017).
- **State**: The state that had the largest average subplot or macroplot size for the specified year.
- **Average_Size**: The average size of the subplot or macroplot for that state and year..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'usfs_fia': ['condition', 'plot', 'plot_tree', 'population', 'population_estimation_unit', 'population_evaluation', 'population_evaluation_group', 'population_evaluation_type', 'population_stratum', 'population_stratum_assign', 'tree']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 08:49:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:49:21 - root - INFO - ```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS State,
    c.inventory_year AS Year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS Average_Size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  JOIN
    `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
  ON
    p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND pet.evaluation_type = 'EXPCURR'
    AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_subplot > 0
  GROUP BY
    c.state_code,
    State,
    Year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS State,
    c.inventory_year AS Year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS Average_Size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  JOIN
    `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
  ON
    p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND pet.evaluation_type = 'EXPCURR'
    AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_macroplot > 0
  GROUP BY
    c.state_code,
    State,
    Year
),
largest_subplot_per_year AS (
  SELECT
    'subplot' AS Type_of_Plot,
    Year,
    State,
    Average_Size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY Year ORDER BY Average_Size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE
    rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    'macroplot' AS Type_of_Plot,
    Year,
    State,
    Average_Size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY Year ORDER BY Average_Size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE
    rn = 1
)
SELECT
  Type_of_Plot,
  Year,
  State,
  Average_Size
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  Type_of_Plot,
  Year,
  State,
  Average_Size
FROM
  largest_macroplot_per_year
ORDER BY
  Type_of_Plot,
  Year;
```

This query determines the states with the largest average subplot size and the largest average macroplot size for each of the years 2015, 2016, and 2017, based on accessible forest land and current evaluations (EXPCURR). It displays the type of plot, the year, the state, and the corresponding average size for each type and each specific year.

**Explanation:**

- **average_subplot_sizes**: Calculates the average subplot size per state and year.
- **average_macroplot_sizes**: Calculates the average macroplot size per state and year.
- **largest_subplot_per_year**: Selects the state with the largest average subplot size for each year.
- **largest_macroplot_per_year**: Selects the state with the largest average macroplot size for each year.
- The final `SELECT` combines the results and orders them by plot type and year.

This query ensures that only plots with the specified conditions are considered, and it accurately computes the required averages and selects the top states accordingly.
2025-01-27 08:49:24 - root - INFO - itercount: 1
2025-01-27 08:49:24 - root - INFO - 0
2025-01-27 08:49:24 - root - INFO - results: 
Type_of_Plot,Year,State,Average_Size
macroplot,2015,California,4937.295863300529
macroplot,2016,California,5128.199385365012
macroplot,2017,California,5043.937060736359
subplot,2015,Wyoming,7634.419129440119
subplot,2016,Alaska,15679.879103970106
subplot,2017,Wyoming,6284.7925181703895


2025-01-27 08:49:24 - root - INFO - Please check the answer again by reviewing Which states had the largest average subplot size and the largest average macroplot size respectively for each of the years 2015, 2016, and 2017, based on accessible forest land and current evaluations (EXPCURR)? Display the type of plot (subplot or macroplot), the year, the state, and the corresponding average size for each type and each specific year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To determine the states with the largest average subplot size and the largest average macroplot size for each of the years 2015, 2016, and 2017, based on accessible forest land and current evaluations (EXPCURR), we focus on plots where the proportion basis is `'SUBP'` for subplots and `'MACR'` for macroplots.

Here's the requested information in CSV format:

```csv
Type_of_Plot,Year,State,Average_Size
subplot,2015,state_name:str,average_size:float
subplot,2016,state_name:str,average_size:float
subplot,2017,state_name:str,average_size:float
macroplot,2015,state_name:str,average_size:float
macroplot,2016,state_name:str,average_size:float
macroplot,2017,state_name:str,average_size:float
(Attention: answer in six rows)
```

Please replace `state_name:str` with the appropriate state names and `average_size:float` with the corresponding average sizes calculated from the data.

**Explanation:**

- **Type_of_Plot**: Indicates whether the plot type is a subplot or a macroplot.
- **Year**: The year of the evaluation (2015, 2016, or 2017).
- **State**: The state that had the largest average subplot or macroplot size for the specified year.
- **Average_Size**: The average size of the subplot or macroplot for that state and year. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Type_of_Plot,Year,State,Average_Size
macroplot,2015,California,4937.295863300529
macroplot,2016,California,5128.199385365012
macroplot,2017,California,5043.937060736359
subplot,2015,Wyoming,7634.419129440119
subplot,2016,Alaska,15679.879103970106
subplot,2017,Wyoming,6284.7925181703895
Current sql:
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS State,
    c.inventory_year AS Year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS Average_Size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  JOIN
    `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
  ON
    p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND pet.evaluation_type = 'EXPCURR'
    AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_subplot > 0
  GROUP BY
    c.state_code,
    State,
    Year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS State,
    c.inventory_year AS Year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS Average_Size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  JOIN
    `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
  ON
    p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND pet.evaluation_type = 'EXPCURR'
    AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_macroplot > 0
  GROUP BY
    c.state_code,
    State,
    Year
),
largest_subplot_per_year AS (
  SELECT
    'subplot' AS Type_of_Plot,
    Year,
    State,
    Average_Size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY Year ORDER BY Average_Size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE
    rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    'macroplot' AS Type_of_Plot,
    Year,
    State,
    Average_Size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY Year ORDER BY Average_Size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE
    rn = 1
)
SELECT
  Type_of_Plot,
  Year,
  State,
  Average_Size
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  Type_of_Plot,
  Year,
  State,
  Average_Size
FROM
  largest_macroplot_per_year
ORDER BY
  Type_of_Plot,
  Year;
2025-01-27 08:50:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 08:50:15 - root - INFO - ```sql
WITH average_subplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS State,
    c.inventory_year AS Year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_subplot) AS Average_Size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  JOIN
    `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
  ON
    p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
  WHERE
    c.proportion_basis = 'SUBP'
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND pet.evaluation_type = 'EXPCURR'
    AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_subplot > 0
  GROUP BY
    c.state_code,
    State,
    Year
),
average_macroplot_sizes AS (
  SELECT
    c.state_code,
    c.state_code_name AS State,
    c.inventory_year AS Year,
    AVG(c.condition_proportion_unadjusted * p.expansion_factor * p.adjustment_factor_for_the_macroplot) AS Average_Size
  FROM
    `bigquery-public-data.usfs_fia.condition` AS c
  JOIN
    `bigquery-public-data.usfs_fia.population` AS p
  ON
    c.plot_sequence_number = p.plot_sequence_number
  JOIN
    `bigquery-public-data.usfs_fia.population_evaluation_type` AS pet
  ON
    p.evaluation_type_sequence_number = pet.evaluation_type_sequence_number
  WHERE
    c.proportion_basis = 'MACR'
    AND c.condition_status_code_name = 'Accessible forest land'
    AND c.inventory_year IN (2015, 2016, 2017)
    AND pet.evaluation_type = 'EXPCURR'
    AND c.condition_proportion_unadjusted > 0
    AND p.expansion_factor > 0
    AND p.adjustment_factor_for_the_macroplot > 0
  GROUP BY
    c.state_code,
    State,
    Year
),
largest_subplot_per_year AS (
  SELECT
    'subplot' AS Type_of_Plot,
    Year,
    State,
    Average_Size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY Year ORDER BY Average_Size DESC) AS rn
    FROM
      average_subplot_sizes
  )
  WHERE
    rn = 1
),
largest_macroplot_per_year AS (
  SELECT
    'macroplot' AS Type_of_Plot,
    Year,
    State,
    Average_Size
  FROM (
    SELECT
      *,
      ROW_NUMBER() OVER (PARTITION BY Year ORDER BY Average_Size DESC) AS rn
    FROM
      average_macroplot_sizes
  )
  WHERE
    rn = 1
)
SELECT
  Type_of_Plot,
  Year,
  State,
  Average_Size
FROM
  largest_subplot_per_year
UNION ALL
SELECT
  Type_of_Plot,
  Year,
  State,
  Average_Size
FROM
  largest_macroplot_per_year
ORDER BY
  Type_of_Plot,
  Year;
```
2025-01-27 08:50:16 - root - INFO - itercount: 2
2025-01-27 08:50:16 - root - INFO - 0
2025-01-27 08:50:16 - root - INFO - Total iteration counts: 2
