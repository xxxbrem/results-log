2025-01-26 06:45:14 - openai._base_client - INFO - Retrying request to /chat/completions in 0.390091 seconds
2025-01-26 06:46:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:46:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:46:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:46:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:46:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 55
2025-01-26 06:46:50 - snowflake.connector.connection - INFO - closed
2025-01-26 06:46:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:46:51 - root - INFO - SQL:
SELECT "fips", "state"
   FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS
   LIMIT 100;
Results:
fips,state
1,Alabama
2,Alaska
4,Arizona
5,Arkansas
6,California
8,Colorado
9,Connecticut
10,Delaware
12,Florida
13,Georgia
15,Hawaii
16,Idaho
17,Illinois
18,Indiana
19,Iowa
20,Kansas
21,Kentucky
22,Louisiana
23,Maine
24,Maryland
25,Massachusetts
26,Michigan
27,Minnesota
28,Mississippi
29,Missouri
30,Montana
31,Nebraska
32,Nevada
33,New Hampshire
34,New Jersey
35,New Mexico
36,New York
37,North Carolina
38,North Dakota
39,Ohio
40,Oklahoma
41,Oregon
42,Pennsylvania
44,Rhode Island
45,South Carolina
46,South Dakota
47,Tennessee
48,Texas
49,Utah
50,Vermont
51,Virginia
53,Washington
54,West Virginia
55,Wisconsin
56,Wyoming
60,American Samoa
66,Guam
69,Northern Mariana Islands
72,Puerto Rico
78,Virgin Islands

2025-01-26 06:46:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:46:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:46:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:46:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:46:52 - snowflake.connector.connection - INFO - closed
2025-01-26 06:46:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:46:53 - root - INFO - SQL:
SELECT DISTINCT "geo_id"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   LIMIT 100;
Results:
geo_id
16
48
49
12
37
45
13
04
32
11
36
44
09
19
17
39
26
31
55
20
06
29
38
30
22
51
08
28
02
42
18
46
27
21
53
05
25
34
50
54
23
56
47
24
33
40
15
01
35
72
10
41

2025-01-26 06:46:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:46:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:46:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:46:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:46:54 - snowflake.connector.connection - INFO - closed
2025-01-26 06:46:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:46:54 - root - INFO - SQL:
SELECT "geo_id", "employed_manufacturing"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   WHERE "employed_manufacturing" IS NOT NULL
   LIMIT 100;
Results:
geo_id,employed_manufacturing
16,70553.0
48,1105985.0
49,146542.0
12,445101.0
37,545160.0
45,286743.0
13,468172.0
04,204240.0
32,52723.0
11,4356.0
36,600408.0
44,56613.0
25,313474.0
42,729883.0
09,191286.0
34,361404.0
19,239613.0
17,765301.0
39,831030.0
26,776736.0
31,105135.0
18,569228.0
55,532873.0
20,176444.0
50,35282.0
54,60727.0
23,60551.0
06,1687092.0
46,42605.0
29,319724.0
27,382798.0
38,26531.0
30,21934.0
24,140892.0
33,89019.0
40,169899.0
41,204094.0
56,11694.0
72,96303.0
22,160133.0
21,264406.0
15,19767.0
53,340891.0
51,289554.0
01,281016.0
35,41183.0
08,182453.0
28,159965.0
47,377952.0
10,39404.0
02,12098.0
05,170593.0

2025-01-26 06:46:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:46:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:46:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:46:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:46:55 - snowflake.connector.connection - INFO - closed
2025-01-26 06:46:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:46:56 - root - INFO - SQL:
SELECT "geo_id", "employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   WHERE "employed_wholesale_trade" IS NOT NULL
   LIMIT 100;
Results:
geo_id,employed_wholesale_trade
16,18663.0
48,363612.0
49,34689.0
12,245029.0
37,118226.0
45,56022.0
13,125340.0
04,67492.0
32,26001.0
11,1799.0
36,229075.0
44,13216.0
25,81114.0
42,168873.0
09,44581.0
34,147081.0
19,44824.0
17,184522.0
39,147353.0
26,106578.0
31,26947.0
18,79429.0
55,76802.0
20,39010.0
50,7110.0
54,16321.0
23,14886.0
06,527004.0
46,12771.0
29,75407.0
27,81498.0
38,13273.0
30,11008.0
24,58552.0
33,21073.0
40,45720.0
41,51908.0
56,6033.0
72,29562.0
22,52115.0
21,47783.0
15,14845.0
53,95060.0
51,76555.0
01,50843.0
35,19106.0
08,68120.0
28,31000.0
47,78856.0
10,8176.0
02,6634.0
05,30692.0

2025-01-26 06:46:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:46:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:46:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:47:02 - snowflake.connector.connection - INFO - closed
2025-01-26 06:47:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:48:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:48:09 - root - INFO - **Explanation:**

The error you're encountering:

```
Numeric value '' is not recognized
```

occurs because of the way the join condition is set up in your SQL query. Specifically, the `SUBSTRING` function is causing an issue.

In your query:

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = SUBSTRING(s."geo_id", 10, 2)
LIMIT 100;
```

You're attempting to extract characters from positions 10 and 11 of `s."geo_id"` using `SUBSTRING(s."geo_id", 10, 2)`. However, based on the data you've provided, `s."geo_id"` contains two-digit strings representing state FIPS codes (e.g., '16', '48', '49'). Since `s."geo_id"` does not have at least 10 characters, `SUBSTRING(s."geo_id", 10, 2)` returns an empty string (`''`). This empty string cannot be compared to the numeric `sf."fips"`, leading to the error.

**Solution:**

To fix this issue, you should adjust the join condition to directly compare the state FIPS codes. Here's how you can modify your query:

**Option 1: Convert `s."geo_id"` to a number**

Since `s."geo_id"` contains numeric strings, you can cast it to a number to match the data type of `sf."fips"`.

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TO_NUMBER(s."geo_id")
LIMIT 100;
```

**Option 2: Convert `sf."fips"` to a string**

Alternatively, you can cast `sf."fips"` to a string and pad it with leading zeros to ensure it matches the format of `s."geo_id"`.

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON LPAD(sf."fips"::VARCHAR, 2, '0') = s."geo_id"
LIMIT 100;
```

This padding ensures that single-digit state codes (e.g., `1`) are formatted as two-digit strings with a leading zero (e.g., `'01'`), matching the `s."geo_id"` values.

**Recommendation:**

Using **Option 1** is generally simpler and more efficient because it avoids string manipulation:

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TO_NUMBER(s."geo_id")
LIMIT 100;
```

**Next Steps:**

1. **Run the corrected query** to verify that it works without errors and returns the expected results.

2. **Calculate the number of vulnerable workers**:

   - **Manufacturing sector**: Multiply `"employed_manufacturing"` by **0.41**.
   - **Wholesale trade sector**: Multiply `"employed_wholesale_trade"` by **0.38**.

3. **Aggregate data over the years 2015-2018**:

   - Pull data from the corresponding tables `STATE_2015_5YR` to `STATE_2018_5YR`.
   - Calculate the average or total employed in each sector for each state over these years.

4. **List states in order** of the total number of vulnerable workers:

   - Sum the vulnerable workers from both sectors for each state.
   - Order the results in descending order based on the total number of vulnerable workers.

**Example of Calculating Vulnerable Workers:**

```sql
SELECT
  sf."state",
  SUM(s."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing",
  SUM(s."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale",
  SUM(s."employed_manufacturing" * 0.41 + s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_workers"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN (
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
) s
  ON sf."fips" = TO_NUMBER(s."geo_id")
GROUP BY sf."state"
ORDER BY "total_vulnerable_workers" DESC;
```

**Note:**

- Ensure that all employment data is valid (i.e., not `NULL`) before performing calculations.
- Adjust the query as needed based on the actual data and column names in your tables.

**Conclusion:**

By correcting the join condition in your query, you should be able to retrieve the state names along with the employment data, and proceed to compute the number of vulnerable workers as required.
2025-01-26 06:48:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:48:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:48:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:48:16 - snowflake.connector.connection - INFO - closed
2025-01-26 06:48:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:49:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:49:25 - root - INFO - **Explanation of the Error:**

The error you're encountering:

```
100038 (22018): 01b9f6d8-0004-8343-0001-11c300fac03e: Numeric value '' is not recognized
```

occurs because of the `SUBSTRING` function in your SQL query. Specifically, the expression `SUBSTRING(s."geo_id", 10, 2)` is causing the issue.

**Why is this Happening?**

- The `SUBSTRING` function extracts a substring from a string starting at a specified position for a specified length.
- In your case, `SUBSTRING(s."geo_id", 10, 2)` tries to extract two characters starting from the 10th character of `s."geo_id"`.
- However, based on the data you've provided, the `"geo_id"` values in `STATE_2015_5YR` are two-digit strings representing state FIPS codes (e.g., `'16'`, `'48'`, `'49'`, `'04'`).

Given that `s."geo_id"` is only 2 characters long, attempting to extract characters starting from position 10 results in an empty string (`''`).

When you try to compare or cast this empty string to a numeric value (as in the `ON sf."fips" = SUBSTRING(s."geo_id", 10, 2)` clause), the database throws an error because `''` cannot be converted to a number.

**How to Fix the Error:**

Since the `"geo_id"` in `STATE_2015_5YR` is already the state FIPS code as a string (possibly with leading zeros), and `"fips"` in `STATE_FIPS` is a numeric value, you need to align the formats to join the tables correctly.

**Solution:**

**Option 1: Convert `"geo_id"` to a Number**

Use `TO_NUMBER(s."geo_id")` to convert the string `"geo_id"` to a numeric value that can be compared with `"fips"`.

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TO_NUMBER(s."geo_id")
LIMIT 100;
```

**Option 2: Pad `"fips"` with Leading Zeros and Compare as Strings**

If `"geo_id"` has leading zeros (e.g., `'01'` for Alabama), you can pad `"fips"` with leading zeros to make it a two-character string and then compare.

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON LPAD(sf."fips"::VARCHAR, 2, '0') = s."geo_id"
LIMIT 100;
```

**Recommended Approach:**

Using **Option 1** is straightforward and avoids string manipulation:

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TO_NUMBER(s."geo_id")
LIMIT 100;
```

**Handling Potential Conversion Errors:**

If there are any invalid or empty strings in `s."geo_id"` that cannot be converted to a number, the query may still fail. To prevent this, you can use `TRY_TO_NUMBER`, which returns `NULL` instead of throwing an error when conversion fails. Then, filter out any `NULL` results.

```sql
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TRY_TO_NUMBER(s."geo_id")
WHERE TRY_TO_NUMBER(s."geo_id") IS NOT NULL
LIMIT 100;
```

**Next Steps:**

1. **Run the Corrected Query:**

   Execute the corrected query to ensure it runs without errors and returns the expected results.

2. **Verify the Data:**

   Check the first few rows to make sure that the state names and employment data align correctly.

3. **Proceed with Calculations:**

   Now that you can successfully join the tables, you can proceed to calculate the number of vulnerable workers.

**Calculating Vulnerable Workers:**

Using the data from 2015 to 2018, you can calculate the total number of vulnerable workers per state.

**Sample Query to Calculate Vulnerable Workers:**

```sql
SELECT
  sf."state",
  SUM(s."employed_manufacturing" * 0.41) AS "vulnerable_manufacturing",
  SUM(s."employed_wholesale_trade" * 0.38) AS "vulnerable_wholesale",
  SUM(s."employed_manufacturing" * 0.41 + s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_workers"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN (
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
) s
  ON sf."fips" = TRY_TO_NUMBER(s."geo_id")
WHERE TRY_TO_NUMBER(s."geo_id") IS NOT NULL
GROUP BY sf."state"
ORDER BY "total_vulnerable_workers" DESC;
```

**Explanation:**

- **JOIN Condition:** Corrected to compare `sf."fips"` with `TRY_TO_NUMBER(s."geo_id")`.
- **Aggregation:** Sum the vulnerable workers over the years 2015 to 2018.
- **Calculation:** Multiply the number of employed individuals by the vulnerability percentages (41% for manufacturing and 38% for wholesale trade).
- **Ordering:** The results are ordered in descending order of total vulnerable workers.

**Final Output Format:**

You can present the results in a table as per your original task:

```csv
State,Vulnerable_Workers_in_Wholesale_Trade,Vulnerable_Workers_in_Manufacturing,Total_Vulnerable_Workers
State1,vulnerable_wholesale1:int,vulnerable_manufacturing1:int,total_vulnerable1:int
State2,vulnerable_wholesale2:int,vulnerable_manufacturing2:int,total_vulnerable2:int
...
```

**Conclusion:**

By adjusting the join condition and ensuring that data types align, you can successfully run your query without errors and calculate the required statistics.

---

**Remember:**

- Always verify the lengths and formats of the data you're working with.
- Ensure that when you use functions like `SUBSTRING`, the positions and lengths are appropriate for your data.
- Use functions like `TRY_TO_NUMBER` to safely handle potential conversion errors.
2025-01-26 06:49:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:49:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:49:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:49:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:49:26 - snowflake.connector.connection - INFO - closed
2025-01-26 06:49:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:51:08 - root - INFO - SQL:
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TO_NUMBER(s."geo_id")
LIMIT 100;
Results:
state,employed_manufacturing,employed_wholesale_trade
Alabama,281016.0,50843.0
Alaska,12098.0,6634.0
Arizona,204240.0,67492.0
Arkansas,170593.0,30692.0
California,1687092.0,527004.0
Colorado,182453.0,68120.0
Connecticut,191286.0,44581.0
Delaware,39404.0,8176.0
Florida,445101.0,245029.0
Georgia,468172.0,125340.0
Hawaii,19767.0,14845.0
Idaho,70553.0,18663.0
Illinois,765301.0,184522.0
Indiana,569228.0,79429.0
Iowa,239613.0,44824.0
Kansas,176444.0,39010.0
Kentucky,264406.0,47783.0
Louisiana,160133.0,52115.0
Maine,60551.0,14886.0
Maryland,140892.0,58552.0
Massachusetts,313474.0,81114.0
Michigan,776736.0,106578.0
Minnesota,382798.0,81498.0
Mississippi,159965.0,31000.0
Missouri,319724.0,75407.0
Montana,21934.0,11008.0
Nebraska,105135.0,26947.0
Nevada,52723.0,26001.0
New Hampshire,89019.0,21073.0
New Jersey,361404.0,147081.0
New Mexico,41183.0,19106.0
New York,600408.0,229075.0
North Carolina,545160.0,118226.0
North Dakota,26531.0,13273.0
Ohio,831030.0,147353.0
Oklahoma,169899.0,45720.0
Oregon,204094.0,51908.0
Pennsylvania,729883.0,168873.0
Rhode Island,56613.0,13216.0
South Carolina,286743.0,56022.0
South Dakota,42605.0,12771.0
Tennessee,377952.0,78856.0
Texas,1105985.0,363612.0
Utah,146542.0,34689.0
Vermont,35282.0,7110.0
Virginia,289554.0,76555.0
Washington,340891.0,95060.0
West Virginia,60727.0,16321.0
Wisconsin,532873.0,76802.0
Wyoming,11694.0,6033.0
Puerto Rico,96303.0,29562.0

2025-01-26 06:51:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:51:10 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:10 - root - INFO - SQL:
SELECT s."geo_id", s."employed_manufacturing",
          s."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
   WHERE s."employed_manufacturing" IS NOT NULL
   LIMIT 100;
Results:
geo_id,employed_manufacturing,vulnerable_manufacturing
16,70553.0,28926.73
48,1105985.0,453453.85
49,146542.0,60082.219999999994
12,445101.0,182491.41
37,545160.0,223515.59999999998
45,286743.0,117564.62999999999
13,468172.0,191950.52
04,204240.0,83738.4
32,52723.0,21616.43
11,4356.0,1785.9599999999998
36,600408.0,246167.28
44,56613.0,23211.329999999998
25,313474.0,128524.34
42,729883.0,299252.02999999997
09,191286.0,78427.26
34,361404.0,148175.63999999998
19,239613.0,98241.32999999999
17,765301.0,313773.41
39,831030.0,340722.3
26,776736.0,318461.76
31,105135.0,43105.35
18,569228.0,233383.47999999998
55,532873.0,218477.93
20,176444.0,72342.04
50,35282.0,14465.619999999999
54,60727.0,24898.07
23,60551.0,24825.91
06,1687092.0,691707.72
46,42605.0,17468.05
29,319724.0,131086.84
27,382798.0,156947.18
38,26531.0,10877.71
30,21934.0,8992.939999999999
24,140892.0,57765.719999999994
33,89019.0,36497.79
40,169899.0,69658.59
41,204094.0,83678.54
56,11694.0,4794.54
72,96303.0,39484.229999999996
22,160133.0,65654.53
21,264406.0,108406.45999999999
15,19767.0,8104.469999999999
53,340891.0,139765.31
51,289554.0,118717.14
01,281016.0,115216.56
35,41183.0,16885.03
08,182453.0,74805.73
28,159965.0,65585.65
47,377952.0,154960.31999999998
10,39404.0,16155.64
02,12098.0,4960.179999999999
05,170593.0,69943.12999999999

2025-01-26 06:51:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:51:12 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:12 - root - INFO - SQL:
SELECT s."geo_id", s."employed_wholesale_trade",
          s."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
   WHERE s."employed_wholesale_trade" IS NOT NULL
   LIMIT 100;
Results:
geo_id,employed_wholesale_trade,vulnerable_wholesale
16,18663.0,7091.9400000000005
48,363612.0,138172.56
49,34689.0,13181.82
12,245029.0,93111.02
37,118226.0,44925.88
45,56022.0,21288.36
13,125340.0,47629.2
04,67492.0,25646.96
32,26001.0,9880.380000000001
11,1799.0,683.62
36,229075.0,87048.5
44,13216.0,5022.08
25,81114.0,30823.32
42,168873.0,64171.74
09,44581.0,16940.78
34,147081.0,55890.78
19,44824.0,17033.12
17,184522.0,70118.36
39,147353.0,55994.14
26,106578.0,40499.64
31,26947.0,10239.86
18,79429.0,30183.02
55,76802.0,29184.760000000002
20,39010.0,14823.8
50,7110.0,2701.8
54,16321.0,6201.9800000000005
23,14886.0,5656.68
06,527004.0,200261.52
46,12771.0,4852.9800000000005
29,75407.0,28654.66
27,81498.0,30969.24
38,13273.0,5043.74
30,11008.0,4183.04
24,58552.0,22249.760000000002
33,21073.0,8007.74
40,45720.0,17373.6
41,51908.0,19725.04
56,6033.0,2292.54
72,29562.0,11233.56
22,52115.0,19803.7
21,47783.0,18157.54
15,14845.0,5641.1
53,95060.0,36122.8
51,76555.0,29090.9
01,50843.0,19320.34
35,19106.0,7260.28
08,68120.0,25885.6
28,31000.0,11780.0
47,78856.0,29965.28
10,8176.0,3106.88
02,6634.0,2520.92
05,30692.0,11662.960000000001

2025-01-26 06:51:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:51:13 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:14 - root - INFO - SQL:
SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
   LIMIT 100;
Results:
geo_id,employed_manufacturing,employed_wholesale_trade
02,12882.0,6623.0
16,71648.0,19006.0
12,451950.0,244721.0
48,1105928.0,371317.0
45,293796.0,56511.0
49,148823.0,35772.0
37,552844.0,117781.0
13,480335.0,128010.0
04,206492.0,67141.0
32,54565.0,26373.0
11,4480.0,1919.0
36,592969.0,229666.0
44,57182.0,13079.0
25,314483.0,80217.0
42,727257.0,168855.0
09,190713.0,45110.0
34,359514.0,147187.0
39,841515.0,148026.0
19,241775.0,45637.0
17,763429.0,187477.0
26,802506.0,106770.0
31,105866.0,27389.0
20,178621.0,39174.0
55,536806.0,77724.0
18,579772.0,80746.0
54,60035.0,16430.0
50,35666.0,7229.0
23,60195.0,15000.0
06,1697080.0,530690.0
46,43188.0,13025.0
27,388089.0,81877.0
24,138256.0,57967.0
38,26976.0,13858.0
29,326225.0,75937.0
40,170162.0,45320.0
33,90220.0,20751.0
30,22275.0,11542.0
72,96031.0,29463.0
15,19864.0,15241.0
41,208442.0,53736.0
56,11406.0,5970.0
22,159899.0,52387.0
21,274015.0,48474.0
53,350233.0,95021.0
51,291635.0,75731.0
01,286717.0,51708.0
08,185728.0,69293.0
35,39147.0,18207.0
47,382205.0,77447.0
28,162983.0,30106.0
10,37747.0,8040.0
05,171816.0,30202.0

2025-01-26 06:51:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:51:15 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:16 - root - INFO - SQL:
SELECT s."geo_id", AVG(s."employed_manufacturing") AS "avg_employed_manufacturing"
   FROM (
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
   ) s
   GROUP BY s."geo_id"
   LIMIT 100;
Results:
geo_id,avg_employed_manufacturing
16,72609.0
48,1111391.75
49,150034.25
12,457284.75
37,561529.25
45,296387.25
13,484349.75
04,207764.5
32,56320.25
11,4524.75
36,589385.25
44,56832.75
25,315730.25
42,727980.75
09,191128.25
34,360914.75
19,240716.5
17,761045.25
26,816103.25
18,584227.5
55,537901.75
54,60028.75
46,43789.25
27,388898.0
30,22830.5
24,137807.75
33,89727.5
22,159476.0
51,290578.75
01,288788.0
35,38452.0
02,12642.75
39,843237.25
20,177878.25
06,1700467.0
29,326576.75
38,27110.75
21,275558.5
47,387596.5
10,38055.5
15,20012.0
23,60120.75
72,94182.25
28,162560.25
31,104860.5
50,35173.75
40,170004.25
41,212126.0
56,11748.0
53,349686.25
08,186938.25
05,172081.75

2025-01-26 06:51:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:51:17 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:18 - root - INFO - SQL:
SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
    FROM (
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
    ) s
    GROUP BY s."geo_id"
    LIMIT 100;
Results:
geo_id,total_vulnerable_manufacturing
16,119078.76
48,1822682.47
49,246056.16999999998
12,749946.99
37,920907.97
45,486075.08999999997
13,794333.59
04,340733.77999999997
32,92365.20999999999
11,7420.589999999999
36,966591.8099999999
44,93205.70999999999
25,517797.61
42,1193888.43
09,313450.32999999996
34,591900.19
19,394775.05999999994
17,1248114.21
26,1338409.3299999998
18,958133.1
55,882158.87
54,98447.15
46,71814.37
27,637792.72
30,37442.02
24,226004.71
33,147153.09999999998
22,261540.63999999998
51,476549.14999999997
01,473612.31999999995
35,63061.28
02,20734.109999999997
39,1382909.0899999999
20,291720.32999999996
06,2788765.88
29,535585.87
38,44461.63
21,451915.93999999994
47,635658.26
10,62411.02
15,32819.68
23,98598.03
72,154458.88999999998
28,266598.81
31,171971.22
50,57684.95
40,278806.97
41,347886.64
56,19266.72
53,573485.45
08,306578.73
05,282214.07

2025-01-26 06:51:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 52
2025-01-26 06:51:19 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:51:19 - root - INFO - SQL:
SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
    FROM (
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
    ) s
    GROUP BY s."geo_id"
    LIMIT 100;
Results:
geo_id,total_vulnerable_wholesale
16,29419.22
48,568852.4
49,55046.42
12,374879.88
37,179610.03999999998
45,86164.62
13,196486.97999999998
04,104425.52
32,41319.68
11,2878.5
36,346401.16000000003
44,20003.2
25,121978.1
42,257257.34
09,68075.48
34,225327.46
19,69384.58
17,285551.38
26,163792.54
18,122345.94
55,119065.02
54,24984.62
46,19555.56
27,125729.46
30,17593.239999999998
24,87132.1
33,31223.84
22,79477.76000000001
51,115705.44
01,78733.72
35,27371.4
02,9863.66
39,224935.3
20,60211.380000000005
06,805342.36
29,116323.7
38,21185.0
21,73297.06
47,119393.72
10,12761.92
15,23131.36
23,22305.24
72,44022.240000000005
28,45885.0
31,41922.36
50,10758.94
40,69375.45999999999
41,82045.42
56,8786.36
53,146509.76
08,105457.22
05,46436.380000000005

2025-01-26 06:51:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:51:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:51:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:51:21 - snowflake.connector.connection - INFO - closed
2025-01-26 06:51:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:52:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:52:00 - root - INFO - **Explanation of the Error:**

The error you're encountering:

```
100038 (22018): 01b9f6db-0004-7d15-0001-11c300fab29a: Numeric value '' is not recognized
```

occurs because of the `SUBSTRING` function in your JOIN condition:

```sql
ON sf."fips" = SUBSTRING(vm."geo_id", 10, 2)
```

In this expression, `SUBSTRING(vm."geo_id", 10, 2)` attempts to extract two characters starting from the 10th position of `vm."geo_id"`. However, as per the data you've provided earlier, `vm."geo_id"` contains state FIPS codes like `'16'`, `'48'`, etc., which are only 2 characters long. Extracting from the 10th position results in an empty string (`''`), which cannot be converted to a numeric value for comparison with `sf."fips"`.

**Solution:**

To fix the error, modify the JOIN condition to directly compare the numeric FIPS codes. Since `vm."geo_id"` contains the state FIPS code as a string, you can use `TO_NUMBER(vm."geo_id")` to convert it to a number and compare it with `sf."fips"`.

**Corrected SQL Query:**

```sql
SELECT sf."state", vm."total_vulnerable_manufacturing", vw."total_vulnerable_wholesale"
FROM (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
) vm
JOIN (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
) vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
  ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") DESC
LIMIT 100;
```

**Explanation:**

- **JOIN Condition Correction:**
  - Replaced `SUBSTRING(vm."geo_id", 10, 2)` with `TO_NUMBER(vm."geo_id")` to convert the `vm."geo_id"` string directly to a numeric value matching `sf."fips"`.
  - This ensures that the comparison in the JOIN condition is between two numeric values.

- **Why This Works:**
  - `sf."fips"` is a numeric field containing state FIPS codes.
  - `vm."geo_id"` is a string representation of the state FIPS code.
  - Using `TO_NUMBER(vm."geo_id")` converts the string to a number, allowing for a valid comparison.

**Result:**

By making this change, the query will execute without the numeric conversion error. The query aggregates the total number of vulnerable workers in the manufacturing and wholesale trade sectors for each state over the years 2015 to 2018 and lists the states in descending order based on the total number of vulnerable workers.

**Next Steps:**

- **Run the Corrected Query:**
  - Execute the corrected SQL query in your database environment.
  - Verify that the results are as expected and that the error is resolved.

- **Interpret the Results:**
  - The query will return the state name, total vulnerable workers in manufacturing, total vulnerable workers in wholesale trade, and can be extended to show the combined total of vulnerable workers.
  - This data can then be used to list the states in order of the total number of vulnerable workers as required.

**Final Output Format:**

You can present the results in a table format like:

```csv
State,Vulnerable_Workers_in_Wholesale_Trade,Vulnerable_Workers_in_Manufacturing,Total_Vulnerable_Workers
State1,vulnerable_wholesale1:int,vulnerable_manufacturing1:int,total_vulnerable1:int
State2,vulnerable_wholesale2:int,vulnerable_manufacturing2:int,total_vulnerable2:int
...
```

- **State**: Name of the state.
- **Vulnerable_Workers_in_Wholesale_Trade**: Total vulnerable workers in the wholesale trade sector (over 2015-2018).
- **Vulnerable_Workers_in_Manufacturing**: Total vulnerable workers in the manufacturing sector (over 2015-2018).
- **Total_Vulnerable_Workers**: Sum of vulnerable workers in both sectors.

**Conclusion:**

By correcting the JOIN condition, the query should now execute successfully, allowing you to generate the list of states ordered by the total number of vulnerable workers based on the data from 2015 to 2018.
2025-01-26 06:52:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:52:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:52:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:52:01 - snowflake.connector.connection - INFO - closed
2025-01-26 06:52:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:53:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:53:18 - root - INFO - **Explanation of the Error:**

The error you're encountering:

```
001003 (42000): 01b9f6dc-0004-7d15-0001-11c300fab29e: SQL compilation error:
syntax error line 1 at position 0 unexpected 'ON'.
```

indicates a syntax error in your SQL query, specifically related to the placement of the `ON` clause in your `JOIN` statements.

**Understanding the Issue:**

In your query, you're performing multiple `JOIN`s, and the placement of the `ON` clauses is critical. Here's the problematic part of your query:

```sql
FROM (
  -- Derived table vm
) vm
JOIN (
  -- Derived table vw
) vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
  ON sf."fips" = TO_NUMBER(vm."geo_id")
```

The SQL parser expects the `ON` clause to be specified immediately after each `JOIN` operation. The issue arises because, after the `vw` derived table, the `ON` clause is correctly placed. However, for the next `JOIN` with `sf`, the `ON` clause is misplaced.

**Incorrect Placement:**

- The `ON` clause associated with the `JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf` needs to be placed immediately after that `JOIN` statement.
- The SQL parser is getting confused because it expects an `ON` clause right after the `JOIN vw`, but due to syntax issues, it's misinterpreting the `ON` clause.

**Solution:**

To fix the syntax error, you need to ensure that each `JOIN` operation is correctly paired with its respective `ON` clause. Additionally, restructuring your query using Common Table Expressions (CTEs) can make it cleaner and help avoid such syntax errors.

**Corrected SQL Query:**

```sql
WITH vm AS (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
),
vw AS (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
)
SELECT sf."state", vm."total_vulnerable_manufacturing", vw."total_vulnerable_wholesale"
FROM vm
JOIN vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") DESC
LIMIT 100;
```

**Why This Works:**

- **Use of CTEs:** By defining `vm` and `vw` as Common Table Expressions, we simplify the `FROM` clause and make the `JOIN`s more readable.
- **Proper Placement of `ON` Clauses:** Each `JOIN` now has its `ON` clause immediately following it.
  - `JOIN vw ON vm."geo_id" = vw."geo_id"`
  - `JOIN ... sf ON sf."fips" = TO_NUMBER(vm."geo_id")`
- **Avoiding Ambiguity:** This structure eliminates any ambiguity the SQL parser might have had regarding which `JOIN` the `ON` clause applies to.

**Alternative Without CTEs:**

If you prefer not to use CTEs, you can also use subqueries directly in the `FROM` clause, ensuring that each `JOIN` has its `ON` clause immediately after it:

```sql
SELECT sf."state", vm."total_vulnerable_manufacturing", vw."total_vulnerable_wholesale"
FROM (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    -- Manufacturing data union
  ) s
  GROUP BY s."geo_id"
) vm
JOIN (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    -- Wholesale trade data union
  ) s
  GROUP BY s."geo_id"
) vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") DESC
LIMIT 100;
```

**Key Points:**

- **Ensure Each `JOIN` Is Followed by Its `ON` Clause:**
  - Place the `ON` clause immediately after the `JOIN` statement it applies to.
- **Use `TO_NUMBER` to Match Data Types:**
  - Convert `vm."geo_id"` (a string) to a number using `TO_NUMBER` to match `sf."fips"`.
- **Avoid Misplaced Clauses:**
  - Misplaced `ON` clauses can cause the SQL parser to throw syntax errors.

**Example Execution Output:**

After running the corrected query, you should receive results similar to:

```csv
state,total_vulnerable_manufacturing,total_vulnerable_wholesale
California,2788765.88,805342.36
Texas,1822682.47,568852.4
Ohio,1382909.09,224935.3
Michigan,1338409.33,163792.54
Illinois,1248114.21,285551.38
...
```

**Conclusion:**

By restructuring your SQL query to properly place `ON` clauses and using CTEs for clarity, you can resolve the syntax error and successfully execute your query. This will allow you to generate the list of states ordered by the total number of vulnerable workers, as per your original task.

---

**Final Note:**

When constructing complex SQL queries with multiple `JOIN`s and subqueries, it's crucial to:

- **Maintain Clear Syntax:** Ensure that each `JOIN` is immediately followed by its corresponding `ON` clause.
- **Use Aliases Appropriately:** Assign aliases to subqueries and use them consistently.
- **Test Incrementally:** Build your query step by step, testing each part to catch errors early.
2025-01-26 06:53:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:53:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:53:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:53:20 - snowflake.connector.connection - INFO - closed
2025-01-26 06:53:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:54:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:54:38 - root - INFO - **Explanation of the Error:**

The error you're encountering:

```
001003 (42000): 01b9f6dd-0004-7d15-0001-11c300fab2a6: SQL compilation error:
syntax error line 1 at position 0 unexpected 'FROM'.
```

indicates a syntax error in your SQL query, specifically at the very **beginning** of the query. The SQL parser is encountering the `FROM` keyword unexpectedly at position 0, which suggests that there might be a missing or misplaced `SELECT` statement.

**Possible Causes:**

1. **Missing or Misplaced `SELECT` Keyword:**
   - The query might be starting with `FROM` instead of `SELECT`.
   - There may be an accidental omission of the `SELECT` keyword.

2. **Copy-Paste Errors:**
   - When copying the query, the initial `SELECT` might have been omitted.
   - There might be unintended characters or white spaces before `SELECT`.

3. **Unbalanced Parentheses or Missing Aliases:**
   - Missing parentheses can cause the SQL parser to misinterpret the query.
   - Derived tables (subqueries) in the `FROM` clause need to have aliases.

**Solution:**

Let's carefully reconstruct your query to ensure correct syntax.

**Corrected SQL Query Using CTEs:**

Using Common Table Expressions (CTEs) can make your query clearer and help prevent syntax errors.

```sql
WITH vm AS (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
),
vw AS (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
)
SELECT
  sf."state",
  vm."total_vulnerable_manufacturing",
  vw."total_vulnerable_wholesale",
  (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") AS "total_vulnerable_workers"
FROM vm
JOIN vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY "total_vulnerable_workers" DESC
LIMIT 100;
```

**Key Corrections Made:**

1. **Use of `WITH` Clause for CTEs:**
   - Defined `vm` and `vw` as Common Table Expressions for clarity.

2. **Ensured Each Subquery Has an Alias:**
   - The subqueries inside the `FROM` clause now have aliases (`s`).

3. **Proper Placement of `SELECT`:**
   - The query starts with the `WITH` clause followed by `SELECT`.

4. **Adjusted `JOIN` Conditions:**
   - Used `TO_NUMBER(vm."geo_id")` to match the numeric `sf."fips"`.

5. **Added a Combined Total Column:**
   - Included `(vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") AS "total_vulnerable_workers"` for ordering.

**Explanation:**

- **CTEs Simplify Complex Queries:**
  - By breaking down the query into CTEs, each part can be handled separately.

- **Ensuring Correct Syntax:**
  - All `SELECT`, `FROM`, and `JOIN` clauses are properly placed.
  - Each subquery is enclosed in parentheses and followed by an alias.

- **Avoiding Syntax Errors:**
  - The SQL parser can correctly interpret the query without confusion.

**Further Checks:**

1. **Ensure the Query Starts with `SELECT` or `WITH`:**
   - If the query accidentally starts with `FROM`, the parser expects the `SELECT` keyword first.

2. **Check for Unbalanced Parentheses:**
   - Count opening and closing parentheses to ensure they match.

3. **Verify Aliases for Derived Tables:**
   - Every subquery in the `FROM` clause must have an alias (e.g., `vm`, `vw`, `s`).

4. **Test Each Part Individually:**
   - Run the `vm` and `vw` CTEs separately to ensure they work.

**Alternative Without CTEs:**

If you prefer not to use CTEs, here's the query rewritten accordingly:

```sql
SELECT
  sf."state",
  vm."total_vulnerable_manufacturing",
  vw."total_vulnerable_wholesale",
  (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") AS "total_vulnerable_workers"
FROM (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    -- Include other years
  ) s
  GROUP BY s."geo_id"
) vm
JOIN (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    -- Include other years
  ) s
  GROUP BY s."geo_id"
) vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY "total_vulnerable_workers" DESC
LIMIT 100;
```

**Ensure Correct Use of `TO_NUMBER`:**

- The `sf."fips"` field is numeric, so we convert `vm."geo_id"` to a number for comparison.
- Avoid using `SUBSTRING` unless necessary and ensure it doesn't cause conversion errors.

**Conclusion:**

The syntax error arises because the SQL parser expects the query to start with `SELECT` (or `WITH` when using CTEs), but it's encountering `FROM` instead. By starting your query correctly, ensuring all subqueries have aliases, and using proper syntax, you can resolve this error.

**Final Tips:**

- Always start your query with `SELECT` or the appropriate clause.
- Use consistent indentation and formatting to make the query more readable.
- Test subqueries individually to isolate issues.
- Double-check for any typos or missing keywords.

**Example Execution:**

After correcting the query, it should execute successfully and return results similar to:

```csv
state,total_vulnerable_manufacturing,total_vulnerable_wholesale,total_vulnerable_workers
California,2788765.88,805342.36,3594108.24
Texas,1822682.47,568852.40,2391534.87
Ohio,1382909.09,224935.30,1607844.39
Michigan,1338409.33,163792.54,1502201.87
Illinois,1248114.21,285551.38,1533665.59
...
```

**Output Format:**

As per your task, you can now list the states in order of the total number of vulnerable workers.

---

**I hope this helps you resolve the syntax error and successfully execute your query!**
2025-01-26 06:54:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:54:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:54:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:54:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:54:40 - snowflake.connector.connection - INFO - closed
2025-01-26 06:54:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:55:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:55:28 - root - INFO - SQL:
WITH vm AS (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
),
vw AS (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
)
SELECT
  sf."state",
  vm."total_vulnerable_manufacturing",
  vw."total_vulnerable_wholesale",
  (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") AS "total_vulnerable_workers"
FROM vm
JOIN vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY "total_vulnerable_workers" DESC
LIMIT 100;
Results:
state,total_vulnerable_manufacturing,total_vulnerable_wholesale,total_vulnerable_workers
California,2788765.88,805342.36,3594108.2399999998
Texas,1822682.47,568852.4,2391534.87
Ohio,1382909.0899999999,224935.3,1607844.39
Illinois,1248114.21,285551.38,1533665.5899999999
Michigan,1338409.3299999998,163792.54,1502201.8699999999
Pennsylvania,1193888.43,257257.34,1451145.77
New York,966591.8099999999,346401.16000000003,1312992.97
Florida,749946.99,374879.88,1124826.87
North Carolina,920907.97,179610.03999999998,1100518.01
Indiana,958133.1,122345.94,1080479.04
Wisconsin,882158.87,119065.02,1001223.89
Georgia,794333.59,196486.97999999998,990820.57
New Jersey,591900.19,225327.46,817227.6499999999
Minnesota,637792.72,125729.46,763522.1799999999
Tennessee,635658.26,119393.72,755051.98
Washington,573485.45,146509.76,719995.21
Missouri,535585.87,116323.7,651909.57
Massachusetts,517797.61,121978.1,639775.71
Virginia,476549.14999999997,115705.44,592254.59
South Carolina,486075.08999999997,86164.62,572239.71
Alabama,473612.31999999995,78733.72,552346.0399999999
Kentucky,451915.93999999994,73297.06,525213.0
Iowa,394775.05999999994,69384.58,464159.63999999996
Arizona,340733.77999999997,104425.52,445159.3
Oregon,347886.64,82045.42,429932.06
Colorado,306578.73,105457.22,412035.94999999995
Connecticut,313450.32999999996,68075.48,381525.80999999994
Kansas,291720.32999999996,60211.380000000005,351931.70999999996
Oklahoma,278806.97,69375.45999999999,348182.42999999993
Louisiana,261540.63999999998,79477.76000000001,341018.4
Arkansas,282214.07,46436.380000000005,328650.45
Maryland,226004.71,87132.1,313136.81
Mississippi,266598.81,45885.0,312483.81
Utah,246056.16999999998,55046.42,301102.58999999997
Nebraska,171971.22,41922.36,213893.58000000002
Puerto Rico,154458.88999999998,44022.240000000005,198481.13
New Hampshire,147153.09999999998,31223.84,178376.93999999997
Idaho,119078.76,29419.22,148497.97999999998
Nevada,92365.20999999999,41319.68,133684.88999999998
West Virginia,98447.15,24984.62,123431.76999999999
Maine,98598.03,22305.24,120903.27
Rhode Island,93205.70999999999,20003.2,113208.90999999999
South Dakota,71814.37,19555.56,91369.93
New Mexico,63061.28,27371.4,90432.68
Delaware,62411.02,12761.92,75172.94
Vermont,57684.95,10758.94,68443.89
North Dakota,44461.63,21185.0,65646.63
Hawaii,32819.68,23131.36,55951.04
Montana,37442.02,17593.239999999998,55035.259999999995
Alaska,20734.109999999997,9863.66,30597.769999999997
Wyoming,19266.72,8786.36,28053.08

2025-01-26 06:55:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:55:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:55:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:55:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 06:55:29 - snowflake.connector.connection - INFO - closed
2025-01-26 06:55:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:55:30 - root - INFO - SQL:
-- Query 1 requires no correction.

SELECT "geo_id", "median_income"
FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
WHERE "median_income" IS NOT NULL
LIMIT 100
Results:
geo_id,median_income
98304,36746.000000000
22714,74625.000000000
69128,56471.000000000
97908,22321.000000000
37228,15540.000000000
97486,62083.000000000
04491,27500.000000000
11005,58894.000000000
04936,40469.000000000
63102,39855.000000000
06793,81711.000000000
44669,67981.000000000
96109,29958.000000000
15638,51304.000000000
36263,41875.000000000
16853,39861.000000000
08352,67348.000000000
72536,22917.000000000
59926,29722.000000000
96084,34732.000000000
97011,39975.000000000
12444,38229.000000000
15561,56429.000000000
58488,60729.000000000
52219,44063.000000000
26852,31532.000000000
38588,40815.000000000
47584,40208.000000000
31038,43553.000000000
37326,21250.000000000
95560,35987.000000000
88348,19000.000000000
97484,38854.000000000
66850,90417.000000000
59755,28750.000000000
72136,36995.000000000
17101,28615.000000000
80830,51953.000000000
99638,35000.000000000
95443,15690.000000000
59731,37115.000000000
68416,40000.000000000
57766,64583.000000000
13404,32500.000000000
95497,75598.000000000
37219,50700.000000000
73556,37813.000000000
54948,41250.000000000
19436,55208.000000000
18503,14643.000000000
31527,66667.000000000
86444,21484.000000000
23153,75833.000000000
94970,93750.000000000
12481,54467.000000000
25879,22548.000000000
65335,50250.000000000
81121,40893.000000000
59927,47813.000000000
12548,56625.000000000
94569,110347.000000000
95728,58354.000000000
60661,98882.000000000
14480,38015.000000000
93517,61250.000000000
66944,25000.000000000
77002,62089.000000000
21766,28828.000000000
99153,32955.000000000
97145,56667.000000000
34289,42451.000000000
29614,27065.000000000
20006,34125.000000000
87531,48625.000000000
98134,52981.000000000
05034,95833.000000000
12517,60469.000000000
17027,65673.000000000
23968,32566.000000000
71970,30000.000000000
16691,45000.000000000
12847,62917.000000000
78215,51853.000000000
49918,32500.000000000
93424,74563.000000000
21734,52969.000000000
67202,40273.000000000
21872,61029.000000000
41180,20857.000000000
21130,53393.000000000
84334,54680.000000000
49628,45179.000000000
99131,44167.000000000
65064,54722.000000000
27862,39375.000000000
55615,42857.000000000
97108,51250.000000000
08212,53125.000000000
02558,42542.000000000
05654,40491.000000000

2025-01-26 06:55:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:55:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:55:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:55:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 06:55:31 - snowflake.connector.connection - INFO - closed
2025-01-26 06:55:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:55:31 - root - INFO - SQL:
-- Corrected SQL for Query 2:

SELECT zc."zip_code", zc."state_fips_code", sf."state"
FROM CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES zc
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
  ON sf."fips" = TO_NUMBER(zc."state_fips_code")
LIMIT 100
Results:
zip_code,state_fips_code,state
95665,06,California
93628,06,California
73722,40,Oklahoma
57010,46,South Dakota
66834,20,Kansas
78244,48,Texas
89423,32,Nevada
66851,20,Kansas
68406,31,Nebraska
39166,28,Mississippi
87540,35,New Mexico
87310,35,New Mexico
77089,48,Texas
53586,55,Wisconsin
65231,29,Missouri
73034,40,Oklahoma
57117,46,South Dakota
87104,35,New Mexico
92570,06,California
78015,48,Texas
68742,31,Nebraska
75104,48,Texas
75044,48,Texas
64448,29,Missouri
78012,48,Texas
84069,49,Utah
81610,08,Colorado
89003,32,Nevada
71326,22,Louisiana
67880,20,Kansas
67638,20,Kansas
95944,06,California
56116,27,Minnesota
87026,35,New Mexico
76578,48,Texas
39483,28,Mississippi
84307,49,Utah
68863,31,Nebraska
68833,31,Nebraska
84031,49,Utah
78676,48,Texas
71935,05,Arkansas
85724,04,Arizona
74063,40,Oklahoma
70721,22,Louisiana
74851,40,Oklahoma
93203,06,California
72633,05,Arkansas
68455,31,Nebraska
84072,49,Utah
76933,48,Texas
78248,48,Texas
81027,08,Colorado
64081,29,Missouri
91351,06,California
79529,48,Texas
93648,06,California
51533,19,Iowa
67215,20,Kansas
74011,40,Oklahoma
61490,17,Illinois
76252,48,Texas
92003,06,California
72084,05,Arkansas
95443,06,California
64082,29,Missouri
51448,19,Iowa
84626,49,Utah
74850,40,Oklahoma
72099,05,Arkansas
78963,48,Texas
95978,06,California
91423,06,California
64862,29,Missouri
79085,48,Texas
70757,22,Louisiana
64146,29,Missouri
80218,08,Colorado
78340,48,Texas
87827,35,New Mexico
89145,32,Nevada
56186,27,Minnesota
65237,29,Missouri
85726,04,Arizona
85704,04,Arizona
74901,40,Oklahoma
78113,48,Texas
94044,06,California
65542,29,Missouri
64076,29,Missouri
67057,20,Kansas
87041,35,New Mexico
72773,05,Arkansas
68106,31,Nebraska
72347,05,Arkansas
74565,40,Oklahoma
66416,20,Kansas
71940,05,Arkansas
79707,48,Texas
76627,48,Texas

2025-01-26 06:55:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:55:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:55:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:55:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:55:33 - snowflake.connector.connection - INFO - closed
2025-01-26 06:55:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:55:33 - root - INFO - SQL:
-- Corrected SQL for Query 3:

SELECT sf."state", AVG(zc."median_income") AS "avg_median_income"
FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR zc
JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz
  ON zc."geo_id" = gz."zip_code"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
  ON sf."fips" = TO_NUMBER(gz."state_fips_code")
WHERE zc."median_income" IS NOT NULL
GROUP BY sf."state"
LIMIT 100
Results:
state,avg_median_income
Mississippi,36662.622107969152
Kansas,51460.342301943199
Colorado,57221.792016806723
South Dakota,51359.805157593123
North Carolina,45257.902061855670
Nebraska,53548.970070422535
Connecticut,82778.750000000000
Maryland,81364.724770642202
Nevada,56178.961038961039
Oklahoma,45096.753184713376
New York,64414.180998196031
Tennessee,43189.231281198003
Indiana,50774.230245231608
Arizona,47523.145161290323
Delaware,62135.118644067797
New Mexico,41351.536585365854
Massachusetts,76605.387596899225
Alabama,41469.510924369748
Oregon,48774.124031007752
Iowa,53989.839383938394
Virginia,59606.867484662577
Montana,47140.591591591592
South Carolina,41755.236180904523
Wyoming,57587.204379562044
Ohio,50482.352372583480
Puerto Rico,19486.488188976378
Washington,56289.487318840580
Missouri,45486.410973084886
Minnesota,56981.203703703704
North Dakota,59641.960893854749
Hawaii,62828.317647058824
Kentucky,40778.222056631893
Texas,52473.580878265703
Utah,58576.776119402985
West Virginia,40006.805152979066
Louisiana,43622.517894736842
Pennsylvania,53663.853396901073
New Jersey,84731.633975481611
Georgia,45056.451936872310
Alaska,51970.579185520362
Arkansas,38665.887218045113
Wisconsin,53678.075098814229
Rhode Island,68163.242857142857
Florida,49679.129100529101
Maine,48590.931203931204
New Hampshire,68107.037344398340
Michigan,49727.167189132706
California,63686.200609756098
Idaho,45327.304687500000
Vermont,55505.000000000000
Illinois,56748.210176991150

2025-01-26 06:55:33 - root - INFO - itercount: 0
2025-01-26 06:55:33 - root - INFO - Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CENSUS_BUREAU_ACS
DDL describes table information.
,0
table_name,BLOCKGROUP_2010_5YR
description,
DDL,"create or replace TABLE BLOCKGROUP_2010_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT
);"

Some other tables have the similar structure: ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2018_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2012_5YR']
,1
table_name,CBSA_2007_1YR
description,
DDL,"create or replace TABLE CBSA_2007_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CBSA_2007_1YR', 'CBSA_2015_5YR', 'CBSA_2013_5YR', 'CBSA_2019_1YR', 'CBSA_2012_5YR', 'CBSA_2017_5YR', 'CBSA_2008_1YR', 'CBSA_2011_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2015_1YR', 'CBSA_2007_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2011_1YR', 'CBSA_2012_1YR', 'CBSA_2013_3YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2016_5YR', 'CBSA_2013_1YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_5YR', 'CBSA_2011_3YR', 'CBSA_2012_3YR', 'CBSA_2016_1YR', 'CBSA_2017_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CBSA_2008_3YR']
,2
table_name,CENSUSTRACT_2011_5YR
description,
DDL,"create or replace TABLE CENSUSTRACT_2011_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2020_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR']
,3
table_name,CONGRESSIONALDISTRICT_2010_5YR
description,
DDL,"create or replace TABLE CONGRESSIONALDISTRICT_2010_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT
);"

Some other tables have the similar structure: ['CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2012_3YR']
,4
table_name,STATE_2013_1YR
description,
DDL,"create or replace TABLE STATE_2013_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['STATE_2013_1YR', 'STATE_2014_1YR', 'STATE_2016_5YR', 'STATE_2019_1YR', 'STATE_2017_1YR', 'STATE_2019_5YR', 'STATE_2007_1YR', 'STATE_2008_3YR', 'STATE_2011_3YR', 'STATE_2012_1YR', 'STATE_2015_1YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2013_3YR', 'STATE_2014_5YR', 'STATE_2020_5YR', 'STATE_2008_1YR', 'STATE_2012_5YR', 'STATE_2018_5YR', 'STATE_2010_5YR', 'STATE_2012_3YR', 'STATE_2016_1YR', 'STATE_2018_1YR', 'STATE_2013_5YR', 'STATE_2007_3YR', 'STATE_2011_5YR', 'STATE_2010_3YR', 'STATE_2021_1YR', 'STATE_2011_1YR', 'STATE_2010_1YR', 'STATE_2017_5YR', 'STATE_2015_5YR']
,5
table_name,COUNTY_2013_5YR
description,
DDL,"create or replace TABLE COUNTY_2013_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['COUNTY_2013_5YR', 'COUNTY_2016_5YR', 'COUNTY_2020_5YR', 'COUNTY_2008_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_5YR', 'COUNTY_2017_1YR', 'COUNTY_2019_1YR', 'COUNTY_2014_5YR', 'COUNTY_2007_1YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2012_3YR', 'COUNTY_2013_1YR', 'COUNTY_2015_1YR', 'COUNTY_2009_1YR', 'COUNTY_2011_5YR', 'COUNTY_2015_5YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2014_1YR', 'COUNTY_2021_1YR', 'COUNTY_2019_5YR', 'COUNTY_2007_3YR', 'COUNTY_2009_3YR', 'COUNTY_2018_5YR', 'COUNTY_2016_1YR', 'COUNTY_2010_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_3YR', 'COUNTY_2008_1YR', 'COUNTY_2012_1YR']
,6
table_name,PLACE_2011_3YR
description,
DDL,"create or replace TABLE PLACE_2011_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['PLACE_2011_3YR', 'PLACE_2018_1YR', 'PLACE_2010_1YR', 'PLACE_2012_5YR', 'PLACE_2011_1YR', 'PLACE_2009_1YR', 'PLACE_2017_5YR', 'PLACE_2014_5YR', 'PLACE_2010_5YR', 'PLACE_2015_5YR', 'PLACE_2007_3YR', 'PLACE_2012_3YR', 'PLACE_2021_1YR', 'PLACE_2013_3YR', 'PLACE_2007_1YR', 'PLACE_2019_5YR', 'PLACE_2010_3YR', 'PLACE_2018_5YR', 'PLACE_2013_1YR', 'PLACE_2020_5YR', 'PLACE_2009_3YR', 'PLACE_2008_3YR', 'PLACE_2013_5YR', 'PLACE_2017_1YR', 'PLACE_2019_1YR', 'PLACE_2014_1YR', 'PLACE_2011_5YR', 'PLACE_2016_5YR', 'PLACE_2008_1YR', 'PLACE_2016_1YR', 'PLACE_2015_1YR', 'PLACE_2012_1YR']
,7
table_name,SCHOOLDISTRICTSECONDARY_2010_5YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTSECONDARY_2010_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR']
,8
table_name,SCHOOLDISTRICTUNIFIED_2018_1YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTUNIFIED_2018_1YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR']
,9
table_name,PUMA_2008_3YR
description,
DDL,"create or replace TABLE PUMA_2008_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['PUMA_2008_3YR', 'PUMA_2010_5YR', 'PUMA_2012_1YR', 'PUMA_2021_1YR', 'PUMA_2018_1YR', 'PUMA_2013_3YR', 'PUMA_2020_5YR', 'PUMA_2010_1YR', 'PUMA_2015_5YR', 'PUMA_2017_5YR', 'PUMA_2012_5YR', 'PUMA_2009_1YR', 'PUMA_2010_3YR', 'PUMA_2013_1YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2012_3YR', 'PUMA_2011_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2009_3YR', 'PUMA_2007_1YR', 'PUMA_2017_1YR', 'PUMA_2014_1YR', 'PUMA_2016_5YR', 'PUMA_2018_5YR', 'PUMA_2013_5YR', 'PUMA_2016_1YR']
,10
table_name,SCHOOLDISTRICTELEMENTARY_2010_1YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTELEMENTARY_2010_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" NUMBER(38,9),
	""family_households"" NUMBER(38,9),
	""median_year_structure_built"" NUMBER(38,9),
	""rent_burden_not_computed"" NUMBER(38,9),
	""rent_over_50_percent"" NUMBER(38,9),
	""rent_40_to_50_percent"" NUMBER(38,9),
	""rent_35_to_40_percent"" NUMBER(38,9),
	""rent_30_to_35_percent"" NUMBER(38,9),
	""rent_25_to_30_percent"" NUMBER(38,9),
	""rent_20_to_25_percent"" NUMBER(38,9),
	""rent_15_to_20_percent"" NUMBER(38,9),
	""rent_10_to_15_percent"" NUMBER(38,9),
	""rent_under_10_percent"" NUMBER(38,9),
	""total_pop"" NUMBER(38,9),
	""male_pop"" NUMBER(38,9),
	""female_pop"" NUMBER(38,9),
	""median_age"" NUMBER(38,9),
	""white_pop"" NUMBER(38,9),
	""black_pop"" NUMBER(38,9),
	""asian_pop"" NUMBER(38,9),
	""hispanic_pop"" NUMBER(38,9),
	""amerindian_pop"" NUMBER(38,9),
	""other_race_pop"" NUMBER(38,9),
	""two_or_more_races_pop"" NUMBER(38,9),
	""not_hispanic_pop"" NUMBER(38,9),
	""commuters_by_public_transportation"" NUMBER(38,9),
	""households"" NUMBER(38,9),
	""median_income"" NUMBER(38,9),
	""income_per_capita"" NUMBER(38,9),
	""housing_units"" NUMBER(38,9),
	""vacant_housing_units"" NUMBER(38,9),
	""vacant_housing_units_for_rent"" NUMBER(38,9),
	""vacant_housing_units_for_sale"" NUMBER(38,9),
	""median_rent"" NUMBER(38,9),
	""percent_income_spent_on_rent"" NUMBER(38,9),
	""owner_occupied_housing_units"" NUMBER(38,9),
	""million_dollar_housing_units"" NUMBER(38,9),
	""mortgaged_housing_units"" NUMBER(38,9),
	""families_with_young_children"" NUMBER(38,9),
	""two_parent_families_with_young_children"" NUMBER(38,9),
	""two_parents_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_father_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_mother_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_not_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""one_parent_families_with_young_children"" NUMBER(38,9),
	""father_one_parent_families_with_young_children"" NUMBER(38,9),
	""father_in_labor_force_one_parent_families_with_young_children"" NUMBER(38,9),
	""commute_10_14_mins"" NUMBER(38,9),
	""commute_15_19_mins"" NUMBER(38,9),
	""commute_20_24_mins"" NUMBER(38,9),
	""commute_25_29_mins"" NUMBER(38,9),
	""commute_30_34_mins"" NUMBER(38,9),
	""commute_45_59_mins"" NUMBER(38,9),
	""aggregate_travel_time_to_work"" NUMBER(38,9),
	""income_less_10000"" NUMBER(38,9),
	""income_10000_14999"" NUMBER(38,9),
	""income_15000_19999"" NUMBER(38,9),
	""income_20000_24999"" NUMBER(38,9),
	""income_25000_29999"" NUMBER(38,9),
	""income_30000_34999"" NUMBER(38,9),
	""income_35000_39999"" NUMBER(38,9),
	""income_40000_44999"" NUMBER(38,9),
	""income_45000_49999"" NUMBER(38,9),
	""income_50000_59999"" NUMBER(38,9),
	""income_60000_74999"" NUMBER(38,9),
	""income_75000_99999"" NUMBER(38,9),
	""income_100000_124999"" NUMBER(38,9),
	""income_125000_149999"" NUMBER(38,9),
	""income_150000_199999"" NUMBER(38,9),
	""income_200000_or_more"" NUMBER(38,9),
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" NUMBER(38,9),
	""owner_occupied_housing_units_lower_value_quartile"" NUMBER(38,9),
	""owner_occupied_housing_units_median_value"" NUMBER(38,9),
	""owner_occupied_housing_units_upper_value_quartile"" NUMBER(38,9),
	""married_households"" NUMBER(38,9),
	""occupied_housing_units"" NUMBER(38,9),
	""housing_units_renter_occupied"" NUMBER(38,9),
	""dwellings_1_units_detached"" NUMBER(38,9),
	""dwellings_1_units_attached"" NUMBER(38,9),
	""dwellings_2_units"" NUMBER(38,9),
	""dwellings_3_to_4_units"" NUMBER(38,9),
	""dwellings_5_to_9_units"" NUMBER(38,9),
	""dwellings_10_to_19_units"" NUMBER(38,9),
	""dwellings_20_to_49_units"" NUMBER(38,9),
	""dwellings_50_or_more_units"" NUMBER(38,9),
	""mobile_homes"" NUMBER(38,9),
	""housing_built_2005_or_later"" NUMBER(38,9),
	""housing_built_2000_to_2004"" NUMBER(38,9),
	""housing_built_1939_or_earlier"" NUMBER(38,9),
	""male_under_5"" NUMBER(38,9),
	""male_5_to_9"" NUMBER(38,9),
	""male_10_to_14"" NUMBER(38,9),
	""male_15_to_17"" NUMBER(38,9),
	""male_18_to_19"" NUMBER(38,9),
	""male_20"" NUMBER(38,9),
	""male_21"" NUMBER(38,9),
	""male_22_to_24"" NUMBER(38,9),
	""male_25_to_29"" NUMBER(38,9),
	""male_30_to_34"" NUMBER(38,9),
	""male_35_to_39"" NUMBER(38,9),
	""male_40_to_44"" NUMBER(38,9),
	""male_45_to_49"" NUMBER(38,9),
	""male_50_to_54"" NUMBER(38,9),
	""male_55_to_59"" NUMBER(38,9),
	""male_60_61"" NUMBER(38,9),
	""male_62_64"" NUMBER(38,9),
	""male_65_to_66"" NUMBER(38,9),
	""male_67_to_69"" NUMBER(38,9),
	""male_70_to_74"" NUMBER(38,9),
	""male_75_to_79"" NUMBER(38,9),
	""male_80_to_84"" NUMBER(38,9),
	""male_85_and_over"" NUMBER(38,9),
	""female_under_5"" NUMBER(38,9),
	""female_5_to_9"" NUMBER(38,9),
	""female_10_to_14"" NUMBER(38,9),
	""female_15_to_17"" NUMBER(38,9),
	""female_18_to_19"" NUMBER(38,9),
	""female_20"" NUMBER(38,9),
	""female_21"" NUMBER(38,9),
	""female_22_to_24"" NUMBER(38,9),
	""female_25_to_29"" NUMBER(38,9),
	""female_30_to_34"" NUMBER(38,9),
	""female_35_to_39"" NUMBER(38,9),
	""female_40_to_44"" NUMBER(38,9),
	""female_45_to_49"" NUMBER(38,9),
	""female_50_to_54"" NUMBER(38,9),
	""female_55_to_59"" NUMBER(38,9),
	""female_60_to_61"" NUMBER(38,9),
	""female_62_to_64"" NUMBER(38,9),
	""female_65_to_66"" NUMBER(38,9),
	""female_67_to_69"" NUMBER(38,9),
	""female_70_to_74"" NUMBER(38,9),
	""female_75_to_79"" NUMBER(38,9),
	""female_80_to_84"" NUMBER(38,9),
	""female_85_and_over"" NUMBER(38,9),
	""white_including_hispanic"" NUMBER(38,9),
	""black_including_hispanic"" NUMBER(38,9),
	""amerindian_including_hispanic"" NUMBER(38,9),
	""asian_including_hispanic"" NUMBER(38,9),
	""commute_5_9_mins"" NUMBER(38,9),
	""commute_35_39_mins"" NUMBER(38,9),
	""commute_40_44_mins"" NUMBER(38,9),
	""commute_60_89_mins"" NUMBER(38,9),
	""commute_90_more_mins"" NUMBER(38,9),
	""households_retirement_income"" NUMBER(38,9),
	""asian_male_45_54"" NUMBER(38,9),
	""asian_male_55_64"" NUMBER(38,9),
	""black_male_45_54"" NUMBER(38,9),
	""black_male_55_64"" NUMBER(38,9),
	""hispanic_male_45_54"" NUMBER(38,9),
	""hispanic_male_55_64"" NUMBER(38,9),
	""white_male_45_54"" NUMBER(38,9),
	""white_male_55_64"" NUMBER(38,9),
	""bachelors_degree_2"" NUMBER(38,9),
	""bachelors_degree_or_higher_25_64"" NUMBER(38,9),
	""children"" NUMBER(38,9),
	""children_in_single_female_hh"" NUMBER(38,9),
	""commuters_by_bus"" NUMBER(38,9),
	""commuters_by_car_truck_van"" NUMBER(38,9),
	""commuters_by_carpool"" NUMBER(38,9),
	""commuters_by_subway_or_elevated"" NUMBER(38,9),
	""commuters_drove_alone"" NUMBER(38,9),
	""different_house_year_ago_different_city"" NUMBER(38,9),
	""different_house_year_ago_same_city"" NUMBER(38,9),
	""employed_agriculture_forestry_fishing_hunting_mining"" NUMBER(38,9),
	""employed_arts_entertainment_recreation_accommodation_food"" NUMBER(38,9),
	""employed_construction"" NUMBER(38,9),
	""employed_education_health_social"" NUMBER(38,9),
	""employed_finance_insurance_real_estate"" NUMBER(38,9),
	""employed_information"" NUMBER(38,9),
	""employed_manufacturing"" NUMBER(38,9),
	""employed_other_services_not_public_admin"" NUMBER(38,9),
	""employed_public_administration"" NUMBER(38,9),
	""employed_retail_trade"" NUMBER(38,9),
	""employed_science_management_admin_waste"" NUMBER(38,9),
	""employed_transportation_warehousing_utilities"" NUMBER(38,9),
	""employed_wholesale_trade"" NUMBER(38,9),
	""female_female_households"" NUMBER(38,9),
	""four_more_cars"" NUMBER(38,9),
	""gini_index"" NUMBER(38,9),
	""graduate_professional_degree"" NUMBER(38,9),
	""group_quarters"" NUMBER(38,9),
	""high_school_including_ged"" NUMBER(38,9),
	""households_public_asst_or_food_stamps"" NUMBER(38,9),
	""in_grades_1_to_4"" NUMBER(38,9),
	""in_grades_5_to_8"" NUMBER(38,9),
	""in_grades_9_to_12"" NUMBER(38,9),
	""in_school"" NUMBER(38,9),
	""in_undergrad_college"" NUMBER(38,9),
	""less_than_high_school_graduate"" NUMBER(38,9),
	""male_45_64_associates_degree"" NUMBER(38,9),
	""male_45_64_bachelors_degree"" NUMBER(38,9),
	""male_45_64_graduate_degree"" NUMBER(38,9),
	""male_45_64_less_than_9_grade"" NUMBER(38,9),
	""male_45_64_grade_9_12"" NUMBER(38,9),
	""male_45_64_high_school"" NUMBER(38,9),
	""male_45_64_some_college"" NUMBER(38,9),
	""male_45_to_64"" NUMBER(38,9),
	""male_male_households"" NUMBER(38,9),
	""management_business_sci_arts_employed"" NUMBER(38,9),
	""no_car"" NUMBER(38,9),
	""no_cars"" NUMBER(38,9),
	""not_us_citizen_pop"" NUMBER(38,9),
	""occupation_management_arts"" NUMBER(38,9),
	""occupation_natural_resources_construction_maintenance"" NUMBER(38,9),
	""occupation_production_transportation_material"" NUMBER(38,9),
	""occupation_sales_office"" NUMBER(38,9),
	""occupation_services"" NUMBER(38,9),
	""one_car"" NUMBER(38,9),
	""two_cars"" NUMBER(38,9),
	""three_cars"" NUMBER(38,9),
	""pop_25_64"" NUMBER(38,9),
	""pop_determined_poverty_status"" NUMBER(38,9),
	""population_1_year_and_over"" NUMBER(38,9),
	""population_3_years_over"" NUMBER(38,9),
	""poverty"" NUMBER(38,9),
	""sales_office_employed"" NUMBER(38,9),
	""some_college_and_associates_degree"" NUMBER(38,9),
	""walked_to_work"" NUMBER(38,9),
	""worked_at_home"" NUMBER(38,9),
	""workers_16_and_over"" NUMBER(38,9),
	""associates_degree"" NUMBER(38,9),
	""bachelors_degree"" NUMBER(38,9),
	""high_school_diploma"" NUMBER(38,9),
	""less_one_year_college"" NUMBER(38,9),
	""masters_degree"" NUMBER(38,9),
	""one_year_more_college"" NUMBER(38,9),
	""pop_25_years_over"" NUMBER(38,9),
	""pop_15_and_over"" NUMBER(38,9),
	""pop_never_married"" NUMBER(38,9),
	""pop_now_married"" NUMBER(38,9),
	""pop_separated"" NUMBER(38,9),
	""pop_widowed"" NUMBER(38,9),
	""pop_divorced"" NUMBER(38,9),
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR']
,11
table_name,ZCTA_2019_5YR
description,
DDL,"create or replace TABLE ZCTA_2019_5YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['ZCTA_2019_5YR', 'ZCTA5_2011_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2019_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2012_5YR', 'ZCTA_2020_5YR']
,12
table_name,ZIP_CODES_2016_5YR
description,
DDL,"create or replace TABLE ZIP_CODES_2016_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT
);"

Some other tables have the similar structure: ['ZIP_CODES_2016_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR', 'ZIP_CODES_2014_5YR']
Database Name: CENSUS_BUREAU_ACS_2
Schema Name: CYCLISTIC
DDL describes table information.
,0
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip"" NUMBER(38,0),
	""borough"" VARCHAR(16777216),
	""neighborhood"" VARCHAR(16777216)
);"

,1
table_name,STATE_FIPS
description,
DDL,"create or replace TABLE STATE_FIPS (
	""state"" VARCHAR(16777216),
	""postal_code"" VARCHAR(16777216),
	""fips"" NUMBER(38,0)
);"

Database Name: CENSUS_BUREAU_ACS_2
Schema Name: GEO_US_BOUNDARIES
DDL describes table information.
,0
table_name,CBSA
description,
DDL,"create or replace TABLE CBSA (
	""geo_id"" VARCHAR(16777216),
	""csa_geo_id"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""msa_indicator"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""cbsa_geom"" BINARY(8388608)
);"

,1
table_name,ADJACENT_COUNTIES
description,
DDL,"create or replace TABLE ADJACENT_COUNTIES (
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""neighbors"" VARIANT,
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,2
table_name,CONGRESS_DISTRICT_115
description,
DDL,"create or replace TABLE CONGRESS_DISTRICT_115 (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""district_fips_code"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""congress_session"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" BOOLEAN,
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""district_geom"" BINARY(8388608)
);"

Some other tables have the similar structure: ['CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116']
,3
table_name,CSA
description,
DDL,"create or replace TABLE CSA (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""msa_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""csa_geom"" BINARY(8388608)
);"

,4
table_name,NATIONAL_OUTLINE
description,
DDL,"create or replace TABLE NATIONAL_OUTLINE (
	""us_outline_geom"" BINARY(8388608),
	""aff_geo_id"" VARCHAR(16777216),
	""geo_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216)
);"

,5
table_name,METROPOLITAN_DIVISIONS
description,
DDL,"create or replace TABLE METROPOLITAN_DIVISIONS (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""cbsa_code"" VARCHAR(16777216),
	""metdiv_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""metdiv_geom"" BINARY(8388608)
);"

,6
table_name,RAILWAYS
description,
DDL,"create or replace TABLE RAILWAYS (
	""geo_id"" NUMBER(38,0),
	""full_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""railway_geom"" VARCHAR(16777216)
);"

,7
table_name,ADJACENT_STATES
description,
DDL,"create or replace TABLE ADJACENT_STATES (
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,8
table_name,CNECTA
description,
DDL,"create or replace TABLE CNECTA (
	""geo_id"" VARCHAR(16777216),
	""cnecta_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""name_lsad"" VARCHAR(16777216),
	""lsad"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""cnecta_geom"" BINARY(8388608)
);"

,9
table_name,COASTLINE
description,
DDL,"create or replace TABLE COASTLINE (
	""name"" VARCHAR(16777216),
	""coastline_geom"" BINARY(8388608)
);"

,10
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip_code"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_code"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""zip_code_geom"" BINARY(8388608)
);"

,11
table_name,COUNTIES
description,
DDL,"create or replace TABLE COUNTIES (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_gnis_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""csa_fips_code"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""met_div_fips_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""county_geom"" BINARY(8388608)
);"

,12
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,13
table_name,STATES
description,
DDL,"create or replace TABLE STATES (
	""geo_id"" VARCHAR(16777216),
	""region_code"" VARCHAR(16777216),
	""division_code"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_gnis_code"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""state_geom"" BINARY(8388608)
);"

,14
table_name,URBAN_AREAS
description,
DDL,"create or replace TABLE URBAN_AREAS (
	""geo_id"" VARCHAR(16777216),
	""urban_area_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""area_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""urban_area_geom"" BINARY(8388608)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'CENSUS_BUREAU_ACS_2': {'CENSUS_BUREAU_ACS': ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2012_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2018_5YR', 'CBSA_2007_1YR', 'CBSA_2007_3YR', 'CBSA_2008_1YR', 'CBSA_2008_3YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2010_5YR', 'CBSA_2011_1YR', 'CBSA_2011_3YR', 'CBSA_2011_5YR', 'CBSA_2012_1YR', 'CBSA_2012_3YR', 'CBSA_2012_5YR', 'CBSA_2013_1YR', 'CBSA_2013_3YR', 'CBSA_2013_5YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2015_1YR', 'CBSA_2015_5YR', 'CBSA_2016_1YR', 'CBSA_2016_5YR', 'CBSA_2017_1YR', 'CBSA_2017_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2019_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR', 'CENSUSTRACT_2020_5YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'COUNTY_2007_1YR', 'COUNTY_2007_3YR', 'COUNTY_2008_1YR', 'COUNTY_2008_3YR', 'COUNTY_2009_1YR', 'COUNTY_2009_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_3YR', 'COUNTY_2010_5YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2011_5YR', 'COUNTY_2012_1YR', 'COUNTY_2012_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_1YR', 'COUNTY_2013_3YR', 'COUNTY_2013_5YR', 'COUNTY_2014_1YR', 'COUNTY_2014_5YR', 'COUNTY_2015_1YR', 'COUNTY_2015_5YR', 'COUNTY_2016_1YR', 'COUNTY_2016_5YR', 'COUNTY_2017_1YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2018_5YR', 'COUNTY_2019_1YR', 'COUNTY_2019_5YR', 'COUNTY_2020_5YR', 'COUNTY_2021_1YR', 'PLACE_2007_1YR', 'PLACE_2007_3YR', 'PLACE_2008_1YR', 'PLACE_2008_3YR', 'PLACE_2009_1YR', 'PLACE_2009_3YR', 'PLACE_2010_1YR', 'PLACE_2010_3YR', 'PLACE_2010_5YR', 'PLACE_2011_1YR', 'PLACE_2011_3YR', 'PLACE_2011_5YR', 'PLACE_2012_1YR', 'PLACE_2012_3YR', 'PLACE_2012_5YR', 'PLACE_2013_1YR', 'PLACE_2013_3YR', 'PLACE_2013_5YR', 'PLACE_2014_1YR', 'PLACE_2014_5YR', 'PLACE_2015_1YR', 'PLACE_2015_5YR', 'PLACE_2016_1YR', 'PLACE_2016_5YR', 'PLACE_2017_1YR', 'PLACE_2017_5YR', 'PLACE_2018_1YR', 'PLACE_2018_5YR', 'PLACE_2019_1YR', 'PLACE_2019_5YR', 'PLACE_2020_5YR', 'PLACE_2021_1YR', 'PUMA_2007_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2008_3YR', 'PUMA_2009_1YR', 'PUMA_2009_3YR', 'PUMA_2010_1YR', 'PUMA_2010_3YR', 'PUMA_2010_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2011_5YR', 'PUMA_2012_1YR', 'PUMA_2012_3YR', 'PUMA_2012_5YR', 'PUMA_2013_1YR', 'PUMA_2013_3YR', 'PUMA_2013_5YR', 'PUMA_2014_1YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2015_5YR', 'PUMA_2016_1YR', 'PUMA_2016_5YR', 'PUMA_2017_1YR', 'PUMA_2017_5YR', 'PUMA_2018_1YR', 'PUMA_2018_5YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2020_5YR', 'PUMA_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'STATE_2007_1YR', 'STATE_2007_3YR', 'STATE_2008_1YR', 'STATE_2008_3YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2010_1YR', 'STATE_2010_3YR', 'STATE_2010_5YR', 'STATE_2011_1YR', 'STATE_2011_3YR', 'STATE_2011_5YR', 'STATE_2012_1YR', 'STATE_2012_3YR', 'STATE_2012_5YR', 'STATE_2013_1YR', 'STATE_2013_3YR', 'STATE_2013_5YR', 'STATE_2014_1YR', 'STATE_2014_5YR', 'STATE_2015_1YR', 'STATE_2015_5YR', 'STATE_2016_1YR', 'STATE_2016_5YR', 'STATE_2017_1YR', 'STATE_2017_5YR', 'STATE_2018_1YR', 'STATE_2018_5YR', 'STATE_2019_1YR', 'STATE_2019_5YR', 'STATE_2020_5YR', 'STATE_2021_1YR', 'ZCTA5_2011_5YR', 'ZCTA5_2012_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2019_5YR', 'ZCTA_2019_5YR', 'ZCTA_2020_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2014_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR'], 'CYCLISTIC': ['STATE_FIPS', 'ZIP_CODES'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **Table:** `CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR`
   - **"geo_id"**: Unique identifier for each state. Used to link state data with state names.
   - **"employed_manufacturing"**: Total number of employed individuals in the manufacturing sector in 2015.
   - **"employed_wholesale_trade"**: Total number of employed individuals in the wholesale trade sector in 2015.

2. **Table:** `CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR`
   - **Same columns as above for the year 2016.**

3. **Table:** `CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR`
   - **Same columns as above for the year 2017.**

4. **Table:** `CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR`
   - **Same columns as above for the year 2018.**

5. **Table:** `CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS`
   - **"state"**: Name of the state.
   - **"postal_code"**: State postal abbreviation.
   - **"fips"**: State FIPS code, used to join with "geo_id" in the state tables.

**Potential Usage:**

- **"geo_id"**: Used to identify and join state-level data across tables.
- **"employed_manufacturing"**: Provides the total number of workers in manufacturing per state per year.
- **"employed_wholesale_trade"**: Provides the total number of workers in wholesale trade per state per year.
- **"state"**: Used to obtain the state name for reporting.
- **Conditions that may be used**:
  - Joining conditions between "fips" (from `STATE_FIPS`) and substrings of "geo_id" (from state tables) to match state codes.
  - Filtering out entries where employment data is missing (`IS NOT NULL` conditions).
  - Calculating the number of vulnerable workers by applying the given percentages.

---

**SQL Queries:**

1. **Retrieve state FIPS codes and names:**

   ```sql
   SELECT "fips", "state"
   FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS
   LIMIT 100;
   ```

2. **Get unique "geo_id" values from `STATE_2015_5YR`:**

   ```sql
   SELECT DISTINCT "geo_id"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   LIMIT 100;
   ```

3. **View manufacturing employment data for 2015:**

   ```sql
   SELECT "geo_id", "employed_manufacturing"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   WHERE "employed_manufacturing" IS NOT NULL
   LIMIT 100;
   ```

4. **View wholesale trade employment data for 2015:**

   ```sql
   SELECT "geo_id", "employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   WHERE "employed_wholesale_trade" IS NOT NULL
   LIMIT 100;
   ```

5. **Join `STATE_FIPS` with `STATE_2015_5YR` to get state names and employment data:**

   ```sql
   SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
   JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
     ON sf."fips" = SUBSTRING(s."geo_id", 10, 2)
   LIMIT 100;
   ```

6. **Calculate vulnerable workers in manufacturing for 2015:**

   ```sql
   SELECT s."geo_id", s."employed_manufacturing",
          s."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
   WHERE s."employed_manufacturing" IS NOT NULL
   LIMIT 100;
   ```

7. **Calculate vulnerable workers in wholesale trade for 2015:**

   ```sql
   SELECT s."geo_id", s."employed_wholesale_trade",
          s."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
   WHERE s."employed_wholesale_trade" IS NOT NULL
   LIMIT 100;
   ```

8. **Get employment data from `STATE_2016_5YR`:**

   ```sql
   SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
   LIMIT 100;
   ```

9. **Calculate average manufacturing employment over 2015-2018 per state:**

   ```sql
   SELECT s."geo_id", AVG(s."employed_manufacturing") AS "avg_employed_manufacturing"
   FROM (
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
   ) s
   GROUP BY s."geo_id"
   LIMIT 100;
   ```

10. **Calculate total vulnerable workers in manufacturing over 2015-2018:**

    ```sql
    SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
    FROM (
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
    ) s
    GROUP BY s."geo_id"
    LIMIT 100;
    ```

11. **Calculate total vulnerable workers in wholesale trade over 2015-2018:**

    ```sql
    SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
    FROM (
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
    ) s
    GROUP BY s."geo_id"
    LIMIT 100;
    ```

12. **Join state names with total vulnerable workers data:**

    ```sql
    SELECT sf."state", vm."total_vulnerable_manufacturing", vw."total_vulnerable_wholesale"
    FROM (
      SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
      FROM (
        SELECT "geo_id", "employed_manufacturing"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
        UNION ALL
        SELECT "geo_id", "employed_manufacturing"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
        UNION ALL
        SELECT "geo_id", "employed_manufacturing"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
        UNION ALL
        SELECT "geo_id", "employed_manufacturing"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
      ) s
      GROUP BY s."geo_id"
    ) vm
    JOIN (
      SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
      FROM (
        SELECT "geo_id", "employed_wholesale_trade"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
        UNION ALL
        SELECT "geo_id", "employed_wholesale_trade"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
        UNION ALL
        SELECT "geo_id", "employed_wholesale_trade"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
        UNION ALL
        SELECT "geo_id", "employed_wholesale_trade"
        FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
      ) s
      GROUP BY s."geo_id"
    ) vw ON vm."geo_id" = vw."geo_id"
    JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
      ON sf."fips" = SUBSTRING(vm."geo_id", 10, 2)
    ORDER BY (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") DESC
    LIMIT 100;
    ```

13. **View median income differences by ZIP code from `ZIP_CODES_2015_5YR`:**

    ```sql
    SELECT "geo_id", "median_income"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
    WHERE "median_income" IS NOT NULL
    LIMIT 100;
    ```

14. **Retrieve ZIP codes and their corresponding states:**

    ```sql
    SELECT zc."zip_code", zc."state_fips_code", sf."state"
    FROM CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES zc
    JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
      ON zc."state_fips_code" = sf."fips"
    LIMIT 100;
    ```

15. **Calculate average median income per state based on ZIP codes:**

    ```sql
    SELECT sf."state", AVG(zc."median_income") AS "avg_median_income"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR zc
    JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz
      ON zc."geo_id" = gz."zip_code"
    JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
      ON gz."state_fips_code" = sf."fips"
    WHERE zc."median_income" IS NOT NULL
    GROUP BY sf."state"
    LIMIT 100;
    ```

---

These queries allow for an understanding of the relevant data in the tables and how they can be used to calculate the total number of vulnerable workers per state based on employment in the manufacturing and wholesale trade sectors from 2015 to 2018.Query:
SELECT "fips", "state"
   FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS
   LIMIT 100;
Answer:
fips,state
1,Alabama
2,Alaska
4,Arizona
5,Arkansas
6,California
8,Colorado
9,Connecticut
10,Delaware
12,Florida
13,Georgia
15,Hawaii
16,Idaho
17,Illinois
18,Indiana
19,Iowa
20,Kansas
21,Kentucky
22,Louisiana
23,Maine
24,Maryland
25,Massachusetts
26,Michigan
27,Minnesota
28,Mississippi
29,Missouri
30,Montana
31,Nebraska
32,Nevada
33,New Hampshire
34,New Jersey
35,New Mexico
36,New York
37,North Carolina
38,North Dakota
39,Ohio
40,Oklahoma
41,Oregon
42,Pennsylvania
44,Rhode Island
45,South Carolina
46,South Dakota
47,Tennessee
48,Texas
49,Utah
50,Vermont
51,Virginia
53,Washington
54,West Virginia
55,Wisconsin
56,Wyoming
60,American Samoa
66,Guam
69,Northern Mariana Islands
72,Puerto Rico
78,Virgin Islands
Query:
SELECT DISTINCT "geo_id"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   LIMIT 100;
Answer:
geo_id
16
48
49
12
37
45
13
04
32
11
36
44
09
19
17
39
26
31
55
20
06
29
38
30
22
51
08
28
02
42
18
46
27
21
53
05
25
34
50
54
23
56
47
24
33
40
15
01
35
72
10
41
Query:
SELECT "geo_id", "employed_manufacturing"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   WHERE "employed_manufacturing" IS NOT NULL
   LIMIT 100;
Answer:
geo_id,employed_manufacturing
16,70553.0
48,1105985.0
49,146542.0
12,445101.0
37,545160.0
45,286743.0
13,468172.0
04,204240.0
32,52723.0
11,4356.0
36,600408.0
44,56613.0
25,313474.0
42,729883.0
09,191286.0
34,361404.0
19,239613.0
17,765301.0
39,831030.0
26,776736.0
31,105135.0
18,569228.0
55,532873.0
20,176444.0
50,35282.0
54,60727.0
23,60551.0
06,1687092.0
46,42605.0
29,319724.0
27,382798.0
38,26531.0
30,21934.0
24,140892.0
33,89019.0
40,169899.0
41,204094.0
56,11694.0
72,96303.0
22,160133.0
21,264406.0
15,19767.0
53,340891.0
51,289554.0
01,281016.0
35,41183.0
08,182453.0
28,159965.0
47,377952.0
10,39404.0
02,12098.0
05,170593.0
Query:
SELECT "geo_id", "employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
   WHERE "employed_wholesale_trade" IS NOT NULL
   LIMIT 100;
Answer:
geo_id,employed_wholesale_trade
16,18663.0
48,363612.0
49,34689.0
12,245029.0
37,118226.0
45,56022.0
13,125340.0
04,67492.0
32,26001.0
11,1799.0
36,229075.0
44,13216.0
25,81114.0
42,168873.0
09,44581.0
34,147081.0
19,44824.0
17,184522.0
39,147353.0
26,106578.0
31,26947.0
18,79429.0
55,76802.0
20,39010.0
50,7110.0
54,16321.0
23,14886.0
06,527004.0
46,12771.0
29,75407.0
27,81498.0
38,13273.0
30,11008.0
24,58552.0
33,21073.0
40,45720.0
41,51908.0
56,6033.0
72,29562.0
22,52115.0
21,47783.0
15,14845.0
53,95060.0
51,76555.0
01,50843.0
35,19106.0
08,68120.0
28,31000.0
47,78856.0
10,8176.0
02,6634.0
05,30692.0
Query:
SELECT sf."state", s."employed_manufacturing", s."employed_wholesale_trade"
FROM CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
  ON sf."fips" = TO_NUMBER(s."geo_id")
LIMIT 100;
Answer:
state,employed_manufacturing,employed_wholesale_trade
Alabama,281016.0,50843.0
Alaska,12098.0,6634.0
Arizona,204240.0,67492.0
Arkansas,170593.0,30692.0
California,1687092.0,527004.0
Colorado,182453.0,68120.0
Connecticut,191286.0,44581.0
Delaware,39404.0,8176.0
Florida,445101.0,245029.0
Georgia,468172.0,125340.0
Hawaii,19767.0,14845.0
Idaho,70553.0,18663.0
Illinois,765301.0,184522.0
Indiana,569228.0,79429.0
Iowa,239613.0,44824.0
Kansas,176444.0,39010.0
Kentucky,264406.0,47783.0
Louisiana,160133.0,52115.0
Maine,60551.0,14886.0
Maryland,140892.0,58552.0
Massachusetts,313474.0,81114.0
Michigan,776736.0,106578.0
Minnesota,382798.0,81498.0
Mississippi,159965.0,31000.0
Missouri,319724.0,75407.0
Montana,21934.0,11008.0
Nebraska,105135.0,26947.0
Nevada,52723.0,26001.0
New Hampshire,89019.0,21073.0
New Jersey,361404.0,147081.0
New Mexico,41183.0,19106.0
New York,600408.0,229075.0
North Carolina,545160.0,118226.0
North Dakota,26531.0,13273.0
Ohio,831030.0,147353.0
Oklahoma,169899.0,45720.0
Oregon,204094.0,51908.0
Pennsylvania,729883.0,168873.0
Rhode Island,56613.0,13216.0
South Carolina,286743.0,56022.0
South Dakota,42605.0,12771.0
Tennessee,377952.0,78856.0
Texas,1105985.0,363612.0
Utah,146542.0,34689.0
Vermont,35282.0,7110.0
Virginia,289554.0,76555.0
Washington,340891.0,95060.0
West Virginia,60727.0,16321.0
Wisconsin,532873.0,76802.0
Wyoming,11694.0,6033.0
Puerto Rico,96303.0,29562.0
Query:
SELECT s."geo_id", s."employed_manufacturing",
          s."employed_manufacturing" * 0.41 AS "vulnerable_manufacturing"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
   WHERE s."employed_manufacturing" IS NOT NULL
   LIMIT 100;
Answer:
geo_id,employed_manufacturing,vulnerable_manufacturing
16,70553.0,28926.73
48,1105985.0,453453.85
49,146542.0,60082.219999999994
12,445101.0,182491.41
37,545160.0,223515.59999999998
45,286743.0,117564.62999999999
13,468172.0,191950.52
04,204240.0,83738.4
32,52723.0,21616.43
11,4356.0,1785.9599999999998
36,600408.0,246167.28
44,56613.0,23211.329999999998
25,313474.0,128524.34
42,729883.0,299252.02999999997
09,191286.0,78427.26
34,361404.0,148175.63999999998
19,239613.0,98241.32999999999
17,765301.0,313773.41
39,831030.0,340722.3
26,776736.0,318461.76
31,105135.0,43105.35
18,569228.0,233383.47999999998
55,532873.0,218477.93
20,176444.0,72342.04
50,35282.0,14465.619999999999
54,60727.0,24898.07
23,60551.0,24825.91
06,1687092.0,691707.72
46,42605.0,17468.05
29,319724.0,131086.84
27,382798.0,156947.18
38,26531.0,10877.71
30,21934.0,8992.939999999999
24,140892.0,57765.719999999994
33,89019.0,36497.79
40,169899.0,69658.59
41,204094.0,83678.54
56,11694.0,4794.54
72,96303.0,39484.229999999996
22,160133.0,65654.53
21,264406.0,108406.45999999999
15,19767.0,8104.469999999999
53,340891.0,139765.31
51,289554.0,118717.14
01,281016.0,115216.56
35,41183.0,16885.03
08,182453.0,74805.73
28,159965.0,65585.65
47,377952.0,154960.31999999998
10,39404.0,16155.64
02,12098.0,4960.179999999999
05,170593.0,69943.12999999999
Query:
SELECT s."geo_id", s."employed_wholesale_trade",
          s."employed_wholesale_trade" * 0.38 AS "vulnerable_wholesale"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR s
   WHERE s."employed_wholesale_trade" IS NOT NULL
   LIMIT 100;
Answer:
geo_id,employed_wholesale_trade,vulnerable_wholesale
16,18663.0,7091.9400000000005
48,363612.0,138172.56
49,34689.0,13181.82
12,245029.0,93111.02
37,118226.0,44925.88
45,56022.0,21288.36
13,125340.0,47629.2
04,67492.0,25646.96
32,26001.0,9880.380000000001
11,1799.0,683.62
36,229075.0,87048.5
44,13216.0,5022.08
25,81114.0,30823.32
42,168873.0,64171.74
09,44581.0,16940.78
34,147081.0,55890.78
19,44824.0,17033.12
17,184522.0,70118.36
39,147353.0,55994.14
26,106578.0,40499.64
31,26947.0,10239.86
18,79429.0,30183.02
55,76802.0,29184.760000000002
20,39010.0,14823.8
50,7110.0,2701.8
54,16321.0,6201.9800000000005
23,14886.0,5656.68
06,527004.0,200261.52
46,12771.0,4852.9800000000005
29,75407.0,28654.66
27,81498.0,30969.24
38,13273.0,5043.74
30,11008.0,4183.04
24,58552.0,22249.760000000002
33,21073.0,8007.74
40,45720.0,17373.6
41,51908.0,19725.04
56,6033.0,2292.54
72,29562.0,11233.56
22,52115.0,19803.7
21,47783.0,18157.54
15,14845.0,5641.1
53,95060.0,36122.8
51,76555.0,29090.9
01,50843.0,19320.34
35,19106.0,7260.28
08,68120.0,25885.6
28,31000.0,11780.0
47,78856.0,29965.28
10,8176.0,3106.88
02,6634.0,2520.92
05,30692.0,11662.960000000001
Query:
SELECT "geo_id", "employed_manufacturing", "employed_wholesale_trade"
   FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
   LIMIT 100;
Answer:
geo_id,employed_manufacturing,employed_wholesale_trade
02,12882.0,6623.0
16,71648.0,19006.0
12,451950.0,244721.0
48,1105928.0,371317.0
45,293796.0,56511.0
49,148823.0,35772.0
37,552844.0,117781.0
13,480335.0,128010.0
04,206492.0,67141.0
32,54565.0,26373.0
11,4480.0,1919.0
36,592969.0,229666.0
44,57182.0,13079.0
25,314483.0,80217.0
42,727257.0,168855.0
09,190713.0,45110.0
34,359514.0,147187.0
39,841515.0,148026.0
19,241775.0,45637.0
17,763429.0,187477.0
26,802506.0,106770.0
31,105866.0,27389.0
20,178621.0,39174.0
55,536806.0,77724.0
18,579772.0,80746.0
54,60035.0,16430.0
50,35666.0,7229.0
23,60195.0,15000.0
06,1697080.0,530690.0
46,43188.0,13025.0
27,388089.0,81877.0
24,138256.0,57967.0
38,26976.0,13858.0
29,326225.0,75937.0
40,170162.0,45320.0
33,90220.0,20751.0
30,22275.0,11542.0
72,96031.0,29463.0
15,19864.0,15241.0
41,208442.0,53736.0
56,11406.0,5970.0
22,159899.0,52387.0
21,274015.0,48474.0
53,350233.0,95021.0
51,291635.0,75731.0
01,286717.0,51708.0
08,185728.0,69293.0
35,39147.0,18207.0
47,382205.0,77447.0
28,162983.0,30106.0
10,37747.0,8040.0
05,171816.0,30202.0
Query:
SELECT s."geo_id", AVG(s."employed_manufacturing") AS "avg_employed_manufacturing"
   FROM (
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
     UNION ALL
     SELECT "geo_id", "employed_manufacturing"
     FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
   ) s
   GROUP BY s."geo_id"
   LIMIT 100;
Answer:
geo_id,avg_employed_manufacturing
16,72609.0
48,1111391.75
49,150034.25
12,457284.75
37,561529.25
45,296387.25
13,484349.75
04,207764.5
32,56320.25
11,4524.75
36,589385.25
44,56832.75
25,315730.25
42,727980.75
09,191128.25
34,360914.75
19,240716.5
17,761045.25
26,816103.25
18,584227.5
55,537901.75
54,60028.75
46,43789.25
27,388898.0
30,22830.5
24,137807.75
33,89727.5
22,159476.0
51,290578.75
01,288788.0
35,38452.0
02,12642.75
39,843237.25
20,177878.25
06,1700467.0
29,326576.75
38,27110.75
21,275558.5
47,387596.5
10,38055.5
15,20012.0
23,60120.75
72,94182.25
28,162560.25
31,104860.5
50,35173.75
40,170004.25
41,212126.0
56,11748.0
53,349686.25
08,186938.25
05,172081.75
Query:
SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
    FROM (
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
      UNION ALL
      SELECT "geo_id", "employed_manufacturing"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
    ) s
    GROUP BY s."geo_id"
    LIMIT 100;
Answer:
geo_id,total_vulnerable_manufacturing
16,119078.76
48,1822682.47
49,246056.16999999998
12,749946.99
37,920907.97
45,486075.08999999997
13,794333.59
04,340733.77999999997
32,92365.20999999999
11,7420.589999999999
36,966591.8099999999
44,93205.70999999999
25,517797.61
42,1193888.43
09,313450.32999999996
34,591900.19
19,394775.05999999994
17,1248114.21
26,1338409.3299999998
18,958133.1
55,882158.87
54,98447.15
46,71814.37
27,637792.72
30,37442.02
24,226004.71
33,147153.09999999998
22,261540.63999999998
51,476549.14999999997
01,473612.31999999995
35,63061.28
02,20734.109999999997
39,1382909.0899999999
20,291720.32999999996
06,2788765.88
29,535585.87
38,44461.63
21,451915.93999999994
47,635658.26
10,62411.02
15,32819.68
23,98598.03
72,154458.88999999998
28,266598.81
31,171971.22
50,57684.95
40,278806.97
41,347886.64
56,19266.72
53,573485.45
08,306578.73
05,282214.07
Query:
SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
    FROM (
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
      UNION ALL
      SELECT "geo_id", "employed_wholesale_trade"
      FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
    ) s
    GROUP BY s."geo_id"
    LIMIT 100;
Answer:
geo_id,total_vulnerable_wholesale
16,29419.22
48,568852.4
49,55046.42
12,374879.88
37,179610.03999999998
45,86164.62
13,196486.97999999998
04,104425.52
32,41319.68
11,2878.5
36,346401.16000000003
44,20003.2
25,121978.1
42,257257.34
09,68075.48
34,225327.46
19,69384.58
17,285551.38
26,163792.54
18,122345.94
55,119065.02
54,24984.62
46,19555.56
27,125729.46
30,17593.239999999998
24,87132.1
33,31223.84
22,79477.76000000001
51,115705.44
01,78733.72
35,27371.4
02,9863.66
39,224935.3
20,60211.380000000005
06,805342.36
29,116323.7
38,21185.0
21,73297.06
47,119393.72
10,12761.92
15,23131.36
23,22305.24
72,44022.240000000005
28,45885.0
31,41922.36
50,10758.94
40,69375.45999999999
41,82045.42
56,8786.36
53,146509.76
08,105457.22
05,46436.380000000005
Query:
WITH vm AS (
  SELECT s."geo_id", SUM(s."employed_manufacturing" * 0.41) AS "total_vulnerable_manufacturing"
  FROM (
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_manufacturing" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
),
vw AS (
  SELECT s."geo_id", SUM(s."employed_wholesale_trade" * 0.38) AS "total_vulnerable_wholesale"
  FROM (
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
    UNION ALL
    SELECT "geo_id", "employed_wholesale_trade" FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
  ) s
  GROUP BY s."geo_id"
)
SELECT
  sf."state",
  vm."total_vulnerable_manufacturing",
  vw."total_vulnerable_wholesale",
  (vm."total_vulnerable_manufacturing" + vw."total_vulnerable_wholesale") AS "total_vulnerable_workers"
FROM vm
JOIN vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY "total_vulnerable_workers" DESC
LIMIT 100;
Answer:
state,total_vulnerable_manufacturing,total_vulnerable_wholesale,total_vulnerable_workers
California,2788765.88,805342.36,3594108.2399999998
Texas,1822682.47,568852.4,2391534.87
Ohio,1382909.0899999999,224935.3,1607844.39
Illinois,1248114.21,285551.38,1533665.5899999999
Michigan,1338409.3299999998,163792.54,1502201.8699999999
Pennsylvania,1193888.43,257257.34,1451145.77
New York,966591.8099999999,346401.16000000003,1312992.97
Florida,749946.99,374879.88,1124826.87
North Carolina,920907.97,179610.03999999998,1100518.01
Indiana,958133.1,122345.94,1080479.04
Wisconsin,882158.87,119065.02,1001223.89
Georgia,794333.59,196486.97999999998,990820.57
New Jersey,591900.19,225327.46,817227.6499999999
Minnesota,637792.72,125729.46,763522.1799999999
Tennessee,635658.26,119393.72,755051.98
Washington,573485.45,146509.76,719995.21
Missouri,535585.87,116323.7,651909.57
Massachusetts,517797.61,121978.1,639775.71
Virginia,476549.14999999997,115705.44,592254.59
South Carolina,486075.08999999997,86164.62,572239.71
Alabama,473612.31999999995,78733.72,552346.0399999999
Kentucky,451915.93999999994,73297.06,525213.0
Iowa,394775.05999999994,69384.58,464159.63999999996
Arizona,340733.77999999997,104425.52,445159.3
Oregon,347886.64,82045.42,429932.06
Colorado,306578.73,105457.22,412035.94999999995
Connecticut,313450.32999999996,68075.48,381525.80999999994
Kansas,291720.32999999996,60211.380000000005,351931.70999999996
Oklahoma,278806.97,69375.45999999999,348182.42999999993
Louisiana,261540.63999999998,79477.76000000001,341018.4
Arkansas,282214.07,46436.380000000005,328650.45
Maryland,226004.71,87132.1,313136.81
Mississippi,266598.81,45885.0,312483.81
Utah,246056.16999999998,55046.42,301102.58999999997
Nebraska,171971.22,41922.36,213893.58000000002
Puerto Rico,154458.88999999998,44022.240000000005,198481.13
New Hampshire,147153.09999999998,31223.84,178376.93999999997
Idaho,119078.76,29419.22,148497.97999999998
Nevada,92365.20999999999,41319.68,133684.88999999998
West Virginia,98447.15,24984.62,123431.76999999999
Maine,98598.03,22305.24,120903.27
Rhode Island,93205.70999999999,20003.2,113208.90999999999
South Dakota,71814.37,19555.56,91369.93
New Mexico,63061.28,27371.4,90432.68
Delaware,62411.02,12761.92,75172.94
Vermont,57684.95,10758.94,68443.89
North Dakota,44461.63,21185.0,65646.63
Hawaii,32819.68,23131.36,55951.04
Montana,37442.02,17593.239999999998,55035.259999999995
Alaska,20734.109999999997,9863.66,30597.769999999997
Wyoming,19266.72,8786.36,28053.08
Query:
-- Query 1 requires no correction.

SELECT "geo_id", "median_income"
FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
WHERE "median_income" IS NOT NULL
LIMIT 100
Answer:
geo_id,median_income
98304,36746.000000000
22714,74625.000000000
69128,56471.000000000
97908,22321.000000000
37228,15540.000000000
97486,62083.000000000
04491,27500.000000000
11005,58894.000000000
04936,40469.000000000
63102,39855.000000000
06793,81711.000000000
44669,67981.000000000
96109,29958.000000000
15638,51304.000000000
36263,41875.000000000
16853,39861.000000000
08352,67348.000000000
72536,22917.000000000
59926,29722.000000000
96084,34732.000000000
97011,39975.000000000
12444,38229.000000000
15561,56429.000000000
58488,60729.000000000
52219,44063.000000000
26852,31532.000000000
38588,40815.000000000
47584,40208.000000000
31038,43553.000000000
37326,21250.000000000
95560,35987.000000000
88348,19000.000000000
97484,38854.000000000
66850,90417.000000000
59755,28750.000000000
72136,36995.000000000
17101,28615.000000000
80830,51953.000000000
99638,35000.000000000
95443,15690.000000000
59731,37115.000000000
68416,40000.000000000
57766,64583.000000000
13404,32500.000000000
95497,75598.000000000
37219,50700.000000000
73556,37813.000000000
54948,41250.000000000
19436,55208.000000000
18503,14643.000000000
31527,66667.000000000
86444,21484.000000000
23153,75833.000000000
94970,93750.000000000
12481,54467.000000000
25879,22548.000000000
65335,50250.000000000
81121,40893.000000000
59927,47813.000000000
12548,56625.000000000
94569,110347.000000000
95728,58354.000000000
60661,98882.000000000
14480,38015.000000000
93517,61250.000000000
66944,25000.000000000
77002,62089.000000000
21766,28828.000000000
99153,32955.000000000
97145,56667.000000000
34289,42451.000000000
29614,27065.000000000
20006,34125.000000000
87531,48625.000000000
98134,52981.000000000
05034,95833.000000000
12517,60469.000000000
17027,65673.000000000
23968,32566.000000000
71970,30000.000000000
16691,45000.000000000
12847,62917.000000000
78215,51853.000000000
49918,32500.000000000
93424,74563.000000000
21734,52969.000000000
67202,40273.000000000
21872,61029.000000000
41180,20857.000000000
21130,53393.000000000
84334,54680.000000000
49628,45179.000000000
99131,44167.000000000
65064,54722.000000000
27862,39375.000000000
55615,42857.000000000
97108,51250.000000000
08212,53125.000000000
02558,42542.000000000
05654,40491.000000000
Query:
-- Corrected SQL for Query 2:

SELECT zc."zip_code", zc."state_fips_code", sf."state"
FROM CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES zc
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
  ON sf."fips" = TO_NUMBER(zc."state_fips_code")
LIMIT 100
Answer:
zip_code,state_fips_code,state
95665,06,California
93628,06,California
73722,40,Oklahoma
57010,46,South Dakota
66834,20,Kansas
78244,48,Texas
89423,32,Nevada
66851,20,Kansas
68406,31,Nebraska
39166,28,Mississippi
87540,35,New Mexico
87310,35,New Mexico
77089,48,Texas
53586,55,Wisconsin
65231,29,Missouri
73034,40,Oklahoma
57117,46,South Dakota
87104,35,New Mexico
92570,06,California
78015,48,Texas
68742,31,Nebraska
75104,48,Texas
75044,48,Texas
64448,29,Missouri
78012,48,Texas
84069,49,Utah
81610,08,Colorado
89003,32,Nevada
71326,22,Louisiana
67880,20,Kansas
67638,20,Kansas
95944,06,California
56116,27,Minnesota
87026,35,New Mexico
76578,48,Texas
39483,28,Mississippi
84307,49,Utah
68863,31,Nebraska
68833,31,Nebraska
84031,49,Utah
78676,48,Texas
71935,05,Arkansas
85724,04,Arizona
74063,40,Oklahoma
70721,22,Louisiana
74851,40,Oklahoma
93203,06,California
72633,05,Arkansas
68455,31,Nebraska
84072,49,Utah
76933,48,Texas
78248,48,Texas
81027,08,Colorado
64081,29,Missouri
91351,06,California
79529,48,Texas
93648,06,California
51533,19,Iowa
67215,20,Kansas
74011,40,Oklahoma
61490,17,Illinois
76252,48,Texas
92003,06,California
72084,05,Arkansas
95443,06,California
64082,29,Missouri
51448,19,Iowa
84626,49,Utah
74850,40,Oklahoma
72099,05,Arkansas
78963,48,Texas
95978,06,California
91423,06,California
64862,29,Missouri
79085,48,Texas
70757,22,Louisiana
64146,29,Missouri
80218,08,Colorado
78340,48,Texas
87827,35,New Mexico
89145,32,Nevada
56186,27,Minnesota
65237,29,Missouri
85726,04,Arizona
85704,04,Arizona
74901,40,Oklahoma
78113,48,Texas
94044,06,California
65542,29,Missouri
64076,29,Missouri
67057,20,Kansas
87041,35,New Mexico
72773,05,Arkansas
68106,31,Nebraska
72347,05,Arkansas
74565,40,Oklahoma
66416,20,Kansas
71940,05,Arkansas
79707,48,Texas
76627,48,Texas
Query:
-- Corrected SQL for Query 3:

SELECT sf."state", AVG(zc."median_income") AS "avg_median_income"
FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR zc
JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz
  ON zc."geo_id" = gz."zip_code"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
  ON sf."fips" = TO_NUMBER(gz."state_fips_code")
WHERE zc."median_income" IS NOT NULL
GROUP BY sf."state"
LIMIT 100
Answer:
state,avg_median_income
Mississippi,36662.622107969152
Kansas,51460.342301943199
Colorado,57221.792016806723
South Dakota,51359.805157593123
North Carolina,45257.902061855670
Nebraska,53548.970070422535
Connecticut,82778.750000000000
Maryland,81364.724770642202
Nevada,56178.961038961039
Oklahoma,45096.753184713376
New York,64414.180998196031
Tennessee,43189.231281198003
Indiana,50774.230245231608
Arizona,47523.145161290323
Delaware,62135.118644067797
New Mexico,41351.536585365854
Massachusetts,76605.387596899225
Alabama,41469.510924369748
Oregon,48774.124031007752
Iowa,53989.839383938394
Virginia,59606.867484662577
Montana,47140.591591591592
South Carolina,41755.236180904523
Wyoming,57587.204379562044
Ohio,50482.352372583480
Puerto Rico,19486.488188976378
Washington,56289.487318840580
Missouri,45486.410973084886
Minnesota,56981.203703703704
North Dakota,59641.960893854749
Hawaii,62828.317647058824
Kentucky,40778.222056631893
Texas,52473.580878265703
Utah,58576.776119402985
West Virginia,40006.805152979066
Louisiana,43622.517894736842
Pennsylvania,53663.853396901073
New Jersey,84731.633975481611
Georgia,45056.451936872310
Alaska,51970.579185520362
Arkansas,38665.887218045113
Wisconsin,53678.075098814229
Rhode Island,68163.242857142857
Florida,49679.129100529101
Maine,48590.931203931204
New Hampshire,68107.037344398340
Michigan,49727.167189132706
California,63686.200609756098
Idaho,45327.304687500000
Vermont,55505.000000000000
Illinois,56748.210176991150
End Exploring Related Columns
Task: List states in order of the total number of vulnerable workers, including the state name, the number of vulnerable workers in wholesale trade (38% of workers in that sector), and the number of vulnerable workers in manufacturing (41% of workers in that sector), based on 2015-2018 median income differences by ZIP code.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
State1,vulnerable_wholesale1:int,vulnerable_manufacturing1:int,total_vulnerable1:int
State2,vulnerable_wholesale2:int,vulnerable_manufacturing2:int,total_vulnerable2:int
...
```
*(Attention: States are listed in descending order of Total_Vulnerable_Workers.)*

**Explanation:**

- **State**: The name of the state.
- **Wholesale_Vulnerable_Workers**: Number of vulnerable workers in the wholesale trade sector, calculated as 38% of the total employed in wholesale trade in the state.
- **Manufacturing_Vulnerable_Workers**: Number of vulnerable workers in the manufacturing sector, calculated as 41% of the total employed in manufacturing in the state.
- **Total_Vulnerable_Workers**: Sum of vulnerable workers in both sectors for the state.

To generate this list, you would:

1. **Retrieve employment data** for each state from the relevant tables (e.g., `STATE_2015_5YR` to `STATE_2018_5YR` in the `CENSUS_BUREAU_ACS` schema).
2. **Calculate vulnerable workers** in each sector by applying the given percentages:
   - Vulnerable workers in wholesale trade = Total employed in wholesale trade * 38%
   - Vulnerable workers in manufacturing = Total employed in manufacturing * 41%
3. **Sum the vulnerable workers** from both sectors to get the total vulnerable workers per state.
4. **Order the states** in descending order based on the total number of vulnerable workers.

This format provides a clear and organized way to present the required information..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'CENSUS_BUREAU_ACS_2': {'CENSUS_BUREAU_ACS': ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2012_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2018_5YR', 'CBSA_2007_1YR', 'CBSA_2007_3YR', 'CBSA_2008_1YR', 'CBSA_2008_3YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2010_5YR', 'CBSA_2011_1YR', 'CBSA_2011_3YR', 'CBSA_2011_5YR', 'CBSA_2012_1YR', 'CBSA_2012_3YR', 'CBSA_2012_5YR', 'CBSA_2013_1YR', 'CBSA_2013_3YR', 'CBSA_2013_5YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2015_1YR', 'CBSA_2015_5YR', 'CBSA_2016_1YR', 'CBSA_2016_5YR', 'CBSA_2017_1YR', 'CBSA_2017_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2019_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR', 'CENSUSTRACT_2020_5YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'COUNTY_2007_1YR', 'COUNTY_2007_3YR', 'COUNTY_2008_1YR', 'COUNTY_2008_3YR', 'COUNTY_2009_1YR', 'COUNTY_2009_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_3YR', 'COUNTY_2010_5YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2011_5YR', 'COUNTY_2012_1YR', 'COUNTY_2012_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_1YR', 'COUNTY_2013_3YR', 'COUNTY_2013_5YR', 'COUNTY_2014_1YR', 'COUNTY_2014_5YR', 'COUNTY_2015_1YR', 'COUNTY_2015_5YR', 'COUNTY_2016_1YR', 'COUNTY_2016_5YR', 'COUNTY_2017_1YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2018_5YR', 'COUNTY_2019_1YR', 'COUNTY_2019_5YR', 'COUNTY_2020_5YR', 'COUNTY_2021_1YR', 'PLACE_2007_1YR', 'PLACE_2007_3YR', 'PLACE_2008_1YR', 'PLACE_2008_3YR', 'PLACE_2009_1YR', 'PLACE_2009_3YR', 'PLACE_2010_1YR', 'PLACE_2010_3YR', 'PLACE_2010_5YR', 'PLACE_2011_1YR', 'PLACE_2011_3YR', 'PLACE_2011_5YR', 'PLACE_2012_1YR', 'PLACE_2012_3YR', 'PLACE_2012_5YR', 'PLACE_2013_1YR', 'PLACE_2013_3YR', 'PLACE_2013_5YR', 'PLACE_2014_1YR', 'PLACE_2014_5YR', 'PLACE_2015_1YR', 'PLACE_2015_5YR', 'PLACE_2016_1YR', 'PLACE_2016_5YR', 'PLACE_2017_1YR', 'PLACE_2017_5YR', 'PLACE_2018_1YR', 'PLACE_2018_5YR', 'PLACE_2019_1YR', 'PLACE_2019_5YR', 'PLACE_2020_5YR', 'PLACE_2021_1YR', 'PUMA_2007_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2008_3YR', 'PUMA_2009_1YR', 'PUMA_2009_3YR', 'PUMA_2010_1YR', 'PUMA_2010_3YR', 'PUMA_2010_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2011_5YR', 'PUMA_2012_1YR', 'PUMA_2012_3YR', 'PUMA_2012_5YR', 'PUMA_2013_1YR', 'PUMA_2013_3YR', 'PUMA_2013_5YR', 'PUMA_2014_1YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2015_5YR', 'PUMA_2016_1YR', 'PUMA_2016_5YR', 'PUMA_2017_1YR', 'PUMA_2017_5YR', 'PUMA_2018_1YR', 'PUMA_2018_5YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2020_5YR', 'PUMA_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'STATE_2007_1YR', 'STATE_2007_3YR', 'STATE_2008_1YR', 'STATE_2008_3YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2010_1YR', 'STATE_2010_3YR', 'STATE_2010_5YR', 'STATE_2011_1YR', 'STATE_2011_3YR', 'STATE_2011_5YR', 'STATE_2012_1YR', 'STATE_2012_3YR', 'STATE_2012_5YR', 'STATE_2013_1YR', 'STATE_2013_3YR', 'STATE_2013_5YR', 'STATE_2014_1YR', 'STATE_2014_5YR', 'STATE_2015_1YR', 'STATE_2015_5YR', 'STATE_2016_1YR', 'STATE_2016_5YR', 'STATE_2017_1YR', 'STATE_2017_5YR', 'STATE_2018_1YR', 'STATE_2018_5YR', 'STATE_2019_1YR', 'STATE_2019_5YR', 'STATE_2020_5YR', 'STATE_2021_1YR', 'ZCTA5_2011_5YR', 'ZCTA5_2012_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2019_5YR', 'ZCTA_2019_5YR', 'ZCTA_2020_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2014_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR'], 'CYCLISTIC': ['STATE_FIPS', 'ZIP_CODES'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-26 06:56:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:56:41 - root - INFO - ```sql
WITH union_manufacturing AS (
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
),
vm AS (
  SELECT
    "geo_id",
    SUM("employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers"
  FROM union_manufacturing
  GROUP BY "geo_id"
),
union_wholesale AS (
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
),
vw AS (
  SELECT
    "geo_id",
    SUM("employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
  FROM union_wholesale
  GROUP BY "geo_id"
)
SELECT
  sf."state" AS "State",
  vw."Wholesale_Vulnerable_Workers",
  vm."Manufacturing_Vulnerable_Workers",
  (vw."Wholesale_Vulnerable_Workers" + vm."Manufacturing_Vulnerable_Workers") AS "Total_Vulnerable_Workers"
FROM vm
JOIN vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
```
2025-01-26 06:56:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:56:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:56:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:56:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:56:43 - snowflake.connector.connection - INFO - closed
2025-01-26 06:56:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:56:43 - root - INFO - itercount: 1
2025-01-26 06:56:43 - root - INFO - 0
2025-01-26 06:56:43 - root - INFO - results: 
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
California,805342.36,2788765.88,3594108.2399999998
Texas,568852.4,1822682.47,2391534.87
Ohio,224935.3,1382909.0899999999,1607844.39
Illinois,285551.38,1248114.21,1533665.5899999999
Michigan,163792.54,1338409.3299999998,1502201.8699999999
Pennsylvania,257257.34,1193888.43,1451145.77
New York,346401.16000000003,966591.8099999999,1312992.97
Florida,374879.88,749946.99,1124826.87
North Carolina,179610.03999999998,920907.97,1100518.01
Indiana,122345.94,958133.1,1080479.04
Wisconsin,119065.02,882158.87,1001223.89
Georgia,196486.97999999998,794333.59,990820.57
New Jersey,225327.46,591900.19,817227.6499999999
Minnesota,125729.46,637792.72,763522.1799999999
Tennessee,119393.72,635658.26,755051.98
Washington,146509.76,573485.45,719995.21
Missouri,116323.7,535585.87,651909.57
Massachusetts,121978.1,517797.61,639775.71
Virginia,115705.44,476549.14999999997,592254.59
South Carolina,86164.62,486075.08999999997,572239.71
Alabama,78733.72,473612.31999999995,552346.0399999999
Kentucky,73297.06,451915.93999999994,525213.0
Iowa,69384.58,394775.05999999994,464159.63999999996
Arizona,104425.52,340733.77999999997,445159.3
Oregon,82045.42,347886.64,429932.06
Colorado,105457.22,306578.73,412035.94999999995
Connecticut,68075.48,313450.32999999996,381525.80999999994
Kansas,60211.380000000005,291720.32999999996,351931.70999999996
Oklahoma,69375.45999999999,278806.97,348182.42999999993
Louisiana,79477.76000000001,261540.63999999998,341018.4
Arkansas,46436.380000000005,282214.07,328650.45
Maryland,87132.1,226004.71,313136.81
Mississippi,45885.0,266598.81,312483.81
Utah,55046.42,246056.16999999998,301102.58999999997
Nebraska,41922.36,171971.22,213893.58000000002
Puerto Rico,44022.240000000005,154458.88999999998,198481.13
New Hampshire,31223.84,147153.09999999998,178376.93999999997
Idaho,29419.22,119078.76,148497.97999999998
Nevada,41319.68,92365.20999999999,133684.88999999998
West Virginia,24984.62,98447.15,123431.76999999999
Maine,22305.24,98598.03,120903.27
Rhode Island,20003.2,93205.70999999999,113208.90999999999
South Dakota,19555.56,71814.37,91369.93
New Mexico,27371.4,63061.28,90432.68
Delaware,12761.92,62411.02,75172.94
Vermont,10758.94,57684.95,68443.89
North Dakota,21185.0,44461.63,65646.63
Hawaii,23131.36,32819.68,55951.04
Montana,17593.239999999998,37442.02,55035.259999999995
Alaska,9863.66,20734.109999999997,30597.769999999997
Wyoming,8786.36,19266.72,28053.08


2025-01-26 06:56:43 - root - INFO - Please check the answer again by reviewing List states in order of the total number of vulnerable workers, including the state name, the number of vulnerable workers in wholesale trade (38% of workers in that sector), and the number of vulnerable workers in manufacturing (41% of workers in that sector), based on 2015-2018 median income differences by ZIP code., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
State1,vulnerable_wholesale1:int,vulnerable_manufacturing1:int,total_vulnerable1:int
State2,vulnerable_wholesale2:int,vulnerable_manufacturing2:int,total_vulnerable2:int
...
```
*(Attention: States are listed in descending order of Total_Vulnerable_Workers.)*

**Explanation:**

- **State**: The name of the state.
- **Wholesale_Vulnerable_Workers**: Number of vulnerable workers in the wholesale trade sector, calculated as 38% of the total employed in wholesale trade in the state.
- **Manufacturing_Vulnerable_Workers**: Number of vulnerable workers in the manufacturing sector, calculated as 41% of the total employed in manufacturing in the state.
- **Total_Vulnerable_Workers**: Sum of vulnerable workers in both sectors for the state.

To generate this list, you would:

1. **Retrieve employment data** for each state from the relevant tables (e.g., `STATE_2015_5YR` to `STATE_2018_5YR` in the `CENSUS_BUREAU_ACS` schema).
2. **Calculate vulnerable workers** in each sector by applying the given percentages:
   - Vulnerable workers in wholesale trade = Total employed in wholesale trade * 38%
   - Vulnerable workers in manufacturing = Total employed in manufacturing * 41%
3. **Sum the vulnerable workers** from both sectors to get the total vulnerable workers per state.
4. **Order the states** in descending order based on the total number of vulnerable workers.

This format provides a clear and organized way to present the required information. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
California,805342.36,2788765.88,3594108.2399999998
Texas,568852.4,1822682.47,2391534.87
Ohio,224935.3,1382909.0899999999,1607844.39
Illinois,285551.38,1248114.21,1533665.5899999999
Michigan,163792.54,1338409.3299999998,1502201.8699999999
Pennsylvania,257257.34,1193888.43,1451145.77
New York,346401.16000000003,966591.8099999999,1312992.97
Florida,374879.88,749946.99,1124826.87
North Carolina,179610.03999999998,920907.97,1100518.01
Indiana,122345.94,958133.1,1080479.04
Wisconsin,119065.02,882158.87,1001223.89
Georgia,196486.97999999998,794333.59,990820.57
New Jersey,225327.46,591900.19,817227.6499999999
Minnesota,125729.46,637792.72,763522.1799999999
Tennessee,119393.72,635658.26,755051.98
Washington,146509.76,573485.45,719995.21
Missouri,116323.7,535585.87,651909.57
Massachusetts,121978.1,517797.61,639775.71
Virginia,115705.44,476549.14999999997,592254.59
South Carolina,86164.62,486075.08999999997,572239.71
Alabama,78733.72,473612.31999999995,552346.0399999999
Kentucky,73297.06,451915.93999999994,525213.0
Iowa,69384.58,394775.05999999994,464159.63999999996
Arizona,104425.52,340733.77999999997,445159.3
Oregon,82045.42,347886.64,429932.06
Colorado,105457.22,306578.73,412035.94999999995
Connecticut,68075.48,313450.32999999996,381525.80999999994
Kansas,60211.380000000005,291720.32999999996,351931.70999999996
Oklahoma,69375.45999999999,278806.97,348182.42999999993
Louisiana,79477.76000000001,261540.63999999998,341018.4
Arkansas,46436.380000000005,282214.07,328650.45
Maryland,87132.1,226004.71,313136.81
Mississippi,45885.0,266598.81,312483.81
Utah,55046.42,246056.16999999998,301102.58999999997
Nebraska,41922.36,171971.22,213893.58000000002
Puerto Rico,44022.240000000005,154458.88999999998,198481.13
New Hampshire,31223.84,147153.09999999998,178376.93999999997
Idaho,29419.22,119078.76,148497.97999999998
Nevada,41319.68,92365.20999999999,133684.88999999998
West Virginia,24984.62,98447.15,123431.76999999999
Maine,22305.24,98598.03,120903.27
Rhode Island,20003.2,93205.70999999999,113208.90999999999
South Dakota,19555.56,71814.37,91369.93
New Mexico,27371.4,63061.28,90432.68
Delaware,12761.92,62411.02,75172.94
Vermont,10758.94,57684.95,68443.89
North Dakota,21185.0,44461.63,65646.63
Hawaii,23131.36,32819.68,55951.04
Montana,17593.239999999998,37442.02,55035.259999999995
Alaska,9863.66,20734.109999999997,30597.769999999997
Wyoming,8786.36,19266.72,28053.08
Current sql:
WITH union_manufacturing AS (
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
),
vm AS (
  SELECT
    "geo_id",
    SUM("employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers"
  FROM union_manufacturing
  GROUP BY "geo_id"
),
union_wholesale AS (
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.STATE_2018_5YR
),
vw AS (
  SELECT
    "geo_id",
    SUM("employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
  FROM union_wholesale
  GROUP BY "geo_id"
)
SELECT
  sf."state" AS "State",
  vw."Wholesale_Vulnerable_Workers",
  vm."Manufacturing_Vulnerable_Workers",
  (vw."Wholesale_Vulnerable_Workers" + vm."Manufacturing_Vulnerable_Workers") AS "Total_Vulnerable_Workers"
FROM vm
JOIN vw ON vm."geo_id" = vw."geo_id"
JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vm."geo_id")
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
2025-01-26 06:57:46 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:57:46 - root - INFO - ```sql
WITH union_manufacturing AS (
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR
),
union_wholesale AS (
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR
),
vulnerable_workers AS (
  SELECT
    gz."state_fips_code",
    SUM(um."employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers",
    SUM(uw."employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
  FROM union_manufacturing um
  JOIN union_wholesale uw ON um."geo_id" = uw."geo_id"
  JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz ON um."geo_id" = gz."zip_code"
  WHERE um."employed_manufacturing" IS NOT NULL AND uw."employed_wholesale_trade" IS NOT NULL
  GROUP BY gz."state_fips_code"
),
state_totals AS (
  SELECT
    sf."state" AS "State",
    ROUND(SUM(vw."Wholesale_Vulnerable_Workers"), 4) AS "Wholesale_Vulnerable_Workers",
    ROUND(SUM(vw."Manufacturing_Vulnerable_Workers"), 4) AS "Manufacturing_Vulnerable_Workers",
    ROUND(SUM(vw."Wholesale_Vulnerable_Workers") + SUM(vw."Manufacturing_Vulnerable_Workers"), 4) AS "Total_Vulnerable_Workers"
  FROM vulnerable_workers vw
  JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vw."state_fips_code")
  GROUP BY sf."state"
)
SELECT
  "State",
  "Wholesale_Vulnerable_Workers",
  "Manufacturing_Vulnerable_Workers",
  "Total_Vulnerable_Workers"
FROM state_totals
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
```
2025-01-26 06:57:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:57:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:57:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:57:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:57:48 - snowflake.connector.connection - INFO - closed
2025-01-26 06:57:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:57:48 - root - INFO - itercount: 2
2025-01-26 06:57:48 - root - INFO - 0
2025-01-26 06:57:48 - root - INFO - results: 
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
California,3221369.44,11154873.28,14376242.72
Texas,2275365.52,7290337.92,9565703.44
Ohio,899741.2,5531636.36,6431377.56
Illinois,1142205.52,4992456.84,6134662.36
Michigan,655170.16,5353637.32,6008807.48
Pennsylvania,1029029.36,4775553.72,5804583.08
New York,1385604.64,3866367.24,5251971.88
Florida,1499519.52,2999628.88,4499148.4
North Carolina,718440.16,3683631.88,4402072.04
Indiana,489383.76,3832532.4,4321916.16
Wisconsin,476260.08,3528635.48,4004895.56
Georgia,785947.92,3177388.48,3963336.4
New Jersey,901309.84,2367600.76,3268910.6
Minnesota,502764.32,2550186.88,3052951.2
Tennessee,477542.96,2541867.16,3019410.12
Washington,583546.24,2285694.24,2869240.48
Missouri,465279.6,2142146.68,2607426.28
Massachusetts,487912.4,2071226.52,2559138.92
Virginia,462821.76,1906239.24,2369061.0
South Carolina,344658.48,1944300.36,2288958.84
Alabama,314934.88,1894395.16,2209330.04
Kentucky,293130.48,1807134.04,2100264.52
Iowa,277375.68,1577404.48,1854780.16
Arizona,417528.8,1362439.84,1779968.64
Oregon,328181.68,1391477.68,1719659.36
Colorado,421828.88,1226314.92,1648143.8
Connecticut,272301.92,1253801.32,1526103.24
Kansas,240597.76,1166776.36,1407374.12
Oklahoma,277328.56,1114967.12,1392295.68
Louisiana,317870.0,1046108.44,1363978.44
Arkansas,185704.48,1126652.12,1312356.6
Maryland,348528.4,904018.84,1252547.24
Mississippi,183286.16,1061844.24,1245130.4
Utah,220144.64,983635.92,1203780.56
Nebraska,167652.96,687879.96,855532.92
Puerto Rico,176031.2,617345.2,793376.4
New Hampshire,124895.36,588576.32,713471.68
Idaho,117676.88,476282.24,593959.12
Nevada,165278.72,369193.52,534472.24
West Virginia,99938.48,393745.96,493684.44
Maine,89220.96,394392.12,483613.08
Rhode Island,80012.8,372822.84,452835.64
South Dakota,78067.2,286448.96,364516.16
New Mexico,108836.56,251216.43,360052.99
Delaware,51047.68,249644.08,300691.76
Vermont,43035.76,230739.8,273775.56
North Dakota,84665.52,177738.28,262403.8
Hawaii,92525.44,131278.72,223804.16
Montana,70283.28,149738.56,220021.84
Alaska,39454.64,82508.4,121963.04
Wyoming,35115.04,76899.6,112014.64


2025-01-26 06:57:48 - root - INFO - Please check the answer again by reviewing List states in order of the total number of vulnerable workers, including the state name, the number of vulnerable workers in wholesale trade (38% of workers in that sector), and the number of vulnerable workers in manufacturing (41% of workers in that sector), based on 2015-2018 median income differences by ZIP code., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
State1,vulnerable_wholesale1:int,vulnerable_manufacturing1:int,total_vulnerable1:int
State2,vulnerable_wholesale2:int,vulnerable_manufacturing2:int,total_vulnerable2:int
...
```
*(Attention: States are listed in descending order of Total_Vulnerable_Workers.)*

**Explanation:**

- **State**: The name of the state.
- **Wholesale_Vulnerable_Workers**: Number of vulnerable workers in the wholesale trade sector, calculated as 38% of the total employed in wholesale trade in the state.
- **Manufacturing_Vulnerable_Workers**: Number of vulnerable workers in the manufacturing sector, calculated as 41% of the total employed in manufacturing in the state.
- **Total_Vulnerable_Workers**: Sum of vulnerable workers in both sectors for the state.

To generate this list, you would:

1. **Retrieve employment data** for each state from the relevant tables (e.g., `STATE_2015_5YR` to `STATE_2018_5YR` in the `CENSUS_BUREAU_ACS` schema).
2. **Calculate vulnerable workers** in each sector by applying the given percentages:
   - Vulnerable workers in wholesale trade = Total employed in wholesale trade * 38%
   - Vulnerable workers in manufacturing = Total employed in manufacturing * 41%
3. **Sum the vulnerable workers** from both sectors to get the total vulnerable workers per state.
4. **Order the states** in descending order based on the total number of vulnerable workers.

This format provides a clear and organized way to present the required information. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
California,3221369.44,11154873.28,14376242.72
Texas,2275365.52,7290337.92,9565703.44
Ohio,899741.2,5531636.36,6431377.56
Illinois,1142205.52,4992456.84,6134662.36
Michigan,655170.16,5353637.32,6008807.48
Pennsylvania,1029029.36,4775553.72,5804583.08
New York,1385604.64,3866367.24,5251971.88
Florida,1499519.52,2999628.88,4499148.4
North Carolina,718440.16,3683631.88,4402072.04
Indiana,489383.76,3832532.4,4321916.16
Wisconsin,476260.08,3528635.48,4004895.56
Georgia,785947.92,3177388.48,3963336.4
New Jersey,901309.84,2367600.76,3268910.6
Minnesota,502764.32,2550186.88,3052951.2
Tennessee,477542.96,2541867.16,3019410.12
Washington,583546.24,2285694.24,2869240.48
Missouri,465279.6,2142146.68,2607426.28
Massachusetts,487912.4,2071226.52,2559138.92
Virginia,462821.76,1906239.24,2369061.0
South Carolina,344658.48,1944300.36,2288958.84
Alabama,314934.88,1894395.16,2209330.04
Kentucky,293130.48,1807134.04,2100264.52
Iowa,277375.68,1577404.48,1854780.16
Arizona,417528.8,1362439.84,1779968.64
Oregon,328181.68,1391477.68,1719659.36
Colorado,421828.88,1226314.92,1648143.8
Connecticut,272301.92,1253801.32,1526103.24
Kansas,240597.76,1166776.36,1407374.12
Oklahoma,277328.56,1114967.12,1392295.68
Louisiana,317870.0,1046108.44,1363978.44
Arkansas,185704.48,1126652.12,1312356.6
Maryland,348528.4,904018.84,1252547.24
Mississippi,183286.16,1061844.24,1245130.4
Utah,220144.64,983635.92,1203780.56
Nebraska,167652.96,687879.96,855532.92
Puerto Rico,176031.2,617345.2,793376.4
New Hampshire,124895.36,588576.32,713471.68
Idaho,117676.88,476282.24,593959.12
Nevada,165278.72,369193.52,534472.24
West Virginia,99938.48,393745.96,493684.44
Maine,89220.96,394392.12,483613.08
Rhode Island,80012.8,372822.84,452835.64
South Dakota,78067.2,286448.96,364516.16
New Mexico,108836.56,251216.43,360052.99
Delaware,51047.68,249644.08,300691.76
Vermont,43035.76,230739.8,273775.56
North Dakota,84665.52,177738.28,262403.8
Hawaii,92525.44,131278.72,223804.16
Montana,70283.28,149738.56,220021.84
Alaska,39454.64,82508.4,121963.04
Wyoming,35115.04,76899.6,112014.64
Current sql:
WITH union_manufacturing AS (
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_manufacturing"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR
),
union_wholesale AS (
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2016_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2017_5YR
  UNION ALL
  SELECT "geo_id", "employed_wholesale_trade"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR
),
vulnerable_workers AS (
  SELECT
    gz."state_fips_code",
    SUM(um."employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers",
    SUM(uw."employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
  FROM union_manufacturing um
  JOIN union_wholesale uw ON um."geo_id" = uw."geo_id"
  JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz ON um."geo_id" = gz."zip_code"
  WHERE um."employed_manufacturing" IS NOT NULL AND uw."employed_wholesale_trade" IS NOT NULL
  GROUP BY gz."state_fips_code"
),
state_totals AS (
  SELECT
    sf."state" AS "State",
    ROUND(SUM(vw."Wholesale_Vulnerable_Workers"), 4) AS "Wholesale_Vulnerable_Workers",
    ROUND(SUM(vw."Manufacturing_Vulnerable_Workers"), 4) AS "Manufacturing_Vulnerable_Workers",
    ROUND(SUM(vw."Wholesale_Vulnerable_Workers") + SUM(vw."Manufacturing_Vulnerable_Workers"), 4) AS "Total_Vulnerable_Workers"
  FROM vulnerable_workers vw
  JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf ON sf."fips" = TO_NUMBER(vw."state_fips_code")
  GROUP BY sf."state"
)
SELECT
  "State",
  "Wholesale_Vulnerable_Workers",
  "Manufacturing_Vulnerable_Workers",
  "Total_Vulnerable_Workers"
FROM state_totals
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
2025-01-26 06:58:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:58:44 - root - INFO - ```sql
WITH income_diff AS (
  SELECT
    z2015."geo_id" AS "zip_code",
    z2015."median_income" AS "median_income_2015",
    z2018."median_income" AS "median_income_2018",
    (z2018."median_income" - z2015."median_income") AS "income_difference"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR z2015
  JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR z2018
    ON z2015."geo_id" = z2018."geo_id"
  WHERE z2015."median_income" IS NOT NULL
    AND z2018."median_income" IS NOT NULL
),
vulnerable_zipcodes AS (
  SELECT
    i."zip_code",
    i."income_difference",
    e."employed_manufacturing",
    e."employed_wholesale_trade"
  FROM income_diff i
  JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR e
    ON i."zip_code" = e."geo_id"
  WHERE i."income_difference" < 0
    AND (e."employed_manufacturing" IS NOT NULL OR e."employed_wholesale_trade" IS NOT NULL)
),
vulnerable_workers AS (
  SELECT
    gz."state_fips_code",
    SUM(vz."employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers",
    SUM(vz."employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
  FROM vulnerable_zipcodes vz
  JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz
    ON vz."zip_code" = gz."zip_code"
  GROUP BY gz."state_fips_code"
),
state_totals AS (
  SELECT
    sf."state" AS "State",
    ROUND(COALESCE(SUM(vw."Wholesale_Vulnerable_Workers"), 0), 4) AS "Wholesale_Vulnerable_Workers",
    ROUND(COALESCE(SUM(vw."Manufacturing_Vulnerable_Workers"), 0), 4) AS "Manufacturing_Vulnerable_Workers",
    ROUND(COALESCE(SUM(vw."Wholesale_Vulnerable_Workers"), 0) + COALESCE(SUM(vw."Manufacturing_Vulnerable_Workers"), 0), 4) AS "Total_Vulnerable_Workers"
  FROM vulnerable_workers vw
  JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
    ON sf."fips" = TO_NUMBER(vw."state_fips_code")
  GROUP BY sf."state"
)
SELECT
  "State",
  "Wholesale_Vulnerable_Workers",
  "Manufacturing_Vulnerable_Workers",
  "Total_Vulnerable_Workers"
FROM state_totals
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
```
2025-01-26 06:58:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:58:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:58:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:58:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:58:46 - snowflake.connector.connection - INFO - closed
2025-01-26 06:58:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:58:46 - root - INFO - itercount: 3
2025-01-26 06:58:46 - root - INFO - 0
2025-01-26 06:58:46 - root - INFO - results: 
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
Texas,10030.1,29083.35,39113.45
Ohio,2804.02,20999.79,23803.81
Pennsylvania,3450.02,20281.06,23731.08
Louisiana,4009.38,16828.04,20837.42
New York,4220.28,14727.61,18947.89
Illinois,3146.02,13448.82,16594.84
Indiana,1805.38,14605.84,16411.22
Alabama,1953.96,12830.95,14784.91
Georgia,2365.5,12217.59,14583.09
New Jersey,4233.2,10167.18,14400.38
California,3424.94,10328.31,13753.25
North Carolina,1664.78,11024.49,12689.27
Tennessee,1756.74,10798.99,12555.73
Iowa,1811.08,9955.62,11766.7
Arkansas,1720.26,9743.24,11463.5
South Carolina,1263.88,10126.59,11390.47
Puerto Rico,2671.78,8516.93,11188.71
Florida,3423.8,6993.78,10417.58
Kentucky,1410.56,8749.81,10160.37
Virginia,1604.74,8435.34,10040.08
Michigan,1023.34,8576.38,9599.72
Mississippi,1027.52,7974.09,9001.61
Minnesota,1434.88,7313.99,8748.87
Missouri,1068.94,7580.08,8649.02
Massachusetts,1456.16,6901.94,8358.1
West Virginia,1477.06,5402.98,6880.04
Connecticut,1275.66,5558.37,6834.03
Kansas,1174.96,5207.41,6382.37
Oklahoma,941.64,4520.66,5462.3
Maryland,1293.9,4143.46,5437.36
Wisconsin,537.7,4896.22,5433.92
Arizona,1124.8,3409.97,4534.77
New Mexico,975.08,2635.07,3610.15
Nebraska,623.2,2713.79,3336.99
Vermont,596.98,2536.26,3133.24
Washington,790.4,2299.69,3090.09
New Hampshire,434.34,2132.41,2566.75
Oregon,434.34,2071.32,2505.66
Maine,350.36,2123.39,2473.75
Colorado,662.34,1535.04,2197.38
Delaware,370.88,1491.17,1862.05
North Dakota,747.46,1071.33,1818.79
South Dakota,336.68,1418.6,1755.28
Utah,388.36,1270.18,1658.54
Idaho,261.82,1148.82,1410.64
Wyoming,384.94,837.63,1222.57
Alaska,487.54,700.69,1188.23
Montana,453.34,620.74,1074.08
Nevada,323.0,713.4,1036.4
Hawaii,68.4,106.19,174.59
Rhode Island,32.3,118.08,150.38


2025-01-26 06:58:46 - root - INFO - Please check the answer again by reviewing List states in order of the total number of vulnerable workers, including the state name, the number of vulnerable workers in wholesale trade (38% of workers in that sector), and the number of vulnerable workers in manufacturing (41% of workers in that sector), based on 2015-2018 median income differences by ZIP code., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
State1,vulnerable_wholesale1:int,vulnerable_manufacturing1:int,total_vulnerable1:int
State2,vulnerable_wholesale2:int,vulnerable_manufacturing2:int,total_vulnerable2:int
...
```
*(Attention: States are listed in descending order of Total_Vulnerable_Workers.)*

**Explanation:**

- **State**: The name of the state.
- **Wholesale_Vulnerable_Workers**: Number of vulnerable workers in the wholesale trade sector, calculated as 38% of the total employed in wholesale trade in the state.
- **Manufacturing_Vulnerable_Workers**: Number of vulnerable workers in the manufacturing sector, calculated as 41% of the total employed in manufacturing in the state.
- **Total_Vulnerable_Workers**: Sum of vulnerable workers in both sectors for the state.

To generate this list, you would:

1. **Retrieve employment data** for each state from the relevant tables (e.g., `STATE_2015_5YR` to `STATE_2018_5YR` in the `CENSUS_BUREAU_ACS` schema).
2. **Calculate vulnerable workers** in each sector by applying the given percentages:
   - Vulnerable workers in wholesale trade = Total employed in wholesale trade * 38%
   - Vulnerable workers in manufacturing = Total employed in manufacturing * 41%
3. **Sum the vulnerable workers** from both sectors to get the total vulnerable workers per state.
4. **Order the states** in descending order based on the total number of vulnerable workers.

This format provides a clear and organized way to present the required information. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
State,Wholesale_Vulnerable_Workers,Manufacturing_Vulnerable_Workers,Total_Vulnerable_Workers
Texas,10030.1,29083.35,39113.45
Ohio,2804.02,20999.79,23803.81
Pennsylvania,3450.02,20281.06,23731.08
Louisiana,4009.38,16828.04,20837.42
New York,4220.28,14727.61,18947.89
Illinois,3146.02,13448.82,16594.84
Indiana,1805.38,14605.84,16411.22
Alabama,1953.96,12830.95,14784.91
Georgia,2365.5,12217.59,14583.09
New Jersey,4233.2,10167.18,14400.38
California,3424.94,10328.31,13753.25
North Carolina,1664.78,11024.49,12689.27
Tennessee,1756.74,10798.99,12555.73
Iowa,1811.08,9955.62,11766.7
Arkansas,1720.26,9743.24,11463.5
South Carolina,1263.88,10126.59,11390.47
Puerto Rico,2671.78,8516.93,11188.71
Florida,3423.8,6993.78,10417.58
Kentucky,1410.56,8749.81,10160.37
Virginia,1604.74,8435.34,10040.08
Michigan,1023.34,8576.38,9599.72
Mississippi,1027.52,7974.09,9001.61
Minnesota,1434.88,7313.99,8748.87
Missouri,1068.94,7580.08,8649.02
Massachusetts,1456.16,6901.94,8358.1
West Virginia,1477.06,5402.98,6880.04
Connecticut,1275.66,5558.37,6834.03
Kansas,1174.96,5207.41,6382.37
Oklahoma,941.64,4520.66,5462.3
Maryland,1293.9,4143.46,5437.36
Wisconsin,537.7,4896.22,5433.92
Arizona,1124.8,3409.97,4534.77
New Mexico,975.08,2635.07,3610.15
Nebraska,623.2,2713.79,3336.99
Vermont,596.98,2536.26,3133.24
Washington,790.4,2299.69,3090.09
New Hampshire,434.34,2132.41,2566.75
Oregon,434.34,2071.32,2505.66
Maine,350.36,2123.39,2473.75
Colorado,662.34,1535.04,2197.38
Delaware,370.88,1491.17,1862.05
North Dakota,747.46,1071.33,1818.79
South Dakota,336.68,1418.6,1755.28
Utah,388.36,1270.18,1658.54
Idaho,261.82,1148.82,1410.64
Wyoming,384.94,837.63,1222.57
Alaska,487.54,700.69,1188.23
Montana,453.34,620.74,1074.08
Nevada,323.0,713.4,1036.4
Hawaii,68.4,106.19,174.59
Rhode Island,32.3,118.08,150.38
Current sql:
WITH income_diff AS (
  SELECT
    z2015."geo_id" AS "zip_code",
    z2015."median_income" AS "median_income_2015",
    z2018."median_income" AS "median_income_2018",
    (z2018."median_income" - z2015."median_income") AS "income_difference"
  FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR z2015
  JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR z2018
    ON z2015."geo_id" = z2018."geo_id"
  WHERE z2015."median_income" IS NOT NULL
    AND z2018."median_income" IS NOT NULL
),
vulnerable_zipcodes AS (
  SELECT
    i."zip_code",
    i."income_difference",
    e."employed_manufacturing",
    e."employed_wholesale_trade"
  FROM income_diff i
  JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR e
    ON i."zip_code" = e."geo_id"
  WHERE i."income_difference" < 0
    AND (e."employed_manufacturing" IS NOT NULL OR e."employed_wholesale_trade" IS NOT NULL)
),
vulnerable_workers AS (
  SELECT
    gz."state_fips_code",
    SUM(vz."employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers",
    SUM(vz."employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
  FROM vulnerable_zipcodes vz
  JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz
    ON vz."zip_code" = gz."zip_code"
  GROUP BY gz."state_fips_code"
),
state_totals AS (
  SELECT
    sf."state" AS "State",
    ROUND(COALESCE(SUM(vw."Wholesale_Vulnerable_Workers"), 0), 4) AS "Wholesale_Vulnerable_Workers",
    ROUND(COALESCE(SUM(vw."Manufacturing_Vulnerable_Workers"), 0), 4) AS "Manufacturing_Vulnerable_Workers",
    ROUND(COALESCE(SUM(vw."Wholesale_Vulnerable_Workers"), 0) + COALESCE(SUM(vw."Manufacturing_Vulnerable_Workers"), 0), 4) AS "Total_Vulnerable_Workers"
  FROM vulnerable_workers vw
  JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
    ON sf."fips" = TO_NUMBER(vw."state_fips_code")
  GROUP BY sf."state"
)
SELECT
  "State",
  "Wholesale_Vulnerable_Workers",
  "Manufacturing_Vulnerable_Workers",
  "Total_Vulnerable_Workers"
FROM state_totals
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
2025-01-26 06:59:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 06:59:28 - root - INFO - ```sql
WITH income_diff AS (
    SELECT
        z2015."geo_id" AS "zip_code",
        z2015."median_income" AS "median_income_2015",
        z2018."median_income" AS "median_income_2018",
        (z2018."median_income" - z2015."median_income") AS "income_difference"
    FROM CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2015_5YR z2015
    JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR z2018
        ON z2015."geo_id" = z2018."geo_id"
    WHERE z2015."median_income" IS NOT NULL
        AND z2018."median_income" IS NOT NULL
),
vulnerable_zipcodes AS (
    SELECT
        i."zip_code",
        i."income_difference",
        e."employed_manufacturing",
        e."employed_wholesale_trade"
    FROM income_diff i
    JOIN CENSUS_BUREAU_ACS_2.CENSUS_BUREAU_ACS.ZIP_CODES_2018_5YR e
        ON i."zip_code" = e."geo_id"
    WHERE i."income_difference" < 0
        AND (e."employed_manufacturing" IS NOT NULL OR e."employed_wholesale_trade" IS NOT NULL)
),
vulnerable_workers AS (
    SELECT
        gz."state_fips_code",
        SUM(vz."employed_manufacturing" * 0.41) AS "Manufacturing_Vulnerable_Workers",
        SUM(vz."employed_wholesale_trade" * 0.38) AS "Wholesale_Vulnerable_Workers"
    FROM vulnerable_zipcodes vz
    JOIN CENSUS_BUREAU_ACS_2.GEO_US_BOUNDARIES.ZIP_CODES gz
        ON vz."zip_code" = gz."zip_code"
    GROUP BY gz."state_fips_code"
),
state_totals AS (
    SELECT
        sf."state" AS "State",
        ROUND(COALESCE(SUM(vw."Wholesale_Vulnerable_Workers"), 0), 4) AS "Wholesale_Vulnerable_Workers",
        ROUND(COALESCE(SUM(vw."Manufacturing_Vulnerable_Workers"), 0), 4) AS "Manufacturing_Vulnerable_Workers",
        ROUND(COALESCE(SUM(vw."Wholesale_Vulnerable_Workers"), 0) + COALESCE(SUM(vw."Manufacturing_Vulnerable_Workers"), 0), 4) AS "Total_Vulnerable_Workers"
    FROM vulnerable_workers vw
    JOIN CENSUS_BUREAU_ACS_2.CYCLISTIC.STATE_FIPS sf
        ON sf."fips" = TO_NUMBER(vw."state_fips_code")
    GROUP BY sf."state"
)
SELECT
    "State",
    "Wholesale_Vulnerable_Workers",
    "Manufacturing_Vulnerable_Workers",
    "Total_Vulnerable_Workers"
FROM state_totals
ORDER BY "Total_Vulnerable_Workers" DESC NULLS LAST;
```
2025-01-26 06:59:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 06:59:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 06:59:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 06:59:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 51
2025-01-26 06:59:30 - snowflake.connector.connection - INFO - closed
2025-01-26 06:59:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 06:59:30 - root - INFO - itercount: 4
2025-01-26 06:59:30 - root - INFO - 0
2025-01-26 06:59:30 - root - INFO - Total iteration counts: 4
