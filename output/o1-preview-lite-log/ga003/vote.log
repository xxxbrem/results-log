After comparing the three SQL queries and their results, **I conclude that `2result.sql` is the correct query** to determine the average scores for each board type from quick play mode completions on September 15, 2018.

**Reasons:**

1. **Accuracy in Extracting Relevant Data:**
   - The query specifically filters events where `event_name` is `'level_complete_quickplay'`, which aligns exactly with the quick play mode completions you're interested in.
   - It selects the `board` and `score` parameters from `event_params`, which are the correct keys for board type and score based on the dataset.

2. **Clarity and Simplicity:**
   - The query uses clear and straightforward aliases (`Board_Type` and `Average_Score`), making the results easy to understand.
   - It employs `MAX(CASE WHEN ...)` statements to extract the desired values, which is a standard and efficient method in SQL for pivoting key-value pairs.

3. **Consistent Results:**
   - The output of `2result.sql` matches the outputs of the other queries, indicating that it correctly computes the average scores.
   - However, `2result.sql` does so with greater clarity and without unnecessary complexity, focusing solely on the relevant keys.

4. **Avoidance of Unnecessary Data:**
   - Unlike `1result.sql`, which includes additional keys like `'level'` and `'level_name'` that may not pertain to board types in quick play mode, `2result.sql` focuses only on the `'board'` key.
   - This reduces the risk of including irrelevant or incorrect data in the calculations.

5. **Proper Grouping:**
   - The query groups data by `t.event_timestamp` in the subquery to ensure that each event is considered individually, which is important for accurate aggregations.

6. **Adherence to Best Practices:**
   - Using `MAX(CASE WHEN ...)` over `MAX(IF(...))` enhances readability and maintainability.
   - The query includes checks to exclude `NULL` values for both `board` and `score`, ensuring only complete data is used in the calculations.

**Therefore, the correct SQL query is:**

```plaintext
2result.sql
```