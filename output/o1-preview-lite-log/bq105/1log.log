2025-01-27 04:30:36 - openai._base_client - INFO - Retrying request to /chat/completions in 0.470962 seconds
2025-01-27 04:31:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:31:23 - root - INFO - SQL:
SELECT DISTINCT `driver_distracted_by_name`
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   LIMIT 100
Results:
driver_distracted_by_name
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Lost In Thought/Day Dreaming
Other Distraction

2025-01-27 04:32:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:32:36 - root - INFO - It appears that you're encountering an error because the `state_name` column does not exist in the `distract_2015` table. The error message suggests that `state_number` is recognized, but `state_name` is not:

```
400 Unrecognized name: state_name; Did you mean state_number? at [1:8]; reason: invalidQuery
```

**Explanation:**

- The `distract_2015` table contains the `state_number` column but does not include the `state_name` column.
- To get the state names, we need to map the `state_number` to `state_name`. This can be done by joining with another table that contains both `state_number` and `state_name`.

**Solution:**

We can join the `distract_2015` table with the `accident_2015` table, which contains both `state_number` and `state_name`. Here's how you can modify your query:

```sql
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
```

**Explanation of the Corrected Query:**

- **Aliases:** We've aliased `distract_2015` as `d` and `accident_2015` as `a` for readability.
- **Joining Tables:** We join `distract_2015` with `accident_2015` on both `state_number` and `consecutive_number` to ensure we're matching records from the same accidents in the same states.
- **Selecting State Name:** We select `a.state_name` to get the state names from the `accident_2015` table.
- **Counting Accidents:** We count the distinct `consecutive_number` from the `distract_2015` table (aliased as `d`) to get the number of unique accidents involving driver distraction per state.
- **WHERE Clause:** We exclude the records where `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.
- **GROUP BY:** We group the results by `a.state_name` to get the counts per state.

**Similarly**, you can adjust your other queries. Here are the corrected versions:

---

**1. List distinct distraction types in 2015 excluding certain statuses:**

```sql
SELECT DISTINCT `driver_distracted_by_name`
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
LIMIT 100
```

*This query remains valid as it doesn't use `state_name`.*

---

**2. Count accidents per state in 2015 with driver distraction:**

```sql
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
```

---

**3. Retrieve population by ZIP code from the 2010 census:**

```sql
SELECT `zipcode`, `population`
FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
LIMIT 100
```

---

**4. Join ZIP codes with state names to get state populations:**

```sql
SELECT z.`state_name`, SUM(p.`population`) AS state_population
FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
  ON p.`zipcode` = z.`zipcode`
GROUP BY z.`state_name`
LIMIT 100
```

---

**5. List states with their total accidents in 2016 due to driver distraction:**

```sql
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
```

---

**6. Calculate accidents per 100,000 people in 2015 for each state:**

```sql
SELECT
  a.`state_name`,
  COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
LIMIT 100
```

---

**7. Find top five states with highest accident rates in 2015:**

```sql
SELECT
  a.`state_name`,
  COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
ORDER BY accidents_per_100k DESC
LIMIT 5
```

---

**8. List the distraction types reported in 2016 accidents:**

```sql
SELECT DISTINCT `driver_distracted_by_name`
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
LIMIT 100
```

---

**9. Aggregate accident counts for both years by state:**

```sql
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count, 2015 AS year
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`

UNION ALL

SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count, 2016 AS year
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
```

---

**10. Calculate and list accident rates per 100,000 people for 2016, and find top five states:**

```sql
SELECT
  a.`state_name`,
  COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
ORDER BY accidents_per_100k DESC
LIMIT 5
```

---

**Additional Notes:**

- **Mapping `state_number` to `state_name`:** By joining with the `accident_2015` and `accident_2016` tables, which contain both `state_number` and `state_name`, we can retrieve the state names for our analysis.
- **Population Data:** We're joining the `population_by_zip_2010` table with the `zipcode_area` table to aggregate state populations. Ensure that these tables are properly linked via the `zipcode` field.
- **Accident Counts:** We count distinct `consecutive_number` values because each represents a unique accident.
- **Limit Clause:** The `LIMIT 100` is included to restrict the number of rows for testing purposes. You may adjust or remove this limit in your final analysis.

---

By correcting the queries as shown above, you should be able to execute them without errors and obtain the desired results for your analysis.
2025-01-27 04:34:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:34:13 - root - INFO - SQL:
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
Results:
state_name,accident_count
Texas,441
South Dakota,14
Wyoming,15
New Hampshire,18
Alabama,57
Arizona,118
California,206
Colorado,70
Florida,235
Georgia,76
Illinois,52
Indiana,56
Iowa,31
Kentucky,200
Louisiana,154
Maryland,104
Massachusetts,65
Michigan,67
Minnesota,60
Missouri,97
Montana,39
Nevada,16
New Jersey,146
New Mexico,124
New York,163
North Carolina,157
Ohio,59
Oregon,12
Washington,158
Wisconsin,102
Delaware,15
Arkansas,35
Kansas,73
Tennessee,112
Maine,14
Alaska,12
Hawaii,17
Connecticut,14
Idaho,35
Mississippi,7
Nebraska,16
Oklahoma,54
Pennsylvania,72
Utah,32
Virginia,129
West Virginia,8
South Carolina,67
Vermont,5
Rhode Island,1
North Dakota,2

2025-01-27 04:34:15 - root - INFO - SQL:
SELECT `zipcode`, `population`
FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
LIMIT 100
Results:
zipcode,population
25647,768
49336,4352
72106,5376
74074,29184
1960,50944
13776,513
62379,2049
79322,2049
50833,2305
31778,2562
16150,7426
34436,7938
12483,259
40052,515
29686,1027
94619,23299
8353,516
12965,516
44048,2565
39638,3333
78956,5381
97914,19205
10952,38917
59639,1286
7606,2310
36009,2566
93536,70918
3220,7430
74468,263
4740,1287
30808,4615
8648,32263
1436,3336
55374,13576
89169,23304
51004,1033
8535,5385
97038,15113
29710,29449
61701,36105
5488,7690
78717,22538
48906,26634
21856,1035
4981,2316
29667,269
74735,1549
38117,26125
12071,270
30822,526
36875,4622
48201,12814
40175,13070
42332,271
24272,527
46371,3599
84310,4111
31648,1040
16929,2320
37144,3344
14586,10256
2188,14608
44106,26896
20901,34832
52362,1041
52659,1553
12143,5137
78069,5137
60477,38161
65025,786
72079,786
8348,275
80812,275
19312,11539
10456,86547
42453,532
80480,1300
70080,1556
2667,2580
45107,9236
5744,533
1029,789
47648,4373
83702,22293
10305,41749
23126,534
55089,1814
39553,17174
90230,31766
61817,2583
66508,4375
98359,4887
46550,12311
14846,792
54135,3096
55040,12568
70072,56344
39556,7705
93610,23833
32404,38425

2025-01-27 04:34:17 - root - INFO - SQL:
SELECT z.`state_name`, SUM(p.`population`) AS state_population
FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
  ON p.`zipcode` = z.`zipcode`
GROUP BY z.`state_name`
LIMIT 100
Results:
state_name,state_population
Alabama,14338764
Utah,8285430
Virginia,24003717
Washington (state),809694
Pennsylvania,38107125
Ohio,34609542
Maryland,17320683
Oregon,11490705
Tennessee,19003095
Montana,2965035
Mississippi,9200223
Minnesota,15904047
North Carolina,28606431
Nebraska,5480298
New York,58133523
Florida,56403678
Illinois,38491743
Oklahoma,11249850
Iowa,9131034
Arizona,19127649
Georgia,28280514
Texas,75434313
Missouri,17961405
Washington,19240062
Idaho,4702578
Wisconsin,17061036
Colorado,15088122
Nevada,8099424
Arkansas,8733537
California,111748626
Kentucky,12977133
Michigan,29650836
New Mexico,6161043
North Dakota,2015343
South Carolina,13876092
Louisiana,13598490
Alaska,2129790
South Dakota,2434629
Kansas,8551884
West Virginia,5558322
"Washington, D.C.",24681
Indiana,19451376
Hawaii,4080903
Wyoming,1683354
Georgia (U.S. state),456018
District of Columbia,1780488
"Iowa, Minnesota",5130
Delaware,2693775
"Oregon, Washington",123168
"Arkansas, Louisiana",7785
"Colorado, Wyoming",300
"Arizona, New Mexico",41208
"Alabama, Mississippi",28347
"Kentucky, Tennessee",76242
"Oklahoma, Texas",5064
"Idaho, Oregon",1923
"Arkansas, Missouri",12783
"Kansas, Oklahoma",7674
"Arizona, Utah",17115
"Minnesota, South Dakota",3246
"Montana, North Dakota",4974
"Arizona, New Mexico, Utah",9951
"North Dakota, South Dakota",5763
"Idaho, Wyoming",1413
"Nebraska, Wyoming",4818
"California, Nevada",4251
"Iowa, Missouri",9801
"California, Oregon",867
"Idaho, Washington",963

2025-01-27 04:34:18 - root - INFO - SQL:
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
Results:
state_name,accident_count
Ohio,68
New Hampshire,6
Montana,20
Vermont,4
Alabama,57
Arizona,102
Arkansas,23
California,227
Colorado,77
Florida,233
Georgia,88
Idaho,51
Illinois,68
Indiana,48
Iowa,40
Kentucky,192
Louisiana,143
Maryland,67
Massachusetts,47
Minnesota,37
Mississippi,3
New Mexico,147
New York,143
North Carolina,157
Oklahoma,55
Oregon,11
Tennessee,132
Texas,389
Washington,147
Wisconsin,117
South Dakota,10
New Jersey,193
Pennsylvania,62
North Dakota,11
Rhode Island,3
Delaware,16
Hawaii,19
Kansas,95
Michigan,61
Missouri,80
Nevada,8
Utah,25
Virginia,141
West Virginia,5
Connecticut,13
Wyoming,14
Maine,3
Nebraska,13
South Carolina,52
District of Columbia,1
Alaska,1

2025-01-27 04:34:20 - root - INFO - SQL:
SELECT a.`state_name`,
       COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
LIMIT 100
Results:
state_name,accidents_per_100k
Texas,0.5846145904450671
South Dakota,0.5750362786280785
Wyoming,0.8910781689412922
Alabama,0.3975238033068959
Arizona,0.61690801624392
California,0.18434231128712045
Colorado,0.4639411054603084
Florida,0.4166394964526959
Georgia,0.26873627544393286
Illinois,0.1350939083221043
Indiana,0.2878973703454193
Iowa,0.3395015285234947
Kentucky,1.5411724608201212
Louisiana,1.1324786796181046
Maryland,0.6004382159756633
Michigan,0.22596327469485178
Minnesota,0.37726246659105067
Missouri,0.5400468393201979
Montana,1.3153301731682763
Nevada,0.19754491183570586
New Mexico,2.012646235385794
New York,0.2803889934556349
North Carolina,0.5488276394912738
Ohio,0.17047321805067517
Oregon,0.1044322345756853
Washington,0.8212031749170039
Wisconsin,0.5978534949460279
Delaware,0.556839379680931
Arkansas,0.40075401295030866
Kansas,0.8536130752007394
Tennessee,0.5893776776888185
Alaska,0.5634358317017171
Hawaii,0.41657446893493916
Idaho,0.7442726096196597
Mississippi,0.07608511228477831
Nebraska,0.29195492653866634
Oklahoma,0.48000640008533446
Pennsylvania,0.18894104448971158
Utah,0.3862201478981779
Virginia,0.5374167675781213
West Virginia,0.14392832944906755
South Carolina,0.48284488168570805
North Dakota,0.09923869038669844

2025-01-27 04:34:22 - root - INFO - SQL:
SELECT a.`state_name`,
       COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
ORDER BY accidents_per_100k DESC
LIMIT 5
Results:
state_name,accidents_per_100k
New Mexico,2.012646235385794
Kentucky,1.5411724608201212
Montana,1.3153301731682763
Louisiana,1.1324786796181046
Wyoming,0.8910781689412922

2025-01-27 04:34:24 - root - INFO - SQL:
SELECT DISTINCT `driver_distracted_by_name`
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
LIMIT 100
Results:
driver_distracted_by_name
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Lost In Thought/Day Dreaming
Other Distraction

2025-01-27 04:34:25 - root - INFO - SQL:
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count, 2015 AS year
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, year

UNION ALL

SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count, 2016 AS year
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, year
LIMIT 100
Results:
state_name,accident_count,year
Ohio,59,2015
Virginia,129,2015
Utah,32,2015
Washington,158,2015
Delaware,15,2015
Michigan,67,2015
New Mexico,124,2015
Wyoming,15,2015
Texas,441,2015
Kentucky,200,2015
California,206,2015
South Carolina,67,2015
Oregon,12,2015
Alabama,57,2015
Tennessee,112,2015
Pennsylvania,72,2015
Arizona,118,2015
North Carolina,157,2015
Maryland,104,2015
Missouri,97,2015
West Virginia,8,2015
Florida,235,2015
Arkansas,35,2015
New Jersey,146,2015
New York,163,2015
Indiana,56,2015
Kansas,73,2015
Louisiana,154,2015
Massachusetts,65,2015
Montana,39,2015
Nebraska,16,2015
Oklahoma,54,2015
Minnesota,60,2015
Wisconsin,102,2015
Illinois,52,2015
Alaska,12,2015
Maine,14,2015
Mississippi,7,2015
Georgia,76,2015
Hawaii,17,2015
Colorado,70,2015
Vermont,5,2015
Idaho,35,2015
Iowa,31,2015
Connecticut,14,2015
South Dakota,14,2015
Nevada,16,2015
North Dakota,2,2015
New Hampshire,18,2015
Rhode Island,1,2015
Ohio,68,2016
New Hampshire,6,2016
Montana,20,2016
Vermont,4,2016
Alabama,57,2016
Arizona,102,2016
Arkansas,23,2016
California,227,2016
Colorado,77,2016
Florida,233,2016
Georgia,88,2016
Idaho,51,2016
Illinois,68,2016
Indiana,48,2016
Iowa,40,2016
Kentucky,192,2016
Louisiana,143,2016
Maryland,67,2016
Massachusetts,47,2016
Minnesota,37,2016
Mississippi,3,2016
New Mexico,147,2016
New York,143,2016
North Carolina,157,2016
Oklahoma,55,2016
Oregon,11,2016
Tennessee,132,2016
Texas,389,2016
Washington,147,2016
Wisconsin,117,2016

2025-01-27 04:34:27 - root - INFO - SQL:
SELECT a.`state_name`,
       COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
ORDER BY accidents_per_100k DESC
LIMIT 5
Results:
state_name,accidents_per_100k
New Mexico,2.3859596500138043
Kentucky,1.4795255623873163
Kansas,1.1108663307406883
Idaho,1.0845115168743613
Louisiana,1.0515873453596687

2025-01-27 04:34:27 - root - INFO - itercount: 0
2025-01-27 04:34:27 - root - INFO - Database Name: bigquery-public-data
Schema Name: census_bureau_usa
DDL describes table information.
,0
table_name,population_by_zip_2010
ddl,"CREATE TABLE `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
(
  geo_id STRING ,
  zipcode STRING NOT NULL ,
  population INT64 ,
  minimum_age INT64 ,
  maximum_age INT64  or the row is a total of the male, female, or overall population.""),
  gender STRING 
)
OPTIONS(
  labels=[(""freebqcovid"", """")]
);"

Some other tables have the similar structure: ['population_by_zip_2010', 'population_by_zip_2000']
Database Name: bigquery-public-data
Schema Name: nhtsa_traffic_fatalities
DDL describes table information.
,0
table_name, factor_2018
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. factor_2018`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  contributing_circumstances_motor_vehicle INT64 ,
  contributing_circumstances_motor_vehicle_name STRING 
);"

Some other tables have the similar structure: [' factor_2018', ' factor_2016', ' factor_2020', ' factor_2015', ' factor_2019', ' factor_2017']
,1
table_name,maneuver_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.maneuver_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_maneuvered_to_avoid INT64  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle. For more info on the codes, please look at <PC15 Driver Maneuvered to Avoid> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_maneuvered_to_avoid_name STRING  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle."")
);"

Some other tables have the similar structure: ['maneuver_2016', 'maneuver_2015']
,2
table_name,vsoe_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vsoe_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number INT64 ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  area_of_Impact_associated_with_the_event INT64 ,
  area_of_Impact_associated_with_the_event_name STRING 
);"

Some other tables have the similar structure: ['vsoe_2016', 'vsoe_2015']
,3
table_name,safetyeq_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.safetyeq_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_safety_equipment_use STRING  3 Reflective Clothing (Jacket, Backpack, etc.) 4 Protective Pads (Elbows, Knees, Shins, etc.) 5 Lighting 7 Other Safety Equipment 8 Not Reported 9 Unknown if Used"")
);"

Some other tables have the similar structure: ['safetyeq_2016', 'safetyeq_2015']
,4
table_name, drimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. drimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  condition_impairment_at_time_of_crash_driver INT64  at Time of Crash- Driver> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_driver_name STRING 
);"

Some other tables have the similar structure: [' drimpair_2016', ' drimpair_2015', ' drimpair_2019', ' drimpair_2017', ' drimpair_2020', ' drimpair_2018']
,5
table_name, safetyeq_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. safetyeq_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  nm_helmet STRING ,
  nm_helmet_name STRING ,
  nm_propad STRING  from injury.""),
  nm_propad_name STRING  from injury.""),
  nm_othpro STRING .""),
  nm_othpro_name STRING .""),
  nm_refclo STRING .""),
  nm_refclo_name STRING .""),
  nm_light STRING ,
  nm_light_name STRING ,
  nm_othpre STRING .""),
  nm_othpre_name STRING ."")
);"

Some other tables have the similar structure: [' safetyeq_2017', ' safetyeq_2020', ' safetyeq_2015', ' safetyeq_2016', ' safetyeq_2019', ' safetyeq_2018']
,6
table_name,nmcrash_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.nmcrash_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_contributing_circumstances INT64  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash. For more info on the codes, please look at <NM12 Non-Motorist Contributing Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_contributing_circumstances_name STRING  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash."")
)
OPTIONS(
  description=""This data file contains information about any contributing\ncircumstances or improper actions of people who are not occupants of motor vehicles\n(e.g., pedestrians and bicyclists) noted on the PAR. There is one record per action and\nthere is at least one record for each person who is not an occupant of a motor vehicle.""
);"

Some other tables have the similar structure: ['nmcrash_2015', 'nmcrash_2016']
,7
table_name, maneuver_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. maneuver_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_maneuvered_to_avoid INT64  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle. For more info on the codes, please look at <PC15 Driver Maneuvered to Avoid> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_maneuvered_to_avoid_name STRING  this driver attempted to avoid while the vehicle was on the road portion of the trafficway, just prior to the first harmful event for this vehicle."")
);"

Some other tables have the similar structure: [' maneuver_2015', ' maneuver_2020', ' maneuver_2018', ' maneuver_2016', ' maneuver_2019', ' maneuver_2017']
,8
table_name,drimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.drimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  condition_impairment_at_time_of_crash_driver INT64  at Time of Crash- Driver> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_driver_name STRING 
);"

Some other tables have the similar structure: ['drimpair_2016', 'drimpair_2015']
,9
table_name, vsoe_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vsoe_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number INT64 ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  area_of_Impact_associated_with_the_event INT64 ,
  area_of_Impact_associated_with_the_event_name STRING 
);"

Some other tables have the similar structure: [' vsoe_2017', ' vsoe_2015', ' vsoe_2016', ' vsoe_2018', ' vsoe_2020', ' vsoe_2019']
,10
table_name, damage_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. damage_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  damaged_areas INT64 ,
  damaged_areas_name STRING 
);"

Some other tables have the similar structure: [' damage_2017', ' damage_2020', ' damage_2019', ' damage_2015', ' damage_2018', ' damage_2016']
,11
table_name, accident_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. accident_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  number_of_vehicle_forms_submitted_all INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_parked_working_vehicles INT64 ,
  number_of_forms_submitted_for_persons_not_in_motor_vehicles INT64  that are applicable to this case (i.e., non-occupants). 00-99 Number of Persons Not in Motor Vehicles""),
  number_of_forms_submitted_for_persons_in_motor_vehicles INT64  Forms that are applicable to this case (i.e., occupants). 000-999 Number of Person Forms""),
  number_of_persons_in_motor_vehicles_in_transport_mvit INT64 ,
  number_of_persons_not_in_motor_vehicles_in_transport_mvit INT64 , or an other non-motorist (e.g., person outside a trafficway, person in a house). 0-98 Number of Persons Not in Motor Vehicles in Transport""),
  county INT64  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  county_name STRING  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  city INT64  publication of worldwide Geographic Location Codes (GLC). 0000 Not Applicable 0001-9996 GSA Geographical Codes 9997 Other 9898 Not Reported 9999 Unknown""),
  city_name STRING  publication of worldwide Geographic Location Codes (GLC). 0000 Not Applicable 0001-9996 GSA Geographical Codes 9997 Other 9898 Not Reported 9999 Unknown""),
  day_of_crash INT64 ,
  day_name STRING ,
  month_of_crash INT64 ,
  month_of_crash_name STRING ,
  year_of_crash INT64 ,
  day_of_week INT64 ,
  day_of_week_name STRING ,
  hour_of_crash INT64 ,
  hour_of_crash_name STRING ,
  minute_of_crash INT64 ,
  minute_of_crash_name STRING ,
  national_highway_system INT64 ,
  national_highway_system_name STRING ,
  route_signing INT64  8 Other 9 Unknown""),
  route_signing_name STRING ,
  trafficway_identifier STRING  999999999999999999999999999999 Unknown""),
  trafficway_identifier_2 STRING  999999999999999999999999999999 Unknown""),
  land_use INT64 , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  land_use_name STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  functional_system INT64 , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  functional_system_name STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  ownership INT64 ,
  ownership_name STRING ,
  milepoint INT64  99998 Not Reported 99999 Unknown""),
  milepoint_name STRING  99998 Not Reported 99999 Unknown""),
  latitude FLOAT64  DD.DDDD Actual Degrees 77.7777 Not Reported 88.8888 Not Available (If State Exempt) 99.9999 Unknown""),
  latitude_name STRING  DD.DDDD Actual Degrees 77.7777 Not Reported 88.8888 Not Available (If State Exempt) 99.9999 Unknown""),
  longitude FLOAT64  DDD.DDDD Actual Degrees 777.7777 Not Reported 888.8888 Not Available (If State Exempt) 999.9999 Unknown""),
  longitude_name STRING  DDD.DDDD Actual Degrees 777.7777 Not Reported 888.8888 Not Available (If State Exempt) 999.9999 Unknown""),
  special_jurisdiction INT64 . 0 No Special Jurisdiction (Includes National Forests Since 2008) 1 National Park Service 2 Military 3 Indian Reservation 4 College/University Campus 5 Other Federal Properties (Since 1977) 8 Other (Since 1976) 9 Unknown""),
  special_jurisdiction_name STRING .""),
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  relation_to_junction_within_interchange_area INT64  and is based on the location of the “First Harmful Event” of the crash. 0 No 1 Yes 8 Not Reported 9 Unknown""),
  relation_to_junction_within_interchange_area_name STRING  and is based on the location of the “First Harmful Event” of the crash. 0 No 1 Yes 8 Not Reported 9 Unknown""),
  relation_to_junction_specific_location INT64  and is based on the location of the “First Harmful Event” of the crash. For more info on the codes, please look at <C21B Relation to Junction- Specific Location> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  relation_to_junction_specific_location_name STRING  and is based on the location of the “First Harmful Event” of the crash.""),
  type_of_intersection INT64 ,
  type_of_intersection_name STRING ,
  work_zone INT64 ,
  work_zone_name STRING ,
  relation_to_trafficway INT64 ,
  relation_to_trafficway_name STRING ,
  light_condition INT64 ,
  light_condition_name STRING ,
  atmospheric_conditions_1 INT64 ,
  atmospheric_conditions_1_name STRING ,
  atmospheric_conditions_2 INT64 ,
  atmospheric_conditions_2_name STRING ,
  atmospheric_conditions INT64 ,
  atmospheric_conditions_name STRING ,
  school_bus_related INT64 ,
  school_bus_related_name STRING ,
  rail_grade_crossing_identifier STRING ,
  rail_grade_crossing_identifier_name STRING ,
  hour_of_notification INT64  88 Not Applicable or Not Notified 99 Unknown Hour 99 Unknown if Notified (when NOT_MIN = 98)""),
  hour_of_notification_name STRING  88 Not Applicable or Not Notified 99 Unknown Hour 99 Unknown if Notified (when NOT_MIN = 98)""),
  minute_of_notification INT64  88 Not Applicable or Not Notified 98 Unknown if Notified 99 Unknown Minutes""),
  minute_of_notification_name STRING  88 Not Applicable or Not Notified 98 Unknown if Notified 99 Unknown Minutes""),
  hour_of_arrival_at_scene INT64  -- Not Notified (when ARR_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when ARR_MIN = 97) 99 Unknown if Arrived (when ARR_MIN = 98)""),
  hour_of_arrival_at_scene_name STRING  -- Not Notified (when ARR_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when ARR_MIN = 97) 99 Unknown if Arrived (when ARR_MIN = 98)""),
  minute_of_arrival_at_scene INT64  -- Not Notified (when ARR_HOUR = 00) 88 Not Applicable or Not Notified 97 Officially Cancelled 98 Unknown if Arrived 99 Unknown Minutes""),
  minute_of_arrival_at_scene_name STRING  -- Not Notified (when ARR_HOUR = 00) 88 Not Applicable or Not Notified 97 Officially Cancelled 98 Unknown if Arrived 99 Unknown Minutes""),
  hour_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when HOSP_MIN = 97) 99 Unknown if Transported (when HOSP_MIN = 98)""),
  hour_of_ems_arrival_at_hospital_name STRING  -- Not Notified or Not Transported (when HOSP_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when HOSP_MIN = 97) 99 Unknown if Transported (when HOSP_MIN = 98)""),
  minute_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_HR = 00) 88 Not Applicable or Not Notified 96 Terminated Transport 97 Officially Cancelled 98 Unknown if Transported 99 Unknown Minutes""),
  minute_of_ems_arrival_at_hospital_name STRING  -- Not Notified or Not Transported (when HOSP_HR = 00) 88 Not Applicable or Not Notified 96 Terminated Transport 97 Officially Cancelled 98 Unknown if Transported 99 Unknown Minutes""),
  related_factors_crash_level_1 INT64 ,
  related_factors_crash_level_1_name STRING ,
  related_factors_crash_level_2 INT64 ,
  related_factors_crash_level_2_name STRING ,
  related_factors_crash_level_3 INT64 ,
  related_factors_crash_level_3_name STRING ,
  number_of_fatalities INT64 ,
  number_of_drunk_drivers INT64 ,
  timestamp_of_crash TIMESTAMP 
);"

Some other tables have the similar structure: [' accident_2016', ' accident_2020', ' accident_2015', ' accident_2017', ' accident_2018', ' accident_2019']
,12
table_name, pbtype_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. pbtype_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  person_type INT64 ,
  person_type_name STRING ,
  age INT64 ,
  age_name STRING ,
  sex STRING ,
  sex_name STRING ,
  marked_crosswalk_present STRING ,
  marked_crosswalk_present_name STRING ,
  sidewalk_present STRING ,
  sidewalk_present_name STRING ,
  school_zone STRING ,
  school_zone_name STRING ,
  crash_type_pedestrian INT64 ,
  crash_type_pedestrian_name STRING ,
  crash_type_bicycle INT64 ,
  crash_type_bicycle_name STRING ,
  crash_location_pedestrian STRING ,
  crash_location_pedestrian_name STRING ,
  crash_location_bicycle STRING ,
  crash_location_bicycle_name STRING ,
  pedestrian_position STRING ,
  pedestrian_position_name STRING ,
  bicyclist_position STRING ,
  bicyclist_position_name STRING ,
  pedestrian_initial_direction_of_travel STRING ,
  pedestrian_initial_direction_of_travel_name STRING ,
  bicyclist_initial_direction_of_travel STRING ,
  bicyclist_initial_direction_of_travel_name STRING ,
  motorist_initial_direction_of_travel STRING ,
  motorist_initial_direction_of_travel_name STRING ,
  motorist_maneuver STRING ,
  motorist_maneuver_name STRING ,
  intersection_leg STRING ,
  intersection_leg_name STRING ,
  pedestrian_scenario STRING ,
  pedestrian_scenario_name STRING ,
  crash_group_pedestrian INT64 ,
  crash_group_pedestrian_name STRING ,
  crash_group_bicycle INT64 ,
  crash_group_bicycle_name STRING 
);"

Some other tables have the similar structure: [' pbtype_2015', ' pbtype_2020', ' pbtype_2017', ' pbtype_2016', ' pbtype_2018', ' pbtype_2019']
,13
table_name,distract_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_distracted_by INT64  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur. For more info on the codes, please look at <PC16 Driver Distracted By> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_distracted_by_name STRING  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur."")
);"

Some other tables have the similar structure: ['distract_2016', 'distract_2015']
,14
table_name, violatn_2017
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. violatn_2017`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  violations_charged STRING ,
  violations_charged_name STRING 
);"

Some other tables have the similar structure: [' violatn_2017', ' violatn_2018', ' violatn_2020', ' violatn_2016', ' violatn_2019', ' violatn_2015']
,15
table_name, nmcrash_2018
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. nmcrash_2018`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_contributing_circumstances INT64  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash. For more info on the codes, please look at <NM12 Non-Motorist Contributing Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_contributing_circumstances_name STRING  and/or circumstances of this non-motorist that law enforcement indicated may have contributed to the crash."")
);"

Some other tables have the similar structure: [' nmcrash_2018', ' nmcrash_2019', ' nmcrash_2017', ' nmcrash_2016', ' nmcrash_2020', ' nmcrash_2015']
,16
table_name,person_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.person_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  number_of_motor_vehicle_striking_non_motorist INT64  of the in-transport vehicle that made contact with this non-motorist. 000 Occupant of a Motor Vehicle 001-998 Vehicle Number of Striking Vehicle 999 Unknown""),
  county INT64  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  land_use STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  land_use_name STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  functional_system STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  functional_system_name STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  school_bus_related STRING ,
  vehicle_make INT64  of this vehicle. For more info on the codes, please look at <V9 Vehicle Make> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle.""),
  make_model_combined INT64  followed by the 3-digit “Vehicle Model” code (MODEL). See the current FARS/NASS GES Coding and Validation Manual for vehicle make and model codes.""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_trailing STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use STRING ,
  rollover STRING ,
  initial_contact_point INT64 ,
  initial_contact_point_name STRING ,
  fire_occurrence STRING ,
  age INT64 ,
  sex STRING ,
  person_type INT64 ,
  person_type_name STRING ,
  injury_severity INT64 ,
  injury_severity_name STRING ,
  seating_position INT64 ,
  seating_position_name STRING ,
  restraint_system_helmet_use INT64 ,
  restraint_system_helmet_use_name STRING ,
  indication_of_misuse_of_restraint_system_helmet STRING ,
  air_bag_deployed INT64 ,
  air_bag_deployed_name STRING ,
  ejection INT64  7 Not Reported 8 Not Applicable -- Unknown (2007-2008) 9 Unknown if Ejected (Since 2009)""),
  ejection_name STRING ,
  ejection_path INT64 ,
  ejection_path_name STRING ,
  extrication STRING ,
  police_reported_alcohol_involvement STRING  1 Yes (Alcohol Involved) 8 Not Reported 9 Unknown (Police Reported)""),
  method_of_alcohol_determination_by_police STRING  2 Preliminary Breath Test (PBT) 3 Behavioral 4 Passive Alcohol Sensor (PAS) 5 Observed 8 Other (e.g., Saliva Test) 9 Not Reported""),
  alcohol_test_status1 STRING ,
  alcohol_test_status2 STRING ,
  alcohol_test_status3 STRING   Test Refused (1991-2008) 995 Not Reported 996 None Given 997 AC Test Performed, Results Unknown 998 PBT Positive Reading with No Actual Value (Since 2004) -- Unknown if Tested/Not Reported 999 Unknown if Tested""),
  alcohol_test_status3_name STRING   Test Refused (1991-2008) 995 Not Reported 996 None Given 997 AC Test Performed, Results Unknown 998 PBT Positive Reading with No Actual Value (Since 2004) -- Unknown if Tested/Not Reported 999 Unknown if Tested""),
  police_reported_drug_involvement STRING  1 Yes (Drugs Involved) 8 Not Reported 9 Unknown (Police Reported)""),
  method_of_drug_determination_by_police STRING  2 Drug Recognition Technician (DRT) Determination 3 Behavioral 7 Other 8 Not Reported""),
  drug_test_status STRING ,
  drug_test_type1 STRING ,
  drug_test_type2 STRING ,
  drug_test_type3 STRING ,
  drug_test_type4 INT64 ,
  drug_test_type4_name STRING ,
  drug_test_type5 INT64 ,
  drug_test_type5_name STRING ,
  drug_test_type6 INT64 ,
  drug_test_type6_name STRING ,
  transported_to_first_treatment_facility INT64 ,
  transported_to_first_treatment_facility_name STRING ,
  died_at_scene_en_route STRING ,
  day_of_death INT64  01-31 Day of the Month of the Death 99 Unknown (Since 2008)""),
  month_of_death INT64 ,
  year_of_death INT64  xxxx Year of the Death 9999 Unknown""),
  hour_of_death INT64 ,
  minute_of_death INT64 ,
  death_time INT64  9999 Unknown""),
  lag_hours INT64 ,
  lag_minutes INT64 , between the time of the crash and this person’s time of death. 00-59 Minutes 99 Unknown""),
  related_factors_person_level1 INT64 ,
  related_factors_person_level2 INT64 ,
  related_factors_person_level3 INT64 ,
  fatal_injury_at_work STRING  1 Yes (The Injury Was At Work) 8 Not Applicable (Not A Fatality) 9 Unknown""),
  hispanic_origin INT64 ,
  hispanic_origin_name STRING ,
  race INT64 ,
  race_name STRING ,
  non_motorist_location_at_time_of_crash INT64 ,
  non_motorist_location_at_time_of_crash_name STRING ,
  timestamp_of_crash TIMESTAMP 
)
OPTIONS(
  description=""This data file contains information describing all persons\ninvolved in the crash including motorists (i.e., drivers and passengers of in-transport\nmotor vehicles) and non-motorists (e.g., pedestrians and pedalcyclists). It provides\ninformation such as age, sex, vehicle occupant restraint use, and injury severity. There\nis one record per person.""
);"

Some other tables have the similar structure: ['person_2015', 'person_2016']
,17
table_name,factor_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.factor_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  contributing_circumstances_motor_vehicle INT64 ,
  contributing_circumstances_motor_vehicle_name STRING 
);"

Some other tables have the similar structure: ['factor_2016', 'factor_2015']
,18
table_name,damage_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.damage_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  damaged_areas INT64 ,
  damaged_areas_name STRING 
);"

Some other tables have the similar structure: ['damage_2016', 'damage_2015']
,19
table_name,accident_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  number_of_vehicle_forms_submitted_all INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_parked_working_vehicles INT64 ,
  number_of_forms_submitted_for_persons_not_in_motor_vehicles INT64  that are applicable to this case (i.e., non-occupants). 00-99 Number of Persons Not in Motor Vehicles""),
  number_of_persons_not_in_motor_vehicles_in_transport_mvit INT64 , or an other non-motorist (e.g., person outside a trafficway, person in a house). 0-98 Number of Persons Not in Motor Vehicles in Transport""),
  number_of_persons_in_motor_vehicles_in_transport_mvit INT64 ,
  number_of_forms_submitted_for_persons_in_motor_vehicles INT64  Forms that are applicable to this case (i.e., occupants). 000-999 Number of Person Forms""),
  county INT64  publication of worldwide Geographic Location Codes (GLC). 000 Not Applicable 001-996 Use GSA Geographical Codes 997 Other 998 Not Reported 999 Unknown""),
  city INT64  publication of worldwide Geographic Location Codes (GLC). 0000 Not Applicable 0001-9996 GSA Geographical Codes 9997 Other 9898 Not Reported 9999 Unknown""),
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  year_of_crash INT64 ,
  day_of_week INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  national_highway_system INT64 ,
  land_use INT64 , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  land_use_name STRING , 2 (Urban), 6 (Trafficway Not in State Inventory), 8 (Not Reported) and 9 (Unknown).""),
  functional_system INT64 , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  functional_system_name STRING , 02 (Principal Arterial – Other Freeways and Expressways), 03 (Principal Arterial – Other), 04 (Minor Arterial), 05 (Major Collector), 06 (Minor Collector), 07 (Local), 96 (Trafficway Not in State Inventory), 98 (Not Reported), and 99 (Unknown).""),
  ownership INT64 ,
  ownership_name STRING ,
  route_signing INT64  8 Other 9 Unknown""),
  route_signing_name STRING ,
  trafficway_identifier STRING  999999999999999999999999999999 Unknown""),
  trafficway_identifier_2 STRING  999999999999999999999999999999 Unknown""),
  milepoint INT64  99998 Not Reported 99999 Unknown""),
  latitude FLOAT64  DD.DDDD Actual Degrees 77.7777 Not Reported 88.8888 Not Available (If State Exempt) 99.9999 Unknown""),
  longitude FLOAT64  DDD.DDDD Actual Degrees 777.7777 Not Reported 888.8888 Not Available (If State Exempt) 999.9999 Unknown""),
  special_jurisdiction INT64 . 0 No Special Jurisdiction (Includes National Forests Since 2008) 1 National Park Service 2 Military 3 Indian Reservation 4 College/University Campus 5 Other Federal Properties (Since 1977) 8 Other (Since 1976) 9 Unknown""),
  special_jurisdiction_name STRING .""),
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  relation_to_junction_within_interchange_area STRING  and is based on the location of the “First Harmful Event” of the crash. 0 No 1 Yes 8 Not Reported 9 Unknown""),
  relation_to_junction_specific_location INT64  and is based on the location of the “First Harmful Event” of the crash. For more info on the codes, please look at <C21B Relation to Junction- Specific Location> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  relation_to_junction_specific_location_name STRING  and is based on the location of the “First Harmful Event” of the crash.""),
  type_of_intersection STRING ,
  work_zone STRING ,
  relation_to_trafficway INT64 ,
  relation_to_trafficway_name STRING ,
  light_condition INT64 ,
  light_condition_name STRING ,
  atmospheric_conditions_1 INT64 ,
  atmospheric_conditions_1_name STRING ,
  atmospheric_conditions_2 INT64 ,
  atmospheric_conditions_2_name STRING ,
  atmospheric_conditions INT64 ,
  atmospheric_conditions_name STRING ,
  school_bus_related STRING ,
  rail_grade_crossing_identifier STRING ,
  hour_of_notification INT64  88 Not Applicable or Not Notified 99 Unknown Hour 99 Unknown if Notified (when NOT_MIN = 98)""),
  minute_of_notification INT64  88 Not Applicable or Not Notified 98 Unknown if Notified 99 Unknown Minutes""),
  hour_of_arrival_at_scene INT64  -- Not Notified (when ARR_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when ARR_MIN = 97) 99 Unknown if Arrived (when ARR_MIN = 98)""),
  minute_of_arrival_at_scene INT64  -- Not Notified (when ARR_HOUR = 00) 88 Not Applicable or Not Notified 97 Officially Cancelled 98 Unknown if Arrived 99 Unknown Minutes""),
  hour_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_MIN = 00) 88 Not Applicable or Not Notified 99 Unknown Hour 99 Officially Cancelled (when HOSP_MIN = 97) 99 Unknown if Transported (when HOSP_MIN = 98)""),
  minute_of_ems_arrival_at_hospital INT64  -- Not Notified or Not Transported (when HOSP_HR = 00) 88 Not Applicable or Not Notified 96 Terminated Transport 97 Officially Cancelled 98 Unknown if Transported 99 Unknown Minutes""),
  related_factors_crash_level_1 INT64 ,
  related_factors_crash_level_1_name STRING ,
  related_factors_crash_level_2 INT64 ,
  related_factors_crash_level_2_name STRING ,
  related_factors_crash_level_3 INT64 ,
  related_factors_crash_level_3_name STRING ,
  number_of_fatalities INT64 ,
  number_of_drunk_drivers INT64 ,
  timestamp_of_crash TIMESTAMP 
);"

Some other tables have the similar structure: ['accident_2016', 'accident_2015']
,20
table_name, cevent_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. cevent_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  vehicle_number_other_vehicle_name STRING  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING 
);"

Some other tables have the similar structure: [' cevent_2019', ' cevent_2017', ' cevent_2016', ' cevent_2020', ' cevent_2018', ' cevent_2015']
,21
table_name, distract_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. distract_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  driver_distracted_by INT64  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur. For more info on the codes, please look at <PC16 Driver Distracted By> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  driver_distracted_by_name STRING  which best describe this driver’s attention to driving prior to the driver’s realization of an impending critical event or just prior to impact if realization of an impending critical event does not occur."")
);"

Some other tables have the similar structure: [' distract_2015', ' distract_2017', ' distract_2018', ' distract_2016', ' distract_2019', ' distract_2020']
,22
table_name, nmimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. nmimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  condition_impairment_at_time_of_crash_non_motorist INT64  at Time of Crash- Non-Motorist> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_non_motorist_name STRING 
);"

Some other tables have the similar structure: [' nmimpair_2016', ' nmimpair_2015', ' nmimpair_2018', ' nmimpair_2019', ' nmimpair_2017', ' nmimpair_2020']
,23
table_name,pbtype_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.pbtype_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  person_type INT64 ,
  person_type_name STRING ,
  age INT64 ,
  sex STRING ,
  marked_crosswalk_present STRING ,
  sidewalk_present STRING ,
  school_zone STRING ,
  crash_type_pedestrian INT64 ,
  crash_type_pedestrian_name STRING ,
  crash_type_bicycle INT64 ,
  crash_type_bicycle_name STRING ,
  crash_location_pedestrian STRING ,
  crash_location_bicycle STRING ,
  pedestrian_position STRING ,
  bicyclist_position STRING ,
  pedestrian_initial_direction_of_travel STRING ,
  bicyclist_initial_direction_of_travel STRING ,
  motorist_initial_direction_of_travel STRING ,
  motorist_maneuver STRING ,
  intersection_leg STRING ,
  pedestrian_scenario STRING ,
  pedestrian_scenario_name STRING ,
  crash_group_pedestrian INT64 ,
  crash_group_pedestrian_name STRING ,
  crash_group_bicycle INT64 ,
  crash_group_bicycle_name STRING 
)
OPTIONS(
  description=""This data file contains information about crashes between\nmotor vehicles and pedestrians, people on personal conveyances and bicyclists. Data\nfrom the crash are enter into the Pedestrian and Bicycle Crash Analysis Tool (PBCAT).\nThe output fields from PBCAT, including the pre-crash actions of the parties involved\n(crash type), are included in this data set. There is one record for each pedestrian,\nbicyclist or person on a personal conveyance.""
);"

Some other tables have the similar structure: ['pbtype_2015', 'pbtype_2016']
,24
table_name, nmprior_2018
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. nmprior_2018`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_action_circumstances INT64  of the non-motorist immediately prior to their involvement in the crash. For more info on the codes, please look at <NM11 Non-Motorist Action/Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_action_circumstances_name STRING  of the non-motorist immediately prior to their involvement in the crash."")
);"

Some other tables have the similar structure: [' nmprior_2018', ' nmprior_2019', ' nmprior_2020', ' nmprior_2015', ' nmprior_2017', ' nmprior_2016']
,25
table_name, vevent_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vevent_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number STRING ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  vehicle_number_other_vehicle_name STRING  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315"")
);"

Some other tables have the similar structure: [' vevent_2019', ' vevent_2017', ' vevent_2016', ' vevent_2018', ' vevent_2020', ' vevent_2015']
,26
table_name,violatn_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.violatn_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  violations_charged STRING ,
  violations_charged_name STRING 
);"

Some other tables have the similar structure: ['violatn_2016', 'violatn_2015']
,27
table_name, parkwork_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. parkwork_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_occupants INT64 ,
  number_of_occupants_name STRING ,
  day_of_crash INT64 ,
  day_of_crash_name STRING ,
  month_of_crash INT64 ,
  month_of_crash_name STRING ,
  hour_of_crash INT64 ,
  hour_of_crash_name STRING ,
  minute_of_crash INT64 ,
  minute_of_crash_name STRING ,
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  unit_type INT64 ""),
  unit_type_name STRING ""),
  hit_and_run INT64 . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0 No / No Hit-and-Run -- Hit Motor Vehicle in Transport 1 Yes -- Hit Pedestrian or Non-Motorist -- Hit Parked Vehicle (Working Vehicle, Since 2004) or Object -- Other Involved Person, not a driver, left Scene (2005-2006) -- Hit-and-Run, Other Involved Person Left Scene (2007-2008) -- Not Reported 9 Unknown""),
  hit_and_run_name STRING . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0 No / No Hit-and-Run -- Hit Motor Vehicle in Transport 1 Yes -- Hit Pedestrian or Non-Motorist -- Hit Parked Vehicle (Working Vehicle, Since 2004) or Object -- Other Involved Person, not a driver, left Scene (2005-2006) -- Hit-and-Run, Other Involved Person Left Scene (2007-2008) -- Not Reported 9 Unknown""),
  registration_state INT64 ,
  registration_state_name STRING ,
  registered_vehicle_owner INT64  Was Registered Owner 2 Driver (of This Vehicle) Not Registered Owner (Other Private Owner) 3 Vehicle Registered as Business/Company/Government Vehicle 4 Vehicle Registered as Rental Vehicle 5 Vehicle Was Stolen (Reported By Police) -- Driverless Vehicle 6 Driverless/Motor Vehicle Parked/Stopped Off Roadway 9 Unknown""),
  registered_vehicle_owner_name STRING ,
  vehicle_make INT64  of this vehicle.For more info on the codes, please look at <V9 Vehicle Make> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle.""),
  vehicle_model INT64 ,
  make_model_combined STRING  followed by the 3-digit “Vehicle Model” code (MODEL).See the current FARS/NASS GES Coding and Validation Manual for vehicle make and model codes.""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_model_year INT64 ,
  vehicle_model_year_name STRING ,
  vehicle_identification_number_vin STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc.-- First 10 Characters xxxxxxxxxxxx First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vehicle_identification_number_vin_name STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc.-- First 10 Characters xxxxxxxxxxxx First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vin_character_1 STRING ,
  vin_character_2 STRING ,
  vin_character_3 STRING ,
  vin_character_4 STRING ,
  vin_character_5 STRING ,
  vin_character_6 STRING ,
  vin_character_7 STRING ,
  vin_character_8 STRING ,
  vin_character_9 STRING ,
  vin_character_10 STRING ,
  vin_character_11 STRING ,
  vin_character_12 STRING ,
  vehicle_trailing INT64 ,
  vehicle_trailing_name STRING ,
  mcid_issuing_authority INT64  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_issuing_authority_name STRING  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_identification_number STRING ,
  mcid_identification_number_name STRING ,
  motor_carrier_identification_number STRING ,
  motor_carrier_identification_number_name STRING ,
  gross_vehicle_weight_rating INT64 ,
  gross_vehicle_weight_rating_name STRING ,
  vehicle_configuration INT64 ,
  vehicle_configuration_name STRING ,
  cargo_body_type INT64 ,
  cargo_body_type_name STRING ,
  hazardous_material_involvement INT64 ,
  hazardous_material_involvement_name STRING ,
  hazardous_material_placard INT64 ,
  hazardous_material_placard_name STRING ,
  hazardous_material_identification_number INT64 ,
  hazardous_material_identification_number_name STRING ,
  hazardous_material_class_number INT64 ,
  hazardous_material_class_number_name STRING ,
  release_of_hazardous_material_from_the_cargo_compartment INT64 ,
  release_of_hazardous_material_from_the_cargo_compartment_name STRING ,
  bus_use INT64 ,
  bus_use_name STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use INT64 ,
  emergency_motor_vehicle_use_name STRING ,
  underride_override INT64 ,
  underride_override_name STRING ,
  initial_contact_point INT64 ,
  initial_contact_point_name STRING ,
  extent_of_damage INT64 ,
  extent_of_damage_name STRING ,
  vehicle_removal INT64 ,
  vehicle_removal_name STRING ,
  most_harmful_event INT64 ,
  most_harmful_event_name STRING ,
  related_factors_vehicle_level1 INT64 ,
  related_factors_vehicle_level1_name STRING ,
  related_factors_vehicle_level2 INT64 ,
  related_factors_vehicle_level2_name STRING ,
  fire_occurrence INT64 ,
  fire_occurrence_name STRING ,
  fatalities_in_vehicle INT64 ,
  ptrlr1vin STRING  of any trailing units of a combination vehicle.""),
  ptrlr1vinname STRING  of any trailing units of a combination vehicle.""),
  ptrlr2vin STRING  of any trailing units of a combination vehicle.""),
  ptrlr2vinname STRING  of any trailing units of a combination vehicle.""),
  ptrlr3vin STRING  of any trailing units of a combination vehicle.""),
  ptrlr3vinname STRING  of any trailing units of a combination vehicle."")
);"

Some other tables have the similar structure: [' parkwork_2019', ' parkwork_2018', ' parkwork_2016', ' parkwork_2015', ' parkwork_2020', ' parkwork_2017']
,28
table_name,vision_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vision_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  drivers_vision_obscured_by INT64 ,
  drivers_vision_obscured_by_name STRING 
)
OPTIONS(
  description=""This data file contains information about circumstances which\nmay have obscured the driver’s vision. There is at least one record per in-transport\nmotor vehicle. Each obstruction is a separate record.""
);"

Some other tables have the similar structure: ['vision_2015', 'vision_2016']
,29
table_name, vision_2019
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vision_2019`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  drivers_vision_obscured_by INT64 ,
  drivers_vision_obscured_by_name STRING 
);"

Some other tables have the similar structure: [' vision_2019', ' vision_2020', ' vision_2017', ' vision_2018', ' vision_2016', ' vision_2015']
,30
table_name, vindecode_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities. vindecode_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  state_name STRING  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_make STRING ,
  marketing_year INT64 ,
  vehicle_type_code STRING ,
  vehicle_type STRING ,
  make_name STRING  Full name of the make (i.e. Chevrolet)""),
  model_code STRING  description""),
  vehicle_trim STRING ,
  vehicle_trim_1 STRING ,
  vehicle_trim_2 STRING ,
  vehicle_trim_3 STRING ,
  vehicle_trim_4 STRING ,
  body_style_code STRING ,
  body_style STRING ,
  num_of_doors INT64 ,
  number_of_wheels INT64 ,
  num_of_wheels_by_power_train INT64 ,
  vehicle_manufacturer_code STRING  Standard abbreviation of the name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  vehicle_manufacturer_name STRING  The name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  displacement_cid INT64  displacement in cubic inches. This is a rounded, marketing value, like 302 cubic inches, instead of 4967 cc.""),
  displacement_cc INT64  displacement in cubic centimeters. We intend to use this as the definitive, exact displacement value, i.e. 4967 cc.""),
  cylinder_count_code STRING ,
  cycle_count INT64  Refers to the cycle or stroke of an engine. 2-strokes are lightweight and simpler, but they burn oil, by design. Few cars on the road in North America are two-strokes, the last one offered was a 1967 Saab.""),
  fuel_code STRING  What an internal combustion burns to move a piston in a cylinder""),
  fuel STRING  description""),
  type_of_fuel_code STRING ,
  type_of_fuel STRING ,
  carburetion_types_code STRING ,
  carburetion_types STRING ,
  num_of_barrels STRING ,
  gross_vehicle_weights_range_code INT64 ,
  gross_vehicle_weights_range STRING  for trucks. This rating may or may not equal the actual GVW.""),
  distance_between_axles_for_base_model FLOAT64 ,
  distance_between_axles_for_particular_series STRING ,
  front_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  front_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  front_tire_size_code STRING ,
  front_tire_size STRING  As in '17R245'""),
  rear_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  rear_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  rear_tire_size_code STRING ,
  rear_tire_size STRING  As in '17R245'""),
  tonnage_rating STRING  description""),
  shipping_weight STRING ""),
  base_price STRING ,
  drive_type_1 STRING  This element describes type of driving configuration for cars and trucks such as FWD, AWD, RWD.""),
  drive_type_2 STRING  description""),
  country_sold_code STRING  Country where the vehicle is planned to be sold (may have different emissions standards).""),
  country_sold STRING  description""),
  brakes_abs_code STRING  A code that describes whether a vehicle has or does not have anti-lock brakes, and what kind of brakes they are. (Not coded for heavy truck). This is based on the series code that is assigned the vehicle from VINA.""),
  brakes_abs_description STRING  description""),
  security_type_code STRING  Describes the security system (if any) installed on this model.""),
  security_type STRING  description""),
  daytime_running_lights_1 STRING A Polk assigned code that identifies whether or not the vehicle has daytime running lights.""),
  daytime_running_lights_2 STRING  description""),
  restraint_type_code STRING  A Polk assigned code that identifies the type of restraints that a vehicle has based on VIN.""),
  restraint_type STRING  description""),
  cab_configuration_code STRING  Cab Type describes the physical configuration of a truck's cabin.""),
  cab_configuration STRING  medium description""),
  axle_type_front_axle_code STRING  The location of the front axle of a truck tractor. Set forward increases stability on the highway, Setback increases maneuverability in tight spaces.""),
  axle_type_front_axle STRING  short description""),
  axle_type_rear_axle_code STRING  Represents rear axle configuration on a truck tractor. Tandem axles increase load bearing capability.""),
  axle_type_rear_axle STRING  short description""),
  brake_type_code STRING  The type of brakes on the Vehicle (currently commercial truck only). Truck VIN determines this currently""),
  brake_type STRING  description""),
  engine_manufacture_code STRING  A Polk assigned code given to the original equipment manufacture of the within a vehicle""),
  engine_manufacture STRING  description""),
  engine_model STRING  description""),
  duty_type_code STRING  A Polk assigned code that represents the duty type of a truck engine, based on manufacturer information.""),
  duty_type STRING  medium description""),
  bed_length_code STRING  Code representing the manufacturer's description of the relative size of the cargo area of a pickup truck or van. A 'long' Ford Ranger bed (compact pickup) may well be shorter than a 'short' bed on an F350 (large industrial pickup).""),
  bed_length STRING  description""),
  standard_segmentation_code STRING ,
  standard_segmentation STRING ,
  plant_code STRING  Plant code where vehicle was manufactured.""),
  plant_country STRING  This is the country where the plant is located. Example values are USA, Canada and Japan.""),
  plant_city STRING  This is the city where the plant is located.""),
  plant_country_code STRING ,
  plant_state_code STRING ,
  plant_state STRING  This is the state or province (Canada) location of the plant.""),
  origin_code STRING  A code that indicates the origin of a vehicle.""),
  origin STRING  description""),
  displacement_liters FLOAT64  displacement in rounded Liters, where 1,000 cubic centimeters = 1 liter. Even domestic makes will advertise displacement in terms of liters (e.g. 5.0 liter mustang, which equates to a 302 CID or 4967 cc displacement).""),
  block_type STRING  Description""),
  head_configuration_1 STRING  Describes the cylinder head's camshaft/valve configuration.""),
  head_configuration_2 STRING  description""),
  valves_per_cylinder INT64  Number of intake/exhaust valves per cylinder.""),
  valves_total INT64  Total number of intake/exhaust valves.""),
  engine_code STRING  Code derived from the VIN (not the secondary VIN for a motorcycle). Usually a single character, some manufactures give full positions 4-8 and engine information from that; they do not break it down any further.""),
  is_incomplete STRING ""),
  battery_type_code STRING ,
  battery_type STRING ,
  total_battery_power STRING ,
  battery_voltage STRING ,
  supercharge_flag STRING ,
  supercharge_flag_description STRING ,
  turbocharger_flag STRING ,
  turbocharger_flag_description STRING ,
  variable_valve_timing_flag STRING ,
  motorcycles_body_style_code STRING ,
  motorcycles_body_style STRING 
);"

,31
table_name,vevent_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vevent_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number INT64 ,
  vehicle_event_number INT64 ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315"")
)
OPTIONS(
  description=""This data file contains the sequence of events for each intransport\nmotor vehicle involved in the crash. This data file has the same data elements\nas the Cevent data file. In addition, this data file has a data element that records the\nsequential event number for each vehicle (VEVENTNUM). There is one record for each\nevent for each in-transport motor vehicle.""
);"

Some other tables have the similar structure: ['vevent_2015', 'vevent_2016']
,32
table_name,vindecode_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vindecode_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC).""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  vehicle_make STRING ,
  marketing_year INT64 ,
  vehicle_type_code STRING ,
  vehicle_type STRING ,
  make_name STRING  Full name of the make (i.e. Chevrolet)""),
  model_code STRING  description""),
  vehicle_trim STRING ,
  vehicle_trim_1 STRING ,
  vehicle_trim_2 STRING ,
  vehicle_trim_3 STRING ,
  vehicle_trim_4 STRING ,
  body_style_code STRING ,
  body_style STRING ,
  num_of_doors INT64 ,
  number_of_wheels INT64 ,
  num_of_wheels_by_power_train INT64 ,
  vehicle_manufacturer_code STRING  Standard abbreviation of the name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  vehicle_manufacturer_name STRING  The name of the vehicle manufacturer, i.e. General Motors, as defined by the National Crime Information Center""),
  displacement_cid INT64  displacement in cubic inches. This is a rounded, marketing value, like 302 cubic inches, instead of 4967 cc.""),
  displacement_cc INT64  displacement in cubic centimeters. We intend to use this as the definitive, exact displacement value, i.e. 4967 cc.""),
  cylinder_count_code STRING ,
  cycle_count INT64  Refers to the cycle or stroke of an engine. 2-strokes are lightweight and simpler, but they burn oil, by design. Few cars on the road in North America are two-strokes, the last one offered was a 1967 Saab.""),
  fuel_code STRING  What an internal combustion burns to move a piston in a cylinder""),
  fuel STRING  description""),
  type_of_fuel_code STRING ,
  type_of_fuel STRING ,
  carburetion_types_code STRING ,
  carburetion_types STRING ,
  num_of_barrels STRING ,
  gross_vehicle_weights_range_code INT64 ,
  gross_vehicle_weights_range STRING  for trucks. This rating may or may not equal the actual GVW.""),
  distance_between_axles_for_base_model FLOAT64 ,
  distance_between_axles_for_particular_series STRING ,
  front_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  front_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  front_tire_size_code STRING ,
  front_tire_size STRING  As in \""17R245\""""),
  rear_tire INT64  More specific tire description (ex. Michelin Eagle P245/40ZR)""),
  rear_tire_pressure INT64  Vehicle Mfr. recommendation for tire pressure, in pounds/sq. in.""),
  rear_tire_size_code STRING ,
  rear_tire_size STRING  As in \""17R245\""""),
  tonnage_rating STRING  description""),
  shipping_weight INT64 ""),
  base_price STRING ,
  drive_type_1 STRING  This element describes type of driving configuration for cars and trucks such as FWD, AWD, RWD.""),
  drive_type_2 STRING  description""),
  country_sold_code STRING  Country where the vehicle is planned to be sold (may have different emissions standards).""),
  country_sold STRING  description""),
  brakes_abs_code STRING  A code that describes whether a vehicle has or does not have anti-lock brakes, and what kind of brakes they are. (Not coded for heavy truck). This is based on the series code that is assigned the vehicle from VINA.""),
  brakes_abs_description STRING  description""),
  security_type_code STRING  Describes the security system (if any) installed on this model.""),
  security_type STRING  description""),
  daytime_running_lights_1 STRING A Polk assigned code that identifies whether or not the vehicle has daytime running lights.""),
  daytime_running_lights_2 STRING  description""),
  restraint_type_code STRING  A Polk assigned code that identifies the type of restraints that a vehicle has based on VIN.""),
  restraint_type STRING  description""),
  cab_configuration_code STRING  Cab Type describes the physical configuration of a truck's cabin.""),
  cab_configuration STRING  medium description""),
  axle_type_front_axle_code STRING  The location of the front axle of a truck tractor. Set forward increases stability on the highway, Setback increases maneuverability in tight spaces.""),
  axle_type_front_axle STRING  short description""),
  axle_type_rear_axle_code STRING  Represents rear axle configuration on a truck tractor. Tandem axles increase load bearing capability.""),
  axle_type_rear_axle STRING  short description""),
  brake_type_code STRING  The type of brakes on the Vehicle (currently commercial truck only). Truck VIN determines this currently""),
  brake_type STRING  description""),
  engine_manufacture_code STRING  A Polk assigned code given to the original equipment manufacture of the within a vehicle""),
  engine_manufacture STRING  description""),
  engine_model STRING  description""),
  duty_type_code STRING  A Polk assigned code that represents the duty type of a truck engine, based on manufacturer information.""),
  duty_type STRING  medium description""),
  bed_length_code STRING  Code representing the manufacturer's description of the relative size of the cargo area of a pickup truck or van. A \""long\"" Ford Ranger bed (compact pickup) may well be shorter than a \""short\"" bed on an F350 (large industrial pickup).""),
  bed_length STRING  description""),
  standard_segmentation_code STRING ,
  standard_segmentation STRING ,
  plant_code STRING  Plant code where vehicle was manufactured.""),
  plant_country STRING  This is the country where the plant is located. Example values are USA, Canada and Japan.""),
  plant_city STRING  This is the city where the plant is located.""),
  plant_country_code STRING ,
  plant_state_code STRING ,
  plant_state STRING  This is the state or province (Canada) location of the plant.""),
  origin_code STRING  A code that indicates the origin of a vehicle.""),
  origin STRING  description""),
  displacement_liters FLOAT64  displacement in rounded Liters, where 1,000 cubic centimeters = 1 liter. Even domestic makes will advertise displacement in terms of liters (e.g. 5.0 liter mustang, which equates to a 302 CID or 4967 cc displacement).""),
  block_type STRING  Description""),
  head_configuration_1 STRING  Describes the cylinder head's camshaft/valve configuration.""),
  head_configuration_2 STRING  description""),
  valves_per_cylinder INT64  Number of intake/exhaust valves per cylinder.""),
  valves_total INT64  Total number of intake/exhaust valves.""),
  engine_code STRING  Code derived from the VIN (not the secondary VIN for a motorcycle). Usually a single character, some manufactures give full positions 4-8 and engine information from that; they do not break it down any further.""),
  is_incomplete STRING ""),
  battery_type_code STRING ,
  battery_type STRING ,
  total_battery_power STRING ,
  battery_voltage STRING ,
  supercharge_flag STRING ,
  supercharge_flag_description STRING ,
  turbocharger_flag STRING ,
  turbocharger_flag_description STRING ,
  variable_valve_timing_flag STRING ,
  motorcycles_body_style_code STRING ,
  motorcycles_body_style STRING 
);"

Some other tables have the similar structure: ['vindecode_2016', 'vindecode_2015']
,33
table_name,parkwork_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.parkwork_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_occupants INT64 ,
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  manner_of_collision_name STRING ,
  unit_type STRING ""),
  hit_and_run STRING . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0  No / No Hit-and-Run -- Hit Motor Vehicle in Transport 1  Yes -- Hit Pedestrian or Non-Motorist -- Hit Parked Vehicle (Working Vehicle, Since 2004) or Object -- Other Involved Person, not a driver, left Scene (2005-2006) -- Hit-and-Run, Other Involved Person Left Scene (2007-2008) -- Not Reported 9  Unknown""),
  registration_state INT64 ,
  registration_state_name STRING ,
  registered_vehicle_owner INT64  Was Registered Owner 2  Driver (of This Vehicle) Not Registered Owner (Other Private Owner) 3  Vehicle Registered as Business/Company/Government Vehicle 4  Vehicle Registered as Rental Vehicle 5  Vehicle Was Stolen (Reported By Police) -- Driverless Vehicle 6  Driverless/Motor Vehicle Parked/Stopped Off Roadway 9  Unknown""),
  registered_vehicle_owner_name STRING ,
  vehicle_make INT64  of this vehicle.For more info on the codes, please look at <V9 Vehicle Make> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle.""),
  vehicle_model INT64 ,
  make_model_combined INT64  followed by the 3-digit “Vehicle Model” code (MODEL).See the current FARS/NASS GES Coding and Validation Manual for vehicle make and model codes.""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_model_year INT64 ,
  vehicle_identification_number_vin STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc.-- First 10 Characters xxxxxxxxxxxx First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vin_character_1 STRING ,
  vin_character_2 STRING ,
  vin_character_3 STRING ,
  vin_character_4 STRING ,
  vin_character_5 STRING ,
  vin_character_6 STRING ,
  vin_character_7 STRING ,
  vin_character_8 STRING ,
  vin_character_9 STRING ,
  vin_character_10 STRING ,
  vin_character_11 STRING ,
  vin_character_12 STRING ,
  vehicle_trailing STRING ,
  mcid_issuing_authority INT64  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_issuing_authority_name STRING  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_identification_number STRING ,
  motor_carrier_identification_number STRING ,
  gross_vehicle_weight_rating INT64 ,
  vehicle_configuration INT64 ,
  cargo_body_type INT64 ,
  hazardous_material_involvement STRING ,
  hazardous_material_placard STRING ,
  hazardous_material_identification_number INT64 ,
  hazardous_material_class_number INT64 ,
  release_of_hazardous_material_from_the_cargo_compartment STRING ,
  bus_use STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use STRING ,
  underride_override INT64 ,
  underride_override_name STRING ,
  initial_contact_point INT64 ,
  extent_of_damage STRING ,
  vehicle_removal STRING ,
  most_harmful_event INT64 ,
  related_factors_vehicle_level1 INT64 ,
  related_factors_vehicle_level2 INT64 ,
  fire_occurrence STRING ,
  fatalities_in_vehicle INT64 
)
OPTIONS(
  description=""This data file contains information about parked and working\nvehicles that were involved in FARS crashes. A parked vehicle is a motor vehicle which\nis stopped off the roadway. A working vehicle is used to indicate that this is a motor\nvehicle that was in the act of performing highway construction, maintenance or utility\nwork related to the trafficway when it became an involved in the crash. Data users are\nstrongly advised to consult the annual FARS/NASS GES Coding and Validation Manuals\nfor a detailed description. There is one record per parked/working vehicle.""
);"

Some other tables have the similar structure: ['parkwork_2015', 'parkwork_2016']
,34
table_name,nmimpair_2016
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.nmimpair_2016`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  condition_impairment_at_time_of_crash_non_motorist INT64  at Time of Crash- Non-Motorist> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  condition_impairment_at_time_of_crash_non_motorist_name STRING 
);"

Some other tables have the similar structure: ['nmimpair_2016', 'nmimpair_2015']
,35
table_name,nmprior_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.nmprior_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  person_number INT64 . This data element appears on each person level data file and is used in conjunction with the ST_CASE data element (and sometimes the VEH_NO data element) to merge information from person level data files. 001-999 Assigned Person Number""),
  non_motorist_action_circumstances INT64  of the non-motorist immediately prior to their involvement in the crash. For more info on the codes, please look at <NM11 Non-Motorist Action/Circumstances> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  non_motorist_action_circumstances_name STRING  of the non-motorist immediately prior to their involvement in the crash."")
)
OPTIONS(
  description=""This data file contains information about the actions of people\nwho are not occupants of motor vehicles (e.g., pedestrians and bicyclists) at the time of\ntheir involvement in the crash. There is one record per action and there is at least one\nrecord for each person who is not an occupant of a motor vehicle.""
);"

Some other tables have the similar structure: ['nmprior_2015', 'nmprior_2016']
,36
table_name,vehicle_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.vehicle_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  vehicle_number INT64 ,
  number_of_motor_vehicles_in_transport_mvit INT64 ,
  number_of_occupants INT64  99 Unknown""),
  day_of_crash INT64 ,
  month_of_crash INT64 ,
  hour_of_crash INT64 ,
  minute_of_crash INT64 ,
  first_harmful_event INT64 ,
  first_harmful_event_name STRING ,
  manner_of_collision INT64 ,
  unit_type STRING ""),
  hit_and_run STRING . Hit and run is coded when a motor vehicle in-transport, or its driver, departs from the scene; vehicles not intransport are excluded. It does not matter whether the hit-and-run vehicle was striking or struck. 0 No 1 Yes -- Not Reported 9 Unknown""),
  registration_state INT64 ,
  registration_state_name STRING ,
  registered_vehicle_owner INT64  Was Registered Owner 2 Driver (of This Vehicle) Not Registered Owner (Other Private Owner) 3 Vehicle Registered as Business/Company/Government Vehicle 4 Vehicle Registered as Rental Vehicle 5 Vehicle Was Stolen (Reported By Police) -- Driverless Vehicle 6 Driverless/Motor Vehicle Parked/Stopped Off Roadway 9 Unknown""),
  registered_vehicle_owner_name STRING ,
  vehicle_make INT64  of this vehicle. For more info on the codes, please look at V9 Vehicle Make section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  vehicle_make_name STRING  of this vehicle""),
  vehicle_model INT64 ,
  make_model_combined INT64  followed by the 3-digit “Vehicle Model” code (MODEL). For more info on the codes, please look at V100 Make Model Combined section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  body_type INT64 ,
  body_type_name STRING ,
  vehicle_model_year INT64 ,
  vehicle_identification_number_vin STRING  of this vehicle assigned by the vehicle manufacturer. The VIN contains information on the vehicle such as: manufacturer, model year, model, body type, restraint type, etc. -- First 10 Characters xxxxxxxxxxxx  First 12 Characters 000000000000 No VIN Required 888888888888 Not Reported 999999999999 Unknown""),
  vin_character_1 STRING ,
  vin_character_2 STRING ,
  vin_character_3 STRING ,
  vin_character_4 STRING ,
  vin_character_5 STRING ,
  vin_character_6 STRING ,
  vin_character_7 STRING ,
  vin_character_8 STRING ,
  vin_character_9 STRING ,
  vin_character_10 STRING ,
  vin_character_11 STRING ,
  vin_character_12 STRING ,
  vehicle_trailing STRING ,
  jackknife STRING ,
  mcid_issuing_authority INT64  77 Not Reported 88 None 95 Canada 96 Mexico 99 Unknown""),
  mcid_identification_number STRING ,
  motor_carrier_identification_number_mcid STRING ,
  gross_vehicle_weight_rating STRING ,
  vehicle_configuration INT64 ,
  vehicle_configuration_name STRING ,
  cargo_body_type INT64 ,
  cargo_body_type_name STRING ,
  hazardous_material_involvement STRING ,
  hazardous_material_placard INT64 ,
  hazardous_material_identification_number INT64 ,
  hazardous_material_class_number INT64 ,
  release_of_hazardous_material_from_the_cargo_compartment STRING ,
  bus_use STRING ,
  special_use INT64 ,
  special_use_name STRING ,
  emergency_motor_vehicle_use STRING ,
  travel_speed INT64 ,
  underride_override INT64 ,
  rollover STRING ,
  location_of_rollover STRING ,
  initial_contact_point INT64 ,
  extent_of_damage STRING ,
  vehicle_removal STRING ,
  most_harmful_event INT64 ,
  related_factors_vehicle_level_1 INT64 ,
  related_factors_vehicle_level_2 INT64 ,
  fire_occurrence STRING ,
  driver_presence STRING  -- Driver Left Scene -- Motor Vehicle not In-Transport (Parked/Stopped Off Roadway/ Working Motor Vehicle/In Motion Outside Trafficway, 2008 Only) -- Motor Vehicle not In-Transport (Parked/Stopped Off Roadway/Working/ In Motion Outside Trafficway, 2005-2007) 9 Unknown""),
  drivers_license_state INT64 ,
  drivers_zip_code INT64 ,
  non_cdl_license_status INT64 ,
  non_cdl_license_type STRING ,
  commercial_motor_vehicle_license_status INT64  if applicable. For more info on the codes, please look at D8 Commercial Motor Vehicle License Status section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  compliance_with_cdl_endorsements STRING  on a Commercial Driver’s License (CDL) and whether this driver was complying with the CDL endorsements. 0 No Endorsements Required For This Vehicle 1 Endorsement(s) Required, Complied With 2 Endorsement(s) Required, Not Complied With 3 Endorsement(s) Required, Compliance Unknown -- 7 No Driver Present/Unknown if Driver Present -- Not Reported 9 Unknown, if Required""),
  license_compliance_with_class_of_vehicle STRING ,
  compliance_with_license_restrictions INT64 ,
  driver_height INT64 . 24-107 Actual Height in Inches 998 No Driver Present/Unknown if Driver Present 999 Unknown""),
  driver_weight INT64 . 40-700 Actual Weight in Pounds 997 No Driver Present/Unknown if Driver Present 998 Other 999 Unknown""),
  previous_recorded_crashes INT64 ,
  previous_recorded_suspensions_and_revocations INT64 ,
  previous_dwi_convictions INT64 ,
  previous_speeding_convictions INT64 ,
  previous_other_moving_violation_convictions INT64 ,
  month_of_first_crash_suspension_or_conviction INT64 ,
  year_of_first_crash_suspension_or_conviction INT64 ,
  month_of_last_crash_suspension_or_conviction INT64 ,
  year_of_last_crash_suspension_or_conviction INT64 ,
  speeding_related STRING ,
  related_factors_driver_level_1 INT64 ,
  related_factors_driver_level_2 INT64 ,
  related_factors_driver_level_3 INT64 ,
  related_factors_driver_level_4 INT64 ,
  trafficway_description STRING  Median 3 Two-Way, Divided, Positive Median Barrier 4 One-Way Trafficway 5 Two-Way, Not Divided With a Continuous Left-Turn Lane 6 Entrance/Exit Ramp 8 Not Reported 9 Unknown""),
  total_lanes_in_roadway INT64 ,
  speed_limit INT64  5-80 Speed Limit (5 mph Increments) 98 Not Reported 99 Unknown""),
  roadway_alignment STRING ,
  roadway_grade STRING  5 Uphill 6 Downhill 8 Not Reported 9 Unknown""),
  roadway_surface_type STRING ,
  roadway_surface_condition INT64 ,
  roadway_surface_condition_name STRING ,
  traffic_control_device INT64 ,
  traffic_control_device_functioning STRING ,
  pre_event_movement_prior_to_recognition_of_critical_event INT64  section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  critical_event_precrash INT64 . For more info on the codes, please look at PC19 Critical Event- Precrash section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  critical_event_precrash_name STRING .""),
  attempted_avoidance_maneuver INT64 ,
  attempted_avoidance_maneuver_name STRING ,
  pre_impact_stability STRING ,
  pre_impact_location INT64 ,
  crash_type INT64 ,
  crash_type_name STRING ,
  fatalities_in_vehicle INT64 ,
  driver_drinking STRING ,
  timestamp_of_crash TIMESTAMP 
)
OPTIONS(
  description=""This data file contains information describing the in-transport\nmotor vehicles and the drivers of in-transport motor vehicle who are involved in the\ncrash. There is one record per in-transport motor vehicle. Parked and working vehicle\ninformation is in the Parkwork data file""
);"

Some other tables have the similar structure: ['vehicle_2015', 'vehicle_2016']
,37
table_name,cevent_2015
ddl,"CREATE TABLE `bigquery-public-data.nhtsa_traffic_fatalities.cevent_2015`
(
  state_number INT64  publication of worldwide Geographic Location Codes (GLC). For more info on the codes, please look at <C1/V1/D1/PC1/P1/NM1 State Number> section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  consecutive_number INT64 ,
  event_number INT64 ,
  vehicle_number_this_vehicle INT64  of this in-transport motor vehicle described in this event. 1-999 Vehicle Number""),
  area_of_impact_this_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_this_vehicle_name STRING ,
  sequence_of_events INT64 ,
  sequence_of_events_name STRING ,
  vehicle_number_other_vehicle INT64  of the other motor vehicle, if any, in this event. 1-999 Vehicle Number 5555 Non-Harmful Event 9999 Not a Motor Vehicle""),
  area_of_impact_other_vehicle INT64 > section in the pdf: https://crashstats.nhtsa.dot.gov/Api/Public/ViewPublication/812315""),
  area_of_impact_other_vehicle_name STRING 
)
OPTIONS(
  description=""This data file contains information for all of the qualifying events (i.e., both harmful and non-harmful involving in-transport motor vehicles) which occurred in the crash. It details the chronological sequence of events resulting from an unstabilized situation that constitutes a motor vehicle traffic crash. There is one record per event. Included in each record is a description of the event or object contacted (e.g.,\nran off road-right, crossed center line, guardrail, parked motor vehicle), the vehicles involved, and the vehicles’ area of impact""
);"

Some other tables have the similar structure: ['cevent_2015', 'cevent_2016']
Database Name: bigquery-public-data
Schema Name: utility_us
DDL describes table information.
,0
table_name,us_states_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_states_area`
(
  region_code STRING ,
  division_code STRING ,
  state_fips_code STRING ,
  state_gnis_code STRING ,
  state_geo_id STRING ,
  state_abbreviation STRING ,
  state_name STRING ,
  legal_area_code STRING ,
  feature_class_code STRING ,
  functional_status_code STRING ,
  area_land_meters INT64 ,
  area_water_meters INT64 ,
  internal_point_lat STRING ,
  internal_point_lon STRING ,
  state_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,1
table_name,us_border_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_border_area`
(
  name STRING,
  geo_id STRING,
  aff_geo_id STRING,
  us_border_geom GEOGRAPHY
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,2
table_name,us_msa_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_msa_area`
(
  csa_code STRING  code of the CSA that contains the metropolitan statistical area/micropolitan statistical area (MSA)""),
  msa_code STRING  code""),
  geo_code STRING ,
  name STRING ,
  lsad_name STRING ,
  lsad_code STRING  code for a given MSA.\n\nM1 indicates a \""metro area (suffix)\""\nM2 indicates a \""micro area (suffix)\""""),
  status_indicator STRING ,
  feature_class_code STRING ,
  area_land_meters NUMERIC ,
  area_water_meters NUMERIC ,
  int_point_lat STRING ,
  int_point_lon STRING ,
  msa_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,3
table_name,us_cities_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_cities_area`
(
  urban_area_code STRING ,
  geo_code STRING ,
  name STRING ,
  lsad_name STRING ,
  lsad_code STRING  code for a given urban area. \n\n75 indicates an \""urbanized area\""\n76 indicates an \""urban cluster\""""),
  feature_class_code STRING ,
  area_type STRING ,
  functional_status STRING ,
  area_land_meters NUMERIC ,
  area_water_meters NUMERIC ,
  int_point_lat STRING ,
  int_point_lon STRING ,
  city_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,4
table_name,zipcode_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.zipcode_area`
(
  zipcode STRING NOT NULL ,
  area_land_meters INT64  - Created for statistical purposes only""),
  area_water_meters INT64  - Created for statistical purposes only""),
  area_land_miles FLOAT64  - Created for statistical purposes only""),
  area_water_miles FLOAT64  - Created for statistical purposes only""),
  latitude FLOAT64  First character is blank or \""-\"" denoting North or South latitude respectively""),
  longitude FLOAT64  First character is blank or \""-\"" denoting East or West longitude respectively""),
  state_code STRING ,
  state_name STRING ,
  city STRING ,
  county STRING ,
  state_fips STRING ,
  zipcode_geom STRING  ZIP Codes as polygons"")
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.\n\nCombining a variety of sources, mainly from the Census Bureau (such as National Places: https://www2.census.gov/geo/docs/reference/codes/files/national_places.txt), we've derived a useful US zipcode and general geographic table.""
);"

,5
table_name,country_code_iso
ddl,"CREATE TABLE `bigquery-public-data.utility_us.country_code_iso`
(
  country_name STRING NOT NULL ,
  fips_code STRING ,
  alpha_2_code STRING ,
  alpha_3_code STRING ,
  numeric_code STRING ,
  stanag_code STRING ,
  cctlds STRING ,
  continent_code STRING ,
  continent_name STRING ,
  sub_continent_name STRING 
);"

,6
table_name,num_999999
ddl,"CREATE TABLE `bigquery-public-data.utility_us.num_999999`
(
  num INT64 
);"

,7
table_name,time
ddl,"CREATE TABLE `bigquery-public-data.utility_us.time`
(
  time TIME ""),
  hour INT64 ,
  minute INT64 ,
  second INT64 ,
  second_in_day INT64 ,
  hour_ampm INT64 ,
  is_pm BOOL 
);"

,8
table_name,date_greg
ddl,"CREATE TABLE `bigquery-public-data.utility_us.date_greg`
(
  date DATE ; [1582-10-15, 2199-12-31]""),
  date_str STRING ,
  date_int INT64 ,
  date_dash STRING ,
  date_slash STRING ,
  day INT64 ,
  day_abbr STRING ,
  dow_mon17 INT64 ""),
  dow_mon06 INT64 ,
  dow_sun17 INT64 ,
  dow_sun06 INT64 ,
  week_mon INT64 ,
  week_sun INT64 ,
  week_iso INT64  - [0, 53] ; https://en.wikipedia.org/wiki/ISO_week_date""),
  month INT64 ,
  month_abbr STRING ,
  month_first_day DATE ,
  quarter INT64 ,
  quarter_first_day DATE ,
  half INT64 ,
  half_first_day DATE ,
  year INT64 ,
  year_iso INT64 ,
  year_first_day DATE 
);"

,9
table_name,us_coastline_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_coastline_area`
(
  name STRING,
  coastline_geom GEOGRAPHY
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,10
table_name,us_county_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_county_area`
(
  state_fips_code STRING ,
  county_fips_code STRING ,
  county_gnis_code STRING . GNIS database contains information about physical and cultural geographic features of all types in the United States, associated areas, and Antarctica, current and historical, but not including roads and highways. The database holds the Federally recognized name of each feature and defines the feature location by state, county, USGS topographic map, and geographic coordinates. Other attributes include names or spellings other than the official name, feature designations, feature classification, historical and descriptive information, and for some categories the geometric boundaries.""),
  aff_geo_code STRING ,
  geo_id STRING ,
  county_name STRING ,
  legal_area_code STRING ,
  area_land_meters INT64 ,
  area_water_meters INT64 ,
  county_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

,11
table_name,us_csa_area
ddl,"CREATE TABLE `bigquery-public-data.utility_us.us_csa_area`
(
  csa_code STRING  code""),
  aff_geo_code STRING ,
  geo_code STRING ,
  name STRING ,
  lsad_code STRING  code for a given CSA.\n\nM0 indicates \""CSA (suffix)\"".  A full list of LSAD codes can be found here: https://www.census.gov/geo/reference/lsad.html""),
  area_land_meters INT64 ,
  area_water_meters INT64 ,
  csa_geom GEOGRAPHY 
)
OPTIONS(
  description=""This dataset has moved!\n\nYou can find all of the datasets that define the polygons of US political and statistical boundaries, including this one, in the new bigquery-public-data:geo_us_boundaries dataset.""
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'census_bureau_usa': ['population_by_zip_2000', 'population_by_zip_2010'], 'nhtsa_traffic_fatalities': [' accident_2020', ' cevent_2017', ' cevent_2019', ' distract_2015', ' drimpair_2017', ' drimpair_2019', ' factor_2020', ' maneuver_2018', ' nmcrash_2018', ' nmcrash_2019', ' nmimpair_2015', ' nmimpair_2016', ' nmimpair_2018', ' safetyeq_2016', ' vsoe_2015', 'accident_2016', 'damage_2016', 'factor_2016', 'nmcrash_2016', 'person_2015'], 'utility_us': ['country_code_iso', 'date_greg', 'num_999999', 'time', 'us_border_area', 'us_cities_area', 'us_coastline_area', 'us_county_area', 'us_csa_area', 'us_msa_area', 'us_states_area', 'zipcode_area']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **`bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`**
   - `state_name`: Identifies the state where the accident occurred.
   - `consecutive_number`: Unique identifier for each accident.
   - `driver_distracted_by_name`: Indicates the distraction status of the driver.

2. **`bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`**
   - `state_name`: Identifies the state where the accident occurred.
   - `consecutive_number`: Unique identifier for each accident.
   - `driver_distracted_by_name`: Indicates the distraction status of the driver.

3. **`bigquery-public-data.census_bureau_usa.population_by_zip_2010`**
   - `zipcode`: ZIP code to associate population data.
   - `population`: Population count for each ZIP code.

4. **`bigquery-public-data.utility_us.zipcode_area`**
   - `zipcode`: ZIP code to join with population data.
   - `state_name`: State name to aggregate population by state.

**Conditions to Use:**

- Exclude records where `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.
- Limit queries to accidents that occurred in 2015 and 2016.
- Aggregate population data from the 2010 census by state.

---

**SQL Queries:**

1. **List distinct distraction types in 2015 excluding certain statuses:**

   ```sql
   SELECT DISTINCT `driver_distracted_by_name`
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   LIMIT 100
   ```

2. **Count accidents per state in 2015 with driver distraction:**

   ```sql
   SELECT `state_name`, COUNT(DISTINCT `consecutive_number`) AS accident_count
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   GROUP BY `state_name`
   LIMIT 100
   ```

3. **Retrieve population by ZIP code from the 2010 census:**

   ```sql
   SELECT `zipcode`, `population`
   FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
   LIMIT 100
   ```

4. **Join ZIP codes with state names to get state populations:**

   ```sql
   SELECT z.`state_name`, SUM(p.`population`) AS state_population
   FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` p
   JOIN `bigquery-public-data.utility_us.zipcode_area` z
   ON p.`zipcode` = z.`zipcode`
   GROUP BY z.`state_name`
   LIMIT 100
   ```

5. **List states with their total accidents in 2016 due to driver distraction:**

   ```sql
   SELECT `state_name`, COUNT(DISTINCT `consecutive_number`) AS accident_count
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   GROUP BY `state_name`
   LIMIT 100
   ```

6. **Calculate accidents per 100,000 people in 2015 for each state:**

   ```sql
   SELECT a.`state_name`,
          COUNT(DISTINCT a.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` a
   JOIN (
     SELECT z.`state_name`, SUM(p.`population`) AS state_population
     FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` p
     JOIN `bigquery-public-data.utility_us.zipcode_area` z
     ON p.`zipcode` = z.`zipcode`
     GROUP BY z.`state_name`
   ) p
   ON a.`state_name` = p.`state_name`
   WHERE a.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   GROUP BY a.`state_name`, p.`state_population`
   LIMIT 100
   ```

7. **Find top five states with highest accident rates in 2015:**

   ```sql
   SELECT a.`state_name`,
          COUNT(DISTINCT a.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` a
   JOIN (
     SELECT z.`state_name`, SUM(p.`population`) AS state_population
     FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` p
     JOIN `bigquery-public-data.utility_us.zipcode_area` z
     ON p.`zipcode` = z.`zipcode`
     GROUP BY z.`state_name`
   ) p
   ON a.`state_name` = p.`state_name`
   WHERE a.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   GROUP BY a.`state_name`, p.`state_population`
   ORDER BY accidents_per_100k DESC
   LIMIT 5
   ```

8. **List the distraction types reported in 2016 accidents:**

   ```sql
   SELECT DISTINCT `driver_distracted_by_name`
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   LIMIT 100
   ```

9. **Aggregate accident counts for both years by state:**

   ```sql
   SELECT `state_name`, COUNT(DISTINCT `consecutive_number`) AS accident_count, 2015 AS year
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   GROUP BY `state_name`
   UNION ALL
   SELECT `state_name`, COUNT(DISTINCT `consecutive_number`) AS accident_count, 2016 AS year
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   GROUP BY `state_name`
   LIMIT 100
   ```

10. **Calculate and list accident rates per 100,000 people for 2016, and find top five states:**

    ```sql
    SELECT a.`state_name`,
           COUNT(DISTINCT a.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
    FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` a
    JOIN (
      SELECT z.`state_name`, SUM(p.`population`) AS state_population
      FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` p
      JOIN `bigquery-public-data.utility_us.zipcode_area` z
      ON p.`zipcode` = z.`zipcode`
      GROUP BY z.`state_name`
    ) p
    ON a.`state_name` = p.`state_name`
    WHERE a.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
    GROUP BY a.`state_name`, p.`state_population`
    ORDER BY accidents_per_100k DESC
    LIMIT 5
    ```

---

These queries help in understanding and processing the data necessary to determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, and identifying the top five states with the highest rates each year.Query:
SELECT DISTINCT `driver_distracted_by_name`
   FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015`
   WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
   LIMIT 100
Answer:
driver_distracted_by_name
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Lost In Thought/Day Dreaming
Other Distraction
Query:
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
Answer:
state_name,accident_count
Texas,441
South Dakota,14
Wyoming,15
New Hampshire,18
Alabama,57
Arizona,118
California,206
Colorado,70
Florida,235
Georgia,76
Illinois,52
Indiana,56
Iowa,31
Kentucky,200
Louisiana,154
Maryland,104
Massachusetts,65
Michigan,67
Minnesota,60
Missouri,97
Montana,39
Nevada,16
New Jersey,146
New Mexico,124
New York,163
North Carolina,157
Ohio,59
Oregon,12
Washington,158
Wisconsin,102
Delaware,15
Arkansas,35
Kansas,73
Tennessee,112
Maine,14
Alaska,12
Hawaii,17
Connecticut,14
Idaho,35
Mississippi,7
Nebraska,16
Oklahoma,54
Pennsylvania,72
Utah,32
Virginia,129
West Virginia,8
South Carolina,67
Vermont,5
Rhode Island,1
North Dakota,2
Query:
SELECT `zipcode`, `population`
FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010`
LIMIT 100
Answer:
zipcode,population
25647,768
49336,4352
72106,5376
74074,29184
1960,50944
13776,513
62379,2049
79322,2049
50833,2305
31778,2562
16150,7426
34436,7938
12483,259
40052,515
29686,1027
94619,23299
8353,516
12965,516
44048,2565
39638,3333
78956,5381
97914,19205
10952,38917
59639,1286
7606,2310
36009,2566
93536,70918
3220,7430
74468,263
4740,1287
30808,4615
8648,32263
1436,3336
55374,13576
89169,23304
51004,1033
8535,5385
97038,15113
29710,29449
61701,36105
5488,7690
78717,22538
48906,26634
21856,1035
4981,2316
29667,269
74735,1549
38117,26125
12071,270
30822,526
36875,4622
48201,12814
40175,13070
42332,271
24272,527
46371,3599
84310,4111
31648,1040
16929,2320
37144,3344
14586,10256
2188,14608
44106,26896
20901,34832
52362,1041
52659,1553
12143,5137
78069,5137
60477,38161
65025,786
72079,786
8348,275
80812,275
19312,11539
10456,86547
42453,532
80480,1300
70080,1556
2667,2580
45107,9236
5744,533
1029,789
47648,4373
83702,22293
10305,41749
23126,534
55089,1814
39553,17174
90230,31766
61817,2583
66508,4375
98359,4887
46550,12311
14846,792
54135,3096
55040,12568
70072,56344
39556,7705
93610,23833
32404,38425
Query:
SELECT z.`state_name`, SUM(p.`population`) AS state_population
FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
  ON p.`zipcode` = z.`zipcode`
GROUP BY z.`state_name`
LIMIT 100
Answer:
state_name,state_population
Alabama,14338764
Utah,8285430
Virginia,24003717
Washington (state),809694
Pennsylvania,38107125
Ohio,34609542
Maryland,17320683
Oregon,11490705
Tennessee,19003095
Montana,2965035
Mississippi,9200223
Minnesota,15904047
North Carolina,28606431
Nebraska,5480298
New York,58133523
Florida,56403678
Illinois,38491743
Oklahoma,11249850
Iowa,9131034
Arizona,19127649
Georgia,28280514
Texas,75434313
Missouri,17961405
Washington,19240062
Idaho,4702578
Wisconsin,17061036
Colorado,15088122
Nevada,8099424
Arkansas,8733537
California,111748626
Kentucky,12977133
Michigan,29650836
New Mexico,6161043
North Dakota,2015343
South Carolina,13876092
Louisiana,13598490
Alaska,2129790
South Dakota,2434629
Kansas,8551884
West Virginia,5558322
"Washington, D.C.",24681
Indiana,19451376
Hawaii,4080903
Wyoming,1683354
Georgia (U.S. state),456018
District of Columbia,1780488
"Iowa, Minnesota",5130
Delaware,2693775
"Oregon, Washington",123168
"Arkansas, Louisiana",7785
"Colorado, Wyoming",300
"Arizona, New Mexico",41208
"Alabama, Mississippi",28347
"Kentucky, Tennessee",76242
"Oklahoma, Texas",5064
"Idaho, Oregon",1923
"Arkansas, Missouri",12783
"Kansas, Oklahoma",7674
"Arizona, Utah",17115
"Minnesota, South Dakota",3246
"Montana, North Dakota",4974
"Arizona, New Mexico, Utah",9951
"North Dakota, South Dakota",5763
"Idaho, Wyoming",1413
"Nebraska, Wyoming",4818
"California, Nevada",4251
"Iowa, Missouri",9801
"California, Oregon",867
"Idaho, Washington",963
Query:
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`
LIMIT 100
Answer:
state_name,accident_count
Ohio,68
New Hampshire,6
Montana,20
Vermont,4
Alabama,57
Arizona,102
Arkansas,23
California,227
Colorado,77
Florida,233
Georgia,88
Idaho,51
Illinois,68
Indiana,48
Iowa,40
Kentucky,192
Louisiana,143
Maryland,67
Massachusetts,47
Minnesota,37
Mississippi,3
New Mexico,147
New York,143
North Carolina,157
Oklahoma,55
Oregon,11
Tennessee,132
Texas,389
Washington,147
Wisconsin,117
South Dakota,10
New Jersey,193
Pennsylvania,62
North Dakota,11
Rhode Island,3
Delaware,16
Hawaii,19
Kansas,95
Michigan,61
Missouri,80
Nevada,8
Utah,25
Virginia,141
West Virginia,5
Connecticut,13
Wyoming,14
Maine,3
Nebraska,13
South Carolina,52
District of Columbia,1
Alaska,1
Query:
SELECT a.`state_name`,
       COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
LIMIT 100
Answer:
state_name,accidents_per_100k
Texas,0.5846145904450671
South Dakota,0.5750362786280785
Wyoming,0.8910781689412922
Alabama,0.3975238033068959
Arizona,0.61690801624392
California,0.18434231128712045
Colorado,0.4639411054603084
Florida,0.4166394964526959
Georgia,0.26873627544393286
Illinois,0.1350939083221043
Indiana,0.2878973703454193
Iowa,0.3395015285234947
Kentucky,1.5411724608201212
Louisiana,1.1324786796181046
Maryland,0.6004382159756633
Michigan,0.22596327469485178
Minnesota,0.37726246659105067
Missouri,0.5400468393201979
Montana,1.3153301731682763
Nevada,0.19754491183570586
New Mexico,2.012646235385794
New York,0.2803889934556349
North Carolina,0.5488276394912738
Ohio,0.17047321805067517
Oregon,0.1044322345756853
Washington,0.8212031749170039
Wisconsin,0.5978534949460279
Delaware,0.556839379680931
Arkansas,0.40075401295030866
Kansas,0.8536130752007394
Tennessee,0.5893776776888185
Alaska,0.5634358317017171
Hawaii,0.41657446893493916
Idaho,0.7442726096196597
Mississippi,0.07608511228477831
Nebraska,0.29195492653866634
Oklahoma,0.48000640008533446
Pennsylvania,0.18894104448971158
Utah,0.3862201478981779
Virginia,0.5374167675781213
West Virginia,0.14392832944906755
South Carolina,0.48284488168570805
North Dakota,0.09923869038669844
Query:
SELECT a.`state_name`,
       COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
ORDER BY accidents_per_100k DESC
LIMIT 5
Answer:
state_name,accidents_per_100k
New Mexico,2.012646235385794
Kentucky,1.5411724608201212
Montana,1.3153301731682763
Louisiana,1.1324786796181046
Wyoming,0.8910781689412922
Query:
SELECT DISTINCT `driver_distracted_by_name`
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016`
WHERE `driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
LIMIT 100
Answer:
driver_distracted_by_name
Looked But Did Not See
By Other Occupant(s)
By a Moving Object in Vehicle
While Talking or Listening to Cellular Phone
While Manipulating Cellular Phone
While Adjusting Audio or Climate Controls
While Using Other Component/Controls Integral to Vehicle
While Using or Reaching For Device/Object Brought Into Vehicle
"Distracted by Outside Person, Object or Event"
Eating or Drinking
Smoking Related
Other Cellular Phone Related
No Driver Present/Unknown if Driver Present
Distraction/Inattention
Distraction/Careless
Careless/Inattentive
"Distraction (Distracted), Details Unknown"
"Inattention (Inattentive), Details Unknown"
Lost In Thought/Day Dreaming
Other Distraction
Query:
SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count, 2015 AS year
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, year

UNION ALL

SELECT a.`state_name`, COUNT(DISTINCT d.`consecutive_number`) AS accident_count, 2016 AS year
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, year
LIMIT 100
Answer:
state_name,accident_count,year
Ohio,59,2015
Virginia,129,2015
Utah,32,2015
Washington,158,2015
Delaware,15,2015
Michigan,67,2015
New Mexico,124,2015
Wyoming,15,2015
Texas,441,2015
Kentucky,200,2015
California,206,2015
South Carolina,67,2015
Oregon,12,2015
Alabama,57,2015
Tennessee,112,2015
Pennsylvania,72,2015
Arizona,118,2015
North Carolina,157,2015
Maryland,104,2015
Missouri,97,2015
West Virginia,8,2015
Florida,235,2015
Arkansas,35,2015
New Jersey,146,2015
New York,163,2015
Indiana,56,2015
Kansas,73,2015
Louisiana,154,2015
Massachusetts,65,2015
Montana,39,2015
Nebraska,16,2015
Oklahoma,54,2015
Minnesota,60,2015
Wisconsin,102,2015
Illinois,52,2015
Alaska,12,2015
Maine,14,2015
Mississippi,7,2015
Georgia,76,2015
Hawaii,17,2015
Colorado,70,2015
Vermont,5,2015
Idaho,35,2015
Iowa,31,2015
Connecticut,14,2015
South Dakota,14,2015
Nevada,16,2015
North Dakota,2,2015
New Hampshire,18,2015
Rhode Island,1,2015
Ohio,68,2016
New Hampshire,6,2016
Montana,20,2016
Vermont,4,2016
Alabama,57,2016
Arizona,102,2016
Arkansas,23,2016
California,227,2016
Colorado,77,2016
Florida,233,2016
Georgia,88,2016
Idaho,51,2016
Illinois,68,2016
Indiana,48,2016
Iowa,40,2016
Kentucky,192,2016
Louisiana,143,2016
Maryland,67,2016
Massachusetts,47,2016
Minnesota,37,2016
Mississippi,3,2016
New Mexico,147,2016
New York,143,2016
North Carolina,157,2016
Oklahoma,55,2016
Oregon,11,2016
Tennessee,132,2016
Texas,389,2016
Washington,147,2016
Wisconsin,117,2016
Query:
SELECT a.`state_name`,
       COUNT(DISTINCT d.`consecutive_number`)*100000 / p.`state_population` AS accidents_per_100k
FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
  ON d.`state_number` = a.`state_number` AND d.`consecutive_number` = a.`consecutive_number`
JOIN (
  SELECT z.`state_name`, SUM(p.`population`) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.`zipcode` = z.`zipcode`
  GROUP BY z.`state_name`
) AS p
  ON a.`state_name` = p.`state_name`
WHERE d.`driver_distracted_by_name` NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
GROUP BY a.`state_name`, p.`state_population`
ORDER BY accidents_per_100k DESC
LIMIT 5
Answer:
state_name,accidents_per_100k
New Mexico,2.3859596500138043
Kentucky,1.4795255623873163
Kansas,1.1108663307406883
Idaho,1.0845115168743613
Louisiana,1.0515873453596687
End Exploring Related Columns
Task: How many traffic accidents per 100,000 people, specifically due to driver distraction, were recorded in each state in the years 2015 and 2016? Identify the top five states each year with the highest rates. Exclude accidents where the distraction status of the driver was recorded as 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.' Use state population data from the 2010 census for calculating the rate.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,state1:str,rate1:float
2015,state2:str,rate2:float
2015,state3:str,rate3:float
2015,state4:str,rate4:float
2015,state5:str,rate5:float
2016,state1:str,rate1:float
2016,state2:str,rate2:float
2016,state3:str,rate3:float
2016,state4:str,rate4:float
2016,state5:str,rate5:float
(Attention: answer in ten rows)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'census_bureau_usa': ['population_by_zip_2000', 'population_by_zip_2010'], 'nhtsa_traffic_fatalities': [' accident_2020', ' cevent_2017', ' cevent_2019', ' distract_2015', ' drimpair_2017', ' drimpair_2019', ' factor_2020', ' maneuver_2018', ' nmcrash_2018', ' nmcrash_2019', ' nmimpair_2015', ' nmimpair_2016', ' nmimpair_2018', ' safetyeq_2016', ' vsoe_2015', 'accident_2016', 'damage_2016', 'factor_2016', 'nmcrash_2016', 'person_2015'], 'utility_us': ['country_code_iso', 'date_greg', 'num_999999', 'time', 'us_border_area', 'us_cities_area', 'us_coastline_area', 'us_county_area', 'us_csa_area', 'us_msa_area', 'us_states_area', 'zipcode_area']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 04:35:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:35:28 - root - INFO - ```sql
WITH state_populations AS (
  SELECT 
    z.state_name, 
    SUM(p.population) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.zipcode = z.zipcode
  GROUP BY z.state_name
),
accidents AS (
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2015 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
  UNION ALL
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2016 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
)
SELECT 
  year, 
  state_name, 
  accidents_per_100k
FROM (
  SELECT 
    a.year, 
    a.state_name, 
    (a.accident_count * 100000.0) / sp.state_population AS accidents_per_100k,
    ROW_NUMBER() OVER (PARTITION BY a.year ORDER BY (a.accident_count * 100000.0) / sp.state_population DESC) AS rn
  FROM accidents AS a
  JOIN state_populations AS sp
    ON a.state_name = sp.state_name
)
WHERE rn <= 5
ORDER BY year, rn;
```
2025-01-27 04:35:30 - root - INFO - itercount: 1
2025-01-27 04:35:30 - root - INFO - 0
2025-01-27 04:35:30 - root - INFO - results: 
year,state_name,accidents_per_100k
2015,New Mexico,2.012646235385794
2015,Kentucky,1.5411724608201212
2015,Montana,1.3153301731682763
2015,Louisiana,1.1324786796181046
2015,Wyoming,0.8910781689412922
2016,New Mexico,2.3859596500138043
2016,Kentucky,1.4795255623873163
2016,Kansas,1.1108663307406883
2016,Idaho,1.0845115168743613
2016,Louisiana,1.0515873453596687


2025-01-27 04:35:30 - root - INFO - Please check the answer again by reviewing How many traffic accidents per 100,000 people, specifically due to driver distraction, were recorded in each state in the years 2015 and 2016? Identify the top five states each year with the highest rates. Exclude accidents where the distraction status of the driver was recorded as 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.' Use state population data from the 2010 census for calculating the rate., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,state1:str,rate1:float
2015,state2:str,rate2:float
2015,state3:str,rate3:float
2015,state4:str,rate4:float
2015,state5:str,rate5:float
2016,state1:str,rate1:float
2016,state2:str,rate2:float
2016,state3:str,rate3:float
2016,state4:str,rate4:float
2016,state5:str,rate5:float
(Attention: answer in ten rows)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
year,state_name,accidents_per_100k
2015,New Mexico,2.012646235385794
2015,Kentucky,1.5411724608201212
2015,Montana,1.3153301731682763
2015,Louisiana,1.1324786796181046
2015,Wyoming,0.8910781689412922
2016,New Mexico,2.3859596500138043
2016,Kentucky,1.4795255623873163
2016,Kansas,1.1108663307406883
2016,Idaho,1.0845115168743613
2016,Louisiana,1.0515873453596687
Current sql:
WITH state_populations AS (
  SELECT 
    z.state_name, 
    SUM(p.population) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.zipcode = z.zipcode
  GROUP BY z.state_name
),
accidents AS (
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2015 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
  UNION ALL
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2016 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
)
SELECT 
  year, 
  state_name, 
  accidents_per_100k
FROM (
  SELECT 
    a.year, 
    a.state_name, 
    (a.accident_count * 100000.0) / sp.state_population AS accidents_per_100k,
    ROW_NUMBER() OVER (PARTITION BY a.year ORDER BY (a.accident_count * 100000.0) / sp.state_population DESC) AS rn
  FROM accidents AS a
  JOIN state_populations AS sp
    ON a.state_name = sp.state_name
)
WHERE rn <= 5
ORDER BY year, rn;
2025-01-27 04:36:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:36:19 - root - INFO - To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables from the `nhtsa_traffic_fatalities` dataset to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields from the `accident_2015` and `accident_2016` tables.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table from the `census_bureau_usa` dataset with the `zipcode_area` table from the `utility_us` dataset using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000. Since the task description does not specify the number of decimal places, we retain all decimals up to four places.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,New Mexico,2.0126
2015,Kentucky,1.5412
2015,Montana,1.3153
2015,Louisiana,1.1325
2015,Wyoming,0.8911
2016,New Mexico,2.3860
2016,Kentucky,1.4795
2016,Kansas,1.1109
2016,Idaho,1.0845
2016,Louisiana,1.0516
```

The SQL query to obtain these results is:

```sql
WITH state_populations AS (
  SELECT 
    z.state_name, 
    SUM(p.population) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.zipcode = z.zipcode
  GROUP BY z.state_name
),
accidents AS (
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2015 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name

  UNION ALL

  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2016 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
)
SELECT 
  year, 
  state_name, 
  ROUND(accidents_per_100k, 4) AS accidents_per_100000_people
FROM (
  SELECT 
    a.year, 
    a.state_name, 
    (a.accident_count * 100000.0) / sp.state_population AS accidents_per_100k,
    ROW_NUMBER() OVER (PARTITION BY a.year ORDER BY (a.accident_count * 100000.0) / sp.state_population DESC) AS rn
  FROM accidents AS a
  JOIN state_populations AS sp
    ON a.state_name = sp.state_name
)
WHERE rn <= 5
ORDER BY year, rn;
```

This query performs the following:

- **Calculates state populations** by summing the populations from the 2010 census for all ZIP codes in each state.
- **Counts the number of accidents** involving driver distraction for each state and year.
- **Calculates the accident rate per 100,000 people** for each state and year.
- **Ranks the states** based on the accident rate for each year and selects the top five states.

By executing this query in BigQuery, you will obtain the desired results with accident rates rounded to four decimal places.
2025-01-27 04:36:21 - root - INFO - itercount: 2
2025-01-27 04:36:21 - root - INFO - 0
2025-01-27 04:36:21 - root - INFO - results: 
year,state_name,accidents_per_100000_people
2015,New Mexico,2.0126
2015,Kentucky,1.5412
2015,Montana,1.3153
2015,Louisiana,1.1325
2015,Wyoming,0.8911
2016,New Mexico,2.386
2016,Kentucky,1.4795
2016,Kansas,1.1109
2016,Idaho,1.0845
2016,Louisiana,1.0516


2025-01-27 04:36:21 - root - INFO - Please check the answer again by reviewing How many traffic accidents per 100,000 people, specifically due to driver distraction, were recorded in each state in the years 2015 and 2016? Identify the top five states each year with the highest rates. Exclude accidents where the distraction status of the driver was recorded as 'Not Distracted,' 'Unknown if Distracted,' or 'Not Reported.' Use state population data from the 2010 census for calculating the rate., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,state1:str,rate1:float
2015,state2:str,rate2:float
2015,state3:str,rate3:float
2015,state4:str,rate4:float
2015,state5:str,rate5:float
2016,state1:str,rate1:float
2016,state2:str,rate2:float
2016,state3:str,rate3:float
2016,state4:str,rate4:float
2016,state5:str,rate5:float
(Attention: answer in ten rows)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
year,state_name,accidents_per_100000_people
2015,New Mexico,2.0126
2015,Kentucky,1.5412
2015,Montana,1.3153
2015,Louisiana,1.1325
2015,Wyoming,0.8911
2016,New Mexico,2.386
2016,Kentucky,1.4795
2016,Kansas,1.1109
2016,Idaho,1.0845
2016,Louisiana,1.0516
Current sql:
WITH state_populations AS (
  SELECT 
    z.state_name, 
    SUM(p.population) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.zipcode = z.zipcode
  GROUP BY z.state_name
),
accidents AS (
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2015 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name

  UNION ALL

  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2016 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
)
SELECT 
  year, 
  state_name, 
  ROUND(accidents_per_100k, 4) AS accidents_per_100000_people
FROM (
  SELECT 
    a.year, 
    a.state_name, 
    (a.accident_count * 100000.0) / sp.state_population AS accidents_per_100k,
    ROW_NUMBER() OVER (PARTITION BY a.year ORDER BY (a.accident_count * 100000.0) / sp.state_population DESC) AS rn
  FROM accidents AS a
  JOIN state_populations AS sp
    ON a.state_name = sp.state_name
)
WHERE rn <= 5
ORDER BY year, rn;
2025-01-27 04:37:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 04:37:16 - root - INFO - To determine the number of traffic accidents per 100,000 people due to driver distraction in each state for the years 2015 and 2016, we perform the following steps:

1. **Filter Accident Data**: We use the `distract_2015` and `distract_2016` tables to identify accidents where the driver was reported as distracted. We exclude records where the `driver_distracted_by_name` is 'Not Distracted', 'Unknown if Distracted', or 'Not Reported'.

2. **Calculate Accident Counts**: We count the number of unique accidents involving distracted drivers in each state for each year using the `state_name` and `consecutive_number` fields.

3. **Obtain State Populations**: We join the `population_by_zip_2010` table with the `zipcode_area` table using the `zipcode` field to aggregate the 2010 census population for each state.

4. **Compute Accident Rates**: For each state and year, we calculate the rate of accidents per 100,000 people by dividing the number of accidents by the state's population and multiplying by 100,000. We retain all decimals to four places as specified.

5. **Identify Top Five States**: We rank the states based on the calculated rates for each year and select the top five states with the highest rates.

Here are the top five states each year with the highest rates:

```csv
Year,State,Accidents_per_100000_people
2015,New Mexico,2.0126
2015,Kentucky,1.5412
2015,Montana,1.3153
2015,Louisiana,1.1325
2015,Wyoming,0.8911
2016,New Mexico,2.3860
2016,Kentucky,1.4795
2016,Kansas,1.1109
2016,Idaho,1.0845
2016,Louisiana,1.0516
```

The SQL query to obtain these results is:

```sql
WITH state_populations AS (
  SELECT 
    z.state_name, 
    SUM(p.population) AS state_population
  FROM `bigquery-public-data.census_bureau_usa.population_by_zip_2010` AS p
  JOIN `bigquery-public-data.utility_us.zipcode_area` AS z
    ON p.zipcode = z.zipcode
  GROUP BY z.state_name
),
accidents AS (
  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2015 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2015` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2015` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name

  UNION ALL

  SELECT 
    a.state_name, 
    COUNT(DISTINCT d.consecutive_number) AS accident_count, 
    2016 AS year
  FROM `bigquery-public-data.nhtsa_traffic_fatalities.distract_2016` AS d
  JOIN `bigquery-public-data.nhtsa_traffic_fatalities.accident_2016` AS a
    ON d.state_number = a.state_number AND d.consecutive_number = a.consecutive_number
  WHERE d.driver_distracted_by_name NOT IN ('Not Distracted', 'Unknown if Distracted', 'Not Reported')
  GROUP BY a.state_name
)
SELECT 
  year AS Year, 
  state_name AS State, 
  ROUND(accidents_per_100k, 4) AS Accidents_per_100000_people
FROM (
  SELECT 
    a.year, 
    a.state_name, 
    (a.accident_count * 100000.0) / sp.state_population AS accidents_per_100k,
    ROW_NUMBER() OVER (PARTITION BY a.year ORDER BY (a.accident_count * 100000.0) / sp.state_population DESC) AS rn
  FROM accidents AS a
  JOIN state_populations AS sp
    ON a.state_name = sp.state_name
)
WHERE rn <= 5
ORDER BY Year, rn;
```
2025-01-27 04:37:18 - root - INFO - itercount: 3
2025-01-27 04:37:18 - root - INFO - 0
2025-01-27 04:37:18 - root - INFO - Total iteration counts: 3
