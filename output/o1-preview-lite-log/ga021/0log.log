2025-01-25 07:17:24 - openai._base_client - INFO - Retrying request to /chat/completions in 0.467951 seconds
2025-01-25 07:18:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:18:27 - root - INFO - SQL:
SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
   LIMIT 100;
Results:
event_name
session_start
screen_view
level_start_quickplay
select_content
user_engagement
app_exception
level_start
level_complete_quickplay
level_fail_quickplay
level_end_quickplay
post_score
level_retry_quickplay
level_complete
level_up
completed_5_levels
level_fail
level_end
level_retry
level_reset
os_update
ad_reward
no_more_extra_steps
use_extra_steps
spend_virtual_currency
level_reset_quickplay
app_remove
app_clear_data
error
app_update
firebase_campaign
first_open
challenge_a_friend
dynamic_link_first_open
dynamic_link_app_open
challenge_accepted

2025-01-25 07:18:30 - root - INFO - SQL:
SELECT `event_date`, COUNT(*) AS event_count
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
   GROUP BY `event_date`
   ORDER BY `event_date`
   LIMIT 100;
Results:
event_date,event_count
20180702,50000
20180703,50000
20180704,50000
20180705,50000
20180706,50000
20180707,50000
20180708,50000
20180709,50000
20180710,50000
20180711,50000
20180712,50000
20180713,50000
20180714,50000
20180715,50000
20180716,50000

2025-01-25 07:19:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:19:13 - root - INFO - ```sql
SELECT 
  initial.event_name AS quickplay_event_type,
  ROUND((COUNT(DISTINCT returned.`user_pseudo_id`)/COUNT(DISTINCT initial.`user_pseudo_id`))*100, 2) AS retention_rate
FROM (
  SELECT 
    `user_pseudo_id`,
    MIN(PARSE_DATE('%Y%m%d', `event_date`)) AS first_event_date,
    `event_name`
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, `event_name`
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
  AND PARSE_DATE('%Y%m%d', returned.`event_date`) BETWEEN DATE_ADD(initial.first_event_date, INTERVAL 14 DAY) AND DATE_ADD(initial.first_event_date, INTERVAL 21 DAY)
GROUP BY initial.event_name
LIMIT 100;
```

This query calculates the retention rate for users two weeks after their initial quickplay event between July 2, 2018, and July 16, 2018, separately for each quickplay event type. It simplifies the previous conditions by:

- Using `event_name` like `%quickplay%` to capture all quickplay-related events.
- Adjusting the date conditions to ensure users who returned between 14 and 21 days after their initial event are included.
- Removing complex subqueries to simplify the extraction of the quickplay event type.
2025-01-25 07:20:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:20:56 - root - INFO - SQL:
SELECT 
  initial.event_name AS quickplay_event_type,
  ROUND((COUNT(DISTINCT returned.`user_pseudo_id`)/COUNT(DISTINCT initial.`user_pseudo_id`))*100, 2) AS retention_rate
FROM (
  SELECT 
    `user_pseudo_id`,
    MIN(PARSE_DATE('%Y%m%d', `event_date`)) AS first_event_date,
    `event_name`
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, `event_name`
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
  AND PARSE_DATE('%Y%m%d', returned.`event_date`) BETWEEN DATE_ADD(initial.first_event_date, INTERVAL 14 DAY) AND DATE_ADD(initial.first_event_date, INTERVAL 21 DAY)
GROUP BY initial.event_name
LIMIT 100;
Results:
quickplay_event_type,retention_rate
level_start_quickplay,38.78
level_end_quickplay,43.42
level_fail_quickplay,44.98
level_reset_quickplay,36.09
level_complete_quickplay,48.26
level_retry_quickplay,48.56

2025-01-25 07:20:59 - root - INFO - SQL:
SELECT DISTINCT `event_name` AS quickplay_event_type
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
LIMIT 100
Results:
quickplay_event_type
level_complete_quickplay
level_start_quickplay
level_end_quickplay
level_fail_quickplay
level_reset_quickplay
level_retry_quickplay

2025-01-25 07:21:01 - root - INFO - SQL:
SELECT `event_name` AS quickplay_event_type, COUNT(*) AS event_count
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
GROUP BY quickplay_event_type
ORDER BY event_count DESC
LIMIT 100
Results:
quickplay_event_type,event_count
level_start_quickplay,67045
level_end_quickplay,44347
level_complete_quickplay,27247
level_fail_quickplay,17100
level_reset_quickplay,15290
level_retry_quickplay,3908

2025-01-25 07:21:04 - root - INFO - SQL:
SELECT 
  `user_pseudo_id`, 
  MIN(`event_timestamp`) AS first_quickplay_timestamp,
  MIN(TIMESTAMP_MICROS(`event_timestamp`)) AS first_quickplay_date,
  `event_name` AS quickplay_event_type
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
GROUP BY `user_pseudo_id`, quickplay_event_type
LIMIT 100
Results:
user_pseudo_id,first_quickplay_timestamp,first_quickplay_date,quickplay_event_type
5E9B9E20975EF45745B511D401456619,1531389480608007,2018-07-12 09:58:00.608007+00:00,level_fail_quickplay
5E9B9E20975EF45745B511D401456619,1531389486608008,2018-07-12 09:58:06.608008+00:00,level_end_quickplay
5E9B9E20975EF45745B511D401456619,1531389420044004,2018-07-12 09:57:00.044004+00:00,level_start_quickplay
5E9B9E20975EF45745B511D401456619,1531389504457014,2018-07-12 09:58:24.457014+00:00,level_retry_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569093904000,2018-07-02 22:04:53.904000+00:00,level_complete_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569217601022,2018-07-02 22:06:57.601022+00:00,level_fail_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569170904001,2018-07-02 22:06:10.904001+00:00,level_end_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569074007005,2018-07-02 22:04:34.007005+00:00,level_start_quickplay
EB681942FA18C6BF1AF2AC7ABA74D491,1531315097889006,2018-07-11 13:18:17.889006+00:00,level_complete_quickplay
EB681942FA18C6BF1AF2AC7ABA74D491,1531315011858008,2018-07-11 13:16:51.858008+00:00,level_start_quickplay
EB681942FA18C6BF1AF2AC7ABA74D491,1531315103890007,2018-07-11 13:18:23.890007+00:00,level_end_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574795578000,2018-07-02 23:39:55.578000+00:00,level_complete_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574702461008,2018-07-02 23:38:22.461008+00:00,level_start_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574818578001,2018-07-02 23:40:18.578001+00:00,level_end_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574810912006,2018-07-02 23:40:10.912006+00:00,level_retry_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537703667044,2018-07-02 13:21:43.667044+00:00,level_complete_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530539282089061,2018-07-02 13:48:02.089061+00:00,level_fail_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537698668045,2018-07-02 13:21:38.668045+00:00,level_end_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537375967017,2018-07-02 13:16:15.967017+00:00,level_start_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537378152010,2018-07-02 13:16:18.152010+00:00,level_reset_quickplay

2025-01-25 07:21:10 - root - INFO - SQL:
SELECT 
  initial.`user_pseudo_id`, 
  initial.quickplay_event_type,
  initial.first_event_date,
  returned.event_date AS return_event_date
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) = 14
LIMIT 100
Results:
user_pseudo_id,quickplay_event_type,first_event_date,return_event_date
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726

2025-01-25 07:21:12 - root - INFO - SQL:
SELECT 
  `event_name` AS quickplay_event_type, 
  COUNT(DISTINCT `user_pseudo_id`) AS total_users
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
GROUP BY quickplay_event_type
LIMIT 100
Results:
quickplay_event_type,total_users
level_complete_quickplay,1206
level_fail_quickplay,1045
level_end_quickplay,1504
level_start_quickplay,1787
level_retry_quickplay,554
level_reset_quickplay,507

2025-01-25 07:21:19 - root - INFO - SQL:
SELECT 
  initial.quickplay_event_type, 
  COUNT(DISTINCT initial.`user_pseudo_id`) AS users_returned
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
GROUP BY initial.quickplay_event_type
LIMIT 100
Results:
quickplay_event_type,users_returned
level_end_quickplay,653
level_start_quickplay,693
level_fail_quickplay,470
level_retry_quickplay,269
level_reset_quickplay,183
level_complete_quickplay,582

2025-01-25 07:21:26 - root - INFO - SQL:
SELECT 
  initial.quickplay_event_type,
  ROUND((COUNT(DISTINCT returned.`user_pseudo_id`)/COUNT(DISTINCT initial.`user_pseudo_id`))*100, 2) AS retention_rate
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
    AND DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
GROUP BY initial.quickplay_event_type
LIMIT 100
Results:
quickplay_event_type,retention_rate
level_reset_quickplay,36.09
level_retry_quickplay,48.56
level_fail_quickplay,44.98
level_start_quickplay,38.78
level_complete_quickplay,48.26
level_end_quickplay,43.42

2025-01-25 07:21:33 - root - INFO - SQL:
SELECT 
  initial.`user_pseudo_id`, 
  initial.quickplay_event_type
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
    AND DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
WHERE returned.`user_pseudo_id` IS NULL
LIMIT 100
Results:
user_pseudo_id,quickplay_event_type
A8D7DCCA39D8703F2928AD2D7BBB6BE9,level_end_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_start_quickplay
5358D124C06358BCD5FEF67C87052AC2,level_start_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_fail_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_reset_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_end_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_start_quickplay
A8D7DCCA39D8703F2928AD2D7BBB6BE9,level_start_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_start_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_end_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_fail_quickplay
F095A7DDC32D556FE7DFB25469062D5A,level_start_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_fail_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_reset_quickplay
0853C64BFFCD4B2DDCABC141D8233E85,level_start_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_retry_quickplay
A8D7DCCA39D8703F2928AD2D7BBB6BE9,level_complete_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_end_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_reset_quickplay
FCA6DF8DBEE40D1953C3A64628A6F2F4,level_complete_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_start_quickplay
3382CA1F03103BABD01EE179BF98E1F2,level_start_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_end_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_retry_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_complete_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_reset_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_complete_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_end_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_fail_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_retry_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_end_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_start_quickplay
93699FB737D442ABBD95CE58A686442F,level_start_quickplay
FB9AD160115DC0E6F045BB654344287B,level_reset_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_complete_quickplay
B4644C48E3001E68B007D7F86C2383C8,level_start_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_reset_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_start_quickplay
FCA6DF8DBEE40D1953C3A64628A6F2F4,level_start_quickplay
05D414E1BB011E8D68E27AA4AC4A1A3E,level_end_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_fail_quickplay
FCA6DF8DBEE40D1953C3A64628A6F2F4,level_end_quickplay
05D414E1BB011E8D68E27AA4AC4A1A3E,level_start_quickplay
FB9AD160115DC0E6F045BB654344287B,level_start_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_start_quickplay
05D414E1BB011E8D68E27AA4AC4A1A3E,level_complete_quickplay
FB9AD160115DC0E6F045BB654344287B,level_end_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_end_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_fail_quickplay

2025-01-25 07:21:38 - root - INFO - SQL:
SELECT 
  initial.quickplay_event_type,
  DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) AS days_until_return,
  COUNT(DISTINCT initial.`user_pseudo_id`) AS user_count
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
GROUP BY initial.quickplay_event_type, days_until_return
ORDER BY initial.quickplay_event_type, days_until_return
LIMIT 100
Results:
quickplay_event_type,days_until_return,user_count
level_complete_quickplay,-34,1
level_complete_quickplay,-33,1
level_complete_quickplay,-32,1
level_complete_quickplay,-31,5
level_complete_quickplay,-30,4
level_complete_quickplay,-29,7
level_complete_quickplay,-28,11
level_complete_quickplay,-27,14
level_complete_quickplay,-26,24
level_complete_quickplay,-25,23
level_complete_quickplay,-24,29
level_complete_quickplay,-23,36
level_complete_quickplay,-22,52
level_complete_quickplay,-21,62
level_complete_quickplay,-20,99
level_complete_quickplay,-19,120
level_complete_quickplay,-18,129
level_complete_quickplay,-17,120
level_complete_quickplay,-16,133
level_complete_quickplay,-15,162
level_complete_quickplay,-14,245
level_complete_quickplay,-13,222
level_complete_quickplay,-12,208
level_complete_quickplay,-11,217
level_complete_quickplay,-10,227
level_complete_quickplay,-9,234
level_complete_quickplay,-8,224
level_complete_quickplay,-7,253
level_complete_quickplay,-6,228
level_complete_quickplay,-5,212
level_complete_quickplay,-4,226
level_complete_quickplay,-3,223
level_complete_quickplay,-2,208
level_complete_quickplay,-1,212
level_complete_quickplay,0,1206
level_complete_quickplay,1,342
level_complete_quickplay,2,288
level_complete_quickplay,3,269
level_complete_quickplay,4,262
level_complete_quickplay,5,262
level_complete_quickplay,6,254
level_complete_quickplay,7,255
level_complete_quickplay,8,254
level_complete_quickplay,9,229
level_complete_quickplay,10,258
level_complete_quickplay,11,271
level_complete_quickplay,12,239
level_complete_quickplay,13,218
level_complete_quickplay,14,233
level_complete_quickplay,15,194
level_complete_quickplay,16,210
level_complete_quickplay,17,217
level_complete_quickplay,18,229

2025-01-25 07:21:44 - root - INFO - SQL:
SELECT 
  initial.`user_pseudo_id`, 
  initial.quickplay_event_type,
  COUNT(returned.`event_date`) AS return_count
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 1 AND 14
GROUP BY initial.`user_pseudo_id`, initial.quickplay_event_type
ORDER BY return_count DESC
LIMIT 100
Results:
user_pseudo_id,quickplay_event_type,return_count
959635567E419A061EECCCA478EDC718,level_complete_quickplay,22389
959635567E419A061EECCCA478EDC718,level_fail_quickplay,22389
959635567E419A061EECCCA478EDC718,level_start_quickplay,22389
959635567E419A061EECCCA478EDC718,level_end_quickplay,22389
959635567E419A061EECCCA478EDC718,level_retry_quickplay,22389
0E05F56141200FF41FCC0C7FA297FF08,level_retry_quickplay,18454
B63075B53A750A67A12F7F19ED5AA835,level_retry_quickplay,18098
0E05F56141200FF41FCC0C7FA297FF08,level_complete_quickplay,15985
B63075B53A750A67A12F7F19ED5AA835,level_fail_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_complete_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_start_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_reset_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_end_quickplay,14070
0E05F56141200FF41FCC0C7FA297FF08,level_start_quickplay,13925
0E05F56141200FF41FCC0C7FA297FF08,level_end_quickplay,13925
0E05F56141200FF41FCC0C7FA297FF08,level_fail_quickplay,13925
295D9E24D8DE65A010313E667131EF19,level_reset_quickplay,13498
EF500E0CF578004836D1D38C8901862B,level_reset_quickplay,13279
EF500E0CF578004836D1D38C8901862B,level_complete_quickplay,13279
56B9CBB6CB58106DCCF3CAD660232CB2,level_fail_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_end_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_start_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_reset_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_complete_quickplay,13017
2F74E23BEA1E45E3897274EE4903DCC5,level_start_quickplay,12706
2F74E23BEA1E45E3897274EE4903DCC5,level_end_quickplay,12706
2F74E23BEA1E45E3897274EE4903DCC5,level_complete_quickplay,12706
2F74E23BEA1E45E3897274EE4903DCC5,level_fail_quickplay,12706
EF500E0CF578004836D1D38C8901862B,level_end_quickplay,12599
EF500E0CF578004836D1D38C8901862B,level_start_quickplay,12599
EF500E0CF578004836D1D38C8901862B,level_fail_quickplay,12599
295D9E24D8DE65A010313E667131EF19,level_end_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_fail_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_start_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_retry_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_complete_quickplay,11480
10B0D468B5E036E16D13DB53A65F2D49,level_fail_quickplay,10748
CABE7E24215A5C36862658A36AE5CE12,level_fail_quickplay,10662
CABE7E24215A5C36862658A36AE5CE12,level_start_quickplay,10662
CABE7E24215A5C36862658A36AE5CE12,level_retry_quickplay,10662

2025-01-25 07:21:47 - root - INFO - SQL:
SELECT 
  `event_name`, 
  ep.key AS param_key, 
  ep.value.string_value AS param_value
FROM `firebase-public-project.analytics_153293282.events_*`, UNNEST(event_params) AS ep
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
LIMIT 100
Results:
event_name,param_key,param_value
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board

2025-01-25 07:21:50 - root - INFO - SQL:
SELECT 
  initial.quickplay_event_type,
  AVG(user_events.event_count) AS avg_events_per_user
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN (
  SELECT 
    `user_pseudo_id`, 
    COUNT(*) AS event_count
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180730'
  GROUP BY `user_pseudo_id`
) AS user_events
  ON initial.`user_pseudo_id` = user_events.`user_pseudo_id`
GROUP BY initial.quickplay_event_type
LIMIT 100
Results:
quickplay_event_type,avg_events_per_user
level_complete_quickplay,934.6409618573798
level_fail_quickplay,982.3492822966505
level_end_quickplay,778.1675531914892
level_retry_quickplay,1306.409747292419
level_start_quickplay,669.0498041410184
level_reset_quickplay,1161.7416173570025

2025-01-25 07:21:50 - root - INFO - itercount: 0
2025-01-25 07:21:50 - root - INFO - Database Name: firebase-public-project
Schema Name: analytics_153293282
DDL describes table information.
,0
table_name,events_20180801
ddl,"CREATE TABLE `firebase-public-project.analytics_153293282.events_20180801`
(
  event_date STRING,
  event_timestamp INT64,
  event_name STRING,
  event_params ARRAY<STRUCT<key STRING, value STRUCT<string_value STRING, int_value INT64, float_value FLOAT64, double_value FLOAT64>>>,
  event_previous_timestamp INT64,
  event_value_in_usd FLOAT64,
  event_bundle_sequence_id INT64,
  event_server_timestamp_offset INT64,
  user_id STRING,
  user_pseudo_id STRING,
  user_properties ARRAY<STRUCT<key STRING, value STRUCT<string_value STRING, int_value INT64, float_value FLOAT64, double_value FLOAT64, set_timestamp_micros INT64>>>,
  user_first_touch_timestamp INT64,
  user_ltv STRUCT<revenue FLOAT64, currency STRING>,
  device STRUCT<category STRING, mobile_brand_name STRING, mobile_model_name STRING, mobile_marketing_name STRING, mobile_os_hardware_model STRING, operating_system STRING, operating_system_version STRING, vendor_id STRING, advertising_id STRING, language STRING, is_limited_ad_tracking STRING, time_zone_offset_seconds INT64>,
  geo STRUCT<continent STRING, country STRING, region STRING, city STRING>,
  app_info STRUCT<id STRING, version STRING, install_store STRING, firebase_app_id STRING, install_source STRING>,
  traffic_source STRUCT<name STRING, medium STRING, source STRING>,
  stream_id STRING,
  platform STRING
);"

Some other tables have the similar structure: ['events_20180801', 'events_20180621', 'events_20180616', 'events_20180912', 'events_20180814', 'events_20180716', 'events_20181003', 'events_20180620', 'events_20180624', 'events_20180918', 'events_20180612', 'events_20180911', 'events_20180724', 'events_20180807', 'events_20180710', 'events_20180808', 'events_20180702', 'events_20180719', 'events_20180914', 'events_20180913', 'events_20180915', 'events_20180728', 'events_20180817', 'events_20180628', 'events_20180906', 'events_20180704', 'events_20180711', 'events_20180720', 'events_20180706', 'events_20180926', 'events_20180924', 'events_20180731', 'events_20180804', 'events_20180920', 'events_20180715', 'events_20180709', 'events_20180928', 'events_20180904', 'events_20180903', 'events_20180818', 'events_20180820', 'events_20180707', 'events_20180930', 'events_20180821', 'events_20180812', 'events_20180830', 'events_20180908', 'events_20180708', 'events_20180910', 'events_20180922', 'events_20180713', 'events_20180618', 'events_20180811', 'events_20181001', 'events_20180626', 'events_20180828', 'events_20180717', 'events_20180806', 'events_20180721', 'events_20180725', 'events_20180824', 'events_20180923', 'events_20180627', 'events_20180726', 'events_20180729', 'events_20180929', 'events_20180925', 'events_20180722', 'events_20180630', 'events_20180730', 'events_20180831', 'events_20180701', 'events_20180619', 'events_20180810', 'events_20180822', 'events_20180921', 'events_20180819', 'events_20180927', 'events_20180905', 'events_20180816', 'events_20180622', 'events_20180802', 'events_20180826', 'events_20180714', 'events_20180901', 'events_20180916', 'events_20180809', 'events_20181002', 'events_20180703', 'events_20180617', 'events_20180902', 'events_20180625', 'events_20180827', 'events_20180805', 'events_20180825', 'events_20180919', 'events_20180917', 'events_20180705', 'events_20180613', 'events_20180907', 'events_20180909', 'events_20180727', 'events_20180813', 'events_20180614', 'events_20180623', 'events_20180829', 'events_20180615', 'events_20180712', 'events_20180718', 'events_20180815', 'events_20180629', 'events_20180803', 'events_20180823', 'events_20180723']
External knowledge that might be helpful: 
How to Calculate User Retention in Big Query from Google Demo Game Analytics Data

As a Product / Website Analyst, I was pretty psyched to discover Google’s public Google Analytics 4 (GA4) gaming event dataset called `firebase-public-project.analytics_153293282.events_*`. The table allows experienced developers and learners alike to experiment with raw GA4 data in Big Query for free. Event data is basically a log of user interactions with your product for analysis .For newbies interested in learning more about event data and GA4, visit my prior blog. This article provides SQL queries for a quick table overview and explains how to utilize Google Big Query to calculate user retention.


What is Retention?
User retention rates are key indicators for whether your product team meets user needs. Improving retention is often central to long term growth strategies.

**Retention measure’s how often and for how long users tend to return to your product.**

The metric can be a powerful proxy for product usefulness and user opinion. Its analysis can reveal critical information like how well your site converts new visitors to users and which items and features are associated with users coming back. If user data is available, retention can also help a business understand the profiles of its most active users (power users). Finally, retention is a great guardrail metric for A/B tests. Successful, product oriented companies prioritize a healthy user bases over short term profits.


**Common Retention Calculation Strategies**

Two common strategies to calculate retention are: 

a) N-Day retention

b) Unbounded Retention.


a) For N-Day retention, analysts calculate how many users with certain characteristics return over successive periods. It is called N days because we define the length of each period. For example, with N=7 day retention, if User A becomes part of our cohort of interest on day 0 and returns to the product day 5 and day 15, they are counted as retained for week 1 (1–7 days) and week 3 (15–21 days) but not week 2 (8–14 days).


b) For Unbounded Retention, a user is counted as retained each week so long as their most recent product contact was after the week. For example, if User A becomes part of the cohort on day 0 and last returned to the site on day 21, they will be counted as retained in week 1 (1–7 days), week 2 (8–14 days), and week 3 (15–21 days) but not week 4 (22–28 days).

By calculating these metrics, companies can evaluate how well their products hold users’ interests. It also them closer to identifying the patterns that generate return users.



The table structure information is ({database name: {schema name: {table name}}}): 
{'firebase-public-project': {'analytics_153293282': ['events_20180612', 'events_20180613', 'events_20180614', 'events_20180615', 'events_20180616', 'events_20180617', 'events_20180618', 'events_20180619', 'events_20180620', 'events_20180621', 'events_20180622', 'events_20180623', 'events_20180624', 'events_20180625', 'events_20180626', 'events_20180627', 'events_20180628', 'events_20180629', 'events_20180630', 'events_20180701', 'events_20180702', 'events_20180703', 'events_20180704', 'events_20180705', 'events_20180706', 'events_20180707', 'events_20180708', 'events_20180709', 'events_20180710', 'events_20180711', 'events_20180712', 'events_20180713', 'events_20180714', 'events_20180715', 'events_20180716', 'events_20180717', 'events_20180718', 'events_20180719', 'events_20180720', 'events_20180721', 'events_20180722', 'events_20180723', 'events_20180724', 'events_20180725', 'events_20180726', 'events_20180727', 'events_20180728', 'events_20180729', 'events_20180730', 'events_20180731', 'events_20180801', 'events_20180802', 'events_20180803', 'events_20180804', 'events_20180805', 'events_20180806', 'events_20180807', 'events_20180808', 'events_20180809', 'events_20180810', 'events_20180811', 'events_20180812', 'events_20180813', 'events_20180814', 'events_20180815', 'events_20180816', 'events_20180817', 'events_20180818', 'events_20180819', 'events_20180820', 'events_20180821', 'events_20180822', 'events_20180823', 'events_20180824', 'events_20180825', 'events_20180826', 'events_20180827', 'events_20180828', 'events_20180829', 'events_20180830', 'events_20180831', 'events_20180901', 'events_20180902', 'events_20180903', 'events_20180904', 'events_20180905', 'events_20180906', 'events_20180907', 'events_20180908', 'events_20180909', 'events_20180910', 'events_20180911', 'events_20180912', 'events_20180913', 'events_20180914', 'events_20180915', 'events_20180916', 'events_20180917', 'events_20180918', 'events_20180919', 'events_20180920', 'events_20180921', 'events_20180922', 'events_20180923', 'events_20180924', 'events_20180925', 'events_20180926', 'events_20180927', 'events_20180928', 'events_20180929', 'events_20180930', 'events_20181001', 'events_20181002', 'events_20181003']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Tables:**
  - We will use the event tables within the date range from July 2, 2018, to July 16, 2018: `events_20180702` to `events_20180716` in the `firebase-public-project.analytics_153293282` dataset.

- **Columns and Potential Usage:**

  1. **`event_date`**: Used to filter events within the specified date range.
  2. **`event_name`**: To identify 'quickplay' events.
  3. **`event_params`**: To extract the quickplay event types.
  4. **`user_pseudo_id`**: Unique identifier for users to track their events.
  5. **`event_timestamp`**: To determine the timing of events for calculating retention.
  6. **`user_first_touch_timestamp`**: To identify the user's first interaction.
  
- **Conditions That May Be Used:**

  - `event_date` between '20180702' and '20180716'.
  - `event_name` = 'quickplay'.
  - Extracting `event_params` to get specific quickplay event types.
  - Calculating dates two weeks after the initial event for retention.

---

**Sample BigQuery SQL Queries:**

1. **List distinct event names within the specified date range:**

   ```sql
   SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
   LIMIT 100;
   ```

2. **Count the number of events per day within the date range:**

   ```sql
   SELECT `event_date`, COUNT(*) AS event_count
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
   GROUP BY `event_date`
   ORDER BY `event_date`
   LIMIT 100;
   ```

3. **Retrieve all quickplay events within the date range:**

   ```sql
   SELECT `event_name`, `event_date`, `user_pseudo_id`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
     AND `event_name` = 'quickplay'
   LIMIT 100;
   ```

4. **List distinct quickplay event types from event parameters:**

   ```sql
   SELECT DISTINCT ep.value.string_value AS quickplay_event_type
   FROM `firebase-public-project.analytics_153293282.events_*`, UNNEST(event_params) AS ep
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
     AND `event_name` = 'quickplay'
     AND ep.key = 'quickplay_event_type'
   LIMIT 100;
   ```

5. **Count the number of quickplay events per event type:**

   ```sql
   SELECT ep.value.string_value AS quickplay_event_type, COUNT(*) AS event_count
   FROM `firebase-public-project.analytics_153293282.events_*`, UNNEST(event_params) AS ep
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
     AND `event_name` = 'quickplay'
     AND ep.key = 'quickplay_event_type'
   GROUP BY quickplay_event_type
   ORDER BY event_count DESC
   LIMIT 100;
   ```

6. **List users with their first quickplay event date and event type:**

   ```sql
   SELECT 
     `user_pseudo_id`, 
     MIN(`event_timestamp`) AS first_quickplay_timestamp,
     MIN(TIMESTAMP_MICROS(`event_timestamp`)) AS first_quickplay_date,
     (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
     AND `event_name` = 'quickplay'
   GROUP BY `user_pseudo_id`, quickplay_event_type
   LIMIT 100;
   ```

7. **Find users who returned exactly two weeks after their initial quickplay event:**

   ```sql
   SELECT 
     initial.`user_pseudo_id`, 
     initial.quickplay_event_type,
     initial.first_event_date,
     returned.event_date AS return_event_date
   FROM (
     SELECT 
       `user_pseudo_id`, 
       MIN(`event_date`) AS first_event_date,
       (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
     FROM `firebase-public-project.analytics_153293282.events_*`
     WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
       AND `event_name` = 'quickplay'
     GROUP BY `user_pseudo_id`, quickplay_event_type
   ) AS initial
   JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
     ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
   WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) = 14
   LIMIT 100;
   ```

8. **Calculate the total number of users per quickplay event type in the initial period:**

   ```sql
   SELECT 
     quickplay_event_type, 
     COUNT(DISTINCT `user_pseudo_id`) AS total_users
   FROM (
     SELECT 
       `user_pseudo_id`,
       (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
     FROM `firebase-public-project.analytics_153293282.events_*`
     WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
       AND `event_name` = 'quickplay'
   )
   GROUP BY quickplay_event_type
   LIMIT 100;
   ```

9. **Calculate the number of users who returned two weeks later per quickplay event type:**

   ```sql
   SELECT 
     initial.quickplay_event_type, 
     COUNT(DISTINCT initial.`user_pseudo_id`) AS users_returned
   FROM (
     SELECT 
       `user_pseudo_id`, 
       MIN(`event_date`) AS first_event_date,
       (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
     FROM `firebase-public-project.analytics_153293282.events_*`
     WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
       AND `event_name` = 'quickplay'
     GROUP BY `user_pseudo_id`, quickplay_event_type
   ) AS initial
   JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
     ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
   WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
   GROUP BY initial.quickplay_event_type
   LIMIT 100;
   ```

10. **Calculate retention rate per quickplay event type:**

    ```sql
    SELECT 
      initial.quickplay_event_type,
      ROUND((COUNT(DISTINCT returned.`user_pseudo_id`)/COUNT(DISTINCT initial.`user_pseudo_id`))*100, 2) AS retention_rate
    FROM (
      SELECT 
        `user_pseudo_id`, 
        MIN(`event_date`) AS first_event_date,
        (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
      FROM `firebase-public-project.analytics_153293282.events_*`
      WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
        AND `event_name` = 'quickplay'
      GROUP BY `user_pseudo_id`, quickplay_event_type
    ) AS initial
    LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
      ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
      AND DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
    GROUP BY initial.quickplay_event_type
    LIMIT 100;
    ```

11. **List events of users who did not return two weeks later:**

    ```sql
    SELECT 
      initial.`user_pseudo_id`, 
      initial.quickplay_event_type
    FROM (
      SELECT 
        `user_pseudo_id`, 
        MIN(`event_date`) AS first_event_date,
        (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
      FROM `firebase-public-project.analytics_153293282.events_*`
      WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
        AND `event_name` = 'quickplay'
      GROUP BY `user_pseudo_id`, quickplay_event_type
    ) AS initial
    LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
      ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
      AND DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
    WHERE returned.`user_pseudo_id` IS NULL
    LIMIT 100;
    ```

12. **Retrieve the distribution of days until users returned after their initial quickplay event:**

    ```sql
    SELECT 
      initial.quickplay_event_type,
      DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) AS days_until_return,
      COUNT(DISTINCT initial.`user_pseudo_id`) AS user_count
    FROM (
      SELECT 
        `user_pseudo_id`, 
        MIN(`event_date`) AS first_event_date,
        (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
      FROM `firebase-public-project.analytics_153293282.events_*`
      WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
        AND `event_name` = 'quickplay'
      GROUP BY `user_pseudo_id`, quickplay_event_type
    ) AS initial
    JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
      ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
    GROUP BY initial.quickplay_event_type, days_until_return
    ORDER BY initial.quickplay_event_type, days_until_return
    LIMIT 100;
    ```

13. **Identify users with the most frequent returns within two weeks after initial quickplay event:**

    ```sql
    SELECT 
      initial.`user_pseudo_id`, 
      initial.quickplay_event_type,
      COUNT(returned.`event_date`) AS return_count
    FROM (
      SELECT 
        `user_pseudo_id`, 
        MIN(`event_date`) AS first_event_date,
        (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
      FROM `firebase-public-project.analytics_153293282.events_*`
      WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
        AND `event_name` = 'quickplay'
      GROUP BY `user_pseudo_id`, quickplay_event_type
    ) AS initial
    JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
      ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
    WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 1 AND 14
    GROUP BY initial.`user_pseudo_id`, initial.quickplay_event_type
    ORDER BY return_count DESC
    LIMIT 100;
    ```

14. **Extract event parameters for quickplay events:**

    ```sql
    SELECT 
      `event_name`, 
      ep.key AS param_key, 
      ep.value.string_value AS param_value
    FROM `firebase-public-project.analytics_153293282.events_*`, UNNEST(event_params) AS ep
    WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
      AND `event_name` = 'quickplay'
    LIMIT 100;
    ```

15. **Find average number of events per user within the two-week period after initial quickplay event:**

    ```sql
    SELECT 
      initial.quickplay_event_type,
      AVG(user_events.event_count) AS avg_events_per_user
    FROM (
      SELECT 
        `user_pseudo_id`, 
        MIN(`event_date`) AS first_event_date,
        (SELECT ep.value.string_value FROM UNNEST(event_params) AS ep WHERE ep.key = 'quickplay_event_type') AS quickplay_event_type
      FROM `firebase-public-project.analytics_153293282.events_*`
      WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
        AND `event_name` = 'quickplay'
      GROUP BY `user_pseudo_id`, quickplay_event_type
    ) AS initial
    JOIN (
      SELECT 
        `user_pseudo_id`, 
        COUNT(*) AS event_count
      FROM `firebase-public-project.analytics_153293282.events_*`
      WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180730'
      GROUP BY `user_pseudo_id`
    ) AS user_events
      ON initial.`user_pseudo_id` = user_events.`user_pseudo_id`
    GROUP BY initial.quickplay_event_type
    LIMIT 100;
    ```

These queries progressively build up from simple data exploration to more complex retention calculations, providing insights into the user behavior related to quickplay events and helping to compute the retention rates as required.Query:
SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
   LIMIT 100;
Answer:
event_name
session_start
screen_view
level_start_quickplay
select_content
user_engagement
app_exception
level_start
level_complete_quickplay
level_fail_quickplay
level_end_quickplay
post_score
level_retry_quickplay
level_complete
level_up
completed_5_levels
level_fail
level_end
level_retry
level_reset
os_update
ad_reward
no_more_extra_steps
use_extra_steps
spend_virtual_currency
level_reset_quickplay
app_remove
app_clear_data
error
app_update
firebase_campaign
first_open
challenge_a_friend
dynamic_link_first_open
dynamic_link_app_open
challenge_accepted
Query:
SELECT `event_date`, COUNT(*) AS event_count
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
   GROUP BY `event_date`
   ORDER BY `event_date`
   LIMIT 100;
Answer:
event_date,event_count
20180702,50000
20180703,50000
20180704,50000
20180705,50000
20180706,50000
20180707,50000
20180708,50000
20180709,50000
20180710,50000
20180711,50000
20180712,50000
20180713,50000
20180714,50000
20180715,50000
20180716,50000
Query:
SELECT 
  initial.event_name AS quickplay_event_type,
  ROUND((COUNT(DISTINCT returned.`user_pseudo_id`)/COUNT(DISTINCT initial.`user_pseudo_id`))*100, 2) AS retention_rate
FROM (
  SELECT 
    `user_pseudo_id`,
    MIN(PARSE_DATE('%Y%m%d', `event_date`)) AS first_event_date,
    `event_name`
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, `event_name`
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
  AND PARSE_DATE('%Y%m%d', returned.`event_date`) BETWEEN DATE_ADD(initial.first_event_date, INTERVAL 14 DAY) AND DATE_ADD(initial.first_event_date, INTERVAL 21 DAY)
GROUP BY initial.event_name
LIMIT 100;
Answer:
quickplay_event_type,retention_rate
level_start_quickplay,38.78
level_end_quickplay,43.42
level_fail_quickplay,44.98
level_reset_quickplay,36.09
level_complete_quickplay,48.26
level_retry_quickplay,48.56
Query:
SELECT DISTINCT `event_name` AS quickplay_event_type
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
LIMIT 100
Answer:
quickplay_event_type
level_complete_quickplay
level_start_quickplay
level_end_quickplay
level_fail_quickplay
level_reset_quickplay
level_retry_quickplay
Query:
SELECT `event_name` AS quickplay_event_type, COUNT(*) AS event_count
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
GROUP BY quickplay_event_type
ORDER BY event_count DESC
LIMIT 100
Answer:
quickplay_event_type,event_count
level_start_quickplay,67045
level_end_quickplay,44347
level_complete_quickplay,27247
level_fail_quickplay,17100
level_reset_quickplay,15290
level_retry_quickplay,3908
Query:
SELECT 
  `user_pseudo_id`, 
  MIN(`event_timestamp`) AS first_quickplay_timestamp,
  MIN(TIMESTAMP_MICROS(`event_timestamp`)) AS first_quickplay_date,
  `event_name` AS quickplay_event_type
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
GROUP BY `user_pseudo_id`, quickplay_event_type
LIMIT 100
Answer:
user_pseudo_id,first_quickplay_timestamp,first_quickplay_date,quickplay_event_type
5E9B9E20975EF45745B511D401456619,1531389480608007,2018-07-12 09:58:00.608007+00:00,level_fail_quickplay
5E9B9E20975EF45745B511D401456619,1531389486608008,2018-07-12 09:58:06.608008+00:00,level_end_quickplay
5E9B9E20975EF45745B511D401456619,1531389420044004,2018-07-12 09:57:00.044004+00:00,level_start_quickplay
5E9B9E20975EF45745B511D401456619,1531389504457014,2018-07-12 09:58:24.457014+00:00,level_retry_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569093904000,2018-07-02 22:04:53.904000+00:00,level_complete_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569217601022,2018-07-02 22:06:57.601022+00:00,level_fail_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569170904001,2018-07-02 22:06:10.904001+00:00,level_end_quickplay
D7D49CC32C4A23AD56E8DEAE6878EC7B,1530569074007005,2018-07-02 22:04:34.007005+00:00,level_start_quickplay
EB681942FA18C6BF1AF2AC7ABA74D491,1531315097889006,2018-07-11 13:18:17.889006+00:00,level_complete_quickplay
EB681942FA18C6BF1AF2AC7ABA74D491,1531315011858008,2018-07-11 13:16:51.858008+00:00,level_start_quickplay
EB681942FA18C6BF1AF2AC7ABA74D491,1531315103890007,2018-07-11 13:18:23.890007+00:00,level_end_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574795578000,2018-07-02 23:39:55.578000+00:00,level_complete_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574702461008,2018-07-02 23:38:22.461008+00:00,level_start_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574818578001,2018-07-02 23:40:18.578001+00:00,level_end_quickplay
706C748E6D1E0768BFEFE6362B5D3F67,1530574810912006,2018-07-02 23:40:10.912006+00:00,level_retry_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537703667044,2018-07-02 13:21:43.667044+00:00,level_complete_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530539282089061,2018-07-02 13:48:02.089061+00:00,level_fail_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537698668045,2018-07-02 13:21:38.668045+00:00,level_end_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537375967017,2018-07-02 13:16:15.967017+00:00,level_start_quickplay
D0F280B12652EB0D74F6BC74AB13606F,1530537378152010,2018-07-02 13:16:18.152010+00:00,level_reset_quickplay
Query:
SELECT 
  initial.`user_pseudo_id`, 
  initial.quickplay_event_type,
  initial.first_event_date,
  returned.event_date AS return_event_date
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) = 14
LIMIT 100
Answer:
user_pseudo_id,quickplay_event_type,first_event_date,return_event_date
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_reset_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_retry_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_end_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_fail_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_complete_quickplay,20180712,20180726
73980AF5B8954128337EB065CE75C773,level_start_quickplay,20180712,20180726
Query:
SELECT 
  `event_name` AS quickplay_event_type, 
  COUNT(DISTINCT `user_pseudo_id`) AS total_users
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
GROUP BY quickplay_event_type
LIMIT 100
Answer:
quickplay_event_type,total_users
level_complete_quickplay,1206
level_fail_quickplay,1045
level_end_quickplay,1504
level_start_quickplay,1787
level_retry_quickplay,554
level_reset_quickplay,507
Query:
SELECT 
  initial.quickplay_event_type, 
  COUNT(DISTINCT initial.`user_pseudo_id`) AS users_returned
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
GROUP BY initial.quickplay_event_type
LIMIT 100
Answer:
quickplay_event_type,users_returned
level_end_quickplay,653
level_start_quickplay,693
level_fail_quickplay,470
level_retry_quickplay,269
level_reset_quickplay,183
level_complete_quickplay,582
Query:
SELECT 
  initial.quickplay_event_type,
  ROUND((COUNT(DISTINCT returned.`user_pseudo_id`)/COUNT(DISTINCT initial.`user_pseudo_id`))*100, 2) AS retention_rate
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
    AND DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
GROUP BY initial.quickplay_event_type
LIMIT 100
Answer:
quickplay_event_type,retention_rate
level_reset_quickplay,36.09
level_retry_quickplay,48.56
level_fail_quickplay,44.98
level_start_quickplay,38.78
level_complete_quickplay,48.26
level_end_quickplay,43.42
Query:
SELECT 
  initial.`user_pseudo_id`, 
  initial.quickplay_event_type
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
    AND DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21
WHERE returned.`user_pseudo_id` IS NULL
LIMIT 100
Answer:
user_pseudo_id,quickplay_event_type
A8D7DCCA39D8703F2928AD2D7BBB6BE9,level_end_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_start_quickplay
5358D124C06358BCD5FEF67C87052AC2,level_start_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_fail_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_reset_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_end_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_start_quickplay
A8D7DCCA39D8703F2928AD2D7BBB6BE9,level_start_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_start_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_end_quickplay
84DF1EC35F7E079794DDA2BC4BA1E739,level_fail_quickplay
F095A7DDC32D556FE7DFB25469062D5A,level_start_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_fail_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_reset_quickplay
0853C64BFFCD4B2DDCABC141D8233E85,level_start_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_retry_quickplay
A8D7DCCA39D8703F2928AD2D7BBB6BE9,level_complete_quickplay
719D9B4C227C6191B8419D7193CCCBB6,level_end_quickplay
6BFD3E06D9C82ACB070A6C891A6AE15D,level_reset_quickplay
FCA6DF8DBEE40D1953C3A64628A6F2F4,level_complete_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_start_quickplay
3382CA1F03103BABD01EE179BF98E1F2,level_start_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_end_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_retry_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_complete_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_reset_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_complete_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_end_quickplay
2CC293EDCBFA2822994DAFA833FD8B29,level_fail_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_retry_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_end_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_start_quickplay
93699FB737D442ABBD95CE58A686442F,level_start_quickplay
FB9AD160115DC0E6F045BB654344287B,level_reset_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_complete_quickplay
B4644C48E3001E68B007D7F86C2383C8,level_start_quickplay
F547FF35093331CA59F4CCD0D38E7E89,level_reset_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_start_quickplay
FCA6DF8DBEE40D1953C3A64628A6F2F4,level_start_quickplay
05D414E1BB011E8D68E27AA4AC4A1A3E,level_end_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_fail_quickplay
FCA6DF8DBEE40D1953C3A64628A6F2F4,level_end_quickplay
05D414E1BB011E8D68E27AA4AC4A1A3E,level_start_quickplay
FB9AD160115DC0E6F045BB654344287B,level_start_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_start_quickplay
05D414E1BB011E8D68E27AA4AC4A1A3E,level_complete_quickplay
FB9AD160115DC0E6F045BB654344287B,level_end_quickplay
C3295C36C51EAF010079266FB55EF2DD,level_end_quickplay
1B2A9E461E99FB1D165894AFE613AD73,level_fail_quickplay
Query:
SELECT 
  initial.quickplay_event_type,
  DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) AS days_until_return,
  COUNT(DISTINCT initial.`user_pseudo_id`) AS user_count
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
GROUP BY initial.quickplay_event_type, days_until_return
ORDER BY initial.quickplay_event_type, days_until_return
LIMIT 100
Answer:
quickplay_event_type,days_until_return,user_count
level_complete_quickplay,-34,1
level_complete_quickplay,-33,1
level_complete_quickplay,-32,1
level_complete_quickplay,-31,5
level_complete_quickplay,-30,4
level_complete_quickplay,-29,7
level_complete_quickplay,-28,11
level_complete_quickplay,-27,14
level_complete_quickplay,-26,24
level_complete_quickplay,-25,23
level_complete_quickplay,-24,29
level_complete_quickplay,-23,36
level_complete_quickplay,-22,52
level_complete_quickplay,-21,62
level_complete_quickplay,-20,99
level_complete_quickplay,-19,120
level_complete_quickplay,-18,129
level_complete_quickplay,-17,120
level_complete_quickplay,-16,133
level_complete_quickplay,-15,162
level_complete_quickplay,-14,245
level_complete_quickplay,-13,222
level_complete_quickplay,-12,208
level_complete_quickplay,-11,217
level_complete_quickplay,-10,227
level_complete_quickplay,-9,234
level_complete_quickplay,-8,224
level_complete_quickplay,-7,253
level_complete_quickplay,-6,228
level_complete_quickplay,-5,212
level_complete_quickplay,-4,226
level_complete_quickplay,-3,223
level_complete_quickplay,-2,208
level_complete_quickplay,-1,212
level_complete_quickplay,0,1206
level_complete_quickplay,1,342
level_complete_quickplay,2,288
level_complete_quickplay,3,269
level_complete_quickplay,4,262
level_complete_quickplay,5,262
level_complete_quickplay,6,254
level_complete_quickplay,7,255
level_complete_quickplay,8,254
level_complete_quickplay,9,229
level_complete_quickplay,10,258
level_complete_quickplay,11,271
level_complete_quickplay,12,239
level_complete_quickplay,13,218
level_complete_quickplay,14,233
level_complete_quickplay,15,194
level_complete_quickplay,16,210
level_complete_quickplay,17,217
level_complete_quickplay,18,229
Query:
SELECT 
  initial.`user_pseudo_id`, 
  initial.quickplay_event_type,
  COUNT(returned.`event_date`) AS return_count
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
  ON initial.`user_pseudo_id` = returned.`user_pseudo_id`
WHERE DATE_DIFF(PARSE_DATE('%Y%m%d', returned.`event_date`), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 1 AND 14
GROUP BY initial.`user_pseudo_id`, initial.quickplay_event_type
ORDER BY return_count DESC
LIMIT 100
Answer:
user_pseudo_id,quickplay_event_type,return_count
959635567E419A061EECCCA478EDC718,level_complete_quickplay,22389
959635567E419A061EECCCA478EDC718,level_fail_quickplay,22389
959635567E419A061EECCCA478EDC718,level_start_quickplay,22389
959635567E419A061EECCCA478EDC718,level_end_quickplay,22389
959635567E419A061EECCCA478EDC718,level_retry_quickplay,22389
0E05F56141200FF41FCC0C7FA297FF08,level_retry_quickplay,18454
B63075B53A750A67A12F7F19ED5AA835,level_retry_quickplay,18098
0E05F56141200FF41FCC0C7FA297FF08,level_complete_quickplay,15985
B63075B53A750A67A12F7F19ED5AA835,level_fail_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_complete_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_start_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_reset_quickplay,14070
B63075B53A750A67A12F7F19ED5AA835,level_end_quickplay,14070
0E05F56141200FF41FCC0C7FA297FF08,level_start_quickplay,13925
0E05F56141200FF41FCC0C7FA297FF08,level_end_quickplay,13925
0E05F56141200FF41FCC0C7FA297FF08,level_fail_quickplay,13925
295D9E24D8DE65A010313E667131EF19,level_reset_quickplay,13498
EF500E0CF578004836D1D38C8901862B,level_reset_quickplay,13279
EF500E0CF578004836D1D38C8901862B,level_complete_quickplay,13279
56B9CBB6CB58106DCCF3CAD660232CB2,level_fail_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_end_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_start_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_reset_quickplay,13017
56B9CBB6CB58106DCCF3CAD660232CB2,level_complete_quickplay,13017
2F74E23BEA1E45E3897274EE4903DCC5,level_start_quickplay,12706
2F74E23BEA1E45E3897274EE4903DCC5,level_end_quickplay,12706
2F74E23BEA1E45E3897274EE4903DCC5,level_complete_quickplay,12706
2F74E23BEA1E45E3897274EE4903DCC5,level_fail_quickplay,12706
EF500E0CF578004836D1D38C8901862B,level_end_quickplay,12599
EF500E0CF578004836D1D38C8901862B,level_start_quickplay,12599
EF500E0CF578004836D1D38C8901862B,level_fail_quickplay,12599
295D9E24D8DE65A010313E667131EF19,level_end_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_fail_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_start_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_retry_quickplay,11480
295D9E24D8DE65A010313E667131EF19,level_complete_quickplay,11480
10B0D468B5E036E16D13DB53A65F2D49,level_fail_quickplay,10748
CABE7E24215A5C36862658A36AE5CE12,level_fail_quickplay,10662
CABE7E24215A5C36862658A36AE5CE12,level_start_quickplay,10662
CABE7E24215A5C36862658A36AE5CE12,level_retry_quickplay,10662
Query:
SELECT 
  `event_name`, 
  ep.key AS param_key, 
  ep.value.string_value AS param_value
FROM `firebase-public-project.analytics_153293282.events_*`, UNNEST(event_params) AS ep
WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
  AND `event_name` LIKE '%quickplay%'
LIMIT 100
Answer:
event_name,param_key,param_value
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
level_complete_quickplay,firebase_event_origin,app+gtm
level_complete_quickplay,firebase_screen_id,
level_complete_quickplay,board,S
level_complete_quickplay,value,
level_complete_quickplay,firebase_screen_class,game_board
Query:
SELECT 
  initial.quickplay_event_type,
  AVG(user_events.event_count) AS avg_events_per_user
FROM (
  SELECT 
    `user_pseudo_id`, 
    MIN(`event_date`) AS first_event_date,
    `event_name` AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND `event_name` LIKE '%quickplay%'
  GROUP BY `user_pseudo_id`, quickplay_event_type
) AS initial
JOIN (
  SELECT 
    `user_pseudo_id`, 
    COUNT(*) AS event_count
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE _TABLE_SUFFIX BETWEEN '20180702' AND '20180730'
  GROUP BY `user_pseudo_id`
) AS user_events
  ON initial.`user_pseudo_id` = user_events.`user_pseudo_id`
GROUP BY initial.quickplay_event_type
LIMIT 100
Answer:
quickplay_event_type,avg_events_per_user
level_complete_quickplay,934.6409618573798
level_fail_quickplay,982.3492822966505
level_end_quickplay,778.1675531914892
level_retry_quickplay,1306.409747292419
level_start_quickplay,669.0498041410184
level_reset_quickplay,1161.7416173570025
End Exploring Related Columns
Task: What is the retention rate for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type?

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Quickplay_Event_Type,Retention_Rate
event_type1:str,retention_rate1:0<=float<=100
event_type2:str,retention_rate2:0<=float<=100
...
```

The table above shows the retention rates for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type. The `Quickplay_Event_Type` column lists the different types of quickplay events, and the `Retention_Rate` column provides the percentage of users (a value between 0 and 100) who returned two weeks after their initial event..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'firebase-public-project': {'analytics_153293282': ['events_20180612', 'events_20180613', 'events_20180614', 'events_20180615', 'events_20180616', 'events_20180617', 'events_20180618', 'events_20180619', 'events_20180620', 'events_20180621', 'events_20180622', 'events_20180623', 'events_20180624', 'events_20180625', 'events_20180626', 'events_20180627', 'events_20180628', 'events_20180629', 'events_20180630', 'events_20180701', 'events_20180702', 'events_20180703', 'events_20180704', 'events_20180705', 'events_20180706', 'events_20180707', 'events_20180708', 'events_20180709', 'events_20180710', 'events_20180711', 'events_20180712', 'events_20180713', 'events_20180714', 'events_20180715', 'events_20180716', 'events_20180717', 'events_20180718', 'events_20180719', 'events_20180720', 'events_20180721', 'events_20180722', 'events_20180723', 'events_20180724', 'events_20180725', 'events_20180726', 'events_20180727', 'events_20180728', 'events_20180729', 'events_20180730', 'events_20180731', 'events_20180801', 'events_20180802', 'events_20180803', 'events_20180804', 'events_20180805', 'events_20180806', 'events_20180807', 'events_20180808', 'events_20180809', 'events_20180810', 'events_20180811', 'events_20180812', 'events_20180813', 'events_20180814', 'events_20180815', 'events_20180816', 'events_20180817', 'events_20180818', 'events_20180819', 'events_20180820', 'events_20180821', 'events_20180822', 'events_20180823', 'events_20180824', 'events_20180825', 'events_20180826', 'events_20180827', 'events_20180828', 'events_20180829', 'events_20180830', 'events_20180831', 'events_20180901', 'events_20180902', 'events_20180903', 'events_20180904', 'events_20180905', 'events_20180906', 'events_20180907', 'events_20180908', 'events_20180909', 'events_20180910', 'events_20180911', 'events_20180912', 'events_20180913', 'events_20180914', 'events_20180915', 'events_20180916', 'events_20180917', 'events_20180918', 'events_20180919', 'events_20180920', 'events_20180921', 'events_20180922', 'events_20180923', 'events_20180924', 'events_20180925', 'events_20180926', 'events_20180927', 'events_20180928', 'events_20180929', 'events_20180930', 'events_20181001', 'events_20181002', 'events_20181003']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 07:22:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:22:47 - root - INFO - ```sql
SELECT
  initial.event_name AS quickplay_event_type,
  ROUND(
    (COUNT(DISTINCT CASE WHEN DATE_DIFF(PARSE_DATE('%Y%m%d', returned.event_date), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21 THEN returned.user_pseudo_id END) / COUNT(DISTINCT initial.user_pseudo_id)) * 100,
    2
  ) AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS first_event_date,
    event_name
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_start_quickplay',
      'level_end_quickplay',
      'level_complete_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    event_name
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
ON
  initial.user_pseudo_id = returned.user_pseudo_id
WHERE
  _TABLE_SUFFIX BETWEEN '20180702' AND '20180730'
GROUP BY
  initial.event_name
ORDER BY
  initial.event_name;
```
2025-01-25 07:22:51 - root - INFO - itercount: 1
2025-01-25 07:22:51 - root - INFO - 0
2025-01-25 07:22:51 - root - INFO - results: 
quickplay_event_type,retention_rate
level_complete_quickplay,45.02
level_end_quickplay,40.16
level_fail_quickplay,41.05
level_reset_quickplay,33.73
level_retry_quickplay,44.58
level_start_quickplay,35.87


2025-01-25 07:22:51 - root - INFO - Please check the answer again by reviewing What is the retention rate for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Quickplay_Event_Type,Retention_Rate
event_type1:str,retention_rate1:0<=float<=100
event_type2:str,retention_rate2:0<=float<=100
...
```

The table above shows the retention rates for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type. The `Quickplay_Event_Type` column lists the different types of quickplay events, and the `Retention_Rate` column provides the percentage of users (a value between 0 and 100) who returned two weeks after their initial event. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
quickplay_event_type,retention_rate
level_complete_quickplay,45.02
level_end_quickplay,40.16
level_fail_quickplay,41.05
level_reset_quickplay,33.73
level_retry_quickplay,44.58
level_start_quickplay,35.87
Current sql:
SELECT
  initial.event_name AS quickplay_event_type,
  ROUND(
    (COUNT(DISTINCT CASE WHEN DATE_DIFF(PARSE_DATE('%Y%m%d', returned.event_date), PARSE_DATE('%Y%m%d', initial.first_event_date), DAY) BETWEEN 14 AND 21 THEN returned.user_pseudo_id END) / COUNT(DISTINCT initial.user_pseudo_id)) * 100,
    2
  ) AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS first_event_date,
    event_name
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_start_quickplay',
      'level_end_quickplay',
      'level_complete_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    event_name
) AS initial
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS returned
ON
  initial.user_pseudo_id = returned.user_pseudo_id
WHERE
  _TABLE_SUFFIX BETWEEN '20180702' AND '20180730'
GROUP BY
  initial.event_name
ORDER BY
  initial.event_name;
2025-01-25 07:23:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:23:26 - root - INFO - ```sql
WITH initial_events AS (
  SELECT
    user_pseudo_id,
    event_name AS quickplay_event_type,
    MIN(event_date) AS first_event_date
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_complete_quickplay',
      'level_end_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay',
      'level_start_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    quickplay_event_type
),
retention AS (
  SELECT
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    CASE
      WHEN COUNTIF(
        DATE_DIFF(
          PARSE_DATE('%Y%m%d', e.event_date),
          PARSE_DATE('%Y%m%d', initial.first_event_date),
          DAY
        ) BETWEEN 14 AND 21
      ) > 0 THEN 1
      ELSE 0
    END AS retained
  FROM
    initial_events AS initial
  LEFT JOIN
    `firebase-public-project.analytics_153293282.events_*` AS e
  ON
    initial.user_pseudo_id = e.user_pseudo_id
    AND _TABLE_SUFFIX BETWEEN '20180716' AND '20180731'
    AND DATE_DIFF(
      PARSE_DATE('%Y%m%d', e.event_date),
      PARSE_DATE('%Y%m%d', initial.first_event_date),
      DAY
    ) BETWEEN 14 AND 21
  GROUP BY
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    initial.first_event_date
)
SELECT
  quickplay_event_type AS Quickplay_Event_Type,
  ROUND(AVG(retained) * 100, 4) AS Retention_Rate
FROM
  retention
GROUP BY
  quickplay_event_type
ORDER BY
  quickplay_event_type;
```
2025-01-25 07:23:30 - root - INFO - itercount: 2
2025-01-25 07:23:30 - root - INFO - 0
2025-01-25 07:23:30 - root - INFO - results: 
Quickplay_Event_Type,Retention_Rate
level_complete_quickplay,45.937
level_end_quickplay,40.891
level_fail_quickplay,42.1053
level_reset_quickplay,34.1223
level_retry_quickplay,45.3069
level_start_quickplay,36.5976


2025-01-25 07:23:30 - root - INFO - Please check the answer again by reviewing What is the retention rate for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Quickplay_Event_Type,Retention_Rate
event_type1:str,retention_rate1:0<=float<=100
event_type2:str,retention_rate2:0<=float<=100
...
```

The table above shows the retention rates for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type. The `Quickplay_Event_Type` column lists the different types of quickplay events, and the `Retention_Rate` column provides the percentage of users (a value between 0 and 100) who returned two weeks after their initial event. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Quickplay_Event_Type,Retention_Rate
level_complete_quickplay,45.937
level_end_quickplay,40.891
level_fail_quickplay,42.1053
level_reset_quickplay,34.1223
level_retry_quickplay,45.3069
level_start_quickplay,36.5976
Current sql:
WITH initial_events AS (
  SELECT
    user_pseudo_id,
    event_name AS quickplay_event_type,
    MIN(event_date) AS first_event_date
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_complete_quickplay',
      'level_end_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay',
      'level_start_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    quickplay_event_type
),
retention AS (
  SELECT
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    CASE
      WHEN COUNTIF(
        DATE_DIFF(
          PARSE_DATE('%Y%m%d', e.event_date),
          PARSE_DATE('%Y%m%d', initial.first_event_date),
          DAY
        ) BETWEEN 14 AND 21
      ) > 0 THEN 1
      ELSE 0
    END AS retained
  FROM
    initial_events AS initial
  LEFT JOIN
    `firebase-public-project.analytics_153293282.events_*` AS e
  ON
    initial.user_pseudo_id = e.user_pseudo_id
    AND _TABLE_SUFFIX BETWEEN '20180716' AND '20180731'
    AND DATE_DIFF(
      PARSE_DATE('%Y%m%d', e.event_date),
      PARSE_DATE('%Y%m%d', initial.first_event_date),
      DAY
    ) BETWEEN 14 AND 21
  GROUP BY
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    initial.first_event_date
)
SELECT
  quickplay_event_type AS Quickplay_Event_Type,
  ROUND(AVG(retained) * 100, 4) AS Retention_Rate
FROM
  retention
GROUP BY
  quickplay_event_type
ORDER BY
  quickplay_event_type;
2025-01-25 07:24:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:24:49 - root - INFO - ```sql
WITH initial_events AS (
  SELECT
    user_pseudo_id,
    event_name AS quickplay_event_type,
    MIN(event_date) AS first_event_date
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_complete_quickplay',
      'level_end_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay',
      'level_start_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    quickplay_event_type
),
retention AS (
  SELECT
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    CASE
      WHEN COUNTIF(e.user_pseudo_id IS NOT NULL) > 0 THEN 1
      ELSE 0
    END AS retained
  FROM
    initial_events AS initial
  LEFT JOIN
    `firebase-public-project.analytics_153293282.events_*` AS e
  ON
    initial.user_pseudo_id = e.user_pseudo_id
    AND _TABLE_SUFFIX BETWEEN '20180717' AND '20180806'
    AND DATE_DIFF(
      PARSE_DATE('%Y%m%d', e.event_date),
      PARSE_DATE('%Y%m%d', initial.first_event_date),
      DAY
    ) BETWEEN 14 AND 21
  GROUP BY
    initial.quickplay_event_type,
    initial.user_pseudo_id
)
SELECT
  quickplay_event_type AS Quickplay_Event_Type,
  ROUND(AVG(retained) * 100, 4) AS Retention_Rate
FROM
  retention
GROUP BY
  quickplay_event_type
ORDER BY
  quickplay_event_type;
```
2025-01-25 07:24:53 - root - INFO - itercount: 3
2025-01-25 07:24:53 - root - INFO - 0
2025-01-25 07:24:53 - root - INFO - results: 
Quickplay_Event_Type,Retention_Rate
level_complete_quickplay,47.6783
level_end_quickplay,42.9521
level_fail_quickplay,44.7847
level_reset_quickplay,35.7002
level_retry_quickplay,48.3755
level_start_quickplay,38.3884


2025-01-25 07:24:53 - root - INFO - Please check the answer again by reviewing What is the retention rate for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Quickplay_Event_Type,Retention_Rate
event_type1:str,retention_rate1:0<=float<=100
event_type2:str,retention_rate2:0<=float<=100
...
```

The table above shows the retention rates for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type. The `Quickplay_Event_Type` column lists the different types of quickplay events, and the `Retention_Rate` column provides the percentage of users (a value between 0 and 100) who returned two weeks after their initial event. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Quickplay_Event_Type,Retention_Rate
level_complete_quickplay,47.6783
level_end_quickplay,42.9521
level_fail_quickplay,44.7847
level_reset_quickplay,35.7002
level_retry_quickplay,48.3755
level_start_quickplay,38.3884
Current sql:
WITH initial_events AS (
  SELECT
    user_pseudo_id,
    event_name AS quickplay_event_type,
    MIN(event_date) AS first_event_date
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_complete_quickplay',
      'level_end_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay',
      'level_start_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    quickplay_event_type
),
retention AS (
  SELECT
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    CASE
      WHEN COUNTIF(e.user_pseudo_id IS NOT NULL) > 0 THEN 1
      ELSE 0
    END AS retained
  FROM
    initial_events AS initial
  LEFT JOIN
    `firebase-public-project.analytics_153293282.events_*` AS e
  ON
    initial.user_pseudo_id = e.user_pseudo_id
    AND _TABLE_SUFFIX BETWEEN '20180717' AND '20180806'
    AND DATE_DIFF(
      PARSE_DATE('%Y%m%d', e.event_date),
      PARSE_DATE('%Y%m%d', initial.first_event_date),
      DAY
    ) BETWEEN 14 AND 21
  GROUP BY
    initial.quickplay_event_type,
    initial.user_pseudo_id
)
SELECT
  quickplay_event_type AS Quickplay_Event_Type,
  ROUND(AVG(retained) * 100, 4) AS Retention_Rate
FROM
  retention
GROUP BY
  quickplay_event_type
ORDER BY
  quickplay_event_type;
2025-01-25 07:25:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:25:29 - root - INFO - ```sql
WITH initial_events AS (
  SELECT
    user_pseudo_id,
    event_name AS quickplay_event_type,
    MIN(event_date) AS first_event_date
  FROM
    `firebase-public-project.analytics_153293282.events_*`
  WHERE
    _TABLE_SUFFIX BETWEEN '20180702' AND '20180716'
    AND event_name IN (
      'level_complete_quickplay',
      'level_end_quickplay',
      'level_fail_quickplay',
      'level_reset_quickplay',
      'level_retry_quickplay',
      'level_start_quickplay'
    )
  GROUP BY
    user_pseudo_id,
    quickplay_event_type
),
retention AS (
  SELECT
    initial.quickplay_event_type,
    initial.user_pseudo_id,
    CASE
      WHEN COUNTIF(e.user_pseudo_id IS NOT NULL) > 0 THEN 1
      ELSE 0
    END AS retained
  FROM
    initial_events AS initial
  LEFT JOIN
    `firebase-public-project.analytics_153293282.events_*` AS e
  ON
    initial.user_pseudo_id = e.user_pseudo_id
    AND _TABLE_SUFFIX BETWEEN '20180717' AND '20180806'
    AND DATE_DIFF(
      PARSE_DATE('%Y%m%d', e.event_date),
      PARSE_DATE('%Y%m%d', initial.first_event_date),
      DAY
    ) BETWEEN 14 AND 21
  GROUP BY
    initial.quickplay_event_type,
    initial.user_pseudo_id
)
SELECT
  quickplay_event_type AS Quickplay_Event_Type,
  ROUND(AVG(retained) * 100, 4) AS Retention_Rate
FROM
  retention
GROUP BY
  quickplay_event_type
ORDER BY
  quickplay_event_type;
```
2025-01-25 07:25:33 - root - INFO - itercount: 4
2025-01-25 07:25:33 - root - INFO - 0
2025-01-25 07:25:33 - root - INFO - Total iteration counts: 4
