2025-01-25 07:17:24 - openai._base_client - INFO - Retrying request to /chat/completions in 0.466737 seconds
2025-01-25 07:18:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:18:30 - root - INFO - SQL:
SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   LIMIT 100;
Results:
event_name
level_end_quickplay
app_update
level_reset_quickplay
dynamic_link_app_open
notification_foreground
level_fail_quickplay
user_engagement
completed_5_levels
spend_virtual_currency
first_open
session_start
level_complete_quickplay
select_content
level_start
level_end
ad_reward
level_complete
level_reset
firebase_campaign
challenge_accepted
screen_view
post_score
level_start_quickplay
error
level_up
level_fail
app_exception
no_more_extra_steps
level_retry
challenge_a_friend
os_update
in_app_purchase
level_retry_quickplay
use_extra_steps
app_remove
dynamic_link_first_open
app_clear_data

2025-01-25 07:18:36 - root - INFO - SQL:
SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
Results:
event_name
level_complete
level_reset
firebase_campaign
challenge_accepted
os_update
level_complete_quickplay
session_start
select_content
challenge_a_friend
screen_view
post_score
level_start_quickplay
level_up
level_fail
level_retry
no_more_extra_steps
app_exception
error
ad_reward
level_end_quickplay
level_reset_quickplay
app_update
dynamic_link_app_open
level_end
level_start
spend_virtual_currency
first_open
use_extra_steps
level_retry_quickplay
app_remove
app_clear_data
dynamic_link_first_open
level_fail_quickplay
user_engagement
completed_5_levels

2025-01-25 07:19:45 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:19:45 - root - INFO - ```sql
SELECT
  initial_users.quickplay_event_type,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT IF(later_events.user_pseudo_id IS NOT NULL, initial_users.user_pseudo_id, NULL)) AS retained_users,
  (COUNT(DISTINCT IF(later_events.user_pseudo_id IS NOT NULL, initial_users.user_pseudo_id, NULL)) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    event_timestamp AS initial_timestamp,
    (SELECT value.string_value FROM UNNEST(event_params) WHERE key = 'quickplay_type') AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name = 'quickplay'
    AND event_date BETWEEN '20180702' AND '20180716'
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
ON initial_users.user_pseudo_id = later_events.user_pseudo_id
AND later_events.event_timestamp BETWEEN initial_users.initial_timestamp + 1209600000000 AND initial_users.initial_timestamp + 2419200000000
GROUP BY initial_users.quickplay_event_type
LIMIT 100;
```
2025-01-25 07:20:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:20:34 - root - INFO - ```sql
SELECT
  initial_users.quickplay_event_name,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_timestamp) AS initial_timestamp,
    event_name AS quickplay_event_name
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
ON initial_users.user_pseudo_id = later_events.user_pseudo_id
AND later_events.event_timestamp BETWEEN initial_users.initial_timestamp + 1209600000000 AND initial_users.initial_timestamp + 1814400000000
GROUP BY initial_users.quickplay_event_name
LIMIT 100;
```
2025-01-25 07:21:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:21:37 - root - INFO - SQL:
SELECT
  initial_users.quickplay_event_name,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_timestamp) AS initial_timestamp,
    event_name AS quickplay_event_name
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
ON initial_users.user_pseudo_id = later_events.user_pseudo_id
AND later_events.event_timestamp BETWEEN initial_users.initial_timestamp + 1209600000000 AND initial_users.initial_timestamp + 1814400000000
GROUP BY initial_users.quickplay_event_name
LIMIT 100;
Results:
quickplay_event_name,total_users,retained_users,retention_rate
level_reset_quickplay,507,170,33.53057199211045
level_end_quickplay,1504,618,41.090425531914896
level_start_quickplay,1787,657,36.765528819250136
level_fail_quickplay,1045,444,42.48803827751196
level_complete_quickplay,1206,550,45.605306799336645
level_retry_quickplay,554,258,46.57039711191336

2025-01-25 07:22:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:22:34 - root - INFO - ```sql
SELECT
  initial_users.quickplay_event_name,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_name
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
  ON initial_users.user_pseudo_id = later_events.user_pseudo_id
 AND DATE_DIFF(PARSE_DATE('%Y%m%d', later_events.event_date), PARSE_DATE('%Y%m%d', initial_users.initial_event_date), DAY) >= 14
GROUP BY initial_users.quickplay_event_name
LIMIT 100;
```
2025-01-25 07:23:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:23:47 - root - INFO - SQL:
SELECT
  initial_users.quickplay_event_name,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_name
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
  ON initial_users.user_pseudo_id = later_events.user_pseudo_id
 AND DATE_DIFF(PARSE_DATE('%Y%m%d', later_events.event_date), PARSE_DATE('%Y%m%d', initial_users.initial_event_date), DAY) >= 14
GROUP BY initial_users.quickplay_event_name
LIMIT 100;
Results:
quickplay_event_name,total_users,retained_users,retention_rate
level_fail_quickplay,1045,733,70.14354066985646
level_start_quickplay,1787,1181,66.08841634023503
level_complete_quickplay,1206,902,74.7927031509121
level_retry_quickplay,554,405,73.10469314079423
level_reset_quickplay,507,305,60.15779092702169
level_end_quickplay,1504,1067,70.94414893617021

2025-01-25 07:23:54 - root - INFO - SQL:
SELECT DISTINCT param.key
FROM `firebase-public-project.analytics_153293282.events_*`,
  UNNEST(event_params) AS param
WHERE event_name LIKE '%quickplay%'
  AND event_date BETWEEN '20180702' AND '20180716'
LIMIT 100
Results:
key
firebase_screen_id
value
firebase_screen_class
board
firebase_event_origin

2025-01-25 07:24:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:24:22 - root - INFO - ```sql
SELECT DISTINCT param.key
FROM `firebase-public-project.analytics_153293282.events_*`,
  UNNEST(event_params) AS param
WHERE event_name LIKE '%quickplay%'
LIMIT 100;
```
2025-01-25 07:25:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:25:26 - root - INFO - SQL:
SELECT DISTINCT param.key
FROM `firebase-public-project.analytics_153293282.events_*`,
  UNNEST(event_params) AS param
WHERE event_name LIKE '%quickplay%'
LIMIT 100;
Results:
key
firebase_screen_class
firebase_screen_id
board
firebase_event_origin
value

2025-01-25 07:25:32 - root - INFO - SQL:
SELECT user_pseudo_id,
  MIN(event_date) AS first_quickplay_date
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY user_pseudo_id
LIMIT 100
Results:
user_pseudo_id,first_quickplay_date
5217AB1A454DAED6243E1C9818BE6A20,20180627
E0F91AA200D6F12DBE53B0D166AFD87B,20180707
2F0F260BD7B876C346B41977D0D03D62,20180706
D1621FABED8BEBB6913F7C7456ABBDAB,20180707
8E2CA56C1FD81A095DECAEDE6F2ED626,20180622
A666FD2C8F5F662111C5ECEAF9CA6562,20180707
7566596A1D6ACA781692A7A0B89B06EF,20180613
920DB84FCC0F4421650B9E257E33180B,20180613
B1AF454DE996A302235A9C354B6E5985,20180701
5BDEA4C55EFDF16308475E1ACA152767,20180706
9A12E7E2B3CF644B8304DF8E1A9CE2D8,20180618
E512079B53179DF9A608CF4ADE47DE9D,20180618
98578513E0F25350F961CDCBA9D3656F,20180614
7548E849537562672CF9C567B9C0EC87,20180626
83FB7D43B1E7E7F56B667667163A746A,20180707
A934B78A4B0A0D85718D89303D195B2E,20180707
F0FC99F563E1247AD70240E5AA132ABF,20180620
487DE902636DD8A9844A2D61FE7BD568,20180612
1B3AD9683D475EFB398E131DFE65AE61,20180612
F5822275490E7BF0C269CAED489C8053,20180707
AAADF44F1C6A57099FEF88D15C7CF64D,20180623
1C65943AF5217570A2E4D9B58B6E6FC4,20180622
E8AA0D95D5317A98F1592D34D75A8946,20180707
32B8D06C9F7E1EA3FEEAA158A6912216,20180707
37DEF17DD3761C66B7F56806F978E726,20180625
717914316B7E4BD629C168B3A05634DC,20180625
FB149ABD1F42826AA82A9D0D3FB03342,20180625
4C984F59962433E54226AF922DAA894A,20180707
01C784BDB7AF4DC8DAD6DCD21AF56E25,20180618
ABE28FFF3F8B3F0E1AFAAEEE2FD0105C,20180707
D14F72ECEF450A96C642F9C58DEDF723,20180707
E9DCE2D958652BD58E846DCE86BDD90A,20180618
F92B2FB00F381010F8895FDFB47A8331,20180707
EEBCB25D5F056CCF59DDE654388ACD2B,20180620
E53BC2A0AD86417B443AF14EE3082C0F,20180622
38383D77F69C1CAA39B0CAC891CB0E0B,20180614
2F6043B9170F1B2C4A16A13F3D6D00EB,20180630
4295F8BC46B98B453731B1F938B75CAD,20180707
47F7713B7F3C4F3149A9200360757C6B,20180617
17636078D57884AD7EA5406C60E2BD10,20180804
43B9E5915CF39E53BAF74E0B6C201BE1,20180809
9B18A1CBA96D52D05CFA7CB7C9011EDE,20180708
41CA0FA528C7227EA1E592DCC4733C40,20180613
D30431EE9683DA4AD3EB2AE44109A735,20180814
7177907C1E492D178BAB61997705665F,20180814
64F401B4579C5F48CC8B20A65A5BF104,20180713
1A7F253A85B952C329518608DEC20138,20180613
B5F3D00E28A57C9522F2DEE3CB903DD1,20180621
5458D74B4B3B6A11DC98ABDC2F7AA0B1,20180814
0FD8410E5528FC512E551697BB8911C8,20180701
9AFF07DCC4DC8276854BC916473FEDDA,20180813
EE64062E27E239F4B809BA79E3517516,20180814
55EEC95A163C7791E528B12D5FA32CA9,20180624
DE8C865ECDECDD5CE81CB141AFD698AD,20180814
E9B766FA2D5B25A0E71F4A023F2BE733,20180807
A0903E7042C13251799B68B16FD1EBA6,20180802

2025-01-25 07:25:38 - root - INFO - SQL:
SELECT user_pseudo_id,
  MIN(event_date) AS first_quickplay_date,
  ARRAY_AGG(event_name ORDER BY event_timestamp ASC LIMIT 1)[OFFSET(0)] AS quickplay_event_type
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY user_pseudo_id
LIMIT 100
Results:
user_pseudo_id,first_quickplay_date,quickplay_event_type
102CC7D8CD5D3E861EACE1BAB97E61EC,20180614,level_start_quickplay
487DE902636DD8A9844A2D61FE7BD568,20180612,level_start_quickplay
2F0F260BD7B876C346B41977D0D03D62,20180706,level_start_quickplay
8E2CA56C1FD81A095DECAEDE6F2ED626,20180622,level_start_quickplay
3883FF0DFAB40ECD4EA781FC0D1CE18A,20180822,level_start_quickplay
9BFA45225ECA7CD4D2A9F956B875CF85,20180906,level_start_quickplay
41CA0FA528C7227EA1E592DCC4733C40,20180613,level_start_quickplay
7566596A1D6ACA781692A7A0B89B06EF,20180613,level_start_quickplay
920DB84FCC0F4421650B9E257E33180B,20180613,level_start_quickplay
31E8B3EB3D9167E813FDFB812898F2F6,20180618,level_start_quickplay
879503A3ED5F2DCB6592E99C42E1BDFE,20180901,level_start_quickplay
E512079B53179DF9A608CF4ADE47DE9D,20180618,level_start_quickplay
98578513E0F25350F961CDCBA9D3656F,20180614,level_start_quickplay
0FD8410E5528FC512E551697BB8911C8,20180701,level_start_quickplay
9CD5BB1A0B88ABE7A4EDFD5A05972F33,20180929,level_start_quickplay
1C65943AF5217570A2E4D9B58B6E6FC4,20180622,level_start_quickplay
898B790ACC7834117A9B2C98A8B6F1F5,20180618,level_start_quickplay
87B1F896770D48526901F75489E30535,20180625,level_start_quickplay
9741557300F0652C44C5E56623F922FB,20180630,level_start_quickplay
136F2C0A18FA7D6A967EEBDC2C7E3346,20180612,level_start_quickplay
FB149ABD1F42826AA82A9D0D3FB03342,20180625,level_start_quickplay
1B3AD9683D475EFB398E131DFE65AE61,20180612,level_fail_quickplay
53553A4F7A4663BA782C839944C85E68,20180625,level_start_quickplay
7944286F80A3955AF83CAB9F7C88866D,20180614,level_start_quickplay
5B333FE2BC3875C6C3882279B51B8BAF,20180827,level_start_quickplay
EEBCB25D5F056CCF59DDE654388ACD2B,20180620,level_start_quickplay
1043C28A3DC504006CC45ADE96B95A96,20180629,level_start_quickplay
28F3F06C6AEB5E82FD11BB2E723F0292,20180614,level_start_quickplay
075EBEDBF28134BE41FB4E7D943F858C,20180612,level_start_quickplay
1C107111F6722BA305BF26036F830F28,20180902,level_start_quickplay
2E232DB69EBB2EF7E68E2B0C10DBE859,20180928,level_start_quickplay
EBB30E8C806A423B024E51AC32021A6A,20180621,level_start_quickplay
EBE661044C1949546986A852F35083A1,20180629,level_start_quickplay
537BF60056C260DCA1ADB5CD1824383A,20180927,level_start_quickplay
DC400E1B157258545CB288C8CA9265AF,20180916,level_start_quickplay
2B86004D342C2EA67F3164372314F0C4,20180709,level_start_quickplay

2025-01-25 07:25:45 - root - INFO - SQL:
SELECT user_pseudo_id,
  COUNT(*) AS quickplay_event_count
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY user_pseudo_id
LIMIT 100
Results:
user_pseudo_id,quickplay_event_count
0409A1CE83D1D4DC0F01E2DFA44ED555,89
B71CB5D517BE99FEEED64A0F57842032,448
4AD68EDF4DD9C3B096154F101E4197E0,74
3D03A380687FE3369E93915D50C572CB,1191
A0E93D033E25966AB516BE78D143DE7A,112
6AC7BFEC4A74E77E7B267A984BF3F0E6,39
10B0D468B5E036E16D13DB53A65F2D49,22923
19DEEA6B15B314DB0ED2A4936959D8F9,2205
0D17D0247F158FA3E40D21EFF46D1651,5769
7EE035CA8E6132A8877C39656896BA41,565
CABE7E24215A5C36862658A36AE5CE12,6657
0545C2BABDB15C6A952ECEA222E8F5E6,24
DE39C2A4BA199C8845AC0932C2DA31BB,7
370CDFEE49990E4A9A1FBC0DC5C31C1C,2567
000F49564E9F2B85F3B1AF1A0DDCB872,4
E239BDFE3F283A559FE7DFD7B7CC853B,56
A1102C7F5C64168869AD4E83CD9EB9EB,9
A95BA9143018CA81430258E8A725C3E6,355
29BC86DCA0D500C9410F392B57C28DD3,44
A79F28462D5F839505F23758B1410DC4,53
604581EBBA6CECFC5D56550A4C8BB3A3,5
3B6AAC03208203A03577FAA6D34F5784,34
FDA4BBBCF1EA2D95CDD77BFC5F00A837,1578
F4EA0F2888792BD62555AD46ED534839,204
46940B869F002DCFDDA860189AF77F23,48
CAEEAF95F1BA12CFD6A5D3C7DB1E5EC5,1
21A8AA9B759F44F04F8BDE4AEB9CF4A9,7
06A302E3A4767793ADBC884143708660,251
D55D4E5B60368F4BE64F16EFD78B2BE7,1920
2F74E23BEA1E45E3897274EE4903DCC5,8986
8E3F5E21DBD60F1EEF4CA7BD7B36E933,11
229254D7C810F98F72C89A8060E194D4,1470
C028D1BCE3EE4626D117DF55D6A617B8,155
8DC5189969449E1BF8588B3EA64974A1,1461
C6DE585349744A40725DB0AB17041BA3,5953
B1D1ED35873581A23E48C4CD03DDFF81,355
28C4A09298C441D5AFD39E749D9F3DA3,233
A2E61D52E29C7A87CB8AD4911BC077FB,17
7386D239899D55E3D62DA619F359A7C0,978
E6850F5E0DAB3E339C6A36BDEECCA26F,445
FC55032FC8C06EB1A1220D1ABD1164C9,78
B9D8DF9BE543DEFAEDC13BF8903A859A,23
09A826527E24EFA70A0B7A8BDCD38962,28
B75F91EB6C7FDA9A329567E763CF9E44,900
F3C9D7235C2A60FBFBDE1F2EEFBA8B2B,48
B065432393D59B360BEEAB8F60E62710,3
1690882C6796582749CA6818CBF9773F,116
7E40E634997585B0C69B6F67C01C191B,313
15B80FD06C15A48A1A78E5C30FB25C94,15
343B740C7B3BD9C2CFA46BF097A8856E,1091
7F811674D65C2E02A6A705E97799E372,301
A665B189D13406F392208230C9B631CB,1
6702A2EA5F6159151ECDF9937BB44AAD,1
5B5E143556AF47EED54099306EF47CBE,14
74FEEEC5DB278BA33D32E42C5A152BC0,15
61C77E4D83006CF88B5BB443E4A7DDA2,12
77D5FF20DF909CDD790ED52FC94AF7BD,157
5162969F86FF3415BCAA129B20C94C12,13
DB9D0368B6DC1CD2E03CDDBE7060DE31,2877
82B5DB000108639FF0D38F39D7AC46FD,332

2025-01-25 07:32:00 - root - INFO - SQL:
SELECT DISTINCT t1.user_pseudo_id
FROM `firebase-public-project.analytics_153293282.events_*` t1
JOIN `firebase-public-project.analytics_153293282.events_*` t2
  ON t1.user_pseudo_id = t2.user_pseudo_id
WHERE t1.event_name LIKE '%quickplay%'
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', t2.event_date), PARSE_DATE('%Y%m%d', t1.event_date), DAY) BETWEEN 14 AND 28
LIMIT 100
Results:
user_pseudo_id
31F8F98A5B838C7375267F10DADBDA24
DA48D36D07835B1918BDF831AF83B5EF
A7FC7B2053B196DB7EA799033E01C83A
CA51DAF1373B5C2A16C174AFBD2132A4
5800569BC32997BCE5774BA3C675C4E4
5E09265F12D64B9FA85FF9427A0A7FB0
751F1516AC974AC343F62070D3BA39F5
7392DD4A7E544737A716D9CD889DF86C
BE89C8EA9D132E6BD866F4B3A8B1E384
6DC8E9960F2EAE5C05215ADFC160359C
9FE7CF3C966A5B12F0D8713907993B75
C334D1A3424934130CD61EB692EA0509
112A3AFC009A9F387BD4DECEF3D8D722
90C3670F63B20F80034121404A9DF3A0
E48A64DA907583189751D6FF988D14F6
5C5A0787542CD24F1E19F9EB778BA766
3A6E4010B115AA8EB99461DA8E9A7275
81BFFE61CAB181676917D75F1B617CB2
7410C5CC4FA11D31DB5F9B1D8ECD6BD0
33BA0F066B903D1C520E3F0D54A681A5
58E204089E7397B4B3131D7232AA58C5
EFEBD09C379F92361B37BE7389673FA5
5B763E8410411FFFEC4ADC5EEE935A84
8784FFC3E4B12459529F4E9E04E277BF
1970310126C6DC8A005D7F20B6B99FA9
5249B4686BC5038FBFE36A3E6CCA5B72
44759496F6F519B1A4BEF55BE55C631C
FFD44153572065E379B7E96916F730B8
81C75CB599BE7E11A66110C3FE9D0050
236508FFA944FF2B18FC5B27ECC9C63F
018F03084C88E944163F76A0D0C2FBA1
392D0E63B14710BD0F033A6713916FA5
1748CF87FC0F4E9B3997E2D8AEB022E9
4525693FE38C11BA8E5D0BD59256D05E
91DAE55BC5A28FE0BE68A6DF61D58A68
CCE60CE7DBE296A7828A028094E21D51
12A0B6E613AC52FAAA4EA602FAB670FE
F3C82C9DB04064BA7965BBBD95864189
9F4600B013DC8E9AB3FDF054C6464440
F3CA6D208932C0BD365FE0D589038E1C
2AF28461D35A78CEB9095B9875F5A1C9
622E890EE63F0B83C532CC052BEE8A50
14EC3B93608EFEEC1FA22D31EB995403
A6A77DA8F2C4102A83EED1D5216EB318
6B07E90CD14662B55877A7CBC80A1133
F506E5B5D610285BF94A2A917A1858D4
4BF98D09CA8359FC59ADAF56D00338F8
2CF33FDBBCE129166C717E86C6014005
1998E771F5C24E7FEA242074595E52FE
9BD56355E3D05428B3B73245830810B7
7C1E97DFFF6F56E533E6904120E530E4
93D4EE3D0C25484B69EE1820FEE7555A
4C2972AB90F34CEB9467DCFF1B0ED70F
799D5E5223988F35611AC9B641C0A4A1
53ACAE15981F1A8F9A3133340D599299
B1B04A0DC2BC6A8B7A161C1D4F00F033
B19501509EADDDB42342340A93E2BAAB
09CAEE95CE99F27D00EA630EEDBCECA2
42C4D0E04C64D55730927871C9FFEC80
D9FEC4E4418413FCE771B203FD7D48D2
DDAE3C0D9E323BD017D05496CD1C8B95
5E7FD2E063D2347A72EC52EA919B2550
440A05EBA986494BA256D2089CB1079B
7392FB7027578690D48268EE642A3895
B141B75E5E5D48DAD8298F91B94A2E07
2A7A057011B97398D224EDDAECDD3B88
5241D8D2898A6A6784C15316B501EEB0
7D4A5F559639529C01B1BBE9E1BD00E9
0F67E233B19D2898229CD156974A93AE
7842C62D45ECE888132F21C9F4417B21
F99CC3598522ABE54B9DCAC2969179CC
CC88655DF7CDE5E8225BA20B5D6EC59B
BA799687DAB1885D1D8624FD0FDB1B27
FB581F2AC74E08CD38CCAAA9A99F0217
8D5EFA15E2508685B416668530B07BA4
062EFDCE1B385D06E7F44D063AF58A83
812A0C9302E7E1A711B416C0904C99CD
ABF803076F199C505F76E3B1CD0FB4ED
AB068A15CDD59D0FC63175D661A75F6F
D031112AF5E886F8CB7B5D88C2A6EB2A
D8A4973047AF2FA8E9061F6F52E6BD61
1A2C9C653774421441B4877FC4B49D01
DF7B1F6B6AEF483760B6439EF91BC26A
252AEF85FD074278ECC2D69C593C87C9
A8DC644112858EF6E52078F7405F88FD
D62EDD239EF72D80713B3414F1A7C541
570495249052C5E40EC34A2B054DA1A1
C2B70597394F5F624D9AC65CF82BC0EA
4E0D2F7E40746B90029E4F4241F9ECA9
3A1B5A55C33A7EF1A37C909A753606B8
9ECE81C526D4A7F85115B8D9C398AFC2
B5C5E0E0C3984E096C77B2A34AEE0BA7
0175F289F0878C46DCA6B0AF3C5677F1

2025-01-25 07:32:06 - root - INFO - SQL:
SELECT t2.user_pseudo_id, t2.event_name, t2.event_timestamp
FROM `firebase-public-project.analytics_153293282.events_*` t1
JOIN `firebase-public-project.analytics_153293282.events_*` t2
  ON t1.user_pseudo_id = t2.user_pseudo_id
WHERE t1.event_name LIKE '%quickplay%'
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', t2.event_date), PARSE_DATE('%Y%m%d', t1.event_date), DAY) BETWEEN 14 AND 28
LIMIT 100
Results:
user_pseudo_id,event_name,event_timestamp
68495553C4E4675C74F6476A12E92ADB,app_remove,1535372096290000
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002

2025-01-25 07:32:13 - root - INFO - SQL:
SELECT event_name AS quickplay_event_type,
  COUNT(DISTINCT user_pseudo_id) AS user_count
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY event_name
LIMIT 100
Results:
quickplay_event_type,user_count
level_end_quickplay,8168
level_start_quickplay,10166
level_complete_quickplay,5676
level_reset_quickplay,3517
level_fail_quickplay,6343
level_retry_quickplay,2940

2025-01-25 07:36:09 - root - INFO - SQL:
SELECT t1.event_name AS quickplay_event_type,
  COUNT(DISTINCT t1.user_pseudo_id) AS retained_users
FROM `firebase-public-project.analytics_153293282.events_*` t1
JOIN `firebase-public-project.analytics_153293282.events_*` t2
  ON t1.user_pseudo_id = t2.user_pseudo_id
WHERE t1.event_name LIKE '%quickplay%'
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', t2.event_date), PARSE_DATE('%Y%m%d', t1.event_date), DAY) BETWEEN 14 AND 28
GROUP BY t1.event_name
LIMIT 100
Results:
quickplay_event_type,retained_users
level_start_quickplay,2732
level_complete_quickplay,2127
level_end_quickplay,2468
level_fail_quickplay,1918
level_reset_quickplay,933
level_retry_quickplay,1001

2025-01-25 07:36:16 - root - INFO - SQL:
SELECT initial_users.quickplay_event_type,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
  ON initial_users.user_pseudo_id = later_events.user_pseudo_id
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', later_events.event_date), PARSE_DATE('%Y%m%d', initial_users.initial_event_date), DAY) BETWEEN 14 AND 28
GROUP BY initial_users.quickplay_event_type
LIMIT 100
Results:
quickplay_event_type,total_users,retained_users,retention_rate
level_end_quickplay,1504,809,53.78989361702128
level_start_quickplay,1787,878,49.13262451035255
level_fail_quickplay,1045,577,55.21531100478468
level_reset_quickplay,507,228,44.97041420118343
level_retry_quickplay,554,326,58.844765342960294
level_complete_quickplay,1206,712,59.03814262023217

2025-01-25 07:36:16 - root - INFO - itercount: 0
2025-01-25 07:36:16 - root - INFO - Database Name: firebase-public-project
Schema Name: analytics_153293282
DDL describes table information.
,0
table_name,events_20180801
ddl,"CREATE TABLE `firebase-public-project.analytics_153293282.events_20180801`
(
  event_date STRING,
  event_timestamp INT64,
  event_name STRING,
  event_params ARRAY<STRUCT<key STRING, value STRUCT<string_value STRING, int_value INT64, float_value FLOAT64, double_value FLOAT64>>>,
  event_previous_timestamp INT64,
  event_value_in_usd FLOAT64,
  event_bundle_sequence_id INT64,
  event_server_timestamp_offset INT64,
  user_id STRING,
  user_pseudo_id STRING,
  user_properties ARRAY<STRUCT<key STRING, value STRUCT<string_value STRING, int_value INT64, float_value FLOAT64, double_value FLOAT64, set_timestamp_micros INT64>>>,
  user_first_touch_timestamp INT64,
  user_ltv STRUCT<revenue FLOAT64, currency STRING>,
  device STRUCT<category STRING, mobile_brand_name STRING, mobile_model_name STRING, mobile_marketing_name STRING, mobile_os_hardware_model STRING, operating_system STRING, operating_system_version STRING, vendor_id STRING, advertising_id STRING, language STRING, is_limited_ad_tracking STRING, time_zone_offset_seconds INT64>,
  geo STRUCT<continent STRING, country STRING, region STRING, city STRING>,
  app_info STRUCT<id STRING, version STRING, install_store STRING, firebase_app_id STRING, install_source STRING>,
  traffic_source STRUCT<name STRING, medium STRING, source STRING>,
  stream_id STRING,
  platform STRING
);"

Some other tables have the similar structure: ['events_20180801', 'events_20180621', 'events_20180616', 'events_20180912', 'events_20180814', 'events_20180716', 'events_20181003', 'events_20180620', 'events_20180624', 'events_20180918', 'events_20180612', 'events_20180911', 'events_20180724', 'events_20180807', 'events_20180710', 'events_20180808', 'events_20180702', 'events_20180719', 'events_20180914', 'events_20180913', 'events_20180915', 'events_20180728', 'events_20180817', 'events_20180628', 'events_20180906', 'events_20180704', 'events_20180711', 'events_20180720', 'events_20180706', 'events_20180926', 'events_20180924', 'events_20180731', 'events_20180804', 'events_20180920', 'events_20180715', 'events_20180709', 'events_20180928', 'events_20180904', 'events_20180903', 'events_20180818', 'events_20180820', 'events_20180707', 'events_20180930', 'events_20180821', 'events_20180812', 'events_20180830', 'events_20180908', 'events_20180708', 'events_20180910', 'events_20180922', 'events_20180713', 'events_20180618', 'events_20180811', 'events_20181001', 'events_20180626', 'events_20180828', 'events_20180717', 'events_20180806', 'events_20180721', 'events_20180725', 'events_20180824', 'events_20180923', 'events_20180627', 'events_20180726', 'events_20180729', 'events_20180929', 'events_20180925', 'events_20180722', 'events_20180630', 'events_20180730', 'events_20180831', 'events_20180701', 'events_20180619', 'events_20180810', 'events_20180822', 'events_20180921', 'events_20180819', 'events_20180927', 'events_20180905', 'events_20180816', 'events_20180622', 'events_20180802', 'events_20180826', 'events_20180714', 'events_20180901', 'events_20180916', 'events_20180809', 'events_20181002', 'events_20180703', 'events_20180617', 'events_20180902', 'events_20180625', 'events_20180827', 'events_20180805', 'events_20180825', 'events_20180919', 'events_20180917', 'events_20180705', 'events_20180613', 'events_20180907', 'events_20180909', 'events_20180727', 'events_20180813', 'events_20180614', 'events_20180623', 'events_20180829', 'events_20180615', 'events_20180712', 'events_20180718', 'events_20180815', 'events_20180629', 'events_20180803', 'events_20180823', 'events_20180723']
External knowledge that might be helpful: 
How to Calculate User Retention in Big Query from Google Demo Game Analytics Data

As a Product / Website Analyst, I was pretty psyched to discover Google’s public Google Analytics 4 (GA4) gaming event dataset called `firebase-public-project.analytics_153293282.events_*`. The table allows experienced developers and learners alike to experiment with raw GA4 data in Big Query for free. Event data is basically a log of user interactions with your product for analysis .For newbies interested in learning more about event data and GA4, visit my prior blog. This article provides SQL queries for a quick table overview and explains how to utilize Google Big Query to calculate user retention.


What is Retention?
User retention rates are key indicators for whether your product team meets user needs. Improving retention is often central to long term growth strategies.

**Retention measure’s how often and for how long users tend to return to your product.**

The metric can be a powerful proxy for product usefulness and user opinion. Its analysis can reveal critical information like how well your site converts new visitors to users and which items and features are associated with users coming back. If user data is available, retention can also help a business understand the profiles of its most active users (power users). Finally, retention is a great guardrail metric for A/B tests. Successful, product oriented companies prioritize a healthy user bases over short term profits.


**Common Retention Calculation Strategies**

Two common strategies to calculate retention are: 

a) N-Day retention

b) Unbounded Retention.


a) For N-Day retention, analysts calculate how many users with certain characteristics return over successive periods. It is called N days because we define the length of each period. For example, with N=7 day retention, if User A becomes part of our cohort of interest on day 0 and returns to the product day 5 and day 15, they are counted as retained for week 1 (1–7 days) and week 3 (15–21 days) but not week 2 (8–14 days).


b) For Unbounded Retention, a user is counted as retained each week so long as their most recent product contact was after the week. For example, if User A becomes part of the cohort on day 0 and last returned to the site on day 21, they will be counted as retained in week 1 (1–7 days), week 2 (8–14 days), and week 3 (15–21 days) but not week 4 (22–28 days).

By calculating these metrics, companies can evaluate how well their products hold users’ interests. It also them closer to identifying the patterns that generate return users.



The table structure information is ({database name: {schema name: {table name}}}): 
{'firebase-public-project': {'analytics_153293282': ['events_20180612', 'events_20180613', 'events_20180614', 'events_20180615', 'events_20180616', 'events_20180617', 'events_20180618', 'events_20180619', 'events_20180620', 'events_20180621', 'events_20180622', 'events_20180623', 'events_20180624', 'events_20180625', 'events_20180626', 'events_20180627', 'events_20180628', 'events_20180629', 'events_20180630', 'events_20180701', 'events_20180702', 'events_20180703', 'events_20180704', 'events_20180705', 'events_20180706', 'events_20180707', 'events_20180708', 'events_20180709', 'events_20180710', 'events_20180711', 'events_20180712', 'events_20180713', 'events_20180714', 'events_20180715', 'events_20180716', 'events_20180717', 'events_20180718', 'events_20180719', 'events_20180720', 'events_20180721', 'events_20180722', 'events_20180723', 'events_20180724', 'events_20180725', 'events_20180726', 'events_20180727', 'events_20180728', 'events_20180729', 'events_20180730', 'events_20180731', 'events_20180801', 'events_20180802', 'events_20180803', 'events_20180804', 'events_20180805', 'events_20180806', 'events_20180807', 'events_20180808', 'events_20180809', 'events_20180810', 'events_20180811', 'events_20180812', 'events_20180813', 'events_20180814', 'events_20180815', 'events_20180816', 'events_20180817', 'events_20180818', 'events_20180819', 'events_20180820', 'events_20180821', 'events_20180822', 'events_20180823', 'events_20180824', 'events_20180825', 'events_20180826', 'events_20180827', 'events_20180828', 'events_20180829', 'events_20180830', 'events_20180831', 'events_20180901', 'events_20180902', 'events_20180903', 'events_20180904', 'events_20180905', 'events_20180906', 'events_20180907', 'events_20180908', 'events_20180909', 'events_20180910', 'events_20180911', 'events_20180912', 'events_20180913', 'events_20180914', 'events_20180915', 'events_20180916', 'events_20180917', 'events_20180918', 'events_20180919', 'events_20180920', 'events_20180921', 'events_20180922', 'events_20180923', 'events_20180924', 'events_20180925', 'events_20180926', 'events_20180927', 'events_20180928', 'events_20180929', 'events_20180930', 'events_20181001', 'events_20181002', 'events_20181003']}}
Begin Exploring Related Columns
**Relevant Columns and Their Potential Usage:**

- **event_name**: Used to filter for 'quickplay' events.
- **event_date**: Used to filter events within the date range of July 2, 2018, to July 16, 2018.
- **user_pseudo_id**: Unique identifier for users to track user activities.
- **event_timestamp**: Used to determine the timing of events and calculate time differences for retention analysis.
- **event_params**: Contains additional parameters; can be used to extract specific 'quickplay' event types.
- **user_first_touch_timestamp**: May help identify the user's first interaction with the app.
  
**Conditions That May Be Used:**

- `event_name = 'quickplay'` to select quickplay events.
- `event_date BETWEEN '20180702' AND '20180716'` to filter events within the specified date range.
- Extracting event types from `event_params` by looking for specific keys.
- Calculating if users had events two weeks after their initial quickplay event for retention rate.

---

**SQL Queries:**

1. **Retrieve a list of distinct event names to understand available events:**

   ```sql
   SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   LIMIT 100;
   ```

2. **Retrieve distinct event names within the specified date range:**

   ```sql
   SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
   ```

3. **Get all users who had a 'quickplay' event within the date range:**

   ```sql
   SELECT DISTINCT `user_pseudo_id`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_name` = 'quickplay'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
   ```

4. **Inspect the event parameters of 'quickplay' events to find event types:**

   ```sql
   SELECT `event_params`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_name` = 'quickplay'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
   ```

5. **List all keys in the event parameters of 'quickplay' events:**

   ```sql
   SELECT DISTINCT param.key
   FROM `firebase-public-project.analytics_153293282.events_*`,
   UNNEST(event_params) AS param
   WHERE `event_name` = 'quickplay'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
   ```

6. **Extract distinct 'quickplay' event types from event parameters:**

   ```sql
   SELECT DISTINCT param.value.string_value AS quickplay_event_type
   FROM `firebase-public-project.analytics_153293282.events_*`,
   UNNEST(event_params) AS param
   WHERE `event_name` = 'quickplay'
   AND param.key = 'quickplay_type'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
   ```

7. **Find the initial 'quickplay' event timestamp for each user:**

   ```sql
   SELECT `user_pseudo_id`,
   MIN(`event_timestamp`) AS first_quickplay_timestamp
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_name` = 'quickplay'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   GROUP BY `user_pseudo_id`
   LIMIT 100;
   ```

8. **Retrieve users along with their initial 'quickplay' event type:**

   ```sql
   SELECT `user_pseudo_id`,
   MIN(`event_timestamp`) AS first_quickplay_timestamp,
   FIRST_VALUE(param.value.string_value) OVER (
     PARTITION BY `user_pseudo_id` 
     ORDER BY `event_timestamp`
   ) AS quickplay_event_type
   FROM `firebase-public-project.analytics_153293282.events_*`,
   UNNEST(event_params) AS param
   WHERE `event_name` = 'quickplay'
   AND param.key = 'quickplay_type'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   GROUP BY `user_pseudo_id`, param.value.string_value
   LIMIT 100;
   ```

9. **Count the number of 'quickplay' events per user within the date range:**

   ```sql
   SELECT `user_pseudo_id`,
   COUNT(*) AS quickplay_event_count
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_name` = 'quickplay'
   AND `event_date` BETWEEN '20180702' AND '20180716'
   GROUP BY `user_pseudo_id`
   LIMIT 100;
   ```

10. **Identify users who returned exactly two weeks after their initial 'quickplay' event:**

    ```sql
    SELECT DISTINCT t1.`user_pseudo_id`
    FROM `firebase-public-project.analytics_153293282.events_*` t1
    JOIN `firebase-public-project.analytics_153293282.events_*` t2
    ON t1.`user_pseudo_id` = t2.`user_pseudo_id`
    WHERE t1.`event_name` = 'quickplay'
    AND t1.`event_date` BETWEEN '20180702' AND '20180716'
    AND t2.`event_timestamp` BETWEEN t1.`event_timestamp` + 1209600000000 AND t1.`event_timestamp` + 1296000000000
    LIMIT 100;
    ```

11. **Retrieve events of users two weeks after their initial 'quickplay' event:**

    ```sql
    SELECT t2.`user_pseudo_id`, t2.`event_name`, t2.`event_timestamp`
    FROM `firebase-public-project.analytics_153293282.events_*` t1
    JOIN `firebase-public-project.analytics_153293282.events_*` t2
    ON t1.`user_pseudo_id` = t2.`user_pseudo_id`
    WHERE t1.`event_name` = 'quickplay'
    AND t1.`event_date` BETWEEN '20180702' AND '20180716'
    AND t2.`event_timestamp` BETWEEN t1.`event_timestamp` + 1209600000000 AND t1.`event_timestamp` + 1296000000000
    LIMIT 100;
    ```

12. **Get the count of users per 'quickplay' event type:**

    ```sql
    SELECT param.value.string_value AS quickplay_event_type,
    COUNT(DISTINCT `user_pseudo_id`) AS user_count
    FROM `firebase-public-project.analytics_153293282.events_*`,
    UNNEST(event_params) AS param
    WHERE `event_name` = 'quickplay'
    AND param.key = 'quickplay_type'
    AND `event_date` BETWEEN '20180702' AND '20180716'
    GROUP BY quickplay_event_type
    LIMIT 100;
    ```

13. **Calculate the number of users retained after two weeks for each 'quickplay' event type:**

    ```sql
    SELECT param.value.string_value AS quickplay_event_type,
    COUNT(DISTINCT t1.`user_pseudo_id`) AS retained_users
    FROM `firebase-public-project.analytics_153293282.events_*` t1
    JOIN `firebase-public-project.analytics_153293282.events_*` t2
    ON t1.`user_pseudo_id` = t2.`user_pseudo_id`
    JOIN UNNEST(t1.event_params) AS param
    WHERE t1.`event_name` = 'quickplay'
    AND param.key = 'quickplay_type'
    AND t1.`event_date` BETWEEN '20180702' AND '20180716'
    AND t2.`event_timestamp` BETWEEN t1.`event_timestamp` + 1209600000000 AND t1.`event_timestamp` + 1296000000000
    GROUP BY quickplay_event_type
    LIMIT 100;
    ```

14. **Calculate total users and retention rate for each 'quickplay' event type:**

    ```sql
    SELECT initial_quickplay_type AS quickplay_event_type,
    COUNT(DISTINCT initial_users.`user_pseudo_id`) AS total_users,
    COUNT(DISTINCT retained_users.`user_pseudo_id`) AS retained_users,
    (COUNT(DISTINCT retained_users.`user_pseudo_id`) / COUNT(DISTINCT initial_users.`user_pseudo_id`)) * 100 AS retention_rate
    FROM (
      SELECT `user_pseudo_id`,
      param.value.string_value AS initial_quickplay_type,
      `event_timestamp` AS initial_timestamp
      FROM `firebase-public-project.analytics_153293282.events_*`,
      UNNEST(event_params) AS param
      WHERE `event_name` = 'quickplay'
      AND param.key = 'quickplay_type'
      AND `event_date` BETWEEN '20180702' AND '20180716'
    ) AS initial_users
    LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS retained_users
    ON initial_users.`user_pseudo_id` = retained_users.`user_pseudo_id`
    AND retained_users.`event_timestamp` BETWEEN initial_users.initial_timestamp + 1209600000000 AND initial_users.initial_timestamp + 1296000000000
    GROUP BY quickplay_event_type
    LIMIT 100;
    ```

---

These queries progressively explore the data needed to calculate the retention rate for users two weeks after their initial 'quickplay' event, separated by event type. By examining event names, dates, user IDs, and event parameters, we gather necessary information to perform retention analysis within the specified date range.Query:
SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   LIMIT 100;
Answer:
event_name
level_end_quickplay
app_update
level_reset_quickplay
dynamic_link_app_open
notification_foreground
level_fail_quickplay
user_engagement
completed_5_levels
spend_virtual_currency
first_open
session_start
level_complete_quickplay
select_content
level_start
level_end
ad_reward
level_complete
level_reset
firebase_campaign
challenge_accepted
screen_view
post_score
level_start_quickplay
error
level_up
level_fail
app_exception
no_more_extra_steps
level_retry
challenge_a_friend
os_update
in_app_purchase
level_retry_quickplay
use_extra_steps
app_remove
dynamic_link_first_open
app_clear_data
Query:
SELECT DISTINCT `event_name`
   FROM `firebase-public-project.analytics_153293282.events_*`
   WHERE `event_date` BETWEEN '20180702' AND '20180716'
   LIMIT 100;
Answer:
event_name
level_complete
level_reset
firebase_campaign
challenge_accepted
os_update
level_complete_quickplay
session_start
select_content
challenge_a_friend
screen_view
post_score
level_start_quickplay
level_up
level_fail
level_retry
no_more_extra_steps
app_exception
error
ad_reward
level_end_quickplay
level_reset_quickplay
app_update
dynamic_link_app_open
level_end
level_start
spend_virtual_currency
first_open
use_extra_steps
level_retry_quickplay
app_remove
app_clear_data
dynamic_link_first_open
level_fail_quickplay
user_engagement
completed_5_levels
Query:
SELECT
  initial_users.quickplay_event_name,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_timestamp) AS initial_timestamp,
    event_name AS quickplay_event_name
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
ON initial_users.user_pseudo_id = later_events.user_pseudo_id
AND later_events.event_timestamp BETWEEN initial_users.initial_timestamp + 1209600000000 AND initial_users.initial_timestamp + 1814400000000
GROUP BY initial_users.quickplay_event_name
LIMIT 100;
Answer:
quickplay_event_name,total_users,retained_users,retention_rate
level_reset_quickplay,507,170,33.53057199211045
level_end_quickplay,1504,618,41.090425531914896
level_start_quickplay,1787,657,36.765528819250136
level_fail_quickplay,1045,444,42.48803827751196
level_complete_quickplay,1206,550,45.605306799336645
level_retry_quickplay,554,258,46.57039711191336
Query:
SELECT
  initial_users.quickplay_event_name,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_name
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
  ON initial_users.user_pseudo_id = later_events.user_pseudo_id
 AND DATE_DIFF(PARSE_DATE('%Y%m%d', later_events.event_date), PARSE_DATE('%Y%m%d', initial_users.initial_event_date), DAY) >= 14
GROUP BY initial_users.quickplay_event_name
LIMIT 100;
Answer:
quickplay_event_name,total_users,retained_users,retention_rate
level_fail_quickplay,1045,733,70.14354066985646
level_start_quickplay,1787,1181,66.08841634023503
level_complete_quickplay,1206,902,74.7927031509121
level_retry_quickplay,554,405,73.10469314079423
level_reset_quickplay,507,305,60.15779092702169
level_end_quickplay,1504,1067,70.94414893617021
Query:
SELECT DISTINCT param.key
FROM `firebase-public-project.analytics_153293282.events_*`,
  UNNEST(event_params) AS param
WHERE event_name LIKE '%quickplay%'
  AND event_date BETWEEN '20180702' AND '20180716'
LIMIT 100
Answer:
key
firebase_screen_id
value
firebase_screen_class
board
firebase_event_origin
Query:
SELECT DISTINCT param.key
FROM `firebase-public-project.analytics_153293282.events_*`,
  UNNEST(event_params) AS param
WHERE event_name LIKE '%quickplay%'
LIMIT 100;
Answer:
key
firebase_screen_class
firebase_screen_id
board
firebase_event_origin
value
Query:
SELECT user_pseudo_id,
  MIN(event_date) AS first_quickplay_date
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY user_pseudo_id
LIMIT 100
Answer:
user_pseudo_id,first_quickplay_date
5217AB1A454DAED6243E1C9818BE6A20,20180627
E0F91AA200D6F12DBE53B0D166AFD87B,20180707
2F0F260BD7B876C346B41977D0D03D62,20180706
D1621FABED8BEBB6913F7C7456ABBDAB,20180707
8E2CA56C1FD81A095DECAEDE6F2ED626,20180622
A666FD2C8F5F662111C5ECEAF9CA6562,20180707
7566596A1D6ACA781692A7A0B89B06EF,20180613
920DB84FCC0F4421650B9E257E33180B,20180613
B1AF454DE996A302235A9C354B6E5985,20180701
5BDEA4C55EFDF16308475E1ACA152767,20180706
9A12E7E2B3CF644B8304DF8E1A9CE2D8,20180618
E512079B53179DF9A608CF4ADE47DE9D,20180618
98578513E0F25350F961CDCBA9D3656F,20180614
7548E849537562672CF9C567B9C0EC87,20180626
83FB7D43B1E7E7F56B667667163A746A,20180707
A934B78A4B0A0D85718D89303D195B2E,20180707
F0FC99F563E1247AD70240E5AA132ABF,20180620
487DE902636DD8A9844A2D61FE7BD568,20180612
1B3AD9683D475EFB398E131DFE65AE61,20180612
F5822275490E7BF0C269CAED489C8053,20180707
AAADF44F1C6A57099FEF88D15C7CF64D,20180623
1C65943AF5217570A2E4D9B58B6E6FC4,20180622
E8AA0D95D5317A98F1592D34D75A8946,20180707
32B8D06C9F7E1EA3FEEAA158A6912216,20180707
37DEF17DD3761C66B7F56806F978E726,20180625
717914316B7E4BD629C168B3A05634DC,20180625
FB149ABD1F42826AA82A9D0D3FB03342,20180625
4C984F59962433E54226AF922DAA894A,20180707
01C784BDB7AF4DC8DAD6DCD21AF56E25,20180618
ABE28FFF3F8B3F0E1AFAAEEE2FD0105C,20180707
D14F72ECEF450A96C642F9C58DEDF723,20180707
E9DCE2D958652BD58E846DCE86BDD90A,20180618
F92B2FB00F381010F8895FDFB47A8331,20180707
EEBCB25D5F056CCF59DDE654388ACD2B,20180620
E53BC2A0AD86417B443AF14EE3082C0F,20180622
38383D77F69C1CAA39B0CAC891CB0E0B,20180614
2F6043B9170F1B2C4A16A13F3D6D00EB,20180630
4295F8BC46B98B453731B1F938B75CAD,20180707
47F7713B7F3C4F3149A9200360757C6B,20180617
17636078D57884AD7EA5406C60E2BD10,20180804
43B9E5915CF39E53BAF74E0B6C201BE1,20180809
9B18A1CBA96D52D05CFA7CB7C9011EDE,20180708
41CA0FA528C7227EA1E592DCC4733C40,20180613
D30431EE9683DA4AD3EB2AE44109A735,20180814
7177907C1E492D178BAB61997705665F,20180814
64F401B4579C5F48CC8B20A65A5BF104,20180713
1A7F253A85B952C329518608DEC20138,20180613
B5F3D00E28A57C9522F2DEE3CB903DD1,20180621
5458D74B4B3B6A11DC98ABDC2F7AA0B1,20180814
0FD8410E5528FC512E551697BB8911C8,20180701
9AFF07DCC4DC8276854BC916473FEDDA,20180813
EE64062E27E239F4B809BA79E3517516,20180814
55EEC95A163C7791E528B12D5FA32CA9,20180624
DE8C865ECDECDD5CE81CB141AFD698AD,20180814
E9B766FA2D5B25A0E71F4A023F2BE733,20180807
A0903E7042C13251799B68B16FD1EBA6,20180802
Query:
SELECT user_pseudo_id,
  MIN(event_date) AS first_quickplay_date,
  ARRAY_AGG(event_name ORDER BY event_timestamp ASC LIMIT 1)[OFFSET(0)] AS quickplay_event_type
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY user_pseudo_id
LIMIT 100
Answer:
user_pseudo_id,first_quickplay_date,quickplay_event_type
102CC7D8CD5D3E861EACE1BAB97E61EC,20180614,level_start_quickplay
487DE902636DD8A9844A2D61FE7BD568,20180612,level_start_quickplay
2F0F260BD7B876C346B41977D0D03D62,20180706,level_start_quickplay
8E2CA56C1FD81A095DECAEDE6F2ED626,20180622,level_start_quickplay
3883FF0DFAB40ECD4EA781FC0D1CE18A,20180822,level_start_quickplay
9BFA45225ECA7CD4D2A9F956B875CF85,20180906,level_start_quickplay
41CA0FA528C7227EA1E592DCC4733C40,20180613,level_start_quickplay
7566596A1D6ACA781692A7A0B89B06EF,20180613,level_start_quickplay
920DB84FCC0F4421650B9E257E33180B,20180613,level_start_quickplay
31E8B3EB3D9167E813FDFB812898F2F6,20180618,level_start_quickplay
879503A3ED5F2DCB6592E99C42E1BDFE,20180901,level_start_quickplay
E512079B53179DF9A608CF4ADE47DE9D,20180618,level_start_quickplay
98578513E0F25350F961CDCBA9D3656F,20180614,level_start_quickplay
0FD8410E5528FC512E551697BB8911C8,20180701,level_start_quickplay
9CD5BB1A0B88ABE7A4EDFD5A05972F33,20180929,level_start_quickplay
1C65943AF5217570A2E4D9B58B6E6FC4,20180622,level_start_quickplay
898B790ACC7834117A9B2C98A8B6F1F5,20180618,level_start_quickplay
87B1F896770D48526901F75489E30535,20180625,level_start_quickplay
9741557300F0652C44C5E56623F922FB,20180630,level_start_quickplay
136F2C0A18FA7D6A967EEBDC2C7E3346,20180612,level_start_quickplay
FB149ABD1F42826AA82A9D0D3FB03342,20180625,level_start_quickplay
1B3AD9683D475EFB398E131DFE65AE61,20180612,level_fail_quickplay
53553A4F7A4663BA782C839944C85E68,20180625,level_start_quickplay
7944286F80A3955AF83CAB9F7C88866D,20180614,level_start_quickplay
5B333FE2BC3875C6C3882279B51B8BAF,20180827,level_start_quickplay
EEBCB25D5F056CCF59DDE654388ACD2B,20180620,level_start_quickplay
1043C28A3DC504006CC45ADE96B95A96,20180629,level_start_quickplay
28F3F06C6AEB5E82FD11BB2E723F0292,20180614,level_start_quickplay
075EBEDBF28134BE41FB4E7D943F858C,20180612,level_start_quickplay
1C107111F6722BA305BF26036F830F28,20180902,level_start_quickplay
2E232DB69EBB2EF7E68E2B0C10DBE859,20180928,level_start_quickplay
EBB30E8C806A423B024E51AC32021A6A,20180621,level_start_quickplay
EBE661044C1949546986A852F35083A1,20180629,level_start_quickplay
537BF60056C260DCA1ADB5CD1824383A,20180927,level_start_quickplay
DC400E1B157258545CB288C8CA9265AF,20180916,level_start_quickplay
2B86004D342C2EA67F3164372314F0C4,20180709,level_start_quickplay
Query:
SELECT user_pseudo_id,
  COUNT(*) AS quickplay_event_count
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY user_pseudo_id
LIMIT 100
Answer:
user_pseudo_id,quickplay_event_count
0409A1CE83D1D4DC0F01E2DFA44ED555,89
B71CB5D517BE99FEEED64A0F57842032,448
4AD68EDF4DD9C3B096154F101E4197E0,74
3D03A380687FE3369E93915D50C572CB,1191
A0E93D033E25966AB516BE78D143DE7A,112
6AC7BFEC4A74E77E7B267A984BF3F0E6,39
10B0D468B5E036E16D13DB53A65F2D49,22923
19DEEA6B15B314DB0ED2A4936959D8F9,2205
0D17D0247F158FA3E40D21EFF46D1651,5769
7EE035CA8E6132A8877C39656896BA41,565
CABE7E24215A5C36862658A36AE5CE12,6657
0545C2BABDB15C6A952ECEA222E8F5E6,24
DE39C2A4BA199C8845AC0932C2DA31BB,7
370CDFEE49990E4A9A1FBC0DC5C31C1C,2567
000F49564E9F2B85F3B1AF1A0DDCB872,4
E239BDFE3F283A559FE7DFD7B7CC853B,56
A1102C7F5C64168869AD4E83CD9EB9EB,9
A95BA9143018CA81430258E8A725C3E6,355
29BC86DCA0D500C9410F392B57C28DD3,44
A79F28462D5F839505F23758B1410DC4,53
604581EBBA6CECFC5D56550A4C8BB3A3,5
3B6AAC03208203A03577FAA6D34F5784,34
FDA4BBBCF1EA2D95CDD77BFC5F00A837,1578
F4EA0F2888792BD62555AD46ED534839,204
46940B869F002DCFDDA860189AF77F23,48
CAEEAF95F1BA12CFD6A5D3C7DB1E5EC5,1
21A8AA9B759F44F04F8BDE4AEB9CF4A9,7
06A302E3A4767793ADBC884143708660,251
D55D4E5B60368F4BE64F16EFD78B2BE7,1920
2F74E23BEA1E45E3897274EE4903DCC5,8986
8E3F5E21DBD60F1EEF4CA7BD7B36E933,11
229254D7C810F98F72C89A8060E194D4,1470
C028D1BCE3EE4626D117DF55D6A617B8,155
8DC5189969449E1BF8588B3EA64974A1,1461
C6DE585349744A40725DB0AB17041BA3,5953
B1D1ED35873581A23E48C4CD03DDFF81,355
28C4A09298C441D5AFD39E749D9F3DA3,233
A2E61D52E29C7A87CB8AD4911BC077FB,17
7386D239899D55E3D62DA619F359A7C0,978
E6850F5E0DAB3E339C6A36BDEECCA26F,445
FC55032FC8C06EB1A1220D1ABD1164C9,78
B9D8DF9BE543DEFAEDC13BF8903A859A,23
09A826527E24EFA70A0B7A8BDCD38962,28
B75F91EB6C7FDA9A329567E763CF9E44,900
F3C9D7235C2A60FBFBDE1F2EEFBA8B2B,48
B065432393D59B360BEEAB8F60E62710,3
1690882C6796582749CA6818CBF9773F,116
7E40E634997585B0C69B6F67C01C191B,313
15B80FD06C15A48A1A78E5C30FB25C94,15
343B740C7B3BD9C2CFA46BF097A8856E,1091
7F811674D65C2E02A6A705E97799E372,301
A665B189D13406F392208230C9B631CB,1
6702A2EA5F6159151ECDF9937BB44AAD,1
5B5E143556AF47EED54099306EF47CBE,14
74FEEEC5DB278BA33D32E42C5A152BC0,15
61C77E4D83006CF88B5BB443E4A7DDA2,12
77D5FF20DF909CDD790ED52FC94AF7BD,157
5162969F86FF3415BCAA129B20C94C12,13
DB9D0368B6DC1CD2E03CDDBE7060DE31,2877
82B5DB000108639FF0D38F39D7AC46FD,332
Query:
SELECT DISTINCT t1.user_pseudo_id
FROM `firebase-public-project.analytics_153293282.events_*` t1
JOIN `firebase-public-project.analytics_153293282.events_*` t2
  ON t1.user_pseudo_id = t2.user_pseudo_id
WHERE t1.event_name LIKE '%quickplay%'
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', t2.event_date), PARSE_DATE('%Y%m%d', t1.event_date), DAY) BETWEEN 14 AND 28
LIMIT 100
Answer:
user_pseudo_id
31F8F98A5B838C7375267F10DADBDA24
DA48D36D07835B1918BDF831AF83B5EF
A7FC7B2053B196DB7EA799033E01C83A
CA51DAF1373B5C2A16C174AFBD2132A4
5800569BC32997BCE5774BA3C675C4E4
5E09265F12D64B9FA85FF9427A0A7FB0
751F1516AC974AC343F62070D3BA39F5
7392DD4A7E544737A716D9CD889DF86C
BE89C8EA9D132E6BD866F4B3A8B1E384
6DC8E9960F2EAE5C05215ADFC160359C
9FE7CF3C966A5B12F0D8713907993B75
C334D1A3424934130CD61EB692EA0509
112A3AFC009A9F387BD4DECEF3D8D722
90C3670F63B20F80034121404A9DF3A0
E48A64DA907583189751D6FF988D14F6
5C5A0787542CD24F1E19F9EB778BA766
3A6E4010B115AA8EB99461DA8E9A7275
81BFFE61CAB181676917D75F1B617CB2
7410C5CC4FA11D31DB5F9B1D8ECD6BD0
33BA0F066B903D1C520E3F0D54A681A5
58E204089E7397B4B3131D7232AA58C5
EFEBD09C379F92361B37BE7389673FA5
5B763E8410411FFFEC4ADC5EEE935A84
8784FFC3E4B12459529F4E9E04E277BF
1970310126C6DC8A005D7F20B6B99FA9
5249B4686BC5038FBFE36A3E6CCA5B72
44759496F6F519B1A4BEF55BE55C631C
FFD44153572065E379B7E96916F730B8
81C75CB599BE7E11A66110C3FE9D0050
236508FFA944FF2B18FC5B27ECC9C63F
018F03084C88E944163F76A0D0C2FBA1
392D0E63B14710BD0F033A6713916FA5
1748CF87FC0F4E9B3997E2D8AEB022E9
4525693FE38C11BA8E5D0BD59256D05E
91DAE55BC5A28FE0BE68A6DF61D58A68
CCE60CE7DBE296A7828A028094E21D51
12A0B6E613AC52FAAA4EA602FAB670FE
F3C82C9DB04064BA7965BBBD95864189
9F4600B013DC8E9AB3FDF054C6464440
F3CA6D208932C0BD365FE0D589038E1C
2AF28461D35A78CEB9095B9875F5A1C9
622E890EE63F0B83C532CC052BEE8A50
14EC3B93608EFEEC1FA22D31EB995403
A6A77DA8F2C4102A83EED1D5216EB318
6B07E90CD14662B55877A7CBC80A1133
F506E5B5D610285BF94A2A917A1858D4
4BF98D09CA8359FC59ADAF56D00338F8
2CF33FDBBCE129166C717E86C6014005
1998E771F5C24E7FEA242074595E52FE
9BD56355E3D05428B3B73245830810B7
7C1E97DFFF6F56E533E6904120E530E4
93D4EE3D0C25484B69EE1820FEE7555A
4C2972AB90F34CEB9467DCFF1B0ED70F
799D5E5223988F35611AC9B641C0A4A1
53ACAE15981F1A8F9A3133340D599299
B1B04A0DC2BC6A8B7A161C1D4F00F033
B19501509EADDDB42342340A93E2BAAB
09CAEE95CE99F27D00EA630EEDBCECA2
42C4D0E04C64D55730927871C9FFEC80
D9FEC4E4418413FCE771B203FD7D48D2
DDAE3C0D9E323BD017D05496CD1C8B95
5E7FD2E063D2347A72EC52EA919B2550
440A05EBA986494BA256D2089CB1079B
7392FB7027578690D48268EE642A3895
B141B75E5E5D48DAD8298F91B94A2E07
2A7A057011B97398D224EDDAECDD3B88
5241D8D2898A6A6784C15316B501EEB0
7D4A5F559639529C01B1BBE9E1BD00E9
0F67E233B19D2898229CD156974A93AE
7842C62D45ECE888132F21C9F4417B21
F99CC3598522ABE54B9DCAC2969179CC
CC88655DF7CDE5E8225BA20B5D6EC59B
BA799687DAB1885D1D8624FD0FDB1B27
FB581F2AC74E08CD38CCAAA9A99F0217
8D5EFA15E2508685B416668530B07BA4
062EFDCE1B385D06E7F44D063AF58A83
812A0C9302E7E1A711B416C0904C99CD
ABF803076F199C505F76E3B1CD0FB4ED
AB068A15CDD59D0FC63175D661A75F6F
D031112AF5E886F8CB7B5D88C2A6EB2A
D8A4973047AF2FA8E9061F6F52E6BD61
1A2C9C653774421441B4877FC4B49D01
DF7B1F6B6AEF483760B6439EF91BC26A
252AEF85FD074278ECC2D69C593C87C9
A8DC644112858EF6E52078F7405F88FD
D62EDD239EF72D80713B3414F1A7C541
570495249052C5E40EC34A2B054DA1A1
C2B70597394F5F624D9AC65CF82BC0EA
4E0D2F7E40746B90029E4F4241F9ECA9
3A1B5A55C33A7EF1A37C909A753606B8
9ECE81C526D4A7F85115B8D9C398AFC2
B5C5E0E0C3984E096C77B2A34AEE0BA7
0175F289F0878C46DCA6B0AF3C5677F1
Query:
SELECT t2.user_pseudo_id, t2.event_name, t2.event_timestamp
FROM `firebase-public-project.analytics_153293282.events_*` t1
JOIN `firebase-public-project.analytics_153293282.events_*` t2
  ON t1.user_pseudo_id = t2.user_pseudo_id
WHERE t1.event_name LIKE '%quickplay%'
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', t2.event_date), PARSE_DATE('%Y%m%d', t1.event_date), DAY) BETWEEN 14 AND 28
LIMIT 100
Answer:
user_pseudo_id,event_name,event_timestamp
68495553C4E4675C74F6476A12E92ADB,app_remove,1535372096290000
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
102CC7D8CD5D3E861EACE1BAB97E61EC,post_score,1535417511347002
Query:
SELECT event_name AS quickplay_event_type,
  COUNT(DISTINCT user_pseudo_id) AS user_count
FROM `firebase-public-project.analytics_153293282.events_*`
WHERE event_name LIKE '%quickplay%'
GROUP BY event_name
LIMIT 100
Answer:
quickplay_event_type,user_count
level_end_quickplay,8168
level_start_quickplay,10166
level_complete_quickplay,5676
level_reset_quickplay,3517
level_fail_quickplay,6343
level_retry_quickplay,2940
Query:
SELECT t1.event_name AS quickplay_event_type,
  COUNT(DISTINCT t1.user_pseudo_id) AS retained_users
FROM `firebase-public-project.analytics_153293282.events_*` t1
JOIN `firebase-public-project.analytics_153293282.events_*` t2
  ON t1.user_pseudo_id = t2.user_pseudo_id
WHERE t1.event_name LIKE '%quickplay%'
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', t2.event_date), PARSE_DATE('%Y%m%d', t1.event_date), DAY) BETWEEN 14 AND 28
GROUP BY t1.event_name
LIMIT 100
Answer:
quickplay_event_type,retained_users
level_start_quickplay,2732
level_complete_quickplay,2127
level_end_quickplay,2468
level_fail_quickplay,1918
level_reset_quickplay,933
level_retry_quickplay,1001
Query:
SELECT initial_users.quickplay_event_type,
  COUNT(DISTINCT initial_users.user_pseudo_id) AS total_users,
  COUNT(DISTINCT later_events.user_pseudo_id) AS retained_users,
  (COUNT(DISTINCT later_events.user_pseudo_id) / COUNT(DISTINCT initial_users.user_pseudo_id)) * 100 AS retention_rate
FROM (
  SELECT user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS later_events
  ON initial_users.user_pseudo_id = later_events.user_pseudo_id
  AND DATE_DIFF(PARSE_DATE('%Y%m%d', later_events.event_date), PARSE_DATE('%Y%m%d', initial_users.initial_event_date), DAY) BETWEEN 14 AND 28
GROUP BY initial_users.quickplay_event_type
LIMIT 100
Answer:
quickplay_event_type,total_users,retained_users,retention_rate
level_end_quickplay,1504,809,53.78989361702128
level_start_quickplay,1787,878,49.13262451035255
level_fail_quickplay,1045,577,55.21531100478468
level_reset_quickplay,507,228,44.97041420118343
level_retry_quickplay,554,326,58.844765342960294
level_complete_quickplay,1206,712,59.03814262023217
End Exploring Related Columns
Task: What is the retention rate for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type?

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Quickplay_Event_Type,Retention_Rate
event_type1:str,retention_rate1:0<=float<=100
event_type2:str,retention_rate2:0<=float<=100
...
```

The table above shows the retention rates for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type. The `Quickplay_Event_Type` column lists the different types of quickplay events, and the `Retention_Rate` column provides the percentage of users (a value between 0 and 100) who returned two weeks after their initial event..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'firebase-public-project': {'analytics_153293282': ['events_20180612', 'events_20180613', 'events_20180614', 'events_20180615', 'events_20180616', 'events_20180617', 'events_20180618', 'events_20180619', 'events_20180620', 'events_20180621', 'events_20180622', 'events_20180623', 'events_20180624', 'events_20180625', 'events_20180626', 'events_20180627', 'events_20180628', 'events_20180629', 'events_20180630', 'events_20180701', 'events_20180702', 'events_20180703', 'events_20180704', 'events_20180705', 'events_20180706', 'events_20180707', 'events_20180708', 'events_20180709', 'events_20180710', 'events_20180711', 'events_20180712', 'events_20180713', 'events_20180714', 'events_20180715', 'events_20180716', 'events_20180717', 'events_20180718', 'events_20180719', 'events_20180720', 'events_20180721', 'events_20180722', 'events_20180723', 'events_20180724', 'events_20180725', 'events_20180726', 'events_20180727', 'events_20180728', 'events_20180729', 'events_20180730', 'events_20180731', 'events_20180801', 'events_20180802', 'events_20180803', 'events_20180804', 'events_20180805', 'events_20180806', 'events_20180807', 'events_20180808', 'events_20180809', 'events_20180810', 'events_20180811', 'events_20180812', 'events_20180813', 'events_20180814', 'events_20180815', 'events_20180816', 'events_20180817', 'events_20180818', 'events_20180819', 'events_20180820', 'events_20180821', 'events_20180822', 'events_20180823', 'events_20180824', 'events_20180825', 'events_20180826', 'events_20180827', 'events_20180828', 'events_20180829', 'events_20180830', 'events_20180831', 'events_20180901', 'events_20180902', 'events_20180903', 'events_20180904', 'events_20180905', 'events_20180906', 'events_20180907', 'events_20180908', 'events_20180909', 'events_20180910', 'events_20180911', 'events_20180912', 'events_20180913', 'events_20180914', 'events_20180915', 'events_20180916', 'events_20180917', 'events_20180918', 'events_20180919', 'events_20180920', 'events_20180921', 'events_20180922', 'events_20180923', 'events_20180924', 'events_20180925', 'events_20180926', 'events_20180927', 'events_20180928', 'events_20180929', 'events_20180930', 'events_20181001', 'events_20181002', 'events_20181003']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 07:36:45 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:36:45 - root - INFO - ```sql
SELECT
  initial_users.quickplay_event_type AS Quickplay_Event_Type,
  ROUND(
    COUNT(DISTINCT retained_users.user_pseudo_id) * 100.0 / COUNT(DISTINCT initial_users.user_pseudo_id),
    4
  ) AS Retention_Rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS retained_users
  ON initial_users.user_pseudo_id = retained_users.user_pseudo_id
  AND DATE_DIFF(
    PARSE_DATE('%Y%m%d', retained_users.event_date),
    PARSE_DATE('%Y%m%d', initial_users.initial_event_date),
    DAY
  ) BETWEEN 14 AND 28
GROUP BY Quickplay_Event_Type
ORDER BY Quickplay_Event_Type;
```
2025-01-25 07:36:51 - root - INFO - itercount: 1
2025-01-25 07:36:51 - root - INFO - 0
2025-01-25 07:36:51 - root - INFO - results: 
Quickplay_Event_Type,Retention_Rate
level_complete_quickplay,59.0381
level_end_quickplay,53.7899
level_fail_quickplay,55.2153
level_reset_quickplay,44.9704
level_retry_quickplay,58.8448
level_start_quickplay,49.1326


2025-01-25 07:36:51 - root - INFO - Please check the answer again by reviewing What is the retention rate for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Quickplay_Event_Type,Retention_Rate
event_type1:str,retention_rate1:0<=float<=100
event_type2:str,retention_rate2:0<=float<=100
...
```

The table above shows the retention rates for users two weeks after their initial quickplay event within the period from July 2, 2018, to July 16, 2018, calculated separately for each quickplay event type. The `Quickplay_Event_Type` column lists the different types of quickplay events, and the `Retention_Rate` column provides the percentage of users (a value between 0 and 100) who returned two weeks after their initial event. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Quickplay_Event_Type,Retention_Rate
level_complete_quickplay,59.0381
level_end_quickplay,53.7899
level_fail_quickplay,55.2153
level_reset_quickplay,44.9704
level_retry_quickplay,58.8448
level_start_quickplay,49.1326
Current sql:
SELECT
  initial_users.quickplay_event_type AS Quickplay_Event_Type,
  ROUND(
    COUNT(DISTINCT retained_users.user_pseudo_id) * 100.0 / COUNT(DISTINCT initial_users.user_pseudo_id),
    4
  ) AS Retention_Rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS retained_users
  ON initial_users.user_pseudo_id = retained_users.user_pseudo_id
  AND DATE_DIFF(
    PARSE_DATE('%Y%m%d', retained_users.event_date),
    PARSE_DATE('%Y%m%d', initial_users.initial_event_date),
    DAY
  ) BETWEEN 14 AND 28
GROUP BY Quickplay_Event_Type
ORDER BY Quickplay_Event_Type;
2025-01-25 07:37:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 07:37:12 - root - INFO - ```sql
SELECT
  initial_users.quickplay_event_type AS Quickplay_Event_Type,
  ROUND(
    COUNT(DISTINCT retained_users.user_pseudo_id) * 100.0 / COUNT(DISTINCT initial_users.user_pseudo_id),
    4
  ) AS Retention_Rate
FROM (
  SELECT
    user_pseudo_id,
    MIN(event_date) AS initial_event_date,
    event_name AS quickplay_event_type
  FROM `firebase-public-project.analytics_153293282.events_*`
  WHERE event_name LIKE '%quickplay%'
    AND event_date BETWEEN '20180702' AND '20180716'
  GROUP BY user_pseudo_id, event_name
) AS initial_users
LEFT JOIN `firebase-public-project.analytics_153293282.events_*` AS retained_users
  ON initial_users.user_pseudo_id = retained_users.user_pseudo_id
  AND DATE_DIFF(
    PARSE_DATE('%Y%m%d', retained_users.event_date),
    PARSE_DATE('%Y%m%d', initial_users.initial_event_date),
    DAY
  ) BETWEEN 14 AND 28
GROUP BY Quickplay_Event_Type
ORDER BY Quickplay_Event_Type;
```
2025-01-25 07:37:20 - root - INFO - itercount: 2
2025-01-25 07:37:20 - root - INFO - 0
2025-01-25 07:37:20 - root - INFO - Total iteration counts: 2
