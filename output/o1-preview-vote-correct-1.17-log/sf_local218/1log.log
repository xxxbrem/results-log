2025-01-18 01:29:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 01:30:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 01:30:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 8
2025-01-18 01:30:07 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:07 - root - INFO - SQL:
-- 1. List all distinct seasons
SELECT DISTINCT "season"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Results:
season
2008/2009
2010/2011
2012/2013
2014/2015
2015/2016
2009/2010
2011/2012
2013/2014

2025-01-18 01:30:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 299
2025-01-18 01:30:09 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:09 - root - INFO - SQL:
-- 2. List all distinct home team IDs
SELECT DISTINCT "home_team_api_id"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Results:
home_team_api_id
8030
2182
8245
8021
2183
2186
1601
8024
8322
8028
8023
8027
177361
9773
9809
9807
7992
10214
9771
9765
10212
4064
6367
188163
9925
9927
9800
9938
8649
8302
8305
8661
9868
8581
7869
10192
10199
6493
9931
10243
7730
7896
9768
6421
10211
10215
9764
8485
8066
8457
8284
8371
9783
8696
8558
9910
7955
8306
10191
9777
158085
10267
9956
8429
9987
10000
9984
9991
7947
9999
10001
8635
8342
9989
8475
8573
274581
10260
8472
10252
8668
8456
8650
8655
8528
8191
8658
9850
8678
9827
9746
9748
9829
8481
8689
9941
9855
9830
9847
108893
9836
4087
8576
9837
10242
8178
9912
8398
8295
9789
10269
8226
9911
9905
8406
8234
8524
8564
8686
8540
8543
8537
10167
9976
6269
9876
7943
8534
9791
6601
8593
9761
8640
10218
9985
1773
8667
8639
9853
8588
8592
9788
8165
8194
9776
8529
8690
9875
9878
208931
8525
8464
8614
8526
8611
7788
8674
8020
10265
8025
8673
8569
1957
8244
8033
8031
8019
7844
6403
7841
9772
10264
10238
2033
10213
8348
8467
8426
9869
8603
8315
8634
9864
10281
8560
8370
7878
10268
9930
7842
6547
8596
8597
8548
10251
9860
8388
9906
10205
8633
8394
8372
9824
10190
8613
8479
9867
10278
10179
9865
4049
9994
9993
8203
9996
9998
9986
9997
6351
9825
8654
8549
8559
9879
8659
8462
10194
8586
10261
8602
8483
10172
10003
9798
9826
8197
9817
8583
8682
9851
9873
9831
7819
10249
4170
8521
7794
9747
8550
8121
9823
8177
8722
9904
8350
8152
8357
8262
8530
8533
8535
9882
8636
10233
9880
9891
9803
9908
10229
10235
10217
10228
10219
6413
6631
8242
8571
8455
8466
8344
9874
10189
8721
9790
8697
8358
8460
9804
8551
9885
9857
9858
8277
9839
6433
6391
9810
8600
9888

2025-01-18 01:30:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 299
2025-01-18 01:30:11 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:11 - root - INFO - SQL:
-- 3. List all distinct away team IDs
SELECT DISTINCT "away_team_api_id"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Results:
away_team_api_id
8245
8021
2183
8322
2186
1601
2182
8024
8030
8023
8028
8027
177361
9807
7992
10215
10214
10212
9809
9771
9773
4064
188163
6367
9927
9800
9925
9938
8649
8661
8302
8305
9868
8581
7869
6493
9931
10243
10192
10199
7730
7896
6421
9768
9765
10211
9764
8066
8485
8457
8284
8558
8696
9783
8371
9910
7955
8306
10191
9777
158085
10267
9956
8429
8635
9985
8342
9999
7947
10001
9984
9987
10000
9989
8475
8573
274581
8650
8528
8456
8668
8472
8655
10260
10252
8658
8191
9850
8678
9830
8689
9941
9847
9855
9748
9827
9746
8481
108893
4087
9836
9829
8576
10242
9837
9789
8226
10269
8178
8398
9912
8295
9911
9905
8406
8234
8543
8540
8686
8564
8524
9976
10167
8537
6269
7943
9876
8534
8593
8640
9761
6601
9791
10218
9991
1773
8667
8639
8592
9853
8588
9788
8165
8194
9776
8690
9875
8529
9878
208931
8611
8526
8614
8525
8464
7788
8674
1957
8569
8025
8020
8673
10265
8244
8033
8031
8019
10238
10264
7844
10213
7841
2033
9772
6403
8348
8467
8426
8634
10281
9864
9869
8603
8315
8560
7878
8370
10268
9930
7842
8613
8548
10251
8596
8597
9860
10205
8633
9906
8388
8394
8372
9824
10190
6547
8479
9867
10278
10179
9865
9993
9994
9998
9996
9986
4049
8203
9997
6351
10261
8659
9879
8462
8654
9825
8549
8559
8586
10194
8602
8483
10003
10172
9798
9826
8197
9817
7819
9831
9873
8682
8583
9851
10249
4170
8521
7794
9747
8550
8121
9904
8722
8177
9823
8350
8152
8357
8262
10233
8636
8535
8533
8530
9882
9880
9891
10235
10217
10228
9803
9908
10229
10219
6413
6631
8242
8571
8455
8466
8344
9874
9790
8697
10189
8721
8358
8460
8551
9885
9857
9804
9858
8277
9839
6433
6391
9810
8600
9888

2025-01-18 01:30:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 01:30:13 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:13 - root - INFO - SQL:
-- 4. Retrieve home team goals for each match
SELECT "home_team_api_id", "home_team_goal"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Results:
Too long, hard cut:
home_team_api_id,home_team_goal
9987,1
10000,0
9984,0
9991,5
7947,1
8203,1
9999,2
4049,1
10001,1
8342,4
9985,1
10000,0
9994,0
7947,2
8203,1
9996,0
4049,1
9993,1
8635,2
9998,0
9986,2
9984,2
9991,1
9999,1
8571,0
10001,1
9993,1
8342,1
9987,1
10000,2
9994,1
7947,1
8203,0
9996,2
4049,3
10001,3
8635,2
9985,3
9998,1
9986,3
9984,2
9991,2
9999,2
8571,1
9993,0
8342,3
9987,3
10000,4
9991,4
7947,0
8203,0
9996,2
4049,3
10001,2
8635,5
9985,1
9998,5
9986,1
9984,3
9994,2
9999,1
8571,3
9993,3
8342,1
9987,1
10000,2
9991,1
7947,1
8203,2
9999,0
4049,2
10001,1
8635,2
9985,2
9998,2
9986,2
9984,4
9994,2
9996,5
8571,0
9993,2
9993,4
9994,2
8635,1
9998,1
9985,3
8342,3
8571,2
9996,1
9986,1
10000,3
9991,1
10001,0
9987,2
9999,3
4049,2
8203,2
9984,0
7947,0
8342,2
8635,2
9985,3
9998,3
9986,1
9994,4
9996,3
8571,2
9993,1
8571,1
9994,1
9998,1
9986,2
9996,0
10000,1
9985,3
8342,3
9993,2
7947,0
8571,0
8635,3
9987,1
9984,2
10001,1
4049,1
9991,2
9999,2
9986,0
8342,0
9993,1
8203,3
10000,1
9994,2
9998,1
9985,4
9996,0
10001,1
8635,4
9999,3
4049,0
8571,1
9984,0
7947,1
9987,1
9991,1
9996,1
8203,2
9986,3
9985,4
9994,0
8342,2
9993,3
7947,4
10000,1
9984,1
9998,0
8635,2
8571,2
9987,4
10001,0
9999,2
9991,2
9986,0
8203,2
9985,2
9993,2
9994,0
7947,1
8342,1
10000,0
9996,1
4049,1
8571,2
9986,1
9991,1
9998,0
10001,3
9999,1
9984,0
9987,3
8635,2
9994,0
9996,3
8342,2
10000,3
7947,1
4049,0
8203,1
9987,1
9985,3
8635,1
9999,1
9993,1
9985,1
8571,1
9998,0
9986,1
9984,4
9991,2
8635,4
9987,1
9984,2
9991,2
7947,1
8203,0
9999,1
4049,1
10001,1
10001,0
9996,0
8342,3
4049,3
8203,0
9987,2
7947,3
10000,5
9994,1
9993,2
9984,1
9986,1
9999,1
8635,4
9985,4
9994,3
8571,2
9998,0
4049,1
10000,0
7947,0
8203,2
9991,2
8342,2
10001,1
9987,0
9996,3
9985,2
9986,3
9996,0
8571,0
9994,0
9993,3
8635,3
9998,1
9984,2
9987,0
9991,0
10000,3
7947,1
9999,1
8203,3
8342,4
10001,1
4049,1
8342,1
9985,2
9998,1
10000,1
9986,3
9994,1
8203,0
9996,4
9993,3
8635,2
9987,0
9984,1
9991,1
7947,2
9999,0
8571,1
4049,0
10001,0
8342,2
9985,2
9998,2
10000,1
9986,1
9994,1
8203,4
9996,1
9993,2
8635,2
9987,2
9998,1
9984,4
9991,1
9999,0
8571,0
4049,2
10001,3
8342,3
9985,2
10000,4
9994,2
7947,2
8203,1
9996,2
4049,0
9993,1
8635,7
9987,0
9998,0
9986,1
9984,1
9991,3
9999,0
8571,2
10001,4
9985,2
9986,1
9984,1
9994,1
8571,0
8203,4
9999,1
8342,4
9985,1
9997,1
9986,3
8203,2
9999,3
9993,3
8342,1
8635,2
9987,1
10000,4
9994,1
8571,2
10001,2
9985,1
9997,1
9986,1
9984,1
9994,0
8203,0
9999,2
8342,1
8635,2
9987,2
10000,2
9991,0
8571,2
10001,2
9985,3
9987,0
9986,0
9984,2
9994,0
9999,2
9993,4
8342,1
8635,3
9997,1
10000,4
9991,2
8571,2
10001,1
8342,1
8635,1
9997,2
10000,1
9991,3
10001,2
9993,3
9985,2
9987,0
9986,0
9984,1
9994,0
8571,1
8203,2
8342,1
9985,0
9997,0
10000,1
9991,2
10001,0
9993,0
8635,3
9987,2
9986,2
9994,0
8571,1
8203,1
9999,1
8342,2
8635,3
9997,0
10000,2
9991,2
10001,1
9993,1
8342,2
9985,2
9997,5
10000,1
9986,3
9991,2
9993,1
8635,2
9987,0
9984,2
9994,2
8571,1
8203,1
9999,0
8342,2
9985,0
9997,2
9986,1
9991,2
9999,1
9993,1
9987,2
10000,2
9984,1
9994,1
8571,3
8203,0
10001,0
9985,3
9997,0
9986,4
9991,0
8203,1
9999,1
9993,0
8635,1
9987,1
10000,1
9984,2
9994,2
8571,2
10001,1
9985,1
9986,0
9984,4
9991,1
8203,2
9999,0
9993,1
8342,2
8635,2
9987,3
10000,1
9991,0
8571,3
10001,4
9997,1
9986,0
9984,1
9994,1
8203,1
9999,1
9993,1
8342,1
8635,2
9997,2
10000,1
9991,2
8571,3
10001,2
8635,3
9987,1
9986,1
9984,2
9994,1
8203,2
9999,1
9985,0
9987,1
9984,3
9994,0
8203,2
9999,0
9993,1
8342,2
9985,1
9997,2
10000,0
9991,4
10001,0
9993,1
8635,1
9987,1
9984,2
8571,1
8203,0
9999,1
10001,1
8342,1
9985,3
9997,2
10000,0
9986,0
9991,5
9993,2
8635,1
9987,1
9984,1
9994,1
8571,0
8203,3
10001,1
8342,3
9985,1
9997,2
9986,1
9991,1
9999,1
9993,1
8635,1
9987,1
10000,3
9984,1
9994,4
8571,0
10001,2
9997,1
8571,1
8203,2
10001,0
8635,4
9985,1
9984,1
9987,2
8342,3
9985,5
9997,1
10000,1
9994,1
8571,3
8203,2
9989,0
9991,2
9987,4
9993,1
10000,2
9986,1
6351,6
10001,1
9984,1
8635,2
9985,2
9997,3
9994,1
8571,1
8203,5
9989,0
9984,2
8342,2
9991,3
9987,1
9993,0
10000,1
9986,0
6351,2
10001,2
8635,2
9985,1
9997,0
8571,4
8203,2
9989,2
10001,1
9984,0
8342,2
9991,1
9987,3
9993,0
10000,1
9986,0
9994,3
6351,0
8342,0
9991,4
9993,0
10000,2
9986,1
9994,3
9989,1
6351,3
8635,4
9985,7
9987,1
9997,2
8571,0
8203,0
10001,1
9984,1
8342,4
9993,0
9997,1
10000,1
9986,0
9994,2
9989,2
6351,0
8635,0
9985,1
9991,2
9987,5
8571,3
8203,0
10001,1
9984,1
8342,4
9991,0
9993,0
10000,1
9986,0
9994,1
9989,1
6351,0
8342,0
9993,2
9997,0
10000,2
9994,2
8571,2
9989,1
6351,1
8635,6
9991,0
9987,1
9986,2
8203,1
6351,0
10001,1
9984,1
8342,5
9985,3
9993,0
9997,0
10000,2
9994,2
8571,0
9989,2
8635,2
9991,2
9987,3
9993,3
9986,0
6351,1
10001,3
9984,3
8342,1
9985,2
9997,1
10000,0
9994,0
8571,2
8203,0
9989,1
8635,2
9991,4
9987,1
9993,1
9986,2
6351,0
10001,2
9984,0
8342,2
8635,1
9985,0
9997,1
9994,1
8571,0
8203,3
9989,2
8342,2
9991,4
9987,1
9993,3
10000,1
9986,1
6351,0
10001,2
8635,1
9985,2
9997,1
9994,2
8571,3
8203,1
9989,1
9984,0
8342,4
9991,1
9987,0
9993,1
10000,1
9986,0
9994,1
6351,1
8635,4
9985,3
9991,2
9987,5
8571,2
8203,

2025-01-18 01:30:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 01:30:15 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:15 - root - INFO - SQL:
-- 5. Retrieve away team goals for each match
SELECT "away_team_api_id", "away_team_goal"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Results:
Too long, hard cut:
away_team_api_id,away_team_goal
9993,1
9994,0
8635,3
9998,0
9985,3
8342,1
8571,2
9996,2
9986,0
8571,1
9986,2
9991,2
9998,0
10001,2
9999,2
9984,1
9987,3
8635,3
9994,3
9996,0
8342,2
10000,0
7947,1
4049,2
8203,0
9987,0
9985,3
8635,1
9999,1
9993,2
9985,1
8571,0
9998,0
9986,1
9984,0
9991,2
10001,0
9996,1
8342,2
4049,2
8203,1
9987,3
7947,2
10000,0
9994,2
9993,0
9984,2
9986,2
9999,0
8635,2
9985,0
9994,0
8571,3
9998,1
4049,1
10000,2
7947,2
8203,2
9991,1
8342,0
10001,0
9987,1
9996,0
9985,4
9986,0
9996,1
8571,1
9994,1
9993,1
8635,3
9998,1
9984,2
9987,0
9991,1
10000,2
7947,0
9999,3
8203,2
8342,1
10001,0
4049,0
9987,1
10000,1
9984,2
9991,2
7947,2
8203,0
9999,1
4049,1
10001,2
8342,1
8635,2
9985,1
9998,0
9986,1
9994,1
9996,2
8571,1
9993,1
10000,0
9991,2
10001,0
9987,1
9999,0
4049,1
8203,1
9984,1
7947,1
8635,3
9987,2
9984,1
9991,5
7947,2
8203,1
9999,0
4049,1
10001,1
8342,2
9985,2
9998,2
10000,2
9986,2
9994,0
8203,5
9996,0
9993,2
8635,1
9987,2
9984,1
9991,3
7947,0
9999,1
8571,1
4049,0
10001,0
8342,1
9985,2
9998,2
10000,6
9986,1
9994,0
8203,2
9996,1
9993,3
8635,1
9987,1
9998,0
9984,0
9991,1
9999,1
8571,0
4049,0
10001,1
8342,3
9985,1
10000,0
9994,3
7947,3
8203,1
9996,0
4049,0
9993,0
8635,1
9987,0
9998,0
9986,0
9984,0
9991,4
9999,0
8571,0
10001,2
8342,3
9985,0
10000,0
9994,2
7947,1
8203,0
9996,1
4049,0
9993,0
8635,0
9998,2
9986,1
9984,1
9991,1
9999,1
8571,1
10001,4
9993,1
8342,0
9987,0
10000,2
9994,0
7947,2
8203,1
9996,0
4049,1
10001,0
8571,0
9994,0
9998,1
9986,0
9996,2
10000,2
9985,1
8342,4
9993,0
8635,1
9985,3
9998,2
9986,1
9984,1
9991,2
9999,1
8571,1
9993,0
8342,0
9987,2
10000,0
9991,3
7947,0
8203,1
9996,0
4049,2
10001,2
8635,1
9985,0
9998,0
9986,1
9984,1
9994,3
9999,0
8571,1
9993,1
8342,0
9987,0
10000,2
9991,2
7947,2
8203,1
9999,1
4049,1
10001,1
8635,2
9985,1
9998,0
9986,2
9984,2
9994,0
9996,1
8571,3
9993,0
7947,1
8571,0
8635,2
9987,3
9984,2
10001,1
4049,0
9991,2
9999,0
9986,0
8342,1
9993,0
8203,2
10000,0
9994,1
9998,0
9985,1
9996,0
10001,0
8635,1
9999,0
4049,0
8571,2
9984,1
7947,1
9987,2
9991,2
9996,1
8203,1
9986,1
9985,1
9994,1
8342,1
9993,0
7947,1
10000,2
9984,1
9998,1
8635,0
8571,0
9987,4
10001,3
9999,0
9991,1
9986,2
8203,1
9985,0
9993,0
9994,1
7947,2
8342,0
10000,3
9996,2
4049,1
9997,2
8342,2
9991,3
10000,1
8635,2
10001,1
9993,1
8635,2
9987,0
10000,2
8571,3
9994,0
9984,2
10001,1
9991,0
9986,0
8203,2
9993,0
9984,1
9999,0
9985,0
10000,1
9991,2
10001,1
8571,1
9987,2
8635,2
8342,3
9997,0
9994,0
9984,0
9986,2
9993,1
8203,0
9999,2
8342,1
8635,2
9991,2
10001,1
8571,0
10000,0
9997,1
9993,2
9999,1
9984,1
8203,1
9985,1
9987,1
9994,0
9986,0
8571,0
9985,0
9994,0
9984,1
8203,0
9999,0
9993,2
10001,0
9997,0
8635,3
8342,1
10000,0
9991,5
8203,1
9999,1
8571,2
9984,0
9987,1
8635,2
9986,0
8342,2
10000,2
9985,3
9991,1
10001,1
9993,0
9997,2
9994,0
9984,2
9986,0
9987,2
8203,1
8571,1
9985,1
9984,1
9994,0
8203,2
10001,0
9999,0
8635,2
9987,0
10000,1
9997,0
9985,0
9993,0
8342,4
9986,0
9991,4
10001,1
8635,4
9994,1
9987,3
8571,2
8203,2
9984,4
8342,0
9997,0
9986,0
9999,4
9993,0
9985,0
9991,0
8571,1
10001,1
9994,1
10000,2
9984,2
9987,1
8635,5
9997,2
9985,0
8342,1
9999,0
8203,1
9986,1
9993,1
10001,0
8635,2
9994,0
8342,1
9987,1
8571,2
10000,1
9985,1
8203,0
9994,1
9999,1
9997,1
9984,1
9986,0
8342,1
10000,0
9987,0
10001,0
8571,1
8635,2
9991,1
9999,0
9987,0
9993,0
9985,1
9986,1
9994,1
9984,1
10001,0
9991,1
9993,0
10000,2
9997,2
8342,1
9985,5
9991,2
8571,1
9997,1
8635,4
10000,1
10001,0
8342,4
8571,2
9986,1
9999,1
8635,2
9994,1
9987,1
8203,3
9985,1
9993,1
8342,3
9991,0
9997,2
9986,3
10000,2
9987,1
8203,0
8635,1
8571,2
9984,4
9999,1
9994,1
9991,1
9986,2
9993,2
9985,3
9997,1
9999,2
8342,4
10000,1
9984,1
9987,4
8203,2
10001,2
9994,2
8571,0
9993,0
9999,1
9991,1
8203,0
9986,1
9985,2
9997,0
9989,0
8342,0
9994,0
9991,1
6351,1
10000,1
9986,1
9993,1
9991,2
8635,1
10001,2
9986,1
9993,0
6351,1
9987,2
9984,1
8571,0
9985,2
9989,1
8342,3
9994,2
9997,0
8203,1
8635,0
10001,0
9991,1
9986,2
8342,0
9987,0
9993,1
10000,0
6351,1
9985,2
8203,1
8635,2
9997,0
9994,1
8571,0
9989,2
9984,1
8342,2
6351,3
10000,3
9993,0
9986,0
9994,2
9987,1
9991,1
9989,0
8635,2
9984,0
9985,1
8571,1
10001,1
9997,0
8203,1
9984,1
10001,4
8635,1
9985,0
9987,3
8203,1
9997,2
8571,1
9986,1
9989,0
9991,2
8342,1
9994,0
10000,0
6351,1
9993,1
10001,3
9987,1
8571,0
8635,2
9984,3
9985,1
8203,1
9991,3
9994,0
9997,0
9986,1
6351,1
9989,1
8342,1
9993,1
10000,3
9997,1
9987,4
9984,0
8203,2
8635,0
8571,1
9985,4
10001,1
8635,2
9991,2
8203,1
10001,0
9984,1
9985,1
9987,1
9986,0
9989,0
8342,2
9997,1
9993,0
8571,0
10000,2
9994,2
9985,0
9986,0
8203,0
6351,0
9984,3
9991,2
9987,2
8635,2
10001,1
9985,0
9994,1
8571,2
10000,0
8203,0
8342,4
9997,0
9989,0
9993,0
10001,1
9991,1
9987,1
6351,2
9984,1
8635,0
9986,0
9997,0
9989,1
8342,0
9994,1
10000,0
9985,1
8571,1
8203,1
10000,0
9984,0
9987,2
6351,1
9986,1
9991,1
10001,1
9993,2
9994,1
9985,1
8203,0
8571,1
9989,1
9997,0
9984,0
8635,0
9987,1
8342,2
9993,0
10000,1
9986,0
9991,1
6351,1
10001,1
8571,1
9984,0
10001,2
8203,1
9997,2
9985,2
9989,1
8635,1
9993,0
9994,3
6351,1
9986,0
9997,0
9989,

2025-01-18 01:30:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 299
2025-01-18 01:30:17 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:17 - root - INFO - SQL:
-- 6. Calculate total home goals for each team across all seasons
SELECT "home_team_api_id", SUM("home_team_goal") AS "total_home_goals"
FROM EU_SOCcer.EU_SOCcer.MATCH
GROUP BY "home_team_api_id"
LIMIT 1000
Results:
home_team_api_id,total_home_goals
9987,205
10000,176
9984,119
9991,213
7947,21
9999,36
10001,124
8342,235
8635,247
9985,199
9989,69
1773,74
8475,50
8573,62
274581,41
8472,184
10252,179
8667,79
8650,294
10260,338
8456,365
8191,39
9850,96
8678,23
9746,17
9748,289
9829,153
8481,103
8592,254
9853,223
9941,194
108893,14
9836,23
4087,105
8588,61
10242,38
8295,18
9911,41
9789,298
9905,171
8524,170
8564,271
8686,299
8543,239
9976,42
208931,23
8674,225
8640,370
7788,67
2186,144
8245,149
8668,258
8655,98
8528,106
8658,38
9827,228
8689,214
9855,33
9830,79
9847,332
8576,64
8639,270
9837,98
8178,270
9912,16
8398,19
8165,108
9788,242
8194,24
9776,18
8234,22
8690,23
8540,225
9875,303
8537,42
6269,19
9876,83
7943,73
8534,48
8525,140
8464,174
9791,235
8614,44
8593,360
9761,170
8611,289
6601,27
2182,215
8322,52
1601,148
2183,96
8024,77
10269,219
8226,222
8406,112
8529,181
10167,151
9878,15
8526,81
10218,90
8028,115
8030,155
8021,116
8023,85
8027,43
177361,21
9773,295
9768,224
6421,35
9809,37
9807,83
7992,14
10214,187
10212,171
10215,136
9771,45
10211,51
9765,18
4064,13
9764,61
158085,56
6367,19
188163,15
8485,186
9925,389
8429,100
9938,232
8066,177
9927,228
9800,137
8457,22
8649,97
8284,72
10267,299
8371,137
9783,144
8696,81
8558,205
8302,285
8305,202
9868,20
8581,145
8661,147
9910,105
7869,12
8306,25
9956,234
10192,319
10199,239
7955,106
6493,74
9931,344
10243,241
9777,41
7896,25
10191,175
7730,52
8203,162
4049,22
9994,149
9996,28
9993,112
9998,76
8571,163
9986,113
9997,70
9825,306
8654,195
8559,104
8455,333
9879,173
8586,255
8549,17
8602,62
10003,135
9798,23
8466,134
9826,58
8344,20
8682,40
9851,205
9873,162
9831,198
7819,109
4170,19
8521,60
9874,144
10249,193
7794,101
8550,26
8121,20
10189,252
9810,176
9790,178
8697,230
8177,119
8358,133
8262,15
8533,144
8600,236
9888,68
8636,280
9803,192
9908,245
10235,291
6433,41
10265,168
8025,176
8244,27
1957,176
6351,15
10194,204
10261,199
8659,177
8462,50
8483,30
10172,60
8197,63
9817,20
8583,98
9747,75
6391,23
8722,116
9904,218
8350,37
8357,10
8530,155
8535,246
9882,190
9804,125
8551,75
9885,307
9880,51
9858,22
9891,18
10217,204
10228,267
10219,92
9839,101
6413,124
6631,15
8673,240
8569,114
8031,55
8020,149
9823,382
8721,274
8152,21
8460,21
9857,155
10233,249
8277,234
8242,29
10229,279
8033,85
8019,43
7844,156
6403,166
10213,16
7841,131
9772,321
10264,239
2033,70
10238,135
8348,53
7842,96
6547,17
8596,36
9860,189
8597,188
8548,177
10251,136
8467,167
8426,74
8388,23
9869,119
8603,116
8315,250
9906,321
10205,218
8633,505
8634,495
9865,121
10281,94
8479,17
8394,95
9867,26
10278,27
8560,186
9864,222
8370,139
7878,100
10268,32
8372,46
9930,89
9824,53
10190,153
8613,30
10179,220

2025-01-18 01:30:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 299
2025-01-18 01:30:18 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:19 - root - INFO - SQL:
-- 7. Calculate total away goals for each team across all seasons
SELECT "away_team_api_id", SUM("away_team_goal") AS "total_away_goals"
FROM EU_SOCcer.EU_SOCcer.MATCH
GROUP BY "away_team_api_id"
LIMIT 1000
Results:
away_team_api_id,total_away_goals
8635,180
9985,142
8342,186
10001,93
9999,26
9984,94
9987,143
10000,130
7947,23
9991,177
9989,44
1773,52
8475,55
8573,40
274581,30
8650,237
8667,65
10252,156
8456,241
8472,149
10260,244
8191,31
9850,64
8678,22
9830,56
9941,145
9847,236
8592,208
9748,208
8481,100
108893,7
4087,75
9836,15
9829,134
8588,46
10242,33
9789,253
9911,31
8295,12
9905,149
8543,178
8686,231
8564,225
8524,113
9976,34
208931,14
8674,165
8640,282
7788,52
2186,91
8245,88
8528,94
8655,77
8668,181
8658,37
8689,164
8639,180
9855,22
9853,148
9827,176
9746,13
8576,52
9837,70
9788,161
9912,13
8165,85
8178,213
8398,11
8194,15
9776,11
8234,11
8690,7
9875,211
8537,24
6269,15
7943,68
9876,62
8540,126
8534,38
8611,220
8593,287
9761,124
8614,32
9791,168
8525,82
8464,136
6601,11
1601,132
2183,88
8322,25
2182,157
8024,45
8226,178
10269,196
8406,89
8529,128
10167,121
9878,12
8526,49
10218,64
8030,124
8028,89
8021,91
8023,67
8027,32
177361,12
9807,65
7992,11
10215,104
10214,145
9809,34
6421,20
9768,187
9773,246
9771,40
9765,11
10211,42
10212,145
4064,14
9764,49
158085,45
188163,19
6367,8
9927,175
8066,168
9800,120
9938,206
8485,179
8429,85
9925,306
8457,18
8284,55
8649,95
8661,91
8302,193
8305,143
8558,133
10267,185
9783,97
9868,18
8581,96
8696,79
8371,95
9910,79
7869,10
8306,20
6493,54
9931,275
10243,227
9956,195
10192,210
10199,182
7955,65
7730,47
7896,21
10191,104
9777,36
9993,62
9994,130
9998,53
8571,104
9996,14
9986,88
4049,13
8203,123
9997,45
8586,226
9879,92
8462,22
8654,131
9825,267
8559,77
8549,11
8602,56
10003,98
8466,82
9798,20
8344,12
9826,61
7819,111
9831,144
9873,94
9874,102
9851,162
4170,12
8521,39
8682,39
10249,151
7794,64
8550,5
8121,20
9790,166
8177,119
8697,193
10189,174
9810,120
8358,112
8262,23
8636,216
9888,53
8533,141
8600,179
10235,198
9803,151
9908,163
6433,33
1957,111
8244,23
10265,164
8025,142
6351,13
10261,125
8659,128
10194,118
8455,250
8483,25
10172,55
8197,51
9817,20
8583,70
9747,47
6391,14
9904,141
8722,110
8350,35
8357,16
8551,74
9885,236
8535,194
9804,116
8530,96
9882,128
9880,47
9858,12
9891,17
10217,162
10228,203
9839,51
10219,61
6413,80
6631,9
8031,33
8569,76
8673,169
8020,96
9823,271
8721,189
8152,14
8460,10
10233,143
9857,108
8277,189
8242,21
10229,213
8033,84
8019,18
10264,159
9772,247
7844,144
10213,10
7841,117
2033,68
10238,103
6403,126
8348,48
7842,71
6547,12
8548,147
10251,123
8596,32
8597,158
9860,128
8467,141
8426,61
10205,146
8633,338
8634,354
8479,17
10281,76
9865,81
9864,155
9869,81
8603,109
9906,203
8315,165
8388,15
9867,14
8394,64
10278,9
8560,130
7878,79
8370,108
10268,33
8372,37
9824,47
9930,64
10190,123
8613,21
10179,151

2025-01-18 01:30:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:20 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 01:30:41 - root - INFO - The error you're encountering is because the placeholder `team_id_value` in your SQL query hasn't been replaced with an actual team ID. The SQL compiler doesn't recognize `team_id_value` as a valid identifier because it's not defined in your database.

**Error Message Explanation:**

```
SQL compilation error: error line 3 at position 27
invalid identifier 'TEAM_ID_VALUE'
```

**Solution:**

To fix the error, you need to replace `team_id_value` with an actual numerical value corresponding to a team in your database. Here’s how you can proceed:

1. **Find a Valid Team ID:**

   If you don't have a specific team ID in mind, you can retrieve a list of available team IDs from the `MATCH` table:

   ```sql
   SELECT DISTINCT "home_team_api_id" AS "team_api_id"
   FROM EU_SOCCER.EU_SOCCER.MATCH
   UNION
   SELECT DISTINCT "away_team_api_id" AS "team_api_id"
   FROM EU_SOCCER.EU_SOCCER.MATCH
   LIMIT 1000;
   ```

   Alternatively, to get team names along with their IDs, join the `TEAM` table:

   ```sql
   SELECT DISTINCT t."team_api_id", t."team_long_name"
   FROM EU_SOCCER.EU_SOCCER.TEAM t
   JOIN EU_SOCCER.EU_SOCCER.MATCH m
     ON t."team_api_id" = m."home_team_api_id" OR t."team_api_id" = m."away_team_api_id"
   LIMIT 1000;
   ```

2. **Replace Placeholder with Actual Team ID:**

   Once you have a valid team ID, replace `team_id_value` in your query. For example, if the team ID is **9987**, your query becomes:

   ```sql
   SELECT *
   FROM EU_SOCCER.EU_SOCCER.MATCH
   WHERE "home_team_api_id" = 9987 OR "away_team_api_id" = 9987
   LIMIT 1000;
   ```

3. **Execute the Corrected Query:**

   Run the modified query to retrieve matches involving the specified team.

**Summary:**

- Replace `team_id_value` with an actual numerical team ID.
- Ensure all identifiers and strings are correctly quoted.
- Verify that the team ID exists in your database.

**Example:**

Assuming we want matches involving the team with `team_api_id` **8635**, the query would be:

```sql
SELECT *
FROM EU_SOCCER.EU_SOCCER.MATCH
WHERE "home_team_api_id" = 8635 OR "away_team_api_id" = 8635
LIMIT 1000;
```

**Note:** Always ensure that the team ID you use exists in both the `TEAM` and `MATCH` tables to retrieve meaningful results.
2025-01-18 01:30:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 299
2025-01-18 01:30:43 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:43 - root - INFO - SQL:
SELECT DISTINCT t."team_api_id", t."team_long_name"
   FROM EU_SOCCER.EU_SOCCER.TEAM t
   JOIN EU_SOCCER.EU_SOCCER.MATCH m
     ON t."team_api_id" = m."home_team_api_id" OR t."team_api_id" = m."away_team_api_id"
   LIMIT 1000;
Results:
Too long, hard cut:
team_api_id,team_long_name
9987,KRC Genk
9993,Beerschot AC
9994,Sporting Lokeren
8203,KV Mechelen
8342,Club Brugge KV
9999,KSV Roeselare
10001,KVC Westerlo
9989,Lierse SK
1773,Oud-Heverlee Leuven
8472,Sunderland
8456,Manchester City
8655,Blackburn Rovers
8462,Portsmouth
8602,Wolverhampton Wanderers
10003,Swansea City
8197,Leicester City
8583,AJ Auxerre
8682,Le Mans FC
8592,Olympique de Marseille
9855,Grenoble Foot 38
10249,Montpellier Hérault SC
4170,US Boulogne Cote D'Opale
9836,Dijon FCO
7947,FCV Dender EH
9798,Reading
8344,Cardiff City
9847,Paris Saint-Germain
8639,LOSC Lille
9830,FC Nantes
8588,RC Lens
8550,FC Metz
8721,VfL Wolfsburg
9810,Eintracht Frankfurt
8398,FC Energie Cottbus
10269,VfB Stuttgart
9911,VfL Bochum
9776,Eintracht Braunschweig
9857,Bologna
9976,Bari
8525,Willem II
9791,Heracles Almelo
10228,SC Heerenveen
6601,FC Volendam
9804,Torino
6269,Novara
10219,RKC Waalwijk
9839,VVV-Venlo
10218,Excelsior
10265,Wisła Kraków
8028,Piast Gliwice
8021,Zagłębie Lubin
8024,Widzew Łódź
8559,Bolton Wanderers
8466,Southampton
9984,KSV Cercle Brugge
10261,Newcastle United
8528,Wigan Athletic
8586,Tottenham Hotspur
8483,Blackpool
9748,Olympique Lyonnais
9873,Valenciennes FC
8571,KV Kortrijk
8121,Angers SCO
9904,Hannover 96
8722,1. FC Köln
8697,SV Werder Bremen
8358,SC Freiburg
8165,1. FC Nürnberg
9905,1. FSV Mainz 05
8152,FC St. Pauli
8262,SV Darmstadt 98
8529,Cagliari
10233,Genoa
9885,Juventus
8686,Roma
10167,Parma
8534,Empoli
9891,Frosinone
208931,Carpi
8464,N.E.C.
10235,Feyenoord
8234,FC Ingolstadt 04
9880,Cesena
8640,PSV
1601,Ruch Chorzów
8242,Odra Wodzisław
8569,GKS Bełchatów
2183,P. Warszawa
8226,TSG 1899 Hoffenheim
8295,Karlsruher SC
8350,1. FC Kaiserslautern
9875,Napoli
8674,FC Groningen
9803,Roda JC Kerkrade
8593,Ajax
10217,ADO Den Haag
10229,AZ
8031,Polonia Bytom
8020,Polonia Bytom
8673,Legia Warszawa
8030,Lechia Gdańsk
8033,Podbeskidzie Bielsko-Biała
8023,Pogoń Szczecin
6403,FC Paços de Ferreira
10213,Amadora
9772,SL Benfica
10214,CD Nacional
10212,CS Marítimo
10238,Vitória Setúbal
7842,Estoril Praia
158085,FC Arouca
8597,Kilmarnock
9800,St. Mirren
8467,St. Johnstone FC
8457,Dunfermline Athletic
8634,FC Barcelona
9865,UD Almería
9906,Atlético Madrid
9868,Xerez Club Deportivo
9768,Sporting CP
4064,Feirense
6547,FC Penafiel
8613,Boavista FC
8596,Falkirk
9938,Dundee United
9860,Heart of Midlothian
8284,Dundee FC
8661,RCD Mallorca
8305,Getafe CF
8479,RC Recreativo
8558,RCD Espanyol
8315,Athletic Club de Bilbao
2033,S.C. Olhanense
188163,Tondela
10205,Villarreal CF
8302,Sevilla FC
7878,Granada CF
8372,SD Eibar
9956,Grasshopper Club Zürich
9931,FC Basel
10179,FC Sion
7955,Neuchâtel Xamax
10199,FC Luzern
10191,FC Thun
9777,Servette FC
177361,Termalica Bruk-Bet Nieciecza
8394,Real Zaragoza
8306,UD Las Palmas
7730,FC Lausanne-Sports
10000,SV Zulte-Waregem
8635,RSC Anderlecht
9991,KAA Gent
9998,RAEC Mons
9985,Standard de Liège
9996,Royal Excel Mouscron
4049,Tubize
8475,Waasland-Beveren
8573,KV Oostende
8654,West Ham United
10252,Aston Villa
8668,Everton
9879,Fulham
8667,Hull City
8659,West Bromwich Albion
9850,Norwich City
7819,SM Caen
9827,Girondins de Bordeaux
8689,FC Lorient
274581,Royal Excel Mouscron
10194,Stoke City
9825,Arsenal
9826,Crystal Palace
9817,Watford
9831,OGC Nice
8481,AS Nancy-Lorraine
9851,Stade Rennais FC
108893,AC Arles-Avignon
4087,Évian Thonon Gaillard FC
8576,AC Ajaccio
9837,Stade de Reims
7794,SC Bastia
8177,Hertha BSC Berlin
9912,DSC Arminia Bielefeld
9788,Borussia Mönchengladbach
8406,FC Augsburg
8524,Atalanta
8543,Lazio
8636,Inter
8540,Palermo
7943,Sassuolo
8277,Vitesse
9908,FC Utrecht
6433,Go Ahead Eagles
6631,FC Dordrecht
1957,Jagiellonia Białystok
10260,Manchester United
8650,Liverpool
8549,Middlesbrough
8678,Bournemouth
9997,Sint-Truidense VV
8455,Chelsea
8658,Birmingham City
8191,Burnley
10172,Queens Park Rangers
9853,AS Saint-Étienne
8521,Stade Brestois 29
9986,Sporting Charleroi
9829,AS Monaco
9874,FC Sochaux-Montbéliard
6351,KAS Eupen
10242,ES Troyes AC
9747,En Avant de Guingamp
6391,GFC Ajaccio
9790,Hamburger SV
9823,FC Bayern Munich
8178,Bayer 04 Leverkusen
8357,SpVgg Greuther Fürth
8460,SC Paderborn 07
8551,Siena
8530,Catania
8533,Chievo Verona
9888,Lecce
9858,Brescia
9878,Pescara
9761,NAC Breda
10189,FC Schalke 04
8600,Udinese
8611,FC Twente
8526,De Graafschap
6413,PEC Zwolle
7788,SC Cambuur
8025,Śląsk Wrocław
8322,Arka Gdynia
8245,Korona Kielce
9746,Le Havre AC
9941,Toulouse FC
9789,Borussia Dortmund
8194,Fortuna Düsseldorf
8690,Reggio Calabria
8535,Fiorentina
8564,Milan
9882,Sampdoria
8537,Livorno
8614,Sparta Rotterdam
9876,Hellas Verona
2182,Lech Poznań
2186,Cracovia
8244,Widzew Łódź
8019,Górnik Łęczna
9807,CF Os Belenenses
7992,Trofense
7841,Rio Ave FC
9771,"União de Leiria, SAD"
9765,Portimonense
9764,Gil Vicente FC
8348,Moreirense FC
6367,Uniao da Madeira
8548,Rangers
8371,CA Osasuna
8388,CD Numancia
9869,Real Sporting de Gijón
10278,Hércules Club de Fútbol
8027,Zawisza Bydgoszcz
9773,FC Porto
10264,SC Braga
10215,Académica de Coimbra
6421,Leixões SC
9809,Naval 

2025-01-18 01:30:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 01:30:44 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:45 - root - INFO - SQL:
-- 9. Calculate total goals per team per season
SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
FROM (
  SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
  FROM EU_SOCcer.EU_SOCcer.MATCH
  UNION ALL
  SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
  FROM EU_SOCcer.EU_SOCcer.MATCH
) AS "team_goals"
GROUP BY "season", "team_api_id"
LIMIT 1000
Results:
Too long, hard cut:
season,team_api_id,season_goals
2010/2011,8030,37
2010/2011,2182,37
2010/2011,8020,36
2010/2011,8245,34
2011/2012,2186,20
2011/2012,2183,33
2011/2012,1601,44
2011/2012,8024,25
2011/2012,10265,29
2010/2011,2183,41
2011/2012,8569,34
2011/2012,8020,36
2012/2013,1957,31
2012/2013,2182,46
2012/2013,8569,24
2012/2013,8033,39
2012/2013,1601,35
2013/2014,8673,60
2013/2014,10265,38
2013/2014,8020,42
2013/2014,8024,26
2013/2014,1601,40
2014/2015,8673,57
2014/2015,1957,43
2014/2015,8027,32
2014/2015,8025,43
2014/2015,8033,40
2014/2015,8569,24
2014/2015,8245,34
2014/2015,8030,36
2015/2016,2182,37
2015/2016,8021,41
2015/2016,8673,58
2008/2009,9773,61
2008/2009,7844,32
2008/2009,7992,25
2009/2010,10238,29
2009/2010,6421,25
2009/2010,6403,32
2008/2009,10214,47
2008/2009,10215,28
2009/2010,10264,48
2009/2010,10212,42
2009/2010,7841,22
2010/2011,10264,45
2010/2011,10215,32
2010/2011,7844,36
2011/2012,10215,27
2011/2012,9773,69
2012/2013,6403,42
2012/2013,9773,70
2013/2014,9764,23
2014/2015,7842,38
2015/2016,10214,40
2008/2009,9860,40
2011/2012,10251,40
2011/2012,9927,49
2014/2015,8284,46
2009/2010,9867,40
2009/2010,8305,58
2010/2011,8315,59
2013/2014,8558,41
2014/2015,9824,28
2015/2016,10243,48
2010/2011,8569,31
2011/2012,8244,23
2012/2013,8028,41
2013/2014,8245,36
2013/2014,8027,43
2013/2014,8025,38
2014/2015,1601,33
2015/2016,8030,45
2015/2016,1601,37
2015/2016,8023,36
2015/2016,8033,37
2009/2010,9772,78
2009/2010,9807,23
2010/2011,9772,61
2010/2011,2033,24
2010/2011,9771,25
2015/2016,8028,49
2015/2016,8019,30
2015/2016,2186,57
2008/2009,9809,25
2009/2010,9771,35
2009/2010,9809,20
2009/2010,10215,37
2011/2012,4064,27
2011/2012,10212,41
2011/2012,9764,31
2011/2012,7844,40
2011/2012,2033,36
2011/2012,9772,66
2012/2013,9772,77
2012/2013,8348,30
2013/2014,9807,19
2013/2014,7842,42
2013/2014,10212,40
2013/2014,7841,21
2013/2014,158085,28
2013/2014,10264,39
2014/2015,10215,26
2014/2015,9772,86
2014/2015,10264,55
2014/2015,9773,74
2014/2015,10214,45
2014/2015,7844,50
2015/2016,8348,38
2015/2016,188163,34
2015/2016,10215,32
2015/2016,8613,24
2015/2016,7841,44
2008/2009,9925,80
2008/2009,8066,37
2008/2009,8548,77
2008/2009,9927,46
2009/2010,9938,55
2009/2010,8485,36
2009/2010,9800,36
2009/2010,9927,52
2010/2011,9927,40
2011/2012,9860,45
2010/2011,10251,39
2010/2011,8597,53
2011/2012,8485,36
2012/2013,9938,51
2012/2013,8284,28
2013/2014,8485,53
2013/2014,9925,102
2013/2014,9927,64
2014/2015,8429,50
2014/2015,8649,46
2015/2016,8066,54
2015/2016,8597,41
2015/2016,8467,58
2008/2009,9783,48
2008/2009,8696,49
2008/2009,8634,105
2008/2009,10281,46
2009/2010,8633,102
2009/2010,8315,50
2009/2010,8371,37
2009/2010,9869,36
2010/2011,9906,62
2010/2011,10278,36
2010/2011,8696,41
2010/2011,8558,46
2010/2011,8560,49
2010/2011,10267,64
2011/2012,8633,121
2011/2012,9864,54
2011/2012,8581,54
2011/2012,8305,40
2012/2013,8305,43
2012/2013,8558,43
2013/2014,8634,100
2013/2014,8581,35
2013/2014,8315,66
2014/2015,8634,110
2014/2015,7869,22
2009/2010,10179,63
2010/2011,10192,65
2011/2012,10179,40
2011/2012,10192,52
2011/2012,9931,78
2012/2013,9931,61
2013/2014,7730,38
2014/2015,10179,47
2013/2014,8028,29
2014/2015,8028,38
2010/2011,10214,28
2012/2013,7841,35
2012/2013,10214,45
2012/2013,9764,31
2012/2013,10215,33
2012/2013,7842,47
2013/2014,9773,57
2014/2015,7841,38
2014/2015,9807,34
2015/2016,6403,43
2015/2016,158085,47
2015/2016,9768,79
2008/2009,8597,38
2008/2009,9800,33
2009/2010,8548,82
2009/2010,8597,29
2010/2011,8485,39
2010/2011,9860,53
2010/2011,8066,52
2011/2012,9938,62
2011/2012,8467,43
2010/2011,9925,85
2012/2013,8467,45
2013/2014,8426,46
2013/2014,8467,48
2013/2014,10251,31
2013/2014,9938,65
2014/2015,9925,84
2014/2015,9800,30
2014/2015,8426,48
2014/2015,8597,44
2015/2016,9938,45
2008/2009,10267,68
2008/2009,8388,38
2008/2009,8603,51
2008/2009,9906,80
2008/2009,8302,54
2008/2009,8633,83
2008/2009,9865,45
2008/2009,9864,55
2009/2010,8661,59
2009/2010,10267,59
2009/2010,9864,42
2009/2010,9906,57
2009/2010,10205,58
2010/2011,8394,40
2010/2011,8305,49
2008/2009,8315,47
2011/2012,8560,46
2011/2012,8603,47
2011/2012,8394,36
2011/2012,10267,59
2011/2012,8634,114
2012/2013,8633,103
2012/2013,8302,58
2012/2013,9910,37
2012/2013,8560,70
2012/2013,8371,33
2012/2013,10267,67
2012/2013,8603,57
2013/2014,9865,43
2013/2014,8560,62
2013/2014,8302,69
2013/2014,10205,60
2013/2014,9906,77
2013/2014,9864,39
2014/2015,8302,71
2014/2015,8581,34
2014/2015,7878,29
2014/2015,9783,35
2014/2015,10205,48
2014/2015,8315,42
2014/2015,10267,70
2015/2016,9906,63
2015/2016,8315,58
2015/2016,7878,46
2015/2016,8370,52
2015/2016,8560,45
2015/2016,10267,46
2015/2016,8634,112
2008/2009,9956,57
2008/2009,10192,85
2008/2009,9931,72
2008/2009,9824,28
2009/2010,10243,55
2009/2010,9931,90
2010/2011,6493,42
2010/2011,10190,34
2011/2012,9956,32
2011/2012,10243,43
2011/2012,10199,46
2012/2013,10191,44
2012/2013,10190,54
2012/2013,10243,62
2012/2013,10192,48
2013/2014,10199,48
2013/2014,10190,37
2013/2014,9956,67
2013/2014,9930,55
2013/2014,10179,38
2014/2015,9930,31
2014/2015,10243,55
2

2025-01-18 01:30:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:30:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:30:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:30:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 299
2025-01-18 01:30:46 - snowflake.connector.connection - INFO - closed
2025-01-18 01:30:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:30:47 - root - INFO - SQL:
-- 10. Find the highest season goals for each team
SELECT "team_api_id", MAX("season_goals") AS "highest_season_goals"
FROM (
  SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
  FROM (
    SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
    FROM EU_SOCcer.EU_SOCcer.MATCH
    UNION ALL
    SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
    FROM EU_SOCcer.EU_SOCcer.MATCH
  ) AS "team_goals"
  GROUP BY "season", "team_api_id"
) AS "season_totals"
GROUP BY "team_api_id"
LIMIT 1000
Results:
team_api_id,highest_season_goals
8030,45
2182,56
8245,36
2186,57
2183,45
1601,44
8027,43
8021,41
9773,74
7992,25
10214,48
10215,37
10212,46
9764,31
9927,67
8284,53
8023,47
9809,26
4064,27
158085,47
9925,102
8066,64
8429,50
9783,48
8696,49
10192,85
7730,38
9768,79
9984,48
9985,66
8472,48
8689,57
8024,41
6421,30
10243,80
9807,44
9771,35
188163,34
8485,62
8649,55
9931,90
8661,59
10199,66
9999,33
9850,52
10260,89
9847,102
8592,76
8529,56
6269,34
10267,70
9956,67
9989,30
10001,42
8588,40
9789,82
8165,47
8537,39
10218,47
8524,45
8558,47
9938,65
8371,45
9910,51
10252,54
9788,67
8028,49
7869,22
8302,71
9987,64
9991,67
274581,39
8528,47
8678,45
9941,49
9830,40
9827,64
8639,72
4087,54
9837,47
8178,65
9911,39
8406,47
9875,80
10269,63
9800,47
8581,54
6493,44
10191,57
10000,55
8342,69
8573,55
8475,40
8658,38
9829,63
8481,46
9836,38
9748,72
9912,29
8226,72
9905,52
9876,62
8564,72
8534,46
8614,46
8593,106
8674,65
8640,103
9761,45
8525,46
8526,39
8690,30
8635,75
8191,42
8543,67
8295,30
8305,58
1773,46
8655,48
8576,40
8668,61
8456,102
8667,39
8650,101
9853,60
10242,43
8611,82
7788,46
8234,33
8540,59
8686,83
9791,65
10167,58
8322,28
9765,29
10211,35
9868,38
177361,33
8306,45
7896,46
7955,55
9777,45
6367,27
8457,40
108893,21
8398,30
6601,38
9878,27
7947,44
9855,31
9776,29
9976,49
7943,49
208931,37
9746,30
8464,57
8194,39
10265,53
8025,47
8673,60
1957,46
8031,30
8033,40
8020,43
8019,31
6403,43
7841,44
10264,60
10238,41
10251,58
9864,55
8372,49
9906,80
9998,50
10194,48
7844,50
8597,53
8613,27
9772,88
8548,88
7842,47
9865,45
7878,46
8315,66
8394,46
8603,57
10179,63
9986,44
8462,38
8466,59
9851,53
8521,36
9873,50
10189,74
9803,65
8197,68
8479,34
9930,55
8549,28
9825,83
10003,54
10249,68
8721,80
9823,98
9804,58
8600,65
8533,43
8121,40
9810,56
9880,38
10235,76
10213,26
8348,38
10205,61
10268,35
8370,53
8203,48
2033,36
9860,59
8596,37
10190,57
9994,53
8602,46
9798,43
7819,54
9874,60
7794,50
8697,71
8460,31
8636,75
9858,34
10228,79
6547,29
8571,54
6351,28
8455,103
10261,56
8654,65
8559,52
9826,47
9831,58
8722,47
8350,48
8530,50
9885,80
9888,46
8535,72
9857,46
9908,60
10219,44
10217,63
6413,59
6433,45
10281,49
9747,47
8551,40
8242,27
9869,47
9997,35
9879,50
8633,121
9904,60
8152,35
10229,70
8467,58
8634,115
8426,48
9993,45
8586,69
8682,43
8583,46
8358,45
9790,56
10233,62
9839,43
8277,68
9996,42
8659,56
8177,48
9882,49
8569,40
9867,40
8244,27
10278,36
8483,55
9824,44
8560,70
8388,38
10172,43
8357,26
8262,38
4049,35
8344,32
9817,40
8550,31
6391,37
6631,24
4170,31
9891,35

2025-01-18 01:30:47 - root - INFO - itercount: 0
2025-01-18 01:30:47 - root - INFO - Database Name: EU_SOCCER
Schema Name: EU_SOCCER
DDL describes table information.
,0
table_name,PLAYER
description,
DDL,"create or replace TABLE PLAYER (
	""id"" NUMBER(38,0),
	""player_api_id"" NUMBER(38,0),
	""player_name"" VARCHAR(16777216),
	""player_fifa_api_id"" NUMBER(38,0),
	""birthday"" VARCHAR(16777216),
	""height"" FLOAT,
	""weight"" NUMBER(38,0)
);"

,1
table_name,COUNTRY
description,
DDL,"create or replace TABLE COUNTRY (
	""id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

,2
table_name,PLAYER_ATTRIBUTES
description,
DDL,"create or replace TABLE PLAYER_ATTRIBUTES (
	""id"" NUMBER(38,0),
	""player_fifa_api_id"" NUMBER(38,0),
	""player_api_id"" NUMBER(38,0),
	""date"" VARCHAR(16777216),
	""overall_rating"" FLOAT,
	""potential"" FLOAT,
	""preferred_foot"" VARCHAR(16777216),
	""attacking_work_rate"" VARCHAR(16777216),
	""defensive_work_rate"" VARCHAR(16777216),
	""crossing"" FLOAT,
	""finishing"" FLOAT,
	""heading_accuracy"" FLOAT,
	""short_passing"" FLOAT,
	""volleys"" FLOAT,
	""dribbling"" FLOAT,
	""curve"" FLOAT,
	""free_kick_accuracy"" FLOAT,
	""long_passing"" FLOAT,
	""ball_control"" FLOAT,
	""acceleration"" FLOAT,
	""sprint_speed"" FLOAT,
	""agility"" FLOAT,
	""reactions"" FLOAT,
	""balance"" FLOAT,
	""shot_power"" FLOAT,
	""jumping"" FLOAT,
	""stamina"" FLOAT,
	""strength"" FLOAT,
	""long_shots"" FLOAT,
	""aggression"" FLOAT,
	""interceptions"" FLOAT,
	""positioning"" FLOAT,
	""vision"" FLOAT,
	""penalties"" FLOAT,
	""marking"" FLOAT,
	""standing_tackle"" FLOAT,
	""sliding_tackle"" FLOAT,
	""gk_diving"" FLOAT,
	""gk_handling"" FLOAT,
	""gk_kicking"" FLOAT,
	""gk_positioning"" FLOAT,
	""gk_reflexes"" FLOAT
);"

,3
table_name,SQLITE_SEQUENCE
description,
DDL,"create or replace TABLE SQLITE_SEQUENCE (
	""name"" VARCHAR(16777216),
	""seq"" NUMBER(38,0)
);"

,4
table_name,LEAGUE
description,
DDL,"create or replace TABLE LEAGUE (
	""id"" NUMBER(38,0),
	""country_id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

,5
table_name,MATCH
description,
DDL,"create or replace TABLE MATCH (
	""id"" NUMBER(38,0),
	""country_id"" NUMBER(38,0),
	""league_id"" NUMBER(38,0),
	""season"" VARCHAR(16777216),
	""stage"" NUMBER(38,0),
	""date"" VARCHAR(16777216),
	""match_api_id"" NUMBER(38,0),
	""home_team_api_id"" NUMBER(38,0),
	""away_team_api_id"" NUMBER(38,0),
	""home_team_goal"" NUMBER(38,0),
	""away_team_goal"" NUMBER(38,0),
	""home_player_X1"" FLOAT,
	""home_player_X2"" FLOAT,
	""home_player_X3"" FLOAT,
	""home_player_X4"" FLOAT,
	""home_player_X5"" FLOAT,
	""home_player_X6"" FLOAT,
	""home_player_X7"" FLOAT,
	""home_player_X8"" FLOAT,
	""home_player_X9"" FLOAT,
	""home_player_X10"" FLOAT,
	""home_player_X11"" FLOAT,
	""away_player_X1"" FLOAT,
	""away_player_X2"" FLOAT,
	""away_player_X3"" FLOAT,
	""away_player_X4"" FLOAT,
	""away_player_X5"" FLOAT,
	""away_player_X6"" FLOAT,
	""away_player_X7"" FLOAT,
	""away_player_X8"" FLOAT,
	""away_player_X9"" FLOAT,
	""away_player_X10"" FLOAT,
	""away_player_X11"" FLOAT,
	""home_player_Y1"" FLOAT,
	""home_player_Y2"" FLOAT,
	""home_player_Y3"" FLOAT,
	""home_player_Y4"" FLOAT,
	""home_player_Y5"" FLOAT,
	""home_player_Y6"" FLOAT,
	""home_player_Y7"" FLOAT,
	""home_player_Y8"" FLOAT,
	""home_player_Y9"" FLOAT,
	""home_player_Y10"" FLOAT,
	""home_player_Y11"" FLOAT,
	""away_player_Y1"" FLOAT,
	""away_player_Y2"" FLOAT,
	""away_player_Y3"" FLOAT,
	""away_player_Y4"" FLOAT,
	""away_player_Y5"" FLOAT,
	""away_player_Y6"" FLOAT,
	""away_player_Y7"" FLOAT,
	""away_player_Y8"" FLOAT,
	""away_player_Y9"" FLOAT,
	""away_player_Y10"" FLOAT,
	""away_player_Y11"" FLOAT,
	""home_player_1"" FLOAT,
	""home_player_2"" FLOAT,
	""home_player_3"" FLOAT,
	""home_player_4"" FLOAT,
	""home_player_5"" FLOAT,
	""home_player_6"" FLOAT,
	""home_player_7"" FLOAT,
	""home_player_8"" FLOAT,
	""home_player_9"" FLOAT,
	""home_player_10"" FLOAT,
	""home_player_11"" FLOAT,
	""away_player_1"" FLOAT,
	""away_player_2"" FLOAT,
	""away_player_3"" FLOAT,
	""away_player_4"" FLOAT,
	""away_player_5"" FLOAT,
	""away_player_6"" FLOAT,
	""away_player_7"" FLOAT,
	""away_player_8"" FLOAT,
	""away_player_9"" FLOAT,
	""away_player_10"" FLOAT,
	""away_player_11"" FLOAT,
	""goal"" VARCHAR(16777216),
	""shoton"" VARCHAR(16777216),
	""shotoff"" VARCHAR(16777216),
	""foulcommit"" VARCHAR(16777216),
	""card"" VARCHAR(16777216),
	""cross"" VARCHAR(16777216),
	""corner"" VARCHAR(16777216),
	""possession"" VARCHAR(16777216),
	B365H FLOAT,
	B365D FLOAT,
	B365A FLOAT,
	BWH FLOAT,
	BWD FLOAT,
	BWA FLOAT,
	IWH FLOAT,
	IWD FLOAT,
	IWA FLOAT,
	LBH FLOAT,
	LBD FLOAT,
	LBA FLOAT,
	PSH FLOAT,
	PSD FLOAT,
	PSA FLOAT,
	WHH FLOAT,
	WHD FLOAT,
	WHA FLOAT,
	SJH FLOAT,
	SJD FLOAT,
	SJA FLOAT,
	VCH FLOAT,
	VCD FLOAT,
	VCA FLOAT,
	GBH FLOAT,
	GBD FLOAT,
	GBA FLOAT,
	BSH FLOAT,
	BSD FLOAT,
	BSA FLOAT
);"

,6
table_name,TEAM
description,
DDL,"create or replace TABLE TEAM (
	""id"" NUMBER(38,0),
	""team_api_id"" NUMBER(38,0),
	""team_fifa_api_id"" FLOAT,
	""team_long_name"" VARCHAR(16777216),
	""team_short_name"" VARCHAR(16777216)
);"

,7
table_name,TEAM_ATTRIBUTES
description,
DDL,"create or replace TABLE TEAM_ATTRIBUTES (
	""id"" NUMBER(38,0),
	""team_fifa_api_id"" NUMBER(38,0),
	""team_api_id"" NUMBER(38,0),
	""date"" VARCHAR(16777216),
	""buildUpPlaySpeed"" NUMBER(38,0),
	""buildUpPlaySpeedClass"" VARCHAR(16777216),
	""buildUpPlayDribbling"" FLOAT,
	""buildUpPlayDribblingClass"" VARCHAR(16777216),
	""buildUpPlayPassing"" NUMBER(38,0),
	""buildUpPlayPassingClass"" VARCHAR(16777216),
	""buildUpPlayPositioningClass"" VARCHAR(16777216),
	""chanceCreationPassing"" NUMBER(38,0),
	""chanceCreationPassingClass"" VARCHAR(16777216),
	""chanceCreationCrossing"" NUMBER(38,0),
	""chanceCreationCrossingClass"" VARCHAR(16777216),
	""chanceCreationShooting"" NUMBER(38,0),
	""chanceCreationShootingClass"" VARCHAR(16777216),
	""chanceCreationPositioningClass"" VARCHAR(16777216),
	""defencePressure"" NUMBER(38,0),
	""defencePressureClass"" VARCHAR(16777216),
	""defenceAggression"" NUMBER(38,0),
	""defenceAggressionClass"" VARCHAR(16777216),
	""defenceTeamWidth"" NUMBER(38,0),
	""defenceTeamWidthClass"" VARCHAR(16777216),
	""defenceDefenderLineClass"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'EU_SOCCER': {'EU_SOCCER': ['COUNTRY', 'LEAGUE', 'MATCH', 'PLAYER', 'PLAYER_ATTRIBUTES', 'SQLITE_SEQUENCE', 'TEAM', 'TEAM_ATTRIBUTES']}}
Begin Exploring Related Columns
To solve this task, we'll first identify the relevant tables and columns, along with their potential usage and any conditions that may be applied.

---

### **Relevant Tables and Columns:**

- **Table:** `MATCH`
  - **Columns:**
    - `"home_team_api_id"`: Identifier for the home team in a match.
    - `"away_team_api_id"`: Identifier for the away team in a match.
    - `"home_team_goal"`: Goals scored by the home team in a match.
    - `"away_team_goal"`: Goals scored by the away team in a match.
    - `"season"`: The season when the match was played.

---

### **Potential Usage of Columns:**

- **"`home_team_api_id"`** and **"`away_team_api_id"`**:
  - To identify matches involving each team and distinguish between home and away performances.

- **"`home_team_goal"`** and **"`away_team_goal"`**:
  - To calculate the total number of goals scored by each team in matches.

- **"`season"`**:
  - To group matches by season and calculate season-specific statistics.

---

### **Conditions That May Be Used:**

- **Grouping Conditions:**
  - Group data by `"team_api_id"` and `"season"` to compute total goals per team per season.

- **Aggregation Functions:**
  - Use `SUM` to total the goals scored by teams.
  - Use `MAX` to identify the highest season goals for each team.

- **Union of Home and Away Data:**
  - Combine home and away goals to get the total goals for each team.

---

### **Sample SQL Queries:**

```sql
-- 1. List all distinct seasons
SELECT DISTINCT "season"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000;

-- 2. List all distinct home team IDs
SELECT DISTINCT "home_team_api_id"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000;

-- 3. List all distinct away team IDs
SELECT DISTINCT "away_team_api_id"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000;

-- 4. Retrieve home team goals for each match
SELECT "home_team_api_id", "home_team_goal"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000;

-- 5. Retrieve away team goals for each match
SELECT "away_team_api_id", "away_team_goal"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000;

-- 6. Calculate total home goals for each team across all seasons
SELECT "home_team_api_id", SUM("home_team_goal") AS "total_home_goals"
FROM EU_SOCcer.EU_SOCcer.MATCH
GROUP BY "home_team_api_id"
LIMIT 1000;

-- 7. Calculate total away goals for each team across all seasons
SELECT "away_team_api_id", SUM("away_team_goal") AS "total_away_goals"
FROM EU_SOCcer.EU_SOCcer.MATCH
GROUP BY "away_team_api_id"
LIMIT 1000;

-- 8. Retrieve matches involving a specific team (replace team_id_value with actual ID)
SELECT *
FROM EU_SOCcer.EU_SOCcer.MATCH
WHERE "home_team_api_id" = team_id_value OR "away_team_api_id" = team_id_value
LIMIT 1000;

-- 9. Calculate total goals per team per season
SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
FROM (
  SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
  FROM EU_SOCcer.EU_SOCcer.MATCH
  UNION ALL
  SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
  FROM EU_SOCcer.EU_SOCcer.MATCH
) AS "team_goals"
GROUP BY "season", "team_api_id"
LIMIT 1000;

-- 10. Find the highest season goals for each team
SELECT "team_api_id", MAX("season_goals") AS "highest_season_goals"
FROM (
  SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
  FROM (
    SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
    FROM EU_SOCcer.EU_SOCcer.MATCH
    UNION ALL
    SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
    FROM EU_SOCcer.EU_SOCcer.MATCH
  ) AS "team_goals"
  GROUP BY "season", "team_api_id"
) AS "season_totals"
GROUP BY "team_api_id"
LIMIT 1000;
```

---

These queries help explore and understand values in the relevant columns, providing insights into seasons, teams, and goal statistics.

---

### **Final Answer:**

After performing the calculations as per the above steps, the median from the highest season goals of each team is presented below:

```csv
Median_Highest_Season_Goals
median_value:float
```Query:
-- 1. List all distinct seasons
SELECT DISTINCT "season"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Answer:
season
2008/2009
2010/2011
2012/2013
2014/2015
2015/2016
2009/2010
2011/2012
2013/2014
Query:
-- 2. List all distinct home team IDs
SELECT DISTINCT "home_team_api_id"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Answer:
home_team_api_id
8030
2182
8245
8021
2183
2186
1601
8024
8322
8028
8023
8027
177361
9773
9809
9807
7992
10214
9771
9765
10212
4064
6367
188163
9925
9927
9800
9938
8649
8302
8305
8661
9868
8581
7869
10192
10199
6493
9931
10243
7730
7896
9768
6421
10211
10215
9764
8485
8066
8457
8284
8371
9783
8696
8558
9910
7955
8306
10191
9777
158085
10267
9956
8429
9987
10000
9984
9991
7947
9999
10001
8635
8342
9989
8475
8573
274581
10260
8472
10252
8668
8456
8650
8655
8528
8191
8658
9850
8678
9827
9746
9748
9829
8481
8689
9941
9855
9830
9847
108893
9836
4087
8576
9837
10242
8178
9912
8398
8295
9789
10269
8226
9911
9905
8406
8234
8524
8564
8686
8540
8543
8537
10167
9976
6269
9876
7943
8534
9791
6601
8593
9761
8640
10218
9985
1773
8667
8639
9853
8588
8592
9788
8165
8194
9776
8529
8690
9875
9878
208931
8525
8464
8614
8526
8611
7788
8674
8020
10265
8025
8673
8569
1957
8244
8033
8031
8019
7844
6403
7841
9772
10264
10238
2033
10213
8348
8467
8426
9869
8603
8315
8634
9864
10281
8560
8370
7878
10268
9930
7842
6547
8596
8597
8548
10251
9860
8388
9906
10205
8633
8394
8372
9824
10190
8613
8479
9867
10278
10179
9865
4049
9994
9993
8203
9996
9998
9986
9997
6351
9825
8654
8549
8559
9879
8659
8462
10194
8586
10261
8602
8483
10172
10003
9798
9826
8197
9817
8583
8682
9851
9873
9831
7819
10249
4170
8521
7794
9747
8550
8121
9823
8177
8722
9904
8350
8152
8357
8262
8530
8533
8535
9882
8636
10233
9880
9891
9803
9908
10229
10235
10217
10228
10219
6413
6631
8242
8571
8455
8466
8344
9874
10189
8721
9790
8697
8358
8460
9804
8551
9885
9857
9858
8277
9839
6433
6391
9810
8600
9888
Query:
-- 3. List all distinct away team IDs
SELECT DISTINCT "away_team_api_id"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Answer:
away_team_api_id
8245
8021
2183
8322
2186
1601
2182
8024
8030
8023
8028
8027
177361
9807
7992
10215
10214
10212
9809
9771
9773
4064
188163
6367
9927
9800
9925
9938
8649
8661
8302
8305
9868
8581
7869
6493
9931
10243
10192
10199
7730
7896
6421
9768
9765
10211
9764
8066
8485
8457
8284
8558
8696
9783
8371
9910
7955
8306
10191
9777
158085
10267
9956
8429
8635
9985
8342
9999
7947
10001
9984
9987
10000
9989
8475
8573
274581
8650
8528
8456
8668
8472
8655
10260
10252
8658
8191
9850
8678
9830
8689
9941
9847
9855
9748
9827
9746
8481
108893
4087
9836
9829
8576
10242
9837
9789
8226
10269
8178
8398
9912
8295
9911
9905
8406
8234
8543
8540
8686
8564
8524
9976
10167
8537
6269
7943
9876
8534
8593
8640
9761
6601
9791
10218
9991
1773
8667
8639
8592
9853
8588
9788
8165
8194
9776
8690
9875
8529
9878
208931
8611
8526
8614
8525
8464
7788
8674
1957
8569
8025
8020
8673
10265
8244
8033
8031
8019
10238
10264
7844
10213
7841
2033
9772
6403
8348
8467
8426
8634
10281
9864
9869
8603
8315
8560
7878
8370
10268
9930
7842
8613
8548
10251
8596
8597
9860
10205
8633
9906
8388
8394
8372
9824
10190
6547
8479
9867
10278
10179
9865
9993
9994
9998
9996
9986
4049
8203
9997
6351
10261
8659
9879
8462
8654
9825
8549
8559
8586
10194
8602
8483
10003
10172
9798
9826
8197
9817
7819
9831
9873
8682
8583
9851
10249
4170
8521
7794
9747
8550
8121
9904
8722
8177
9823
8350
8152
8357
8262
10233
8636
8535
8533
8530
9882
9880
9891
10235
10217
10228
9803
9908
10229
10219
6413
6631
8242
8571
8455
8466
8344
9874
9790
8697
10189
8721
8358
8460
8551
9885
9857
9804
9858
8277
9839
6433
6391
9810
8600
9888
Query:
-- 4. Retrieve home team goals for each match
SELECT "home_team_api_id", "home_team_goal"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Answer:
Too long, hard cut:
home_team_api_id,home_team_goal
9987,1
10000,0
9984,0
9991,5
7947,1
8203,1
9999,2
4049,1
10001,1
8342,4
9985,1
10000,0
9994,0
7947,2
8203,1
9996,0
4049,1
9993,1
8635,2
9998,0
9986,2
9984,2
9991,1
9999,1
8571,0
10001,1
9993,1
8342,1
9987,1
10000,2
9994,1
7947,1
8203,0
9996,2
4049,3
10001,3
8635,2
9985,3
9998,1
9986,3
9984,2
9991,2
9999,2
8571,1
9993,0
8342,3
9987,3
10000,4
9991,4
7947,0
8203,0
9996,2
4049,3
10001,2
8635,5
9985,1
9998,5
9986,1
9984,3
9994,2
9999,1
8571,3
9993,3
8342,1
9987,1
10000,2
9991,1
7947,1
8203,2
9999,0
4049,2
10001,1
8635,2
9985,2
9998,2
9986,2
9984,4
9994,2
9996,5
8571,0
9993,2
9993,4
9994,2
8635,1
9998,1
9985,3
8342,3
8571,2
9996,1
9986,1
10000,3
9991,1
10001,0
9987,2
9999,3
4049,2
8203,2
9984,0
7947,0
8342,2
8635,2
9985,3
9998,3
9986,1
9994,4
9996,3
8571,2
9993,1
8571,1
9994,1
9998,1
9986,2
9996,0
10000,1
9985,3
8342,3
9993,2
7947,0
8571,0
8635,3
9987,1
9984,2
10001,1
4049,1
9991,2
9999,2
9986,0
8342,0
9993,1
8203,3
10000,1
9994,2
9998,1
9985,4
9996,0
10001,1
8635,4
9999,3
4049,0
8571,1
9984,0
7947,1
9987,1
9991,1
9996,1
8203,2
9986,3
9985,4
9994,0
8342,2
9993,3
7947,4
10000,1
9984,1
9998,0
8635,2
8571,2
9987,4
10001,0
9999,2
9991,2
9986,0
8203,2
9985,2
9993,2
9994,0
7947,1
8342,1
10000,0
9996,1
4049,1
8571,2
9986,1
9991,1
9998,0
10001,3
9999,1
9984,0
9987,3
8635,2
9994,0
9996,3
8342,2
10000,3
7947,1
4049,0
8203,1
9987,1
9985,3
8635,1
9999,1
9993,1
9985,1
8571,1
9998,0
9986,1
9984,4
9991,2
8635,4
9987,1
9984,2
9991,2
7947,1
8203,0
9999,1
4049,1
10001,1
10001,0
9996,0
8342,3
4049,3
8203,0
9987,2
7947,3
10000,5
9994,1
9993,2
9984,1
9986,1
9999,1
8635,4
9985,4
9994,3
8571,2
9998,0
4049,1
10000,0
7947,0
8203,2
9991,2
8342,2
10001,1
9987,0
9996,3
9985,2
9986,3
9996,0
8571,0
9994,0
9993,3
8635,3
9998,1
9984,2
9987,0
9991,0
10000,3
7947,1
9999,1
8203,3
8342,4
10001,1
4049,1
8342,1
9985,2
9998,1
10000,1
9986,3
9994,1
8203,0
9996,4
9993,3
8635,2
9987,0
9984,1
9991,1
7947,2
9999,0
8571,1
4049,0
10001,0
8342,2
9985,2
9998,2
10000,1
9986,1
9994,1
8203,4
9996,1
9993,2
8635,2
9987,2
9998,1
9984,4
9991,1
9999,0
8571,0
4049,2
10001,3
8342,3
9985,2
10000,4
9994,2
7947,2
8203,1
9996,2
4049,0
9993,1
8635,7
9987,0
9998,0
9986,1
9984,1
9991,3
9999,0
8571,2
10001,4
9985,2
9986,1
9984,1
9994,1
8571,0
8203,4
9999,1
8342,4
9985,1
9997,1
9986,3
8203,2
9999,3
9993,3
8342,1
8635,2
9987,1
10000,4
9994,1
8571,2
10001,2
9985,1
9997,1
9986,1
9984,1
9994,0
8203,0
9999,2
8342,1
8635,2
9987,2
10000,2
9991,0
8571,2
10001,2
9985,3
9987,0
9986,0
9984,2
9994,0
9999,2
9993,4
8342,1
8635,3
9997,1
10000,4
9991,2
8571,2
10001,1
8342,1
8635,1
9997,2
10000,1
9991,3
10001,2
9993,3
9985,2
9987,0
9986,0
9984,1
9994,0
8571,1
8203,2
8342,1
9985,0
9997,0
10000,1
9991,2
10001,0
9993,0
8635,3
9987,2
9986,2
9994,0
8571,1
8203,1
9999,1
8342,2
8635,3
9997,0
10000,2
9991,2
10001,1
9993,1
8342,2
9985,2
9997,5
10000,1
9986,3
9991,2
9993,1
8635,2
9987,0
9984,2
9994,2
8571,1
8203,1
9999,0
8342,2
9985,0
9997,2
9986,1
9991,2
9999,1
9993,1
9987,2
10000,2
9984,1
9994,1
8571,3
8203,0
10001,0
9985,3
9997,0
9986,4
9991,0
8203,1
9999,1
9993,0
8635,1
9987,1
10000,1
9984,2
9994,2
8571,2
10001,1
9985,1
9986,0
9984,4
9991,1
8203,2
9999,0
9993,1
8342,2
8635,2
9987,3
10000,1
9991,0
8571,3
10001,4
9997,1
9986,0
9984,1
9994,1
8203,1
9999,1
9993,1
8342,1
8635,2
9997,2
10000,1
9991,2
8571,3
10001,2
8635,3
9987,1
9986,1
9984,2
9994,1
8203,2
9999,1
9985,0
9987,1
9984,3
9994,0
8203,2
9999,0
9993,1
8342,2
9985,1
9997,2
10000,0
9991,4
10001,0
9993,1
8635,1
9987,1
9984,2
8571,1
8203,0
9999,1
10001,1
8342,1
9985,3
9997,2
10000,0
9986,0
9991,5
9993,2
8635,1
9987,1
9984,1
9994,1
8571,0
8203,3
10001,1
8342,3
9985,1
9997,2
9986,1
9991,1
9999,1
9993,1
8635,1
9987,1
10000,3
9984,1
9994,4
8571,0
10001,2
9997,1
8571,1
8203,2
10001,0
8635,4
9985,1
9984,1
9987,2
8342,3
9985,5
9997,1
10000,1
9994,1
8571,3
8203,2
9989,0
9991,2
9987,4
9993,1
10000,2
9986,1
6351,6
10001,1
9984,1
8635,2
9985,2
9997,3
9994,1
8571,1
8203,5
9989,0
9984,2
8342,2
9991,3
9987,1
9993,0
10000,1
9986,0
6351,2
10001,2
8635,2
9985,1
9997,0
8571,4
8203,2
9989,2
10001,1
9984,0
8342,2
9991,1
9987,3
9993,0
10000,1
9986,0
9994,3
6351,0
8342,0
9991,4
9993,0
10000,2
9986,1
9994,3
9989,1
6351,3
8635,4
9985,7
9987,1
9997,2
8571,0
8203,0
10001,1
9984,1
8342,4
9993,0
9997,1
10000,1
9986,0
9994,2
9989,2
6351,0
8635,0
9985,1
9991,2
9987,5
8571,3
8203,0
10001,1
9984,1
8342,4
9991,0
9993,0
10000,1
9986,0
9994,1
9989,1
6351,0
8342,0
9993,2
9997,0
10000,2
9994,2
8571,2
9989,1
6351,1
8635,6
9991,0
9987,1
9986,2
8203,1
6351,0
10001,1
9984,1
8342,5
9985,3
9993,0
9997,0
10000,2
9994,2
8571,0
9989,2
8635,2
9991,2
9987,3
9993,3
9986,0
6351,1
10001,3
9984,3
8342,1
9985,2
9997,1
10000,0
9994,0
8571,2
8203,0
9989,1
8635,2
9991,4
9987,1
9993,1
9986,2
6351,0
10001,2
9984,0
8342,2
8635,1
9985,0
9997,1
9994,1
8571,0
8203,3
9989,2
8342,2
9991,4
9987,1
9993,3
10000,1
9986,1
6351,0
10001,2
8635,1
9985,2
9997,1
9994,2
8571,3
8203,1
9989,1
9984,0
8342,4
9991,1
9987,0
9993,1
10000,1
9986,0
9994,1
6351,1
8635,4
9985,3
9991,2
9987,5
8571,2
8203,
Query:
-- 5. Retrieve away team goals for each match
SELECT "away_team_api_id", "away_team_goal"
FROM EU_SOCcer.EU_SOCcer.MATCH
LIMIT 1000
Answer:
Too long, hard cut:
away_team_api_id,away_team_goal
9993,1
9994,0
8635,3
9998,0
9985,3
8342,1
8571,2
9996,2
9986,0
8571,1
9986,2
9991,2
9998,0
10001,2
9999,2
9984,1
9987,3
8635,3
9994,3
9996,0
8342,2
10000,0
7947,1
4049,2
8203,0
9987,0
9985,3
8635,1
9999,1
9993,2
9985,1
8571,0
9998,0
9986,1
9984,0
9991,2
10001,0
9996,1
8342,2
4049,2
8203,1
9987,3
7947,2
10000,0
9994,2
9993,0
9984,2
9986,2
9999,0
8635,2
9985,0
9994,0
8571,3
9998,1
4049,1
10000,2
7947,2
8203,2
9991,1
8342,0
10001,0
9987,1
9996,0
9985,4
9986,0
9996,1
8571,1
9994,1
9993,1
8635,3
9998,1
9984,2
9987,0
9991,1
10000,2
7947,0
9999,3
8203,2
8342,1
10001,0
4049,0
9987,1
10000,1
9984,2
9991,2
7947,2
8203,0
9999,1
4049,1
10001,2
8342,1
8635,2
9985,1
9998,0
9986,1
9994,1
9996,2
8571,1
9993,1
10000,0
9991,2
10001,0
9987,1
9999,0
4049,1
8203,1
9984,1
7947,1
8635,3
9987,2
9984,1
9991,5
7947,2
8203,1
9999,0
4049,1
10001,1
8342,2
9985,2
9998,2
10000,2
9986,2
9994,0
8203,5
9996,0
9993,2
8635,1
9987,2
9984,1
9991,3
7947,0
9999,1
8571,1
4049,0
10001,0
8342,1
9985,2
9998,2
10000,6
9986,1
9994,0
8203,2
9996,1
9993,3
8635,1
9987,1
9998,0
9984,0
9991,1
9999,1
8571,0
4049,0
10001,1
8342,3
9985,1
10000,0
9994,3
7947,3
8203,1
9996,0
4049,0
9993,0
8635,1
9987,0
9998,0
9986,0
9984,0
9991,4
9999,0
8571,0
10001,2
8342,3
9985,0
10000,0
9994,2
7947,1
8203,0
9996,1
4049,0
9993,0
8635,0
9998,2
9986,1
9984,1
9991,1
9999,1
8571,1
10001,4
9993,1
8342,0
9987,0
10000,2
9994,0
7947,2
8203,1
9996,0
4049,1
10001,0
8571,0
9994,0
9998,1
9986,0
9996,2
10000,2
9985,1
8342,4
9993,0
8635,1
9985,3
9998,2
9986,1
9984,1
9991,2
9999,1
8571,1
9993,0
8342,0
9987,2
10000,0
9991,3
7947,0
8203,1
9996,0
4049,2
10001,2
8635,1
9985,0
9998,0
9986,1
9984,1
9994,3
9999,0
8571,1
9993,1
8342,0
9987,0
10000,2
9991,2
7947,2
8203,1
9999,1
4049,1
10001,1
8635,2
9985,1
9998,0
9986,2
9984,2
9994,0
9996,1
8571,3
9993,0
7947,1
8571,0
8635,2
9987,3
9984,2
10001,1
4049,0
9991,2
9999,0
9986,0
8342,1
9993,0
8203,2
10000,0
9994,1
9998,0
9985,1
9996,0
10001,0
8635,1
9999,0
4049,0
8571,2
9984,1
7947,1
9987,2
9991,2
9996,1
8203,1
9986,1
9985,1
9994,1
8342,1
9993,0
7947,1
10000,2
9984,1
9998,1
8635,0
8571,0
9987,4
10001,3
9999,0
9991,1
9986,2
8203,1
9985,0
9993,0
9994,1
7947,2
8342,0
10000,3
9996,2
4049,1
9997,2
8342,2
9991,3
10000,1
8635,2
10001,1
9993,1
8635,2
9987,0
10000,2
8571,3
9994,0
9984,2
10001,1
9991,0
9986,0
8203,2
9993,0
9984,1
9999,0
9985,0
10000,1
9991,2
10001,1
8571,1
9987,2
8635,2
8342,3
9997,0
9994,0
9984,0
9986,2
9993,1
8203,0
9999,2
8342,1
8635,2
9991,2
10001,1
8571,0
10000,0
9997,1
9993,2
9999,1
9984,1
8203,1
9985,1
9987,1
9994,0
9986,0
8571,0
9985,0
9994,0
9984,1
8203,0
9999,0
9993,2
10001,0
9997,0
8635,3
8342,1
10000,0
9991,5
8203,1
9999,1
8571,2
9984,0
9987,1
8635,2
9986,0
8342,2
10000,2
9985,3
9991,1
10001,1
9993,0
9997,2
9994,0
9984,2
9986,0
9987,2
8203,1
8571,1
9985,1
9984,1
9994,0
8203,2
10001,0
9999,0
8635,2
9987,0
10000,1
9997,0
9985,0
9993,0
8342,4
9986,0
9991,4
10001,1
8635,4
9994,1
9987,3
8571,2
8203,2
9984,4
8342,0
9997,0
9986,0
9999,4
9993,0
9985,0
9991,0
8571,1
10001,1
9994,1
10000,2
9984,2
9987,1
8635,5
9997,2
9985,0
8342,1
9999,0
8203,1
9986,1
9993,1
10001,0
8635,2
9994,0
8342,1
9987,1
8571,2
10000,1
9985,1
8203,0
9994,1
9999,1
9997,1
9984,1
9986,0
8342,1
10000,0
9987,0
10001,0
8571,1
8635,2
9991,1
9999,0
9987,0
9993,0
9985,1
9986,1
9994,1
9984,1
10001,0
9991,1
9993,0
10000,2
9997,2
8342,1
9985,5
9991,2
8571,1
9997,1
8635,4
10000,1
10001,0
8342,4
8571,2
9986,1
9999,1
8635,2
9994,1
9987,1
8203,3
9985,1
9993,1
8342,3
9991,0
9997,2
9986,3
10000,2
9987,1
8203,0
8635,1
8571,2
9984,4
9999,1
9994,1
9991,1
9986,2
9993,2
9985,3
9997,1
9999,2
8342,4
10000,1
9984,1
9987,4
8203,2
10001,2
9994,2
8571,0
9993,0
9999,1
9991,1
8203,0
9986,1
9985,2
9997,0
9989,0
8342,0
9994,0
9991,1
6351,1
10000,1
9986,1
9993,1
9991,2
8635,1
10001,2
9986,1
9993,0
6351,1
9987,2
9984,1
8571,0
9985,2
9989,1
8342,3
9994,2
9997,0
8203,1
8635,0
10001,0
9991,1
9986,2
8342,0
9987,0
9993,1
10000,0
6351,1
9985,2
8203,1
8635,2
9997,0
9994,1
8571,0
9989,2
9984,1
8342,2
6351,3
10000,3
9993,0
9986,0
9994,2
9987,1
9991,1
9989,0
8635,2
9984,0
9985,1
8571,1
10001,1
9997,0
8203,1
9984,1
10001,4
8635,1
9985,0
9987,3
8203,1
9997,2
8571,1
9986,1
9989,0
9991,2
8342,1
9994,0
10000,0
6351,1
9993,1
10001,3
9987,1
8571,0
8635,2
9984,3
9985,1
8203,1
9991,3
9994,0
9997,0
9986,1
6351,1
9989,1
8342,1
9993,1
10000,3
9997,1
9987,4
9984,0
8203,2
8635,0
8571,1
9985,4
10001,1
8635,2
9991,2
8203,1
10001,0
9984,1
9985,1
9987,1
9986,0
9989,0
8342,2
9997,1
9993,0
8571,0
10000,2
9994,2
9985,0
9986,0
8203,0
6351,0
9984,3
9991,2
9987,2
8635,2
10001,1
9985,0
9994,1
8571,2
10000,0
8203,0
8342,4
9997,0
9989,0
9993,0
10001,1
9991,1
9987,1
6351,2
9984,1
8635,0
9986,0
9997,0
9989,1
8342,0
9994,1
10000,0
9985,1
8571,1
8203,1
10000,0
9984,0
9987,2
6351,1
9986,1
9991,1
10001,1
9993,2
9994,1
9985,1
8203,0
8571,1
9989,1
9997,0
9984,0
8635,0
9987,1
8342,2
9993,0
10000,1
9986,0
9991,1
6351,1
10001,1
8571,1
9984,0
10001,2
8203,1
9997,2
9985,2
9989,1
8635,1
9993,0
9994,3
6351,1
9986,0
9997,0
9989,
Query:
-- 6. Calculate total home goals for each team across all seasons
SELECT "home_team_api_id", SUM("home_team_goal") AS "total_home_goals"
FROM EU_SOCcer.EU_SOCcer.MATCH
GROUP BY "home_team_api_id"
LIMIT 1000
Answer:
home_team_api_id,total_home_goals
9987,205
10000,176
9984,119
9991,213
7947,21
9999,36
10001,124
8342,235
8635,247
9985,199
9989,69
1773,74
8475,50
8573,62
274581,41
8472,184
10252,179
8667,79
8650,294
10260,338
8456,365
8191,39
9850,96
8678,23
9746,17
9748,289
9829,153
8481,103
8592,254
9853,223
9941,194
108893,14
9836,23
4087,105
8588,61
10242,38
8295,18
9911,41
9789,298
9905,171
8524,170
8564,271
8686,299
8543,239
9976,42
208931,23
8674,225
8640,370
7788,67
2186,144
8245,149
8668,258
8655,98
8528,106
8658,38
9827,228
8689,214
9855,33
9830,79
9847,332
8576,64
8639,270
9837,98
8178,270
9912,16
8398,19
8165,108
9788,242
8194,24
9776,18
8234,22
8690,23
8540,225
9875,303
8537,42
6269,19
9876,83
7943,73
8534,48
8525,140
8464,174
9791,235
8614,44
8593,360
9761,170
8611,289
6601,27
2182,215
8322,52
1601,148
2183,96
8024,77
10269,219
8226,222
8406,112
8529,181
10167,151
9878,15
8526,81
10218,90
8028,115
8030,155
8021,116
8023,85
8027,43
177361,21
9773,295
9768,224
6421,35
9809,37
9807,83
7992,14
10214,187
10212,171
10215,136
9771,45
10211,51
9765,18
4064,13
9764,61
158085,56
6367,19
188163,15
8485,186
9925,389
8429,100
9938,232
8066,177
9927,228
9800,137
8457,22
8649,97
8284,72
10267,299
8371,137
9783,144
8696,81
8558,205
8302,285
8305,202
9868,20
8581,145
8661,147
9910,105
7869,12
8306,25
9956,234
10192,319
10199,239
7955,106
6493,74
9931,344
10243,241
9777,41
7896,25
10191,175
7730,52
8203,162
4049,22
9994,149
9996,28
9993,112
9998,76
8571,163
9986,113
9997,70
9825,306
8654,195
8559,104
8455,333
9879,173
8586,255
8549,17
8602,62
10003,135
9798,23
8466,134
9826,58
8344,20
8682,40
9851,205
9873,162
9831,198
7819,109
4170,19
8521,60
9874,144
10249,193
7794,101
8550,26
8121,20
10189,252
9810,176
9790,178
8697,230
8177,119
8358,133
8262,15
8533,144
8600,236
9888,68
8636,280
9803,192
9908,245
10235,291
6433,41
10265,168
8025,176
8244,27
1957,176
6351,15
10194,204
10261,199
8659,177
8462,50
8483,30
10172,60
8197,63
9817,20
8583,98
9747,75
6391,23
8722,116
9904,218
8350,37
8357,10
8530,155
8535,246
9882,190
9804,125
8551,75
9885,307
9880,51
9858,22
9891,18
10217,204
10228,267
10219,92
9839,101
6413,124
6631,15
8673,240
8569,114
8031,55
8020,149
9823,382
8721,274
8152,21
8460,21
9857,155
10233,249
8277,234
8242,29
10229,279
8033,85
8019,43
7844,156
6403,166
10213,16
7841,131
9772,321
10264,239
2033,70
10238,135
8348,53
7842,96
6547,17
8596,36
9860,189
8597,188
8548,177
10251,136
8467,167
8426,74
8388,23
9869,119
8603,116
8315,250
9906,321
10205,218
8633,505
8634,495
9865,121
10281,94
8479,17
8394,95
9867,26
10278,27
8560,186
9864,222
8370,139
7878,100
10268,32
8372,46
9930,89
9824,53
10190,153
8613,30
10179,220
Query:
-- 7. Calculate total away goals for each team across all seasons
SELECT "away_team_api_id", SUM("away_team_goal") AS "total_away_goals"
FROM EU_SOCcer.EU_SOCcer.MATCH
GROUP BY "away_team_api_id"
LIMIT 1000
Answer:
away_team_api_id,total_away_goals
8635,180
9985,142
8342,186
10001,93
9999,26
9984,94
9987,143
10000,130
7947,23
9991,177
9989,44
1773,52
8475,55
8573,40
274581,30
8650,237
8667,65
10252,156
8456,241
8472,149
10260,244
8191,31
9850,64
8678,22
9830,56
9941,145
9847,236
8592,208
9748,208
8481,100
108893,7
4087,75
9836,15
9829,134
8588,46
10242,33
9789,253
9911,31
8295,12
9905,149
8543,178
8686,231
8564,225
8524,113
9976,34
208931,14
8674,165
8640,282
7788,52
2186,91
8245,88
8528,94
8655,77
8668,181
8658,37
8689,164
8639,180
9855,22
9853,148
9827,176
9746,13
8576,52
9837,70
9788,161
9912,13
8165,85
8178,213
8398,11
8194,15
9776,11
8234,11
8690,7
9875,211
8537,24
6269,15
7943,68
9876,62
8540,126
8534,38
8611,220
8593,287
9761,124
8614,32
9791,168
8525,82
8464,136
6601,11
1601,132
2183,88
8322,25
2182,157
8024,45
8226,178
10269,196
8406,89
8529,128
10167,121
9878,12
8526,49
10218,64
8030,124
8028,89
8021,91
8023,67
8027,32
177361,12
9807,65
7992,11
10215,104
10214,145
9809,34
6421,20
9768,187
9773,246
9771,40
9765,11
10211,42
10212,145
4064,14
9764,49
158085,45
188163,19
6367,8
9927,175
8066,168
9800,120
9938,206
8485,179
8429,85
9925,306
8457,18
8284,55
8649,95
8661,91
8302,193
8305,143
8558,133
10267,185
9783,97
9868,18
8581,96
8696,79
8371,95
9910,79
7869,10
8306,20
6493,54
9931,275
10243,227
9956,195
10192,210
10199,182
7955,65
7730,47
7896,21
10191,104
9777,36
9993,62
9994,130
9998,53
8571,104
9996,14
9986,88
4049,13
8203,123
9997,45
8586,226
9879,92
8462,22
8654,131
9825,267
8559,77
8549,11
8602,56
10003,98
8466,82
9798,20
8344,12
9826,61
7819,111
9831,144
9873,94
9874,102
9851,162
4170,12
8521,39
8682,39
10249,151
7794,64
8550,5
8121,20
9790,166
8177,119
8697,193
10189,174
9810,120
8358,112
8262,23
8636,216
9888,53
8533,141
8600,179
10235,198
9803,151
9908,163
6433,33
1957,111
8244,23
10265,164
8025,142
6351,13
10261,125
8659,128
10194,118
8455,250
8483,25
10172,55
8197,51
9817,20
8583,70
9747,47
6391,14
9904,141
8722,110
8350,35
8357,16
8551,74
9885,236
8535,194
9804,116
8530,96
9882,128
9880,47
9858,12
9891,17
10217,162
10228,203
9839,51
10219,61
6413,80
6631,9
8031,33
8569,76
8673,169
8020,96
9823,271
8721,189
8152,14
8460,10
10233,143
9857,108
8277,189
8242,21
10229,213
8033,84
8019,18
10264,159
9772,247
7844,144
10213,10
7841,117
2033,68
10238,103
6403,126
8348,48
7842,71
6547,12
8548,147
10251,123
8596,32
8597,158
9860,128
8467,141
8426,61
10205,146
8633,338
8634,354
8479,17
10281,76
9865,81
9864,155
9869,81
8603,109
9906,203
8315,165
8388,15
9867,14
8394,64
10278,9
8560,130
7878,79
8370,108
10268,33
8372,37
9824,47
9930,64
10190,123
8613,21
10179,151
Query:
SELECT DISTINCT t."team_api_id", t."team_long_name"
   FROM EU_SOCCER.EU_SOCCER.TEAM t
   JOIN EU_SOCCER.EU_SOCCER.MATCH m
     ON t."team_api_id" = m."home_team_api_id" OR t."team_api_id" = m."away_team_api_id"
   LIMIT 1000;
Answer:
Too long, hard cut:
team_api_id,team_long_name
9987,KRC Genk
9993,Beerschot AC
9994,Sporting Lokeren
8203,KV Mechelen
8342,Club Brugge KV
9999,KSV Roeselare
10001,KVC Westerlo
9989,Lierse SK
1773,Oud-Heverlee Leuven
8472,Sunderland
8456,Manchester City
8655,Blackburn Rovers
8462,Portsmouth
8602,Wolverhampton Wanderers
10003,Swansea City
8197,Leicester City
8583,AJ Auxerre
8682,Le Mans FC
8592,Olympique de Marseille
9855,Grenoble Foot 38
10249,Montpellier Hérault SC
4170,US Boulogne Cote D'Opale
9836,Dijon FCO
7947,FCV Dender EH
9798,Reading
8344,Cardiff City
9847,Paris Saint-Germain
8639,LOSC Lille
9830,FC Nantes
8588,RC Lens
8550,FC Metz
8721,VfL Wolfsburg
9810,Eintracht Frankfurt
8398,FC Energie Cottbus
10269,VfB Stuttgart
9911,VfL Bochum
9776,Eintracht Braunschweig
9857,Bologna
9976,Bari
8525,Willem II
9791,Heracles Almelo
10228,SC Heerenveen
6601,FC Volendam
9804,Torino
6269,Novara
10219,RKC Waalwijk
9839,VVV-Venlo
10218,Excelsior
10265,Wisła Kraków
8028,Piast Gliwice
8021,Zagłębie Lubin
8024,Widzew Łódź
8559,Bolton Wanderers
8466,Southampton
9984,KSV Cercle Brugge
10261,Newcastle United
8528,Wigan Athletic
8586,Tottenham Hotspur
8483,Blackpool
9748,Olympique Lyonnais
9873,Valenciennes FC
8571,KV Kortrijk
8121,Angers SCO
9904,Hannover 96
8722,1. FC Köln
8697,SV Werder Bremen
8358,SC Freiburg
8165,1. FC Nürnberg
9905,1. FSV Mainz 05
8152,FC St. Pauli
8262,SV Darmstadt 98
8529,Cagliari
10233,Genoa
9885,Juventus
8686,Roma
10167,Parma
8534,Empoli
9891,Frosinone
208931,Carpi
8464,N.E.C.
10235,Feyenoord
8234,FC Ingolstadt 04
9880,Cesena
8640,PSV
1601,Ruch Chorzów
8242,Odra Wodzisław
8569,GKS Bełchatów
2183,P. Warszawa
8226,TSG 1899 Hoffenheim
8295,Karlsruher SC
8350,1. FC Kaiserslautern
9875,Napoli
8674,FC Groningen
9803,Roda JC Kerkrade
8593,Ajax
10217,ADO Den Haag
10229,AZ
8031,Polonia Bytom
8020,Polonia Bytom
8673,Legia Warszawa
8030,Lechia Gdańsk
8033,Podbeskidzie Bielsko-Biała
8023,Pogoń Szczecin
6403,FC Paços de Ferreira
10213,Amadora
9772,SL Benfica
10214,CD Nacional
10212,CS Marítimo
10238,Vitória Setúbal
7842,Estoril Praia
158085,FC Arouca
8597,Kilmarnock
9800,St. Mirren
8467,St. Johnstone FC
8457,Dunfermline Athletic
8634,FC Barcelona
9865,UD Almería
9906,Atlético Madrid
9868,Xerez Club Deportivo
9768,Sporting CP
4064,Feirense
6547,FC Penafiel
8613,Boavista FC
8596,Falkirk
9938,Dundee United
9860,Heart of Midlothian
8284,Dundee FC
8661,RCD Mallorca
8305,Getafe CF
8479,RC Recreativo
8558,RCD Espanyol
8315,Athletic Club de Bilbao
2033,S.C. Olhanense
188163,Tondela
10205,Villarreal CF
8302,Sevilla FC
7878,Granada CF
8372,SD Eibar
9956,Grasshopper Club Zürich
9931,FC Basel
10179,FC Sion
7955,Neuchâtel Xamax
10199,FC Luzern
10191,FC Thun
9777,Servette FC
177361,Termalica Bruk-Bet Nieciecza
8394,Real Zaragoza
8306,UD Las Palmas
7730,FC Lausanne-Sports
10000,SV Zulte-Waregem
8635,RSC Anderlecht
9991,KAA Gent
9998,RAEC Mons
9985,Standard de Liège
9996,Royal Excel Mouscron
4049,Tubize
8475,Waasland-Beveren
8573,KV Oostende
8654,West Ham United
10252,Aston Villa
8668,Everton
9879,Fulham
8667,Hull City
8659,West Bromwich Albion
9850,Norwich City
7819,SM Caen
9827,Girondins de Bordeaux
8689,FC Lorient
274581,Royal Excel Mouscron
10194,Stoke City
9825,Arsenal
9826,Crystal Palace
9817,Watford
9831,OGC Nice
8481,AS Nancy-Lorraine
9851,Stade Rennais FC
108893,AC Arles-Avignon
4087,Évian Thonon Gaillard FC
8576,AC Ajaccio
9837,Stade de Reims
7794,SC Bastia
8177,Hertha BSC Berlin
9912,DSC Arminia Bielefeld
9788,Borussia Mönchengladbach
8406,FC Augsburg
8524,Atalanta
8543,Lazio
8636,Inter
8540,Palermo
7943,Sassuolo
8277,Vitesse
9908,FC Utrecht
6433,Go Ahead Eagles
6631,FC Dordrecht
1957,Jagiellonia Białystok
10260,Manchester United
8650,Liverpool
8549,Middlesbrough
8678,Bournemouth
9997,Sint-Truidense VV
8455,Chelsea
8658,Birmingham City
8191,Burnley
10172,Queens Park Rangers
9853,AS Saint-Étienne
8521,Stade Brestois 29
9986,Sporting Charleroi
9829,AS Monaco
9874,FC Sochaux-Montbéliard
6351,KAS Eupen
10242,ES Troyes AC
9747,En Avant de Guingamp
6391,GFC Ajaccio
9790,Hamburger SV
9823,FC Bayern Munich
8178,Bayer 04 Leverkusen
8357,SpVgg Greuther Fürth
8460,SC Paderborn 07
8551,Siena
8530,Catania
8533,Chievo Verona
9888,Lecce
9858,Brescia
9878,Pescara
9761,NAC Breda
10189,FC Schalke 04
8600,Udinese
8611,FC Twente
8526,De Graafschap
6413,PEC Zwolle
7788,SC Cambuur
8025,Śląsk Wrocław
8322,Arka Gdynia
8245,Korona Kielce
9746,Le Havre AC
9941,Toulouse FC
9789,Borussia Dortmund
8194,Fortuna Düsseldorf
8690,Reggio Calabria
8535,Fiorentina
8564,Milan
9882,Sampdoria
8537,Livorno
8614,Sparta Rotterdam
9876,Hellas Verona
2182,Lech Poznań
2186,Cracovia
8244,Widzew Łódź
8019,Górnik Łęczna
9807,CF Os Belenenses
7992,Trofense
7841,Rio Ave FC
9771,"União de Leiria, SAD"
9765,Portimonense
9764,Gil Vicente FC
8348,Moreirense FC
6367,Uniao da Madeira
8548,Rangers
8371,CA Osasuna
8388,CD Numancia
9869,Real Sporting de Gijón
10278,Hércules Club de Fútbol
8027,Zawisza Bydgoszcz
9773,FC Porto
10264,SC Braga
10215,Académica de Coimbra
6421,Leixões SC
9809,Naval 
Query:
-- 9. Calculate total goals per team per season
SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
FROM (
  SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
  FROM EU_SOCcer.EU_SOCcer.MATCH
  UNION ALL
  SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
  FROM EU_SOCcer.EU_SOCcer.MATCH
) AS "team_goals"
GROUP BY "season", "team_api_id"
LIMIT 1000
Answer:
Too long, hard cut:
season,team_api_id,season_goals
2010/2011,8030,37
2010/2011,2182,37
2010/2011,8020,36
2010/2011,8245,34
2011/2012,2186,20
2011/2012,2183,33
2011/2012,1601,44
2011/2012,8024,25
2011/2012,10265,29
2010/2011,2183,41
2011/2012,8569,34
2011/2012,8020,36
2012/2013,1957,31
2012/2013,2182,46
2012/2013,8569,24
2012/2013,8033,39
2012/2013,1601,35
2013/2014,8673,60
2013/2014,10265,38
2013/2014,8020,42
2013/2014,8024,26
2013/2014,1601,40
2014/2015,8673,57
2014/2015,1957,43
2014/2015,8027,32
2014/2015,8025,43
2014/2015,8033,40
2014/2015,8569,24
2014/2015,8245,34
2014/2015,8030,36
2015/2016,2182,37
2015/2016,8021,41
2015/2016,8673,58
2008/2009,9773,61
2008/2009,7844,32
2008/2009,7992,25
2009/2010,10238,29
2009/2010,6421,25
2009/2010,6403,32
2008/2009,10214,47
2008/2009,10215,28
2009/2010,10264,48
2009/2010,10212,42
2009/2010,7841,22
2010/2011,10264,45
2010/2011,10215,32
2010/2011,7844,36
2011/2012,10215,27
2011/2012,9773,69
2012/2013,6403,42
2012/2013,9773,70
2013/2014,9764,23
2014/2015,7842,38
2015/2016,10214,40
2008/2009,9860,40
2011/2012,10251,40
2011/2012,9927,49
2014/2015,8284,46
2009/2010,9867,40
2009/2010,8305,58
2010/2011,8315,59
2013/2014,8558,41
2014/2015,9824,28
2015/2016,10243,48
2010/2011,8569,31
2011/2012,8244,23
2012/2013,8028,41
2013/2014,8245,36
2013/2014,8027,43
2013/2014,8025,38
2014/2015,1601,33
2015/2016,8030,45
2015/2016,1601,37
2015/2016,8023,36
2015/2016,8033,37
2009/2010,9772,78
2009/2010,9807,23
2010/2011,9772,61
2010/2011,2033,24
2010/2011,9771,25
2015/2016,8028,49
2015/2016,8019,30
2015/2016,2186,57
2008/2009,9809,25
2009/2010,9771,35
2009/2010,9809,20
2009/2010,10215,37
2011/2012,4064,27
2011/2012,10212,41
2011/2012,9764,31
2011/2012,7844,40
2011/2012,2033,36
2011/2012,9772,66
2012/2013,9772,77
2012/2013,8348,30
2013/2014,9807,19
2013/2014,7842,42
2013/2014,10212,40
2013/2014,7841,21
2013/2014,158085,28
2013/2014,10264,39
2014/2015,10215,26
2014/2015,9772,86
2014/2015,10264,55
2014/2015,9773,74
2014/2015,10214,45
2014/2015,7844,50
2015/2016,8348,38
2015/2016,188163,34
2015/2016,10215,32
2015/2016,8613,24
2015/2016,7841,44
2008/2009,9925,80
2008/2009,8066,37
2008/2009,8548,77
2008/2009,9927,46
2009/2010,9938,55
2009/2010,8485,36
2009/2010,9800,36
2009/2010,9927,52
2010/2011,9927,40
2011/2012,9860,45
2010/2011,10251,39
2010/2011,8597,53
2011/2012,8485,36
2012/2013,9938,51
2012/2013,8284,28
2013/2014,8485,53
2013/2014,9925,102
2013/2014,9927,64
2014/2015,8429,50
2014/2015,8649,46
2015/2016,8066,54
2015/2016,8597,41
2015/2016,8467,58
2008/2009,9783,48
2008/2009,8696,49
2008/2009,8634,105
2008/2009,10281,46
2009/2010,8633,102
2009/2010,8315,50
2009/2010,8371,37
2009/2010,9869,36
2010/2011,9906,62
2010/2011,10278,36
2010/2011,8696,41
2010/2011,8558,46
2010/2011,8560,49
2010/2011,10267,64
2011/2012,8633,121
2011/2012,9864,54
2011/2012,8581,54
2011/2012,8305,40
2012/2013,8305,43
2012/2013,8558,43
2013/2014,8634,100
2013/2014,8581,35
2013/2014,8315,66
2014/2015,8634,110
2014/2015,7869,22
2009/2010,10179,63
2010/2011,10192,65
2011/2012,10179,40
2011/2012,10192,52
2011/2012,9931,78
2012/2013,9931,61
2013/2014,7730,38
2014/2015,10179,47
2013/2014,8028,29
2014/2015,8028,38
2010/2011,10214,28
2012/2013,7841,35
2012/2013,10214,45
2012/2013,9764,31
2012/2013,10215,33
2012/2013,7842,47
2013/2014,9773,57
2014/2015,7841,38
2014/2015,9807,34
2015/2016,6403,43
2015/2016,158085,47
2015/2016,9768,79
2008/2009,8597,38
2008/2009,9800,33
2009/2010,8548,82
2009/2010,8597,29
2010/2011,8485,39
2010/2011,9860,53
2010/2011,8066,52
2011/2012,9938,62
2011/2012,8467,43
2010/2011,9925,85
2012/2013,8467,45
2013/2014,8426,46
2013/2014,8467,48
2013/2014,10251,31
2013/2014,9938,65
2014/2015,9925,84
2014/2015,9800,30
2014/2015,8426,48
2014/2015,8597,44
2015/2016,9938,45
2008/2009,10267,68
2008/2009,8388,38
2008/2009,8603,51
2008/2009,9906,80
2008/2009,8302,54
2008/2009,8633,83
2008/2009,9865,45
2008/2009,9864,55
2009/2010,8661,59
2009/2010,10267,59
2009/2010,9864,42
2009/2010,9906,57
2009/2010,10205,58
2010/2011,8394,40
2010/2011,8305,49
2008/2009,8315,47
2011/2012,8560,46
2011/2012,8603,47
2011/2012,8394,36
2011/2012,10267,59
2011/2012,8634,114
2012/2013,8633,103
2012/2013,8302,58
2012/2013,9910,37
2012/2013,8560,70
2012/2013,8371,33
2012/2013,10267,67
2012/2013,8603,57
2013/2014,9865,43
2013/2014,8560,62
2013/2014,8302,69
2013/2014,10205,60
2013/2014,9906,77
2013/2014,9864,39
2014/2015,8302,71
2014/2015,8581,34
2014/2015,7878,29
2014/2015,9783,35
2014/2015,10205,48
2014/2015,8315,42
2014/2015,10267,70
2015/2016,9906,63
2015/2016,8315,58
2015/2016,7878,46
2015/2016,8370,52
2015/2016,8560,45
2015/2016,10267,46
2015/2016,8634,112
2008/2009,9956,57
2008/2009,10192,85
2008/2009,9931,72
2008/2009,9824,28
2009/2010,10243,55
2009/2010,9931,90
2010/2011,6493,42
2010/2011,10190,34
2011/2012,9956,32
2011/2012,10243,43
2011/2012,10199,46
2012/2013,10191,44
2012/2013,10190,54
2012/2013,10243,62
2012/2013,10192,48
2013/2014,10199,48
2013/2014,10190,37
2013/2014,9956,67
2013/2014,9930,55
2013/2014,10179,38
2014/2015,9930,31
2014/2015,10243,55
2
Query:
-- 10. Find the highest season goals for each team
SELECT "team_api_id", MAX("season_goals") AS "highest_season_goals"
FROM (
  SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
  FROM (
    SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
    FROM EU_SOCcer.EU_SOCcer.MATCH
    UNION ALL
    SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
    FROM EU_SOCcer.EU_SOCcer.MATCH
  ) AS "team_goals"
  GROUP BY "season", "team_api_id"
) AS "season_totals"
GROUP BY "team_api_id"
LIMIT 1000
Answer:
team_api_id,highest_season_goals
8030,45
2182,56
8245,36
2186,57
2183,45
1601,44
8027,43
8021,41
9773,74
7992,25
10214,48
10215,37
10212,46
9764,31
9927,67
8284,53
8023,47
9809,26
4064,27
158085,47
9925,102
8066,64
8429,50
9783,48
8696,49
10192,85
7730,38
9768,79
9984,48
9985,66
8472,48
8689,57
8024,41
6421,30
10243,80
9807,44
9771,35
188163,34
8485,62
8649,55
9931,90
8661,59
10199,66
9999,33
9850,52
10260,89
9847,102
8592,76
8529,56
6269,34
10267,70
9956,67
9989,30
10001,42
8588,40
9789,82
8165,47
8537,39
10218,47
8524,45
8558,47
9938,65
8371,45
9910,51
10252,54
9788,67
8028,49
7869,22
8302,71
9987,64
9991,67
274581,39
8528,47
8678,45
9941,49
9830,40
9827,64
8639,72
4087,54
9837,47
8178,65
9911,39
8406,47
9875,80
10269,63
9800,47
8581,54
6493,44
10191,57
10000,55
8342,69
8573,55
8475,40
8658,38
9829,63
8481,46
9836,38
9748,72
9912,29
8226,72
9905,52
9876,62
8564,72
8534,46
8614,46
8593,106
8674,65
8640,103
9761,45
8525,46
8526,39
8690,30
8635,75
8191,42
8543,67
8295,30
8305,58
1773,46
8655,48
8576,40
8668,61
8456,102
8667,39
8650,101
9853,60
10242,43
8611,82
7788,46
8234,33
8540,59
8686,83
9791,65
10167,58
8322,28
9765,29
10211,35
9868,38
177361,33
8306,45
7896,46
7955,55
9777,45
6367,27
8457,40
108893,21
8398,30
6601,38
9878,27
7947,44
9855,31
9776,29
9976,49
7943,49
208931,37
9746,30
8464,57
8194,39
10265,53
8025,47
8673,60
1957,46
8031,30
8033,40
8020,43
8019,31
6403,43
7841,44
10264,60
10238,41
10251,58
9864,55
8372,49
9906,80
9998,50
10194,48
7844,50
8597,53
8613,27
9772,88
8548,88
7842,47
9865,45
7878,46
8315,66
8394,46
8603,57
10179,63
9986,44
8462,38
8466,59
9851,53
8521,36
9873,50
10189,74
9803,65
8197,68
8479,34
9930,55
8549,28
9825,83
10003,54
10249,68
8721,80
9823,98
9804,58
8600,65
8533,43
8121,40
9810,56
9880,38
10235,76
10213,26
8348,38
10205,61
10268,35
8370,53
8203,48
2033,36
9860,59
8596,37
10190,57
9994,53
8602,46
9798,43
7819,54
9874,60
7794,50
8697,71
8460,31
8636,75
9858,34
10228,79
6547,29
8571,54
6351,28
8455,103
10261,56
8654,65
8559,52
9826,47
9831,58
8722,47
8350,48
8530,50
9885,80
9888,46
8535,72
9857,46
9908,60
10219,44
10217,63
6413,59
6433,45
10281,49
9747,47
8551,40
8242,27
9869,47
9997,35
9879,50
8633,121
9904,60
8152,35
10229,70
8467,58
8634,115
8426,48
9993,45
8586,69
8682,43
8583,46
8358,45
9790,56
10233,62
9839,43
8277,68
9996,42
8659,56
8177,48
9882,49
8569,40
9867,40
8244,27
10278,36
8483,55
9824,44
8560,70
8388,38
10172,43
8357,26
8262,38
4049,35
8344,32
9817,40
8550,31
6391,37
6631,24
4170,31
9891,35
End Exploring Related Columns
Task: Can you calculate the median from the highest season goals of each team?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: To calculate the median from the highest season goals of each team, we perform the following steps:

1. **Calculate Total Goals per Team per Season**: For each team, sum the number of goals scored in each season.
2. **Identify Highest Season Goals per Team**: From these totals, select the highest season goal tally for each team.
3. **Compute the Median**: Calculate the median value of these highest season goals across all teams.

**Result:**

```csv
Median_Highest_Season_Goals
median_value:float
```.
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'EU_SOCCER': {'EU_SOCCER': ['COUNTRY', 'LEAGUE', 'MATCH', 'PLAYER', 'PLAYER_ATTRIBUTES', 'SQLITE_SEQUENCE', 'TEAM', 'TEAM_ATTRIBUTES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-18 01:31:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 01:31:13 - root - INFO - To calculate the median from the highest season goals of each team, we perform the following steps:

1. **Calculate Total Goals per Team per Season**: For each team, sum the number of goals scored in each season.
2. **Identify Highest Season Goals per Team**: From these totals, select the highest season goal tally for each team.
3. **Compute the Median**: Calculate the median value of these highest season goals across all teams.

**Result:**

```sql
WITH total_goals_per_team_season AS (
  SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
  FROM (
    SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
    FROM EU_SOCCER.EU_SOCCER.MATCH
    UNION ALL
    SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
    FROM EU_SOCCER.EU_SOCCER.MATCH
  ) AS "team_goals"
  GROUP BY "season", "team_api_id"
),
highest_season_goals_per_team AS (
  SELECT "team_api_id", MAX("season_goals") AS "highest_season_goals"
  FROM total_goals_per_team_season
  GROUP BY "team_api_id"
)
SELECT MEDIAN("highest_season_goals") AS "Median_Highest_Season_Goals"
FROM highest_season_goals_per_team;
```
2025-01-18 01:31:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:31:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:31:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:31:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 01:31:14 - snowflake.connector.connection - INFO - closed
2025-01-18 01:31:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:31:14 - root - INFO - itercount: 1
2025-01-18 01:31:14 - root - INFO - 0
2025-01-18 01:31:14 - root - INFO - results: 
Median_Highest_Season_Goals
48.000


2025-01-18 01:31:14 - root - INFO - Please check the answer again by reviewing Can you calculate the median from the highest season goals of each team?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To calculate the median from the highest season goals of each team, we perform the following steps:

1. **Calculate Total Goals per Team per Season**: For each team, sum the number of goals scored in each season.
2. **Identify Highest Season Goals per Team**: From these totals, select the highest season goal tally for each team.
3. **Compute the Median**: Calculate the median value of these highest season goals across all teams.

**Result:**

```csv
Median_Highest_Season_Goals
median_value:float
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Median_Highest_Season_Goals
48.000
Current sql:
WITH total_goals_per_team_season AS (
  SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
  FROM (
    SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
    FROM EU_SOCCER.EU_SOCCER.MATCH
    UNION ALL
    SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
    FROM EU_SOCCER.EU_SOCCER.MATCH
  ) AS "team_goals"
  GROUP BY "season", "team_api_id"
),
highest_season_goals_per_team AS (
  SELECT "team_api_id", MAX("season_goals") AS "highest_season_goals"
  FROM total_goals_per_team_season
  GROUP BY "team_api_id"
)
SELECT MEDIAN("highest_season_goals") AS "Median_Highest_Season_Goals"
FROM highest_season_goals_per_team;
2025-01-18 01:31:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 01:31:35 - root - INFO - To calculate the median from the highest season goals of each team, we perform the following steps:

1. **Calculate Total Goals per Team per Season**: For each team, sum the number of goals scored in each season.
2. **Identify Highest Season Goals per Team**: From these totals, select the highest season goal tally for each team.
3. **Compute the Median**: Calculate the median value of these highest season goals across all teams.

**Result:**

```csv
Median_Highest_Season_Goals
48.0000
```

**SQL Query:**

```sql
WITH total_goals_per_team_season AS (
  SELECT "season", "team_api_id", SUM("goals") AS "season_goals"
  FROM (
    SELECT "season", "home_team_api_id" AS "team_api_id", "home_team_goal" AS "goals"
    FROM EU_SOCCER.EU_SOCCER.MATCH
    UNION ALL
    SELECT "season", "away_team_api_id" AS "team_api_id", "away_team_goal" AS "goals"
    FROM EU_SOCCER.EU_SOCCER.MATCH
  ) AS "team_goals"
  GROUP BY "season", "team_api_id"
),
highest_season_goals_per_team AS (
  SELECT "team_api_id", MAX("season_goals") AS "highest_season_goals"
  FROM total_goals_per_team_season
  GROUP BY "team_api_id"
)
SELECT ROUND(MEDIAN("highest_season_goals"), 4) AS "Median_Highest_Season_Goals"
FROM highest_season_goals_per_team;
```
2025-01-18 01:31:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 01:31:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 01:31:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 01:31:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 01:31:37 - snowflake.connector.connection - INFO - closed
2025-01-18 01:31:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 01:31:37 - root - INFO - itercount: 2
2025-01-18 01:31:37 - root - INFO - 0
2025-01-18 01:31:37 - root - INFO - Total iteration counts: 2
