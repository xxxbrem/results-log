2025-01-16 16:59:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:00:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:00:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 17
2025-01-16 17:00:19 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:19 - root - INFO - SQL:
SELECT DISTINCT "country_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Results:
country_code
JP
DK
FI
CA
GB
WO
BE
EP
LU
NL
RU
KR
DE
US
ES
CN
FR

2025-01-16 17:00:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 74
2025-01-16 17:00:20 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:21 - root - INFO - SQL:
SELECT DISTINCT "kind_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Results:
kind_code
A6
I1
T9
U9
H
B8
B3
T4
U4
K4
Z1
A
T3
D1
R1
L
V0
U
Y2
T2
H1
T7
A4
T5
A8
I2
I5
C1
T0
A0
B9
R
K1
B1
S
U8
D2
C3
E1
A7
F
T
T8
A3
K5
D0
E
P1
R2
A2
I4
C
A5
S1
U3
M
P
C2
B4
C5
H3
U0
T1
Y4
B
Y1
Y
A1
P2
P3
C9
B2
A9
U1

2025-01-16 17:00:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:22 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:22 - root - INFO - SQL:
SELECT "publication_number" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "country_code" = 'US' 
     AND "kind_code" = 'B2' 
     AND "grant_date" BETWEEN 20100101 AND 20141231 
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number
US-8098574-B2
US-7857729-B2
US-8080145-B2
US-8053376-B2
US-8178658-B2
US-8576596-B2
US-8579483-B2
US-7852320-B2
US-8892708-B2
US-8075629-B2
US-8087376-B2
US-8552635-B2
US-8893867-B2
US-8350205-B2
US-8404573-B2
US-7788007-B2
US-8909745-B2
US-8492417-B2
US-7805918-B2
US-8288418-B2
US-8851162-B2
US-7871593-B2
US-7830431-B2
US-8608100-B2
US-8253816-B2
US-7929994-B2
US-8486037-B2
US-7646560-B2
US-8332480-B2
US-8774178-B2
US-8427714-B2
US-7792043-B2
US-8514567-B2
US-8191878-B2
US-8718595-B2
US-7928606-B2
US-7668240-B2
US-8585774-B2
US-8502757-B2
US-8471802-B2
US-8862868-B2
US-8328389-B2
US-7738069-B2
US-8405713-B2
US-8648463-B2
US-8696206-B2
US-7657091-B2
US-8290883-B2
US-7973201-B2
US-8906677-B2
US-7649294-B2
US-7933078-B2
US-7921656-B2
US-8554170-B2
US-8245723-B2
US-7877590-B2
US-8317453-B2
US-8304875-B2
US-8171672-B2
US-8713488-B2
US-8056115-B2
US-8261298-B2
US-8189879-B2
US-8474151-B2
US-7847164-B2
US-8144821-B2
US-8491585-B2
US-8165564-B2
US-7869297-B2
US-8829802-B2
US-8221928-B2
US-8416592-B2
US-8328464-B2
US-7785863-B2
US-7725840-B2
US-8152766-B2
US-7976070-B2
US-8785936-B2
US-8115437-B2
US-7999738-B2
US-7939312-B2
US-8268132-B2
US-8276466-B2
US-8070837-B2
US-8243475-B2
US-8019963-B2
US-8854883-B2
US-8088585-B2
US-8376691-B2
US-8299815-B2
US-8342808-B2
US-8434852-B2
US-8051775-B2
US-8862949-B2
US-7975501-B2
US-8100335-B2
US-8112236-B2
US-7818890-B2
US-8430687-B2
US-8907371-B2
US-8049260-B2
US-8130556-B2
US-8263056-B2
US-8489677-B2
US-8876140-B2
US-8114269-B2
US-8742651-B2
US-7976926-B2
US-7702916-B2
US-7893796-B2
US-8178274-B2
US-7977016-B2
US-8408833-B2
US-7641134-B2
US-8110401-B2
US-8733480-B2
US-8587369-B2
US-8045983-B2
US-7678626-B2
US-8629313-B2
US-7805878-B2
US-8398842-B2
US-7903093-B2
US-8718492-B2
US-8579297-B2
US-8536515-B2
US-8315477-B2
US-8138918-B2
US-8847129-B2
US-7838089-B2
US-7709688-B2
US-7877365-B2
US-8646668-B2
US-7966820-B2
US-8848188-B2
US-8030207-B2
US-7931395-B2
US-8507225-B2
US-8761087-B2
US-8455217-B2
US-8848971-B2
US-8105322-B2
US-8513835-B2
US-8709351-B2
US-7939071-B2
US-7946169-B2
US-8264411-B2
US-8531449-B2
US-8110750-B2
US-8461838-B2
US-7890204-B2
US-7928106-B2
US-8022121-B2
US-8601679-B2
US-8330408-B2
US-7800747-B2
US-8510387-B2
US-8038477-B2
US-8673543-B2
US-7853626-B2
US-7679200-B2
US-8864445-B2
US-8395740-B2
US-8146437-B2
US-7933091-B2
US-8421164-B2
US-8576515-B2
US-7722025-B2
US-8570761-B2
US-7945415-B2
US-7920629-B2
US-7874416-B2
US-8646670-B2
US-8254731-B2
US-8458307-B2
US-8236839-B2
US-8870363-B2
US-8503036-B2
US-8178184-B2
US-8879934-B2
US-8547039-B2
US-8802933-B2
US-8103295-B2
US-8673549-B2
US-7690976-B2
US-8142536-B2
US-8164921-B2
US-7841047-B2
US-8561651-B2
US-8274427-B2
US-7797335-B2
US-8780588-B2
US-7863742-B2
US-8271953-B2
US-7845278-B2
US-8837646-B2
US-8873532-B2
US-8669460-B2
US-8448894-B2
US-8776946-B2
US-7739634-B2
US-8792188-B2
US-7979772-B2
US-8521316-B2
US-7868911-B2
US-7916816-B2
US-7828019-B2
US-8689448-B2
US-8428537-B2
US-7794276-B2
US-8454776-B2
US-8050112-B2
US-8069894-B2
US-8575744-B2
US-8270333-B2
US-8823578-B2
US-8695966-B2
US-8616969-B2
US-8570635-B2
US-8271644-B2
US-8817537-B2
US-8512228-B2
US-7672836-B2
US-7698200-B2
US-8754621-B2
US-8282303-B2
US-8855610-B2
US-8748843-B2
US-8329135-B2
US-8356367-B2
US-8719279-B2
US-8600107-B2
US-8370222-B2
US-8334212-B2
US-8666920-B2
US-8661280-B2
US-8197428-B2
US-8492762-B2
US-7785372-B2
US-8163114-B2
US-7655498-B2
US-8150419-B2
US-8399429-B2
US-8807253-B2
US-7762801-B2
US-8077560-B2
US-7933348-B2
US-7655776-B2
US-7883339-B2
US-8611388-B2
US-8469679-B2
US-8403824-B2
US-8006496-B2
US-7815109-B2
US-8176512-B2
US-7990531-B2
US-7904316-B2
US-8001486-B2
US-8844927-B2
US-8825398-B2
US-7740086-B2
US-8025191-B2
US-8187297-B2
US-8628288-B2
US-7893140-B2
US-7812016-B2
US-8032228-B2
US-8676396-B2
US-7766075-B2
US-8199497-B2
US-8537465-B2
US-8845030-B2
US-8788118-B2
US-8303170-B2
US-7742213-B2
US-8349771-B2
US-7772499-B2
US-7876864-B2
US-8535815-B2
US-8099466-B2
US-8848058-B2
US-8150387-B2
US-8870259-B2
US-8121654-B2
US-8181806-B2
US-8397596-B2
US-8303467-B2
US-7871056-B2
US-7773605-B2
US-7647774-B2
US-8364684-B2
US-8419550-B2
US-8123937-B2
US-8698702-B2
US-8652478-B2
US-8558911-B2
US-8278339-B2
US-8213542-B2
US-8700554-B2
US-8201355-B2
US-8267414-B2
US-8843499-B2
US-7681853-B2
US-8232850-B2
US-8395370-B2
US-8379399-B2
US-8340986-B2
US-8336221-B2
US-8836816-B2
US-8866879-B2
US-8010419-B2
US-8269444-B2
US-8723621-B2
US-7688003-B2
US-8532663-B2
US-8197833-B2
US-7771083-B2
US-8306076-B2
US-8181108-B2
US-8725484-B2
US-8333106-B2
US-8458439-B2
US-8002853-B2
US-8711954-B2
US-8024102-B2
US-7916856-B2
US-8544786-B2
US-8387651-B2
US-7892905-B2
US-8811439-B2
US-7955621-B2
US-7876827-B2
US-8728907-B2
US-7757875-B2
US-8023182-B2
US-8384334-B2
US-7975290-B2
US-8186067-B2
US-8408390-B2
US-8334950-B2
US-8051855-B2
US-8516808-B2
US-8134009-B2
US-7716993-B2
US-8100601-B2
US-8059014-B2
US-8107524-B2
US-8717117-B2
US-8810355-B2
US-8582628-B2
US-7918885-B2
US-8726218-B2
US-8688093-B2
US-8251160-B2
US-8358332-B2
US-8029183-

2025-01-16 17:00:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:24 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:24 - root - INFO - SQL:
SELECT "publication_number", "filing_date" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "grant_date" BETWEEN 20100101 AND 20141231 
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,filing_date
CN-101481674-B,20090119
CN-101856496-B,20100607
CN-101481402-B,20080110
RU-2527853-C2,20110407
CN-103300151-B,20130520
CN-101973907-B,20101030
KR-101394639-B1,20071017
CN-102141431-B,20100201
RU-2424708-C1,20100407
US-8503036-B2,20080623
CN-101782287-B,20100324
US-8178184-B2,20050615
CN-102675697-B,20120621
KR-101447906-B1,20140326
CN-102268136-B,20110609
CN-101918781-B,20081206
CN-1900368-B,20060630
CN-102401662-B,20100910
CN-101911547-B,20090106
US-8879934-B2,20110902
CN-102190695-B,20100318
CN-102919589-B,20121101
US-8547039-B2,20090825
KR-101180779-B1,20100705
US-8802933-B2,20110812
CN-101635494-B,20080721
KR-101371301-B1,20120717
US-8103295-B2,20061212
JP-4697146-B2,20070119
US-8673549-B2,20100527
CN-202672589-U,20120609
CN-204011631-U,20140426
KR-101209891-B1,20100716
US-7690976-B2,20050510
DE-10163559-B4,20011221
US-8142536-B2,20070518
KR-101051390-B1,20090831
US-7979772-B2,20070126
CN-102269846-B,20100604
CN-101054797-B,20070427
KR-101386713-B1,20131004
US-8521316-B2,20100331
DE-102008023004-B4,20080509
US-7868911-B2,20041109
CN-102408562-B,20110923
CN-101615589-B,20090227
KR-101031624-B1,20070918
US-7916816-B2,20070514
CN-101696649-B,20090930
CN-101846167-B,20100319
KR-101289882-B1,20110802
US-7828019-B2,20080812
CN-101768464-B,20081231
CN-102381153-B,20110906
US-8689448-B2,20100730
KR-100982341-B1,20080717
US-8428537-B2,20100526
DE-102012018013-B4,20120912
KR-101445255-B1,20140311
KR-100954522-B1,20090824
CN-102610733-B,20120214
CN-1868948-B,20050527
KR-101220314-B1,20101224
CN-101954619-B,20100716
CN-101568840-B,20071114
CN-101031208-B,20050928
US-7794276-B2,20070711
CN-102607119-B,20120316
CN-101068489-B,20050930
CN-102289588-B,20110818
JP-4588412-B2,20041022
CN-101013613-B,20070201
CN-101437343-B,20081218
CN-1986547-B,20051222
CN-101769202-B,20091231
KR-101285604-B1,20120113
CN-102215677-B,20091109
US-7804920-B2,20070330
KR-101396762-B1,20070712
US-8873560-B2,20090708
US-8096767-B1,20090204
US-8018245-B2,20100331
CN-102147421-B,20110117
JP-4554018-B2,20000209
JP-4671613-B2,20040227
DE-202009006300-U1,20090429
US-8677554-B2,20100312
KR-101106670-B1,20090708
CN-101335630-B,20080430
CN-101290793-B,20070910
KR-101033476-B1,20090108
CN-101532358-B,20090311
RU-2456537-C2,20100610
JP-4692491-B2,20070115
US-8799974-B2,20120402
CN-102174561-B,20110227
CN-101606374-B,20071016
CN-101731192-B,20091120
CN-101138342-B,20070928
KR-200472788-Y1,20130123
CN-101704250-B,20091015
US-8186893-B1,20101025
US-8247435-B2,20090219
JP-4653631-B2,20051028
KR-101313714-B1,20120215
JP-4922945-B2,20051216
JP-4690280-B2,20060927
RU-2407738-C1,20090703
CN-102900476-B,20120921
DE-102011100405-A8,20110504
CN-102213846-B,20100401
RU-2450271-C1,20110415
DE-102008005322-B4,20080121
KR-101373341-B1,20070430
US-8879780-B2,20100219
US-7991840-B2,20080124
JP-5247919-B1,20120705
CN-102033895-B,20100921
CN-101678365-B,20080618
CN-101795392-B,20091225
US-7996414-B2,20080229
US-8035765-B2,20100430
CN-101123726-B,20070529
US-8110084-B2,20030528
CN-101719827-B,20091203
RU-2528237-C1,20130311
US-D669262-S,20110321
US-7930043-B2,20060915
CN-101386273-B,20080912
CN-101700312-B,20091130
US-8577652-B2,20101217
US-8220843-B2,20100330
US-7654244-B2,20061208
US-7714430-B2,20060928
CN-101544979-B,20090122
US-7818260-B2,20051012
US-8000428-B2,20021122
KR-101123413-B1,20110513
CN-101495670-B,20060315
US-7841140-B1,20070925
DE-10147817-C5,20010927
CN-102785127-B,20120816
CN-102091984-B,20101216
CN-101379021-B,20070124
CN-1679420-B,20050408
CN-101383562-B,20070905
US-8506318-B2,20120105
CN-102214233-B,20110628
KR-101049028-B1,20100917
KR-101419562-B1,20070618
US-8307070-B2,20091118
US-8239800-B2,20100129
US-8489322-B2,20120124
CN-101547420-B,20090514
CN-101985552-B,20101104
KR-101099207-B1,20090629
KR-101432988-B1,20140402
CN-102328476-B,20110823
RU-2482904-C2,20090326
US-7847668-B2,20080104
US-8872827-B2,20121220
KR-101314878-B1,20060919
KR-100975252-B1,20050805
CN-102500911-B,20111121
GB-2505819-B,20131213
US-8793749-B2,20080825
CN-101950733-B,20100802
US-8913963-B2,20091105
KR-101122062-B1,20100504
CN-102131161-B,20100114
JP-5229230-B2,20081105
CN-102013621-B,20101118
US-8061620-B2,20070727
CN-1767656-B,20021129
RU-2455557-C1,20101223
DE-102008047760-B4,20080917
CN-102047459-B,20090209
KR-101251861-B1,20090202
CN-102457352-B,20101104
JP-4706150-B2,20010827
US-7681473-B2,20041214
RU-2452881-C9,20110216
US-8113379-B2,20090630
KR-101265303-B1,20090811
CN-201607215-U,20090929
CN-202119310-U,20110516
CN-202874595-U,20121031
CN-203948780-U,20140710
CN-202419812-U,20120104
US-8850473-B2,20080201
JP-4562442-B2,20040712
CN-202931279-U,20121116
US-D704796-S,20130621
CN-203788723-U,20140418
JP-5152202-B2,20080122
DE-102004018323-B4,20040413
RU-2466401-C1,20110315
DE-10246456-B4,20021004
US-7818867-B1,20100108
US-8580674-B2,20081209
KR-101241395-B1,20121101
US-8843608-B2,20110922
CN-101934142-B,20100921
KR-101257864-B1,20110530
NL-2008945-C,20120606
CN-102028000-B,20101101
CN-102082310-B,20101103
CN-102771381-B,20120727
CN-10161366

2025-01-16 17:00:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 589
2025-01-16 17:00:27 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:27 - root - INFO - SQL:
SELECT t."publication_number", f.value AS "citation" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t, 
        LATERAL FLATTEN(input => t."citation") f 
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,citation
US-2010250896-A1,"{
  ""application_number"": """",
  ""category"": ""PRS"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2008098083-A1"",
  ""type"": """"
}"
US-2010250896-A1,"{
  ""application_number"": """",
  ""category"": ""PRS"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2008294696-A1"",
  ""type"": """"
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-4700972-A"",
  ""type"": ""Y""
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""EP-0818372-A2"",
  ""type"": ""I""
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6470731-B1"",
  ""type"": ""Y""
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2003144786-A1"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2005206905-A"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2009105299-A"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""WO-2009085098-A1"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2010070726-A"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""See also references of EP     2615635A4"",
  ""publication_number"": """",
  ""type"": """"
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-H08217728-A"",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""ATTARD G S ET AL: \""NON-SYMMETRIC DIMERIC LIQUID CRYSTALS THE PREPARATION AND PROPERTIES OF THE -(4-CYANOBIPHENYL-4'YLOXY)- -(4-N-ALKYLANILINEBENZYLIDENE-4'OXY) ALKANES\"", LIQUID CRYSTALS,GB,TAYLOR AND FRANCIS LTD, LONDON, vol. 16, no. 4, 1 April 1994 (1994-04-01), pages 529 - 581, XP000434147, ISSN: 0267-8292"",
  ""publication_number"": """",
  ""type"": ""X""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""DATABASE WPI Section Ch Week 199644, Derwent Publications Ltd., London, GB; Class E19, AN 1996-439519, XP002138959"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""G.R. LUCKHURST ET AL.: \""the intercalated smectic A phase The liquid crystal properties of the alpha-(4-cyanobiphenyl-4'-yloxy)-omega-(4-alkyloxycinnamate)alkanes\"", LIQUID CRYSTALS, vol. 18, no. 5, 1995, pages 801 - 809, XP002138958"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""ROZHANSKII I L ET AL: \""SYNTHESIS AND THERMAL PROPERTIES OF DIMERIC ALKOXY-SUBSTITUTED TOLANS\"", LIQUID CRYSTALS,GB,TAYLOR AND FRANCIS LTD, LONDON, vol. 21, no. 5, 1 November 1996 (1996-11-01), pages 631 - 643, XP000639766, ISSN: 0267-8292"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""TSVETKOV N V ET AL: \""ELECTRO-OPTICAL PROPERTIES OF 4,4'-BIS-UW-(4-CYANOBIPHENYL-4'-YLOXYAL KYLOXY BIPHENYLS NEMATICS\"", LIQUID CRYSTALS,GB,TAYLOR AND FRANCIS LTD, LONDON, vol. 22, no. 3, 1 March 1997 (1997-03-01), pages 245 - 253, XP000699097, ISSN: 0267-8292"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""WATANABE ET AL.: \""antiferroelectric smectic liquid crystal formed by achiral twin dimer with two mesgenic groups linked by alkylene spacer\"", JAPANESE JOURNAL OF APPLIED PHYSICS, PART 2 (LETTERS), vol. 37, no. 4A, 1 April 1998 (1998-04-01), pages L401 - L403, XP000885224"",
  ""publication_number"": """",
  ""type"": ""X""
}"
WO-2009043548-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2905245-A"",
  ""type"": ""Y""
}"
WO-2009043548-A1,"{
  ""application_num

2025-01-16 17:00:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 81
2025-01-16 17:00:32 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:32 - root - INFO - SQL:
SELECT "publication_number", "embedding_v1" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB 
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,embedding_v1
CA-27-A,"[
  1.542691000000000e-01,
  -1.512821800000000e-01,
  -1.650247300000000e-01,
  6.317439500000000e-03,
  -6.877411000000000e-02,
  7.857726000000000e-02,
  1.997577000000000e-02,
  -1.052709150000000e-01,
  1.906607200000000e-01,
  -3.087626800000000e-02,
  -4.402885000000000e-02,
  -1.932268600000000e-02,
  1.498914700000000e-01,
  -1.014574240000000e-01,
  1.522054700000000e-01,
  2.159083800000000e-02,
  3.287851200000000e-01,
  -3.723864300000000e-02,
  -1.093368460000000e-01,
  -2.695568300000000e-02,
  5.093054000000000e-03,
  -2.561860000000000e-02,
  -8.104277999999999e-02,
  4.378689000000000e-02,
  1.772555000000000e-01,
  1.866227200000000e-01,
  4.738728700000000e-02,
  1.293443900000000e-01,
  -9.107929000000001e-03,
  -5.338581700000000e-03,
  -5.402789600000000e-02,
  9.968319500000000e-02,
  -1.297268900000000e-01,
  -6.103027600000000e-02,
  1.034460960000000e-01,
  -1.370337900000000e-01,
  -1.529048900000000e-02,
  -7.281200600000000e-02,
  -6.650846000000000e-03,
  -5.688674000000000e-02,
  -5.571032000000000e-02,
  -2.353075000000000e-02,
  1.588186900000000e-01,
  1.485413600000000e-01,
  1.301227400000000e-02,
  7.831083000000000e-02,
  -1.220956100000000e-01,
  -3.694782800000000e-02,
  1.388754100000000e-01,
  -1.948010500000000e-01,
  1.644870500000000e-02,
  -1.159949600000000e-01,
  7.601101000000000e-02,
  -1.079300800000000e-01,
  3.773738400000000e-02,
  -3.411133600000000e-01,
  1.087194160000000e-01,
  3.469542000000000e-01,
  -1.208127800000000e-01,
  2.158840900000000e-01,
  -1.885225600000000e-02,
  -4.778167200000000e-02,
  1.922371400000000e-01,
  8.118848500000000e-02
]"
ES-81-Y,"[
  5.887155000000000e-02,
  -1.084279900000000e-01,
  -7.473050000000000e-03,
  -1.078326500000000e-01,
  -1.136954200000000e-01,
  -5.629550000000000e-02,
  -1.293592000000000e-01,
  1.470960500000000e-02,
  1.143989640000000e-01,
  -6.502111000000000e-03,
  1.211329850000000e-01,
  -1.472910300000000e-01,
  1.433625000000000e-01,
  -1.972437000000000e-01,
  -1.466153400000000e-01,
  6.347028000000000e-02,
  1.704387400000000e-01,
  -1.788644500000000e-01,
  -2.144294800000000e-01,
  -5.971858000000000e-02,
  -1.807118600000000e-02,
  9.654319999999999e-03,
  -6.319642000000000e-02,
  -1.158018000000000e-01,
  1.591617600000000e-01,
  -8.069207000000000e-02,
  2.444405900000000e-01,
  2.053556900000000e-01,
  2.203187000000000e-01,
  4.123914000000000e-02,
  -1.226528360000000e-01,
  1.756981200000000e-01,
  1.406480400000000e-01,
  -2.614098500000000e-01,
  -3.579098400000000e-02,
  -3.342285000000000e-02,
  5.340901400000000e-02,
  -2.008394400000000e-01,
  7.221930000000000e-02,
  1.083169000000000e-01,
  -1.035950600000000e-01,
  4.522684600000000e-02,
  2.121584000000000e-01,
  -3.648881000000000e-02,
  -4.667341700000000e-02,
  -8.133340000000000e-02,
  -5.762764000000000e-02,
  1.715386000000000e-01,
  -6.118799400000000e-02,
  -1.188068800000000e-01,
  -4.722248400000000e-02,
  -8.758543000000001e-02,
  -1.545800400000000e-02,
  -1.725661600000000e-02,
  -1.594496200000000e-01,
  -3.453176000000000e-02,
  -7.645045000000000e-02,
  9.057411999999999e-02,
  -3.059179000000000e-01,
  1.417563600000000e-01,
  4.234178700000000e-02,
  6.612614000000000e-02,
  1.629971300000000e-02,
  8.276451000000000e-02
]"
DE-303-C,[]
ES-866-Y,"[
  2.173252600000000e-01,
  -5.955347000000000e-02,
  -8.669304000000000e-02,
  -1.435769700000000e-02,
  -1.091980100000000e-01,
  -5.290851000000000e-02,
  -1.218726560000000e-01,
  -1.733191000000000e-02,
  1.428825100000000e-01,
  4.071840600000000e-02,
  1.569196900000000e-01,
  2.504207000000000e-02,
  1.646801100000000e-01,
  -1.555543000000000e-01,
  -1.366939400000000e-01,
  1.551018000000000e-01,
  2.533057300000000e-01,
  -1.034493300000000e-01,
  -3.249411000000000e-03,
  -1.919896700000000e-02,
  -3.357952500000000e-02,
  7.957726000000000e-02,
  -8.258553000000000e-02,
  -1.893159400000000e-01,
  1.380639200000000e-01,
  -1.185456100000000e-01,
  2.993756800000000e-01,
  1.806876800000000e-01,
  2.209677700000000e-01,
  1.239111650000000e-01,
  -3.356762600000000e-02,
  1.042425860000000e-01,
  1.649517100000000e-01,
  -2.388138300000000e-01,
  1.648602600000000e-02,
  -8.377965499999999e-02,
  1.231861600000000e-01,
  -1.706603200000000e-01,
  1.260255400000000e-01,
  1.798895000000000e-01,
  -1.287039000000000e-01,
  5.932817000000000e-02,
  1.091629300000000e-01,
  -9.887335000000000e-02,
  1.712858300000000e-02,
  -1.140154700000000e-01,
  2.210558600000000e-02,
  9.686722000000000e-02,
  -5.223890000000000e-02,
  -2.214440900000000e-01,
  -1.367440600000000e-02,
  -9.799734500000000e-02,
  6.677625000000000e-02,
  1.251626600000000e-01,
  -2.030494800000000e-01,
  -1.921786200000000e-02,
  -3.204157000000000e-02,
  4.560034300000000e-03,
  -1.331128200000000e-01,
  8.321140000000000e-02,
  -6.589308000000001e-02,
  7.723393000000001e-02,
  2.468057500000000e-02,
  6.641050400000000e-02
]"
FI-150-A,"[
 

2025-01-16 17:00:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:33 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:34 - root - INFO - SQL:
SELECT "publication_number", "filing_date" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "filing_date" BETWEEN 20100101 AND 20101231 
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,filing_date
KR-101017597-B1,20101007
US-8463797-B2,20100720
CN-102241207-A,20100513
KR-101142843-B1,20100621
CN-101872406-A,20100429
CN-102031202-B,20101208
DE-102010031283-A1,20100713
US-2010200533-A1,20100209
US-2012082307-A1,20100615
US-2011064191-A1,20100810
US-9005975-B2,20100528
WO-2010106166-A3,20100319
CN-102544456-A,20101214
US-9384181-B2,20101220
CN-102082235-A,20101124
CN-102050619-A,20100802
CN-102479708-B,20101125
KR-101444849-B1,20100107
JP-2012531173-A,20100622
CN-101945350-A,20100906
US-8761324-B1,20100513
CN-102498613-A,20100907
CN-101837370-A,20100427
US-8661329-B1,20100325
US-2011053199-A1,20100823
EP-2415362-A1,20100401
JP-2012047932-A,20100826
CN-102428372-A,20100520
CN-102652304-A,20101213
CN-102054899-B,20100621
EP-2406820-A1,20100304
CN-102450718-B,20101029
US-2012106616-A1,20101029
US-9186273-B2,20100504
US-2011018200-A1,20100722
US-2011291896-A1,20100527
US-2012187663-A1,20100621
US-2011153031-A1,20101220
JP-2013517010-A,20101012
EP-2471945-A1,20101230
US-2012173009-A1,20100325
US-2012233622-A1,20101124
CN-101914234-A,20100729
EP-2385676-A1,20100507
CN-101884362-A,20100614
EP-2434689-A1,20101119
JP-2011222733-A,20100409
WO-2011049397-A2,20101022
US-2011204460-A1,20100219
US-2011021348-A1,20101001
US-9129035-B2,20101005
US-2012025810-A1,20100329
US-7818867-B1,20100108
CN-101934142-B,20100921
KR-20120011656-A,20100729
US-2010245586-A1,20100303
CN-102712194-A,20101214
CN-102028000-B,20101101
CN-102082310-B,20101103
US-2010177864-A1,20100113
EP-2461968-A2,20100611
KR-20120095970-A,20101118
US-8208209-B2,20100415
EP-2223733-A1,20100219
CN-101926889-B,20100809
CN-104333392-B,20100127
KR-101221655-B1,20100824
CN-102714682-B,20100406
WO-2010102006-A2,20100303
US-2012112759-A1,20101109
EP-2305586-A2,20100921
EP-2421060-A1,20100412
US-2011103102-A1,20100222
US-2011252003-A1,20100409
US-2011313882-A1,20100621
EP-2401701-A4,20100219
US-2011001937-A1,20100907
US-8721767-B2,20100907
KR-101008573-B1,20100618
CN-102116427-A,20101216
EP-2402518-A1,20100630
CN-101924570-B,20100611
EP-2416294-A1,20100326
EP-2216590-B1,20100205
KR-101144114-B1,20101025
CN-102154432-A,20101220
CN-102474509-A,20100623
JP-2010246929-A,20100415
US-8351787-B2,20100106
US-2012144352-A1,20101201
US-2010242978-A1,20100409
WO-2011021782-A2,20100720
US-2011152549-A1,20101223
US-2011030117-A1,20100721
KR-101354866-B1,20100707
US-8539609-B2,20100701
RU-2498624-C2,20100614
CN-101750679-B,20100121
DE-102010008779-A1,20100222
CN-101944317-A,20100430
CN-102117784-A,20100812
CN-102055372-A,20101026
EP-2391579-A2,20100202
US-8130337-B2,20100121
WO-2011037202-A1,20100924
US-2012000267-A1,20100704
KR-101001842-B1,20100128
KR-20130121913-A,20101130
US-8168945-B2,20101025
US-8531215-B2,20101110
US-2017112864-A1,20101129
JP-2011229356-A,20100625
US-2012045336-A1,20100511
US-2011180674-A1,20100125
CN-102031341-A,20101211
CN-102290655-A,20100621
CN-102548855-A,20100702
JP-2012101748-A,20101112
US-8348691-B2,20100923
JP-2012036232-A,20100803
WO-2011089783-A1,20101124
JP-2011212197-A,20100331
US-9032150-B2,20100917
WO-2010111045-A1,20100311
JP-2012092690-A,20101026
US-8255845-B2,20100528
US-2012181249-A1,20100929
EP-2216080-A1,20100204
CN-102403137-A,20100917
KR-200453197-Y1,20100310
US-2011027214-A1,20100125
CN-102480671-B,20101126
KR-101158084-B1,20100416
US-8527613-B2,20100126
JP-2010214373-A,20100520
US-2010243777-A1,20100322
CN-102042450-A,20101206
CN-101785749-B,20100209
KR-101424324-B1,20100608
US-8285841-B2,20100607
EP-2233627-A3,20100216
CN-102630181-B,20100917
US-8612463-B2,20100603
KR-100986634-B1,20100104
CN-101954100-A,20100916
ES-2388550-A1,20100119
CN-102388253-A,20100406
JP-2012066873-A,20101112
KR-101754588-B1,20101209
JP-2012003479-A,20100616
US-9657880-B2,20101209
CN-102040365-A,20101103
CN-102640582-A,20101130
US-2011203873-A1,20100222
JP-2011157773-A,20100203
EP-2590873-A1,20100709
CN-101854407-A,20100329
GB-2486649-A,20101221
KR-200469113-Y1,20101224
CN-102274071-A,20100611
CN-101905595-B,20100702
WO-2011072482-A1,20101214
KR-101355269-B1,20100825
WO-2010083028-A1,20100113
EP-2504856-A1,20101123
EP-2419872-A2,20100412
EP-2296235-A3,20100616
KR-101242859-B1,20101105
CN-102372992-A,20100818
US-8740070-B2,20100506
KR-101705581-B1,20100930
US-8682331-B2,20100209
JP-2012075499-A,20100930
WO-2010130549-A3,20100423
WO-2011002863-A2,20100630
JP-2012109642-A,20101115
US-2011143697-A1,20100827
JP-2011178625-A,20100302
US-2010202071-A1,20100111
JP-2012532198-A,20100706
CN-102473522-A,20100701
NL-2004939-C,20100622
CN-102567190-A,20101214
CN-102811863-B,20100121
CN-102128368-B,20101103
US-2012066691-A1,20100914
US-2010215517-A1,20100329
DE-102010024324-B4,20100618
JP-2012112137-A,20101124
US-2010311245-A1,20100603
CN-101936172-B,20100806
CN-102948053-B,20100608
CN-101775450-B,20100305
CN-102531399-A,20101215
DE-102010011643-A1,20100316
CN-101830287-A,20100430
CN-102527430-B,20101229
US-2011107209-A1,20100830
US-2013031929-A1,20101213
US-2010266753-A1,20100630
WO-2011041636-A1,20101001
DE-102010027876-A1,20100416
WO-

2025-01-16 17:00:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 161
2025-01-16 17:00:35 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:36 - root - INFO - SQL:
SELECT DISTINCT SUBSTRING(CAST("filing_date" AS TEXT), 1, 4) AS "filing_year" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Results:
filing_year
1930
2006
1937
1903
1840
1970
1941
1884
2012
2000
1905
1907
1885
1889
1898
1881
2016
2015
1987
1949
1887
1995
1912
1879
2002
1934
1925
1916
1917
1975
1959
1919
1902
1893
1875
1988
1976
1955
1901
1928
1940
2005
1945
1960
1972
1911
1895
1992
2013
1951
2007
1961
1974
1913
1931
1899
1985
1986
1993
1890
1968
1935
2017
1828
1967
1939
2009
1950
1998
1933
1921
1991
1914
1878
1979
1980
1981
1999
1876
1997
1880
2014
1963
1952
1920
1856
2008
1915
1946
2003
1956
1948
1863
1927
1850
1852
1910
2010
1926
1924
1864
0
1953
1996
1938
2011
1989
2004
1909
1969
1929
1936
1962
1918
1897
1922
1923
1865
1994
1854
1965
1982
1851
1964
1947
1906
1900
1848
1859
1966
1877
1973
1954
1883
1944
1867
1866
1983
1978
1904
1868
1942
1908
1861
1871
1971
1943
1896
1860
1858
1958
1990
1984
1874
1977
1857
2001
1957
1932
1894
1882

2025-01-16 17:00:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:37 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:38 - root - INFO - SQL:
SELECT "publication_number", "country_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,country_code
JP-1810118-C,JP
JP-1203714-C,JP
FR-1500580-A,FR
ES-8501233-A1,ES
CA-2165155-A1,CA
FR-2409943-B1,FR
GB-1086860-A,GB
JP-S54117658-A,JP
JP-H0710178-Y2,JP
JP-3172057-B2,JP
US-136580-A,US
US-272220-A,US
US-599187-A,US
CN-1062411-C,CN
DE-1479218-U,DE
EP-2512367-B1,EP
ES-2312527-T3,ES
FR-1000748-A,FR
FR-1573809-A,FR
JP-S5066757-U,JP
JP-S5845249-Y2,JP
US-2103405-A,US
GB-201114438-D0,GB
JP-5707248-B2,JP
JP-2016211567-A,JP
KR-20040075216-A,KR
CN-1954806-A,CN
CN-201399214-Y,CN
JP-1368881-C,JP
JP-1444589-C,JP
FR-1497898-A,FR
DE-2707796-A1,DE
DE-2962208-D1,DE
FR-2233137-A1,FR
GB-2224027-B,GB
JP-S5911756-Y2,JP
JP-2000218515-A,JP
JP-S56169301-A,JP
US-2002102047-A1,US
CN-1467804-A,CN
EP-0988417-B1,EP
JP-H04334685-A,JP
JP-S6359143-U,JP
JP-H0685910-B2,JP
JP-H0350567-B2,JP
JP-5108773-B2,JP
CN-2768052-Y,CN
CN-1940157-B,CN
CN-202318915-U,CN
CN-203200362-U,CN
JP-897785-C,JP
JP-1789132-C,JP
JP-S62113530-U,JP
CA-118661-S,CA
FI-882364-A0,FI
CA-810158-A,CA
DE-2335240-A1,DE
DE-7610943-U1,DE
JP-H0673947-U,JP
JP-S54153049-A,JP
JP-S5716116-U,JP
US-548167-A,US
CN-1055840-A,CN
JP-S6020713-A,JP
JP-S6234024-A,JP
JP-H0995081-A,JP
JP-H1088758-A,JP
GB-189709494-A,GB
JP-2001195445-A,JP
JP-2010101160-A,JP
CN-101746294-A,CN
CN-104170353-A,CN
CN-206056613-U,CN
JP-1032657-C,JP
JP-1654837-C,JP
DK-146223-C,DK
CA-564325-A,CA
GB-0802422-D0,GB
JP-S53139175-U,JP
JP-H01150349-U,JP
JP-2600796-Y2,JP
JP-S591896-U,JP
JP-S4922438-B1,JP
US-419959-A,US
DE-69331528-D1,DE
DE-69430885-T2,DE
EP-1474362-B1,EP
JP-2000346423-A,JP
JP-2765752-B2,JP
KR-900003183-Y1,KR
JP-2003229053-A,JP
JP-2007241524-A,JP
JP-5129599-B2,JP
KR-100547071-B1,KR
KR-20070020426-A,KR
KR-20130050682-A,KR
CN-204556165-U,CN
ES-66185-Y,ES
CA-1331409-C,CA
FI-891492-A0,FI
GB-1348507-A,GB
JP-S60179587-U,JP
US-332138-A,US
CN-1112492-C,CN
DE-566539-C,DE
DE-845109-C,DE
JP-S63125649-A,JP
JP-S6423693-U,JP
JP-S5243021-U,JP
JP-S5566205-U,JP
JP-H0825023-B2,JP
JP-2003215980-A,JP
JP-4255884-B2,JP
KR-100295305-B1,KR
CN-101547005-A,CN
CN-101988676-A,CN
CN-203259375-U,CN
CN-205932945-U,CN
DE-202006018912-U1,DE
FR-2828332-A1,FR
GB-1375879-A,GB
JP-S53161674-U,JP
US-2053075-A,US
CN-2484753-Y,CN
CN-1212523-A,CN
FI-20010786-A,FI
JP-S6359144-U,JP
JP-2799203-B2,JP
JP-H08143121-A,JP
US-1837725-A,US
US-2304134-A,US
US-1864623-A,US
JP-5991128-B2,JP
JP-2016105749-A,JP
RU-2191214-C2,RU
RU-2008140707-A,RU
CN-103265598-B,CN
CN-203928708-U,CN
CN-204557664-U,CN
CN-206326242-U,CN
CN-104559893-B,CN
CN-106856628-A,CN
US-6778773-B2,US
JP-H00985753-A,JP
JP-1512007-C,JP
NL-28211-C,NL
CA-2184504-C,CA
FR-877274-A,FR
JP-S60218905-A,JP
JP-H04326774-A,JP
JP-S5125160-A,JP
FR-1012104-A,FR
JP-S5944363-A,JP
JP-H081564-A,JP
US-1233474-A,US
US-2002011230-A1,US
JP-2003169856-A,JP
US-811638-A,US
KR-200338652-Y1,KR
KR-20070041890-A,KR
CN-1816294-A,CN
CN-2858160-Y,CN
CN-201276086-Y,CN
CN-201816145-U,CN
CN-102907994-A,CN
JP-1573454-C,JP
JP-1721868-C,JP
JP-2100371-C,JP
DK-358583-D0,DK
ES-146285-Y,ES
GB-478690-A,GB
DE-2649618-B2,DE
DE-3766112-D1,DE
DE-8007402-U1,DE
FR-390089-A,FR
FR-638126-A,FR
FR-2638622-B1,FR
JP-H0584037-U,JP
JP-S4739450-Y1,JP
JP-H0642846-U,JP
NL-296405-A,NL
NL-7211943-A,NL
EP-2781788-B1,EP
JP-S5072414-U,JP
JP-S5846920-U,JP
JP-S5874811-U,JP
JP-S5687776-U,JP
US-D279853-S,US
KR-920008597-Y1,KR
JP-2004313014-A,JP
JP-6137070-B2,JP
RU-2008132286-A,RU
US-754320-A,US
CN-105823611-A,CN
CN-106739164-A,CN
CN-205558012-U,CN
BE-512467-A,BE
CA-2244766-A1,CA
DE-1803332-A1,DE
DE-2149141-A1,DE
GB-2089320-A,GB
JP-S62164685-U,JP
JP-H066780-Y2,JP
DE-69322442-T2,DE
EP-1933436-B1,EP
EP-0782478-B1,EP
EP-0993180-B1,EP
JP-S5128923-U,JP
JP-S5153284-U,JP
JP-S5376919-A,JP
JP-3340813-B2,JP
JP-2000192758-A,JP
JP-H11193667-A,JP
RU-17326-U1,RU
KR-20110049427-A,KR
CN-101531763-A,CN
CN-201900010-U,CN
CN-202142477-U,CN
CN-202417422-U,CN
CN-202807027-U,CN
CA-27189-A,CA
JP-S4874140-A,JP
JP-2887866-B2,JP
FR-2239893-A5,FR
JP-H09201246-A,JP
JP-S6125607-Y2,JP
JP-H069665-Y2,JP
JP-H02145867-U,JP
DE-1899993-U,DE
DK-1279779-T3,DK
EP-1395943-B1,EP
JP-S61104472-A,JP
US-3605178-A,US
ES-2301340-B1,ES
KR-890006762-Y1,KR
KR-910005717-Y1,KR
JP-WO2006134667-A1,JP
JP-WO2011121828-A1,JP
JP-6013229-B2,JP
KR-200371816-Y1,KR
KR-20040093694-A,KR
CN-104911016-A,CN
JP-1721970-C,JP
JP-H00979262-A,JP
JP-2045702-C,JP
CA-607467-A,CA
CA-870537-A,CA
DE-2913333-C2,DE
GB-2156898-B,GB
GB-9701425-D0,GB
DE-69108459-T2,DE
DE-69402587-D1,DE
DE-690465-C,DE
JP-S5354430-A,JP
JP-S5788835-A,JP
JP-H0510017-A,JP
JP-H08159838-A,JP
US-1863894-A,US
JP-4882580-B2,JP
JP-5210626-B2,JP
RU-2345965-C2,RU
RU-2355420-C2,RU
KR-100352139-B1,KR
KR-100387884-B1,KR
KR-20120048256-A,KR
CN-201742521-U,CN
CN-202693633-U,CN
CN-202679530-U,CN
CN-106625363-A,CN
CN-205519698-U,CN
JP-1260064-C,JP
DE-54582-C,DE
ES-128308-A1,ES
DE-2516533-A1,DE
GB-0905075-D0,GB
GB-192211-A,GB
JP-2605593-Y2,JP
JP-S5020200-Y2,JP
JP-S524076-A,JP
DE-19811661-A1,DE
DE-29605835-U1,DE
DE-69131766-T2,DE
EP-2982223-A2,EP
EP-0172283-B1,EP
JP-S5743740-U,JP
JP-H04296316-A,JP
US-D487006-S,US
US-3538803-A,US
US-2002044447-A1,US
JP-2003225

2025-01-16 17:00:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:39 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:40 - root - INFO - SQL:
SELECT "publication_number", "title" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB 
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,title
CA-27-A,Improvement on spinning wheel
ES-81-Y,Improvements heels for footwear.
DE-303-C,
ES-866-Y,Improvements gravestones tombs and funerary niches.
FI-150-A,"The monitor method for preparing dubbelugnar for the preparation af tjära, lysolja, terpentin mm.  ur furustubbar Science Notter"
FI-250-A,Sjelfläggningsapparat to the skördemaskiner
FR-336-E,Improvements in the processing of cotton and cotton goods to make them nonflammable
NL-284-C,
NL-947-C,
BE-107-T1,Bouches fire.
CA-1911-A,A ralway track clearer
CA-4005-A,Leather scouring machine
CA-4106-A,Automatic car-coupling
CA-4698-A,Ladies&#39; work table
CA-4801-A,Washing machine
CA-5943-A,Improvement on bed bottoms
CA-6183-A,Improvements in wood planing machines
CA-6207-A,Improvements in lamps
CA-6390-A,Reversible plough
CA-6969-A,Machine for making spirally formed tubes
CA-8931-S,Bottle
CA-9897-A,Improvements on fare registers
DE-3129-C,
DE-3301-C,
DE-3884-C,
DE-3983-C,
DE-5976-C,
DK-2807-C,Process for the preparation of soluble salts of barium.
DK-3080-C,Devices in trays for packing eggs.
DK-3107-C,The production method for Smedejærns Finned with continuous helical rib.
DK-3184-C,Water Pitcher.
DK-3510-C,Device at the apparatus for the production of acetylene.
DK-5867-C,Automatic oiler Snækker and Snækkehjul in centrifuges.
DK-5921-C,Ankerbevikling with open coils for generators or motors with one-way Power.
DK-6491-A,Cable mounting of the guard device for a telecommunications cable
DK-7210-C,"Alloy of nickel, aluminum, copper and iron."
DK-8069-C,"Receiver means for rotating steam, gas or combustion products and the like that is also useful as a gas compressor."
DK-8466-C,Method and apparatus for extracting sulfur and Cyanides in the purification of from Belysningsgas.
DK-9281-C,Method for Preparation of an image bearer of photosensitive papers.
DK-9359-C,Device at Telephone exchange.
ES-1062-U,Truck for transport of concrete and mortar tilting download and auto-return to the loading position.
ES-1498-U,Razor.
ES-1524-Y,Device cuvette for containing papers.
ES-1872-U,Packing box for rolls of raw rubber.
ES-2542-Y,Purse fastening system.
ES-2819-Y,"Burning stove liquids, essentially diesel fuel."
ES-2960-U,Tong for sewing straps.
ES-3045-U,Sliding adjuster for clothing
ES-4483-Y,Improved sealing tap water.
ES-4723-Y,Pocket electric lamp.
ES-4858-U,A simplified shaving machine
ES-5089-Y,Breastplate of interposition between the foot and the shoe.
ES-5219-Y,Cigarette paper sheet.
ES-5716-U,A protective cardboard disc to facilitate changes retaining therein a stamp
ES-5975-Y,Bottle or container with inner compartments that allow contain different kinds of liquids.
ES-6454-U,Fonmularios game combined with carbon paper for use in typewriters.
ES-6552-Y,protection against low temperatures shirt.
ES-6928-Y,Clamping device straps to the handles of wristwatches.
ES-6962-Y,Provided cork extraction medium.
ES-7086-Y,Device in gas carbide drive motors.
ES-7407-Y,Folding bike reduced rate.
ES-7489-Y,Cover or wrapper to protect the crowns of rayon.
ES-7516-U,Plywood floors for shoemaking.
ES-7538-U,"Simile, girdle, bra and panty."
ES-764-H3,Machine to raise water called fast ferris wheel
ES-8269-Y,Shuttering elements or molded or reinforced concrete floors lighten parts.
FI-1825-A,The process of at verkställande Evaporation at high the temperaturer Science To this was apparat
FI-291-U1,Utloppsfoerbindning in a substitutionsluftinslaeppningsventil
FI-3021-A,Förbättring à formmaskiner for cementrör med-regulating device for formlådans of skakningrörelse
FI-4211-A,Four-stroke internal combustion engine ignition device
FI-4543-A,Invertlampa for conveyance brännämne
FI-8034-A,The way to handle sulfitijätelipeää
FI-8619-A,Manner for the preparation of trådar of Varje finhet ur råviskos
FI-8985-A,Förgasare for förbränningskraftmaskiner with a rotatably i förgasarkroppen stryporgan
FI-902-U1,Sparkstoetting
FR-1186-E,New Bunsen burner of the kind to recovery and two concentric flames
FR-1382-E,An automatic switch
FR-1550-M,"pharmaceutical product based on total capsicum extract, polyvinylpyrrolidone and ergotamine tartrate."
FR-2064-E,Incandescent lamp with alcohol
FR-2510-M,New medicament for the treatment of staphylococcal infections and the like.
FR-2578-M,"A pharmaceutical composition for the treatment of all anemia, asthenia and convalescence states."
FR-2635-E,Improvement in the keyboard musical instruments
FR-3293-M,Drug acting on the central nervous system and having in particular anti-anxiety and tranquilizing properties was based on new sulfonamides.
FR-5174-E,A mobile machine for mixing and at the same time heat the asphalt and similar materials
FR-5770-E,Free wheel
FR-7085-M,
FR-7747-E,Doler machine and sand the skin for the glove
FR-8053-M,
FR-8143-M,
NL-3613-C,
NL-4187-C,
NL-5034-C,
NL-9752-C,
NL-9761-C,
RU-815-U1,Transport and sorting conveyor
US-1260-A,Improvement in nott s stove
US-1844-A,John kirkman
US-3704-A,Tongtjing and grooving 

2025-01-16 17:00:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:41 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:42 - root - INFO - SQL:
SELECT "publication_number", "grant_date", "kind_code" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    WHERE "grant_date" IS NOT NULL 
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,grant_date,kind_code
JP-1810118-C,0,C
JP-1203714-C,0,C
FR-1500580-A,19671103,A
ES-8501233-A1,0,A1
CA-2165155-A1,0,A1
FR-2409943-B1,19800822,B1
GB-1086860-A,0,A
JP-S54117658-A,0,A
JP-H0710178-Y2,19950308,Y2
JP-3172057-B2,20010604,B2
US-136580-A,18730311,A
US-272220-A,18830213,A
US-599187-A,18980215,A
CN-1062411-C,20010228,C
DE-1479218-U,0,U
EP-2512367-B1,20131113,B1
ES-2312527-T3,20090301,T3
FR-1000748-A,19520215,A
FR-1573809-A,19690711,A
JP-S5066757-U,0,U
JP-S5845249-Y2,19831014,Y2
US-2103405-A,19371228,A
GB-201114438-D0,20111005,D0
JP-5707248-B2,20150422,B2
JP-2016211567-A,0,A
KR-20040075216-A,0,A
CN-1954806-A,0,A
CN-201399214-Y,20100210,Y
JP-1368881-C,0,C
JP-1444589-C,0,C
FR-1497898-A,19671013,A
DE-2707796-A1,0,A1
DE-2962208-D1,19820325,D1
FR-2233137-A1,0,A1
GB-2224027-B,19920115,B
JP-S5911756-Y2,19840410,Y2
JP-2000218515-A,0,A
JP-S56169301-A,0,A
US-2002102047-A1,0,A1
CN-1467804-A,0,A
EP-0988417-B1,20060823,B1
JP-H04334685-A,0,A
JP-S6359143-U,0,U
JP-H0685910-B2,19941102,B2
JP-H0350567-B2,19910802,B2
JP-5108773-B2,20121226,B2
CN-2768052-Y,20060329,Y
CN-1940157-B,20110413,B
CN-202318915-U,20120711,U
CN-203200362-U,20130918,U
JP-897785-C,0,C
JP-1789132-C,0,C
JP-S62113530-U,0,U
CA-118661-S,20080124,S
FI-882364-A0,0,A0
CA-810158-A,19690408,A
DE-2335240-A1,0,A1
DE-7610943-U1,19760729,U1
JP-H0673947-U,0,U
JP-S54153049-A,0,A
JP-S5716116-U,0,U
US-548167-A,18951015,A
CN-1055840-A,0,A
JP-S6020713-A,0,A
JP-S6234024-A,0,A
JP-H0995081-A,0,A
JP-H1088758-A,0,A
GB-189709494-A,0,A
JP-2001195445-A,0,A
JP-2010101160-A,0,A
CN-101746294-A,0,A
CN-104170353-A,0,A
CN-206056613-U,20170329,U
JP-1032657-C,0,C
JP-1654837-C,0,C
DK-146223-C,19840109,C
CA-564325-A,19581007,A
GB-0802422-D0,20080319,D0
JP-S53139175-U,0,U
JP-H01150349-U,0,U
JP-2600796-Y2,19991025,Y2
JP-S591896-U,0,U
JP-S4922438-B1,19740608,B1
US-419959-A,18900121,A
DE-69331528-D1,20020314,D1
DE-69430885-T2,20030130,T2
EP-1474362-B1,20061122,B1
JP-2000346423-A,0,A
JP-2765752-B2,19980618,B2
KR-900003183-Y1,19900414,Y1
JP-2003229053-A,0,A
JP-2007241524-A,0,A
JP-5129599-B2,20130130,B2
KR-100547071-B1,20060131,B1
KR-20070020426-A,0,A
KR-20130050682-A,0,A
CN-204556165-U,20150812,U
ES-66185-Y,19581201,Y
CA-1331409-C,19940809,C
FI-891492-A0,0,A0
GB-1348507-A,0,A
JP-S60179587-U,0,U
US-332138-A,18851208,A
CN-1112492-C,20030625,C
DE-566539-C,19321217,C
DE-845109-C,19520728,C
JP-S63125649-A,0,A
JP-S6423693-U,0,U
JP-S5243021-U,0,U
JP-S5566205-U,0,U
JP-H0825023-B2,19960313,B2
JP-2003215980-A,0,A
JP-4255884-B2,20090415,B2
KR-100295305-B1,20010712,B1
CN-101547005-A,0,A
CN-101988676-A,0,A
CN-203259375-U,20131030,U
CN-205932945-U,20170208,U
DE-202006018912-U1,20070215,U1
FR-2828332-A1,0,A1
GB-1375879-A,0,A
JP-S53161674-U,0,U
US-2053075-A,19360901,A
CN-2484753-Y,20020410,Y
CN-1212523-A,0,A
FI-20010786-A,0,A
JP-S6359144-U,0,U
JP-2799203-B2,19980917,B2
JP-H08143121-A,0,A
US-1837725-A,19311222,A
US-2304134-A,19421208,A
US-1864623-A,19320628,A
JP-5991128-B2,20160914,B2
JP-2016105749-A,0,A
RU-2191214-C2,20021020,C2
RU-2008140707-A,0,A
CN-103265598-B,20150304,B
CN-203928708-U,20141105,U
CN-204557664-U,20150812,U
CN-206326242-U,20170714,U
CN-104559893-B,20160921,B
CN-106856628-A,0,A
US-6778773-B2,20040817,B2
JP-H00985753-A,0,A
JP-1512007-C,0,C
NL-28211-C,0,C
CA-2184504-C,20051213,C
FR-877274-A,19421202,A
JP-S60218905-A,0,A
JP-H04326774-A,0,A
JP-S5125160-A,0,A
FR-1012104-A,19520704,A
JP-S5944363-A,0,A
JP-H081564-A,0,A
US-1233474-A,19170717,A
US-2002011230-A1,0,A1
JP-2003169856-A,0,A
US-811638-A,19060206,A
KR-200338652-Y1,20040116,Y1
KR-20070041890-A,0,A
CN-1816294-A,0,A
CN-2858160-Y,20070117,Y
CN-201276086-Y,20090722,Y
CN-201816145-U,20110504,U
CN-102907994-A,0,A
JP-1573454-C,0,C
JP-1721868-C,0,C
JP-2100371-C,0,C
DK-358583-D0,19830805,D0
ES-146285-Y,19700116,Y
GB-478690-A,0,A
DE-2649618-B2,0,B2
DE-3766112-D1,19901213,D1
DE-8007402-U1,19810827,U1
FR-390089-A,19080925,A
FR-638126-A,19280516,A
FR-2638622-B1,19920306,B1
JP-H0584037-U,0,U
JP-S4739450-Y1,19721129,Y1
JP-H0642846-U,0,U
NL-296405-A,0,A
NL-7211943-A,0,A
EP-2781788-B1,20161221,B1
JP-S5072414-U,0,U
JP-S5846920-U,0,U
JP-S5874811-U,0,U
JP-S5687776-U,0,U
US-D279853-S,19850730,S
KR-920008597-Y1,19921205,Y1
JP-2004313014-A,0,A
JP-6137070-B2,20170531,B2
RU-2008132286-A,0,A
US-754320-A,19040308,A
CN-105823611-A,0,A
CN-106739164-A,0,A
CN-205558012-U,20160907,U
BE-512467-A,0,A
CA-2244766-A1,0,A1
DE-1803332-A1,0,A1
DE-2149141-A1,0,A1
GB-2089320-A,0,A
JP-S62164685-U,0,U
JP-H066780-Y2,19940223,Y2
DE-69322442-T2,19990805,T2
EP-1933436-B1,20170510,B1
EP-0782478-B1,19981209,B1
EP-0993180-B1,20030625,B1
JP-S5128923-U,0,U
JP-S5153284-U,0,U
JP-S5376919-A,0,A
JP-3340813-B2,20021105,B2
JP-2000192758-A,0,A
JP-H11193667-A,0,A
RU-17326-U1,20010327,U1
KR-20110049427-A,0,A
CN-101531763-A,0,A
CN-201900010-U,20110720,U
CN-202142477-U,20120208,U
CN-202417422-U,20120905,U
CN-202807027-U,20130320,U
CA-27189-A,18870718,A
JP-S4874140-A,0,A
JP-2887866-B2,19990510,B2
FR-2239893-A5,0,A5
JP-H09201246-A,0,A
JP-S6125607-Y2,19860801,Y2
JP-H069665-Y2,19940316,Y2
JP

2025-01-16 17:00:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:00:44 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:00:44 - root - INFO - SQL:
SELECT t."publication_number", f.value 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB t, 
         LATERAL FLATTEN(input => t."embedding_v1") f 
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,VALUE
US-2002199075-A1,1.327330600000000e-01
US-2002199075-A1,-1.390248800000000e-01
US-2002199075-A1,-8.851990000000000e-02
US-2002199075-A1,-9.534649000000001e-02
US-2002199075-A1,-9.190445999999999e-02
US-2002199075-A1,-7.793257400000000e-02
US-2002199075-A1,-2.276682800000000e-03
US-2002199075-A1,-1.273512700000000e-01
US-2002199075-A1,1.164167000000000e-01
US-2002199075-A1,1.824077200000000e-02
US-2002199075-A1,1.768792300000000e-01
US-2002199075-A1,2.043863400000000e-01
US-2002199075-A1,-5.214452700000000e-02
US-2002199075-A1,-9.571313999999999e-03
US-2002199075-A1,-2.218892700000000e-01
US-2002199075-A1,3.377413400000000e-02
US-2002199075-A1,1.092247100000000e-01
US-2002199075-A1,1.405695800000000e-01
US-2002199075-A1,-8.305453000000000e-02
US-2002199075-A1,1.380776500000000e-01
US-2002199075-A1,4.118194000000000e-02
US-2002199075-A1,5.223548400000000e-02
US-2002199075-A1,6.996955000000001e-02
US-2002199075-A1,-1.863214200000000e-01
US-2002199075-A1,-5.879353700000000e-03
US-2002199075-A1,-1.181809200000000e-01
US-2002199075-A1,1.821372000000000e-01
US-2002199075-A1,1.003657000000000e-02
US-2002199075-A1,2.518988200000000e-02
US-2002199075-A1,1.700414300000000e-01
US-2002199075-A1,-1.697541800000000e-01
US-2002199075-A1,-9.175000000000000e-02
US-2002199075-A1,5.969878300000000e-02
US-2002199075-A1,1.772470000000000e-02
US-2002199075-A1,-1.060385700000000e-01
US-2002199075-A1,-1.592023500000000e-01
US-2002199075-A1,9.980810000000000e-02
US-2002199075-A1,-1.771379400000000e-01
US-2002199075-A1,1.230216800000000e-02
US-2002199075-A1,3.092083900000000e-02
US-2002199075-A1,-1.014561800000000e-01
US-2002199075-A1,-2.828363500000000e-01
US-2002199075-A1,1.361863500000000e-01
US-2002199075-A1,1.721303300000000e-01
US-2002199075-A1,-4.398971000000000e-02
US-2002199075-A1,-1.389469950000000e-02
US-2002199075-A1,1.883381200000000e-01
US-2002199075-A1,-4.531229700000000e-02
US-2002199075-A1,-1.430749900000000e-01
US-2002199075-A1,1.128079000000000e-01
US-2002199075-A1,-2.814714300000000e-01
US-2002199075-A1,2.599174500000000e-02
US-2002199075-A1,2.006464200000000e-01
US-2002199075-A1,-3.294414300000000e-02
US-2002199075-A1,-3.229250400000000e-02
US-2002199075-A1,3.630416000000000e-02
US-2002199075-A1,-5.539227300000000e-02
US-2002199075-A1,3.239953500000000e-02
US-2002199075-A1,-2.809038200000000e-01
US-2002199075-A1,1.027128200000000e-01
US-2002199075-A1,2.351760300000000e-04
US-2002199075-A1,1.692046800000000e-01
US-2002199075-A1,-5.161380400000000e-02
US-2002199075-A1,1.296108200000000e-01
US-2003048328-A1,-2.702655500000000e-01
US-2003048328-A1,-1.838806400000000e-01
US-2003048328-A1,1.285569000000000e-02
US-2003048328-A1,-1.157763800000000e-01
US-2003048328-A1,-1.229929850000000e-01
US-2003048328-A1,-1.701488500000000e-02
US-2003048328-A1,-1.346644400000000e-02
US-2003048328-A1,-3.185733800000000e-02
US-2003048328-A1,1.913188800000000e-01
US-2003048328-A1,-2.219920000000000e-02
US-2003048328-A1,8.446085000000000e-02
US-2003048328-A1,2.329903500000000e-01
US-2003048328-A1,1.853730500000000e-01
US-2003048328-A1,-1.128309000000000e-01
US-2003048328-A1,1.308142400000000e-01
US-2003048328-A1,-1.681749500000000e-02
US-2003048328-A1,2.669037800000000e-03
US-2003048328-A1,-3.269643000000000e-02
US-2003048328-A1,-2.339415600000000e-01
US-2003048328-A1,8.544633500000000e-02
US-2003048328-A1,-3.111701800000000e-02
US-2003048328-A1,6.132171700000000e-02
US-2003048328-A1,-6.193825500000000e-03
US-2003048328-A1,-1.194184100000000e-01
US-2003048328-A1,3.186201000000000e-02
US-2003048328-A1,-5.385209600000000e-02
US-2003048328-A1,-6.190734700000000e-02
US-2003048328-A1,-1.719800500000000e-01
US-2003048328-A1,5.044012500000000e-02
US-2003048328-A1,-1.428283500000000e-01
US-2003048328-A1,3.900431000000000e-02
US-2003048328-A1,-1.689109800000000e-01
US-2003048328-A1,1.080429500000000e-01
US-2003048328-A1,3.628505400000000e-02
US-2003048328-A1,-1.093701350000000e-01
US-2003048328-A1,-4.550829000000000e-02
US-2003048328-A1,2.120426300000000e-02
US-2003048328-A1,-3.028842000000000e-01
US-2003048328-A1,9.250326000000000e-02
US-2003048328-A1,5.986650300000000e-02
US-2003048328-A1,8.118051000000000e-02
US-2003048328-A1,-6.228786000000000e-02
US-2003048328-A1,-8.558510000000000e-02
US-2003048328-A1,-9.565390000000000e-02
US-2003048328-A1,-4.911348000000000e-02
US-2003048328-A1,-1.153620600000000e-02
US-2003048328-A1,-1.124967800000000e-01
US-2003048328-A1,-1.549457200000000e-01
US-2003048328-A1,2.103537600000000e-01
US-2003048328-A1,-1.087370300000000e-01
US-2003048328-A1,-1.879206600000000e-01
US-2003048328-A1,1.774610300000000e-01
US-2003048328-A1,-2.214985200000000e-01
US-2003048328-A1,-3.011048300000000e-03
US-2003048328-A1,-1.456843900000000e-01
US-2003048328-A1,1.522214200000000e-02
US-2003048328-A1,-1.584044000000000e-02
US-2003048328-A1,-1.045927400000000e-01
US-2003048328-A1,-1.666246700000000e-01
US-2003048328-A1,-2.193481700000000e-02
US-2003048328-A1,2.186357500000000e-01
US-2003048328-A1,6.25199300000

2025-01-16 17:00:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:00:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:00:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:00:46 - snowflake.connector.connection - INFO - closed
2025-01-16 17:00:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:01:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:01:08 - root - INFO - The error you're encountering is due to the way the `"citation"` column is structured in the `PUBLICATIONS` table. The `"citation"` field is of type `VARIANT` and contains nested JSON objects rather than a simple array. The `ARRAY_CONTAINS` function expects its first argument to be an array, but in this case, `"citation"` is a `VARIANT` that requires special handling to access its contents.

To search for a specific `"publication_number"` within the `"citation"` field, you need to:

1. **Flatten** the `"citation"` field using `LATERAL FLATTEN` to transform the nested JSON structure into a tabular format.
2. **Extract** the `"publication_number"` from each citation.
3. **Filter** the results to match your target publication number.

Here's how you can modify your query:

```sql
SELECT DISTINCT t."publication_number"
FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."citation") f
WHERE f.value:"publication_number"::STRING = 'US1234567B2'
LIMIT 1000;
```

**Explanation:**

- **`LATERAL FLATTEN`**: This function is used to expand the `"citation"` VARIANT column into multiple rows, each containing a single citation.
  
- **`f.value:"publication_number"::STRING`**: This expression extracts the `"publication_number"` from each citation. The `::STRING` casts the value to a string for comparison.

- **`WHERE f.value:"publication_number"::STRING = 'US1234567B2'`**: Filters the citations to those where the `"publication_number"` matches `'US1234567B2'`.

**Note:** Ensure that the JSON keys and the path used in `f.value:"publication_number"` match the actual structure of the `"citation"` field in your data. If the keys are nested differently, you may need to adjust the path accordingly.

**Alternative Approach:**

If you want to look for citations where any part of the citation text contains `'US1234567B2'`, you can use the `LIKE` operator:

```sql
SELECT DISTINCT t."publication_number"
FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."citation") f
WHERE f.value::STRING LIKE '%US1234567B2%'
LIMIT 1000;
```

**Caution:** Using `LIKE '%US1234567B2%'` might be less efficient, especially with large datasets, because it forces a pattern match on the entire citation content.

**Summary:**

- Use `LATERAL FLATTEN` to expand the `"citation"` field.
- Extract the desired fields from the flattened JSON objects.
- Apply filters based on the extracted values.

Let me know if you have any questions or need further assistance!
2025-01-16 17:01:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:01:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:01:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:01:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 17:01:10 - snowflake.connector.connection - INFO - closed
2025-01-16 17:01:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:02:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:02:02 - root - INFO - ```sql
SELECT 
  cp.cited_pub AS "publication_number",
  COUNT(DISTINCT cp.citing_pub) AS "number_of_forward_citations"
FROM (
  SELECT 
    t1."publication_number" AS citing_pub,
    c.value:"publication_number"::STRING AS cited_pub
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t1,
       LATERAL FLATTEN(input => t1."citation") c
) cp
JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS tp
  ON cp.cited_pub = tp."publication_number"
WHERE tp."country_code" = 'US'
  AND tp."kind_code" = 'B2'
GROUP BY cp.cited_pub
ORDER BY "number_of_forward_citations" DESC
LIMIT 1;
```
2025-01-16 17:02:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:02:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:02:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:02:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 17:02:04 - snowflake.connector.connection - INFO - closed
2025-01-16 17:02:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:02:04 - root - INFO - SQL:
SELECT 
  cp.cited_pub AS "publication_number",
  COUNT(DISTINCT cp.citing_pub) AS "number_of_forward_citations"
FROM (
  SELECT 
    t1."publication_number" AS citing_pub,
    c.value:"publication_number"::STRING AS cited_pub
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t1,
       LATERAL FLATTEN(input => t1."citation") c
) cp
JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS tp
  ON cp.cited_pub = tp."publication_number"
WHERE tp."country_code" = 'US'
  AND tp."kind_code" = 'B2'
GROUP BY cp.cited_pub
ORDER BY "number_of_forward_citations" DESC
LIMIT 1;
Results:
publication_number,number_of_forward_citations
US-8357181-B2,4

2025-01-16 17:02:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:02:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:02:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:02:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:02:06 - snowflake.connector.connection - INFO - closed
2025-01-16 17:02:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:02:06 - root - INFO - SQL:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "title_text"
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t, 
         LATERAL FLATTEN(input => t."title_localized") f 
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,title_text
EP-1886379-A4,Antennenkonstruktion zum beispiel für ein rfid-transpondersystem
EP-1886379-A4,"Antenna construction, for example for an rfid transponder system"
EP-1886379-A4,Structure d&#39;antenne destinee notamment a un systeme de transpondeur rfid
EP-2919794-A4,Minced cartilage systems and methods
EP-2919794-A4,Zerkleinerte knorpelsysteme und verfahren
EP-2919794-A4,Systèmes de cartilage haché et méthodes associées
US-2010231814-A1,Liquid crystal display device and its driving method
JP-S5615636-A,Horseshoe and production thereof
DE-19627335-C1,Steckerstift für eine Steckerbrücke
DE-19627335-C1,Contact pin for bridge of pluggable electric connector
EP-2915604-A1,Appareil de butée arrière
EP-2915604-A1,Back gauge apparatus
EP-2915604-A1,Hinteranschlagsvorrichtung
US-9125088-B2,Dynamic robust header compression
RU-2437094-C1,Method for determining water stability of soil aggregates
RU-2437094-C1,Способ определения водоустойчивости почвенных агрегатов
DE-3402572-A1,Verfahren zur herstellung von plattenfoermigen waermetauschern
DE-3402572-A1,Process for producing plate-shaped heat exchangers
US-4048517-A,Logic element
US-3242451-A,Gear actuated variable resistor
CN-104254224-A,Electronic product metal shell and mobile phone
CN-104254224-A,一种电子产品金属壳体和手机
JP-S61204096-A,Composition for inhibiting deposition of scale
CN-103513816-B,显示装置
WO-2010131204-A2,Photovoltaic device and production method
WO-2010131204-A2,Dispositif photovoltaique et procede de fabrication
CN-100420310-C,合格优先权队列调度器
CN-100420310-C,Qualifid priority queue dispatcher
JP-H05303965-A,二酸化マンガン／リチウム電池用正極の製造法
JP-H05303965-A,Manufacture of positive electrode for manganese dioxide/ lithium battery
US-9438870-B2,"Display system, image display device, and method of controlling display system"
JP-S5792095-A,Bleaching agent composition
DE-4123952-A1,Hubsteuerung eines stapelgreiferkopfes fuer steinformlinge
CN-103111664-A,Bimetal hole saw connecting shank
CN-103111664-A,双金属孔锯接柄
US-3240097-A,Peg device for stringed instruments
CN-102803826-A,照明装置、显示装置以及电视接收装置
CN-102803826-A,"Lighting device, display apparatus, and television receiving equipment"
CN-102985192-B,轧制机及具备该轧制机的串联式轧制设备
CN-102985192-B,Rolling machine and tandem rolling facility equipped with same
CN-103871874-A,Manufacturing method and structure of high-power silicon transient voltage suppressor diode
CN-103871874-A,大功率硅瞬态电压抑制二极管的制作方法及结构
CN-105547016-A,Anti-freezing device for double-pipe heat exchanger and manufacturing method of anti-freezing device
CN-105547016-A,一种套管换热器结冰防冻装置及其制造方法
US-5534075-A,Process for the production of glucose
US-4624244-A,Device for aiding cardiocepital venous flow from the foot and leg of a patient
US-4189344-A,Method of texturing untextured dry sanitary tissue web
JP-2013002158-A,Faucet device
JP-2013002158-A,水栓装置
DE-4016448-A1,Mobile toy with inclined rotating discs - which are driven by endless chain with rods engaging holes in discs
DE-4016448-A1,Bewegungsspielgeraet
CN-105715030-A,间距及长度可调的单导架多级升降工作平台及其施工方法
CN-105715030-A,Single-guide-frame multi-stage lifting working platform with adjustable spacing and length and construction method for single-guide-frame multi-stage lifting working platform
GB-2472027-A,"Air pressure safety controller for inflatable bag, stopper, bladder or pneumatic flap valve system used for sealing pipes etc for containing spills etc"
WO-2005079497-A2,Substituted fused bicyclic amines as modulators of chemokine receptor activity
WO-2005079497-A2,Amines bicycliques condensees substituees utilisees en tant que modulateurs de l&#39;activite du recepteur de la chimiokine
CN-104036274-B,通过识别物品表面的图像以辨别其真伪的方法及装置
KR-101143973-B1,A refrigerating apparatus
KR-101143973-B1,냉각 장치
US-3078132-A,Cabinet with sewing machine supported from front hinges
CN-102791605-A,Suspension body supporting device for elevator
CN-102791605-A,电梯的悬挂体支承装置
US-9355218-B2,Secure medication transport and administration system
EP-2436642-A3,Entonnoir pour remplir de l&#39;huile
EP-2436642-A3,Oil-feeding funnel
EP-2436642-A3,Öleinfülltrichter
DE-10259469-B4,Verdeckvorrichtung und Verfahren zur Betätigung einer Verdeckvorrichtung
US-4753615-A,Electrical connection and fastener therefor
US-3216796-A,Caustic regeneration
JP-3417934-B2,可変長符号化方法及び装置
CN-101299299-B,一种匝道汇入控制器调试和现场紧急控制的系统及其方法
CN-101299299-B,On-site control method of ramp afflux controller and system thereof
EP-1127590-A1,Schwimmflosse mit auswechselbarem Flossenblatt
EP-1127590-A1,Palme de natation à voilure interchangeable
EP-1127590-A1,Swimming flipper with interchangeable blade
US-6655637-B1,Spacecraft for removal of space orbital debris
CN-101894718-B,电子发射元件及其制造方法、使用电子发射元件的各装置
CN-101894718-B,"Electron emitting element, manufacturing method thereof, and multiple devices with the electron emitting element"
DE-102015012278-A1,Dreidimensionale organische Leuchtdiodenvorrichtung
CN-100434804-C,Flow regulating method and apparatus for gas
CN-100434804-C,炭化氢类气体的流量调节方法和装置
KR-100709148-B1,피부 노화나 손상

2025-01-16 17:02:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:02:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:02:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:02:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 17:02:08 - snowflake.connector.connection - INFO - closed
2025-01-16 17:02:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:02:08 - root - INFO - SQL:
SELECT "application_number", "application_number_formatted" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    LIMIT 1000;
Results:
Too long, hard cut:
application_number,application_number_formatted
,
,
FR-82617-A,FR82617A
ES-527521-A,ES527521A
CA-2165155-A,CA 2165155
FR-7735619-A,FR7735619A
GB-1772466-A,GB1772466A
JP-2447378-A,JP2447378A
JP-2769688-U,JP2769688U
JP-8042795-A,JP8042795A
US-136580D-A,
US-272220D-A,
US-599187D-A,
CN-94192833-A,CN 94192833
DE-1479218D-U,DENDAT1479218D
EP-10796532-A,EP20100796532
ES-02258408-T,ES02258408T
FR-1000748D-A,
FR-1573809D-A,
JP-12157373-U,JP12157373U
JP-16786675-U,JP16786675U
US-53364931-A,
GB-201114438-A,GB201114438A
JP-2011138029-A,JP2011138029A
JP-2016092764-A,JP2016092764A
KR-20030010726-A,KR20030010726A
CN-200510116937-A,CN 200510116937
CN-200920149802-U,CN 200920149802
,
,
FR-81735-A,FR81735A
DE-2707796-A,DE19772707796
DE-2962208-A,DE19792962208
FR-7420889-A,FR7420889A
GB-8922854-A,GB8922854A
JP-1115379-U,JP1115379U
JP-2716799-A,JP2716799A
JP-7267680-A,JP7267680A
US-8301902-A,US10083019
CN-02141055-A,CN 02141055
EP-98937437-A,EP19980937437
JP-10443791-A,JP10443791A
JP-15313886-U,JP15313886U
JP-28671085-A,JP28671085A
JP-50201484-A,JP50201484A
JP-2008531156-A,JP2008531156A
CN-200420014188-U,CN 200420014188
CN-200610139784-A,CN 200610139784
CN-201120469608-U,CN 201120469608
CN-201320200154-U,CN 201320200154
,
,
JP-73886-U,JP73886U
CA-118661-F,CA 118661
FI-882364-A,FI882364A
CA-810158D-A,
DE-2335240-A,DE19732335240
DE-7610943-U,DE19767610943
JP-1372293-U,JP1372293U
JP-6127078-A,JP6127078A
JP-8757880-U,JP8757880U
US-548167D-A,
CN-91102212-A,CN 91102212
JP-12906083-A,JP12906083A
JP-17353585-A,JP17353585A
JP-25540495-A,JP25540495A
JP-26678396-A,JP26678396A
GB-189709494D-A,
JP-2000361256-A,JP2000361256A
JP-2009241960-A,JP2009241960A
CN-200910172035-A,CN 200910172035
CN-201380010040-A,CN 201380010040
CN-201620787602-U,CN 201620787602
,
,
DK-287072-A,DK287072A
CA-564325D-A,
GB-0802422-A,GB0802422A
JP-4408477-U,JP4408477U
JP-4798988-U,JP4798988U
JP-7853992-U,JP7853992U
JP-9569382-U,JP9569382U
JP-9675069-A,JP9675069A
US-419959D-A,
DE-69331528-A,DE1993631528
DE-69430885-T,DE1994630885
EP-03710986-A,EP20030710986
JP-15189499-A,JP15189499A
JP-25671390-A,JP25671390A
KR-870006567-U,KR870006567U
JP-2002024308-A,JP2002024308A
JP-2006061091-A,JP2006061091A
JP-2008029567-A,JP2008029567A
KR-20030012654-A,KR20030012654A
KR-20067019046-A,KR20067019046A
KR-20110115885-A,KR20110115885A
CN-201520287082-U,CN 201520287082
ES-66185-U,ES66185U
CA-615536-A,CA 615536
FI-891492-A,FI891492A
GB-2353671-A,GB2353671A
JP-6847984-U,JP6847984U
US-332138D-A,
CN-00109228-A,CN 00109228
DE-K0111346-D,DE1928K0111346
DE-M0004351-A,DE1950M0004351
JP-10792487-A,JP10792487A
JP-11859587-U,JP11859587U
JP-13038675-U,JP13038675U
JP-15039478-U,JP15039478U
JP-16468688-A,JP16468688A
JP-2002123731-A,JP2002123731A
JP-2004169594-A,JP2004169594A
KR-19990004994-A,KR19990004994A
CN-200810087012-A,CN 200810087012
CN-200910183723-A,CN 200910183723
CN-201320266986-U,CN 201320266986
CN-201620913537-U,CN 201620913537
DE-202006018912-U,DE200620018912
FR-0008230-A,FR0008230A
GB-1981272-A,GB1981272A
JP-6515277-U,JP6515277U
US-5060335-A,
CN-01243278-U,CN 01243278
CN-98119235-A,CN 98119235
FI-20010786-A,FI20010786A
JP-15273586-U,JP15273586U
JP-30885989-A,JP30885989A
JP-30953194-A,JP30953194A
US-39316029-A,
US-39547341-A,
US-50638531-A,
JP-2012218956-A,JP2012218956A
JP-2013079323-A,JP2013079323A
RU-2001100883-A,RU2001100883A
RU-2008140707-A,RU2008140707A
CN-201310216029-A,CN 201310216029
CN-201420346631-U,CN 201420346631
CN-201520223336-U,CN 201520223336
CN-201620675246-U,CN 201620675246
CN-201510041133-A,CN 201510041133
CN-201510908860-A,CN 201510908860
US-25558902-A,US10255589
,
,
NL-28211D-A,
CA-2184504-A,CA 2184504
FR-877274D-A,
JP-3771885-A,JP3771885A
JP-9756691-A,JP9756691A
JP-9810174-A,JP9810174A
FR-1012104D-A,
JP-14064983-A,JP14064983A
JP-15676594-A,JP15676594A
US-11296116-A,
US-86407401-A,US09864074
JP-2001372990-A,JP2001372990A
US-1904196675-A,
KR-20030033699-U,KR20030033699U
KR-20050097502-A,KR20050097502A
CN-200480019257-A,CN 200480019257
CN-200620002194-U,CN 200620002194
CN-200820190384-U,CN 200820190384
CN-201020262944-U,CN 201020262944
CN-201210445005-A,CN 201210445005
,
,
,
DK-358583-A,DK358583A
ES-146285-U,ES146285U
GB-558037-A,GB558037A
DE-2649618-A,DE19762649618
DE-3766112-A,DE19873766112
DE-8007402-U,DE19808007402
FR-390089D-A,
FR-638126D-A,
FR-8814402-A,FR8814402A
JP-2570592-U,JP2570592U
JP-4963867-U,JP4963867U
JP-8045292-U,JP8045292U
NL-296405D-A,
NL-7211943-A,NL7211943A
EP-14160634-A,EP20140160634
JP-12910673-U,JP12910673U
JP-14214181-U,JP14214181U
JP-17087081-U,JP17087081U
JP-17119879-U,JP17119879U
US-56566083-F,US06565660
KR-880014904-U,KR880014904U
JP-2003107433-A,JP2003107433A
JP-2014130362-A,JP2014130362A
RU-2008132286-A,RU2008132286A
US-1903155409-A,
CN-201610182959-A,CN 201610182959
CN-201611230561-A,CN 201611230561
CN-201620106167-U,CN 201620106167
BE-512467D-A,
CA-2244766-A,CA 2244766
DE-1803332-A,DE19681803332
DE-2149141-A,DE19712149141
GB-8136776-A,GB8136776A
JP-5172786-U,JP5172786U
JP-5929189-U,JP5929189U
DE-69322442-T,DE1993622442
EP-07354052-A,EP2

2025-01-16 17:02:08 - root - INFO - itercount: 0
2025-01-16 17:02:08 - root - INFO - Database Name: PATENTS_GOOGLE
Schema Name: PATENTS_GOOGLE
DDL describes table information.
,0
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

,1
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,2
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""description_localized"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""citation"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,3
table_name,ABS_AND_EMB
description,
DDL,"create or replace TABLE ABS_AND_EMB (
	""publication_number"" VARCHAR(16777216),
	""title"" VARCHAR(16777216),
	""title_translated"" BOOLEAN,
	""abstract"" VARCHAR(16777216),
	""abstract_translated"" BOOLEAN,
	""cpc"" VARIANT,
	""cpc_low"" VARIANT,
	""cpc_inventive_low"" VARIANT,
	""top_terms"" VARIANT,
	""similar"" VARIANT,
	""url"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""publication_description"" VARCHAR(16777216),
	""cited_by"" VARIANT,
	""embedding_v1"" VARIANT
);"

External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS_GOOGLE': {'PATENTS_GOOGLE': ['ABS_AND_EMB', 'CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS**

   - `"publication_number"`: To uniquely identify each patent.
   - `"country_code"`: To filter for United States patents (`"US"`).
   - `"kind_code"`: To filter for utility patents under the B2 classification (`"B2"`).
   - `"grant_date"`: To find patents granted between 2010 and 2014.
   - `"filing_date"`: To determine the filing date for each patent.
   - `"citation"`: Contains backward citations; used to identify patents that cite others.
   - `"application_number"`: May assist in identifying patents.
   - `"title_localized"`: Could be used for additional patent information.

2. **PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB**

   - `"publication_number"`: To join with the PUBLICATIONS table.
   - `"embedding_v1"`: Contains text embeddings to compute similarity between patents.
   - `"embedding_v1"`: Used to retrieve embedding vectors for similarity calculation.

**Conditions that may be used:**

- Filter patents where `"country_code"` equals `"US"`.
- Filter patents where `"kind_code"` equals `"B2"`.
- Select patents where `"grant_date"` is between `20100101` and `20141231`.
- Use `"filing_date"` to calculate the time frame for citations.
- Extract and flatten the `"citation"` field to analyze citations.
- Join on `"publication_number"` between the PUBLICATIONS and ABS_AND_EMB tables.
- Use the embedding vectors in `"embedding_v1"` to compute similarity.
- Extract year from `"filing_date"` for patents filed in the same year.

---

**SQL Queries:**

1. **Retrieve distinct country codes in the PUBLICATIONS table:**

   ```sql
   SELECT DISTINCT "country_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
   ```

2. **Retrieve distinct kind codes in the PUBLICATIONS table:**

   ```sql
   SELECT DISTINCT "kind_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
   ```

3. **Select sample publication numbers of US patents with kind code 'B2' granted between 2010 and 2014:**

   ```sql
   SELECT "publication_number" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "country_code" = 'US' 
     AND "kind_code" = 'B2' 
     AND "grant_date" BETWEEN 20100101 AND 20141231 
   LIMIT 1000;
   ```

4. **Retrieve filing dates for patents granted between 2010 and 2014:**

   ```sql
   SELECT "publication_number", "filing_date" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "grant_date" BETWEEN 20100101 AND 20141231 
   LIMIT 1000;
   ```

5. **Extract citations from the PUBLICATIONS table:**

   ```sql
   SELECT t."publication_number", f.value AS "citation" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t, 
        LATERAL FLATTEN(input => t."citation") f 
   LIMIT 1000;
   ```

6. **Retrieve embedding vectors from the ABS_AND_EMB table:**

   ```sql
   SELECT "publication_number", "embedding_v1" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB 
   LIMIT 1000;
   ```

7. **Select patents filed in 2010 with their filing date and publication number:**

   ```sql
   SELECT "publication_number", "filing_date" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "filing_date" BETWEEN 20100101 AND 20101231 
   LIMIT 1000;
   ```

8. **Retrieve distinct filing years from the PUBLICATIONS table:**

   ```sql
   SELECT DISTINCT SUBSTRING(CAST("filing_date" AS TEXT), 1, 4) AS "filing_year" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
   ```

9. **Get publication numbers and country codes for validation:**

   ```sql
   SELECT "publication_number", "country_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
   ```

10. **Select sample data from the ABS_AND_EMB table for joining purposes:**

    ```sql
    SELECT "publication_number", "title" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB 
    LIMIT 1000;
    ```

11. **Retrieve patents with their grant dates and kind codes:**

    ```sql
    SELECT "publication_number", "grant_date", "kind_code" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    WHERE "grant_date" IS NOT NULL 
    LIMIT 1000;
    ```

12. **Extract and view the 'embedding_v1' field structure:**

    ```sql
    SELECT t."publication_number", f.value 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB t, 
         LATERAL FLATTEN(input => t."embedding_v1") f 
    LIMIT 1000;
    ```

13. **Identify patents citing a specific patent (e.g., 'US1234567B2'):**

    ```sql
    SELECT "publication_number" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    WHERE ARRAY_CONTAINS("citation", 'US1234567B2') 
    LIMIT 1000;
    ```

14. **Retrieve the titles of patents from the PUBLICATIONS table:**

    ```sql
    SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "title_text"
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t, 
         LATERAL FLATTEN(input => t."title_localized") f 
    LIMIT 1000;
    ```

15. **Get sample application numbers and their formatted versions:**

    ```sql
    SELECT "application_number", "application_number_formatted" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    LIMIT 1000;
    ```

---

These queries help in understanding the structure and content of the relevant tables and columns needed to perform the task. They retrieve distinct values, sample data, and explore nested fields to facilitate further analysis.Query:
SELECT DISTINCT "country_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Answer:
country_code
JP
DK
FI
CA
GB
WO
BE
EP
LU
NL
RU
KR
DE
US
ES
CN
FR
Query:
SELECT DISTINCT "kind_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Answer:
kind_code
A6
I1
T9
U9
H
B8
B3
T4
U4
K4
Z1
A
T3
D1
R1
L
V0
U
Y2
T2
H1
T7
A4
T5
A8
I2
I5
C1
T0
A0
B9
R
K1
B1
S
U8
D2
C3
E1
A7
F
T
T8
A3
K5
D0
E
P1
R2
A2
I4
C
A5
S1
U3
M
P
C2
B4
C5
H3
U0
T1
Y4
B
Y1
Y
A1
P2
P3
C9
B2
A9
U1
Query:
SELECT "publication_number" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "country_code" = 'US' 
     AND "kind_code" = 'B2' 
     AND "grant_date" BETWEEN 20100101 AND 20141231 
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number
US-8098574-B2
US-7857729-B2
US-8080145-B2
US-8053376-B2
US-8178658-B2
US-8576596-B2
US-8579483-B2
US-7852320-B2
US-8892708-B2
US-8075629-B2
US-8087376-B2
US-8552635-B2
US-8893867-B2
US-8350205-B2
US-8404573-B2
US-7788007-B2
US-8909745-B2
US-8492417-B2
US-7805918-B2
US-8288418-B2
US-8851162-B2
US-7871593-B2
US-7830431-B2
US-8608100-B2
US-8253816-B2
US-7929994-B2
US-8486037-B2
US-7646560-B2
US-8332480-B2
US-8774178-B2
US-8427714-B2
US-7792043-B2
US-8514567-B2
US-8191878-B2
US-8718595-B2
US-7928606-B2
US-7668240-B2
US-8585774-B2
US-8502757-B2
US-8471802-B2
US-8862868-B2
US-8328389-B2
US-7738069-B2
US-8405713-B2
US-8648463-B2
US-8696206-B2
US-7657091-B2
US-8290883-B2
US-7973201-B2
US-8906677-B2
US-7649294-B2
US-7933078-B2
US-7921656-B2
US-8554170-B2
US-8245723-B2
US-7877590-B2
US-8317453-B2
US-8304875-B2
US-8171672-B2
US-8713488-B2
US-8056115-B2
US-8261298-B2
US-8189879-B2
US-8474151-B2
US-7847164-B2
US-8144821-B2
US-8491585-B2
US-8165564-B2
US-7869297-B2
US-8829802-B2
US-8221928-B2
US-8416592-B2
US-8328464-B2
US-7785863-B2
US-7725840-B2
US-8152766-B2
US-7976070-B2
US-8785936-B2
US-8115437-B2
US-7999738-B2
US-7939312-B2
US-8268132-B2
US-8276466-B2
US-8070837-B2
US-8243475-B2
US-8019963-B2
US-8854883-B2
US-8088585-B2
US-8376691-B2
US-8299815-B2
US-8342808-B2
US-8434852-B2
US-8051775-B2
US-8862949-B2
US-7975501-B2
US-8100335-B2
US-8112236-B2
US-7818890-B2
US-8430687-B2
US-8907371-B2
US-8049260-B2
US-8130556-B2
US-8263056-B2
US-8489677-B2
US-8876140-B2
US-8114269-B2
US-8742651-B2
US-7976926-B2
US-7702916-B2
US-7893796-B2
US-8178274-B2
US-7977016-B2
US-8408833-B2
US-7641134-B2
US-8110401-B2
US-8733480-B2
US-8587369-B2
US-8045983-B2
US-7678626-B2
US-8629313-B2
US-7805878-B2
US-8398842-B2
US-7903093-B2
US-8718492-B2
US-8579297-B2
US-8536515-B2
US-8315477-B2
US-8138918-B2
US-8847129-B2
US-7838089-B2
US-7709688-B2
US-7877365-B2
US-8646668-B2
US-7966820-B2
US-8848188-B2
US-8030207-B2
US-7931395-B2
US-8507225-B2
US-8761087-B2
US-8455217-B2
US-8848971-B2
US-8105322-B2
US-8513835-B2
US-8709351-B2
US-7939071-B2
US-7946169-B2
US-8264411-B2
US-8531449-B2
US-8110750-B2
US-8461838-B2
US-7890204-B2
US-7928106-B2
US-8022121-B2
US-8601679-B2
US-8330408-B2
US-7800747-B2
US-8510387-B2
US-8038477-B2
US-8673543-B2
US-7853626-B2
US-7679200-B2
US-8864445-B2
US-8395740-B2
US-8146437-B2
US-7933091-B2
US-8421164-B2
US-8576515-B2
US-7722025-B2
US-8570761-B2
US-7945415-B2
US-7920629-B2
US-7874416-B2
US-8646670-B2
US-8254731-B2
US-8458307-B2
US-8236839-B2
US-8870363-B2
US-8503036-B2
US-8178184-B2
US-8879934-B2
US-8547039-B2
US-8802933-B2
US-8103295-B2
US-8673549-B2
US-7690976-B2
US-8142536-B2
US-8164921-B2
US-7841047-B2
US-8561651-B2
US-8274427-B2
US-7797335-B2
US-8780588-B2
US-7863742-B2
US-8271953-B2
US-7845278-B2
US-8837646-B2
US-8873532-B2
US-8669460-B2
US-8448894-B2
US-8776946-B2
US-7739634-B2
US-8792188-B2
US-7979772-B2
US-8521316-B2
US-7868911-B2
US-7916816-B2
US-7828019-B2
US-8689448-B2
US-8428537-B2
US-7794276-B2
US-8454776-B2
US-8050112-B2
US-8069894-B2
US-8575744-B2
US-8270333-B2
US-8823578-B2
US-8695966-B2
US-8616969-B2
US-8570635-B2
US-8271644-B2
US-8817537-B2
US-8512228-B2
US-7672836-B2
US-7698200-B2
US-8754621-B2
US-8282303-B2
US-8855610-B2
US-8748843-B2
US-8329135-B2
US-8356367-B2
US-8719279-B2
US-8600107-B2
US-8370222-B2
US-8334212-B2
US-8666920-B2
US-8661280-B2
US-8197428-B2
US-8492762-B2
US-7785372-B2
US-8163114-B2
US-7655498-B2
US-8150419-B2
US-8399429-B2
US-8807253-B2
US-7762801-B2
US-8077560-B2
US-7933348-B2
US-7655776-B2
US-7883339-B2
US-8611388-B2
US-8469679-B2
US-8403824-B2
US-8006496-B2
US-7815109-B2
US-8176512-B2
US-7990531-B2
US-7904316-B2
US-8001486-B2
US-8844927-B2
US-8825398-B2
US-7740086-B2
US-8025191-B2
US-8187297-B2
US-8628288-B2
US-7893140-B2
US-7812016-B2
US-8032228-B2
US-8676396-B2
US-7766075-B2
US-8199497-B2
US-8537465-B2
US-8845030-B2
US-8788118-B2
US-8303170-B2
US-7742213-B2
US-8349771-B2
US-7772499-B2
US-7876864-B2
US-8535815-B2
US-8099466-B2
US-8848058-B2
US-8150387-B2
US-8870259-B2
US-8121654-B2
US-8181806-B2
US-8397596-B2
US-8303467-B2
US-7871056-B2
US-7773605-B2
US-7647774-B2
US-8364684-B2
US-8419550-B2
US-8123937-B2
US-8698702-B2
US-8652478-B2
US-8558911-B2
US-8278339-B2
US-8213542-B2
US-8700554-B2
US-8201355-B2
US-8267414-B2
US-8843499-B2
US-7681853-B2
US-8232850-B2
US-8395370-B2
US-8379399-B2
US-8340986-B2
US-8336221-B2
US-8836816-B2
US-8866879-B2
US-8010419-B2
US-8269444-B2
US-8723621-B2
US-7688003-B2
US-8532663-B2
US-8197833-B2
US-7771083-B2
US-8306076-B2
US-8181108-B2
US-8725484-B2
US-8333106-B2
US-8458439-B2
US-8002853-B2
US-8711954-B2
US-8024102-B2
US-7916856-B2
US-8544786-B2
US-8387651-B2
US-7892905-B2
US-8811439-B2
US-7955621-B2
US-7876827-B2
US-8728907-B2
US-7757875-B2
US-8023182-B2
US-8384334-B2
US-7975290-B2
US-8186067-B2
US-8408390-B2
US-8334950-B2
US-8051855-B2
US-8516808-B2
US-8134009-B2
US-7716993-B2
US-8100601-B2
US-8059014-B2
US-8107524-B2
US-8717117-B2
US-8810355-B2
US-8582628-B2
US-7918885-B2
US-8726218-B2
US-8688093-B2
US-8251160-B2
US-8358332-B2
US-8029183-
Query:
SELECT "publication_number", "filing_date" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "grant_date" BETWEEN 20100101 AND 20141231 
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,filing_date
CN-101481674-B,20090119
CN-101856496-B,20100607
CN-101481402-B,20080110
RU-2527853-C2,20110407
CN-103300151-B,20130520
CN-101973907-B,20101030
KR-101394639-B1,20071017
CN-102141431-B,20100201
RU-2424708-C1,20100407
US-8503036-B2,20080623
CN-101782287-B,20100324
US-8178184-B2,20050615
CN-102675697-B,20120621
KR-101447906-B1,20140326
CN-102268136-B,20110609
CN-101918781-B,20081206
CN-1900368-B,20060630
CN-102401662-B,20100910
CN-101911547-B,20090106
US-8879934-B2,20110902
CN-102190695-B,20100318
CN-102919589-B,20121101
US-8547039-B2,20090825
KR-101180779-B1,20100705
US-8802933-B2,20110812
CN-101635494-B,20080721
KR-101371301-B1,20120717
US-8103295-B2,20061212
JP-4697146-B2,20070119
US-8673549-B2,20100527
CN-202672589-U,20120609
CN-204011631-U,20140426
KR-101209891-B1,20100716
US-7690976-B2,20050510
DE-10163559-B4,20011221
US-8142536-B2,20070518
KR-101051390-B1,20090831
US-7979772-B2,20070126
CN-102269846-B,20100604
CN-101054797-B,20070427
KR-101386713-B1,20131004
US-8521316-B2,20100331
DE-102008023004-B4,20080509
US-7868911-B2,20041109
CN-102408562-B,20110923
CN-101615589-B,20090227
KR-101031624-B1,20070918
US-7916816-B2,20070514
CN-101696649-B,20090930
CN-101846167-B,20100319
KR-101289882-B1,20110802
US-7828019-B2,20080812
CN-101768464-B,20081231
CN-102381153-B,20110906
US-8689448-B2,20100730
KR-100982341-B1,20080717
US-8428537-B2,20100526
DE-102012018013-B4,20120912
KR-101445255-B1,20140311
KR-100954522-B1,20090824
CN-102610733-B,20120214
CN-1868948-B,20050527
KR-101220314-B1,20101224
CN-101954619-B,20100716
CN-101568840-B,20071114
CN-101031208-B,20050928
US-7794276-B2,20070711
CN-102607119-B,20120316
CN-101068489-B,20050930
CN-102289588-B,20110818
JP-4588412-B2,20041022
CN-101013613-B,20070201
CN-101437343-B,20081218
CN-1986547-B,20051222
CN-101769202-B,20091231
KR-101285604-B1,20120113
CN-102215677-B,20091109
US-7804920-B2,20070330
KR-101396762-B1,20070712
US-8873560-B2,20090708
US-8096767-B1,20090204
US-8018245-B2,20100331
CN-102147421-B,20110117
JP-4554018-B2,20000209
JP-4671613-B2,20040227
DE-202009006300-U1,20090429
US-8677554-B2,20100312
KR-101106670-B1,20090708
CN-101335630-B,20080430
CN-101290793-B,20070910
KR-101033476-B1,20090108
CN-101532358-B,20090311
RU-2456537-C2,20100610
JP-4692491-B2,20070115
US-8799974-B2,20120402
CN-102174561-B,20110227
CN-101606374-B,20071016
CN-101731192-B,20091120
CN-101138342-B,20070928
KR-200472788-Y1,20130123
CN-101704250-B,20091015
US-8186893-B1,20101025
US-8247435-B2,20090219
JP-4653631-B2,20051028
KR-101313714-B1,20120215
JP-4922945-B2,20051216
JP-4690280-B2,20060927
RU-2407738-C1,20090703
CN-102900476-B,20120921
DE-102011100405-A8,20110504
CN-102213846-B,20100401
RU-2450271-C1,20110415
DE-102008005322-B4,20080121
KR-101373341-B1,20070430
US-8879780-B2,20100219
US-7991840-B2,20080124
JP-5247919-B1,20120705
CN-102033895-B,20100921
CN-101678365-B,20080618
CN-101795392-B,20091225
US-7996414-B2,20080229
US-8035765-B2,20100430
CN-101123726-B,20070529
US-8110084-B2,20030528
CN-101719827-B,20091203
RU-2528237-C1,20130311
US-D669262-S,20110321
US-7930043-B2,20060915
CN-101386273-B,20080912
CN-101700312-B,20091130
US-8577652-B2,20101217
US-8220843-B2,20100330
US-7654244-B2,20061208
US-7714430-B2,20060928
CN-101544979-B,20090122
US-7818260-B2,20051012
US-8000428-B2,20021122
KR-101123413-B1,20110513
CN-101495670-B,20060315
US-7841140-B1,20070925
DE-10147817-C5,20010927
CN-102785127-B,20120816
CN-102091984-B,20101216
CN-101379021-B,20070124
CN-1679420-B,20050408
CN-101383562-B,20070905
US-8506318-B2,20120105
CN-102214233-B,20110628
KR-101049028-B1,20100917
KR-101419562-B1,20070618
US-8307070-B2,20091118
US-8239800-B2,20100129
US-8489322-B2,20120124
CN-101547420-B,20090514
CN-101985552-B,20101104
KR-101099207-B1,20090629
KR-101432988-B1,20140402
CN-102328476-B,20110823
RU-2482904-C2,20090326
US-7847668-B2,20080104
US-8872827-B2,20121220
KR-101314878-B1,20060919
KR-100975252-B1,20050805
CN-102500911-B,20111121
GB-2505819-B,20131213
US-8793749-B2,20080825
CN-101950733-B,20100802
US-8913963-B2,20091105
KR-101122062-B1,20100504
CN-102131161-B,20100114
JP-5229230-B2,20081105
CN-102013621-B,20101118
US-8061620-B2,20070727
CN-1767656-B,20021129
RU-2455557-C1,20101223
DE-102008047760-B4,20080917
CN-102047459-B,20090209
KR-101251861-B1,20090202
CN-102457352-B,20101104
JP-4706150-B2,20010827
US-7681473-B2,20041214
RU-2452881-C9,20110216
US-8113379-B2,20090630
KR-101265303-B1,20090811
CN-201607215-U,20090929
CN-202119310-U,20110516
CN-202874595-U,20121031
CN-203948780-U,20140710
CN-202419812-U,20120104
US-8850473-B2,20080201
JP-4562442-B2,20040712
CN-202931279-U,20121116
US-D704796-S,20130621
CN-203788723-U,20140418
JP-5152202-B2,20080122
DE-102004018323-B4,20040413
RU-2466401-C1,20110315
DE-10246456-B4,20021004
US-7818867-B1,20100108
US-8580674-B2,20081209
KR-101241395-B1,20121101
US-8843608-B2,20110922
CN-101934142-B,20100921
KR-101257864-B1,20110530
NL-2008945-C,20120606
CN-102028000-B,20101101
CN-102082310-B,20101103
CN-102771381-B,20120727
CN-10161366
Query:
SELECT t."publication_number", f.value AS "citation" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t, 
        LATERAL FLATTEN(input => t."citation") f 
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,citation
US-2010250896-A1,"{
  ""application_number"": """",
  ""category"": ""PRS"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2008098083-A1"",
  ""type"": """"
}"
US-2010250896-A1,"{
  ""application_number"": """",
  ""category"": ""PRS"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2008294696-A1"",
  ""type"": """"
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-4700972-A"",
  ""type"": ""Y""
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""EP-0818372-A2"",
  ""type"": ""I""
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-6470731-B1"",
  ""type"": ""Y""
}"
WO-2005092684-A2,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2003144786-A1"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2005206905-A"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2009105299-A"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""WO-2009085098-A1"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-2010070726-A"",
  ""type"": ""A""
}"
WO-2012033172-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""See also references of EP     2615635A4"",
  ""publication_number"": """",
  ""type"": """"
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""JP-H08217728-A"",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""ATTARD G S ET AL: \""NON-SYMMETRIC DIMERIC LIQUID CRYSTALS THE PREPARATION AND PROPERTIES OF THE -(4-CYANOBIPHENYL-4'YLOXY)- -(4-N-ALKYLANILINEBENZYLIDENE-4'OXY) ALKANES\"", LIQUID CRYSTALS,GB,TAYLOR AND FRANCIS LTD, LONDON, vol. 16, no. 4, 1 April 1994 (1994-04-01), pages 529 - 581, XP000434147, ISSN: 0267-8292"",
  ""publication_number"": """",
  ""type"": ""X""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""DATABASE WPI Section Ch Week 199644, Derwent Publications Ltd., London, GB; Class E19, AN 1996-439519, XP002138959"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""G.R. LUCKHURST ET AL.: \""the intercalated smectic A phase The liquid crystal properties of the alpha-(4-cyanobiphenyl-4'-yloxy)-omega-(4-alkyloxycinnamate)alkanes\"", LIQUID CRYSTALS, vol. 18, no. 5, 1995, pages 801 - 809, XP002138958"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""ROZHANSKII I L ET AL: \""SYNTHESIS AND THERMAL PROPERTIES OF DIMERIC ALKOXY-SUBSTITUTED TOLANS\"", LIQUID CRYSTALS,GB,TAYLOR AND FRANCIS LTD, LONDON, vol. 21, no. 5, 1 November 1996 (1996-11-01), pages 631 - 643, XP000639766, ISSN: 0267-8292"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""TSVETKOV N V ET AL: \""ELECTRO-OPTICAL PROPERTIES OF 4,4'-BIS-UW-(4-CYANOBIPHENYL-4'-YLOXYAL KYLOXY BIPHENYLS NEMATICS\"", LIQUID CRYSTALS,GB,TAYLOR AND FRANCIS LTD, LONDON, vol. 22, no. 3, 1 March 1997 (1997-03-01), pages 245 - 253, XP000699097, ISSN: 0267-8292"",
  ""publication_number"": """",
  ""type"": ""A""
}"
WO-0050535-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": ""WATANABE ET AL.: \""antiferroelectric smectic liquid crystal formed by achiral twin dimer with two mesgenic groups linked by alkylene spacer\"", JAPANESE JOURNAL OF APPLIED PHYSICS, PART 2 (LETTERS), vol. 37, no. 4A, 1 April 1998 (1998-04-01), pages L401 - L403, XP000885224"",
  ""publication_number"": """",
  ""type"": ""X""
}"
WO-2009043548-A1,"{
  ""application_number"": """",
  ""category"": ""ISR"",
  ""filing_date"": 0,
  ""npl_text"": """",
  ""publication_number"": ""US-2905245-A"",
  ""type"": ""Y""
}"
WO-2009043548-A1,"{
  ""application_num
Query:
SELECT "publication_number", "embedding_v1" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB 
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,embedding_v1
CA-27-A,"[
  1.542691000000000e-01,
  -1.512821800000000e-01,
  -1.650247300000000e-01,
  6.317439500000000e-03,
  -6.877411000000000e-02,
  7.857726000000000e-02,
  1.997577000000000e-02,
  -1.052709150000000e-01,
  1.906607200000000e-01,
  -3.087626800000000e-02,
  -4.402885000000000e-02,
  -1.932268600000000e-02,
  1.498914700000000e-01,
  -1.014574240000000e-01,
  1.522054700000000e-01,
  2.159083800000000e-02,
  3.287851200000000e-01,
  -3.723864300000000e-02,
  -1.093368460000000e-01,
  -2.695568300000000e-02,
  5.093054000000000e-03,
  -2.561860000000000e-02,
  -8.104277999999999e-02,
  4.378689000000000e-02,
  1.772555000000000e-01,
  1.866227200000000e-01,
  4.738728700000000e-02,
  1.293443900000000e-01,
  -9.107929000000001e-03,
  -5.338581700000000e-03,
  -5.402789600000000e-02,
  9.968319500000000e-02,
  -1.297268900000000e-01,
  -6.103027600000000e-02,
  1.034460960000000e-01,
  -1.370337900000000e-01,
  -1.529048900000000e-02,
  -7.281200600000000e-02,
  -6.650846000000000e-03,
  -5.688674000000000e-02,
  -5.571032000000000e-02,
  -2.353075000000000e-02,
  1.588186900000000e-01,
  1.485413600000000e-01,
  1.301227400000000e-02,
  7.831083000000000e-02,
  -1.220956100000000e-01,
  -3.694782800000000e-02,
  1.388754100000000e-01,
  -1.948010500000000e-01,
  1.644870500000000e-02,
  -1.159949600000000e-01,
  7.601101000000000e-02,
  -1.079300800000000e-01,
  3.773738400000000e-02,
  -3.411133600000000e-01,
  1.087194160000000e-01,
  3.469542000000000e-01,
  -1.208127800000000e-01,
  2.158840900000000e-01,
  -1.885225600000000e-02,
  -4.778167200000000e-02,
  1.922371400000000e-01,
  8.118848500000000e-02
]"
ES-81-Y,"[
  5.887155000000000e-02,
  -1.084279900000000e-01,
  -7.473050000000000e-03,
  -1.078326500000000e-01,
  -1.136954200000000e-01,
  -5.629550000000000e-02,
  -1.293592000000000e-01,
  1.470960500000000e-02,
  1.143989640000000e-01,
  -6.502111000000000e-03,
  1.211329850000000e-01,
  -1.472910300000000e-01,
  1.433625000000000e-01,
  -1.972437000000000e-01,
  -1.466153400000000e-01,
  6.347028000000000e-02,
  1.704387400000000e-01,
  -1.788644500000000e-01,
  -2.144294800000000e-01,
  -5.971858000000000e-02,
  -1.807118600000000e-02,
  9.654319999999999e-03,
  -6.319642000000000e-02,
  -1.158018000000000e-01,
  1.591617600000000e-01,
  -8.069207000000000e-02,
  2.444405900000000e-01,
  2.053556900000000e-01,
  2.203187000000000e-01,
  4.123914000000000e-02,
  -1.226528360000000e-01,
  1.756981200000000e-01,
  1.406480400000000e-01,
  -2.614098500000000e-01,
  -3.579098400000000e-02,
  -3.342285000000000e-02,
  5.340901400000000e-02,
  -2.008394400000000e-01,
  7.221930000000000e-02,
  1.083169000000000e-01,
  -1.035950600000000e-01,
  4.522684600000000e-02,
  2.121584000000000e-01,
  -3.648881000000000e-02,
  -4.667341700000000e-02,
  -8.133340000000000e-02,
  -5.762764000000000e-02,
  1.715386000000000e-01,
  -6.118799400000000e-02,
  -1.188068800000000e-01,
  -4.722248400000000e-02,
  -8.758543000000001e-02,
  -1.545800400000000e-02,
  -1.725661600000000e-02,
  -1.594496200000000e-01,
  -3.453176000000000e-02,
  -7.645045000000000e-02,
  9.057411999999999e-02,
  -3.059179000000000e-01,
  1.417563600000000e-01,
  4.234178700000000e-02,
  6.612614000000000e-02,
  1.629971300000000e-02,
  8.276451000000000e-02
]"
DE-303-C,[]
ES-866-Y,"[
  2.173252600000000e-01,
  -5.955347000000000e-02,
  -8.669304000000000e-02,
  -1.435769700000000e-02,
  -1.091980100000000e-01,
  -5.290851000000000e-02,
  -1.218726560000000e-01,
  -1.733191000000000e-02,
  1.428825100000000e-01,
  4.071840600000000e-02,
  1.569196900000000e-01,
  2.504207000000000e-02,
  1.646801100000000e-01,
  -1.555543000000000e-01,
  -1.366939400000000e-01,
  1.551018000000000e-01,
  2.533057300000000e-01,
  -1.034493300000000e-01,
  -3.249411000000000e-03,
  -1.919896700000000e-02,
  -3.357952500000000e-02,
  7.957726000000000e-02,
  -8.258553000000000e-02,
  -1.893159400000000e-01,
  1.380639200000000e-01,
  -1.185456100000000e-01,
  2.993756800000000e-01,
  1.806876800000000e-01,
  2.209677700000000e-01,
  1.239111650000000e-01,
  -3.356762600000000e-02,
  1.042425860000000e-01,
  1.649517100000000e-01,
  -2.388138300000000e-01,
  1.648602600000000e-02,
  -8.377965499999999e-02,
  1.231861600000000e-01,
  -1.706603200000000e-01,
  1.260255400000000e-01,
  1.798895000000000e-01,
  -1.287039000000000e-01,
  5.932817000000000e-02,
  1.091629300000000e-01,
  -9.887335000000000e-02,
  1.712858300000000e-02,
  -1.140154700000000e-01,
  2.210558600000000e-02,
  9.686722000000000e-02,
  -5.223890000000000e-02,
  -2.214440900000000e-01,
  -1.367440600000000e-02,
  -9.799734500000000e-02,
  6.677625000000000e-02,
  1.251626600000000e-01,
  -2.030494800000000e-01,
  -1.921786200000000e-02,
  -3.204157000000000e-02,
  4.560034300000000e-03,
  -1.331128200000000e-01,
  8.321140000000000e-02,
  -6.589308000000001e-02,
  7.723393000000001e-02,
  2.468057500000000e-02,
  6.641050400000000e-02
]"
FI-150-A,"[
 
Query:
SELECT "publication_number", "filing_date" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   WHERE "filing_date" BETWEEN 20100101 AND 20101231 
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,filing_date
KR-101017597-B1,20101007
US-8463797-B2,20100720
CN-102241207-A,20100513
KR-101142843-B1,20100621
CN-101872406-A,20100429
CN-102031202-B,20101208
DE-102010031283-A1,20100713
US-2010200533-A1,20100209
US-2012082307-A1,20100615
US-2011064191-A1,20100810
US-9005975-B2,20100528
WO-2010106166-A3,20100319
CN-102544456-A,20101214
US-9384181-B2,20101220
CN-102082235-A,20101124
CN-102050619-A,20100802
CN-102479708-B,20101125
KR-101444849-B1,20100107
JP-2012531173-A,20100622
CN-101945350-A,20100906
US-8761324-B1,20100513
CN-102498613-A,20100907
CN-101837370-A,20100427
US-8661329-B1,20100325
US-2011053199-A1,20100823
EP-2415362-A1,20100401
JP-2012047932-A,20100826
CN-102428372-A,20100520
CN-102652304-A,20101213
CN-102054899-B,20100621
EP-2406820-A1,20100304
CN-102450718-B,20101029
US-2012106616-A1,20101029
US-9186273-B2,20100504
US-2011018200-A1,20100722
US-2011291896-A1,20100527
US-2012187663-A1,20100621
US-2011153031-A1,20101220
JP-2013517010-A,20101012
EP-2471945-A1,20101230
US-2012173009-A1,20100325
US-2012233622-A1,20101124
CN-101914234-A,20100729
EP-2385676-A1,20100507
CN-101884362-A,20100614
EP-2434689-A1,20101119
JP-2011222733-A,20100409
WO-2011049397-A2,20101022
US-2011204460-A1,20100219
US-2011021348-A1,20101001
US-9129035-B2,20101005
US-2012025810-A1,20100329
US-7818867-B1,20100108
CN-101934142-B,20100921
KR-20120011656-A,20100729
US-2010245586-A1,20100303
CN-102712194-A,20101214
CN-102028000-B,20101101
CN-102082310-B,20101103
US-2010177864-A1,20100113
EP-2461968-A2,20100611
KR-20120095970-A,20101118
US-8208209-B2,20100415
EP-2223733-A1,20100219
CN-101926889-B,20100809
CN-104333392-B,20100127
KR-101221655-B1,20100824
CN-102714682-B,20100406
WO-2010102006-A2,20100303
US-2012112759-A1,20101109
EP-2305586-A2,20100921
EP-2421060-A1,20100412
US-2011103102-A1,20100222
US-2011252003-A1,20100409
US-2011313882-A1,20100621
EP-2401701-A4,20100219
US-2011001937-A1,20100907
US-8721767-B2,20100907
KR-101008573-B1,20100618
CN-102116427-A,20101216
EP-2402518-A1,20100630
CN-101924570-B,20100611
EP-2416294-A1,20100326
EP-2216590-B1,20100205
KR-101144114-B1,20101025
CN-102154432-A,20101220
CN-102474509-A,20100623
JP-2010246929-A,20100415
US-8351787-B2,20100106
US-2012144352-A1,20101201
US-2010242978-A1,20100409
WO-2011021782-A2,20100720
US-2011152549-A1,20101223
US-2011030117-A1,20100721
KR-101354866-B1,20100707
US-8539609-B2,20100701
RU-2498624-C2,20100614
CN-101750679-B,20100121
DE-102010008779-A1,20100222
CN-101944317-A,20100430
CN-102117784-A,20100812
CN-102055372-A,20101026
EP-2391579-A2,20100202
US-8130337-B2,20100121
WO-2011037202-A1,20100924
US-2012000267-A1,20100704
KR-101001842-B1,20100128
KR-20130121913-A,20101130
US-8168945-B2,20101025
US-8531215-B2,20101110
US-2017112864-A1,20101129
JP-2011229356-A,20100625
US-2012045336-A1,20100511
US-2011180674-A1,20100125
CN-102031341-A,20101211
CN-102290655-A,20100621
CN-102548855-A,20100702
JP-2012101748-A,20101112
US-8348691-B2,20100923
JP-2012036232-A,20100803
WO-2011089783-A1,20101124
JP-2011212197-A,20100331
US-9032150-B2,20100917
WO-2010111045-A1,20100311
JP-2012092690-A,20101026
US-8255845-B2,20100528
US-2012181249-A1,20100929
EP-2216080-A1,20100204
CN-102403137-A,20100917
KR-200453197-Y1,20100310
US-2011027214-A1,20100125
CN-102480671-B,20101126
KR-101158084-B1,20100416
US-8527613-B2,20100126
JP-2010214373-A,20100520
US-2010243777-A1,20100322
CN-102042450-A,20101206
CN-101785749-B,20100209
KR-101424324-B1,20100608
US-8285841-B2,20100607
EP-2233627-A3,20100216
CN-102630181-B,20100917
US-8612463-B2,20100603
KR-100986634-B1,20100104
CN-101954100-A,20100916
ES-2388550-A1,20100119
CN-102388253-A,20100406
JP-2012066873-A,20101112
KR-101754588-B1,20101209
JP-2012003479-A,20100616
US-9657880-B2,20101209
CN-102040365-A,20101103
CN-102640582-A,20101130
US-2011203873-A1,20100222
JP-2011157773-A,20100203
EP-2590873-A1,20100709
CN-101854407-A,20100329
GB-2486649-A,20101221
KR-200469113-Y1,20101224
CN-102274071-A,20100611
CN-101905595-B,20100702
WO-2011072482-A1,20101214
KR-101355269-B1,20100825
WO-2010083028-A1,20100113
EP-2504856-A1,20101123
EP-2419872-A2,20100412
EP-2296235-A3,20100616
KR-101242859-B1,20101105
CN-102372992-A,20100818
US-8740070-B2,20100506
KR-101705581-B1,20100930
US-8682331-B2,20100209
JP-2012075499-A,20100930
WO-2010130549-A3,20100423
WO-2011002863-A2,20100630
JP-2012109642-A,20101115
US-2011143697-A1,20100827
JP-2011178625-A,20100302
US-2010202071-A1,20100111
JP-2012532198-A,20100706
CN-102473522-A,20100701
NL-2004939-C,20100622
CN-102567190-A,20101214
CN-102811863-B,20100121
CN-102128368-B,20101103
US-2012066691-A1,20100914
US-2010215517-A1,20100329
DE-102010024324-B4,20100618
JP-2012112137-A,20101124
US-2010311245-A1,20100603
CN-101936172-B,20100806
CN-102948053-B,20100608
CN-101775450-B,20100305
CN-102531399-A,20101215
DE-102010011643-A1,20100316
CN-101830287-A,20100430
CN-102527430-B,20101229
US-2011107209-A1,20100830
US-2013031929-A1,20101213
US-2010266753-A1,20100630
WO-2011041636-A1,20101001
DE-102010027876-A1,20100416
WO-
Query:
SELECT DISTINCT SUBSTRING(CAST("filing_date" AS TEXT), 1, 4) AS "filing_year" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Answer:
filing_year
1930
2006
1937
1903
1840
1970
1941
1884
2012
2000
1905
1907
1885
1889
1898
1881
2016
2015
1987
1949
1887
1995
1912
1879
2002
1934
1925
1916
1917
1975
1959
1919
1902
1893
1875
1988
1976
1955
1901
1928
1940
2005
1945
1960
1972
1911
1895
1992
2013
1951
2007
1961
1974
1913
1931
1899
1985
1986
1993
1890
1968
1935
2017
1828
1967
1939
2009
1950
1998
1933
1921
1991
1914
1878
1979
1980
1981
1999
1876
1997
1880
2014
1963
1952
1920
1856
2008
1915
1946
2003
1956
1948
1863
1927
1850
1852
1910
2010
1926
1924
1864
0
1953
1996
1938
2011
1989
2004
1909
1969
1929
1936
1962
1918
1897
1922
1923
1865
1994
1854
1965
1982
1851
1964
1947
1906
1900
1848
1859
1966
1877
1973
1954
1883
1944
1867
1866
1983
1978
1904
1868
1942
1908
1861
1871
1971
1943
1896
1860
1858
1958
1990
1984
1874
1977
1857
2001
1957
1932
1894
1882
Query:
SELECT "publication_number", "country_code" 
   FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,country_code
JP-1810118-C,JP
JP-1203714-C,JP
FR-1500580-A,FR
ES-8501233-A1,ES
CA-2165155-A1,CA
FR-2409943-B1,FR
GB-1086860-A,GB
JP-S54117658-A,JP
JP-H0710178-Y2,JP
JP-3172057-B2,JP
US-136580-A,US
US-272220-A,US
US-599187-A,US
CN-1062411-C,CN
DE-1479218-U,DE
EP-2512367-B1,EP
ES-2312527-T3,ES
FR-1000748-A,FR
FR-1573809-A,FR
JP-S5066757-U,JP
JP-S5845249-Y2,JP
US-2103405-A,US
GB-201114438-D0,GB
JP-5707248-B2,JP
JP-2016211567-A,JP
KR-20040075216-A,KR
CN-1954806-A,CN
CN-201399214-Y,CN
JP-1368881-C,JP
JP-1444589-C,JP
FR-1497898-A,FR
DE-2707796-A1,DE
DE-2962208-D1,DE
FR-2233137-A1,FR
GB-2224027-B,GB
JP-S5911756-Y2,JP
JP-2000218515-A,JP
JP-S56169301-A,JP
US-2002102047-A1,US
CN-1467804-A,CN
EP-0988417-B1,EP
JP-H04334685-A,JP
JP-S6359143-U,JP
JP-H0685910-B2,JP
JP-H0350567-B2,JP
JP-5108773-B2,JP
CN-2768052-Y,CN
CN-1940157-B,CN
CN-202318915-U,CN
CN-203200362-U,CN
JP-897785-C,JP
JP-1789132-C,JP
JP-S62113530-U,JP
CA-118661-S,CA
FI-882364-A0,FI
CA-810158-A,CA
DE-2335240-A1,DE
DE-7610943-U1,DE
JP-H0673947-U,JP
JP-S54153049-A,JP
JP-S5716116-U,JP
US-548167-A,US
CN-1055840-A,CN
JP-S6020713-A,JP
JP-S6234024-A,JP
JP-H0995081-A,JP
JP-H1088758-A,JP
GB-189709494-A,GB
JP-2001195445-A,JP
JP-2010101160-A,JP
CN-101746294-A,CN
CN-104170353-A,CN
CN-206056613-U,CN
JP-1032657-C,JP
JP-1654837-C,JP
DK-146223-C,DK
CA-564325-A,CA
GB-0802422-D0,GB
JP-S53139175-U,JP
JP-H01150349-U,JP
JP-2600796-Y2,JP
JP-S591896-U,JP
JP-S4922438-B1,JP
US-419959-A,US
DE-69331528-D1,DE
DE-69430885-T2,DE
EP-1474362-B1,EP
JP-2000346423-A,JP
JP-2765752-B2,JP
KR-900003183-Y1,KR
JP-2003229053-A,JP
JP-2007241524-A,JP
JP-5129599-B2,JP
KR-100547071-B1,KR
KR-20070020426-A,KR
KR-20130050682-A,KR
CN-204556165-U,CN
ES-66185-Y,ES
CA-1331409-C,CA
FI-891492-A0,FI
GB-1348507-A,GB
JP-S60179587-U,JP
US-332138-A,US
CN-1112492-C,CN
DE-566539-C,DE
DE-845109-C,DE
JP-S63125649-A,JP
JP-S6423693-U,JP
JP-S5243021-U,JP
JP-S5566205-U,JP
JP-H0825023-B2,JP
JP-2003215980-A,JP
JP-4255884-B2,JP
KR-100295305-B1,KR
CN-101547005-A,CN
CN-101988676-A,CN
CN-203259375-U,CN
CN-205932945-U,CN
DE-202006018912-U1,DE
FR-2828332-A1,FR
GB-1375879-A,GB
JP-S53161674-U,JP
US-2053075-A,US
CN-2484753-Y,CN
CN-1212523-A,CN
FI-20010786-A,FI
JP-S6359144-U,JP
JP-2799203-B2,JP
JP-H08143121-A,JP
US-1837725-A,US
US-2304134-A,US
US-1864623-A,US
JP-5991128-B2,JP
JP-2016105749-A,JP
RU-2191214-C2,RU
RU-2008140707-A,RU
CN-103265598-B,CN
CN-203928708-U,CN
CN-204557664-U,CN
CN-206326242-U,CN
CN-104559893-B,CN
CN-106856628-A,CN
US-6778773-B2,US
JP-H00985753-A,JP
JP-1512007-C,JP
NL-28211-C,NL
CA-2184504-C,CA
FR-877274-A,FR
JP-S60218905-A,JP
JP-H04326774-A,JP
JP-S5125160-A,JP
FR-1012104-A,FR
JP-S5944363-A,JP
JP-H081564-A,JP
US-1233474-A,US
US-2002011230-A1,US
JP-2003169856-A,JP
US-811638-A,US
KR-200338652-Y1,KR
KR-20070041890-A,KR
CN-1816294-A,CN
CN-2858160-Y,CN
CN-201276086-Y,CN
CN-201816145-U,CN
CN-102907994-A,CN
JP-1573454-C,JP
JP-1721868-C,JP
JP-2100371-C,JP
DK-358583-D0,DK
ES-146285-Y,ES
GB-478690-A,GB
DE-2649618-B2,DE
DE-3766112-D1,DE
DE-8007402-U1,DE
FR-390089-A,FR
FR-638126-A,FR
FR-2638622-B1,FR
JP-H0584037-U,JP
JP-S4739450-Y1,JP
JP-H0642846-U,JP
NL-296405-A,NL
NL-7211943-A,NL
EP-2781788-B1,EP
JP-S5072414-U,JP
JP-S5846920-U,JP
JP-S5874811-U,JP
JP-S5687776-U,JP
US-D279853-S,US
KR-920008597-Y1,KR
JP-2004313014-A,JP
JP-6137070-B2,JP
RU-2008132286-A,RU
US-754320-A,US
CN-105823611-A,CN
CN-106739164-A,CN
CN-205558012-U,CN
BE-512467-A,BE
CA-2244766-A1,CA
DE-1803332-A1,DE
DE-2149141-A1,DE
GB-2089320-A,GB
JP-S62164685-U,JP
JP-H066780-Y2,JP
DE-69322442-T2,DE
EP-1933436-B1,EP
EP-0782478-B1,EP
EP-0993180-B1,EP
JP-S5128923-U,JP
JP-S5153284-U,JP
JP-S5376919-A,JP
JP-3340813-B2,JP
JP-2000192758-A,JP
JP-H11193667-A,JP
RU-17326-U1,RU
KR-20110049427-A,KR
CN-101531763-A,CN
CN-201900010-U,CN
CN-202142477-U,CN
CN-202417422-U,CN
CN-202807027-U,CN
CA-27189-A,CA
JP-S4874140-A,JP
JP-2887866-B2,JP
FR-2239893-A5,FR
JP-H09201246-A,JP
JP-S6125607-Y2,JP
JP-H069665-Y2,JP
JP-H02145867-U,JP
DE-1899993-U,DE
DK-1279779-T3,DK
EP-1395943-B1,EP
JP-S61104472-A,JP
US-3605178-A,US
ES-2301340-B1,ES
KR-890006762-Y1,KR
KR-910005717-Y1,KR
JP-WO2006134667-A1,JP
JP-WO2011121828-A1,JP
JP-6013229-B2,JP
KR-200371816-Y1,KR
KR-20040093694-A,KR
CN-104911016-A,CN
JP-1721970-C,JP
JP-H00979262-A,JP
JP-2045702-C,JP
CA-607467-A,CA
CA-870537-A,CA
DE-2913333-C2,DE
GB-2156898-B,GB
GB-9701425-D0,GB
DE-69108459-T2,DE
DE-69402587-D1,DE
DE-690465-C,DE
JP-S5354430-A,JP
JP-S5788835-A,JP
JP-H0510017-A,JP
JP-H08159838-A,JP
US-1863894-A,US
JP-4882580-B2,JP
JP-5210626-B2,JP
RU-2345965-C2,RU
RU-2355420-C2,RU
KR-100352139-B1,KR
KR-100387884-B1,KR
KR-20120048256-A,KR
CN-201742521-U,CN
CN-202693633-U,CN
CN-202679530-U,CN
CN-106625363-A,CN
CN-205519698-U,CN
JP-1260064-C,JP
DE-54582-C,DE
ES-128308-A1,ES
DE-2516533-A1,DE
GB-0905075-D0,GB
GB-192211-A,GB
JP-2605593-Y2,JP
JP-S5020200-Y2,JP
JP-S524076-A,JP
DE-19811661-A1,DE
DE-29605835-U1,DE
DE-69131766-T2,DE
EP-2982223-A2,EP
EP-0172283-B1,EP
JP-S5743740-U,JP
JP-H04296316-A,JP
US-D487006-S,US
US-3538803-A,US
US-2002044447-A1,US
JP-2003225
Query:
SELECT "publication_number", "title" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB 
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,title
CA-27-A,Improvement on spinning wheel
ES-81-Y,Improvements heels for footwear.
DE-303-C,
ES-866-Y,Improvements gravestones tombs and funerary niches.
FI-150-A,"The monitor method for preparing dubbelugnar for the preparation af tjära, lysolja, terpentin mm.  ur furustubbar Science Notter"
FI-250-A,Sjelfläggningsapparat to the skördemaskiner
FR-336-E,Improvements in the processing of cotton and cotton goods to make them nonflammable
NL-284-C,
NL-947-C,
BE-107-T1,Bouches fire.
CA-1911-A,A ralway track clearer
CA-4005-A,Leather scouring machine
CA-4106-A,Automatic car-coupling
CA-4698-A,Ladies&#39; work table
CA-4801-A,Washing machine
CA-5943-A,Improvement on bed bottoms
CA-6183-A,Improvements in wood planing machines
CA-6207-A,Improvements in lamps
CA-6390-A,Reversible plough
CA-6969-A,Machine for making spirally formed tubes
CA-8931-S,Bottle
CA-9897-A,Improvements on fare registers
DE-3129-C,
DE-3301-C,
DE-3884-C,
DE-3983-C,
DE-5976-C,
DK-2807-C,Process for the preparation of soluble salts of barium.
DK-3080-C,Devices in trays for packing eggs.
DK-3107-C,The production method for Smedejærns Finned with continuous helical rib.
DK-3184-C,Water Pitcher.
DK-3510-C,Device at the apparatus for the production of acetylene.
DK-5867-C,Automatic oiler Snækker and Snækkehjul in centrifuges.
DK-5921-C,Ankerbevikling with open coils for generators or motors with one-way Power.
DK-6491-A,Cable mounting of the guard device for a telecommunications cable
DK-7210-C,"Alloy of nickel, aluminum, copper and iron."
DK-8069-C,"Receiver means for rotating steam, gas or combustion products and the like that is also useful as a gas compressor."
DK-8466-C,Method and apparatus for extracting sulfur and Cyanides in the purification of from Belysningsgas.
DK-9281-C,Method for Preparation of an image bearer of photosensitive papers.
DK-9359-C,Device at Telephone exchange.
ES-1062-U,Truck for transport of concrete and mortar tilting download and auto-return to the loading position.
ES-1498-U,Razor.
ES-1524-Y,Device cuvette for containing papers.
ES-1872-U,Packing box for rolls of raw rubber.
ES-2542-Y,Purse fastening system.
ES-2819-Y,"Burning stove liquids, essentially diesel fuel."
ES-2960-U,Tong for sewing straps.
ES-3045-U,Sliding adjuster for clothing
ES-4483-Y,Improved sealing tap water.
ES-4723-Y,Pocket electric lamp.
ES-4858-U,A simplified shaving machine
ES-5089-Y,Breastplate of interposition between the foot and the shoe.
ES-5219-Y,Cigarette paper sheet.
ES-5716-U,A protective cardboard disc to facilitate changes retaining therein a stamp
ES-5975-Y,Bottle or container with inner compartments that allow contain different kinds of liquids.
ES-6454-U,Fonmularios game combined with carbon paper for use in typewriters.
ES-6552-Y,protection against low temperatures shirt.
ES-6928-Y,Clamping device straps to the handles of wristwatches.
ES-6962-Y,Provided cork extraction medium.
ES-7086-Y,Device in gas carbide drive motors.
ES-7407-Y,Folding bike reduced rate.
ES-7489-Y,Cover or wrapper to protect the crowns of rayon.
ES-7516-U,Plywood floors for shoemaking.
ES-7538-U,"Simile, girdle, bra and panty."
ES-764-H3,Machine to raise water called fast ferris wheel
ES-8269-Y,Shuttering elements or molded or reinforced concrete floors lighten parts.
FI-1825-A,The process of at verkställande Evaporation at high the temperaturer Science To this was apparat
FI-291-U1,Utloppsfoerbindning in a substitutionsluftinslaeppningsventil
FI-3021-A,Förbättring à formmaskiner for cementrör med-regulating device for formlådans of skakningrörelse
FI-4211-A,Four-stroke internal combustion engine ignition device
FI-4543-A,Invertlampa for conveyance brännämne
FI-8034-A,The way to handle sulfitijätelipeää
FI-8619-A,Manner for the preparation of trådar of Varje finhet ur råviskos
FI-8985-A,Förgasare for förbränningskraftmaskiner with a rotatably i förgasarkroppen stryporgan
FI-902-U1,Sparkstoetting
FR-1186-E,New Bunsen burner of the kind to recovery and two concentric flames
FR-1382-E,An automatic switch
FR-1550-M,"pharmaceutical product based on total capsicum extract, polyvinylpyrrolidone and ergotamine tartrate."
FR-2064-E,Incandescent lamp with alcohol
FR-2510-M,New medicament for the treatment of staphylococcal infections and the like.
FR-2578-M,"A pharmaceutical composition for the treatment of all anemia, asthenia and convalescence states."
FR-2635-E,Improvement in the keyboard musical instruments
FR-3293-M,Drug acting on the central nervous system and having in particular anti-anxiety and tranquilizing properties was based on new sulfonamides.
FR-5174-E,A mobile machine for mixing and at the same time heat the asphalt and similar materials
FR-5770-E,Free wheel
FR-7085-M,
FR-7747-E,Doler machine and sand the skin for the glove
FR-8053-M,
FR-8143-M,
NL-3613-C,
NL-4187-C,
NL-5034-C,
NL-9752-C,
NL-9761-C,
RU-815-U1,Transport and sorting conveyor
US-1260-A,Improvement in nott s stove
US-1844-A,John kirkman
US-3704-A,Tongtjing and grooving 
Query:
SELECT "publication_number", "grant_date", "kind_code" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    WHERE "grant_date" IS NOT NULL 
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,grant_date,kind_code
JP-1810118-C,0,C
JP-1203714-C,0,C
FR-1500580-A,19671103,A
ES-8501233-A1,0,A1
CA-2165155-A1,0,A1
FR-2409943-B1,19800822,B1
GB-1086860-A,0,A
JP-S54117658-A,0,A
JP-H0710178-Y2,19950308,Y2
JP-3172057-B2,20010604,B2
US-136580-A,18730311,A
US-272220-A,18830213,A
US-599187-A,18980215,A
CN-1062411-C,20010228,C
DE-1479218-U,0,U
EP-2512367-B1,20131113,B1
ES-2312527-T3,20090301,T3
FR-1000748-A,19520215,A
FR-1573809-A,19690711,A
JP-S5066757-U,0,U
JP-S5845249-Y2,19831014,Y2
US-2103405-A,19371228,A
GB-201114438-D0,20111005,D0
JP-5707248-B2,20150422,B2
JP-2016211567-A,0,A
KR-20040075216-A,0,A
CN-1954806-A,0,A
CN-201399214-Y,20100210,Y
JP-1368881-C,0,C
JP-1444589-C,0,C
FR-1497898-A,19671013,A
DE-2707796-A1,0,A1
DE-2962208-D1,19820325,D1
FR-2233137-A1,0,A1
GB-2224027-B,19920115,B
JP-S5911756-Y2,19840410,Y2
JP-2000218515-A,0,A
JP-S56169301-A,0,A
US-2002102047-A1,0,A1
CN-1467804-A,0,A
EP-0988417-B1,20060823,B1
JP-H04334685-A,0,A
JP-S6359143-U,0,U
JP-H0685910-B2,19941102,B2
JP-H0350567-B2,19910802,B2
JP-5108773-B2,20121226,B2
CN-2768052-Y,20060329,Y
CN-1940157-B,20110413,B
CN-202318915-U,20120711,U
CN-203200362-U,20130918,U
JP-897785-C,0,C
JP-1789132-C,0,C
JP-S62113530-U,0,U
CA-118661-S,20080124,S
FI-882364-A0,0,A0
CA-810158-A,19690408,A
DE-2335240-A1,0,A1
DE-7610943-U1,19760729,U1
JP-H0673947-U,0,U
JP-S54153049-A,0,A
JP-S5716116-U,0,U
US-548167-A,18951015,A
CN-1055840-A,0,A
JP-S6020713-A,0,A
JP-S6234024-A,0,A
JP-H0995081-A,0,A
JP-H1088758-A,0,A
GB-189709494-A,0,A
JP-2001195445-A,0,A
JP-2010101160-A,0,A
CN-101746294-A,0,A
CN-104170353-A,0,A
CN-206056613-U,20170329,U
JP-1032657-C,0,C
JP-1654837-C,0,C
DK-146223-C,19840109,C
CA-564325-A,19581007,A
GB-0802422-D0,20080319,D0
JP-S53139175-U,0,U
JP-H01150349-U,0,U
JP-2600796-Y2,19991025,Y2
JP-S591896-U,0,U
JP-S4922438-B1,19740608,B1
US-419959-A,18900121,A
DE-69331528-D1,20020314,D1
DE-69430885-T2,20030130,T2
EP-1474362-B1,20061122,B1
JP-2000346423-A,0,A
JP-2765752-B2,19980618,B2
KR-900003183-Y1,19900414,Y1
JP-2003229053-A,0,A
JP-2007241524-A,0,A
JP-5129599-B2,20130130,B2
KR-100547071-B1,20060131,B1
KR-20070020426-A,0,A
KR-20130050682-A,0,A
CN-204556165-U,20150812,U
ES-66185-Y,19581201,Y
CA-1331409-C,19940809,C
FI-891492-A0,0,A0
GB-1348507-A,0,A
JP-S60179587-U,0,U
US-332138-A,18851208,A
CN-1112492-C,20030625,C
DE-566539-C,19321217,C
DE-845109-C,19520728,C
JP-S63125649-A,0,A
JP-S6423693-U,0,U
JP-S5243021-U,0,U
JP-S5566205-U,0,U
JP-H0825023-B2,19960313,B2
JP-2003215980-A,0,A
JP-4255884-B2,20090415,B2
KR-100295305-B1,20010712,B1
CN-101547005-A,0,A
CN-101988676-A,0,A
CN-203259375-U,20131030,U
CN-205932945-U,20170208,U
DE-202006018912-U1,20070215,U1
FR-2828332-A1,0,A1
GB-1375879-A,0,A
JP-S53161674-U,0,U
US-2053075-A,19360901,A
CN-2484753-Y,20020410,Y
CN-1212523-A,0,A
FI-20010786-A,0,A
JP-S6359144-U,0,U
JP-2799203-B2,19980917,B2
JP-H08143121-A,0,A
US-1837725-A,19311222,A
US-2304134-A,19421208,A
US-1864623-A,19320628,A
JP-5991128-B2,20160914,B2
JP-2016105749-A,0,A
RU-2191214-C2,20021020,C2
RU-2008140707-A,0,A
CN-103265598-B,20150304,B
CN-203928708-U,20141105,U
CN-204557664-U,20150812,U
CN-206326242-U,20170714,U
CN-104559893-B,20160921,B
CN-106856628-A,0,A
US-6778773-B2,20040817,B2
JP-H00985753-A,0,A
JP-1512007-C,0,C
NL-28211-C,0,C
CA-2184504-C,20051213,C
FR-877274-A,19421202,A
JP-S60218905-A,0,A
JP-H04326774-A,0,A
JP-S5125160-A,0,A
FR-1012104-A,19520704,A
JP-S5944363-A,0,A
JP-H081564-A,0,A
US-1233474-A,19170717,A
US-2002011230-A1,0,A1
JP-2003169856-A,0,A
US-811638-A,19060206,A
KR-200338652-Y1,20040116,Y1
KR-20070041890-A,0,A
CN-1816294-A,0,A
CN-2858160-Y,20070117,Y
CN-201276086-Y,20090722,Y
CN-201816145-U,20110504,U
CN-102907994-A,0,A
JP-1573454-C,0,C
JP-1721868-C,0,C
JP-2100371-C,0,C
DK-358583-D0,19830805,D0
ES-146285-Y,19700116,Y
GB-478690-A,0,A
DE-2649618-B2,0,B2
DE-3766112-D1,19901213,D1
DE-8007402-U1,19810827,U1
FR-390089-A,19080925,A
FR-638126-A,19280516,A
FR-2638622-B1,19920306,B1
JP-H0584037-U,0,U
JP-S4739450-Y1,19721129,Y1
JP-H0642846-U,0,U
NL-296405-A,0,A
NL-7211943-A,0,A
EP-2781788-B1,20161221,B1
JP-S5072414-U,0,U
JP-S5846920-U,0,U
JP-S5874811-U,0,U
JP-S5687776-U,0,U
US-D279853-S,19850730,S
KR-920008597-Y1,19921205,Y1
JP-2004313014-A,0,A
JP-6137070-B2,20170531,B2
RU-2008132286-A,0,A
US-754320-A,19040308,A
CN-105823611-A,0,A
CN-106739164-A,0,A
CN-205558012-U,20160907,U
BE-512467-A,0,A
CA-2244766-A1,0,A1
DE-1803332-A1,0,A1
DE-2149141-A1,0,A1
GB-2089320-A,0,A
JP-S62164685-U,0,U
JP-H066780-Y2,19940223,Y2
DE-69322442-T2,19990805,T2
EP-1933436-B1,20170510,B1
EP-0782478-B1,19981209,B1
EP-0993180-B1,20030625,B1
JP-S5128923-U,0,U
JP-S5153284-U,0,U
JP-S5376919-A,0,A
JP-3340813-B2,20021105,B2
JP-2000192758-A,0,A
JP-H11193667-A,0,A
RU-17326-U1,20010327,U1
KR-20110049427-A,0,A
CN-101531763-A,0,A
CN-201900010-U,20110720,U
CN-202142477-U,20120208,U
CN-202417422-U,20120905,U
CN-202807027-U,20130320,U
CA-27189-A,18870718,A
JP-S4874140-A,0,A
JP-2887866-B2,19990510,B2
FR-2239893-A5,0,A5
JP-H09201246-A,0,A
JP-S6125607-Y2,19860801,Y2
JP-H069665-Y2,19940316,Y2
JP
Query:
SELECT t."publication_number", f.value 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB t, 
         LATERAL FLATTEN(input => t."embedding_v1") f 
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,VALUE
US-2002199075-A1,1.327330600000000e-01
US-2002199075-A1,-1.390248800000000e-01
US-2002199075-A1,-8.851990000000000e-02
US-2002199075-A1,-9.534649000000001e-02
US-2002199075-A1,-9.190445999999999e-02
US-2002199075-A1,-7.793257400000000e-02
US-2002199075-A1,-2.276682800000000e-03
US-2002199075-A1,-1.273512700000000e-01
US-2002199075-A1,1.164167000000000e-01
US-2002199075-A1,1.824077200000000e-02
US-2002199075-A1,1.768792300000000e-01
US-2002199075-A1,2.043863400000000e-01
US-2002199075-A1,-5.214452700000000e-02
US-2002199075-A1,-9.571313999999999e-03
US-2002199075-A1,-2.218892700000000e-01
US-2002199075-A1,3.377413400000000e-02
US-2002199075-A1,1.092247100000000e-01
US-2002199075-A1,1.405695800000000e-01
US-2002199075-A1,-8.305453000000000e-02
US-2002199075-A1,1.380776500000000e-01
US-2002199075-A1,4.118194000000000e-02
US-2002199075-A1,5.223548400000000e-02
US-2002199075-A1,6.996955000000001e-02
US-2002199075-A1,-1.863214200000000e-01
US-2002199075-A1,-5.879353700000000e-03
US-2002199075-A1,-1.181809200000000e-01
US-2002199075-A1,1.821372000000000e-01
US-2002199075-A1,1.003657000000000e-02
US-2002199075-A1,2.518988200000000e-02
US-2002199075-A1,1.700414300000000e-01
US-2002199075-A1,-1.697541800000000e-01
US-2002199075-A1,-9.175000000000000e-02
US-2002199075-A1,5.969878300000000e-02
US-2002199075-A1,1.772470000000000e-02
US-2002199075-A1,-1.060385700000000e-01
US-2002199075-A1,-1.592023500000000e-01
US-2002199075-A1,9.980810000000000e-02
US-2002199075-A1,-1.771379400000000e-01
US-2002199075-A1,1.230216800000000e-02
US-2002199075-A1,3.092083900000000e-02
US-2002199075-A1,-1.014561800000000e-01
US-2002199075-A1,-2.828363500000000e-01
US-2002199075-A1,1.361863500000000e-01
US-2002199075-A1,1.721303300000000e-01
US-2002199075-A1,-4.398971000000000e-02
US-2002199075-A1,-1.389469950000000e-02
US-2002199075-A1,1.883381200000000e-01
US-2002199075-A1,-4.531229700000000e-02
US-2002199075-A1,-1.430749900000000e-01
US-2002199075-A1,1.128079000000000e-01
US-2002199075-A1,-2.814714300000000e-01
US-2002199075-A1,2.599174500000000e-02
US-2002199075-A1,2.006464200000000e-01
US-2002199075-A1,-3.294414300000000e-02
US-2002199075-A1,-3.229250400000000e-02
US-2002199075-A1,3.630416000000000e-02
US-2002199075-A1,-5.539227300000000e-02
US-2002199075-A1,3.239953500000000e-02
US-2002199075-A1,-2.809038200000000e-01
US-2002199075-A1,1.027128200000000e-01
US-2002199075-A1,2.351760300000000e-04
US-2002199075-A1,1.692046800000000e-01
US-2002199075-A1,-5.161380400000000e-02
US-2002199075-A1,1.296108200000000e-01
US-2003048328-A1,-2.702655500000000e-01
US-2003048328-A1,-1.838806400000000e-01
US-2003048328-A1,1.285569000000000e-02
US-2003048328-A1,-1.157763800000000e-01
US-2003048328-A1,-1.229929850000000e-01
US-2003048328-A1,-1.701488500000000e-02
US-2003048328-A1,-1.346644400000000e-02
US-2003048328-A1,-3.185733800000000e-02
US-2003048328-A1,1.913188800000000e-01
US-2003048328-A1,-2.219920000000000e-02
US-2003048328-A1,8.446085000000000e-02
US-2003048328-A1,2.329903500000000e-01
US-2003048328-A1,1.853730500000000e-01
US-2003048328-A1,-1.128309000000000e-01
US-2003048328-A1,1.308142400000000e-01
US-2003048328-A1,-1.681749500000000e-02
US-2003048328-A1,2.669037800000000e-03
US-2003048328-A1,-3.269643000000000e-02
US-2003048328-A1,-2.339415600000000e-01
US-2003048328-A1,8.544633500000000e-02
US-2003048328-A1,-3.111701800000000e-02
US-2003048328-A1,6.132171700000000e-02
US-2003048328-A1,-6.193825500000000e-03
US-2003048328-A1,-1.194184100000000e-01
US-2003048328-A1,3.186201000000000e-02
US-2003048328-A1,-5.385209600000000e-02
US-2003048328-A1,-6.190734700000000e-02
US-2003048328-A1,-1.719800500000000e-01
US-2003048328-A1,5.044012500000000e-02
US-2003048328-A1,-1.428283500000000e-01
US-2003048328-A1,3.900431000000000e-02
US-2003048328-A1,-1.689109800000000e-01
US-2003048328-A1,1.080429500000000e-01
US-2003048328-A1,3.628505400000000e-02
US-2003048328-A1,-1.093701350000000e-01
US-2003048328-A1,-4.550829000000000e-02
US-2003048328-A1,2.120426300000000e-02
US-2003048328-A1,-3.028842000000000e-01
US-2003048328-A1,9.250326000000000e-02
US-2003048328-A1,5.986650300000000e-02
US-2003048328-A1,8.118051000000000e-02
US-2003048328-A1,-6.228786000000000e-02
US-2003048328-A1,-8.558510000000000e-02
US-2003048328-A1,-9.565390000000000e-02
US-2003048328-A1,-4.911348000000000e-02
US-2003048328-A1,-1.153620600000000e-02
US-2003048328-A1,-1.124967800000000e-01
US-2003048328-A1,-1.549457200000000e-01
US-2003048328-A1,2.103537600000000e-01
US-2003048328-A1,-1.087370300000000e-01
US-2003048328-A1,-1.879206600000000e-01
US-2003048328-A1,1.774610300000000e-01
US-2003048328-A1,-2.214985200000000e-01
US-2003048328-A1,-3.011048300000000e-03
US-2003048328-A1,-1.456843900000000e-01
US-2003048328-A1,1.522214200000000e-02
US-2003048328-A1,-1.584044000000000e-02
US-2003048328-A1,-1.045927400000000e-01
US-2003048328-A1,-1.666246700000000e-01
US-2003048328-A1,-2.193481700000000e-02
US-2003048328-A1,2.186357500000000e-01
US-2003048328-A1,6.25199300000
Query:
SELECT 
  cp.cited_pub AS "publication_number",
  COUNT(DISTINCT cp.citing_pub) AS "number_of_forward_citations"
FROM (
  SELECT 
    t1."publication_number" AS citing_pub,
    c.value:"publication_number"::STRING AS cited_pub
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t1,
       LATERAL FLATTEN(input => t1."citation") c
) cp
JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS tp
  ON cp.cited_pub = tp."publication_number"
WHERE tp."country_code" = 'US'
  AND tp."kind_code" = 'B2'
GROUP BY cp.cited_pub
ORDER BY "number_of_forward_citations" DESC
LIMIT 1;
Answer:
publication_number,number_of_forward_citations
US-8357181-B2,4
Query:
SELECT t."publication_number", f.value::VARIANT:"text"::STRING AS "title_text"
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS t, 
         LATERAL FLATTEN(input => t."title_localized") f 
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,title_text
EP-1886379-A4,Antennenkonstruktion zum beispiel für ein rfid-transpondersystem
EP-1886379-A4,"Antenna construction, for example for an rfid transponder system"
EP-1886379-A4,Structure d&#39;antenne destinee notamment a un systeme de transpondeur rfid
EP-2919794-A4,Minced cartilage systems and methods
EP-2919794-A4,Zerkleinerte knorpelsysteme und verfahren
EP-2919794-A4,Systèmes de cartilage haché et méthodes associées
US-2010231814-A1,Liquid crystal display device and its driving method
JP-S5615636-A,Horseshoe and production thereof
DE-19627335-C1,Steckerstift für eine Steckerbrücke
DE-19627335-C1,Contact pin for bridge of pluggable electric connector
EP-2915604-A1,Appareil de butée arrière
EP-2915604-A1,Back gauge apparatus
EP-2915604-A1,Hinteranschlagsvorrichtung
US-9125088-B2,Dynamic robust header compression
RU-2437094-C1,Method for determining water stability of soil aggregates
RU-2437094-C1,Способ определения водоустойчивости почвенных агрегатов
DE-3402572-A1,Verfahren zur herstellung von plattenfoermigen waermetauschern
DE-3402572-A1,Process for producing plate-shaped heat exchangers
US-4048517-A,Logic element
US-3242451-A,Gear actuated variable resistor
CN-104254224-A,Electronic product metal shell and mobile phone
CN-104254224-A,一种电子产品金属壳体和手机
JP-S61204096-A,Composition for inhibiting deposition of scale
CN-103513816-B,显示装置
WO-2010131204-A2,Photovoltaic device and production method
WO-2010131204-A2,Dispositif photovoltaique et procede de fabrication
CN-100420310-C,合格优先权队列调度器
CN-100420310-C,Qualifid priority queue dispatcher
JP-H05303965-A,二酸化マンガン／リチウム電池用正極の製造法
JP-H05303965-A,Manufacture of positive electrode for manganese dioxide/ lithium battery
US-9438870-B2,"Display system, image display device, and method of controlling display system"
JP-S5792095-A,Bleaching agent composition
DE-4123952-A1,Hubsteuerung eines stapelgreiferkopfes fuer steinformlinge
CN-103111664-A,Bimetal hole saw connecting shank
CN-103111664-A,双金属孔锯接柄
US-3240097-A,Peg device for stringed instruments
CN-102803826-A,照明装置、显示装置以及电视接收装置
CN-102803826-A,"Lighting device, display apparatus, and television receiving equipment"
CN-102985192-B,轧制机及具备该轧制机的串联式轧制设备
CN-102985192-B,Rolling machine and tandem rolling facility equipped with same
CN-103871874-A,Manufacturing method and structure of high-power silicon transient voltage suppressor diode
CN-103871874-A,大功率硅瞬态电压抑制二极管的制作方法及结构
CN-105547016-A,Anti-freezing device for double-pipe heat exchanger and manufacturing method of anti-freezing device
CN-105547016-A,一种套管换热器结冰防冻装置及其制造方法
US-5534075-A,Process for the production of glucose
US-4624244-A,Device for aiding cardiocepital venous flow from the foot and leg of a patient
US-4189344-A,Method of texturing untextured dry sanitary tissue web
JP-2013002158-A,Faucet device
JP-2013002158-A,水栓装置
DE-4016448-A1,Mobile toy with inclined rotating discs - which are driven by endless chain with rods engaging holes in discs
DE-4016448-A1,Bewegungsspielgeraet
CN-105715030-A,间距及长度可调的单导架多级升降工作平台及其施工方法
CN-105715030-A,Single-guide-frame multi-stage lifting working platform with adjustable spacing and length and construction method for single-guide-frame multi-stage lifting working platform
GB-2472027-A,"Air pressure safety controller for inflatable bag, stopper, bladder or pneumatic flap valve system used for sealing pipes etc for containing spills etc"
WO-2005079497-A2,Substituted fused bicyclic amines as modulators of chemokine receptor activity
WO-2005079497-A2,Amines bicycliques condensees substituees utilisees en tant que modulateurs de l&#39;activite du recepteur de la chimiokine
CN-104036274-B,通过识别物品表面的图像以辨别其真伪的方法及装置
KR-101143973-B1,A refrigerating apparatus
KR-101143973-B1,냉각 장치
US-3078132-A,Cabinet with sewing machine supported from front hinges
CN-102791605-A,Suspension body supporting device for elevator
CN-102791605-A,电梯的悬挂体支承装置
US-9355218-B2,Secure medication transport and administration system
EP-2436642-A3,Entonnoir pour remplir de l&#39;huile
EP-2436642-A3,Oil-feeding funnel
EP-2436642-A3,Öleinfülltrichter
DE-10259469-B4,Verdeckvorrichtung und Verfahren zur Betätigung einer Verdeckvorrichtung
US-4753615-A,Electrical connection and fastener therefor
US-3216796-A,Caustic regeneration
JP-3417934-B2,可変長符号化方法及び装置
CN-101299299-B,一种匝道汇入控制器调试和现场紧急控制的系统及其方法
CN-101299299-B,On-site control method of ramp afflux controller and system thereof
EP-1127590-A1,Schwimmflosse mit auswechselbarem Flossenblatt
EP-1127590-A1,Palme de natation à voilure interchangeable
EP-1127590-A1,Swimming flipper with interchangeable blade
US-6655637-B1,Spacecraft for removal of space orbital debris
CN-101894718-B,电子发射元件及其制造方法、使用电子发射元件的各装置
CN-101894718-B,"Electron emitting element, manufacturing method thereof, and multiple devices with the electron emitting element"
DE-102015012278-A1,Dreidimensionale organische Leuchtdiodenvorrichtung
CN-100434804-C,Flow regulating method and apparatus for gas
CN-100434804-C,炭化氢类气体的流量调节方法和装置
KR-100709148-B1,피부 노화나 손상
Query:
SELECT "application_number", "application_number_formatted" 
    FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
    LIMIT 1000;
Answer:
Too long, hard cut:
application_number,application_number_formatted
,
,
FR-82617-A,FR82617A
ES-527521-A,ES527521A
CA-2165155-A,CA 2165155
FR-7735619-A,FR7735619A
GB-1772466-A,GB1772466A
JP-2447378-A,JP2447378A
JP-2769688-U,JP2769688U
JP-8042795-A,JP8042795A
US-136580D-A,
US-272220D-A,
US-599187D-A,
CN-94192833-A,CN 94192833
DE-1479218D-U,DENDAT1479218D
EP-10796532-A,EP20100796532
ES-02258408-T,ES02258408T
FR-1000748D-A,
FR-1573809D-A,
JP-12157373-U,JP12157373U
JP-16786675-U,JP16786675U
US-53364931-A,
GB-201114438-A,GB201114438A
JP-2011138029-A,JP2011138029A
JP-2016092764-A,JP2016092764A
KR-20030010726-A,KR20030010726A
CN-200510116937-A,CN 200510116937
CN-200920149802-U,CN 200920149802
,
,
FR-81735-A,FR81735A
DE-2707796-A,DE19772707796
DE-2962208-A,DE19792962208
FR-7420889-A,FR7420889A
GB-8922854-A,GB8922854A
JP-1115379-U,JP1115379U
JP-2716799-A,JP2716799A
JP-7267680-A,JP7267680A
US-8301902-A,US10083019
CN-02141055-A,CN 02141055
EP-98937437-A,EP19980937437
JP-10443791-A,JP10443791A
JP-15313886-U,JP15313886U
JP-28671085-A,JP28671085A
JP-50201484-A,JP50201484A
JP-2008531156-A,JP2008531156A
CN-200420014188-U,CN 200420014188
CN-200610139784-A,CN 200610139784
CN-201120469608-U,CN 201120469608
CN-201320200154-U,CN 201320200154
,
,
JP-73886-U,JP73886U
CA-118661-F,CA 118661
FI-882364-A,FI882364A
CA-810158D-A,
DE-2335240-A,DE19732335240
DE-7610943-U,DE19767610943
JP-1372293-U,JP1372293U
JP-6127078-A,JP6127078A
JP-8757880-U,JP8757880U
US-548167D-A,
CN-91102212-A,CN 91102212
JP-12906083-A,JP12906083A
JP-17353585-A,JP17353585A
JP-25540495-A,JP25540495A
JP-26678396-A,JP26678396A
GB-189709494D-A,
JP-2000361256-A,JP2000361256A
JP-2009241960-A,JP2009241960A
CN-200910172035-A,CN 200910172035
CN-201380010040-A,CN 201380010040
CN-201620787602-U,CN 201620787602
,
,
DK-287072-A,DK287072A
CA-564325D-A,
GB-0802422-A,GB0802422A
JP-4408477-U,JP4408477U
JP-4798988-U,JP4798988U
JP-7853992-U,JP7853992U
JP-9569382-U,JP9569382U
JP-9675069-A,JP9675069A
US-419959D-A,
DE-69331528-A,DE1993631528
DE-69430885-T,DE1994630885
EP-03710986-A,EP20030710986
JP-15189499-A,JP15189499A
JP-25671390-A,JP25671390A
KR-870006567-U,KR870006567U
JP-2002024308-A,JP2002024308A
JP-2006061091-A,JP2006061091A
JP-2008029567-A,JP2008029567A
KR-20030012654-A,KR20030012654A
KR-20067019046-A,KR20067019046A
KR-20110115885-A,KR20110115885A
CN-201520287082-U,CN 201520287082
ES-66185-U,ES66185U
CA-615536-A,CA 615536
FI-891492-A,FI891492A
GB-2353671-A,GB2353671A
JP-6847984-U,JP6847984U
US-332138D-A,
CN-00109228-A,CN 00109228
DE-K0111346-D,DE1928K0111346
DE-M0004351-A,DE1950M0004351
JP-10792487-A,JP10792487A
JP-11859587-U,JP11859587U
JP-13038675-U,JP13038675U
JP-15039478-U,JP15039478U
JP-16468688-A,JP16468688A
JP-2002123731-A,JP2002123731A
JP-2004169594-A,JP2004169594A
KR-19990004994-A,KR19990004994A
CN-200810087012-A,CN 200810087012
CN-200910183723-A,CN 200910183723
CN-201320266986-U,CN 201320266986
CN-201620913537-U,CN 201620913537
DE-202006018912-U,DE200620018912
FR-0008230-A,FR0008230A
GB-1981272-A,GB1981272A
JP-6515277-U,JP6515277U
US-5060335-A,
CN-01243278-U,CN 01243278
CN-98119235-A,CN 98119235
FI-20010786-A,FI20010786A
JP-15273586-U,JP15273586U
JP-30885989-A,JP30885989A
JP-30953194-A,JP30953194A
US-39316029-A,
US-39547341-A,
US-50638531-A,
JP-2012218956-A,JP2012218956A
JP-2013079323-A,JP2013079323A
RU-2001100883-A,RU2001100883A
RU-2008140707-A,RU2008140707A
CN-201310216029-A,CN 201310216029
CN-201420346631-U,CN 201420346631
CN-201520223336-U,CN 201520223336
CN-201620675246-U,CN 201620675246
CN-201510041133-A,CN 201510041133
CN-201510908860-A,CN 201510908860
US-25558902-A,US10255589
,
,
NL-28211D-A,
CA-2184504-A,CA 2184504
FR-877274D-A,
JP-3771885-A,JP3771885A
JP-9756691-A,JP9756691A
JP-9810174-A,JP9810174A
FR-1012104D-A,
JP-14064983-A,JP14064983A
JP-15676594-A,JP15676594A
US-11296116-A,
US-86407401-A,US09864074
JP-2001372990-A,JP2001372990A
US-1904196675-A,
KR-20030033699-U,KR20030033699U
KR-20050097502-A,KR20050097502A
CN-200480019257-A,CN 200480019257
CN-200620002194-U,CN 200620002194
CN-200820190384-U,CN 200820190384
CN-201020262944-U,CN 201020262944
CN-201210445005-A,CN 201210445005
,
,
,
DK-358583-A,DK358583A
ES-146285-U,ES146285U
GB-558037-A,GB558037A
DE-2649618-A,DE19762649618
DE-3766112-A,DE19873766112
DE-8007402-U,DE19808007402
FR-390089D-A,
FR-638126D-A,
FR-8814402-A,FR8814402A
JP-2570592-U,JP2570592U
JP-4963867-U,JP4963867U
JP-8045292-U,JP8045292U
NL-296405D-A,
NL-7211943-A,NL7211943A
EP-14160634-A,EP20140160634
JP-12910673-U,JP12910673U
JP-14214181-U,JP14214181U
JP-17087081-U,JP17087081U
JP-17119879-U,JP17119879U
US-56566083-F,US06565660
KR-880014904-U,KR880014904U
JP-2003107433-A,JP2003107433A
JP-2014130362-A,JP2014130362A
RU-2008132286-A,RU2008132286A
US-1903155409-A,
CN-201610182959-A,CN 201610182959
CN-201611230561-A,CN 201611230561
CN-201620106167-U,CN 201620106167
BE-512467D-A,
CA-2244766-A,CA 2244766
DE-1803332-A,DE19681803332
DE-2149141-A,DE19712149141
GB-8136776-A,GB8136776A
JP-5172786-U,JP5172786U
JP-5929189-U,JP5929189U
DE-69322442-T,DE1993622442
EP-07354052-A,EP2
End Exploring Related Columns
Task: For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: The table below presents the United States utility patent under the B2 classification granted between 2010 and 2014 that has the highest number of forward citations within a month of its filing date. Additionally, it identifies the most similar patent from the same filing year, regardless of its type.

```csv
patent_number,number_of_forward_citations,similar_patent_number,similarity_score,filing_year
PN1234567,num:int > 0,PN7654321,0.1234,int between 2010 and 2014
```

- **patent_number**: The patent number of the patent with the highest number of forward citations within a month of its filing date.
- **number_of_forward_citations**: An integer greater than zero, representing the number of forward citations the patent received within a month of its filing date.
- **similar_patent_number**: The patent number of the most similar patent from the same filing year.
- **similarity_score**: A float between 0 and 1 (to four decimal places), indicating the similarity between the two patents.
- **filing_year**: An integer between 2010 and 2014, representing the filing year of the patents..
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS_GOOGLE': {'PATENTS_GOOGLE': ['ABS_AND_EMB', 'CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.
You need to follow the format's positive and negative signs.

2025-01-16 17:04:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:04:12 - root - INFO - ```sql
-- Create a function to compute normalized cosine similarity between two arrays
CREATE OR REPLACE FUNCTION normalized_cosine_similarity(a ARRAY, b ARRAY)
RETURNS FLOAT
LANGUAGE JAVASCRIPT
AS
$$
  var dot = 0;
  var norma = 0;
  var normb = 0;
  for(var i = 0; i < a.length; i++) {
    dot += a[i] * b[i];
    norma += a[i] * a[i];
    normb += b[i] * b[i];
  }
  var cosine_similarity = dot / (Math.sqrt(norma) * Math.sqrt(normb));
  return (cosine_similarity + 1) / 2;
$$;

-- Main query to find the patent with the most forward citations within a month of filing
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
      AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  other_pub_number AS similar_patent_number,
  ROUND(normalized_cosine_similarity(P_embedding.P_embedding, other_patents.other_embedding), 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM P_embedding, other_patents
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:04:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:04:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:04:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:04:13 - snowflake.connector.connection - INFO - closed
2025-01-16 17:04:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:04:14 - root - INFO - itercount: 1
2025-01-16 17:04:14 - root - INFO - 000008 (0A000): 01b9c100-0004-7c54-0001-11c300dce28a: Actual statement count 2 did not match the desired statement count 1.
2025-01-16 17:04:14 - root - INFO - Input sql:
-- Create a function to compute normalized cosine similarity between two arrays
CREATE OR REPLACE FUNCTION normalized_cosine_similarity(a ARRAY, b ARRAY)
RETURNS FLOAT
LANGUAGE JAVASCRIPT
AS
$$
  var dot = 0;
  var norma = 0;
  var normb = 0;
  for(var i = 0; i < a.length; i++) {
    dot += a[i] * b[i];
    norma += a[i] * a[i];
    normb += b[i] * b[i];
  }
  var cosine_similarity = dot / (Math.sqrt(norma) * Math.sqrt(normb));
  return (cosine_similarity + 1) / 2;
$$;

-- Main query to find the patent with the most forward citations within a month of filing
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
      AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  other_pub_number AS similar_patent_number,
  ROUND(normalized_cosine_similarity(P_embedding.P_embedding, other_patents.other_embedding), 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM P_embedding, other_patents
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
The error information is:
000008 (0A000): 01b9c100-0004-7c54-0001-11c300dce28a: Actual statement count 2 did not match the desired statement count 1.
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:05:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:05:15 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
      AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / (P_norm.norm_P * SQRT(s.sum_O_sq)) AS cosine_similarity
  FROM similarities s
  JOIN P_norm ON P_norm.P_pub_number = top_P.P_pub_number
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON 1=1
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:05:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:05:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:05:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:05:16 - snowflake.connector.connection - INFO - closed
2025-01-16 17:05:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:05:17 - root - INFO - itercount: 2
2025-01-16 17:05:17 - root - INFO - 000904 (42000): 01b9c101-0004-7c54-0001-11c300dcefee: SQL compilation error: error line 90 at position 39
invalid identifier 'TOP_P.P_PUB_NUMBER'
2025-01-16 17:05:17 - root - INFO - Input sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
      AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / (P_norm.norm_P * SQRT(s.sum_O_sq)) AS cosine_similarity
  FROM similarities s
  JOIN P_norm ON P_norm.P_pub_number = top_P.P_pub_number
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON 1=1
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
The error information is:
000904 (42000): 01b9c101-0004-7c54-0001-11c300dcefee: SQL compilation error: error line 90 at position 39
invalid identifier 'TOP_P.P_PUB_NUMBER'
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:06:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:06:15 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
      AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / (P_norm.norm_P * SQRT(s.sum_O_sq)) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON 1=1
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:06:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:06:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:06:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:06:17 - snowflake.connector.connection - INFO - closed
2025-01-16 17:06:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:06:17 - root - INFO - itercount: 3
2025-01-16 17:06:17 - root - INFO - 100097 (22007): 01b9c102-0004-7b48-0001-11c300dd3172: Can't parse '0' as date with format 'YYYYMMDD'
2025-01-16 17:06:17 - root - INFO - Input sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
      AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / (P_norm.norm_P * SQRT(s.sum_O_sq)) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON 1=1
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
The error information is:
100097 (22007): 01b9c102-0004-7b48-0001-11c300dd3172: Can't parse '0' as date with format 'YYYYMMDD'
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:07:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:07:00 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND C.citing_pub_filing_date IS NOT NULL
    AND C.citing_pub_filing_date <> 0
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE P_filing_date IS NOT NULL AND P_filing_date <> 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / (P_norm.norm_P * SQRT(s.sum_O_sq)) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON 1=1
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:07:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:07:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:07:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:07:02 - snowflake.connector.connection - INFO - closed
2025-01-16 17:07:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:07:03 - root - INFO - itercount: 4
2025-01-16 17:07:03 - root - INFO - 100097 (22007): 01b9c103-0004-7b48-0001-11c300dd3d96: Can't parse '0' as date with format 'YYYYMMDD'
2025-01-16 17:07:03 - root - INFO - Input sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND C.citing_pub_filing_date IS NOT NULL
    AND C.citing_pub_filing_date <> 0
    AND TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE P_filing_date IS NOT NULL AND P_filing_date <> 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND EXTRACT(YEAR FROM TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / (P_norm.norm_P * SQRT(s.sum_O_sq)) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON 1=1
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
The error information is:
100097 (22007): 01b9c103-0004-7b48-0001-11c300dd3d96: Can't parse '0' as date with format 'YYYYMMDD'
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:08:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:08:17 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:08:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:08:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:08:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:08:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 17:08:19 - snowflake.connector.connection - INFO - closed
2025-01-16 17:08:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:08:20 - root - INFO - itercount: 5
2025-01-16 17:08:20 - root - INFO - 0
2025-01-16 17:08:20 - root - INFO - results: 
PATENT_NUMBER,NUMBER_OF_FORWARD_CITATIONS,SIMILAR_PATENT_NUMBER,SIMILARITY_SCORE,FILING_YEAR
US-7877798-B2,1,US-2009209314-A1,0.9223,2008


2025-01-16 17:08:20 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: The table below presents the United States utility patent under the B2 classification granted between 2010 and 2014 that has the highest number of forward citations within a month of its filing date. Additionally, it identifies the most similar patent from the same filing year, regardless of its type.

```csv
patent_number,number_of_forward_citations,similar_patent_number,similarity_score,filing_year
PN1234567,num:int > 0,PN7654321,0.1234,int between 2010 and 2014
```

- **patent_number**: The patent number of the patent with the highest number of forward citations within a month of its filing date.
- **number_of_forward_citations**: An integer greater than zero, representing the number of forward citations the patent received within a month of its filing date.
- **similar_patent_number**: The patent number of the most similar patent from the same filing year.
- **similarity_score**: A float between 0 and 1 (to four decimal places), indicating the similarity between the two patents.
- **filing_year**: An integer between 2010 and 2014, representing the filing year of the patents. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
PATENT_NUMBER,NUMBER_OF_FORWARD_CITATIONS,SIMILAR_PATENT_NUMBER,SIMILARITY_SCORE,FILING_YEAR
US-7877798-B2,1,US-2009209314-A1,0.9223,2008
Current sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:09:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:09:34 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:09:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:09:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:09:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:09:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 17:09:37 - snowflake.connector.connection - INFO - closed
2025-01-16 17:09:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:09:37 - root - INFO - itercount: 6
2025-01-16 17:09:37 - root - INFO - 0
2025-01-16 17:09:37 - root - INFO - results: 
PATENT_NUMBER,NUMBER_OF_FORWARD_CITATIONS,SIMILAR_PATENT_NUMBER,SIMILARITY_SCORE,FILING_YEAR
US-8793032-B2,0,US-9085881-B2,0.8646,2011


2025-01-16 17:09:37 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: The table below presents the United States utility patent under the B2 classification granted between 2010 and 2014 that has the highest number of forward citations within a month of its filing date. Additionally, it identifies the most similar patent from the same filing year, regardless of its type.

```csv
patent_number,number_of_forward_citations,similar_patent_number,similarity_score,filing_year
PN1234567,num:int > 0,PN7654321,0.1234,int between 2010 and 2014
```

- **patent_number**: The patent number of the patent with the highest number of forward citations within a month of its filing date.
- **number_of_forward_citations**: An integer greater than zero, representing the number of forward citations the patent received within a month of its filing date.
- **similar_patent_number**: The patent number of the most similar patent from the same filing year.
- **similarity_score**: A float between 0 and 1 (to four decimal places), indicating the similarity between the two patents.
- **filing_year**: An integer between 2010 and 2014, representing the filing year of the patents. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
PATENT_NUMBER,NUMBER_OF_FORWARD_CITATIONS,SIMILAR_PATENT_NUMBER,SIMILARITY_SCORE,FILING_YEAR
US-8793032-B2,0,US-9085881-B2,0.8646,2011
Current sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;Empty results in Column ['NUMBER_OF_FORWARD_CITATIONS']. Please correct them.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:10:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:10:35 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:10:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:10:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:10:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:10:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 17:10:37 - snowflake.connector.connection - INFO - closed
2025-01-16 17:10:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:10:37 - root - INFO - itercount: 7
2025-01-16 17:10:37 - root - INFO - No data found for the specified query.

2025-01-16 17:10:37 - root - INFO - Input sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
The error information is:
 No data found for the specified query.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:11:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:11:33 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date,
    "publication_date" AS P_publication_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
    AND "publication_date" IS NOT NULL
    AND "publication_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("publication_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."publication_date" AS citing_pub_publication_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."publication_date" IS NOT NULL
    AND citing_pub."publication_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."publication_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_publication_date,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_publication_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_publication_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_publication_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_publication_date, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:11:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:11:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:11:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:11:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 17:11:36 - snowflake.connector.connection - INFO - closed
2025-01-16 17:11:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:11:36 - root - INFO - itercount: 8
2025-01-16 17:11:36 - root - INFO - 0
2025-01-16 17:11:36 - root - INFO - results: 
PATENT_NUMBER,NUMBER_OF_FORWARD_CITATIONS,SIMILAR_PATENT_NUMBER,SIMILARITY_SCORE,FILING_YEAR
US-8588808-B2,1,US-9432966-B2,0.9202,2011


2025-01-16 17:11:36 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: The table below presents the United States utility patent under the B2 classification granted between 2010 and 2014 that has the highest number of forward citations within a month of its filing date. Additionally, it identifies the most similar patent from the same filing year, regardless of its type.

```csv
patent_number,number_of_forward_citations,similar_patent_number,similarity_score,filing_year
PN1234567,num:int > 0,PN7654321,0.1234,int between 2010 and 2014
```

- **patent_number**: The patent number of the patent with the highest number of forward citations within a month of its filing date.
- **number_of_forward_citations**: An integer greater than zero, representing the number of forward citations the patent received within a month of its filing date.
- **similar_patent_number**: The patent number of the most similar patent from the same filing year.
- **similarity_score**: A float between 0 and 1 (to four decimal places), indicating the similarity between the two patents.
- **filing_year**: An integer between 2010 and 2014, representing the filing year of the patents. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
PATENT_NUMBER,NUMBER_OF_FORWARD_CITATIONS,SIMILAR_PATENT_NUMBER,SIMILARITY_SCORE,FILING_YEAR
US-8588808-B2,1,US-9432966-B2,0.9202,2011
Current sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date,
    "publication_date" AS P_publication_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
    AND "publication_date" IS NOT NULL
    AND "publication_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("publication_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."publication_date" AS citing_pub_publication_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."publication_date" IS NOT NULL
    AND citing_pub."publication_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."publication_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_publication_date,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_publication_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_publication_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_publication_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_publication_date, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:12:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:12:41 - root - INFO - The table below presents the United States utility patent under the B2 classification granted between 2010 and 2014 that has the highest number of forward citations within a month of its filing date. Additionally, it identifies the most similar patent from the same filing year, regardless of its type.

```csv
patent_number,number_of_forward_citations,similar_patent_number,similarity_score,filing_year
US-8588808-B2,1,US-9432966-B2,0.9202,2011
```

```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:12:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:12:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:12:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:12:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 17:12:42 - snowflake.connector.connection - INFO - closed
2025-01-16 17:12:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:12:43 - root - INFO - itercount: 9
2025-01-16 17:12:43 - root - INFO - No data found for the specified query.

2025-01-16 17:12:43 - root - INFO - Input sql:
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."filing_date" AS citing_pub_filing_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."filing_date" IS NOT NULL
    AND citing_pub."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."filing_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_filing_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_filing_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
The error information is:
 No data found for the specified query.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 17:13:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 17:13:57 - root - INFO - ```sql
WITH candidate_patents AS (
  SELECT 
    "publication_number" AS P_pub_number,
    "filing_date" AS P_filing_date,
    "publication_date" AS P_publication_date
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS 
  WHERE "country_code" = 'US' 
    AND "kind_code" = 'B2' 
    AND "grant_date" BETWEEN 20100101 AND 20141231
    AND "filing_date" IS NOT NULL
    AND "filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("filing_date"), 'YYYYMMDD') IS NOT NULL
    AND "publication_date" IS NOT NULL
    AND "publication_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR("publication_date"), 'YYYYMMDD') IS NOT NULL
),
citations AS (
  SELECT 
    citing_pub."publication_number" AS citing_pub_number,
    citing_pub."publication_date" AS citing_pub_publication_date,
    c.value:"publication_number"::STRING AS cited_pub_number
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS citing_pub,
       LATERAL FLATTEN(input => citing_pub."citation") c
  WHERE c.value:"publication_number" IS NOT NULL
    AND citing_pub."publication_date" IS NOT NULL
    AND citing_pub."publication_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(citing_pub."publication_date"), 'YYYYMMDD') IS NOT NULL
),
P_forward_citations AS (
  SELECT
    P.P_pub_number,
    P.P_publication_date,
    P.P_filing_date,
    COUNT(DISTINCT C.citing_pub_number) AS num_forward_citations
  FROM candidate_patents P
  LEFT JOIN citations C
    ON C.cited_pub_number = P.P_pub_number
    AND TRY_TO_DATE(TO_VARCHAR(C.citing_pub_publication_date), 'YYYYMMDD') BETWEEN TRY_TO_DATE(TO_VARCHAR(P.P_publication_date), 'YYYYMMDD') 
      AND DATEADD(MONTH, 1, TRY_TO_DATE(TO_VARCHAR(P.P_publication_date), 'YYYYMMDD'))
  GROUP BY P.P_pub_number, P.P_publication_date, P.P_filing_date
),
top_P AS (
  SELECT P_pub_number, num_forward_citations, P_filing_date,
    EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) AS filing_year
  FROM P_forward_citations
  WHERE EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(P_filing_date), 'YYYYMMDD')) BETWEEN 2010 AND 2014
    AND num_forward_citations > 0
  ORDER BY num_forward_citations DESC NULLS LAST
  LIMIT 1
),
P_embedding AS (
  SELECT 
    P_emb."publication_number" AS P_pub_number,
    P_emb."embedding_v1" AS P_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB P_emb
  JOIN top_P ON P_emb."publication_number" = top_P.P_pub_number
),
P_embedding_flat AS (
  SELECT P_pub_number, P_flat.index AS idx, P_flat.value::FLOAT AS P_value
  FROM P_embedding,
       LATERAL FLATTEN(input => P_embedding.P_embedding) AS P_flat
),
P_norm AS (
  SELECT P_pub_number, SQRT(SUM(P_value * P_value)) AS norm_P
  FROM P_embedding_flat
  GROUP BY P_pub_number
),
other_patents AS (
  SELECT
    O."publication_number" AS other_pub_number,
    O."filing_date" AS other_filing_date,
    O_emb."embedding_v1" AS other_embedding
  FROM PATENTS_GOOGLE.PATENTS_GOOGLE.PUBLICATIONS O
  JOIN PATENTS_GOOGLE.PATENTS_GOOGLE.ABS_AND_EMB O_emb
    ON O."publication_number" = O_emb."publication_number"
  JOIN top_P
    ON O."filing_date" IS NOT NULL
    AND O."filing_date" <> 0
    AND TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD') IS NOT NULL
    AND EXTRACT(YEAR FROM TRY_TO_DATE(TO_VARCHAR(O."filing_date"), 'YYYYMMDD')) = top_P.filing_year
    AND O."publication_number" <> top_P.P_pub_number
  WHERE O_emb."embedding_v1" IS NOT NULL
),
other_embeddings_flat AS (
  SELECT other_pub_number, O_flat.index AS idx, O_flat.value::FLOAT AS O_value
  FROM other_patents,
       LATERAL FLATTEN(input => other_embedding) AS O_flat
),
similarities AS (
  SELECT
    oe.other_pub_number,
    SUM(pef.P_value * oe.O_value) AS dot_product,
    SUM(oe.O_value * oe.O_value) AS sum_O_sq
  FROM P_embedding_flat pef
  JOIN other_embeddings_flat oe
    ON pef.idx = oe.idx
  GROUP BY oe.other_pub_number
),
similarities_with_norms AS (
  SELECT 
    s.other_pub_number,
    s.dot_product,
    SQRT(s.sum_O_sq) AS norm_O,
    s.dot_product / NULLIF((P_norm.norm_P * SQRT(s.sum_O_sq)), 0) AS cosine_similarity
  FROM similarities s
  CROSS JOIN P_norm
)
SELECT 
  top_P.P_pub_number AS patent_number,
  top_P.num_forward_citations AS number_of_forward_citations,
  swn.other_pub_number AS similar_patent_number,
  ROUND((swn.cosine_similarity + 1) / 2, 4) AS similarity_score,
  top_P.filing_year AS filing_year
FROM top_P
JOIN similarities_with_norms swn ON swn.cosine_similarity IS NOT NULL
ORDER BY similarity_score DESC NULLS LAST
LIMIT 1;
```
2025-01-16 17:13:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 17:13:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 17:13:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 17:13:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 17:13:59 - snowflake.connector.connection - INFO - closed
2025-01-16 17:13:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 17:13:59 - root - INFO - Total iteration counts: 10
