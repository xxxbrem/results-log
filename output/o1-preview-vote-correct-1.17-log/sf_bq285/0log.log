2025-01-16 19:11:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 19:12:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 19:12:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 60
2025-01-16 19:12:45 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:46 - root - INFO - SQL:
SELECT DISTINCT "state"
   FROM FDA.FDIC_BANKS.LOCATIONS
   LIMIT 1000;
Results:
state
AL
AK
AZ
AR
CA
CO
FL
GA
HI
ID
IN
IA
KY
LA
ME
MD
MA
MI
MN
MS
MO
NE
NH
NJ
NM
NY
ND
OR
SC
SD
TN
TX
OK
PR
AS
MH
MP
PW
RI
DC
MT
IL
KS
NV
NC
PA
UT
VT
VA
WA
WV
WI
WY
""
FM
GU
VI
DE
OH
CT

2025-01-16 19:12:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:12:47 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:48 - root - INFO - SQL:
SELECT DISTINCT "state", "state_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state_name" ILIKE '%Florida%'
   LIMIT 1000;
Results:
state,state_name
FL,Florida

2025-01-16 19:12:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 720
2025-01-16 19:12:49 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:49 - root - INFO - SQL:
SELECT DISTINCT "zip_code"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   LIMIT 1000;
Results:
zip_code
32401
32405
32407
32404
32444
32408
32406
32952
32796
32953
32937
32909
32904
32922
32976
32901
32903
32754
34453
34442
34450
32351
34609
34601
33612
33629
33617
33614
33619
33548
33569
33605
33637
32344
32312
34420
32536
32569
34655
34667
33760
32940
34446
34465
33573
33626
33615
33635
33610
33618
33611
33594
33578
32305
34471
34432
34472
33774
33707
33762
34691
33761
32567
34104
32413
32907
32905
32920
34429
34434
32333
34606
33606
33547
33613
32303
32311
34481
34476
32162
32931
32955
32780
34436
34613
34608
33852
33609
33602
33596
33570
33607
33558
33584
33634
33624
32301
32307
32309
32304
34488
34480
34974
33543
34653
33544
33525
33542
33701
33702
33703
33777
34685
33782
33713
33715
33708
33770
33764
33716
33711
32550
33563
33647
33549
33616
32317
34474
32547
33541
33771
33706
33763
33767
33776
32461
33704
33772
32327
32091
32424
32328
32052
32443
32066
32064
32060
32428
34109
34102
34110
34105
34101
33940
33935
33440
33905
33936
33990
33924
34134
33956
33965
33909
32615
32643
32605
32667
32055
32056
32693
32625
32068
32656
32217
32233
32257
32207
32277
32266
32216
32224
32221
32255
34957
33178
33173
34229
34746
32935
32308
32579
32926
33870
33825
33511
33572
33595
33559
34470
32548
32539
32541
34972
34668
34652
34669
33759
32433
33625
33603
32302
34482
32578
32544
34639
33556
34654
34638
34690
33523
33755
33756
34684
34683
33781
34689
33765
33705
33778
34695
32435
32439
33709
33145
32628
32680
32320
32322
33471
32465
32456
32457
32425
32440
32446
32448
32460
32321
32340
32008
32347
32054
34108
34116
34119
34145
34113
34142
34112
34120
33907
33908
33957
33991
33901
34135
33919
33904
33971
33903
34133
33966
33921
32608
32606
32609
32601
32607
32603
32669
32602
32618
32025
32038
32626
32063
32043
32003
32073
32222
32256
32246
32208
32250
32202
32223
32225
32209
32258
32210
32244
32205
32219
32206
32097
32034
32046
32259
32082
32081
32080
32095
32145
32086
33441
33065
33029
33069
33026
33073
33009
33316
33301
33071
33312
33062
33305
33324
33027
33328
33442
33334
33308
33306
33394
33321
33063
33314
33315
33019
33067
33325
33060
33030
33068
32958
34990
34997
34996
34956
33455
33131
33012
33010
33169
33162
33146
33142
33172
33128
33149
33126
33147
33013
33015
33177
33179
33181
33166
33155
33016
33140
33018
33154
33180
33161
33189
33055
33130
33133
33034
33056
33184
33136
33127
33054
33109
33137
33187
33050
33036
33043
33478
33446
33462
33408
33414
33417
33411
33401
33432
33498
33418
33480
33472
33445
33496
33467
33435
33444
33476
34982
34986
34953
34947
34984
33330
33014
33199
33434
33406
33415
34981
33952
34266
34205
34222
34209
34219
34210
34201
34217
34212
34232
34238
34236
34231
34239
34241
34240
34242
32110
15790
33834
34711
34736
32784
34731
32102
32832
32837
32789
32792
32835
32839
32751
32806
32801
32712
32825
32703
34786
32808
32836
32804
32807
32778
34714
34762
32824
32805
34769
34747
34759
34743
33884
33881
33841
33853
33823
33838
33897
33843
32708
32750
32766
32771
32746
32773
32163
32127
32132
32128
32169
32738
32503
32504
32514
32526
32563
32565
34491
34698
33712
34677
33710
33785
32459
34103
33914
33928
33912
32666
32611
32619
32696
34449
32621
32218
32204
32211
32011
32177
32112
32131
32148
32092
32084
33024
33004
33317
33331
33309
33020
33076
33064
33319
33326
33021
33023
33313
33351
33025
33311
32966
32963
32968
34994
33132
33156
33125
33139
33144
33183
33141
33135
33186
33138
33122
33193
33165
33176
33129
33174
33175
33143
33185
33157
33150
33032
33168
33040
33037
33041
33070
33042
33410
33449
33405
33487
33460
33463
33458
33431
33436
33469
33486
33483
33433
33403
33437
33428
33407
33413
33412
33404
34951
33160
33134
33196
33033
33470
34987
34950
34223
33954
33980
33981
34224
33953
34211
34202
34203
34208
34280
34287
34237
34293
34292
34228
34275
32136
32164
33873
34748
32159
32726
34788
32776
32702
32819
32821
32803
34761
34787
32826
32812
32829
32811
32828
32827
32810
34233
32757
32822
32814
32779
34741
34744
33896
33880
34771
33859
33830
33860
33801
33868
32765
32701
32707
33513
34785
32114
32168
32720
32174
32118
32141
32180
32176
32724
32725
32534
32505
32506
32561
32507
32571
32714
33913
33323
33304
33322
32962
33477
33409
33426
33484
33430
33461
34983
34952
33950
33948
33983
33946
34207
34221
34243
34285
32137
32818
32817
32820
33803
33813
33837
33844
32117
32763
32502
32566
32570
32119
32960
32809
33809
33805
32129

2025-01-16 19:12:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 195
2025-01-16 19:12:51 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:51 - root - INFO - SQL:
SELECT DISTINCT "fdic_certificate_number", "institution_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   LIMIT 1000;
Results:
Too long, hard cut:
fdic_certificate_number,institution_name
9846,Truist Bank
25122,First National Bank Northwest Florida
12441,Hancock Whitney Bank
12368,Regions Bank
4988,Trustmark National Bank
11813,Cadence Bank
3511,"Wells Fargo Bank, National Association"
20504,Ameris Bank
8879,Community Bank of Mississippi
31313,First Federal Bank
19819,Southeast First National Bank
58719,Progress Bank and Trust
3510,"Bank of America, National Association"
6384,"PNC Bank, National Association"
628,"JPMorgan Chase Bank, National Association"
9396,Valley National Bank
35506,Cypress Bank & Trust
873,Synovus Bank
131,Seacoast National Bank
58029,Sunrise Bank
16571,BMO Harris Bank National Association
26323,"Florida Capital Bank, National Association"
58979,"BankUnited, National Association"
34562,ENCORE BANK
26829,First National Bank of Pasco
913,The Northern Trust Company
28316,FIDELITY BANK
33893,Raymond James Bank
11241,Centennial Bank
9622,Capital City Bank
34233,Marine Bank & Trust Company
33555,"SouthState Bank, National Association"
32737,Drummond Community Bank
34899,First Citrus Bank
35558,Century Bank of Florida
23627,Republic Bank & Trust Company
57470,Members Trust Company
29331,TC FEDERAL BANK
58537,BankFlorida
59265,Waterfall Bank
31945,TrustCo Bank
13303,Bank of England
10988,Stearns Bank National Association
35056,Madison County Community Bank
58811,One Florida Bank
17534,KeyBank National Association
14843,MidWestOne Bank
34489,Edison National Bank
27205,Englewood Bank & Trust
59281,Gulf Coast Business Bank
33492,Crescent Bank
21784,First Port City Bank
15699,Pineland Bank
17509,First State Bank of the Florida Keys
20234,City National Bank of Florida
57369,U. S. Century Bank
57931,Anchor Bank
57083,Plus International Bank
19977,Israel Discount Bank of New York
58376,Encore  Bank
32242,"Liberty Savings Bank, F.S.B."
17193,The Warrington Bank
2777,MidSouth Bank
58463,SmartBank
34217,The First Bank
35212,Community Bank of the South
10055,First Southern Bank
21031,The Bank of Tampa
58377,Central Bank
4977,First Horizon Bank
11063,First-Citizens Bank & Trust Company
34997,BayFirst National Bank
7946,"BNY Mellon, National Association"
58479,Bank of Central Florida
58181,Metro City Bank
57833,Beal Bank USA
12437,Renasant Bank
16595,CCB Community Bank
21292,PeoplesSouth Bank
5676,Brannen Bank
30012,Third Federal Savings and Loan Association of Cleveland
58309,American Momentum Bank
34908,Cogent Bank
57993,ServisFirst Bank
58694,Prime Meridian Bank
34068,Thomasville National Bank
33440,Citizens First Bank
35138,Millennium Bank
17580,FNBT BANK
26687,PNB Community Bank
58113,Flagship Bank
34775,"TIAA, FSB"
8021,Wauchula State Bank
110,Bank OZK
34535,"TCM Bank, National Association"
17734,Community State Bank
21692,Peoples Bank of Graceville
27589,"Lake Forest Bank & Trust Company, National Association"
58486,FineMark National Bank & Trust
16022,New York Community Bank
12633,The Central Trust Bank
57425,Sanibel Captiva Community Bank
16450,Busey Bank
23220,Woodforest National Bank
23472,"The Bank of New York Mellon Trust Company, National Association"
7213,"Citibank, National Association"
22205,Barwick Banking Company
5694,PrimeSouth Bank
26398,American National Bank
24156,Ocean Bank
22953,"Amerant Bank, National Association"
26725,Banco do Brasil Americas
33506,First National Bank of Coffee County
33959,"Natbank, National Association"
58030,Paradise Bank
58862,Professional Bank
34069,"Wilmington Trust, National Association"
21265,Bradesco BAC Florida Bank
26299,Pacific National Bank
35599,Apollo Bank
57890,"HSBC Bank USA, National Association"
8018,Grove Bank & Trust
34643,Sunstate Bank
57815,Banesco USA
24516,Interaudi Bank
17281,City National Bank
26633,Delta National Bank and Trust Company
588,Manufacturers and Traders Trust Company
18930,Bank of Belle Glade
17093,The First National Bank of South Miami
26442,"Terrabank, National Association"
27086,Charlotte State Bank & Trust
21163,Crews Bank & Trust
59140,Gulfside Bank
58692,Intracoastal Bank
15465,United Southern Bank
26312,"First American Trust, FSB"
58,United Bank
58647,First Foundation Bank
57598,Mainstreet Community Bank of Florida
16889,United Community Bank
35052,Heartland National Bank
5673,Citizens Bank and Trust
57686,"American Commerce Bank, National Association"
32974,Gulf Coast Bank and Trust Company
29566,"United Fidelity Bank, fsb"
5903,BankPlus
18409,"TD Bank, National Association"
6672,"Fifth Third Bank, National Association"
91325,CIBC National Trust Company
9620,First Bank
16396,Lafayette State Bank
983,Comerica Bank
6560,The Huntington National Bank
6548,U.S. Bank National Association
34728,Independent Bank
5685,Southeastern Bank
30387,FirstBank Puerto Rico
33565,"Desjardins Bank, National Association"
8120,"Magnolia Bank, Incorporated"
35430,OptimumBank
34967,Popular Bank
57957,"Citizens Bank, National Association"
25258,"Intercredit Bank, National Association"
31823,"Interamerican Bank, A FSB"
32718,Helm Bank USA
20026,Eastern National Bank
26876,Safra Nationa

2025-01-16 19:12:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 720
2025-01-16 19:12:53 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:53 - root - INFO - SQL:
SELECT "zip_code", COUNT(*) AS "branch_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "branch_count" DESC
   LIMIT 1000;
Results:
Too long, hard cut:
zip_code,branch_count
33134,48
33131,43
34236,33
32789,32
33408,25
33180,24
32746,24
33301,24
33156,24
33431,23
33609,22
32174,22
33401,22
33012,22
34103,22
33607,21
32801,21
33907,20
33701,19
33480,19
33139,19
33618,19
33458,19
33324,19
33027,19
33414,18
33432,18
32308,18
33178,18
32541,18
32819,17
33511,17
33308,17
33908,17
34285,17
34711,17
33326,17
34787,17
34232,17
34108,17
33483,16
33602,16
32960,16
33014,16
33410,16
33176,16
33186,15
32405,15
33172,15
33919,15
32301,15
33463,15
32256,15
33761,15
33024,15
32407,15
32837,14
32792,14
33155,14
32806,14
33165,14
32502,14
34109,14
33629,14
33021,14
32034,14
33143,13
33065,13
32608,13
32459,13
33160,13
32082,13
32114,13
32757,13
33063,13
32225,13
32940,13
33801,13
34231,13
34102,13
32578,13
33770,12
33040,12
34145,12
34293,12
33062,12
34994,12
34135,12
33144,12
34655,12
34470,12
33411,12
33009,12
33140,12
34471,12
32548,12
32832,12
34209,12
33756,12
34748,12
34952,12
33426,12
33467,11
33928,11
33135,11
32250,11
33912,11
34233,11
32207,11
33409,11
32703,11
34203,11
33870,11
33166,11
34134,11
33904,11
32765,11
34202,11
33442,11
32162,11
32504,11
33037,11
33707,11
34110,11
34243,11
32763,11
33434,11
32751,10
33813,10
32259,10
33781,10
33064,10
33316,10
34741,10
33647,10
33626,10
33950,10
32218,10
33617,10
33880,10
32073,10
33351,10
32714,10
33578,10
33418,10
32904,10
32963,10
34113,10
33433,10
32303,9
32202,9
33130,9
32958,9
34104,9
32127,9
32803,9
32159,9
33304,9
33309,9
33772,9
34761,9
34684,9
33050,9
32163,9
32137,9
32086,9
32771,9
34606,9
33563,9
34429,9
33612,9
34689,9
33710,9
34609,8
33331,8
34287,8
33196,8
34474,8
33441,8
32750,8
33446,8
32779,8
33990,8
32828,8
34997,8
33573,8
33181,8
32224,8
33437,8
33016,8
34744,8
33905,8
34986,8
34221,8
33759,8
33328,8
32210,8
34238,8
34239,8
33777,8
33765,8
34685,8
34769,8
34207,8
32550,8
32055,8
33606,8
33162,8
32708,8
32246,8
34698,8
33020,8
32935,8
32720,8
34119,7
33146,7
33914,7
33157,7
33771,7
34677,7
33175,7
33702,7
32080,7
32003,7
32822,7
32084,7
33071,7
32780,7
33073,7
33706,7
33149,7
33764,7
33179,7
33154,7
34746,7
33161,7
34990,7
33133,7
34601,7
32534,7
32606,7
33572,7
32223,7
33417,7
32309,7
32304,7
32561,7
33445,7
32607,7
33544,7
34668,7
34210,7
33614,7
33145,7
34786,7
32937,7
32503,7
33704,6
32905,6
32547,6
32601,6
34420,6
34208,6
34481,6
33477,6
34223,6
33436,6
34667,6
32428,6
33033,6
33126,6
33334,6
33026,6
33141,6
32164,6
33462,6
33774,6
32955,6
33311,6
33025,6
33018,6
34957,6
33611,6
34205,6
33435,6
34652,6
33703,6
34450,6
33321,6
32835,6
32804,6
32778,6
33525,6
33174,6
34747,6
33010,6
32257,6
33460,6
33853,6
32401,6
33809,6
33030,6
33076,6
33319,6
33543,6
32129,6
33541,6
33406,6
33122,6
33881,6
32444,5
33125,5
33183,5
33138,5
34950,5
32097,5
32064,5
32205,5
32952,5
32258,5
33069,5
33957,5
32829,5
32168,5
32507,5
32931,5
34613,5
33484,5
33312,5
33948,5
32217,5
33803,5
32566,5
32117,5
33844,5
32809,5
34465,5
32966,5
33177,5
33634,5
33137,5
33127,5
33498,5
32605,5
34446,5
34982,5
34974,5
32433,5
33322,5
33913,5
34482,5
34432,5
33067,5
33713,5
32808,5
33461,5
32446,5
33762,5
32571,5
33712,5
34116,5
33486,5
33884,5
32536,5
33023,5
32177,5
32413,4
33991,4
33004,4
32312,4
32327,4
33132,4
33903,4
33954,4
33469,4
33980,4
34105,4
34275,4
34453,4
34211,4
32424,4
32903,4
32811,4
32827,4
32810,4
33029,4
32724,4
33317,4
32701,4
33430,4
32817,4
34996,4
32693,4
32953,4
32812,4
33830,4
32266,4
33015,4
33173,4
33615,4
33313,4
33596,4
33496,4
33472,4
33306,4
33625,4
33323,4
34222,4
34953,4
33184,4
33142,4
32826,4
32439,4
32408,4
32818,4
34759,4
33709,4
32825,4
33569,4
33549,4
32570,4
33405,4
33185,4
33755,4
33936,4
32726,4
34142,4
32609,3
33605,3
32669,3
33150,3
32025,3
32091,3
33767,3
32222,3
33487,3
32063,3
32901,3
33613,3
33428,3
32208,3
32328,3
33763,3
33901,3
32092,3
34224,3
34237,3
32311,3
33981,3
34987,3
34788,3
33440,3
32569,3
33956,3
32707,3
33305,3
34476,3
34292,3
32244,3
33314,3
32506,3
34442,3
32277,3
33837,3
33852,3
32505,3
33584,3
32221,3
33147,3
33825,3
32539,3
33036,3
33610,3
32216,3
32118,3
34228,3
33330,3
33952,3
34219,3
34266,3
33415,3
34653,3
34683,3
33594,3
34639,3
32712,3
32066,3
32628,3
32656,3
33542,3
32176,3
32563,3
32128,3
32340,3
32922,3
32425,3
33513,3
33404,3
33407,3
32696,3
33413,2
33403,2
33547,2
32081,2
33935,2
34771,2
33896,2
32351,2
33953,2
33449,2
33394,2
32643,2
33760,2
33873,2
33060,2
33019,2
32141,2
32615,2
33455,2
34956,2
33013,2
32233,2
33169,2
33983,2
34785,2
33070,2
34436,2
33136,2
32579,2
32119,2
33043,2
32926,2
33034,2
33558,2
34947,2
34972,2
34212,2
33556,2
34201,2
32909,2
33570,2
33559,2
32068,2
33782,2
33619,2
32302,2
32435,2
33778,2
34736,2
34654,2
32320,2
34743,2
33716,2
33897,2
33823,2
34714,2
34240,2
33189,2
32626,2
33715,2
32448,2
32404,2
32440,2
32169,2
32132,2
34691,2
34491,2
32008,2
33548,2
32514,2
32773,2
33711,2
32456,2
32602,2
32344,2
32621,2
32738,2
32907,2
32347,2
34133,2
32461,2
32968,2
33966,2
33971,2
34112,2
32204,2
32011,2
32619,2
33776,1
33193,1
33921,1
34120,1
32211,1
33032,1
32603,1
32618,1
33168,1
32052,1
33041,1
32038,1
33129,1
32112,1
32131,1
33637

2025-01-16 19:12:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 720
2025-01-16 19:12:54 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:55 - root - INFO - SQL:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "institution_count" DESC
   LIMIT 1000;
Results:
Too long, hard cut:
zip_code,institution_count
33134,39
33131,28
32789,27
34236,27
33301,22
32746,20
34103,20
33609,20
33607,20
33180,20
33408,19
33012,19
33431,19
32801,17
33618,16
32541,16
33432,16
33401,16
33156,16
33701,16
33602,15
33176,15
34108,15
33480,15
33907,15
32174,15
32308,14
33483,14
34285,13
32405,13
32407,13
32960,13
33065,13
33143,13
32502,13
33458,13
33178,13
33761,13
33308,12
33324,12
33172,12
34787,12
33165,12
33908,12
33410,12
33414,12
32940,12
32806,12
34109,12
33629,12
33511,12
33014,12
34232,12
33140,12
32819,12
33155,11
34994,11
33024,11
34711,11
33027,11
33919,11
34145,11
32548,11
32034,11
32256,11
32578,11
33801,11
33062,11
34102,11
33326,11
33160,11
33770,11
33813,10
33426,10
33139,10
34243,10
34209,10
32608,10
34655,10
34470,10
32751,10
34231,10
34471,10
33009,10
32082,10
33063,10
34203,10
33021,10
32763,10
33756,10
34134,10
32114,9
32963,9
33880,9
34952,9
34748,9
32207,9
32218,9
33710,9
34684,9
33707,9
32703,9
34293,9
33904,9
33781,9
33166,9
33912,9
33442,9
33144,9
32504,9
32757,9
34110,9
34202,9
32225,9
33563,9
32301,9
34689,9
32073,9
32765,9
33772,9
33467,9
32837,9
32459,9
32792,9
33950,9
32832,9
34741,9
33411,8
32771,8
33573,8
33351,8
34221,8
32224,8
34135,8
33304,8
33626,8
33064,8
33612,8
34429,8
32127,8
34986,8
33578,8
34233,8
32750,8
34238,8
32935,8
32550,8
33135,8
32250,8
33409,8
33433,8
34474,8
34287,8
33928,8
34104,8
33316,8
34769,8
32714,8
33777,8
32779,8
33617,8
33463,8
33130,8
33441,8
33309,7
32210,7
33133,7
33020,7
32084,7
32720,7
32159,7
33157,7
33759,7
32246,7
34997,7
33328,7
32086,7
32080,7
34210,7
32958,7
33162,7
33154,7
33437,7
34744,7
34609,7
32534,7
33040,7
32561,7
34990,7
33418,7
33149,7
34668,7
33702,7
32223,7
32503,7
33765,7
32202,7
33990,7
33186,7
32607,7
32803,7
32309,7
33606,7
34239,7
33870,7
33647,7
32904,7
32003,7
33331,7
33016,6
34481,6
33905,6
34677,6
34420,6
33445,6
32137,6
33434,6
32055,6
32828,6
34761,6
32804,6
34746,6
34113,6
33179,6
33071,6
32780,6
33611,6
32708,6
33771,6
33704,6
32606,6
33126,6
34601,6
33614,6
33321,6
33703,6
32259,6
33181,6
33446,6
33435,6
32428,6
34786,6
32822,6
34205,6
32937,6
34119,6
32257,6
34652,6
33018,6
33175,6
33073,6
33196,6
33436,6
32547,6
34957,6
33033,6
32304,6
34207,6
33572,6
34208,6
34223,6
33037,6
34606,6
33122,6
32162,6
33525,6
33774,6
33543,6
33146,6
32601,6
33914,5
32205,5
33311,5
33174,5
32952,5
33634,5
34747,5
33030,5
34698,5
33406,5
33145,5
33712,5
33334,5
32129,5
32809,5
33498,5
32829,5
33884,5
33050,5
33881,5
33486,5
34465,5
32444,5
33477,5
33127,5
34482,5
34613,5
32303,5
32778,5
34432,5
34950,5
32955,5
33141,5
34667,5
33541,5
33417,5
33025,5
33026,5
33706,5
33319,5
33461,5
32164,5
32605,5
33948,5
32835,5
34685,5
32258,5
33853,5
33844,5
33809,5
32168,5
32163,5
33764,5
32571,5
32217,5
32905,5
32966,5
33076,5
33069,5
32536,5
33460,5
32566,5
32433,5
34450,5
34982,5
33544,5
32439,4
32408,4
33957,4
34116,4
33029,4
33132,4
33913,4
33903,4
34275,4
34142,4
33713,4
32266,4
33323,4
32097,4
34222,4
32953,4
32327,4
33183,4
33317,4
32726,4
32808,4
32810,4
32811,4
33936,4
32903,4
33803,4
33010,4
32177,4
33322,4
33625,4
33185,4
32817,4
33161,4
34453,4
33125,4
33184,4
33004,4
33472,4
33405,4
33469,4
33023,4
32401,4
33615,4
33484,4
33173,4
34446,4
32570,4
33138,4
33709,4
33755,4
33306,4
33177,4
32931,4
32312,4
33762,4
32413,4
33462,4
32064,4
34759,4
33980,4
34996,4
33830,4
32701,4
32424,4
32826,4
34953,4
33954,4
32117,4
32446,4
32507,4
32724,4
34105,4
32827,4
33430,4
34974,4
33596,4
34211,4
33067,4
32609,3
34237,3
33594,3
33901,3
32656,3
32128,3
32118,3
33852,3
33763,3
32221,3
34639,3
32818,3
33147,3
34683,3
33404,3
33767,3
33313,3
33312,3
34228,3
34987,3
32505,3
32311,3
32628,3
34219,3
33952,3
32063,3
32176,3
33569,3
33407,3
33314,3
33305,3
32244,3
33137,3
33036,3
32506,3
34442,3
33610,3
32569,3
33487,3
34292,3
32712,3
34788,3
33549,3
33605,3
33825,3
33981,3
34653,3
32922,3
33513,3
32707,3
33837,3
32825,3
33991,3
33613,3
32066,3
32693,3
32222,3
33956,3
32277,3
32425,3
32812,3
32216,3
33496,3
34476,3
33542,3
33584,3
32091,3
33428,3
32563,3
33142,3
33015,3
32539,3
32208,3
32092,3
32025,3
34224,3
33330,3
32340,3
32621,2
33823,2
32619,2
32696,2
32068,2
33070,2
32081,2
33150,2
32119,2
32907,2
33060,2
32440,2
32204,2
32132,2
34771,2
32347,2
32626,2
33169,2
33019,2
34736,2
32773,2
34743,2
33873,2
34714,2
33034,2
34785,2
34240,2
33449,2
33415,2
33558,2
33896,2
33413,2
33455,2
32514,2
34201,2
32909,2
34212,2
34947,2
32404,2
33548,2
33778,2
33935,2
33189,2
32302,2
32233,2
34133,2
32169,2
33556,2
33782,2
34266,2
34436,2
33983,2
33394,2
32643,2
32738,2
32344,2
32615,2
32351,2
34691,2
32579,2
32141,2
33715,2
33619,2
34654,2
34491,2
34972,2
33570,2
32669,2
32901,2
32461,2
32968,2
33403,2
32435,2
32011,2
33953,2
32008,2
32448,2
32456,2
33760,2
33971,2
33440,2
33136,2
33897,2
33043,2
33559,2
33966,2
33547,2
33013,2
33716,2
32320,2
32926,2
33711,2
33637,1
32322,1
32211,1
32602,1
32056,1
32038,1
33068,1
32043,1
32148,1
33476,1
34101,1
33055,1
32784,1
32666,1
32110,1
33834,1
34120,1
32460,1
32443,1
32776,1
33841,1
32667,1
32625,1
32820,1
32754,1
33471,1
32

2025-01-16 19:12:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:12:56 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:56 - root - INFO - SQL:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "institution_count" DESC
   LIMIT 1;
Results:
zip_code,institution_count
33134,39

2025-01-16 19:12:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 385
2025-01-16 19:12:58 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:12:58 - root - INFO - SQL:
SELECT "branch_city", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "branch_city"
   ORDER BY "institution_count" DESC
   LIMIT 1000;
Results:
Too long, hard cut:
branch_city,institution_count
Miami,47
Tampa,44
Coral Gables,39
Sarasota,35
Naples,34
Fort Lauderdale,33
Boca Raton,31
Winter Park,29
Fort Myers,28
Orlando,28
Saint Petersburg,28
Jacksonville,27
Clearwater,24
Aventura,22
Hialeah,22
West Palm Beach,20
Bradenton,19
Lake Mary,19
Doral,19
Pensacola,19
Delray Beach,19
Tallahassee,18
Venice,17
Panama City,17
Bonita Springs,17
Coral Springs,16
Gainesville,16
Fort Walton Beach,16
Ocala,16
Destin,16
Palm Beach Gardens,16
Longwood,15
Stuart,15
Ormond Beach,15
Vero Beach,15
Jupiter,15
Palm Beach,15
Lakeland,15
Boynton Beach,15
Hollywood,15
Miami Beach,14
North Palm Beach,14
Plantation,14
Largo,14
Weston,14
Pembroke Pines,14
Port Orange,13
Winter Haven,13
Kissimmee,13
Saint Augustine,13
Winter Garden,12
Deerfield Beach,12
Brandon,12
Pompano Beach,12
Port Charlotte,12
Melbourne,12
Panama City Beach,11
Apopka,11
Niceville,11
Marco Island,11
Fernandina Beach,11
Altamonte Springs,11
Wellington,11
Clermont,11
Daytona Beach,11
Palm Harbor,11
Miami Lakes,11
Lake Worth,10
Ponte Vedra Beach,10
Maitland,10
Orange Park,10
Orange City,10
Port Saint Lucie,10
Cape Coral,10
Fort Pierce,10
Pinellas Park,10
Englewood,9
Belleair Bluffs,9
Coconut Creek,9
Wesley Chapel,9
Punta Gorda,9
Miramar,9
Sanford,9
Spring Hill,9
Palm Coast,9
Tarpon Springs,9
Riverview,9
Oviedo,9
Santa Rosa Beach,9
Plant City,9
Mount Dora,9
Seminole,9
New Port Richey,9
Leesburg,9
Davie,8
Oakland Park,8
North Port,8
North Miami Beach,8
Crystal River,8
Crestview,8
Brooksville,8
Deland,8
Sun City Center,8
Sunrise,8
Zephyrhills,8
Merritt Island,8
Saint Cloud,8
Inverness,8
Homestead,8
Tamarac,8
Gulf Breeze,8
Estero,8
Palmetto,8
Trinity,7
Valrico,7
Palm City,7
Sebastian,7
Sebring,7
New Smyrna Beach,7
Hallandale,7
Greenacres,7
North Miami,7
Key West,7
Port Richey,7
Dade City,7
Pinecrest,7
Key Biscayne,7
Ocoee,6
The Villages,6
Marianna,6
Belleview,6
Okeechobee,6
Defuniak Springs,6
Windermere,6
Lady Lake,6
Chipley,6
Lake City,6
Sunny Isles Beach,6
Titusville,6
Lutz,6
Oldsmar,6
Key Largo,6
Palm Bay,6
Margate,6
Jensen Beach,6
Royal Palm Beach,6
Apollo Beach,6
Winter Springs,6
Lighthouse Point,6
Indian Harbour Beach,5
Lake Wales,5
Pace,5
Haines City,5
Lehigh Acres,5
Beverly Hills,5
Lynn Haven,5
Cocoa,5
Dunedin,5
Tavares,5
Jacksonville Beach,5
West Melbourne,5
Temple Terrace,5
Navarre,5
Marathon,5
Rockledge,5
Dunnellon,5
Davenport,4
Ellenton,4
Indialantic,4
Crawfordville,4
Sanibel,4
Nokomis,4
Saint Johns,4
North Fort Myers,4
Bartow,4
Hudson,4
Lantana,4
Surfside,4
Cocoa Beach,4
Edgewater,4
Eustis,4
Miami Shores,4
Freeport,4
Hallandale Beach,4
Land O Lakes,4
Belle Glade,4
Neptune Beach,4
St. Petersburg,4
Palatka,4
Blountstown,4
Yulee,4
Cooper City,4
South Miami,4
Milton,4
Live Oak,4
Fleming Island,4
Miramar Beach,4
South Pasadena,4
Tequesta,3
Juno Beach,3
Bushnell,3
Macclenny,3
Mayo,3
Parrish,3
Deltona,3
Immokalee,3
Bonifay,3
Palm Springs,3
Avon Park,3
Riviera Beach,3
Wilton Manors,3
Hernando,3
Casselberry,3
Seffner,3
Longboat Key,3
Trenton,3
Lake Placid,3
Madison,3
Homosassa,3
Starke,3
Cross City,3
Mary Esther,3
Port Saint Joe,3
Celebration,3
Cutler Bay,3
Miami Gardens,3
Keystone Heights,3
West Miami,3
Coconut Grove,3
Dania,3
Lauderdale Lakes,3
Lakewood Ranch,3
Holiday,3
Big Pine Key,3
Miami Springs,3
Quincy,2
Holly Hill,2
Bay Harbor Islands,2
Odessa,2
Saint James City,2
Bronson,2
Lauderhill,2
Newberry,2
Perry,2
Lithia,2
Bell,2
Apalachicola,2
High Springs,2
Shalimar,2
Branford,2
Clewiston,2
Monticello,2
Florida City,2
Callahan,2
Hobe Sound,2
Palmetto Bay,2
Hialeah Gardens,2
Arcadia,2
Port St. Lucie,2
Saint Pete Beach,2
Auburndale,2
Graceville,2
Chiefland,2
Islamorada,2
Alachua,2
Daytona Beach Shores,2
Williston,2
Wauchula,2
Floral City,2
Middleburg,2
Lake Park,2
Atlantic Beach,2
Treasure Island,2
Summerfield,2
Ponte Vedra,2
Wildwood,2
Satellite Beach,2
Viera,2
Groveland,2
Haverhill,1
Stock Island,1
Manalapan,1
Perrine,1
Summerland Key,1
Eastpoint,1
Gulfport,1
Sorrento,1
St Pete Beach,1
Silver Springs,1
University Park,1
Astor,1
Okahumpka,1
Fruitland Park,1
Carrabelle,1
Boca Grande,1
Mulberry,1
Sneads,1
Bowling Green,1
Barefoot Bay,1
Madeira Beach,1
Mims,1
Pierson,1
South Daytona,1
Jay,1
Green Cove Springs,1
Polk City,1
East Palatka,1
Pensacola Beach,1
Dowling Park,1
Champions Gate,1
Citrus Springs,1
Ave Maria,1
Micanopy,1
Interlachen,1
Heathrow,1
Placida,1
Hilliard,1
Princeton,1
Clearwater Beach,1
Ruskin,1
Pahokee,1
Frostproof,1
Flagler Beach,1
Bunnell,1
Umatilla,1
Osprey,1
Labelle,1
Medley,1
Bristol,1
Monroe County,1
North Lauderdale,1
Hastings,1
Bal Harbour,1
St. Cloud,1
Indiantown,1
Fort Meade,1
Poinciana,1
Holmes Beach,1
Greenwood,1
Homosassa Springs,1
Safety Harbor,1
Parker,1
La Belle,1
Altoona,1
Fort White,1
Saint Lucie West,1
Tavernier,1
Loxahatchee,1
Inglis,1
Archer,1
St Petersburg Beach,1
Weeki Wachee,1
Cedar Key,1
St. Petersberg,1
Hurlburt Field,1
Palm Shores,1
Kendall,1
Havana,1
De Funiak Springs,1
Dundee,1
Lake Butler,1
Bayonet Point,1
St. James City,1
Saint Petersburg Beach,1
Tierra Verde,1
Wewahitchka,1
Amelia Island

2025-01-16 19:12:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:12:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:12:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:12:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 19:12:59 - snowflake.connector.connection - INFO - closed
2025-01-16 19:12:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:14:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 19:14:09 - root - INFO - ```sql
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM FDA.FDIC_BANKS.LOCATIONS
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
```
2025-01-16 19:14:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:14:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:14:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:14:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:14:10 - snowflake.connector.connection - INFO - closed
2025-01-16 19:14:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:14:10 - root - INFO - SQL:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM FDA.FDIC_BANKS.LOCATIONS
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
Results:
zip_code,institution_count
33134,39

2025-01-16 19:14:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:14:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:14:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:14:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 19:14:12 - snowflake.connector.connection - INFO - closed
2025-01-16 19:14:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:14:13 - root - INFO - SQL:
SELECT DISTINCT "fdic_certificate_number", "active"
    FROM FDA.FDIC_BANKS.INSTITUTIONS
    WHERE "state" = 'FL'
    LIMIT 1000;
Results:
Too long, hard cut:
fdic_certificate_number,active
5674,False
20806,False
17021,False
3563,False
30885,False
31669,False
21408,False
17682,False
18768,False
14856,False
19361,False
19466,False
18912,False
14393,False
21546,False
17345,False
21035,False
17930,False
19972,False
18860,False
18967,False
18769,False
20965,False
18585,False
128,False
20804,False
16514,False
20847,False
17558,False
20665,False
28967,False
18886,False
18119,False
21637,False
20368,False
19113,False
20802,False
19311,False
30528,False
21340,False
20401,False
18868,False
21992,False
17862,False
20591,False
19945,False
22259,False
19955,False
16948,False
17294,False
21629,False
18520,False
21114,False
17817,False
20531,False
18540,False
21356,False
3591,False
3572,False
21450,False
21380,False
21941,False
15569,False
21519,False
17876,False
19074,False
17717,False
21441,False
18627,False
21003,False
20251,False
20867,False
18811,False
18583,False
20925,False
21036,False
21274,False
31481,False
17706,False
21475,False
22132,False
29361,False
17301,False
18134,False
18330,False
29419,False
17757,False
15464,False
21782,False
17761,False
18328,False
20475,False
20375,False
20007,False
20805,False
20850,False
18921,False
19007,False
19224,False
17940,False
21075,False
21403,False
20689,False
31041,False
20563,False
19840,False
18452,False
17591,False
20167,False
17698,False
26852,False
20483,False
20820,False
21565,False
20881,False
20833,False
17012,False
140,False
30674,False
22431,False
31228,False
21491,False
18042,False
20090,False
31662,False
20548,False
17584,False
22075,False
1348,False
3558,False
17042,False
16208,False
18993,False
20486,False
20430,False
21268,False
22030,False
18293,False
21623,False
20590,False
22009,False
8013,False
20346,False
21197,False
21156,False
20335,False
141,False
3581,False
19384,False
15818,False
33816,False
20998,False
19348,False
21124,False
19096,False
19997,False
30932,False
20599,False
31014,False
19830,False
17151,False
20262,False
30472,False
21892,False
19509,False
21893,False
17670,False
19334,False
31742,False
18648,False
19029,False
31340,False
21698,False
18471,False
21303,False
31424,False
21616,False
3594,False
3571,False
129,False
20508,False
21494,False
16508,False
19847,False
33245,False
21177,False
22293,False
9619,False
31946,False
30559,False
18433,False
31706,False
21323,False
20566,False
17696,False
3557,False
18875,False
21195,False
31200,False
20543,False
17039,False
21251,False
22294,False
5680,False
20180,False
29720,False
30873,False
126,False
15617,False
21686,False
3584,False
15577,False
15719,False
21087,False
21867,False
18353,False
21133,False
20154,False
28995,False
19790,False
21620,False
19270,False
18684,False
17669,False
19268,False
20924,False
18179,False
31720,False
22197,False
20640,False
18175,False
18951,False
20636,False
58967,False
3570,False
18340,False
19425,False
17516,False
21080,False
19846,False
19678,False
21612,False
21527,False
19424,False
18376,False
30955,False
20336,False
5658,False
5667,False
18044,False
31522,False
18645,False
21354,False
21445,False
31167,False
26889,False
18578,False
30840,False
19148,False
23094,False
21969,False
20682,False
17264,False
19542,False
16497,False
18792,False
16343,False
21588,False
20406,False
20622,False
30603,False
21617,False
19033,False
21246,False
29360,False
3562,False
21042,False
21750,False
20247,False
19917,False
20219,False
20390,False
13903,False
29203,False
18141,False
18850,False
20635,False
18711,False
20182,False
21250,False
20235,False
1346,False
1345,False
17402,False
20506,False
1347,False
20463,False
29063,False
22750,False
21863,False
21895,False
20271,False
15473,False
22666,False
21925,False
17579,False
16670,False
18572,False
17595,False
19372,False
20929,False
18107,False
17286,False
22605,False
3576,False
31037,False
19523,False
8012,False
20975,False
17597,False
20144,False
15391,False
58832,False
3592,False
18744,False
31519,False
21917,False
20837,False
19798,False
20602,False
20634,False
18130,False
21115,False
21454,False
19077,False
18320,False
17893,False
3587,False
20607,False
19149,False
20796,False
21453,False
18665,False
19283,False
19677,False
17515,False
20854,False
20920,False
30813,False
20772,False
19170,False
18323,False
15436,False
3595,False
20392,False
21806,False
18824,False
20437,False
22243,False
17559,False
3582,False
3586,False
31677,False
31245,False
18140,False
20402,False
18406,False
17776,False
20035,False
22213,False
9630,False
18742,False
18599,False
21585,False
20505,False
20370,False
20936,False
21296,False
21512,False
3588,False
19385,False
22066,False
125,False
18939,False
18972,False
3561,False
30797,False
20205,False
3559,False
17986,False
21886,False
18666,False
5675,False
21252,False
21424,False
19208,False
18743,False
33330,False
32529,False
33019,False
33300,False
32695,False
30834,False
30677,False
33172,False
31548,False
31579,False
33460,False
28858,False
32812,False
32985,False
33344,False
33786,False
33479,False
32540,False
32984,False
33255,False
33345,Fals

2025-01-16 19:14:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:14:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:14:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:14:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:14:14 - snowflake.connector.connection - INFO - closed
2025-01-16 19:14:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:14:15 - root - INFO - SQL:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM FDA.FDIC_BANKS.LOCATIONS
WHERE "state" = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
Results:
zip_code,institution_count
33134,39

2025-01-16 19:14:15 - root - INFO - itercount: 0
2025-01-16 19:14:15 - root - INFO - Database Name: FDA
Schema Name: CENSUS_UTILITY
DDL describes table information.
,0
table_name,FIPS_CLASS_CODE
description,
DDL,"create or replace TABLE FIPS_CLASS_CODE (
	""fips_class_code"" VARCHAR(16777216),
	""code_description"" VARCHAR(16777216)
);"

,1
table_name,FUNCTIONAL_STATUS_CODES
description,
DDL,"create or replace TABLE FUNCTIONAL_STATUS_CODES (
	""functional_status_code"" VARCHAR(16777216),
	""code_description"" VARCHAR(16777216),
	""associated_geographic_entity"" VARCHAR(16777216)
);"

,2
table_name,MTFCC_FEATURE_CLASS_CODES
description,
DDL,"create or replace TABLE MTFCC_FEATURE_CLASS_CODES (
	""feature_class_code"" VARCHAR(16777216),
	""feature_class"" VARCHAR(16777216),
	""superclass"" VARCHAR(16777216),
	""point"" BOOLEAN,
	""linear"" BOOLEAN,
	""areal"" BOOLEAN,
	""description"" VARCHAR(16777216)
);"

,3
table_name,FIPS_CODES_ALL
description,
DDL,"create or replace TABLE FIPS_CODES_ALL (
	""summary_level"" VARCHAR(16777216),
	""summary_level_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_subdivision_fips_code"" VARCHAR(16777216),
	""place_fips_code"" VARCHAR(16777216),
	""consolidated_city_fips_code"" VARCHAR(16777216),
	""area_name"" VARCHAR(16777216)
);"

,4
table_name,LSAD_CODES
description,
DDL,"create or replace TABLE LSAD_CODES (
	""lsad_code"" VARCHAR(16777216),
	""lsad_description"" VARCHAR(16777216),
	""associated_geographic_entities"" VARCHAR(16777216)
);"

,5
table_name,FIPS_CODES_STATES
description,
DDL,"create or replace TABLE FIPS_CODES_STATES (
	""state_fips_code"" VARCHAR(16777216),
	""state_postal_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_gnisid"" VARCHAR(16777216)
);"

Database Name: FDA
Schema Name: FDA_FOOD
DDL describes table information.
,0
table_name,FOOD_ENFORCEMENT
description,
DDL,"create or replace TABLE FOOD_ENFORCEMENT (
	""classification"" VARCHAR(16777216),
	""center_classification_date"" DATE,
	""report_date"" DATE,
	""postal_code"" VARCHAR(16777216),
	""termination_date"" DATE,
	""recall_initiation_date"" DATE,
	""recall_number"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""event_id"" NUMBER(38,0),
	""distribution_pattern"" VARCHAR(16777216),
	""recalling_firm"" VARCHAR(16777216),
	""voluntary_mandated"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""reason_for_recall"" VARCHAR(16777216),
	""initial_firm_notification"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""product_type"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""product_description"" VARCHAR(16777216),
	""code_info"" VARCHAR(16777216),
	""address_1"" VARCHAR(16777216),
	""address_2"" VARCHAR(16777216),
	""product_quantity"" VARCHAR(16777216),
	""more_code_info"" VARCHAR(16777216)
);"

,1
table_name,FOOD_EVENTS
description,
DDL,"create or replace TABLE FOOD_EVENTS (
	""report_number"" VARCHAR(16777216),
	""reactions"" VARCHAR(16777216),
	""outcomes"" VARCHAR(16777216),
	""products_brand_name"" VARCHAR(16777216),
	""products_industry_code"" VARCHAR(16777216),
	""products_role"" VARCHAR(16777216),
	""products_industry_name"" VARCHAR(16777216),
	""date_created"" DATE,
	""date_started"" DATE,
	""consumer_gender"" VARCHAR(16777216),
	""consumer_age"" FLOAT,
	""consumer_age_unit"" VARCHAR(16777216)
);"

Database Name: FDA
Schema Name: FDIC_BANKS
DDL describes table information.
,0
table_name,INSTITUTIONS
description,
DDL,"create or replace TABLE INSTITUTIONS (
	""fdic_certificate_number"" VARCHAR(16777216),
	""institution_name"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""fdic_id"" VARCHAR(16777216),
	""docket"" VARCHAR(16777216),
	""active"" BOOLEAN,
	""address"" VARCHAR(16777216),
	""total_assets"" NUMBER(38,0),
	""bank_charter_class"" VARCHAR(16777216),
	""change_code_1"" VARCHAR(16777216),
	""change_code_2"" VARCHAR(16777216),
	""change_code_3"" VARCHAR(16777216),
	""change_code_4"" VARCHAR(16777216),
	""change_code_5"" VARCHAR(16777216),
	""change_code_6"" VARCHAR(16777216),
	""change_code_7"" VARCHAR(16777216),
	""change_code_8"" VARCHAR(16777216),
	""change_code_9"" VARCHAR(16777216),
	""change_code_10"" VARCHAR(16777216),
	""change_code_11"" VARCHAR(16777216),
	""change_code_12"" VARCHAR(16777216),
	""change_code_13"" VARCHAR(16777216),
	""change_code_14"" VARCHAR(16777216),
	""change_code_15"" VARCHAR(16777216),
	""occ_charter"" VARCHAR(16777216),
	""chartering_agency"" VARCHAR(16777216),
	""conservatorship"" BOOLEAN,
	""city"" VARCHAR(16777216),
	""category_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""established_date"" DATE,
	""last_updated"" DATE,
	""effective_date"" DATE,
	""end_effective_date"" DATE,
	""denovo_institute"" BOOLEAN,
	""total_deposits"" NUMBER(38,0),
	""equity_capital"" NUMBER(38,0),
	""fdic_geo_region"" VARCHAR(16777216),
	""fdic_supervisory_region"" VARCHAR(16777216),
	""fdic_supervisory_region_code"" VARCHAR(16777216),
	""fed_reserve_district"" VARCHAR(16777216),
	""fed_reserve_district_id"" VARCHAR(16777216),
	""fed_reserve_unique_id"" VARCHAR(16777216),
	""federal_charter"" BOOLEAN,
	""fdic_field_office"" VARCHAR(16777216),
	""iba"" BOOLEAN,
	""inactive_flag"" BOOLEAN,
	""insurance_fund_membership"" VARCHAR(16777216),
	""secondary_insurance_fund"" VARCHAR(16777216),
	""deposit_insurance_date"" DATE,
	""credit_card_institution"" BOOLEAN,
	""bank_insurance_fund_member"" BOOLEAN,
	""insured_commercial_bank"" BOOLEAN,
	""deposit_insurance_fund_member"" BOOLEAN,
	""fdic_insured"" BOOLEAN,
	""saif_insured"" BOOLEAN,
	""insured_savings_institute"" BOOLEAN,
	""new_cert_number"" VARCHAR(16777216),
	""oakar_institute"" BOOLEAN,
	""ots_region"" VARCHAR(16777216),
	""last_structural_change"" DATE,
	""qbp_region"" VARCHAR(16777216),
	""regulator"" VARCHAR(16777216),
	""report_date"" DATE,
	""reporting_period_end_date"" DATE,
	""state_chartered"" BOOLEAN,
	""return_on_assets"" FLOAT,
	""roa_quarterly"" FLOAT,
	""roa_pretax"" FLOAT,
	""row_pretax_quarterly"" FLOAT,
	""return_on_equity"" FLOAT,
	""roe_quarterly"" FLOAT,
	""run_date"" DATE,
	""sasser_institute"" BOOLEAN,
	""law_sasser"" BOOLEAN,
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""trade_name_1"" VARCHAR(16777216),
	""trade_name_2"" VARCHAR(16777216),
	""trade_name_3"" VARCHAR(16777216),
	""trade_name_4"" VARCHAR(16777216),
	""trade_name_5"" VARCHAR(16777216),
	""trade_name_6"" VARCHAR(16777216),
	""zip_code"" VARCHAR(16777216),
	""occ_district"" VARCHAR(16777216),
	""ultimate_cert_number"" VARCHAR(16777216),
	""cfpb_supervisory_flag"" BOOLEAN,
	""cfpb_supervisory_start_date"" DATE,
	""cfpb_supervisory_end_date"" DATE,
	""offices_count"" NUMBER(38,0),
	""parent_fdic_cert"" VARCHAR(16777216),
	""parent_parcert"" VARCHAR(16777216),
	""high_holder_city"" VARCHAR(16777216),
	""total_domestic_deposits"" NUMBER(38,0),
	""ffiec_call_report_filer"" BOOLEAN,
	""holding_company_flag"" BOOLEAN,
	""ag_lending_flag"" BOOLEAN,
	""ownership_type"" VARCHAR(16777216),
	""top_holder"" VARCHAR(16777216),
	""net_income"" NUMBER(38,0),
	""quarterly_net_income"" NUMBER(38,0),
	""office_count_domestic"" NUMBER(38,0),
	""office_count_foreign"" NUMBER(38,0),
	""office_count_us_territories"" NUMBER(38,0),
	""rssd_id"" VARCHAR(16777216),
	""holding_company_state"" VARCHAR(16777216),
	""subchap_s_indicator"" BOOLEAN,
	""trust_powers_status"" VARCHAR(16777216),
	""asset_concentration_hierarchy"" VARCHAR(16777216),
	""primary_specialization"" VARCHAR(16777216),
	""csa_name"" VARCHAR(16777216),
	""csa_fips_code"" VARCHAR(16777216),
	""csa_indicator"" BOOLEAN,
	""cbsa_name"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""cbsa_metro_flag"" BOOLEAN,
	""cbsa_micro_flag"" BOOLEAN,
	""cbsa_division_name"" VARCHAR(16777216),
	""cbsa_division_fips_code"" VARCHAR(16777216),
	""cbsa_division_flag"" BOOLEAN
);"

,1
table_name,LOCATIONS
description,
DDL,"create or replace TABLE LOCATIONS (
	""fdic_certificate_number"" VARCHAR(16777216),
	""institution_name"" VARCHAR(16777216),
	""branch_name"" VARCHAR(16777216),
	""branch_number"" VARCHAR(16777216),
	""main_office"" BOOLEAN,
	""branch_address"" VARCHAR(16777216),
	""branch_city"" VARCHAR(16777216),
	""zip_code"" VARCHAR(16777216),
	""branch_county"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""institution_class"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""cbsa_name"" VARCHAR(16777216),
	""cbsa_division_flag"" BOOLEAN,
	""cbsa_division_fips_code"" NUMBER(38,0),
	""cbsa_division_name"" VARCHAR(16777216),
	""cbsa_metro_flag"" BOOLEAN,
	""cbsa_metro_fips_code"" VARCHAR(16777216),
	""cbsa_metro_name"" VARCHAR(16777216),
	""cbsa_micro_flag"" BOOLEAN,
	""csa_flag"" BOOLEAN,
	""csa_fips_code"" VARCHAR(16777216),
	""csa_name"" VARCHAR(16777216),
	""date_established"" DATE,
	""fdic_uninum"" VARCHAR(16777216),
	""last_updated"" DATE,
	""service_type"" VARCHAR(16777216),
	""branch_fdic_uninum"" VARCHAR(16777216)
);"

Database Name: FDA
Schema Name: GEO_CENSUS_BLOCKGROUPS
DDL describes table information.
,0
table_name,BLOCKGROUPS_04
description,
DDL,"create or replace TABLE BLOCKGROUPS_04 (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""tract_ce"" VARCHAR(16777216),
	""blockgroup_ce"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""blockgroup_geom"" BINARY(8388608)
);"

Some other tables have the similar structure: ['BLOCKGROUPS_04', 'BLOCKGROUPS_08', 'BLOCKGROUPS_13', 'BLOCKGROUPS_16', 'BLOCKGROUPS_20', 'BLOCKGROUPS_23', 'BLOCKGROUPS_25', 'BLOCKGROUPS_31', 'BLOCKGROUPS_32', 'BLOCKGROUPS_39', 'BLOCKGROUPS_54', 'BLOCKGROUPS_29', 'BLOCKGROUPS_48', 'BLOCKGROUPS_19', 'BLOCKGROUPS_49', 'BLOCKGROUPS_24', 'BLOCKGROUPS_06', 'BLOCKGROUPS_09', 'BLOCKGROUPS_10', 'BLOCKGROUPS_18', 'BLOCKGROUPS_26', 'BLOCKGROUPS_36', 'BLOCKGROUPS_66', 'BLOCKGROUPS_40', 'BLOCKGROUPS_41', 'BLOCKGROUPS_01', 'BLOCKGROUPS_11', 'BLOCKGROUPS_12', 'BLOCKGROUPS_17', 'BLOCKGROUPS_30', 'BLOCKGROUPS_47', 'BLOCKGROUPS_53', 'BLOCKGROUPS_55', 'BLOCKGROUPS_33', 'BLOCKGROUPS_45', 'BLOCKGROUPS_51', 'BLOCKGROUPS_72', 'BLOCKGROUPS_02', 'BLOCKGROUPS_05', 'BLOCKGROUPS_15', 'BLOCKGROUPS_21', 'BLOCKGROUPS_22', 'BLOCKGROUPS_28', 'BLOCKGROUPS_34', 'BLOCKGROUPS_35', 'BLOCKGROUPS_37', 'BLOCKGROUPS_38', 'BLOCKGROUPS_42', 'BLOCKGROUPS_44', 'BLOCKGROUPS_50', 'BLOCKGROUPS_56', 'BLOCKGROUPS_60', 'BLOCKGROUPS_69', 'BLOCKGROUPS_78', 'BLOCKGROUPS_27', 'BLOCKGROUPS_46']
,1
table_name,US_BLOCKGROUPS_NATIONAL
description,
DDL,"create or replace TABLE US_BLOCKGROUPS_NATIONAL (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""tract_ce"" VARCHAR(16777216),
	""blockgroup_ce"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""blockgroup_geom"" BINARY(8388608)
);"

Database Name: FDA
Schema Name: GEO_US_BOUNDARIES
DDL describes table information.
,0
table_name,ADJACENT_COUNTIES
description,
DDL,"create or replace TABLE ADJACENT_COUNTIES (
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""neighbors"" VARIANT,
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,1
table_name,ADJACENT_STATES
description,
DDL,"create or replace TABLE ADJACENT_STATES (
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,2
table_name,CBSA
description,
DDL,"create or replace TABLE CBSA (
	""geo_id"" VARCHAR(16777216),
	""csa_geo_id"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""msa_indicator"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""cbsa_geom"" BINARY(8388608)
);"

,3
table_name,CNECTA
description,
DDL,"create or replace TABLE CNECTA (
	""geo_id"" VARCHAR(16777216),
	""cnecta_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""name_lsad"" VARCHAR(16777216),
	""lsad"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""cnecta_geom"" BINARY(8388608)
);"

,4
table_name,COASTLINE
description,
DDL,"create or replace TABLE COASTLINE (
	""name"" VARCHAR(16777216),
	""coastline_geom"" BINARY(8388608)
);"

,5
table_name,CONGRESS_DISTRICT_115
description,
DDL,"create or replace TABLE CONGRESS_DISTRICT_115 (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""district_fips_code"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""congress_session"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" BOOLEAN,
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""district_geom"" BINARY(8388608)
);"

Some other tables have the similar structure: ['CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116']
,6
table_name,COUNTIES
description,
DDL,"create or replace TABLE COUNTIES (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_gnis_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""csa_fips_code"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""met_div_fips_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""county_geom"" BINARY(8388608)
);"

,7
table_name,NATIONAL_OUTLINE
description,
DDL,"create or replace TABLE NATIONAL_OUTLINE (
	""us_outline_geom"" BINARY(8388608),
	""aff_geo_id"" VARCHAR(16777216),
	""geo_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216)
);"

,8
table_name,RAILWAYS
description,
DDL,"create or replace TABLE RAILWAYS (
	""geo_id"" NUMBER(38,0),
	""full_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""railway_geom"" VARCHAR(16777216)
);"

,9
table_name,STATES
description,
DDL,"create or replace TABLE STATES (
	""geo_id"" VARCHAR(16777216),
	""region_code"" VARCHAR(16777216),
	""division_code"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_gnis_code"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""state_geom"" BINARY(8388608)
);"

,10
table_name,CSA
description,
DDL,"create or replace TABLE CSA (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""msa_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""csa_geom"" BINARY(8388608)
);"

,11
table_name,METROPOLITAN_DIVISIONS
description,
DDL,"create or replace TABLE METROPOLITAN_DIVISIONS (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""cbsa_code"" VARCHAR(16777216),
	""metdiv_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""metdiv_geom"" BINARY(8388608)
);"

,12
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,13
table_name,URBAN_AREAS
description,
DDL,"create or replace TABLE URBAN_AREAS (
	""geo_id"" VARCHAR(16777216),
	""urban_area_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""area_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""urban_area_geom"" BINARY(8388608)
);"

,14
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip_code"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_code"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""zip_code_geom"" BINARY(8388608)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'FDA': {'CENSUS_UTILITY': ['FIPS_CLASS_CODE', 'FIPS_CODES_ALL', 'FIPS_CODES_STATES', 'FUNCTIONAL_STATUS_CODES', 'LSAD_CODES', 'MTFCC_FEATURE_CLASS_CODES'], 'FDA_FOOD': ['FOOD_ENFORCEMENT', 'FOOD_EVENTS'], 'FDIC_BANKS': ['INSTITUTIONS', 'LOCATIONS'], 'GEO_CENSUS_BLOCKGROUPS': ['BLOCKGROUPS_01', 'BLOCKGROUPS_02', 'BLOCKGROUPS_04', 'BLOCKGROUPS_05', 'BLOCKGROUPS_06', 'BLOCKGROUPS_08', 'BLOCKGROUPS_09', 'BLOCKGROUPS_10', 'BLOCKGROUPS_11', 'BLOCKGROUPS_12', 'BLOCKGROUPS_13', 'BLOCKGROUPS_15', 'BLOCKGROUPS_16', 'BLOCKGROUPS_17', 'BLOCKGROUPS_18', 'BLOCKGROUPS_19', 'BLOCKGROUPS_20', 'BLOCKGROUPS_21', 'BLOCKGROUPS_22', 'BLOCKGROUPS_23', 'BLOCKGROUPS_24', 'BLOCKGROUPS_25', 'BLOCKGROUPS_26', 'BLOCKGROUPS_27', 'BLOCKGROUPS_28', 'BLOCKGROUPS_29', 'BLOCKGROUPS_30', 'BLOCKGROUPS_31', 'BLOCKGROUPS_32', 'BLOCKGROUPS_33', 'BLOCKGROUPS_34', 'BLOCKGROUPS_35', 'BLOCKGROUPS_36', 'BLOCKGROUPS_37', 'BLOCKGROUPS_38', 'BLOCKGROUPS_39', 'BLOCKGROUPS_40', 'BLOCKGROUPS_41', 'BLOCKGROUPS_42', 'BLOCKGROUPS_44', 'BLOCKGROUPS_45', 'BLOCKGROUPS_46', 'BLOCKGROUPS_47', 'BLOCKGROUPS_48', 'BLOCKGROUPS_49', 'BLOCKGROUPS_50', 'BLOCKGROUPS_51', 'BLOCKGROUPS_53', 'BLOCKGROUPS_54', 'BLOCKGROUPS_55', 'BLOCKGROUPS_56', 'BLOCKGROUPS_60', 'BLOCKGROUPS_66', 'BLOCKGROUPS_69', 'BLOCKGROUPS_72', 'BLOCKGROUPS_78', 'US_BLOCKGROUPS_NATIONAL'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}
Begin Exploring Related Columns
To determine the **zip code** of the location that has the highest number of bank institutions in **Florida**, we need to analyze the bank branch data available in the database.

---

**Relevant Tables and Columns:**

- **Database:** `FDA`
- **Schema:** `FDIC_BANKS`
- **Table:** `LOCATIONS`

  - **Columns:**
    - `"fdic_certificate_number"`: Identifies unique bank institutions.
      - *Potential usage*: To count the number of unique bank institutions.
    - `"zip_code"`: The ZIP code where each bank branch is located.
      - *Potential usage*: To group branches by ZIP code.
    - `"state"`: The state abbreviation (e.g., 'FL' for Florida).
      - *Potential usage*: To filter records for Florida.
    - `"state_name"`: The full state name.
      - *Potential usage*: Alternative way to filter records for Florida.
    - `"branch_city"`: The city where each branch is located.
      - *Potential usage*: For additional location context if needed.

**Conditions:**

- **Filter for Florida**: Only include records where `"state"` equals `'FL'`.
- **Group by ZIP code**: Aggregate data by `"zip_code"` to count institutions.
- **Count Unique Institutions**: Use `"fdic_certificate_number"` to ensure each institution is counted once per ZIP code.

---

**SQL Queries to Explore the Data:**

1. **List all states in the data:**
   ```sql
   SELECT DISTINCT "state"
   FROM FDA.FDIC_BANKS.LOCATIONS
   LIMIT 1000;
   ```

2. **Confirm Florida's state code:**
   ```sql
   SELECT DISTINCT "state", "state_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state_name" ILIKE '%Florida%'
   LIMIT 1000;
   ```

3. **Get all ZIP codes in Florida:**
   ```sql
   SELECT DISTINCT "zip_code"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   LIMIT 1000;
   ```

4. **List unique bank institutions in Florida:**
   ```sql
   SELECT DISTINCT "fdic_certificate_number", "institution_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   LIMIT 1000;
   ```

5. **Count branches per ZIP code in Florida:**
   ```sql
   SELECT "zip_code", COUNT(*) AS "branch_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "branch_count" DESC
   LIMIT 1000;
   ```

6. **Count unique institutions per ZIP code in Florida:**
   ```sql
   SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "institution_count" DESC
   LIMIT 1000;
   ```

7. **Identify the ZIP code with the highest number of institutions:**
   ```sql
   SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "institution_count" DESC
   LIMIT 1;
   ```

8. **Get cities with the most bank institutions in Florida:**
   ```sql
   SELECT "branch_city", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "branch_city"
   ORDER BY "institution_count" DESC
   LIMIT 1000;
   ```

9. **List all branch addresses in the top ZIP code:**
   ```sql
   SELECT "branch_address", "institution_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL' AND "zip_code" = 'ZIP_CODE_FROM_PREVIOUS_QUERY'
   LIMIT 1000;
   ```

10. **Check the activity status of institutions in Florida:**
    ```sql
    SELECT DISTINCT "fdic_certificate_number", "active"
    FROM FDA.FDIC_BANKS.INSTITUTIONS
    WHERE "state" = 'FL'
    LIMIT 1000;
    ```

---

**Answer:**

```csv
zip_code
zip_code:str in Florida
```

**Explanation:**

We analyzed the `LOCATIONS` table in the `FDA.FDIC_BANKS` schema to find the ZIP code in Florida with the highest number of bank institutions. By filtering for records where `"state"` equals `'FL'` and grouping the results by `"zip_code"`, we counted the unique `"fdic_certificate_number"` values to identify the number of different bank institutions in each ZIP code.

The SQL query used to find the ZIP code is:

```sql
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM FDA.FDIC_BANKS.LOCATIONS
WHERE "state" = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
```

Since we cannot infer the exact ZIP code from the task description, we represent it as `zip_code:str in Florida`.

---Query:
SELECT DISTINCT "state"
   FROM FDA.FDIC_BANKS.LOCATIONS
   LIMIT 1000;
Answer:
state
AL
AK
AZ
AR
CA
CO
FL
GA
HI
ID
IN
IA
KY
LA
ME
MD
MA
MI
MN
MS
MO
NE
NH
NJ
NM
NY
ND
OR
SC
SD
TN
TX
OK
PR
AS
MH
MP
PW
RI
DC
MT
IL
KS
NV
NC
PA
UT
VT
VA
WA
WV
WI
WY
""
FM
GU
VI
DE
OH
CT
Query:
SELECT DISTINCT "state", "state_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state_name" ILIKE '%Florida%'
   LIMIT 1000;
Answer:
state,state_name
FL,Florida
Query:
SELECT DISTINCT "zip_code"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   LIMIT 1000;
Answer:
zip_code
32401
32405
32407
32404
32444
32408
32406
32952
32796
32953
32937
32909
32904
32922
32976
32901
32903
32754
34453
34442
34450
32351
34609
34601
33612
33629
33617
33614
33619
33548
33569
33605
33637
32344
32312
34420
32536
32569
34655
34667
33760
32940
34446
34465
33573
33626
33615
33635
33610
33618
33611
33594
33578
32305
34471
34432
34472
33774
33707
33762
34691
33761
32567
34104
32413
32907
32905
32920
34429
34434
32333
34606
33606
33547
33613
32303
32311
34481
34476
32162
32931
32955
32780
34436
34613
34608
33852
33609
33602
33596
33570
33607
33558
33584
33634
33624
32301
32307
32309
32304
34488
34480
34974
33543
34653
33544
33525
33542
33701
33702
33703
33777
34685
33782
33713
33715
33708
33770
33764
33716
33711
32550
33563
33647
33549
33616
32317
34474
32547
33541
33771
33706
33763
33767
33776
32461
33704
33772
32327
32091
32424
32328
32052
32443
32066
32064
32060
32428
34109
34102
34110
34105
34101
33940
33935
33440
33905
33936
33990
33924
34134
33956
33965
33909
32615
32643
32605
32667
32055
32056
32693
32625
32068
32656
32217
32233
32257
32207
32277
32266
32216
32224
32221
32255
34957
33178
33173
34229
34746
32935
32308
32579
32926
33870
33825
33511
33572
33595
33559
34470
32548
32539
32541
34972
34668
34652
34669
33759
32433
33625
33603
32302
34482
32578
32544
34639
33556
34654
34638
34690
33523
33755
33756
34684
34683
33781
34689
33765
33705
33778
34695
32435
32439
33709
33145
32628
32680
32320
32322
33471
32465
32456
32457
32425
32440
32446
32448
32460
32321
32340
32008
32347
32054
34108
34116
34119
34145
34113
34142
34112
34120
33907
33908
33957
33991
33901
34135
33919
33904
33971
33903
34133
33966
33921
32608
32606
32609
32601
32607
32603
32669
32602
32618
32025
32038
32626
32063
32043
32003
32073
32222
32256
32246
32208
32250
32202
32223
32225
32209
32258
32210
32244
32205
32219
32206
32097
32034
32046
32259
32082
32081
32080
32095
32145
32086
33441
33065
33029
33069
33026
33073
33009
33316
33301
33071
33312
33062
33305
33324
33027
33328
33442
33334
33308
33306
33394
33321
33063
33314
33315
33019
33067
33325
33060
33030
33068
32958
34990
34997
34996
34956
33455
33131
33012
33010
33169
33162
33146
33142
33172
33128
33149
33126
33147
33013
33015
33177
33179
33181
33166
33155
33016
33140
33018
33154
33180
33161
33189
33055
33130
33133
33034
33056
33184
33136
33127
33054
33109
33137
33187
33050
33036
33043
33478
33446
33462
33408
33414
33417
33411
33401
33432
33498
33418
33480
33472
33445
33496
33467
33435
33444
33476
34982
34986
34953
34947
34984
33330
33014
33199
33434
33406
33415
34981
33952
34266
34205
34222
34209
34219
34210
34201
34217
34212
34232
34238
34236
34231
34239
34241
34240
34242
32110
15790
33834
34711
34736
32784
34731
32102
32832
32837
32789
32792
32835
32839
32751
32806
32801
32712
32825
32703
34786
32808
32836
32804
32807
32778
34714
34762
32824
32805
34769
34747
34759
34743
33884
33881
33841
33853
33823
33838
33897
33843
32708
32750
32766
32771
32746
32773
32163
32127
32132
32128
32169
32738
32503
32504
32514
32526
32563
32565
34491
34698
33712
34677
33710
33785
32459
34103
33914
33928
33912
32666
32611
32619
32696
34449
32621
32218
32204
32211
32011
32177
32112
32131
32148
32092
32084
33024
33004
33317
33331
33309
33020
33076
33064
33319
33326
33021
33023
33313
33351
33025
33311
32966
32963
32968
34994
33132
33156
33125
33139
33144
33183
33141
33135
33186
33138
33122
33193
33165
33176
33129
33174
33175
33143
33185
33157
33150
33032
33168
33040
33037
33041
33070
33042
33410
33449
33405
33487
33460
33463
33458
33431
33436
33469
33486
33483
33433
33403
33437
33428
33407
33413
33412
33404
34951
33160
33134
33196
33033
33470
34987
34950
34223
33954
33980
33981
34224
33953
34211
34202
34203
34208
34280
34287
34237
34293
34292
34228
34275
32136
32164
33873
34748
32159
32726
34788
32776
32702
32819
32821
32803
34761
34787
32826
32812
32829
32811
32828
32827
32810
34233
32757
32822
32814
32779
34741
34744
33896
33880
34771
33859
33830
33860
33801
33868
32765
32701
32707
33513
34785
32114
32168
32720
32174
32118
32141
32180
32176
32724
32725
32534
32505
32506
32561
32507
32571
32714
33913
33323
33304
33322
32962
33477
33409
33426
33484
33430
33461
34983
34952
33950
33948
33983
33946
34207
34221
34243
34285
32137
32818
32817
32820
33803
33813
33837
33844
32117
32763
32502
32566
32570
32119
32960
32809
33809
33805
32129
Query:
SELECT DISTINCT "fdic_certificate_number", "institution_name"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   LIMIT 1000;
Answer:
Too long, hard cut:
fdic_certificate_number,institution_name
9846,Truist Bank
25122,First National Bank Northwest Florida
12441,Hancock Whitney Bank
12368,Regions Bank
4988,Trustmark National Bank
11813,Cadence Bank
3511,"Wells Fargo Bank, National Association"
20504,Ameris Bank
8879,Community Bank of Mississippi
31313,First Federal Bank
19819,Southeast First National Bank
58719,Progress Bank and Trust
3510,"Bank of America, National Association"
6384,"PNC Bank, National Association"
628,"JPMorgan Chase Bank, National Association"
9396,Valley National Bank
35506,Cypress Bank & Trust
873,Synovus Bank
131,Seacoast National Bank
58029,Sunrise Bank
16571,BMO Harris Bank National Association
26323,"Florida Capital Bank, National Association"
58979,"BankUnited, National Association"
34562,ENCORE BANK
26829,First National Bank of Pasco
913,The Northern Trust Company
28316,FIDELITY BANK
33893,Raymond James Bank
11241,Centennial Bank
9622,Capital City Bank
34233,Marine Bank & Trust Company
33555,"SouthState Bank, National Association"
32737,Drummond Community Bank
34899,First Citrus Bank
35558,Century Bank of Florida
23627,Republic Bank & Trust Company
57470,Members Trust Company
29331,TC FEDERAL BANK
58537,BankFlorida
59265,Waterfall Bank
31945,TrustCo Bank
13303,Bank of England
10988,Stearns Bank National Association
35056,Madison County Community Bank
58811,One Florida Bank
17534,KeyBank National Association
14843,MidWestOne Bank
34489,Edison National Bank
27205,Englewood Bank & Trust
59281,Gulf Coast Business Bank
33492,Crescent Bank
21784,First Port City Bank
15699,Pineland Bank
17509,First State Bank of the Florida Keys
20234,City National Bank of Florida
57369,U. S. Century Bank
57931,Anchor Bank
57083,Plus International Bank
19977,Israel Discount Bank of New York
58376,Encore  Bank
32242,"Liberty Savings Bank, F.S.B."
17193,The Warrington Bank
2777,MidSouth Bank
58463,SmartBank
34217,The First Bank
35212,Community Bank of the South
10055,First Southern Bank
21031,The Bank of Tampa
58377,Central Bank
4977,First Horizon Bank
11063,First-Citizens Bank & Trust Company
34997,BayFirst National Bank
7946,"BNY Mellon, National Association"
58479,Bank of Central Florida
58181,Metro City Bank
57833,Beal Bank USA
12437,Renasant Bank
16595,CCB Community Bank
21292,PeoplesSouth Bank
5676,Brannen Bank
30012,Third Federal Savings and Loan Association of Cleveland
58309,American Momentum Bank
34908,Cogent Bank
57993,ServisFirst Bank
58694,Prime Meridian Bank
34068,Thomasville National Bank
33440,Citizens First Bank
35138,Millennium Bank
17580,FNBT BANK
26687,PNB Community Bank
58113,Flagship Bank
34775,"TIAA, FSB"
8021,Wauchula State Bank
110,Bank OZK
34535,"TCM Bank, National Association"
17734,Community State Bank
21692,Peoples Bank of Graceville
27589,"Lake Forest Bank & Trust Company, National Association"
58486,FineMark National Bank & Trust
16022,New York Community Bank
12633,The Central Trust Bank
57425,Sanibel Captiva Community Bank
16450,Busey Bank
23220,Woodforest National Bank
23472,"The Bank of New York Mellon Trust Company, National Association"
7213,"Citibank, National Association"
22205,Barwick Banking Company
5694,PrimeSouth Bank
26398,American National Bank
24156,Ocean Bank
22953,"Amerant Bank, National Association"
26725,Banco do Brasil Americas
33506,First National Bank of Coffee County
33959,"Natbank, National Association"
58030,Paradise Bank
58862,Professional Bank
34069,"Wilmington Trust, National Association"
21265,Bradesco BAC Florida Bank
26299,Pacific National Bank
35599,Apollo Bank
57890,"HSBC Bank USA, National Association"
8018,Grove Bank & Trust
34643,Sunstate Bank
57815,Banesco USA
24516,Interaudi Bank
17281,City National Bank
26633,Delta National Bank and Trust Company
588,Manufacturers and Traders Trust Company
18930,Bank of Belle Glade
17093,The First National Bank of South Miami
26442,"Terrabank, National Association"
27086,Charlotte State Bank & Trust
21163,Crews Bank & Trust
59140,Gulfside Bank
58692,Intracoastal Bank
15465,United Southern Bank
26312,"First American Trust, FSB"
58,United Bank
58647,First Foundation Bank
57598,Mainstreet Community Bank of Florida
16889,United Community Bank
35052,Heartland National Bank
5673,Citizens Bank and Trust
57686,"American Commerce Bank, National Association"
32974,Gulf Coast Bank and Trust Company
29566,"United Fidelity Bank, fsb"
5903,BankPlus
18409,"TD Bank, National Association"
6672,"Fifth Third Bank, National Association"
91325,CIBC National Trust Company
9620,First Bank
16396,Lafayette State Bank
983,Comerica Bank
6560,The Huntington National Bank
6548,U.S. Bank National Association
34728,Independent Bank
5685,Southeastern Bank
30387,FirstBank Puerto Rico
33565,"Desjardins Bank, National Association"
8120,"Magnolia Bank, Incorporated"
35430,OptimumBank
34967,Popular Bank
57957,"Citizens Bank, National Association"
25258,"Intercredit Bank, National Association"
31823,"Interamerican Bank, A FSB"
32718,Helm Bank USA
20026,Eastern National Bank
26876,Safra Nationa
Query:
SELECT "zip_code", COUNT(*) AS "branch_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "branch_count" DESC
   LIMIT 1000;
Answer:
Too long, hard cut:
zip_code,branch_count
33134,48
33131,43
34236,33
32789,32
33408,25
33180,24
32746,24
33301,24
33156,24
33431,23
33609,22
32174,22
33401,22
33012,22
34103,22
33607,21
32801,21
33907,20
33701,19
33480,19
33139,19
33618,19
33458,19
33324,19
33027,19
33414,18
33432,18
32308,18
33178,18
32541,18
32819,17
33511,17
33308,17
33908,17
34285,17
34711,17
33326,17
34787,17
34232,17
34108,17
33483,16
33602,16
32960,16
33014,16
33410,16
33176,16
33186,15
32405,15
33172,15
33919,15
32301,15
33463,15
32256,15
33761,15
33024,15
32407,15
32837,14
32792,14
33155,14
32806,14
33165,14
32502,14
34109,14
33629,14
33021,14
32034,14
33143,13
33065,13
32608,13
32459,13
33160,13
32082,13
32114,13
32757,13
33063,13
32225,13
32940,13
33801,13
34231,13
34102,13
32578,13
33770,12
33040,12
34145,12
34293,12
33062,12
34994,12
34135,12
33144,12
34655,12
34470,12
33411,12
33009,12
33140,12
34471,12
32548,12
32832,12
34209,12
33756,12
34748,12
34952,12
33426,12
33467,11
33928,11
33135,11
32250,11
33912,11
34233,11
32207,11
33409,11
32703,11
34203,11
33870,11
33166,11
34134,11
33904,11
32765,11
34202,11
33442,11
32162,11
32504,11
33037,11
33707,11
34110,11
34243,11
32763,11
33434,11
32751,10
33813,10
32259,10
33781,10
33064,10
33316,10
34741,10
33647,10
33626,10
33950,10
32218,10
33617,10
33880,10
32073,10
33351,10
32714,10
33578,10
33418,10
32904,10
32963,10
34113,10
33433,10
32303,9
32202,9
33130,9
32958,9
34104,9
32127,9
32803,9
32159,9
33304,9
33309,9
33772,9
34761,9
34684,9
33050,9
32163,9
32137,9
32086,9
32771,9
34606,9
33563,9
34429,9
33612,9
34689,9
33710,9
34609,8
33331,8
34287,8
33196,8
34474,8
33441,8
32750,8
33446,8
32779,8
33990,8
32828,8
34997,8
33573,8
33181,8
32224,8
33437,8
33016,8
34744,8
33905,8
34986,8
34221,8
33759,8
33328,8
32210,8
34238,8
34239,8
33777,8
33765,8
34685,8
34769,8
34207,8
32550,8
32055,8
33606,8
33162,8
32708,8
32246,8
34698,8
33020,8
32935,8
32720,8
34119,7
33146,7
33914,7
33157,7
33771,7
34677,7
33175,7
33702,7
32080,7
32003,7
32822,7
32084,7
33071,7
32780,7
33073,7
33706,7
33149,7
33764,7
33179,7
33154,7
34746,7
33161,7
34990,7
33133,7
34601,7
32534,7
32606,7
33572,7
32223,7
33417,7
32309,7
32304,7
32561,7
33445,7
32607,7
33544,7
34668,7
34210,7
33614,7
33145,7
34786,7
32937,7
32503,7
33704,6
32905,6
32547,6
32601,6
34420,6
34208,6
34481,6
33477,6
34223,6
33436,6
34667,6
32428,6
33033,6
33126,6
33334,6
33026,6
33141,6
32164,6
33462,6
33774,6
32955,6
33311,6
33025,6
33018,6
34957,6
33611,6
34205,6
33435,6
34652,6
33703,6
34450,6
33321,6
32835,6
32804,6
32778,6
33525,6
33174,6
34747,6
33010,6
32257,6
33460,6
33853,6
32401,6
33809,6
33030,6
33076,6
33319,6
33543,6
32129,6
33541,6
33406,6
33122,6
33881,6
32444,5
33125,5
33183,5
33138,5
34950,5
32097,5
32064,5
32205,5
32952,5
32258,5
33069,5
33957,5
32829,5
32168,5
32507,5
32931,5
34613,5
33484,5
33312,5
33948,5
32217,5
33803,5
32566,5
32117,5
33844,5
32809,5
34465,5
32966,5
33177,5
33634,5
33137,5
33127,5
33498,5
32605,5
34446,5
34982,5
34974,5
32433,5
33322,5
33913,5
34482,5
34432,5
33067,5
33713,5
32808,5
33461,5
32446,5
33762,5
32571,5
33712,5
34116,5
33486,5
33884,5
32536,5
33023,5
32177,5
32413,4
33991,4
33004,4
32312,4
32327,4
33132,4
33903,4
33954,4
33469,4
33980,4
34105,4
34275,4
34453,4
34211,4
32424,4
32903,4
32811,4
32827,4
32810,4
33029,4
32724,4
33317,4
32701,4
33430,4
32817,4
34996,4
32693,4
32953,4
32812,4
33830,4
32266,4
33015,4
33173,4
33615,4
33313,4
33596,4
33496,4
33472,4
33306,4
33625,4
33323,4
34222,4
34953,4
33184,4
33142,4
32826,4
32439,4
32408,4
32818,4
34759,4
33709,4
32825,4
33569,4
33549,4
32570,4
33405,4
33185,4
33755,4
33936,4
32726,4
34142,4
32609,3
33605,3
32669,3
33150,3
32025,3
32091,3
33767,3
32222,3
33487,3
32063,3
32901,3
33613,3
33428,3
32208,3
32328,3
33763,3
33901,3
32092,3
34224,3
34237,3
32311,3
33981,3
34987,3
34788,3
33440,3
32569,3
33956,3
32707,3
33305,3
34476,3
34292,3
32244,3
33314,3
32506,3
34442,3
32277,3
33837,3
33852,3
32505,3
33584,3
32221,3
33147,3
33825,3
32539,3
33036,3
33610,3
32216,3
32118,3
34228,3
33330,3
33952,3
34219,3
34266,3
33415,3
34653,3
34683,3
33594,3
34639,3
32712,3
32066,3
32628,3
32656,3
33542,3
32176,3
32563,3
32128,3
32340,3
32922,3
32425,3
33513,3
33404,3
33407,3
32696,3
33413,2
33403,2
33547,2
32081,2
33935,2
34771,2
33896,2
32351,2
33953,2
33449,2
33394,2
32643,2
33760,2
33873,2
33060,2
33019,2
32141,2
32615,2
33455,2
34956,2
33013,2
32233,2
33169,2
33983,2
34785,2
33070,2
34436,2
33136,2
32579,2
32119,2
33043,2
32926,2
33034,2
33558,2
34947,2
34972,2
34212,2
33556,2
34201,2
32909,2
33570,2
33559,2
32068,2
33782,2
33619,2
32302,2
32435,2
33778,2
34736,2
34654,2
32320,2
34743,2
33716,2
33897,2
33823,2
34714,2
34240,2
33189,2
32626,2
33715,2
32448,2
32404,2
32440,2
32169,2
32132,2
34691,2
34491,2
32008,2
33548,2
32514,2
32773,2
33711,2
32456,2
32602,2
32344,2
32621,2
32738,2
32907,2
32347,2
34133,2
32461,2
32968,2
33966,2
33971,2
34112,2
32204,2
32011,2
32619,2
33776,1
33193,1
33921,1
34120,1
32211,1
33032,1
32603,1
32618,1
33168,1
32052,1
33041,1
32038,1
33129,1
32112,1
32131,1
33637
Query:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "institution_count" DESC
   LIMIT 1000;
Answer:
Too long, hard cut:
zip_code,institution_count
33134,39
33131,28
32789,27
34236,27
33301,22
32746,20
34103,20
33609,20
33607,20
33180,20
33408,19
33012,19
33431,19
32801,17
33618,16
32541,16
33432,16
33401,16
33156,16
33701,16
33602,15
33176,15
34108,15
33480,15
33907,15
32174,15
32308,14
33483,14
34285,13
32405,13
32407,13
32960,13
33065,13
33143,13
32502,13
33458,13
33178,13
33761,13
33308,12
33324,12
33172,12
34787,12
33165,12
33908,12
33410,12
33414,12
32940,12
32806,12
34109,12
33629,12
33511,12
33014,12
34232,12
33140,12
32819,12
33155,11
34994,11
33024,11
34711,11
33027,11
33919,11
34145,11
32548,11
32034,11
32256,11
32578,11
33801,11
33062,11
34102,11
33326,11
33160,11
33770,11
33813,10
33426,10
33139,10
34243,10
34209,10
32608,10
34655,10
34470,10
32751,10
34231,10
34471,10
33009,10
32082,10
33063,10
34203,10
33021,10
32763,10
33756,10
34134,10
32114,9
32963,9
33880,9
34952,9
34748,9
32207,9
32218,9
33710,9
34684,9
33707,9
32703,9
34293,9
33904,9
33781,9
33166,9
33912,9
33442,9
33144,9
32504,9
32757,9
34110,9
34202,9
32225,9
33563,9
32301,9
34689,9
32073,9
32765,9
33772,9
33467,9
32837,9
32459,9
32792,9
33950,9
32832,9
34741,9
33411,8
32771,8
33573,8
33351,8
34221,8
32224,8
34135,8
33304,8
33626,8
33064,8
33612,8
34429,8
32127,8
34986,8
33578,8
34233,8
32750,8
34238,8
32935,8
32550,8
33135,8
32250,8
33409,8
33433,8
34474,8
34287,8
33928,8
34104,8
33316,8
34769,8
32714,8
33777,8
32779,8
33617,8
33463,8
33130,8
33441,8
33309,7
32210,7
33133,7
33020,7
32084,7
32720,7
32159,7
33157,7
33759,7
32246,7
34997,7
33328,7
32086,7
32080,7
34210,7
32958,7
33162,7
33154,7
33437,7
34744,7
34609,7
32534,7
33040,7
32561,7
34990,7
33418,7
33149,7
34668,7
33702,7
32223,7
32503,7
33765,7
32202,7
33990,7
33186,7
32607,7
32803,7
32309,7
33606,7
34239,7
33870,7
33647,7
32904,7
32003,7
33331,7
33016,6
34481,6
33905,6
34677,6
34420,6
33445,6
32137,6
33434,6
32055,6
32828,6
34761,6
32804,6
34746,6
34113,6
33179,6
33071,6
32780,6
33611,6
32708,6
33771,6
33704,6
32606,6
33126,6
34601,6
33614,6
33321,6
33703,6
32259,6
33181,6
33446,6
33435,6
32428,6
34786,6
32822,6
34205,6
32937,6
34119,6
32257,6
34652,6
33018,6
33175,6
33073,6
33196,6
33436,6
32547,6
34957,6
33033,6
32304,6
34207,6
33572,6
34208,6
34223,6
33037,6
34606,6
33122,6
32162,6
33525,6
33774,6
33543,6
33146,6
32601,6
33914,5
32205,5
33311,5
33174,5
32952,5
33634,5
34747,5
33030,5
34698,5
33406,5
33145,5
33712,5
33334,5
32129,5
32809,5
33498,5
32829,5
33884,5
33050,5
33881,5
33486,5
34465,5
32444,5
33477,5
33127,5
34482,5
34613,5
32303,5
32778,5
34432,5
34950,5
32955,5
33141,5
34667,5
33541,5
33417,5
33025,5
33026,5
33706,5
33319,5
33461,5
32164,5
32605,5
33948,5
32835,5
34685,5
32258,5
33853,5
33844,5
33809,5
32168,5
32163,5
33764,5
32571,5
32217,5
32905,5
32966,5
33076,5
33069,5
32536,5
33460,5
32566,5
32433,5
34450,5
34982,5
33544,5
32439,4
32408,4
33957,4
34116,4
33029,4
33132,4
33913,4
33903,4
34275,4
34142,4
33713,4
32266,4
33323,4
32097,4
34222,4
32953,4
32327,4
33183,4
33317,4
32726,4
32808,4
32810,4
32811,4
33936,4
32903,4
33803,4
33010,4
32177,4
33322,4
33625,4
33185,4
32817,4
33161,4
34453,4
33125,4
33184,4
33004,4
33472,4
33405,4
33469,4
33023,4
32401,4
33615,4
33484,4
33173,4
34446,4
32570,4
33138,4
33709,4
33755,4
33306,4
33177,4
32931,4
32312,4
33762,4
32413,4
33462,4
32064,4
34759,4
33980,4
34996,4
33830,4
32701,4
32424,4
32826,4
34953,4
33954,4
32117,4
32446,4
32507,4
32724,4
34105,4
32827,4
33430,4
34974,4
33596,4
34211,4
33067,4
32609,3
34237,3
33594,3
33901,3
32656,3
32128,3
32118,3
33852,3
33763,3
32221,3
34639,3
32818,3
33147,3
34683,3
33404,3
33767,3
33313,3
33312,3
34228,3
34987,3
32505,3
32311,3
32628,3
34219,3
33952,3
32063,3
32176,3
33569,3
33407,3
33314,3
33305,3
32244,3
33137,3
33036,3
32506,3
34442,3
33610,3
32569,3
33487,3
34292,3
32712,3
34788,3
33549,3
33605,3
33825,3
33981,3
34653,3
32922,3
33513,3
32707,3
33837,3
32825,3
33991,3
33613,3
32066,3
32693,3
32222,3
33956,3
32277,3
32425,3
32812,3
32216,3
33496,3
34476,3
33542,3
33584,3
32091,3
33428,3
32563,3
33142,3
33015,3
32539,3
32208,3
32092,3
32025,3
34224,3
33330,3
32340,3
32621,2
33823,2
32619,2
32696,2
32068,2
33070,2
32081,2
33150,2
32119,2
32907,2
33060,2
32440,2
32204,2
32132,2
34771,2
32347,2
32626,2
33169,2
33019,2
34736,2
32773,2
34743,2
33873,2
34714,2
33034,2
34785,2
34240,2
33449,2
33415,2
33558,2
33896,2
33413,2
33455,2
32514,2
34201,2
32909,2
34212,2
34947,2
32404,2
33548,2
33778,2
33935,2
33189,2
32302,2
32233,2
34133,2
32169,2
33556,2
33782,2
34266,2
34436,2
33983,2
33394,2
32643,2
32738,2
32344,2
32615,2
32351,2
34691,2
32579,2
32141,2
33715,2
33619,2
34654,2
34491,2
34972,2
33570,2
32669,2
32901,2
32461,2
32968,2
33403,2
32435,2
32011,2
33953,2
32008,2
32448,2
32456,2
33760,2
33971,2
33440,2
33136,2
33897,2
33043,2
33559,2
33966,2
33547,2
33013,2
33716,2
32320,2
32926,2
33711,2
33637,1
32322,1
32211,1
32602,1
32056,1
32038,1
33068,1
32043,1
32148,1
33476,1
34101,1
33055,1
32784,1
32666,1
32110,1
33834,1
34120,1
32460,1
32443,1
32776,1
33841,1
32667,1
32625,1
32820,1
32754,1
33471,1
32
Query:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "zip_code"
   ORDER BY "institution_count" DESC
   LIMIT 1;
Answer:
zip_code,institution_count
33134,39
Query:
SELECT "branch_city", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
   FROM FDA.FDIC_BANKS.LOCATIONS
   WHERE "state" = 'FL'
   GROUP BY "branch_city"
   ORDER BY "institution_count" DESC
   LIMIT 1000;
Answer:
Too long, hard cut:
branch_city,institution_count
Miami,47
Tampa,44
Coral Gables,39
Sarasota,35
Naples,34
Fort Lauderdale,33
Boca Raton,31
Winter Park,29
Fort Myers,28
Orlando,28
Saint Petersburg,28
Jacksonville,27
Clearwater,24
Aventura,22
Hialeah,22
West Palm Beach,20
Bradenton,19
Lake Mary,19
Doral,19
Pensacola,19
Delray Beach,19
Tallahassee,18
Venice,17
Panama City,17
Bonita Springs,17
Coral Springs,16
Gainesville,16
Fort Walton Beach,16
Ocala,16
Destin,16
Palm Beach Gardens,16
Longwood,15
Stuart,15
Ormond Beach,15
Vero Beach,15
Jupiter,15
Palm Beach,15
Lakeland,15
Boynton Beach,15
Hollywood,15
Miami Beach,14
North Palm Beach,14
Plantation,14
Largo,14
Weston,14
Pembroke Pines,14
Port Orange,13
Winter Haven,13
Kissimmee,13
Saint Augustine,13
Winter Garden,12
Deerfield Beach,12
Brandon,12
Pompano Beach,12
Port Charlotte,12
Melbourne,12
Panama City Beach,11
Apopka,11
Niceville,11
Marco Island,11
Fernandina Beach,11
Altamonte Springs,11
Wellington,11
Clermont,11
Daytona Beach,11
Palm Harbor,11
Miami Lakes,11
Lake Worth,10
Ponte Vedra Beach,10
Maitland,10
Orange Park,10
Orange City,10
Port Saint Lucie,10
Cape Coral,10
Fort Pierce,10
Pinellas Park,10
Englewood,9
Belleair Bluffs,9
Coconut Creek,9
Wesley Chapel,9
Punta Gorda,9
Miramar,9
Sanford,9
Spring Hill,9
Palm Coast,9
Tarpon Springs,9
Riverview,9
Oviedo,9
Santa Rosa Beach,9
Plant City,9
Mount Dora,9
Seminole,9
New Port Richey,9
Leesburg,9
Davie,8
Oakland Park,8
North Port,8
North Miami Beach,8
Crystal River,8
Crestview,8
Brooksville,8
Deland,8
Sun City Center,8
Sunrise,8
Zephyrhills,8
Merritt Island,8
Saint Cloud,8
Inverness,8
Homestead,8
Tamarac,8
Gulf Breeze,8
Estero,8
Palmetto,8
Trinity,7
Valrico,7
Palm City,7
Sebastian,7
Sebring,7
New Smyrna Beach,7
Hallandale,7
Greenacres,7
North Miami,7
Key West,7
Port Richey,7
Dade City,7
Pinecrest,7
Key Biscayne,7
Ocoee,6
The Villages,6
Marianna,6
Belleview,6
Okeechobee,6
Defuniak Springs,6
Windermere,6
Lady Lake,6
Chipley,6
Lake City,6
Sunny Isles Beach,6
Titusville,6
Lutz,6
Oldsmar,6
Key Largo,6
Palm Bay,6
Margate,6
Jensen Beach,6
Royal Palm Beach,6
Apollo Beach,6
Winter Springs,6
Lighthouse Point,6
Indian Harbour Beach,5
Lake Wales,5
Pace,5
Haines City,5
Lehigh Acres,5
Beverly Hills,5
Lynn Haven,5
Cocoa,5
Dunedin,5
Tavares,5
Jacksonville Beach,5
West Melbourne,5
Temple Terrace,5
Navarre,5
Marathon,5
Rockledge,5
Dunnellon,5
Davenport,4
Ellenton,4
Indialantic,4
Crawfordville,4
Sanibel,4
Nokomis,4
Saint Johns,4
North Fort Myers,4
Bartow,4
Hudson,4
Lantana,4
Surfside,4
Cocoa Beach,4
Edgewater,4
Eustis,4
Miami Shores,4
Freeport,4
Hallandale Beach,4
Land O Lakes,4
Belle Glade,4
Neptune Beach,4
St. Petersburg,4
Palatka,4
Blountstown,4
Yulee,4
Cooper City,4
South Miami,4
Milton,4
Live Oak,4
Fleming Island,4
Miramar Beach,4
South Pasadena,4
Tequesta,3
Juno Beach,3
Bushnell,3
Macclenny,3
Mayo,3
Parrish,3
Deltona,3
Immokalee,3
Bonifay,3
Palm Springs,3
Avon Park,3
Riviera Beach,3
Wilton Manors,3
Hernando,3
Casselberry,3
Seffner,3
Longboat Key,3
Trenton,3
Lake Placid,3
Madison,3
Homosassa,3
Starke,3
Cross City,3
Mary Esther,3
Port Saint Joe,3
Celebration,3
Cutler Bay,3
Miami Gardens,3
Keystone Heights,3
West Miami,3
Coconut Grove,3
Dania,3
Lauderdale Lakes,3
Lakewood Ranch,3
Holiday,3
Big Pine Key,3
Miami Springs,3
Quincy,2
Holly Hill,2
Bay Harbor Islands,2
Odessa,2
Saint James City,2
Bronson,2
Lauderhill,2
Newberry,2
Perry,2
Lithia,2
Bell,2
Apalachicola,2
High Springs,2
Shalimar,2
Branford,2
Clewiston,2
Monticello,2
Florida City,2
Callahan,2
Hobe Sound,2
Palmetto Bay,2
Hialeah Gardens,2
Arcadia,2
Port St. Lucie,2
Saint Pete Beach,2
Auburndale,2
Graceville,2
Chiefland,2
Islamorada,2
Alachua,2
Daytona Beach Shores,2
Williston,2
Wauchula,2
Floral City,2
Middleburg,2
Lake Park,2
Atlantic Beach,2
Treasure Island,2
Summerfield,2
Ponte Vedra,2
Wildwood,2
Satellite Beach,2
Viera,2
Groveland,2
Haverhill,1
Stock Island,1
Manalapan,1
Perrine,1
Summerland Key,1
Eastpoint,1
Gulfport,1
Sorrento,1
St Pete Beach,1
Silver Springs,1
University Park,1
Astor,1
Okahumpka,1
Fruitland Park,1
Carrabelle,1
Boca Grande,1
Mulberry,1
Sneads,1
Bowling Green,1
Barefoot Bay,1
Madeira Beach,1
Mims,1
Pierson,1
South Daytona,1
Jay,1
Green Cove Springs,1
Polk City,1
East Palatka,1
Pensacola Beach,1
Dowling Park,1
Champions Gate,1
Citrus Springs,1
Ave Maria,1
Micanopy,1
Interlachen,1
Heathrow,1
Placida,1
Hilliard,1
Princeton,1
Clearwater Beach,1
Ruskin,1
Pahokee,1
Frostproof,1
Flagler Beach,1
Bunnell,1
Umatilla,1
Osprey,1
Labelle,1
Medley,1
Bristol,1
Monroe County,1
North Lauderdale,1
Hastings,1
Bal Harbour,1
St. Cloud,1
Indiantown,1
Fort Meade,1
Poinciana,1
Holmes Beach,1
Greenwood,1
Homosassa Springs,1
Safety Harbor,1
Parker,1
La Belle,1
Altoona,1
Fort White,1
Saint Lucie West,1
Tavernier,1
Loxahatchee,1
Inglis,1
Archer,1
St Petersburg Beach,1
Weeki Wachee,1
Cedar Key,1
St. Petersberg,1
Hurlburt Field,1
Palm Shores,1
Kendall,1
Havana,1
De Funiak Springs,1
Dundee,1
Lake Butler,1
Bayonet Point,1
St. James City,1
Saint Petersburg Beach,1
Tierra Verde,1
Wewahitchka,1
Amelia Island
Query:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM FDA.FDIC_BANKS.LOCATIONS
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
Answer:
zip_code,institution_count
33134,39
Query:
SELECT DISTINCT "fdic_certificate_number", "active"
    FROM FDA.FDIC_BANKS.INSTITUTIONS
    WHERE "state" = 'FL'
    LIMIT 1000;
Answer:
Too long, hard cut:
fdic_certificate_number,active
5674,False
20806,False
17021,False
3563,False
30885,False
31669,False
21408,False
17682,False
18768,False
14856,False
19361,False
19466,False
18912,False
14393,False
21546,False
17345,False
21035,False
17930,False
19972,False
18860,False
18967,False
18769,False
20965,False
18585,False
128,False
20804,False
16514,False
20847,False
17558,False
20665,False
28967,False
18886,False
18119,False
21637,False
20368,False
19113,False
20802,False
19311,False
30528,False
21340,False
20401,False
18868,False
21992,False
17862,False
20591,False
19945,False
22259,False
19955,False
16948,False
17294,False
21629,False
18520,False
21114,False
17817,False
20531,False
18540,False
21356,False
3591,False
3572,False
21450,False
21380,False
21941,False
15569,False
21519,False
17876,False
19074,False
17717,False
21441,False
18627,False
21003,False
20251,False
20867,False
18811,False
18583,False
20925,False
21036,False
21274,False
31481,False
17706,False
21475,False
22132,False
29361,False
17301,False
18134,False
18330,False
29419,False
17757,False
15464,False
21782,False
17761,False
18328,False
20475,False
20375,False
20007,False
20805,False
20850,False
18921,False
19007,False
19224,False
17940,False
21075,False
21403,False
20689,False
31041,False
20563,False
19840,False
18452,False
17591,False
20167,False
17698,False
26852,False
20483,False
20820,False
21565,False
20881,False
20833,False
17012,False
140,False
30674,False
22431,False
31228,False
21491,False
18042,False
20090,False
31662,False
20548,False
17584,False
22075,False
1348,False
3558,False
17042,False
16208,False
18993,False
20486,False
20430,False
21268,False
22030,False
18293,False
21623,False
20590,False
22009,False
8013,False
20346,False
21197,False
21156,False
20335,False
141,False
3581,False
19384,False
15818,False
33816,False
20998,False
19348,False
21124,False
19096,False
19997,False
30932,False
20599,False
31014,False
19830,False
17151,False
20262,False
30472,False
21892,False
19509,False
21893,False
17670,False
19334,False
31742,False
18648,False
19029,False
31340,False
21698,False
18471,False
21303,False
31424,False
21616,False
3594,False
3571,False
129,False
20508,False
21494,False
16508,False
19847,False
33245,False
21177,False
22293,False
9619,False
31946,False
30559,False
18433,False
31706,False
21323,False
20566,False
17696,False
3557,False
18875,False
21195,False
31200,False
20543,False
17039,False
21251,False
22294,False
5680,False
20180,False
29720,False
30873,False
126,False
15617,False
21686,False
3584,False
15577,False
15719,False
21087,False
21867,False
18353,False
21133,False
20154,False
28995,False
19790,False
21620,False
19270,False
18684,False
17669,False
19268,False
20924,False
18179,False
31720,False
22197,False
20640,False
18175,False
18951,False
20636,False
58967,False
3570,False
18340,False
19425,False
17516,False
21080,False
19846,False
19678,False
21612,False
21527,False
19424,False
18376,False
30955,False
20336,False
5658,False
5667,False
18044,False
31522,False
18645,False
21354,False
21445,False
31167,False
26889,False
18578,False
30840,False
19148,False
23094,False
21969,False
20682,False
17264,False
19542,False
16497,False
18792,False
16343,False
21588,False
20406,False
20622,False
30603,False
21617,False
19033,False
21246,False
29360,False
3562,False
21042,False
21750,False
20247,False
19917,False
20219,False
20390,False
13903,False
29203,False
18141,False
18850,False
20635,False
18711,False
20182,False
21250,False
20235,False
1346,False
1345,False
17402,False
20506,False
1347,False
20463,False
29063,False
22750,False
21863,False
21895,False
20271,False
15473,False
22666,False
21925,False
17579,False
16670,False
18572,False
17595,False
19372,False
20929,False
18107,False
17286,False
22605,False
3576,False
31037,False
19523,False
8012,False
20975,False
17597,False
20144,False
15391,False
58832,False
3592,False
18744,False
31519,False
21917,False
20837,False
19798,False
20602,False
20634,False
18130,False
21115,False
21454,False
19077,False
18320,False
17893,False
3587,False
20607,False
19149,False
20796,False
21453,False
18665,False
19283,False
19677,False
17515,False
20854,False
20920,False
30813,False
20772,False
19170,False
18323,False
15436,False
3595,False
20392,False
21806,False
18824,False
20437,False
22243,False
17559,False
3582,False
3586,False
31677,False
31245,False
18140,False
20402,False
18406,False
17776,False
20035,False
22213,False
9630,False
18742,False
18599,False
21585,False
20505,False
20370,False
20936,False
21296,False
21512,False
3588,False
19385,False
22066,False
125,False
18939,False
18972,False
3561,False
30797,False
20205,False
3559,False
17986,False
21886,False
18666,False
5675,False
21252,False
21424,False
19208,False
18743,False
33330,False
32529,False
33019,False
33300,False
32695,False
30834,False
30677,False
33172,False
31548,False
31579,False
33460,False
28858,False
32812,False
32985,False
33344,False
33786,False
33479,False
32540,False
32984,False
33255,False
33345,Fals
Query:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM FDA.FDIC_BANKS.LOCATIONS
WHERE "state" = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
Answer:
zip_code,institution_count
33134,39
End Exploring Related Columns
Task: Could you provide me with the zip code of the location that has the highest number of bank institutions in Florida?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: To find the zip code of the location that has the highest number of bank institutions in Florida, we consider the bank locations in Florida and count the number of unique institutions per zip code. The zip code with the highest count represents the location with the most bank institutions.

```csv
zip_code
zip_code:str in Florida
```.
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'FDA': {'CENSUS_UTILITY': ['FIPS_CLASS_CODE', 'FIPS_CODES_ALL', 'FIPS_CODES_STATES', 'FUNCTIONAL_STATUS_CODES', 'LSAD_CODES', 'MTFCC_FEATURE_CLASS_CODES'], 'FDA_FOOD': ['FOOD_ENFORCEMENT', 'FOOD_EVENTS'], 'FDIC_BANKS': ['INSTITUTIONS', 'LOCATIONS'], 'GEO_CENSUS_BLOCKGROUPS': ['BLOCKGROUPS_01', 'BLOCKGROUPS_02', 'BLOCKGROUPS_04', 'BLOCKGROUPS_05', 'BLOCKGROUPS_06', 'BLOCKGROUPS_08', 'BLOCKGROUPS_09', 'BLOCKGROUPS_10', 'BLOCKGROUPS_11', 'BLOCKGROUPS_12', 'BLOCKGROUPS_13', 'BLOCKGROUPS_15', 'BLOCKGROUPS_16', 'BLOCKGROUPS_17', 'BLOCKGROUPS_18', 'BLOCKGROUPS_19', 'BLOCKGROUPS_20', 'BLOCKGROUPS_21', 'BLOCKGROUPS_22', 'BLOCKGROUPS_23', 'BLOCKGROUPS_24', 'BLOCKGROUPS_25', 'BLOCKGROUPS_26', 'BLOCKGROUPS_27', 'BLOCKGROUPS_28', 'BLOCKGROUPS_29', 'BLOCKGROUPS_30', 'BLOCKGROUPS_31', 'BLOCKGROUPS_32', 'BLOCKGROUPS_33', 'BLOCKGROUPS_34', 'BLOCKGROUPS_35', 'BLOCKGROUPS_36', 'BLOCKGROUPS_37', 'BLOCKGROUPS_38', 'BLOCKGROUPS_39', 'BLOCKGROUPS_40', 'BLOCKGROUPS_41', 'BLOCKGROUPS_42', 'BLOCKGROUPS_44', 'BLOCKGROUPS_45', 'BLOCKGROUPS_46', 'BLOCKGROUPS_47', 'BLOCKGROUPS_48', 'BLOCKGROUPS_49', 'BLOCKGROUPS_50', 'BLOCKGROUPS_51', 'BLOCKGROUPS_53', 'BLOCKGROUPS_54', 'BLOCKGROUPS_55', 'BLOCKGROUPS_56', 'BLOCKGROUPS_60', 'BLOCKGROUPS_66', 'BLOCKGROUPS_69', 'BLOCKGROUPS_72', 'BLOCKGROUPS_78', 'US_BLOCKGROUPS_NATIONAL'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-16 19:14:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 19:14:28 - root - INFO - To find the zip code of the location that has the highest number of bank institutions in Florida, we can query the `LOCATIONS` table in the `FDA.FDIC_BANKS` schema. We'll filter for records where the `"state"` is `'FL'`, group the results by `"zip_code"`, count the distinct `"fdic_certificate_number"` to get the number of unique institutions per zip code, and then order the results to find the zip code with the highest count.

```sql
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM "FDA"."FDIC_BANKS"."LOCATIONS"
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;
```
2025-01-16 19:14:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:14:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:14:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:14:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:14:30 - snowflake.connector.connection - INFO - closed
2025-01-16 19:14:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:14:30 - root - INFO - itercount: 1
2025-01-16 19:14:30 - root - INFO - 0
2025-01-16 19:14:30 - root - INFO - results: 
zip_code,institution_count
33134,39


2025-01-16 19:14:30 - root - INFO - Please check the answer again by reviewing Could you provide me with the zip code of the location that has the highest number of bank institutions in Florida?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To find the zip code of the location that has the highest number of bank institutions in Florida, we consider the bank locations in Florida and count the number of unique institutions per zip code. The zip code with the highest count represents the location with the most bank institutions.

```csv
zip_code
zip_code:str in Florida
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
zip_code,institution_count
33134,39
Current sql:
SELECT "zip_code", COUNT(DISTINCT "fdic_certificate_number") AS "institution_count"
FROM "FDA"."FDIC_BANKS"."LOCATIONS"
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY "institution_count" DESC
LIMIT 1;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 19:15:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 19:15:09 - root - INFO - To find the zip code of the location that has the highest number of bank institutions in Florida, we consider the bank locations in Florida and count the number of unique institutions per zip code. The zip code with the highest count represents the location with the most bank institutions.

```csv
zip_code
33134
```

```sql
SELECT "zip_code"
FROM "FDA"."FDIC_BANKS"."LOCATIONS"
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY COUNT(DISTINCT "fdic_certificate_number") DESC NULLS LAST
LIMIT 1;
```
2025-01-16 19:15:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:15:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:15:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:15:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:15:10 - snowflake.connector.connection - INFO - closed
2025-01-16 19:15:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:15:10 - root - INFO - itercount: 2
2025-01-16 19:15:10 - root - INFO - 0
2025-01-16 19:15:10 - root - INFO - results: 
zip_code
33134


2025-01-16 19:15:10 - root - INFO - Please check the answer again by reviewing Could you provide me with the zip code of the location that has the highest number of bank institutions in Florida?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To find the zip code of the location that has the highest number of bank institutions in Florida, we consider the bank locations in Florida and count the number of unique institutions per zip code. The zip code with the highest count represents the location with the most bank institutions.

```csv
zip_code
zip_code:str in Florida
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
zip_code
33134
Current sql:
SELECT "zip_code"
FROM "FDA"."FDIC_BANKS"."LOCATIONS"
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY COUNT(DISTINCT "fdic_certificate_number") DESC NULLS LAST
LIMIT 1;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-16 19:16:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 19:16:06 - root - INFO - ```sql
SELECT "zip_code"
FROM "FDA"."FDIC_BANKS"."LOCATIONS"
WHERE TRIM(UPPER("state")) = 'FL'
GROUP BY "zip_code"
ORDER BY COUNT(DISTINCT "fdic_certificate_number") DESC NULLS LAST
LIMIT 1;
```
2025-01-16 19:16:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 19:16:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 19:16:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 19:16:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 19:16:08 - snowflake.connector.connection - INFO - closed
2025-01-16 19:16:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 19:16:08 - root - INFO - itercount: 3
2025-01-16 19:16:08 - root - INFO - 0
2025-01-16 19:16:08 - root - INFO - Total iteration counts: 3
