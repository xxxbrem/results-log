2025-01-17 19:11:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-17 19:12:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-17 19:12:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-17 19:12:34 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:35 - root - INFO - SQL:
-- 1. Retrieve distinct years available in ICOADS_CORE_2010
SELECT DISTINCT "year"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
LIMIT 1000
Results:
year
2010

2025-01-17 19:12:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-17 19:12:36 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:37 - root - INFO - SQL:
-- 2. Retrieve distinct months available in ICOADS_CORE_2010
SELECT DISTINCT "month"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
LIMIT 1000
Results:
month
7
1
5
10
4
9
12
8
3
6
2
11

2025-01-17 19:12:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-17 19:12:38 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:38 - root - INFO - SQL:
-- 3. Get the count of records with non-null air temperature in 2010
SELECT COUNT(*) AS "air_temp_count_2010"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
LIMIT 1000
Results:
air_temp_count_2010
8082438

2025-01-17 19:12:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-17 19:12:40 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:40 - root - INFO - SQL:
-- 4. Get the average air temperature for each month in 2010
SELECT "month", AVG("air_temperature") AS "avg_air_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Results:
month,avg_air_temp
1,10.970148368234197
2,11.345316819260942
3,13.548832904521454
4,15.554022438304054
5,17.586179550652645
6,20.022022336259624
7,21.114065633045083
8,21.27842932097648
9,19.795720277124282
10,17.403491959222364
11,14.129684495249606
12,10.60203618437478

2025-01-17 19:12:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-17 19:12:41 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:42 - root - INFO - SQL:
-- 5. Get the average wet bulb temperature for each month in 2010
SELECT "month", AVG("wetbulb_temperature") AS "avg_wetbulb_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "wetbulb_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Results:
month,avg_wetbulb_temp
1,14.26793376830852
2,15.144010887888774
3,15.935988779416034
4,16.57357709702193
5,17.00787382817426
6,18.76065193926747
7,19.565886574409987
8,20.024585179980537
9,19.22018755767874
10,18.483593083972714
11,16.74297136171161
12,14.688330050007576

2025-01-17 19:12:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-17 19:12:43 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:43 - root - INFO - SQL:
-- 6. Get the average dew point temperature for each month in 2010
SELECT "month", AVG("dewpoint_temperature") AS "avg_dewpoint_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "dewpoint_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Results:
month,avg_dewpoint_temp
1,7.589281814396708
2,8.090111432074988
3,10.016255056829129
4,11.821633269941401
5,14.019548173448689
6,16.83660095125272
7,17.729702327406038
8,17.875119300384704
9,16.29606258528154
10,13.842453364841333
11,10.603981015973238
12,7.187377659613002

2025-01-17 19:12:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-17 19:12:45 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:45 - root - INFO - SQL:
-- 7. Get the average sea surface temperature for each month in 2010
SELECT "month", AVG("sea_surface_temp") AS "avg_sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "sea_surface_temp" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Results:
month,avg_sea_surface_temp
1,17.972877726169905
2,17.805219729202637
3,18.12515947694437
4,18.7096856940294
5,19.641230877323213
6,20.885157266880235
7,21.55113808680265
8,21.810517928558284
9,21.164147598526792
10,20.159590381015807
11,18.950354711274045
12,18.090182856035156

2025-01-17 19:12:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-17 19:12:46 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:47 - root - INFO - SQL:
-- 8. Retrieve the number of records where all four temperatures are available for 2010
SELECT COUNT(*) AS "complete_temp_records_2010"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000
Results:
complete_temp_records_2010
679455

2025-01-17 19:12:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 60
2025-01-17 19:12:52 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:52 - root - INFO - SQL:
-- 9. Get the average temperatures for each month between 2010 and 2014
SELECT "year", "month",
       AVG("air_temperature") AS "avg_air_temp",
       AVG("wetbulb_temperature") AS "avg_wetbulb_temp",
       AVG("dewpoint_temperature") AS "avg_dewpoint_temp",
       AVG("sea_surface_temp") AS "avg_sea_surface_temp"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
  AND "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 1000
Results:
year,month,avg_air_temp,avg_wetbulb_temp,avg_dewpoint_temp,avg_sea_surface_temp
2010,1,16.526320419168545,14.20792825180709,12.588208972348648,18.332495123723564
2010,2,17.936275129349504,15.518778387772027,13.902063667601407,19.250345590268175
2010,3,18.6742512317017,16.229282600219754,14.648491830007446,19.428853719916347
2010,4,19.257313347506834,16.857470566165826,15.375436371107503,19.691317242241798
2010,5,19.486310422960727,17.123667948365835,15.713770255424333,19.855652636638293
2010,6,21.369602902280366,19.010558295803847,17.752555579383802,21.479140753449137
2010,7,22.15644999258906,19.801279623194617,18.587762059254626,22.310432963883994
2010,8,22.71643667851105,20.337399523924525,19.132731914306408,23.093514334011804
2010,9,21.90722093240014,19.33288820349438,17.936782524699623,22.507354810283182
2010,10,21.19642631035287,18.562158875079135,17.047982406450966,22.210346206390987
2010,11,19.514034040521185,16.857889351251785,15.213082406712603,21.035660686267825
2010,12,17.134957983193278,14.735581699346408,13.079964519140994,19.0636339869281
2011,1,17.129522682994715,14.786251043696074,13.17692909824659,18.536118842193154
2011,2,17.548551504987202,15.153423956218555,13.452428281401716,18.694320769706064
2011,3,18.19703229848482,15.749936524162035,14.11531663726444,18.925639292368057
2011,4,19.921887322977746,17.35446799026163,15.759476048417518,20.173553818194286
2011,5,19.82064448253042,17.396590928373858,15.909860684529367,20.000169689976417
2011,6,20.728269664468815,18.423929622807172,17.105861896809955,20.92025238005061
2011,7,21.329057389821052,19.109475307123294,17.918407715396352,21.5552067444111
2011,8,22.083874297705268,19.791811074257087,18.611810397346513,22.358950450145542
2011,9,21.815149577450185,19.35718680331127,18.018277655842244,22.329687364982806
2011,10,20.773427266975595,18.167054256938158,16.620704160325577,21.85185444845335
2011,11,19.479667445622862,17.00386841632213,15.470298400143806,20.87455689376236
2011,12,18.668224450485155,16.082104088282417,14.403839853102664,20.019946353669727
2012,1,17.88864039945848,15.372920512685269,13.635219860400516,19.325542838054048
2012,2,17.44562078019505,15.06759377344336,13.368238934733684,18.801147786946736
2012,3,18.19391694551363,15.830132879441404,14.23694319258815,18.959043345389837
2012,4,19.35341937398012,16.973223557335704,15.479316866933688,19.79763944518617
2012,5,19.839739367790788,17.43055560447301,15.99018754952892,19.98835431892225
2012,6,20.52164754392255,18.27737361061312,17.009580494801,20.661435998565793
2012,7,21.50561350309629,19.273678826516633,18.103331932849862,21.654067186672272
2012,8,21.700549750389072,19.401918062938336,18.16883198253734,21.995785920730846
2012,9,22.400702713253953,19.81313927386297,18.414649619363654,22.99044749170408
2012,10,21.626297952784952,18.93763601991885,17.397450202877167,22.617493544817414
2012,11,20.637920947321618,17.865425569258853,16.152240761976085,21.989937048044744
2012,12,19.680807796172356,17.132065281202298,15.496973112598335,21.121977222026533
2013,1,19.269058242749324,16.78507855888356,15.142307874875394,20.509225328713153
2013,2,19.576159297281283,17.097262414787274,15.513181365020342,20.646078193624877
2013,3,19.560173314642544,17.049807569771886,15.40818147062572,20.377127564674403
2013,4,19.668520805504446,17.197620787861986,15.618920281271267,20.13229578849207
2013,5,20.07191146485862,17.696948927702856,16.279244356007563,20.227019922863395
2013,6,20.944739478957914,18.702682865731468,17.46171342685371,20.882079158316635
2013,7,21.9353452845646,19.666228133583925,18.488547539877594,21.942448556696064
2013,8,22.791623774941833,20.35589085524924,19.109464382241654,23.007154104679305
2013,9,22.636779772773384,20.076217285453435,18.7172347332116,23.134205721241635
2013,10,21.771698162729656,19.105207349081365,17.5851968503937,22.586131233595804
2013,11,20.5318172145973,17.920127141185233,16.289296733695075,21.810245770826683
2013,12,19.778898844978503,17.216053762883934,15.562166571709746,21.18523851452841
2014,1,19.118263591173296,16.58890087057153,14.915914889140206,20.425196601877907
2014,2,19.4032229718238,16.83437836612053,15.1349651340779,20.46662225749759
2014,3,19.617374802319457,17.078774380600947,15.436070110701108,20.459422772799158
2014,4,20.186164901445842,17.678269025424953,16.157063288216786,20.63231364174194
2014,5,20.562875422568656,18.123993518285694,16.694937557623,20.730762998351626
2014,6,21.07947313510694,18.784040456732164,17.504489074363878,21.21203848606039
2014,7,22.222133653324192,19.892651638524615,18.657238364618152,22.261355389846006
2014,8,22.810974848123543,20.358300686992564,19.063393516152843,23.1587265088287
2014,9,22.584909308011593,20.018820719849888,18.60505487007449,23.181716608858814
2014,10,21.79264806183926,19.161668750710472,17.618395475730367,22.745836648857555
2014,11,20.9173493465634,18.29993344627299,16.651939133591483,22.214212245885765
2014,12,20.156413975782037,17.63129414732593,16.00806004036327,21.774813950554996

2025-01-17 19:12:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 60
2025-01-17 19:12:54 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:55 - root - INFO - SQL:
-- 10. Retrieve the counts of non-null temperature readings for each temperature type between 2010 and 2014
SELECT "year", "month",
       COUNT("air_temperature") AS "air_temp_count",
       COUNT("wetbulb_temperature") AS "wetbulb_temp_count",
       COUNT("dewpoint_temperature") AS "dewpoint_temp_count",
       COUNT("sea_surface_temp") AS "sea_surface_temp_count"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 1000
Results:
year,month,air_temp_count,wetbulb_temp_count,dewpoint_temp_count,sea_surface_temp_count
2010,1,632076,66977,254586,1429799
2010,2,584229,64659,243018,1340855
2010,3,623428,72367,259550,1461183
2010,4,639264,70314,258708,1462683
2010,5,722292,71363,288385,1508680
2010,6,710683,69485,282785,1494307
2010,7,709673,75803,295694,1505553
2010,8,717766,74008,285414,1467770
2010,9,678829,73684,274825,1411342
2010,10,721572,75072,291143,1491093
2010,11,681733,71792,280657,1462598
2010,12,660893,65990,276074,1454751
2011,1,648879,69980,277584,1415247
2011,2,612644,68861,264746,1305659
2011,3,686824,75424,300469,1454518
2011,4,674859,72521,293120,1392024
2011,5,746409,73354,319495,1471115
2011,6,779104,72008,344698,1382910
2011,7,797325,75517,361411,1348025
2011,8,808468,73740,367395,1400087
2011,9,772225,72011,350824,1397424
2011,10,811184,72999,367177,1440367
2011,11,741592,68285,337189,1393246
2011,12,718774,67838,332104,1364335
2012,1,693849,69192,319411,1283483
2012,2,656849,65624,297977,1168795
2012,3,710910,65084,312200,1185057
2012,4,751464,67346,325356,1163359
2012,5,805925,69787,344597,1146958
2012,6,802324,68813,341515,1150498
2012,7,755111,68572,326303,1152967
2012,8,777472,64150,325132,1150397
2012,9,748009,53388,312158,1183877
2012,10,798443,55824,327659,1226702
2012,11,727213,54074,305885,1179458
2012,12,695589,53432,293520,1156030
2013,1,673678,52786,286956,1101461
2013,2,621021,47698,267260,989731
2013,3,692138,50932,300783,1059690
2013,4,692132,51675,302712,1043314
2013,5,731432,52068,313277,1154399
2013,6,756379,50363,326371,1178803
2013,7,769403,51901,332073,1209707
2013,8,810719,53122,336472,1305414
2013,9,793244,48490,316343,1295609
2013,10,787450,46635,319928,1298588
2013,11,698149,46019,285197,1160475
2013,12,679317,46575,281081,1217694
2014,1,659025,48394,280412,1207444
2014,2,628697,44087,276909,1108820
2014,3,698158,47815,320931,1257517
2014,4,708481,44707,322318,1251299
2014,5,756714,45792,335680,1311637
2014,6,786340,44627,343261,1304547
2014,7,800829,45503,357218,1377536
2014,8,859601,45230,375886,1409800
2014,9,819833,44381,365801,1366909
2014,10,836599,44928,383771,1402984
2014,11,750981,42461,370415,1360167
2014,12,735092,41347,364489,1383456

2025-01-17 19:12:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-17 19:12:56 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:57 - root - INFO - SQL:
-- 11. List the minimum and maximum values of each temperature type in 2010
SELECT MIN("air_temperature") AS "min_air_temp",
       MAX("air_temperature") AS "max_air_temp",
       MIN("wetbulb_temperature") AS "min_wetbulb_temp",
       MAX("wetbulb_temperature") AS "max_wetbulb_temp",
       MIN("dewpoint_temperature") AS "min_dewpoint_temp",
       MAX("dewpoint_temperature") AS "max_dewpoint_temp",
       MIN("sea_surface_temp") AS "min_sea_surface_temp",
       MAX("sea_surface_temp") AS "max_sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000
Results:
min_air_temp,max_air_temp,min_wetbulb_temp,max_wetbulb_temp,min_dewpoint_temp,max_dewpoint_temp,min_sea_surface_temp,max_sea_surface_temp
-15.0,43.3,-15.6,38.3,-26.0,38.3,-2.7,37.2

2025-01-17 19:12:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:12:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:12:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:12:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-17 19:12:58 - snowflake.connector.connection - INFO - closed
2025-01-17 19:12:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:12:59 - root - INFO - SQL:
-- 12. Retrieve sample records to observe the data format and values
SELECT "year", "month", "day", "air_temperature", "wetbulb_temperature", "dewpoint_temperature", "sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000
Results:
Too long, hard cut:
year,month,day,air_temperature,wetbulb_temperature,dewpoint_temperature,sea_surface_temp
2010,4,17,26.2,16.0,8.8,18.3
2010,12,17,-8.6,-8.8,-10.5,1.3
2010,12,22,-9.1,-9.3,-11.1,1.6
2010,12,22,-8.5,-9.0,-11.7,1.5
2010,10,28,24.0,23.9,23.9,28.1
2010,3,28,15.0,14.0,13.0,13.3
2010,5,20,14.0,13.0,12.0,13.6
2010,10,31,27.6,25.9,25.3,28.1
2010,12,4,23.0,20.0,18.6,23.2
2010,11,6,27.7,25.5,24.7,27.6
2010,2,10,27.3,24.5,23.4,26.3
2010,3,5,20.1,17.8,16.5,20.4
2010,10,28,26.7,22.6,20.9,27.3
2010,11,2,27.6,26.0,25.5,27.5
2010,10,30,27.7,26.5,26.1,27.7
2010,11,19,27.3,23.2,21.5,26.7
2010,11,14,25.0,24.0,23.6,27.1
2010,3,4,22.4,18.0,15.5,20.9
2010,9,10,28.4,26.4,25.7,27.7
2010,11,8,27.8,26.6,26.2,28.2
2010,12,5,30.6,28.0,27.2,29.9
2010,11,8,26.2,25.2,24.8,28.0
2010,12,15,29.1,27.6,27.1,29.4
2010,2,22,20.0,18.2,17.3,24.2
2010,7,3,29.2,26.7,25.9,27.2
2010,7,2,28.2,26.0,25.2,28.1
2010,6,28,27.8,24.2,22.8,28.6
2010,6,28,27.3,23.8,22.4,28.1
2010,11,24,29.0,26.0,25.0,32.0
2010,2,23,15.0,12.0,9.7,16.0
2010,12,7,22.0,18.0,15.8,27.0
2010,12,10,26.0,23.0,21.8,30.0
2010,12,18,25.0,20.0,17.5,30.0
2010,12,8,25.0,20.0,17.5,29.0
2010,3,21,30.0,27.0,26.0,32.0
2010,9,24,26.0,24.0,23.1,29.0
2010,11,3,29.0,26.0,24.8,31.0
2010,1,9,27.0,24.0,22.6,28.0
2010,9,21,28.0,24.0,22.1,30.0
2010,9,23,30.0,26.0,24.3,30.0
2010,12,12,27.0,24.0,22.6,30.0
2010,1,11,24.0,22.0,21.0,25.0
2010,2,3,28.0,25.0,23.7,26.0
2010,8,14,16.5,13.5,10.9,22.0
2010,8,6,28.0,25.0,23.7,27.0
2010,12,17,29.0,25.0,23.2,30.0
2010,12,12,28.0,25.0,23.7,26.0
2010,7,9,18.0,13.5,9.5,20.0
2010,1,30,29.0,26.0,24.8,30.0
2010,8,22,19.5,15.0,11.4,20.0
2010,12,3,22.0,18.0,15.3,26.0
2010,9,30,27.2,24.8,23.7,28.0
2010,3,19,23.0,19.0,16.5,25.0
2010,9,9,27.2,25.4,24.6,29.0
2010,4,1,29.0,26.0,24.8,29.0
2010,2,23,29.0,26.0,24.8,29.0
2010,7,19,14.0,10.0,5.6,12.0
2010,4,20,29.0,24.5,22.4,30.0
2010,8,24,14.5,10.0,4.9,19.0
2010,8,22,17.0,14.5,12.5,20.0
2010,2,3,22.0,19.0,17.2,24.0
2010,3,1,28.0,25.0,23.7,29.0
2010,6,1,14.0,11.0,8.0,17.0
2010,8,25,28.0,27.0,27.0,28.0
2010,9,10,23.0,21.0,20.0,23.0
2010,7,28,24.0,22.0,21.0,29.0
2010,8,25,25.0,23.0,22.0,28.0
2010,8,5,25.0,22.0,21.0,28.0
2010,8,18,25.0,23.0,22.0,27.0
2010,8,28,19.5,19.0,18.7,17.0
2010,6,20,8.0,5.5,1.9,10.0
2010,8,29,20.0,18.5,17.6,22.0
2010,9,3,29.0,26.0,24.8,29.0
2010,3,14,29.0,22.0,19.0,28.0
2010,5,25,6.0,5.0,4.0,6.0
2010,5,26,8.0,7.5,7.0,8.0
2010,3,3,20.0,16.0,13.0,20.0
2010,5,25,9.0,8.0,7.0,6.0
2010,4,21,11.5,11.0,11.0,12.5
2010,12,21,7.5,7.0,6.4,6.0
2010,4,29,20.0,19.5,19.0,21.0
2010,8,23,15.5,12.5,10.0,14.0
2010,3,20,23.0,21.0,20.0,25.0
2010,4,8,29.0,27.0,26.0,29.5
2010,4,3,32.0,28.0,27.0,29.5
2010,3,18,25.0,22.0,21.0,25.0
2010,6,15,15.0,14.0,13.3,14.0
2010,7,27,29.2,26.8,26.0,33.0
2010,9,17,27.0,25.5,25.0,32.0
2010,3,19,29.0,26.0,24.9,30.0
2010,3,7,25.0,19.5,16.6,27.0
2010,12,1,24.0,20.0,18.0,25.0
2010,1,1,22.0,20.5,19.8,21.0
2010,2,9,26.5,24.0,23.0,28.0
2010,9,9,16.0,14.0,12.7,18.0
2010,6,26,26.0,22.0,20.2,25.0
2010,1,18,26.0,25.1,24.7,27.0
2010,3,18,8.0,4.0,-1.5,8.0
2010,6,24,28.5,24.0,22.2,28.5
2010,6,23,24.0,21.0,19.6,26.0
2010,7,15,14.0,9.0,4.0,14.5
2010,7,30,27.6,24.6,23.5,27.9
2010,5,20,20.5,16.0,13.2,21.4
2010,10,27,25.0,21.0,19.1,24.5
2010,8,18,20.5,16.5,14.1,21.5
2010,11,28,25.2,23.7,23.1,30.0
2010,7,28,27.4,24.9,24.0,24.0
2010,12,9,18.5,16.6,15.5,18.0
2010,4,19,7.0,6.0,4.9,1.0
2010,10,30,18.0,15.2,13.4,20.0
2010,6,26,24.0,21.0,19.6,24.0
2010,9,7,21.5,19.0,17.7,20.0
2010,7,23,25.0,22.0,20.7,25.0
2010,10,29,19.6,15.3,12.5,20.0
2010,7,24,26.0,23.5,22.5,27.0
2010,7,22,25.0,22.0,20.7,25.0
2010,12,16,18.0,16.0,14.8,20.0
2010,11,27,13.0,9.0,5.1,12.0
2010,10,10,16.0,14.0,12.7,14.0
2010,7,8,30.5,28.0,27.2,29.0
2010,4,8,20.0,16.0,13.5,20.0
2010,2,23,28.5,25.5,24.4,31.0
2010,5,5,17.6,14.5,12.6,17.0
2010,1,3,25.4,21.6,20.0,23.5
2010,11,21,19.0,14.6,11.7,20.5
2010,11,20,21.1,19.0,18.0,22.6
2010,11,5,28.0,24.1,22.7,28.9
2010,12,12,16.8,14.5,12.9,18.5
2010,4,18,28.6,24.3,22.7,26.3
2010,12,9,19.8,17.6,16.4,18.5
2010,1,6,23.5,19.1,16.9,23.5
2010,10,17,26.5,22.4,20.7,27.7
2010,8,17,14.7,13.3,12.4,15.5
2010,2,9,21.0,16.1,12.9,21.0
2010,2,9,21.0,15.5,11.9,21.2
2010,10,1,22.6,19.8,18.4,23.0
2010,10,8,23.3,16.2,11.6,24.6
2010,11,11,27.9,24.8,23.7,28.7
2010,11,24,19.5,16.5,14.7,20.3
2010,4,8,26.9,23.2,21.8,26.4
2010,10,16,24.4,20.4,18.5,26.6
2010,4,5,26.8,23.0,21.4,26.1
2010,4,12,27.3,23.4,21.8,26.5
2010,2,18,27.6,23.8,22.3,27.0
2010,9,21,20.9,15.0,11.1,22.9
2010,9,30,22.3,19.2,17.6,23.6
2010,9,10,22.8,20.2,19.0,23.3
2010,9,8,21.8,21.3,21.1,22.9
2010,6,28,6.8,5.9,4.9,8.8
2010,9,13,22.5,18.5,16.3,22.7
2010,7,8,4.0,3.0,1.7,7.9
2010,2,19,27.5,24.2,22.9,26.2
2010,1,21,22.7,18.9,17.0,23.2
2010,10,2,21.6,18.6,17.0,22.9
2010,11,8,27.6,24.4,23.1,28.6
2010,8,15,14.8,11.9,9.6,16.4
2010,9,22,20.6,15.6,12.4,22.8
2010,5,20,15.8,13.5,11.9,16.0
2010,4,12,17.1,15.5,14.5,16.0
2010,8,6,6.7,6.7,6.7,7.6
2010,10,8,14.3,13.5,13.0,15.2
2010,7,5,4.5,3.3,1.9,6.5
2010,10,8,13.1,12.9,12.8,13.2
2010,11,12,27.1,24.9,24.2,27.7
2010,1,18,5.0,5.0,4.9,4.0
2010,1,18,5.2,5.0,4.7,

2025-01-17 19:12:59 - root - INFO - itercount: 0
2025-01-17 19:12:59 - root - INFO - Database Name: NOAA_DATA
Schema Name: NOAA_GSOD
DDL describes table information.
,0
table_name,GSOD1933
description,
DDL,"create or replace TABLE GSOD1933 (
	""stn"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""mo"" VARCHAR(16777216),
	""da"" VARCHAR(16777216),
	""temp"" FLOAT,
	""count_temp"" NUMBER(38,0),
	""dewp"" FLOAT,
	""count_dewp"" NUMBER(38,0),
	""slp"" FLOAT,
	""count_slp"" NUMBER(38,0),
	""stp"" FLOAT,
	""count_stp"" NUMBER(38,0),
	""visib"" FLOAT,
	""count_visib"" NUMBER(38,0),
	""wdsp"" VARCHAR(16777216),
	""count_wdsp"" VARCHAR(16777216),
	""mxpsd"" VARCHAR(16777216),
	""gust"" FLOAT,
	""max"" FLOAT,
	""flag_max"" VARCHAR(16777216),
	""min"" FLOAT,
	""flag_min"" VARCHAR(16777216),
	""prcp"" FLOAT,
	""flag_prcp"" VARCHAR(16777216),
	""sndp"" FLOAT,
	""fog"" VARCHAR(16777216),
	""rain_drizzle"" VARCHAR(16777216),
	""snow_ice_pellets"" VARCHAR(16777216),
	""hail"" VARCHAR(16777216),
	""thunder"" VARCHAR(16777216),
	""tornado_funnel_cloud"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['GSOD1933', 'GSOD1934', 'GSOD1946', 'GSOD1955', 'GSOD1959', 'GSOD2002', 'GSOD2010', 'GSOD1949', 'GSOD1951', 'GSOD1974', 'GSOD1984', 'GSOD1985', 'GSOD1998', 'GSOD2006', 'GSOD2001', 'GSOD1961', 'GSOD1950', 'GSOD2020', 'GSOD1973', 'GSOD1990', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1938', 'GSOD1939', 'GSOD1941', 'GSOD1942', 'GSOD1962', 'GSOD1964', 'GSOD1967', 'GSOD1970', 'GSOD1979', 'GSOD1987', 'GSOD1997', 'GSOD2004', 'GSOD2024', 'GSOD1947', 'GSOD1948', 'GSOD1986', 'GSOD1991', 'GSOD1994', 'GSOD2013', 'GSOD2023', 'GSOD2018', 'GSOD1999', 'GSOD1956', 'GSOD1977', 'GSOD1993', 'GSOD1936', 'GSOD1937', 'GSOD1943', 'GSOD1945', 'GSOD1953', 'GSOD1968', 'GSOD1980', 'GSOD1981', 'GSOD1996', 'GSOD2021', 'GSOD1957', 'GSOD1972', 'GSOD1978', 'GSOD2016', 'GSOD2017', 'GSOD1954', 'GSOD1966', 'GSOD1988', 'GSOD1983', 'GSOD2022', 'GSOD1929', 'GSOD1940', 'GSOD1944', 'GSOD1952', 'GSOD1958', 'GSOD1969', 'GSOD1971', 'GSOD1975', 'GSOD1995', 'GSOD2008', 'GSOD2011', 'GSOD1963', 'GSOD1976', 'GSOD1989', 'GSOD1992', 'GSOD2000', 'GSOD2003', 'GSOD2005', 'GSOD2012', 'GSOD2014', 'GSOD2015', 'GSOD2019', 'GSOD1960', 'GSOD1982', 'GSOD1965', 'GSOD1935', 'GSOD2007', 'GSOD2009']
,1
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""usaf"" VARCHAR(16777216),
	""wban"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""call"" VARCHAR(16777216),
	""lat"" FLOAT,
	""lon"" FLOAT,
	""elev"" VARCHAR(16777216),
	""begin"" VARCHAR(16777216),
	""end"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HISTORIC_SEVERE_STORMS
DDL describes table information.
,0
table_name,STORMS_1951
description,
DDL,"create or replace TABLE STORMS_1951 (
	""episode_id"" VARCHAR(16777216),
	""event_id"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""event_type"" VARCHAR(16777216),
	""cz_type"" VARCHAR(16777216),
	""cz_fips_code"" VARCHAR(16777216),
	""cz_name"" VARCHAR(16777216),
	""wfo"" VARCHAR(16777216),
	""event_begin_time"" NUMBER(38,0),
	""event_timezone"" VARCHAR(16777216),
	""event_end_time"" NUMBER(38,0),
	""injuries_direct"" NUMBER(38,0),
	""injuries_indirect"" NUMBER(38,0),
	""deaths_direct"" NUMBER(38,0),
	""deaths_indirect"" NUMBER(38,0),
	""damage_property"" NUMBER(38,0),
	""damage_crops"" NUMBER(38,0),
	""source"" VARCHAR(16777216),
	""magnitude"" FLOAT,
	""magnitude_type"" VARCHAR(16777216),
	""flood_cause"" VARCHAR(16777216),
	""tor_f_scale"" VARCHAR(16777216),
	""tor_length"" VARCHAR(16777216),
	""tor_width"" VARCHAR(16777216),
	""tor_other_wfo"" VARCHAR(16777216),
	""location_index"" VARCHAR(16777216),
	""event_range"" FLOAT,
	""event_azimuth"" VARCHAR(16777216),
	""reference_location"" VARCHAR(16777216),
	""event_latitude"" FLOAT,
	""event_longitude"" FLOAT,
	""event_point"" BINARY(8388608)
);"

Some other tables have the similar structure: ['STORMS_1951', 'STORMS_1953', 'STORMS_1955', 'STORMS_1957', 'STORMS_1963', 'STORMS_1968', 'STORMS_1969', 'STORMS_1978', 'STORMS_1979', 'STORMS_1982', 'STORMS_1984', 'STORMS_1990', 'STORMS_1992', 'STORMS_2022', 'STORMS_2023', 'STORMS_2017', 'STORMS_2001', 'STORMS_2020', 'STORMS_1977', 'STORMS_1954', 'STORMS_1956', 'STORMS_1962', 'STORMS_1966', 'STORMS_1971', 'STORMS_2014', 'STORMS_2018', 'STORMS_1975', 'STORMS_1995', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2003', 'STORMS_2011', 'STORMS_2015', 'STORMS_2024', 'STORMS_1973', 'STORMS_2016', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1976', 'STORMS_1980', 'STORMS_1986', 'STORMS_1989', 'STORMS_2008', 'STORMS_2019', 'STORMS_1952', 'STORMS_1965', 'STORMS_1972', 'STORMS_1981', 'STORMS_1983', 'STORMS_1987', 'STORMS_1993', 'STORMS_2002', 'STORMS_2004', 'STORMS_2006', 'STORMS_2009', 'STORMS_1991', 'STORMS_1958', 'STORMS_1964', 'STORMS_1967', 'STORMS_1970', 'STORMS_1988', 'STORMS_1994', 'STORMS_1996', 'STORMS_2000', 'STORMS_2010', 'STORMS_2013', 'STORMS_2021', 'STORMS_1950', 'STORMS_1985', 'STORMS_2005', 'STORMS_2007', 'STORMS_2012', 'STORMS_1974']
,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,3
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,4
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,5
table_name,TORNADO_PATHS
description,
DDL,"create or replace TABLE TORNADO_PATHS (
	""storm_date"" DATE,
	""storm_time"" TIME(9),
	""time_zone_offset"" VARCHAR(16777216),
	""state_abbreviation"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""magnitude"" VARCHAR(16777216),
	""injured_count"" NUMBER(38,0),
	""fatality_count"" NUMBER(38,0),
	""property_loss"" VARCHAR(16777216),
	""crop_loss"" VARCHAR(16777216),
	""yearly_tornado_count"" VARCHAR(16777216),
	""start_lon"" FLOAT,
	""start_lat"" FLOAT,
	""end_long"" FLOAT,
	""end_lat"" FLOAT,
	""length"" FLOAT,
	""width"" FLOAT,
	""tornado_path_geom"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_HURRICANES
DDL describes table information.
,0
table_name,HURRICANES
description,
DDL,"create or replace TABLE HURRICANES (
	""sid"" VARCHAR(16777216),
	""season"" VARCHAR(16777216),
	""number"" NUMBER(38,0),
	""basin"" VARCHAR(16777216),
	""subbasin"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""iso_time"" NUMBER(38,0),
	""nature"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""wmo_wind"" NUMBER(38,0),
	""wmo_pressure"" NUMBER(38,0),
	""wmo_agency"" VARCHAR(16777216),
	""track_type"" VARCHAR(16777216),
	""dist2land"" NUMBER(38,0),
	""landfall"" NUMBER(38,0),
	""iflag"" VARCHAR(16777216),
	""usa_agency"" VARCHAR(16777216),
	""usa_latitude"" FLOAT,
	""usa_longitude"" FLOAT,
	""usa_record"" VARCHAR(16777216),
	""usa_status"" VARCHAR(16777216),
	""usa_wind"" NUMBER(38,0),
	""usa_pressure"" NUMBER(38,0),
	""usa_sshs"" NUMBER(38,0),
	""usa_r34_ne"" NUMBER(38,0),
	""usa_r34_se"" NUMBER(38,0),
	""usa_r34_sw"" NUMBER(38,0),
	""usa_r34_nw"" NUMBER(38,0),
	""usa_r50_ne"" NUMBER(38,0),
	""usa_r50_se"" NUMBER(38,0),
	""usa_r50_sw"" NUMBER(38,0),
	""usa_r50_nw"" NUMBER(38,0),
	""usa_r64_ne"" NUMBER(38,0),
	""usa_r64_se"" NUMBER(38,0),
	""usa_r64_sw"" NUMBER(38,0),
	""usa_r64_nw"" NUMBER(38,0),
	""usa_poci"" NUMBER(38,0),
	""usa_roci"" NUMBER(38,0),
	""usa_rmw"" NUMBER(38,0),
	""usa_eye"" VARCHAR(16777216),
	""tokyo_latitude"" FLOAT,
	""tokyo_longitude"" FLOAT,
	""tokyo_grade"" NUMBER(38,0),
	""tokyo_wind"" NUMBER(38,0),
	""tokyo_pressure"" NUMBER(38,0),
	""tokyo_r50_dir"" NUMBER(38,0),
	""tokyo_r50_longitude"" NUMBER(38,0),
	""tokyo_r50_short"" NUMBER(38,0),
	""tokyo_r30_dir"" NUMBER(38,0),
	""tokyo_r30_long"" NUMBER(38,0),
	""tokyo_r30_short"" NUMBER(38,0),
	""tokyo_land"" NUMBER(38,0),
	""cma_latitude"" FLOAT,
	""cma_longitude"" FLOAT,
	""cma_cat"" NUMBER(38,0),
	""cma_wind"" NUMBER(38,0),
	""cma_pressure"" NUMBER(38,0),
	""hko_latitude"" VARCHAR(16777216),
	""hko_longitude"" FLOAT,
	""hko_cat"" VARCHAR(16777216),
	""hko_wind"" NUMBER(38,0),
	""hko_pressure"" NUMBER(38,0),
	""newdelhi_latitude"" FLOAT,
	""newdelhi_longitude"" FLOAT,
	""newdelhi_grade"" VARCHAR(16777216),
	""newdelhi_wind"" NUMBER(38,0),
	""newdelhi_pressure"" NUMBER(38,0),
	""newdelhi_ci"" FLOAT,
	""newdelhi_dp"" NUMBER(38,0),
	""newdelhi_poci"" NUMBER(38,0),
	""reunion_latitude"" FLOAT,
	""reunion_longitude"" FLOAT,
	""reunion_type"" NUMBER(38,0),
	""reunion_wind"" NUMBER(38,0),
	""reunion_pressure"" NUMBER(38,0),
	""reunion_tnum"" FLOAT,
	""reunion_ci"" FLOAT,
	""reunion_rmw"" NUMBER(38,0),
	""reunion_r34_ne"" NUMBER(38,0),
	""reunion_r34_se"" NUMBER(38,0),
	""reunion_r34_sw"" NUMBER(38,0),
	""reunion_r34_nw"" NUMBER(38,0),
	""reunion_r50_ne"" NUMBER(38,0),
	""reunion_r50_se"" NUMBER(38,0),
	""reunion_r50_sw"" NUMBER(38,0),
	""reunion_r50_nw"" NUMBER(38,0),
	""reunion_r64_ne"" NUMBER(38,0),
	""reunion_r64_se"" NUMBER(38,0),
	""reunion_r64_sw"" NUMBER(38,0),
	""reunion_r64_nw"" NUMBER(38,0),
	""bom_latitude"" FLOAT,
	""bom_longitude"" FLOAT,
	""bom_type"" NUMBER(38,0),
	""bom_wind"" NUMBER(38,0),
	""bom_pressure"" NUMBER(38,0),
	""bom_tnum"" FLOAT,
	""bom_ci"" FLOAT,
	""bom_rmw"" NUMBER(38,0),
	""bom_r34_ne"" NUMBER(38,0),
	""bom_r34_se"" NUMBER(38,0),
	""bom_r34_sw"" NUMBER(38,0),
	""bom_r34_nw"" NUMBER(38,0),
	""bom_r50_ne"" NUMBER(38,0),
	""bom_r50_se"" NUMBER(38,0),
	""bom_r50_sw"" NUMBER(38,0),
	""bom_r50_nw"" NUMBER(38,0),
	""bom_r64_ne"" NUMBER(38,0),
	""bom_r64_se"" NUMBER(38,0),
	""bom_r64_sw"" NUMBER(38,0),
	""bom_r64_nw"" NUMBER(38,0),
	""bom_roci"" NUMBER(38,0),
	""bom_poci"" NUMBER(38,0),
	""bom_eye"" NUMBER(38,0),
	""bom_pos_method"" NUMBER(38,0),
	""bom_pressure_method"" NUMBER(38,0),
	""wellington_latitude"" FLOAT,
	""wellington_longitude"" FLOAT,
	""wellington_wind"" NUMBER(38,0),
	""wellington_pressure"" NUMBER(38,0),
	""nadi_latitude"" FLOAT,
	""nadi_longitude"" FLOAT,
	""nadi_cat"" NUMBER(38,0),
	""nadi_wind"" NUMBER(38,0),
	""nadi_pressure"" NUMBER(38,0),
	""ds824_latitude"" FLOAT,
	""ds824_longitude"" FLOAT,
	""ds824_stage"" VARCHAR(16777216),
	""ds824_wind"" NUMBER(38,0),
	""ds824_pressure"" NUMBER(38,0),
	""td9636_latitude"" FLOAT,
	""td9636_longitude"" FLOAT,
	""td9636_stage"" NUMBER(38,0),
	""td9636_wind"" NUMBER(38,0),
	""td9636_pressure"" NUMBER(38,0),
	""td9635_latitude"" FLOAT,
	""td9635_longitude"" FLOAT,
	""td9635_wind"" FLOAT,
	""td9635_pressure"" NUMBER(38,0),
	""td9635_roci"" NUMBER(38,0),
	""neumann_latitude"" FLOAT,
	""neumann_longitude"" FLOAT,
	""neumann_class"" VARCHAR(16777216),
	""neumann_wind"" NUMBER(38,0),
	""neumann_pressure"" NUMBER(38,0),
	""mlc_latitude"" FLOAT,
	""mlc_longitude"" FLOAT,
	""mlc_class"" VARCHAR(16777216),
	""mlc_wind"" NUMBER(38,0),
	""mlc_pressure"" NUMBER(38,0),
	""usa_atcf_id"" VARCHAR(16777216),
	""source_url"" VARCHAR(16777216),
	""etl_timestamp"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_ICOADS
DDL describes table information.
,0
table_name,ICOADS_CORE_1662_2000
description,
DDL,"create or replace TABLE ICOADS_CORE_1662_2000 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004']
,1
table_name,ICOADS_CORE_2014
description,
DDL,"create or replace TABLE ICOADS_CORE_2014 (
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" FLOAT,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""imma_version"" NUMBER(38,0),
	""attm_count"" NUMBER(38,0),
	""time_indicator"" NUMBER(38,0),
	""latlong_indicator"" NUMBER(38,0),
	""ship_course"" NUMBER(38,0),
	""ship_speed"" NUMBER(38,0),
	""national_source_indicator"" NUMBER(38,0),
	""id_indicator"" NUMBER(38,0),
	""callsign"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""wind_direction_indicator"" NUMBER(38,0),
	""wind_direction_true"" NUMBER(38,0),
	""wind_speed_indicator"" NUMBER(38,0),
	""wind_speed"" FLOAT,
	""visibility_indicator"" NUMBER(38,0),
	""visibility"" NUMBER(38,0),
	""present_weather"" NUMBER(38,0),
	""past_weather"" NUMBER(38,0),
	""sea_level_pressure"" FLOAT,
	""characteristic_of_ppp"" NUMBER(38,0),
	""amt_pressure_tend"" FLOAT,
	""indicator_for_temp"" NUMBER(38,0),
	""air_temperature"" FLOAT,
	""wbt_indicator"" NUMBER(38,0),
	""wetbulb_temperature"" FLOAT,
	""dpt_indicator"" NUMBER(38,0),
	""dewpoint_temperature"" FLOAT,
	""sst_measurement_method"" NUMBER(38,0),
	""sea_surface_temp"" FLOAT,
	""total_cloud_amount"" NUMBER(38,0),
	""lower_cloud_amount"" NUMBER(38,0),
	""low_cloud_type"" VARCHAR(16777216),
	""cloud_height_indicator"" NUMBER(38,0),
	""cloud_height"" VARCHAR(16777216),
	""middle_cloud_type"" VARCHAR(16777216),
	""high_cloud_type"" VARCHAR(16777216),
	""wave_direction"" NUMBER(38,0),
	""wave_period"" NUMBER(38,0),
	""wave_height"" FLOAT,
	""swell_direction"" NUMBER(38,0),
	""swell_period"" NUMBER(38,0),
	""swell_height"" FLOAT,
	""box_system_indicator"" VARCHAR(16777216),
	""ten_degree_box_number"" NUMBER(38,0),
	""one_degree_box_number"" NUMBER(38,0),
	""deck"" NUMBER(38,0),
	""source_id"" NUMBER(38,0),
	""platform_type"" NUMBER(38,0),
	""dup_status"" NUMBER(38,0),
	""dup_check"" NUMBER(38,0),
	""track_check"" NUMBER(38,0),
	""pressure_bias"" NUMBER(38,0),
	""wave_period_indicator"" NUMBER(38,0),
	""swell_period_indicator"" NUMBER(38,0),
	""second_country_code"" NUMBER(38,0),
	""adaptive_qc_flags"" VARCHAR(16777216),
	""nightday_flag"" NUMBER(38,0),
	""trimming_flags"" VARCHAR(16777216),
	""ncdc_qc_flags"" VARCHAR(16777216),
	""external"" NUMBER(38,0),
	""landlocked_flag"" NUMBER(38,0),
	""source_exclusion_flags"" NUMBER(38,0),
	""unique_report_id"" VARCHAR(16777216),
	""release_no_primary"" NUMBER(38,0),
	""release_no_secondary"" NUMBER(38,0),
	""release_no_tertiary"" NUMBER(38,0),
	""release_status_indicator"" NUMBER(38,0),
	""intermediate_reject_flag"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['ICOADS_CORE_2014', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2015', 'ICOADS_CORE_2005', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2017', 'ICOADS_CORE_2007', 'ICOADS_CORE_2006', 'ICOADS_CORE_2010', 'ICOADS_CORE_2016']
Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_ACOUSTIC_INDEX
DDL describes table information.
,0
table_name,NRS_METADATA
description,
DDL,"create or replace TABLE NRS_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" NUMBER(38,0),
	""sample_rate"" NUMBER(38,0),
	""duration"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""point_geom"" BINARY(8388608),
	""file_link"" VARCHAR(16777216)
);"

,1
table_name,SANCTSOUND_METADATA
description,
DDL,"create or replace TABLE SANCTSOUND_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" DATE,
	""start_time"" TIME(9),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" FLOAT,
	""sample_rate"" NUMBER(38,0),
	""recording_percent"" NUMBER(38,0),
	""platform_name"" VARCHAR(16777216),
	""longitude"" FLOAT,
	""latitude"" FLOAT,
	""file_link"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PASSIVE_BIOACOUSTIC
DDL describes table information.
,0
table_name,NCEI_NRS_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NRS_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""deployment_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,1
table_name,NCEI_NEFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_NEFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape1"" VARCHAR(16777216),
	""shape2"" VARCHAR(16777216),
	""shape3"" VARCHAR(16777216),
	""shape4"" VARCHAR(16777216),
	""shape5"" VARCHAR(16777216),
	""shape6"" VARCHAR(16777216),
	""shape7"" VARCHAR(16777216),
	""shape8"" VARCHAR(16777216),
	""shape9"" VARCHAR(16777216),
	""shape10"" VARCHAR(16777216)
);"

,2
table_name,NCEI_SANCTSOUND_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_SANCTSOUND_PAD_METADATA (
	""file_name"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate_hz"" VARCHAR(16777216),
	""recording"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""lon"" VARCHAR(16777216),
	""lat"" VARCHAR(16777216)
);"

,3
table_name,NCEI_AFSC_PAD_METADATA
description,
DDL,"create or replace TABLE NCEI_AFSC_PAD_METADATA (
	""cloud_path"" VARCHAR(16777216),
	""file_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""start_time"" VARCHAR(16777216),
	""data_collection_name"" VARCHAR(16777216),
	""source_organization"" VARCHAR(16777216),
	""funding_organization"" VARCHAR(16777216),
	""project_name"" VARCHAR(16777216),
	""sensor_depth"" VARCHAR(16777216),
	""sample_rate"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""platform_name"" VARCHAR(16777216),
	""shape"" VARCHAR(16777216)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PIFSC_METADATA
DDL describes table information.
,0
table_name,DCLDE_2020_DETECTION_README
description,
DDL,"create or replace TABLE DCLDE_2020_DETECTION_README (
	""table"" VARCHAR(16777216),
	""field"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,DCLDE_2020_1705_ARRAY
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ARRAY (
	""array_start_local"" NUMBER(38,0),
	""array_end_local"" NUMBER(38,0),
	""array_start_utc"" NUMBER(38,0),
	""array_end_utc"" NUMBER(38,0),
	""array1"" VARCHAR(16777216),
	""array2"" VARCHAR(16777216),
	""hp1_dist"" FLOAT,
	""hp1_ad"" NUMBER(38,0),
	""hp2_dist"" FLOAT,
	""hp2_ad"" NUMBER(38,0),
	""hp3_dist"" FLOAT,
	""hp3_ad"" NUMBER(38,0),
	""hp4_dist"" FLOAT,
	""hp4_ad"" NUMBER(38,0),
	""hp5_dist"" FLOAT,
	""hp5_ad"" NUMBER(38,0),
	""hp6_dist"" FLOAT,
	""hp6_ad"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1706_ARRAY']
,2
table_name,DCLDE_2020_1705_ODONTOCETE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_ODONTOCETE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""acoustic_detection_number"" VARCHAR(16777216),
	""sighting_number"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""first_angle"" NUMBER(38,0),
	""first_distance"" NUMBER(38,0),
	""beam_distance"" NUMBER(38,0),
	""beam_time_utc"" NUMBER(38,0),
	""detection_distance"" NUMBER(38,0),
	""species1_id"" VARCHAR(16777216),
	""species2_id"" VARCHAR(16777216),
	""species3_id"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS']
,3
table_name,DCLDE_2020_1705_VISUAL_SIGHTINGS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_VISUAL_SIGHTINGS (
	""local_ship_date"" DATE,
	""sighting_local_time"" TIME(9),
	""sighting_number"" VARCHAR(16777216),
	""species_id"" VARCHAR(16777216),
	""effort"" VARCHAR(16777216),
	""effort_type"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""bearing"" NUMBER(38,0),
	""distance"" FLOAT,
	""total_best"" FLOAT,
	""total_high"" NUMBER(38,0),
	""total_low"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS']
,4
table_name,DCLDE_2020_1705_MINKE_DETECTIONS
description,
DDL,"create or replace TABLE DCLDE_2020_1705_MINKE_DETECTIONS (
	""detection_time_start_local"" NUMBER(38,0),
	""detection_time_start_utc"" NUMBER(38,0),
	""detection_time_end_utc"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608)
);"

,5
table_name,DCLDE_2020_SPECIES_LOOKUP
description,
DDL,"create or replace TABLE DCLDE_2020_SPECIES_LOOKUP (
	""code"" VARCHAR(16777216),
	""common_name"" VARCHAR(16777216),
	""species_name"" VARCHAR(16777216)
);"

,6
table_name,DCLDE_SETTE_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_SETTE_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,7
table_name,DCLDE_LASKER_ARRAY_DEPTH
description,
DDL,"create or replace TABLE DCLDE_LASKER_ARRAY_DEPTH (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""inline_depth"" FLOAT,
	""end_depth"" FLOAT
);"

,8
table_name,DCLDE_LASKER_GPS
description,
DDL,"create or replace TABLE DCLDE_LASKER_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

,9
table_name,DCLDE_SETTE_GPS
description,
DDL,"create or replace TABLE DCLDE_SETTE_GPS (
	""utc_time"" NUMBER(38,0),
	""local_time"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""point"" BINARY(8388608),
	""speed"" FLOAT,
	""effort"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_PRELIMINARY_SEVERE_STORMS
DDL describes table information.
,0
table_name,WIND_REPORTS
description,
DDL,"create or replace TABLE WIND_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""speed"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,1
table_name,HAIL_REPORTS
description,
DDL,"create or replace TABLE HAIL_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

,2
table_name,TORNADO_REPORTS
description,
DDL,"create or replace TABLE TORNADO_REPORTS (
	""timestamp"" NUMBER(38,0),
	""time"" VARCHAR(16777216),
	""f_scale"" VARCHAR(16777216),
	""location"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""comments"" VARCHAR(16777216),
	""report_point"" BINARY(8388608)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_SIGNIFICANT_EARTHQUAKES
DDL describes table information.
,0
table_name,EARTHQUAKES
description,
DDL,"create or replace TABLE EARTHQUAKES (
	""id"" NUMBER(38,0),
	""flag_tsunami"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""hour"" NUMBER(38,0),
	""minute"" NUMBER(38,0),
	""second"" FLOAT,
	""focal_depth"" NUMBER(38,0),
	""eq_primary"" FLOAT,
	""eq_mag_mw"" FLOAT,
	""eq_mag_ms"" FLOAT,
	""eq_mag_mb"" FLOAT,
	""eq_mag_ml"" FLOAT,
	""eq_mag_mfa"" FLOAT,
	""eq_mag_unk"" FLOAT,
	""intensity"" NUMBER(38,0),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

Database Name: NOAA_DATA
Schema Name: NOAA_TSUNAMI
DDL describes table information.
,0
table_name,HISTORICAL_SOURCE_EVENT
description,
DDL,"create or replace TABLE HISTORICAL_SOURCE_EVENT (
	""id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""event_validity"" NUMBER(38,0),
	""cause_code"" NUMBER(38,0),
	""focal_depth"" NUMBER(38,0),
	""primary_magnitude"" FLOAT,
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""maximum_water_height"" FLOAT,
	""abe"" FLOAT,
	""iida"" FLOAT,
	""soloviev"" FLOAT,
	""warning_status"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""missing"" NUMBER(38,0),
	""missing_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0),
	""total_deaths_description"" NUMBER(38,0),
	""total_missing"" NUMBER(38,0),
	""total_missing_description"" NUMBER(38,0),
	""total_injuries"" NUMBER(38,0),
	""total_injuries_description"" NUMBER(38,0),
	""total_damage_in_millions_dollars"" FLOAT,
	""total_damage_description"" NUMBER(38,0),
	""total_houses_destroyed"" NUMBER(38,0),
	""total_houses_destroyed_description"" NUMBER(38,0),
	""total_houses_damaged"" NUMBER(38,0),
	""total_houses_damaged_description"" NUMBER(38,0)
);"

,1
table_name,HISTORICAL_RUNUPS
description,
DDL,"create or replace TABLE HISTORICAL_RUNUPS (
	""id"" NUMBER(38,0),
	""tsevent_id"" NUMBER(38,0),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""day"" NUMBER(38,0),
	""timestamp"" NUMBER(38,0),
	""doubtful"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""location_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_code"" NUMBER(38,0),
	""distance_from_source"" NUMBER(38,0),
	""arr_day"" NUMBER(38,0),
	""arr_hour"" NUMBER(38,0),
	""arr_min"" NUMBER(38,0),
	""travel_time_hours"" NUMBER(38,0),
	""travel_time_minutes"" NUMBER(38,0),
	""water_ht"" FLOAT,
	""horizontal_inundation"" FLOAT,
	""type_measurement_id"" NUMBER(38,0),
	""period"" FLOAT,
	""first_motion"" VARCHAR(16777216),
	""deaths"" NUMBER(38,0),
	""deaths_description"" NUMBER(38,0),
	""injuries"" NUMBER(38,0),
	""injuries_description"" NUMBER(38,0),
	""damage_millions_dollars"" FLOAT,
	""damage_description"" NUMBER(38,0),
	""houses_damaged"" NUMBER(38,0),
	""houses_damaged_description"" NUMBER(38,0),
	""houses_destroyed"" NUMBER(38,0),
	""houses_destroyed_description"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Database**: `NOAA_DATA`
- **Schema**: `NOAA_ICOADS`
- **Tables**: 
  - `ICOADS_CORE_2010`
  - `ICOADS_CORE_2011`
  - `ICOADS_CORE_2012`
  - `ICOADS_CORE_2013`
  - `ICOADS_CORE_2014`

**Columns and Potential Usage:**

- `"year"`: To filter data between 2010 and 2014.
- `"month"`: To group data by month.
- `"air_temperature"`: For calculating average air temperature.
- `"wetbulb_temperature"`: For calculating average wet bulb temperature.
- `"dewpoint_temperature"`: For calculating average dew point temperature.
- `"sea_surface_temp"`: For calculating average sea surface temperature.

**Conditions that May Be Used:**

- `"year"` BETWEEN 2010 AND 2014.
- Temperature columns (`"air_temperature"`, `"wetbulb_temperature"`, `"dewpoint_temperature"`, `"sea_surface_temp"`) are NOT NULL.
- Filter by specific `"month"` if needed.

---

**SQL Queries:**

```sql
-- 1. Retrieve distinct years available in ICOADS_CORE_2010
SELECT DISTINCT "year"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
LIMIT 1000;

-- 2. Retrieve distinct months available in ICOADS_CORE_2010
SELECT DISTINCT "month"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
LIMIT 1000;

-- 3. Get the count of records with non-null air temperature in 2010
SELECT COUNT(*) AS "air_temp_count_2010"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
LIMIT 1000;

-- 4. Get the average air temperature for each month in 2010
SELECT "month", AVG("air_temperature") AS "avg_air_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000;

-- 5. Get the average wet bulb temperature for each month in 2010
SELECT "month", AVG("wetbulb_temperature") AS "avg_wetbulb_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "wetbulb_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000;

-- 6. Get the average dew point temperature for each month in 2010
SELECT "month", AVG("dewpoint_temperature") AS "avg_dewpoint_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "dewpoint_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000;

-- 7. Get the average sea surface temperature for each month in 2010
SELECT "month", AVG("sea_surface_temp") AS "avg_sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "sea_surface_temp" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000;

-- 8. Retrieve the number of records where all four temperatures are available for 2010
SELECT COUNT(*) AS "complete_temp_records_2010"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000;

-- 9. Get the average temperatures for each month between 2010 and 2014
SELECT "year", "month",
       AVG("air_temperature") AS "avg_air_temp",
       AVG("wetbulb_temperature") AS "avg_wetbulb_temp",
       AVG("dewpoint_temperature") AS "avg_dewpoint_temp",
       AVG("sea_surface_temp") AS "avg_sea_surface_temp"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
  AND "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 1000;

-- 10. Retrieve the counts of non-null temperature readings for each temperature type between 2010 and 2014
SELECT "year", "month",
       COUNT("air_temperature") AS "air_temp_count",
       COUNT("wetbulb_temperature") AS "wetbulb_temp_count",
       COUNT("dewpoint_temperature") AS "dewpoint_temp_count",
       COUNT("sea_surface_temp") AS "sea_surface_temp_count"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 1000;

-- 11. List the minimum and maximum values of each temperature type in 2010
SELECT MIN("air_temperature") AS "min_air_temp",
       MAX("air_temperature") AS "max_air_temp",
       MIN("wetbulb_temperature") AS "min_wetbulb_temp",
       MAX("wetbulb_temperature") AS "max_wetbulb_temp",
       MIN("dewpoint_temperature") AS "min_dewpoint_temp",
       MAX("dewpoint_temperature") AS "max_dewpoint_temp",
       MIN("sea_surface_temp") AS "min_sea_surface_temp",
       MAX("sea_surface_temp") AS "max_sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000;

-- 12. Retrieve sample records to observe the data format and values
SELECT "year", "month", "day", "air_temperature", "wetbulb_temperature", "dewpoint_temperature", "sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000;
```

**Note:** Each query is designed to explore the data and understand the values in the relevant columns without directly solving the original task. The queries:

- Retrieve distinct years and months to confirm the data range.
- Calculate averages and counts to assess the availability and distribution of temperature data.
- Use UNION ALL to combine tables from different years when necessary.
- Ensure all column names are enclosed in double quotations as per instruction.
- Avoid any nested queries or the use of `WITH` clauses.
- Limit the number of returned rows to 1000 for manageability.Query:
-- 1. Retrieve distinct years available in ICOADS_CORE_2010
SELECT DISTINCT "year"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
LIMIT 1000
Answer:
year
2010
Query:
-- 2. Retrieve distinct months available in ICOADS_CORE_2010
SELECT DISTINCT "month"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
LIMIT 1000
Answer:
month
7
1
5
10
4
9
12
8
3
6
2
11
Query:
-- 3. Get the count of records with non-null air temperature in 2010
SELECT COUNT(*) AS "air_temp_count_2010"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
LIMIT 1000
Answer:
air_temp_count_2010
8082438
Query:
-- 4. Get the average air temperature for each month in 2010
SELECT "month", AVG("air_temperature") AS "avg_air_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Answer:
month,avg_air_temp
1,10.970148368234197
2,11.345316819260942
3,13.548832904521454
4,15.554022438304054
5,17.586179550652645
6,20.022022336259624
7,21.114065633045083
8,21.27842932097648
9,19.795720277124282
10,17.403491959222364
11,14.129684495249606
12,10.60203618437478
Query:
-- 5. Get the average wet bulb temperature for each month in 2010
SELECT "month", AVG("wetbulb_temperature") AS "avg_wetbulb_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "wetbulb_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Answer:
month,avg_wetbulb_temp
1,14.26793376830852
2,15.144010887888774
3,15.935988779416034
4,16.57357709702193
5,17.00787382817426
6,18.76065193926747
7,19.565886574409987
8,20.024585179980537
9,19.22018755767874
10,18.483593083972714
11,16.74297136171161
12,14.688330050007576
Query:
-- 6. Get the average dew point temperature for each month in 2010
SELECT "month", AVG("dewpoint_temperature") AS "avg_dewpoint_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "dewpoint_temperature" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Answer:
month,avg_dewpoint_temp
1,7.589281814396708
2,8.090111432074988
3,10.016255056829129
4,11.821633269941401
5,14.019548173448689
6,16.83660095125272
7,17.729702327406038
8,17.875119300384704
9,16.29606258528154
10,13.842453364841333
11,10.603981015973238
12,7.187377659613002
Query:
-- 7. Get the average sea surface temperature for each month in 2010
SELECT "month", AVG("sea_surface_temp") AS "avg_sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "sea_surface_temp" IS NOT NULL
GROUP BY "month"
ORDER BY "month"
LIMIT 1000
Answer:
month,avg_sea_surface_temp
1,17.972877726169905
2,17.805219729202637
3,18.12515947694437
4,18.7096856940294
5,19.641230877323213
6,20.885157266880235
7,21.55113808680265
8,21.810517928558284
9,21.164147598526792
10,20.159590381015807
11,18.950354711274045
12,18.090182856035156
Query:
-- 8. Retrieve the number of records where all four temperatures are available for 2010
SELECT COUNT(*) AS "complete_temp_records_2010"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000
Answer:
complete_temp_records_2010
679455
Query:
-- 9. Get the average temperatures for each month between 2010 and 2014
SELECT "year", "month",
       AVG("air_temperature") AS "avg_air_temp",
       AVG("wetbulb_temperature") AS "avg_wetbulb_temp",
       AVG("dewpoint_temperature") AS "avg_dewpoint_temp",
       AVG("sea_surface_temp") AS "avg_sea_surface_temp"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
  AND "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 1000
Answer:
year,month,avg_air_temp,avg_wetbulb_temp,avg_dewpoint_temp,avg_sea_surface_temp
2010,1,16.526320419168545,14.20792825180709,12.588208972348648,18.332495123723564
2010,2,17.936275129349504,15.518778387772027,13.902063667601407,19.250345590268175
2010,3,18.6742512317017,16.229282600219754,14.648491830007446,19.428853719916347
2010,4,19.257313347506834,16.857470566165826,15.375436371107503,19.691317242241798
2010,5,19.486310422960727,17.123667948365835,15.713770255424333,19.855652636638293
2010,6,21.369602902280366,19.010558295803847,17.752555579383802,21.479140753449137
2010,7,22.15644999258906,19.801279623194617,18.587762059254626,22.310432963883994
2010,8,22.71643667851105,20.337399523924525,19.132731914306408,23.093514334011804
2010,9,21.90722093240014,19.33288820349438,17.936782524699623,22.507354810283182
2010,10,21.19642631035287,18.562158875079135,17.047982406450966,22.210346206390987
2010,11,19.514034040521185,16.857889351251785,15.213082406712603,21.035660686267825
2010,12,17.134957983193278,14.735581699346408,13.079964519140994,19.0636339869281
2011,1,17.129522682994715,14.786251043696074,13.17692909824659,18.536118842193154
2011,2,17.548551504987202,15.153423956218555,13.452428281401716,18.694320769706064
2011,3,18.19703229848482,15.749936524162035,14.11531663726444,18.925639292368057
2011,4,19.921887322977746,17.35446799026163,15.759476048417518,20.173553818194286
2011,5,19.82064448253042,17.396590928373858,15.909860684529367,20.000169689976417
2011,6,20.728269664468815,18.423929622807172,17.105861896809955,20.92025238005061
2011,7,21.329057389821052,19.109475307123294,17.918407715396352,21.5552067444111
2011,8,22.083874297705268,19.791811074257087,18.611810397346513,22.358950450145542
2011,9,21.815149577450185,19.35718680331127,18.018277655842244,22.329687364982806
2011,10,20.773427266975595,18.167054256938158,16.620704160325577,21.85185444845335
2011,11,19.479667445622862,17.00386841632213,15.470298400143806,20.87455689376236
2011,12,18.668224450485155,16.082104088282417,14.403839853102664,20.019946353669727
2012,1,17.88864039945848,15.372920512685269,13.635219860400516,19.325542838054048
2012,2,17.44562078019505,15.06759377344336,13.368238934733684,18.801147786946736
2012,3,18.19391694551363,15.830132879441404,14.23694319258815,18.959043345389837
2012,4,19.35341937398012,16.973223557335704,15.479316866933688,19.79763944518617
2012,5,19.839739367790788,17.43055560447301,15.99018754952892,19.98835431892225
2012,6,20.52164754392255,18.27737361061312,17.009580494801,20.661435998565793
2012,7,21.50561350309629,19.273678826516633,18.103331932849862,21.654067186672272
2012,8,21.700549750389072,19.401918062938336,18.16883198253734,21.995785920730846
2012,9,22.400702713253953,19.81313927386297,18.414649619363654,22.99044749170408
2012,10,21.626297952784952,18.93763601991885,17.397450202877167,22.617493544817414
2012,11,20.637920947321618,17.865425569258853,16.152240761976085,21.989937048044744
2012,12,19.680807796172356,17.132065281202298,15.496973112598335,21.121977222026533
2013,1,19.269058242749324,16.78507855888356,15.142307874875394,20.509225328713153
2013,2,19.576159297281283,17.097262414787274,15.513181365020342,20.646078193624877
2013,3,19.560173314642544,17.049807569771886,15.40818147062572,20.377127564674403
2013,4,19.668520805504446,17.197620787861986,15.618920281271267,20.13229578849207
2013,5,20.07191146485862,17.696948927702856,16.279244356007563,20.227019922863395
2013,6,20.944739478957914,18.702682865731468,17.46171342685371,20.882079158316635
2013,7,21.9353452845646,19.666228133583925,18.488547539877594,21.942448556696064
2013,8,22.791623774941833,20.35589085524924,19.109464382241654,23.007154104679305
2013,9,22.636779772773384,20.076217285453435,18.7172347332116,23.134205721241635
2013,10,21.771698162729656,19.105207349081365,17.5851968503937,22.586131233595804
2013,11,20.5318172145973,17.920127141185233,16.289296733695075,21.810245770826683
2013,12,19.778898844978503,17.216053762883934,15.562166571709746,21.18523851452841
2014,1,19.118263591173296,16.58890087057153,14.915914889140206,20.425196601877907
2014,2,19.4032229718238,16.83437836612053,15.1349651340779,20.46662225749759
2014,3,19.617374802319457,17.078774380600947,15.436070110701108,20.459422772799158
2014,4,20.186164901445842,17.678269025424953,16.157063288216786,20.63231364174194
2014,5,20.562875422568656,18.123993518285694,16.694937557623,20.730762998351626
2014,6,21.07947313510694,18.784040456732164,17.504489074363878,21.21203848606039
2014,7,22.222133653324192,19.892651638524615,18.657238364618152,22.261355389846006
2014,8,22.810974848123543,20.358300686992564,19.063393516152843,23.1587265088287
2014,9,22.584909308011593,20.018820719849888,18.60505487007449,23.181716608858814
2014,10,21.79264806183926,19.161668750710472,17.618395475730367,22.745836648857555
2014,11,20.9173493465634,18.29993344627299,16.651939133591483,22.214212245885765
2014,12,20.156413975782037,17.63129414732593,16.00806004036327,21.774813950554996
Query:
-- 10. Retrieve the counts of non-null temperature readings for each temperature type between 2010 and 2014
SELECT "year", "month",
       COUNT("air_temperature") AS "air_temp_count",
       COUNT("wetbulb_temperature") AS "wetbulb_temp_count",
       COUNT("dewpoint_temperature") AS "dewpoint_temp_count",
       COUNT("sea_surface_temp") AS "sea_surface_temp_count"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
GROUP BY "year", "month"
ORDER BY "year", "month"
LIMIT 1000
Answer:
year,month,air_temp_count,wetbulb_temp_count,dewpoint_temp_count,sea_surface_temp_count
2010,1,632076,66977,254586,1429799
2010,2,584229,64659,243018,1340855
2010,3,623428,72367,259550,1461183
2010,4,639264,70314,258708,1462683
2010,5,722292,71363,288385,1508680
2010,6,710683,69485,282785,1494307
2010,7,709673,75803,295694,1505553
2010,8,717766,74008,285414,1467770
2010,9,678829,73684,274825,1411342
2010,10,721572,75072,291143,1491093
2010,11,681733,71792,280657,1462598
2010,12,660893,65990,276074,1454751
2011,1,648879,69980,277584,1415247
2011,2,612644,68861,264746,1305659
2011,3,686824,75424,300469,1454518
2011,4,674859,72521,293120,1392024
2011,5,746409,73354,319495,1471115
2011,6,779104,72008,344698,1382910
2011,7,797325,75517,361411,1348025
2011,8,808468,73740,367395,1400087
2011,9,772225,72011,350824,1397424
2011,10,811184,72999,367177,1440367
2011,11,741592,68285,337189,1393246
2011,12,718774,67838,332104,1364335
2012,1,693849,69192,319411,1283483
2012,2,656849,65624,297977,1168795
2012,3,710910,65084,312200,1185057
2012,4,751464,67346,325356,1163359
2012,5,805925,69787,344597,1146958
2012,6,802324,68813,341515,1150498
2012,7,755111,68572,326303,1152967
2012,8,777472,64150,325132,1150397
2012,9,748009,53388,312158,1183877
2012,10,798443,55824,327659,1226702
2012,11,727213,54074,305885,1179458
2012,12,695589,53432,293520,1156030
2013,1,673678,52786,286956,1101461
2013,2,621021,47698,267260,989731
2013,3,692138,50932,300783,1059690
2013,4,692132,51675,302712,1043314
2013,5,731432,52068,313277,1154399
2013,6,756379,50363,326371,1178803
2013,7,769403,51901,332073,1209707
2013,8,810719,53122,336472,1305414
2013,9,793244,48490,316343,1295609
2013,10,787450,46635,319928,1298588
2013,11,698149,46019,285197,1160475
2013,12,679317,46575,281081,1217694
2014,1,659025,48394,280412,1207444
2014,2,628697,44087,276909,1108820
2014,3,698158,47815,320931,1257517
2014,4,708481,44707,322318,1251299
2014,5,756714,45792,335680,1311637
2014,6,786340,44627,343261,1304547
2014,7,800829,45503,357218,1377536
2014,8,859601,45230,375886,1409800
2014,9,819833,44381,365801,1366909
2014,10,836599,44928,383771,1402984
2014,11,750981,42461,370415,1360167
2014,12,735092,41347,364489,1383456
Query:
-- 11. List the minimum and maximum values of each temperature type in 2010
SELECT MIN("air_temperature") AS "min_air_temp",
       MAX("air_temperature") AS "max_air_temp",
       MIN("wetbulb_temperature") AS "min_wetbulb_temp",
       MAX("wetbulb_temperature") AS "max_wetbulb_temp",
       MIN("dewpoint_temperature") AS "min_dewpoint_temp",
       MAX("dewpoint_temperature") AS "max_dewpoint_temp",
       MIN("sea_surface_temp") AS "min_sea_surface_temp",
       MAX("sea_surface_temp") AS "max_sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000
Answer:
min_air_temp,max_air_temp,min_wetbulb_temp,max_wetbulb_temp,min_dewpoint_temp,max_dewpoint_temp,min_sea_surface_temp,max_sea_surface_temp
-15.0,43.3,-15.6,38.3,-26.0,38.3,-2.7,37.2
Query:
-- 12. Retrieve sample records to observe the data format and values
SELECT "year", "month", "day", "air_temperature", "wetbulb_temperature", "dewpoint_temperature", "sea_surface_temp"
FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
WHERE "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
LIMIT 1000
Answer:
Too long, hard cut:
year,month,day,air_temperature,wetbulb_temperature,dewpoint_temperature,sea_surface_temp
2010,4,17,26.2,16.0,8.8,18.3
2010,12,17,-8.6,-8.8,-10.5,1.3
2010,12,22,-9.1,-9.3,-11.1,1.6
2010,12,22,-8.5,-9.0,-11.7,1.5
2010,10,28,24.0,23.9,23.9,28.1
2010,3,28,15.0,14.0,13.0,13.3
2010,5,20,14.0,13.0,12.0,13.6
2010,10,31,27.6,25.9,25.3,28.1
2010,12,4,23.0,20.0,18.6,23.2
2010,11,6,27.7,25.5,24.7,27.6
2010,2,10,27.3,24.5,23.4,26.3
2010,3,5,20.1,17.8,16.5,20.4
2010,10,28,26.7,22.6,20.9,27.3
2010,11,2,27.6,26.0,25.5,27.5
2010,10,30,27.7,26.5,26.1,27.7
2010,11,19,27.3,23.2,21.5,26.7
2010,11,14,25.0,24.0,23.6,27.1
2010,3,4,22.4,18.0,15.5,20.9
2010,9,10,28.4,26.4,25.7,27.7
2010,11,8,27.8,26.6,26.2,28.2
2010,12,5,30.6,28.0,27.2,29.9
2010,11,8,26.2,25.2,24.8,28.0
2010,12,15,29.1,27.6,27.1,29.4
2010,2,22,20.0,18.2,17.3,24.2
2010,7,3,29.2,26.7,25.9,27.2
2010,7,2,28.2,26.0,25.2,28.1
2010,6,28,27.8,24.2,22.8,28.6
2010,6,28,27.3,23.8,22.4,28.1
2010,11,24,29.0,26.0,25.0,32.0
2010,2,23,15.0,12.0,9.7,16.0
2010,12,7,22.0,18.0,15.8,27.0
2010,12,10,26.0,23.0,21.8,30.0
2010,12,18,25.0,20.0,17.5,30.0
2010,12,8,25.0,20.0,17.5,29.0
2010,3,21,30.0,27.0,26.0,32.0
2010,9,24,26.0,24.0,23.1,29.0
2010,11,3,29.0,26.0,24.8,31.0
2010,1,9,27.0,24.0,22.6,28.0
2010,9,21,28.0,24.0,22.1,30.0
2010,9,23,30.0,26.0,24.3,30.0
2010,12,12,27.0,24.0,22.6,30.0
2010,1,11,24.0,22.0,21.0,25.0
2010,2,3,28.0,25.0,23.7,26.0
2010,8,14,16.5,13.5,10.9,22.0
2010,8,6,28.0,25.0,23.7,27.0
2010,12,17,29.0,25.0,23.2,30.0
2010,12,12,28.0,25.0,23.7,26.0
2010,7,9,18.0,13.5,9.5,20.0
2010,1,30,29.0,26.0,24.8,30.0
2010,8,22,19.5,15.0,11.4,20.0
2010,12,3,22.0,18.0,15.3,26.0
2010,9,30,27.2,24.8,23.7,28.0
2010,3,19,23.0,19.0,16.5,25.0
2010,9,9,27.2,25.4,24.6,29.0
2010,4,1,29.0,26.0,24.8,29.0
2010,2,23,29.0,26.0,24.8,29.0
2010,7,19,14.0,10.0,5.6,12.0
2010,4,20,29.0,24.5,22.4,30.0
2010,8,24,14.5,10.0,4.9,19.0
2010,8,22,17.0,14.5,12.5,20.0
2010,2,3,22.0,19.0,17.2,24.0
2010,3,1,28.0,25.0,23.7,29.0
2010,6,1,14.0,11.0,8.0,17.0
2010,8,25,28.0,27.0,27.0,28.0
2010,9,10,23.0,21.0,20.0,23.0
2010,7,28,24.0,22.0,21.0,29.0
2010,8,25,25.0,23.0,22.0,28.0
2010,8,5,25.0,22.0,21.0,28.0
2010,8,18,25.0,23.0,22.0,27.0
2010,8,28,19.5,19.0,18.7,17.0
2010,6,20,8.0,5.5,1.9,10.0
2010,8,29,20.0,18.5,17.6,22.0
2010,9,3,29.0,26.0,24.8,29.0
2010,3,14,29.0,22.0,19.0,28.0
2010,5,25,6.0,5.0,4.0,6.0
2010,5,26,8.0,7.5,7.0,8.0
2010,3,3,20.0,16.0,13.0,20.0
2010,5,25,9.0,8.0,7.0,6.0
2010,4,21,11.5,11.0,11.0,12.5
2010,12,21,7.5,7.0,6.4,6.0
2010,4,29,20.0,19.5,19.0,21.0
2010,8,23,15.5,12.5,10.0,14.0
2010,3,20,23.0,21.0,20.0,25.0
2010,4,8,29.0,27.0,26.0,29.5
2010,4,3,32.0,28.0,27.0,29.5
2010,3,18,25.0,22.0,21.0,25.0
2010,6,15,15.0,14.0,13.3,14.0
2010,7,27,29.2,26.8,26.0,33.0
2010,9,17,27.0,25.5,25.0,32.0
2010,3,19,29.0,26.0,24.9,30.0
2010,3,7,25.0,19.5,16.6,27.0
2010,12,1,24.0,20.0,18.0,25.0
2010,1,1,22.0,20.5,19.8,21.0
2010,2,9,26.5,24.0,23.0,28.0
2010,9,9,16.0,14.0,12.7,18.0
2010,6,26,26.0,22.0,20.2,25.0
2010,1,18,26.0,25.1,24.7,27.0
2010,3,18,8.0,4.0,-1.5,8.0
2010,6,24,28.5,24.0,22.2,28.5
2010,6,23,24.0,21.0,19.6,26.0
2010,7,15,14.0,9.0,4.0,14.5
2010,7,30,27.6,24.6,23.5,27.9
2010,5,20,20.5,16.0,13.2,21.4
2010,10,27,25.0,21.0,19.1,24.5
2010,8,18,20.5,16.5,14.1,21.5
2010,11,28,25.2,23.7,23.1,30.0
2010,7,28,27.4,24.9,24.0,24.0
2010,12,9,18.5,16.6,15.5,18.0
2010,4,19,7.0,6.0,4.9,1.0
2010,10,30,18.0,15.2,13.4,20.0
2010,6,26,24.0,21.0,19.6,24.0
2010,9,7,21.5,19.0,17.7,20.0
2010,7,23,25.0,22.0,20.7,25.0
2010,10,29,19.6,15.3,12.5,20.0
2010,7,24,26.0,23.5,22.5,27.0
2010,7,22,25.0,22.0,20.7,25.0
2010,12,16,18.0,16.0,14.8,20.0
2010,11,27,13.0,9.0,5.1,12.0
2010,10,10,16.0,14.0,12.7,14.0
2010,7,8,30.5,28.0,27.2,29.0
2010,4,8,20.0,16.0,13.5,20.0
2010,2,23,28.5,25.5,24.4,31.0
2010,5,5,17.6,14.5,12.6,17.0
2010,1,3,25.4,21.6,20.0,23.5
2010,11,21,19.0,14.6,11.7,20.5
2010,11,20,21.1,19.0,18.0,22.6
2010,11,5,28.0,24.1,22.7,28.9
2010,12,12,16.8,14.5,12.9,18.5
2010,4,18,28.6,24.3,22.7,26.3
2010,12,9,19.8,17.6,16.4,18.5
2010,1,6,23.5,19.1,16.9,23.5
2010,10,17,26.5,22.4,20.7,27.7
2010,8,17,14.7,13.3,12.4,15.5
2010,2,9,21.0,16.1,12.9,21.0
2010,2,9,21.0,15.5,11.9,21.2
2010,10,1,22.6,19.8,18.4,23.0
2010,10,8,23.3,16.2,11.6,24.6
2010,11,11,27.9,24.8,23.7,28.7
2010,11,24,19.5,16.5,14.7,20.3
2010,4,8,26.9,23.2,21.8,26.4
2010,10,16,24.4,20.4,18.5,26.6
2010,4,5,26.8,23.0,21.4,26.1
2010,4,12,27.3,23.4,21.8,26.5
2010,2,18,27.6,23.8,22.3,27.0
2010,9,21,20.9,15.0,11.1,22.9
2010,9,30,22.3,19.2,17.6,23.6
2010,9,10,22.8,20.2,19.0,23.3
2010,9,8,21.8,21.3,21.1,22.9
2010,6,28,6.8,5.9,4.9,8.8
2010,9,13,22.5,18.5,16.3,22.7
2010,7,8,4.0,3.0,1.7,7.9
2010,2,19,27.5,24.2,22.9,26.2
2010,1,21,22.7,18.9,17.0,23.2
2010,10,2,21.6,18.6,17.0,22.9
2010,11,8,27.6,24.4,23.1,28.6
2010,8,15,14.8,11.9,9.6,16.4
2010,9,22,20.6,15.6,12.4,22.8
2010,5,20,15.8,13.5,11.9,16.0
2010,4,12,17.1,15.5,14.5,16.0
2010,8,6,6.7,6.7,6.7,7.6
2010,10,8,14.3,13.5,13.0,15.2
2010,7,5,4.5,3.3,1.9,6.5
2010,10,8,13.1,12.9,12.8,13.2
2010,11,12,27.1,24.9,24.2,27.7
2010,1,18,5.0,5.0,4.9,4.0
2010,1,18,5.2,5.0,4.7,
End Exploring Related Columns
Task: What are the top 3 months between 2010 and 2014 with the smallest sum of absolute differences between the average air temperature, wet bulb temperature, dew point temperature, and sea surface temperature, including respective years and sum of differences? Please present the year and month in numerical format.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: To determine the top 3 months between 2010 and 2014 with the smallest sum of absolute differences between the average air temperature, wet bulb temperature, dew point temperature, and sea surface temperature, we would:

1. **Calculate the average** of each of the four temperatures for each month within the specified years.
2. **Compute the absolute differences** between each pair of these average temperatures. There are six pairs in total:
   - Air temperature vs. Wet bulb temperature
   - Air temperature vs. Dew point temperature
   - Air temperature vs. Sea surface temperature
   - Wet bulb temperature vs. Dew point temperature
   - Wet bulb temperature vs. Sea surface temperature
   - Dew point temperature vs. Sea surface temperature
3. **Sum up** these absolute differences to get the total sum for each month.
4. **Identify the top 3 months** with the smallest sums, indicating the months where the average temperatures are closest to each other.

Since actual data values are not provided, we'll represent the results with metanames indicating the types and conditions of the values.

```csv
year,month,sum_of_differences
year:int between 2010 and 2014,month:int (1-12),float >= 0
year:int between 2010 and 2014,month:int (1-12),float >= 0
year:int between 2010 and 2014,month:int (1-12),float >= 0
```.
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NOAA_DATA': {'NOAA_GSOD': ['GSOD1929', 'GSOD1930', 'GSOD1931', 'GSOD1932', 'GSOD1933', 'GSOD1934', 'GSOD1935', 'GSOD1936', 'GSOD1937', 'GSOD1938', 'GSOD1939', 'GSOD1940', 'GSOD1941', 'GSOD1942', 'GSOD1943', 'GSOD1944', 'GSOD1945', 'GSOD1946', 'GSOD1947', 'GSOD1948', 'GSOD1949', 'GSOD1950', 'GSOD1951', 'GSOD1952', 'GSOD1953', 'GSOD1954', 'GSOD1955', 'GSOD1956', 'GSOD1957', 'GSOD1958', 'GSOD1959', 'GSOD1960', 'GSOD1961', 'GSOD1962', 'GSOD1963', 'GSOD1964', 'GSOD1965', 'GSOD1966', 'GSOD1967', 'GSOD1968', 'GSOD1969', 'GSOD1970', 'GSOD1971', 'GSOD1972', 'GSOD1973', 'GSOD1974', 'GSOD1975', 'GSOD1976', 'GSOD1977', 'GSOD1978', 'GSOD1979', 'GSOD1980', 'GSOD1981', 'GSOD1982', 'GSOD1983', 'GSOD1984', 'GSOD1985', 'GSOD1986', 'GSOD1987', 'GSOD1988', 'GSOD1989', 'GSOD1990', 'GSOD1991', 'GSOD1992', 'GSOD1993', 'GSOD1994', 'GSOD1995', 'GSOD1996', 'GSOD1997', 'GSOD1998', 'GSOD1999', 'GSOD2000', 'GSOD2001', 'GSOD2002', 'GSOD2003', 'GSOD2004', 'GSOD2005', 'GSOD2006', 'GSOD2007', 'GSOD2008', 'GSOD2009', 'GSOD2010', 'GSOD2011', 'GSOD2012', 'GSOD2013', 'GSOD2014', 'GSOD2015', 'GSOD2016', 'GSOD2017', 'GSOD2018', 'GSOD2019', 'GSOD2020', 'GSOD2021', 'GSOD2022', 'GSOD2023', 'GSOD2024', 'STATIONS'], 'NOAA_HISTORIC_SEVERE_STORMS': ['HAIL_REPORTS', 'NWS_FORECAST_REGIONS', 'STORMS_1950', 'STORMS_1951', 'STORMS_1952', 'STORMS_1953', 'STORMS_1954', 'STORMS_1955', 'STORMS_1956', 'STORMS_1957', 'STORMS_1958', 'STORMS_1959', 'STORMS_1960', 'STORMS_1961', 'STORMS_1962', 'STORMS_1963', 'STORMS_1964', 'STORMS_1965', 'STORMS_1966', 'STORMS_1967', 'STORMS_1968', 'STORMS_1969', 'STORMS_1970', 'STORMS_1971', 'STORMS_1972', 'STORMS_1973', 'STORMS_1974', 'STORMS_1975', 'STORMS_1976', 'STORMS_1977', 'STORMS_1978', 'STORMS_1979', 'STORMS_1980', 'STORMS_1981', 'STORMS_1982', 'STORMS_1983', 'STORMS_1984', 'STORMS_1985', 'STORMS_1986', 'STORMS_1987', 'STORMS_1988', 'STORMS_1989', 'STORMS_1990', 'STORMS_1991', 'STORMS_1992', 'STORMS_1993', 'STORMS_1994', 'STORMS_1995', 'STORMS_1996', 'STORMS_1997', 'STORMS_1998', 'STORMS_1999', 'STORMS_2000', 'STORMS_2001', 'STORMS_2002', 'STORMS_2003', 'STORMS_2004', 'STORMS_2005', 'STORMS_2006', 'STORMS_2007', 'STORMS_2008', 'STORMS_2009', 'STORMS_2010', 'STORMS_2011', 'STORMS_2012', 'STORMS_2013', 'STORMS_2014', 'STORMS_2015', 'STORMS_2016', 'STORMS_2017', 'STORMS_2018', 'STORMS_2019', 'STORMS_2020', 'STORMS_2021', 'STORMS_2022', 'STORMS_2023', 'STORMS_2024', 'TORNADO_PATHS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_HURRICANES': ['HURRICANES'], 'NOAA_ICOADS': ['ICOADS_CORE_1662_2000', 'ICOADS_CORE_2001_2004', 'ICOADS_CORE_2005', 'ICOADS_CORE_2006', 'ICOADS_CORE_2007', 'ICOADS_CORE_2008', 'ICOADS_CORE_2009', 'ICOADS_CORE_2010', 'ICOADS_CORE_2011', 'ICOADS_CORE_2012', 'ICOADS_CORE_2013', 'ICOADS_CORE_2014', 'ICOADS_CORE_2015', 'ICOADS_CORE_2016', 'ICOADS_CORE_2017'], 'NOAA_PASSIVE_ACOUSTIC_INDEX': ['NRS_METADATA', 'SANCTSOUND_METADATA'], 'NOAA_PASSIVE_BIOACOUSTIC': ['NCEI_AFSC_PAD_METADATA', 'NCEI_NEFSC_PAD_METADATA', 'NCEI_NRS_PAD_METADATA', 'NCEI_SANCTSOUND_PAD_METADATA'], 'NOAA_PIFSC_METADATA': ['DCLDE_2020_1705_ARRAY', 'DCLDE_2020_1705_MINKE_DETECTIONS', 'DCLDE_2020_1705_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1705_VISUAL_SIGHTINGS', 'DCLDE_2020_1706_ARRAY', 'DCLDE_2020_1706_ODONTOCETE_DETECTIONS', 'DCLDE_2020_1706_VISUAL_SIGHTINGS', 'DCLDE_2020_DETECTION_README', 'DCLDE_2020_SPECIES_LOOKUP', 'DCLDE_LASKER_ARRAY_DEPTH', 'DCLDE_LASKER_GPS', 'DCLDE_SETTE_ARRAY_DEPTH', 'DCLDE_SETTE_GPS'], 'NOAA_PRELIMINARY_SEVERE_STORMS': ['HAIL_REPORTS', 'TORNADO_REPORTS', 'WIND_REPORTS'], 'NOAA_SIGNIFICANT_EARTHQUAKES': ['EARTHQUAKES'], 'NOAA_TSUNAMI': ['HISTORICAL_RUNUPS', 'HISTORICAL_SOURCE_EVENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-17 19:13:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-17 19:13:28 - root - INFO - To determine the top 3 months between 2010 and 2014 with the smallest sum of absolute differences between the average air temperature, wet bulb temperature, dew point temperature, and sea surface temperature, we can use the following SQL query:

```sql
SELECT
  "year",
  "month",
  ABS(AVG("air_temperature") - AVG("wetbulb_temperature"))
    + ABS(AVG("air_temperature") - AVG("dewpoint_temperature"))
    + ABS(AVG("air_temperature") - AVG("sea_surface_temp"))
    + ABS(AVG("wetbulb_temperature") - AVG("dewpoint_temperature"))
    + ABS(AVG("wetbulb_temperature") - AVG("sea_surface_temp"))
    + ABS(AVG("dewpoint_temperature") - AVG("sea_surface_temp")) AS "sum_of_differences"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
  AND "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
GROUP BY "year", "month"
ORDER BY "sum_of_differences" ASC
LIMIT 3;
```
2025-01-17 19:13:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:13:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:13:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:13:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-17 19:13:29 - snowflake.connector.connection - INFO - closed
2025-01-17 19:13:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:13:30 - root - INFO - itercount: 1
2025-01-17 19:13:30 - root - INFO - 0
2025-01-17 19:13:30 - root - INFO - results: 
year,month,sum_of_differences
2013,6,12.628474448897812
2013,7,12.630820201436094
2012,7,12.884140438046845


2025-01-17 19:13:30 - root - INFO - Please check the answer again by reviewing What are the top 3 months between 2010 and 2014 with the smallest sum of absolute differences between the average air temperature, wet bulb temperature, dew point temperature, and sea surface temperature, including respective years and sum of differences? Please present the year and month in numerical format., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the top 3 months between 2010 and 2014 with the smallest sum of absolute differences between the average air temperature, wet bulb temperature, dew point temperature, and sea surface temperature, we would:

1. **Calculate the average** of each of the four temperatures for each month within the specified years.
2. **Compute the absolute differences** between each pair of these average temperatures. There are six pairs in total:
   - Air temperature vs. Wet bulb temperature
   - Air temperature vs. Dew point temperature
   - Air temperature vs. Sea surface temperature
   - Wet bulb temperature vs. Dew point temperature
   - Wet bulb temperature vs. Sea surface temperature
   - Dew point temperature vs. Sea surface temperature
3. **Sum up** these absolute differences to get the total sum for each month.
4. **Identify the top 3 months** with the smallest sums, indicating the months where the average temperatures are closest to each other.

Since actual data values are not provided, we'll represent the results with metanames indicating the types and conditions of the values.

```csv
year,month,sum_of_differences
year:int between 2010 and 2014,month:int (1-12),float >= 0
year:int between 2010 and 2014,month:int (1-12),float >= 0
year:int between 2010 and 2014,month:int (1-12),float >= 0
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
year,month,sum_of_differences
2013,6,12.628474448897812
2013,7,12.630820201436094
2012,7,12.884140438046845
Current sql:
SELECT
  "year",
  "month",
  ABS(AVG("air_temperature") - AVG("wetbulb_temperature"))
    + ABS(AVG("air_temperature") - AVG("dewpoint_temperature"))
    + ABS(AVG("air_temperature") - AVG("sea_surface_temp"))
    + ABS(AVG("wetbulb_temperature") - AVG("dewpoint_temperature"))
    + ABS(AVG("wetbulb_temperature") - AVG("sea_surface_temp"))
    + ABS(AVG("dewpoint_temperature") - AVG("sea_surface_temp")) AS "sum_of_differences"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
  AND "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
GROUP BY "year", "month"
ORDER BY "sum_of_differences" ASC
LIMIT 3;
2025-01-17 19:14:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-17 19:14:05 - root - INFO - To determine the top 3 months between 2010 and 2014 with the smallest sum of absolute differences between the average air temperature, wet bulb temperature, dew point temperature, and sea surface temperature, we would:

1. **Calculate the average** of each of the four temperatures for each month within the specified years.
2. **Compute the absolute differences** between each pair of these average temperatures. There are six pairs in total:
   - Air temperature vs. Wet bulb temperature
   - Air temperature vs. Dew point temperature
   - Air temperature vs. Sea surface temperature
   - Wet bulb temperature vs. Dew point temperature
   - Wet bulb temperature vs. Sea surface temperature
   - Dew point temperature vs. Sea surface temperature
3. **Sum up** these absolute differences to get the total sum for each month.
4. **Identify the top 3 months** with the smallest sums, indicating the months where the average temperatures are closest to each other.

Since actual data values are not provided, we'll represent the results with metanames indicating the types and conditions of the values.

```csv
year,month,sum_of_differences
year:int between 2010 and 2014,month:int (1-12),float >= 0
year:int between 2010 and 2014,month:int (1-12),float >= 0
year:int between 2010 and 2014,month:int (1-12),float >= 0
```

Here is the SQL query:

```sql
SELECT
  "year",
  "month",
  ROUND(
    ABS(AVG("air_temperature") - AVG("wetbulb_temperature"))
    + ABS(AVG("air_temperature") - AVG("dewpoint_temperature"))
    + ABS(AVG("air_temperature") - AVG("sea_surface_temp"))
    + ABS(AVG("wetbulb_temperature") - AVG("dewpoint_temperature"))
    + ABS(AVG("wetbulb_temperature") - AVG("sea_surface_temp"))
    + ABS(AVG("dewpoint_temperature") - AVG("sea_surface_temp")),
    4
  ) AS "sum_of_differences"
FROM (
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2010
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2011
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2012
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2013
  UNION ALL
  SELECT * FROM NOAA_DATA.NOAA_ICOADS.ICOADS_CORE_2014
) AS combined_data
WHERE "year" BETWEEN 2010 AND 2014
  AND "air_temperature" IS NOT NULL
  AND "wetbulb_temperature" IS NOT NULL
  AND "dewpoint_temperature" IS NOT NULL
  AND "sea_surface_temp" IS NOT NULL
GROUP BY "year", "month"
ORDER BY "sum_of_differences" ASC
LIMIT 3;
```
2025-01-17 19:14:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-17 19:14:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-17 19:14:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-17 19:14:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-17 19:14:06 - snowflake.connector.connection - INFO - closed
2025-01-17 19:14:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-17 19:14:07 - root - INFO - itercount: 2
2025-01-17 19:14:07 - root - INFO - 0
2025-01-17 19:14:07 - root - INFO - Total iteration counts: 2
