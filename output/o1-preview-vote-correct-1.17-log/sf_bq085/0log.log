2025-01-16 13:23:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:25:52 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:25:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:25:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:25:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:25:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 13:25:53 - snowflake.connector.connection - INFO - closed
2025-01-16 13:25:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:25:54 - root - INFO - SQL:
SELECT DISTINCT "date"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   LIMIT 1000;
Results:
Too long, hard cut:
date
2022-10-16
2021-08-23
2020-12-04
2021-09-28
2021-01-28
2020-02-17
2021-07-17
2021-04-27
2020-08-16
2023-01-05
2021-03-01
2020-03-23
2020-01-24
2020-01-31
2021-11-01
2021-08-05
2022-10-14
2021-10-14
2022-11-25
2020-09-01
2021-04-05
2021-03-23
2022-06-21
2021-10-03
2022-08-21
2020-02-03
2021-09-03
2023-02-01
2023-02-28
2020-04-09
2023-03-07
2020-12-20
2022-09-09
2022-10-13
2020-08-25
2022-04-06
2023-01-21
2021-05-18
2020-11-21
2022-01-08
2021-02-03
2022-01-05
2022-02-13
2020-08-05
2021-10-18
2022-10-30
2020-08-15
2022-07-30
2021-02-24
2020-06-25
2022-04-16
2021-07-03
2022-03-07
2020-10-15
2023-02-25
2020-08-09
2021-08-27
2020-02-20
2020-03-20
2022-11-30
2022-03-05
2020-10-17
2020-04-16
2022-09-17
2021-11-03
2021-08-03
2022-03-29
2020-11-16
2021-08-04
2020-09-11
2022-05-10
2021-05-14
2022-12-23
2022-06-14
2020-05-30
2021-12-02
2020-04-21
2021-07-10
2022-02-27
2022-08-30
2020-05-29
2022-05-17
2020-11-17
2020-05-24
2020-03-29
2021-04-20
2020-05-17
2022-09-02
2020-07-09
2020-05-25
2022-08-23
2022-07-25
2020-06-10
2022-05-16
2021-01-10
2021-12-04
2020-09-03
2021-01-14
2023-02-09
2020-12-25
2022-04-10
2020-08-26
2021-06-14
2021-12-29
2020-11-27
2023-02-04
2021-07-11
2021-10-08
2020-03-06
2020-06-24
2022-09-30
2020-05-28
2022-07-19
2021-06-18
2020-09-18
2020-02-01
2021-02-22
2022-01-29
2020-08-20
2022-07-20
2022-07-09
2022-03-30
2020-04-17
2022-06-30
2021-07-13
2020-02-22
2022-09-19
2022-10-09
2020-11-15
2022-08-24
2022-11-13
2021-05-11
2021-09-04
2021-10-19
2022-07-29
2021-03-02
2022-01-14
2021-04-10
2022-10-25
2021-11-07
2020-08-10
2023-01-13
2020-09-28
2020-07-31
2020-02-11
2020-02-24
2022-06-13
2022-10-07
2020-09-26
2021-02-04
2021-04-06
2022-04-17
2020-06-21
2021-09-17
2020-03-02
2023-02-12
2021-09-01
2022-05-25
2021-11-25
2020-12-08
2022-02-17
2022-12-01
2020-12-24
2021-03-09
2020-06-12
2022-11-11
2022-06-23
2022-07-16
2020-03-14
2022-12-19
2021-11-29
2021-05-24
2022-01-21
2022-01-04
2020-06-30
2020-07-30
2021-01-24
2022-12-04
2022-03-10
2023-02-27
2020-05-19
2023-01-30
2021-01-25
2022-11-01
2020-12-19
2021-04-23
2020-07-14
2021-02-11
2021-12-16
2020-02-27
2022-12-12
2022-07-08
2021-06-11
2022-09-13
2022-03-16
2022-02-23
2022-12-28
2022-11-02
2021-03-18
2021-09-10
2022-05-05
2020-07-26
2021-11-19
2022-04-02
2021-04-09
2020-05-06
2020-09-22
2020-11-06
2020-05-09
2022-01-30
2021-04-08
2021-08-06
2021-06-10
2022-12-31
2020-01-26
2021-03-20
2021-07-26
2020-03-28
2020-04-04
2020-09-19
2021-10-23
2021-01-18
2022-04-13
2021-04-16
2020-07-18
2020-12-16
2022-02-10
2022-03-23
2020-07-19
2022-09-03
2022-11-27
2020-10-29
2020-06-01
2022-11-12
2021-05-12
2021-10-26
2021-03-31
2022-06-28
2021-01-15
2022-03-31
2021-11-05
2021-03-19
2022-05-06
2020-05-07
2021-08-01
2022-03-18
2021-01-01
2022-07-23
2020-12-02
2021-06-27
2021-10-13
2022-11-19
2021-08-15
2021-05-08
2022-04-12
2022-09-22
2021-02-20
2020-04-05
2022-04-01
2021-12-06
2022-11-24
2022-01-03
2023-01-18
2020-02-28
2021-01-03
2020-12-03
2020-12-21
2021-06-25
2021-09-05
2022-11-22
2021-01-21
2022-05-08
2020-03-04
2021-11-30
2020-04-15
2022-11-04
2022-06-15
2021-06-16
2021-06-23
2021-01-23
2021-03-21
2023-02-18
2022-08-11
2020-02-19
2020-06-14
2020-11-22
2023-01-08
2022-04-18
2020-01-27
2021-08-07
2021-04-07
2020-11-09
2020-06-04
2022-12-08
2021-08-11
2020-08-04
2022-07-13
2021-04-18
2020-05-16
2020-06-16
2022-10-20
2020-07-16
2020-12-11
2021-10-24
2021-12-18
2020-09-23
2021-12-26
2023-03-06
2022-01-26
2022-07-31
2021-12-23
2020-01-30
2020-11-28
2022-12-09
2022-04-22
2022-04-23
2021-07-07
2021-06-17
2022-06-02
2020-06-08
2021-03-14
2021-03-06
2023-03-08
2022-05-01
2021-03-10
2021-07-24
2022-06-26
2021-02-05
2022-07-11
2021-05-03
2021-05-10
2020-10-13
2020-07-23
2022-06-05
2021-08-10
2021-01-27
2022-11-29
2021-04-17
2021-09-27
2023-01-04
2022-06-09
2022-08-05
2021-03-27
2022-02-25
2022-07-18
2021-06-04
2021-07-04
2021-07-12
2022-04-05
2020-06-28
2022-07-26
2021-01-11
2021-09-07
2020-12-10
2022-08-15
2023-02-07
2022-10-05
2020-03-12
2021-10-25
2022-06-27
2022-01-17
2023-01-20
2022-07-05
2021-02-15
2022-05-02
2021-05-04
2020-07-20
2020-05-11
2020-09-20
2021-10-17
2022-06-19
2022-12-15
2020-07-11
2021-10-12
2020-03-30
2021-09-24
2022-04-26
2020-11-07
2022-09-27
2021-12-17
2022-05-19
2020-11-10
2022-12-27
2021-10-29
2022-01-27
2020-10-02
2021-03-25
2020-12-17
2020-07-08
2020-05-08
2021-01-30
2022-06-10
2021-09-22
2021-06-22
2020-12-07
2020-04-26
2020-04-20
2022-10-31
2022-05-12
2022-08-22
2023-02-15
2021-05-27
2021-09-14
2022-02-19
2022-11-23
2022-09-20
2020-08-17
2023-01-17
2020-09-21
2022-05-09
2021-11-23
2020-05-21
2021-09-08
2020-11-24
2021-05-17
2022-06-12
2021-10-10
2020-08-13
2021-10-27
2023-01-27
2020-09-02
2020-01-25
2021-07-22
2022-03-06
2020-07-12
2020-02-18
2021-08-28
2020-12-29
2021-12-10
2022-07-01
2022-10-23
2020-12-12
2020-06-17
2021-04-04
2022-06-20
2022-07-15
2020-04-18
2020-11-23
2020-04-08
2021-01-29
2021-08-25
2022-07-14
2021-02-17
2022-06-08
2020-09-07
2020-10-16
2022-09-25
2023-02-20
2021-12-15
2021-08-17
2020-11-30
2021-04-26
2021-07-09
2022-07-21
2

2025-01-16 13:25:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:25:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:25:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:25:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 253
2025-01-16 13:25:55 - snowflake.connector.connection - INFO - closed
2025-01-16 13:25:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:25:55 - root - INFO - SQL:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   LIMIT 1000;
Results:
country_region
US
Canada
Spain
Andorra
Angola
Armenia
Benin
Comoros
Czechia
Fiji
Gabon
Greece
MS Zaandam
Nigeria
Sao Tome and Principe
Botswana
Cameroon
Chad
Chile
Costa Rica
Cuba
Djibouti
Ghana
Ireland
Kenya
Kosovo
Liechtenstein
Madagascar
Mexico
Morocco
Mozambique
Nepal
Niger
Sudan
Tanzania
Cabo Verde
Zimbabwe
Gibraltar
Channel Islands
Jersey
Brazil
Monaco
"Korea, South"
Lithuania
Nicaragua
Sri Lanka
Yemen
Zambia
Congo (Kinshasa)
Lesotho
Sweden
Thailand
Tunisia
Turkey
Mainland China
Vatican City
Nauru
"Bahamas, The"
Uzbekistan
Croatia
Hong Kong
Palestine
North Ireland
Italy
China
Netherlands
Germany
France
Albania
Argentina
Azerbaijan
Bosnia and Herzegovina
Bulgaria
El Salvador
Kyrgyzstan
Malaysia
Saint Kitts and Nevis
Brunei
Dominica
Honduras
Iceland
Indonesia
Kazakhstan
Mali
Moldova
Pakistan
Romania
San Marino
Tajikistan
Trinidad and Tobago
United Arab Emirates
Rwanda
Saint Lucia
Senegal
Palau
Tonga
Taipei and environs
Bangladesh
Belize
Estonia
Libya
Mauritius
Philippines
Togo
Guatemala
Jordan
Kuwait
Serbia
Seychelles
Somalia
Summer Olympics 2020
Winter Olympics 2022
Republic of Ireland
Macao SAR
Saint Martin
Reunion
Curacao
Puerto Rico
Portugal
Tuvalu
Iran (Islamic Republic of)
Aruba
"Gambia, The"
The Gambia
Ivory Coast
Cape Verde
Australia
Afghanistan
Algeria
Austria
Bahamas
Barbados
Burkina Faso
Colombia
Finland
Guinea
Hungary
India
Luxembourg
Belarus
Belgium
Bhutan
Jamaica
Japan
Laos
Malta
Namibia
New Zealand
Norway
Oman
Slovenia
Switzerland
Taiwan*
Vietnam
Western Sahara
Eswatini
Gambia
Israel
Lebanon
Saint Vincent and the Grenadines
Others
Macau
Republic of the Congo
Mongolia
Poland
Russia
Dominican Republic
Guinea-Bissau
Maldives
Mauritania
North Macedonia
Peru
Timor-Leste
Antarctica
South Korea
French Guiana
Martinique
occupied Palestinian territory
Cruise Ship
Guadeloupe
Greenland
West Bank and Gaza
Saint Barthelemy
Viet Nam
Cayman Islands
Guam
The Bahamas
 Azerbaijan
St. Martin
East Timor
United Kingdom
Denmark
Bahrain
Burma
Burundi
Cambodia
Central African Republic
Diamond Princess
Ecuador
Iran
Iraq
Latvia
Antigua and Barbuda
Bolivia
Cote d'Ivoire
Ethiopia
Guyana
Haiti
Liberia
Malawi
Panama
Paraguay
South Sudan
Suriname
Cyprus
Qatar
Saudi Arabia
Singapore
Venezuela
Marshall Islands
Vanuatu
UK
Taiwan
Faroe Islands
Mayotte
Congo (Brazzaville)
Equatorial Guinea
Eritrea
Grenada
Holy See
Montenegro
Papua New Guinea
Micronesia
Egypt
Georgia
Slovakia
South Africa
Syria
Ukraine
Uruguay
Kiribati
"Korea, North"
Samoa
Solomon Islands
Sierra Leone
Czech Republic
Republic of Korea
Hong Kong SAR
Russian Federation
Republic of Moldova
Guernsey
Uganda
""

2025-01-16 13:25:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:25:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:25:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:25:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:25:57 - snowflake.connector.connection - INFO - closed
2025-01-16 13:25:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:25:57 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   GROUP BY "country_region"
   LIMIT 1000;
Results:
country_region,total_confirmed_cases
US,784326
Spain,200210
China,83817
France,156480
Germany,147065
Italy,181228
Iran,83505

2025-01-16 13:25:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:25:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:25:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:25:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-16 13:25:58 - snowflake.connector.connection - INFO - closed
2025-01-16 13:25:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:25:59 - root - INFO - SQL:
SELECT DISTINCT "country"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
   LIMIT 1000;
Results:
country
Sint Maarten (Dutch part)
Not classified
West Bank and Gaza
Serbia
Cambodia
United Arab Emirates
Cyprus
Low income
Peru
Early-demographic dividend
Fiji
Chad
Middle East & North Africa (excluding high income)
Middle East & North Africa (IDA & IBRD countries)
Dominican Republic
Kenya
"Venezuela, RB"
Guinea
Pakistan
Latvia
Qatar
Nigeria
North Macedonia
Cabo Verde
Palau
Sao Tome and Principe
Pacific island small states
St. Martin (French part)
Faroe Islands
Ireland
Bhutan
Zambia
Isle of Man
Guatemala
Singapore
Finland
Montenegro
Barbados
Syrian Arab Republic
Costa Rica
St. Lucia
Afghanistan
Gibraltar
Low & middle income
Latin America & Caribbean (excluding high income)
World
Canada
Rwanda
Thailand
Solomon Islands
Japan
Albania
Andorra
South Asia
South Sudan
Azerbaijan
Jamaica
Portugal
Mali
"Congo, Dem. Rep."
IDA total
Zimbabwe
Sudan
OECD members
Maldives
Nauru
Namibia
South Africa
Pre-demographic dividend
Sierra Leone
Grenada
Mexico
Niger
Senegal
Trinidad and Tobago
Luxembourg
Indonesia
Cayman Islands
Ghana
Lower middle income
Saudi Arabia
Denmark
United States
Europe & Central Asia (IDA & IBRD countries)
"Yemen, Rep."
Least developed countries: UN classification
Central Europe and the Baltics
Brunei Darussalam
Philippines
Sri Lanka
China
Norway
Kosovo
Oman
Middle East & North Africa
East Asia & Pacific (IDA & IBRD countries)
San Marino
Poland
Fragile and conflict affected situations
Angola
Samoa
Honduras
Channel Islands
Burundi
Madagascar
"Macao SAR, China"
Mongolia
Other small states
Bahrain
United Kingdom
Moldova
Benin
Lebanon
Estonia
Middle income
Europe & Central Asia
Croatia
Mauritius
East Asia & Pacific
North America
Netherlands
Liberia
Lao PDR
Sub-Saharan Africa
Algeria
Armenia
Switzerland
Nepal
"Bahamas, The"
Hungary
Bulgaria
Brazil
Haiti
Germany
Europe & Central Asia (excluding high income)
Morocco
Liechtenstein
Ethiopia
Paraguay
High income
Late-demographic dividend
Tajikistan
Uruguay
Italy
Caribbean small states
Malta
"Korea, Dem. People’s Rep."
Post-demographic dividend
Lithuania
Bangladesh
Gabon
IDA blend
Panama
Vanuatu
Belgium
Spain
Euro area
IBRD only
Togo
Sub-Saharan Africa (excluding high income)
Puerto Rico
Greenland
Turkey
"Micronesia, Fed. Sts."
St. Kitts and Nevis
Slovenia
"Hong Kong SAR, China"
Small states
Tanzania
Tunisia
Marshall Islands
St. Vincent and the Grenadines
Vietnam
Equatorial Guinea
Burkina Faso
Dominica
Belarus
Austria
Antigua and Barbuda
Colombia
Chile
Kyrgyz Republic
Comoros
"Korea, Rep."
Belize
Russian Federation
Guyana
Ecuador
Turkmenistan
Malaysia
Cote d'Ivoire
Mauritania
Heavily indebted poor countries (HIPC)
New Zealand
Jordan
Sweden
Bosnia and Herzegovina
Nicaragua
Cameroon
South Asia (IDA & IBRD)
East Asia & Pacific (excluding high income)
IDA & IBRD total
British Virgin Islands
Arab World
Australia
Suriname
Tonga
"Congo, Rep."
Upper middle income
Lesotho
New Caledonia
Curacao
American Samoa
Iraq
Georgia
"Egypt, Arab Rep."
Turks and Caicos Islands
Aruba
IDA only
Sub-Saharan Africa (IDA & IBRD countries)
Tuvalu
Ukraine
Greece
Malawi
Czech Republic
Iceland
Latin America & the Caribbean (IDA & IBRD countries)
Latin America & Caribbean
Botswana
European Union
India
Libya
"Iran, Islamic Rep."
Israel
Seychelles
France
Mozambique
Eritrea
Myanmar
Kiribati
Argentina
Virgin Islands (U.S.)
Djibouti
Uzbekistan
Kuwait
Papua New Guinea
Eswatini
Uganda
Romania
Northern Mariana Islands
Slovak Republic
Somalia
Bermuda
Cuba
Monaco
Guam
Kazakhstan
Central African Republic
El Salvador
Timor-Leste
Guinea-Bissau
"Gambia, The"
Bolivia
French Polynesia

2025-01-16 13:25:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:25:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:25:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:26:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 13:26:00 - snowflake.connector.connection - INFO - closed
2025-01-16 13:26:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:26:53 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:26:53 - root - INFO - ```sql
SELECT a."country_name", a."year", a."value" AS "population"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" a
JOIN (
    SELECT "country_name", MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' 
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_name"
) b
ON a."country_name" = b."country_name" AND a."year" = b."latest_year"
WHERE a."indicator_name" = 'Population, total';
```

This SQL query retrieves the latest available population data for the specified countries from the `INDICATORS_DATA` table in the `WORLD_BANK_WDI` schema. It ensures that you get the most recent population figures without empty values.
2025-01-16 13:26:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:26:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:26:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:26:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 13:26:54 - snowflake.connector.connection - INFO - closed
2025-01-16 13:26:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:26:55 - root - INFO - SQL:
SELECT a."country_name", a."year", a."value" AS "population"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" a
JOIN (
    SELECT "country_name", MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' 
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_name"
) b
ON a."country_name" = b."country_name" AND a."year" = b."latest_year"
WHERE a."indicator_name" = 'Population, total';
Results:
country_name,year,population
United States,2020,329484123.0
China,2020,1410929362.0
Italy,2020,59554023.0
Spain,2020,47351567.0
Germany,2020,83240525.0
France,2020,67391582.0

2025-01-16 13:26:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:26:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:26:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:26:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 238
2025-01-16 13:26:56 - snowflake.connector.connection - INFO - closed
2025-01-16 13:26:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:26:57 - root - INFO - SQL:
SELECT DISTINCT "indicator_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" ILIKE '%population%'
   LIMIT 1000;
Results:
Too long, hard cut:
indicator_name
"Age dependency ratio, young (% of working-age population)"
People practicing open defecation (% of population)
"Employment to population ratio, 15+, female (%) (modeled ILO estimate)"
"Employment to population ratio, ages 15-24, total (%) (modeled ILO estimate)"
"Labor force participation rate, total (% of total population ages 15+) (national estimate)"
"Population ages 15-64, female (% of female population)"
"Population ages 25-29, male (% of male population)"
"Population, female"
"Population, male (% of total population)"
Rural population
"Population ages 40-44, male (% of male population)"
"Population ages 65 and above, female"
Refugee population by country or territory of asylum
"Population ages 65 and above, male"
People using at least basic sanitation services (% of population)
"Population ages 00-04, male (% of male population)"
"Population ages 55-59, female (% of female population)"
"Population, female (% of total population)"
"Population ages 60-64, female (% of female population)"
"People using at least basic drinking water services, urban (% of urban population)"
"Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)"
"Employment to population ratio, 15+, male (%) (national estimate)"
Population in urban agglomerations of more than 1 million
Prevalence of undernourishment (% of population)
"Incidence of HIV, ages 15-24 (per 1,000 uninfected population ages 15-24)"
"Age dependency ratio, old (% of working-age population)"
"Educational attainment, at least completed upper secondary, population 25+, female (%) (cumulative)"
"Educational attainment, Doctoral or equivalent, population 25+, female (%) (cumulative)"
"Educational attainment, at least Bachelor's or equivalent, population 25+, female (%) (cumulative)"
Coverage of social insurance programs in poorest quintile (% of population)
Urban population growth (annual %)
"Employment to population ratio, ages 15-24, male (%) (national estimate)"
Women's share of population ages 15+ living with HIV (%)
"People with basic handwashing facilities including soap and water, rural (% of rural population)"
Coverage of social safety net programs in richest quintile (% of population)
"Account ownership at a financial institution or with a mobile-money-service provider, richest 60% (% of population ages 15+)"
"Multidimensional poverty headcount ratio, female (% of female population)"
"Multidimensional poverty headcount ratio, male (% of male population)"
Refugee population by country or territory of origin
"Employment to population ratio, 15+, total (%) (modeled ILO estimate)"
People using safely managed sanitation services (% of population)
"Suicide mortality rate, female (per 100,000 female population)"
"Population ages 25-29, female (% of female population)"
"Population ages 80 and above, female (% of female population)"
Population growth (annual %)
"Employment to population ratio, 15+, male (%) (modeled ILO estimate)"
"Population ages 35-39, male (% of male population)"
"Share of youth not in education, employment or training, male (% of male youth population)"
"Population ages 60-64, male (% of male population)"
"Educational attainment, at least Master's or equivalent, population 25+, male (%) (cumulative)"
"People using safely managed drinking water services, rural (% of rural population)"
"Incidence of HIV, ages 15-49 (per 1,000 uninfected population ages 15-49)"
"Population ages 75-79, male (% of male population)"
"Specialist surgical workforce (per 100,000 population)"
"Population ages 50-54, female (% of female population)"
Poverty headcount ratio at $1.90 a day (2011 PPP) (% of population)
"Prevalence of HIV, total (% of population ages 15-49)"
International migrant stock (% of population)
Coverage of social insurance programs (% of population)
"Survey mean consumption or income per capita, total population (2011 PPP $ per day)"
Proportion of population spending more than 10% of household consumption or income on out-of-pocket health care expenditure (%)
Account ownership at a financial institution or with a mobile-money-service provider (% of population ages 15+)
"Mortality rate attributed to household and ambient air pollution, age-standardized (per 100,000 population)"
Coverage of social insurance programs in 2nd quintile (% of population)
"Annualized average growth rate in per capita real survey mean consumption or income, bottom 40% of population (%)"
Population density (people per sq. km of land area)
"Population ages 10-14, male (% of male population)"
"Mortality rate attributed to unintentional poisoning, female (per 100,000 female population)"
Proportion of population pushed below the $1.90 ($ 2011 PPP) poverty line by out-of-pocket health care expenditure (%)
"PM2.5 pollution, population exposed to levels exceeding WHO Interim Target-3 value (% of total)"
"Educational attainment, Doctoral or equivalent, population 25+, male (%) (cumulative)"
Coverage of 

2025-01-16 13:26:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:26:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:26:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:26:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 13:26:58 - snowflake.connector.connection - INFO - closed
2025-01-16 13:26:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:26:59 - root - INFO - SQL:
SELECT "country_name", "year", "value" AS "population"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" = 'Population, total' AND
         "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran') AND
         "year" = 2020
   LIMIT 1000;
Results:
country_name,year,population
United States,2020,329484123.0
Spain,2020,47351567.0
Germany,2020,83240525.0
France,2020,67391582.0
China,2020,1410929362.0
Italy,2020,59554023.0

2025-01-16 13:26:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:26:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:26:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-16 13:27:00 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:00 - root - INFO - SQL:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "country_region" ILIKE '%United%'
   LIMIT 1000;
Results:
country_region
United Kingdom
United Arab Emirates

2025-01-16 13:27:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 185
2025-01-16 13:27:02 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:02 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20'
   GROUP BY "country_region"
   ORDER BY "total_confirmed_cases" DESC
   LIMIT 1000;
Results:
country_region,total_confirmed_cases
US,784326
Spain,200210
Italy,181228
France,156480
Germany,147065
United Kingdom,125856
Turkey,90980
China,83817
Iran,83505
Russia,47121
Brazil,40743
Belgium,39983
Canada,37658
Netherlands,33588
Switzerland,27944
Portugal,20863
India,18539
Peru,16325
Ireland,15652
Austria,14795
Sweden,14777
Israel,13713
Japan,10797
"Korea, South",10674
Chile,10507
Saudi Arabia,10484
Ecuador,10128
Poland,9593
Romania,8936
Pakistan,8418
Mexico,8261
Singapore,8014
Denmark,7711
United Arab Emirates,7265
Norway,7156
Czechia,6900
Indonesia,6760
Serbia,6630
Australia,6547
Philippines,6459
Belarus,6264
Qatar,6015
Ukraine,5710
Malaysia,5425
Dominican Republic,4964
Panama,4467
Colombia,3977
Finland,3868
Luxembourg,3558
Egypt,3333
South Africa,3300
Morocco,3046
Bangladesh,2948
Argentina,2941
Thailand,2792
Algeria,2718
Moldova,2548
Greece,2245
Kuwait,1995
Hungary,1984
Bahrain,1907
Croatia,1881
Kazakhstan,1852
Iceland,1773
Uzbekistan,1627
Iraq,1574
Estonia,1535
New Zealand,1440
Azerbaijan,1436
Oman,1410
Armenia,1339
Slovenia,1335
Lithuania,1326
Bosnia and Herzegovina,1309
North Macedonia,1225
Slovakia,1173
Cameroon,1163
Cuba,1087
Ghana,1042
Afghanistan,1026
Bulgaria,929
Tunisia,884
Cote d'Ivoire,847
Djibouti,846
Cyprus,772
Latvia,739
Andorra,717
Diamond Princess,712
Lebanon,677
Nigeria,665
Costa Rica,662
Niger,648
Guinea,622
Albania,584
Burkina Faso,581
Kyrgyzstan,568
Bolivia,564
Uruguay,535
Kosovo,510
Honduras,477
San Marino,462
West Bank and Gaza,449
Malta,431
Jordan,425
Taiwan*,422
Georgia,402
Senegal,377
Congo (Kinshasa),332
Mauritius,328
Montenegro,312
Sri Lanka,304
Guatemala,289
Kenya,281
Vietnam,268
Venezuela,256
Tanzania,254
Mali,246
Somalia,237
Jamaica,223
El Salvador,218
Paraguay,208
Congo (Brazzaville),160
Rwanda,147
Brunei,138
Cambodia,122
Madagascar,121
Gabon,120
Burma,119
Trinidad and Tobago,114
Ethiopia,111
Sudan,107
Liberia,99
Monaco,94
Togo,84
Liechtenstein,81
Equatorial Guinea,79
Barbados,75
Maldives,69
Cabo Verde,67
Zambia,65
Guyana,65
Bahamas,60
Haiti,57
Uganda,56
Benin,54
Libya,51
Guinea-Bissau,50
Sierra Leone,43
Mozambique,39
Syria,39
Eritrea,39
Mongolia,33
Chad,33
Nepal,31
Zimbabwe,25
Eswatini,24
Angola,24
Antigua and Barbuda,23
Timor-Leste,22
Botswana,20
Laos,19
Belize,18
Fiji,18
Malawi,17
Dominica,16
Namibia,16
Saint Kitts and Nevis,15
Saint Lucia,15
Grenada,14
Central African Republic,12
Saint Vincent and the Grenadines,12
Seychelles,11
Suriname,10
Nicaragua,10
Gambia,10
Holy See,9
MS Zaandam,9
Papua New Guinea,7
Mauritania,7
Western Sahara,6
Burundi,5
Bhutan,5
South Sudan,4
Sao Tome and Principe,4
Yemen,1

2025-01-16 13:27:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 13:27:03 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:27:40 - root - INFO - ```sql
SELECT a."country_name", a."year", a."value" AS "population"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" a
JOIN (
    SELECT "country_name", MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' 
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    GROUP BY "country_name"
) b
ON a."country_name" = b."country_name" AND a."year" = b."latest_year"
WHERE a."indicator_name" = 'Population, total';
```

This SQL query retrieves the latest available population data for the specified countries, ensuring all population values are populated. Note that for Iran, the country name in the `INDICATORS_DATA` table is listed as **'Iran, Islamic Rep.'**, so we've updated the country name in the query accordingly.
2025-01-16 13:27:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:27:41 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:42 - root - INFO - SQL:
SELECT a."country_name", a."year", a."value" AS "population"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" a
JOIN (
    SELECT "country_name", MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' 
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    GROUP BY "country_name"
) b
ON a."country_name" = b."country_name" AND a."year" = b."latest_year"
WHERE a."indicator_name" = 'Population, total';
Results:
country_name,year,population
United States,2020,329484123.0
Italy,2020,59554023.0
China,2020,1410929362.0
"Iran, Islamic Rep.",2020,83992953.0
Spain,2020,47351567.0
Germany,2020,83240525.0
France,2020,67391582.0

2025-01-16 13:27:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-16 13:27:43 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:44 - root - INFO - SQL:
SELECT MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total';
Results:
latest_year
2020

2025-01-16 13:27:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 13:27:45 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:46 - root - INFO - SQL:
SELECT "province_state", "confirmed"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" = 'US'
    LIMIT 1000;
Results:
Too long, hard cut:
province_state,confirmed
South Carolina,17
Louisiana,114
Virginia,52
Idaho,598
Iowa,1
Kentucky,54
Missouri,12
Oklahoma,46
Colorado,915
Idaho,1
Illinois,34
Indiana,7
Mississippi,83
Nebraska,100
Ohio,3
Pennsylvania,85
Washington,41
Wisconsin,4
Vermont,61
South Carolina,70
Minnesota,1
Florida,218
North Carolina,50
California,1193
Colorado,7
New York,687
Wyoming,6
Virginia,61
Michigan,4
Mississippi,7
Illinois,2
North Carolina,3
Virginia,421
Oklahoma,1
Iowa,40
Michigan,42
Maryland,32
New York,30
North Carolina,2
Virginia,5
Pennsylvania,1042
Indiana,327
Kentucky,4
Louisiana,79
Ohio,84
South Carolina,6
Michigan,15
California,1
California,7
Virginia,14
Virginia,10
Mississippi,17
Alaska,155
Kansas,0
Kentucky,6
South Carolina,134
Tennessee,16
Texas,8
Missouri,1
Texas,19
Maine,35
Texas,23
Maryland,1098
Minnesota,95
North Carolina,18
Nebraska,1
Michigan,9
Arizona,202
Iowa,2
Georgia,21
Virginia,7
Texas,2
Colorado,1536
Colorado,7
Michigan,12
Arkansas,2
Virginia,593
Pennsylvania,38
Texas,1
Maine,2
Louisiana,512
North Carolina,4
Ohio,5
Wisconsin,2
Arkansas,12
Ohio,68
Washington,13
Louisiana,146
Texas,12
Kansas,6
Missouri,2
Ohio,3
Georgia,5
New Jersey,410
Oklahoma,1
Mississippi,44
Iowa,1
Ohio,23
Virginia,24
South Dakota,1
Texas,12
Alabama,28
Louisiana,69
Colorado,10
Georgia,19
Florida,17
Georgia,20
Alabama,117
Georgia,130
Kentucky,4
Maryland,1875
Maryland,1511
South Carolina,7
Texas,4
Georgia,15
Idaho,8
Michigan,0
Kansas,1
Alabama,22
West Virginia,4
North Dakota,3
Massachusetts,632
South Carolina,6
Kentucky,6
Wisconsin,6
Georgia,93
Michigan,26
Missouri,4
Indiana,140
Kansas,7
Georgia,255
Texas,44
Missouri,6
Kentucky,3
Virginia,0
Arkansas,5
Florida,57
Michigan,85
Wisconsin,3
South Dakota,21
Utah,55
North Carolina,15
South Carolina,225
Louisiana,36
Oklahoma,1
Pennsylvania,298
Montana,1
Minnesota,1
Oklahoma,2
Pennsylvania,15
Tennessee,76
Virginia,18
Texas,5
New Hampshire,26
Texas,126
Ohio,73
Minnesota,5
Georgia,15
Vermont,37
Arkansas,62
Indiana,4
Iowa,23
Minnesota,4
Mississippi,8
Missouri,3
Oregon,28
Tennessee,4
Washington,314
Michigan,4
New Jersey,13011
South Carolina,138
West Virginia,111
Pennsylvania,1945
Massachusetts,387
New Mexico,566
Georgia,10
Michigan,164
North Carolina,24
Alaska,1
Texas,1015
Alabama,32
Georgia,203
Louisiana,66
Montana,3
Wyoming,1
Minnesota,1
Idaho,3
Iowa,259
Indiana,6
North Carolina,2
Idaho,476
Pennsylvania,14
Texas,5
Virginia,0
Georgia,5
Tennessee,10
Alabama,22
Tennessee,46
Minnesota,24
Mississippi,85
Missouri,3
South Dakota,4
Illinois,4
Idaho,4
Idaho,24
Arkansas,3
Illinois,33
Indiana,154
Iowa,6
Kentucky,81
Missouri,94
West Virginia,2
Texas,1
Louisiana,233
Virginia,24
Colorado,352
Idaho,0
Kansas,7
Kentucky,7
Texas,57
North Dakota,1
Nebraska,1
Kentucky,29
Kentucky,13
Kentucky,7
Florida,42
Pennsylvania,25
Arkansas,7
Tennessee,37
Michigan,40
Georgia,20
West Virginia,1
Texas,315
Texas,170
Kentucky,1
Kentucky,6
Iowa,28
Florida,218
Massachusetts,1731
Rhode Island,67
Virginia,1
Montana,4
West Virginia,3
South Dakota,9
Georgia,23
New York,199
Colorado,101
Florida,4078
Indiana,14
Minnesota,7
Ohio,9
South Dakota,20
Texas,13
Wisconsin,285
South Dakota,0
North Carolina,36
Virginia,12
Georgia,35
Oklahoma,5
Iowa,11
Missouri,32
Virginia,12
Virginia,26
Pennsylvania,1886
Iowa,2
Virginia,5
Nebraska,55
Wisconsin,4
Kentucky,33
Georgia,30
Alabama,11
North Carolina,47
Illinois,8
Georgia,48
North Carolina,70
North Dakota,2
North Dakota,63
Texas,9
New Jersey,1663
Texas,9
Nebraska,1
Alabama,14
Iowa,1
Kansas,12
Kentucky,72
Missouri,24
Nebraska,1
Ohio,180
Pennsylvania,161
California,16
South Dakota,0
Georgia,80
North Carolina,212
West Virginia,34
Louisiana,1276
Oklahoma,52
California,12
Louisiana,324
Kentucky,11
Louisiana,15
Missouri,2
North Carolina,23
Texas,8
Vermont,12
Alabama,80
Florida,6
Georgia,61
Illinois,1
Michigan,148
Mississippi,42
South Carolina,6
Texas,21
Texas,1
Missouri,21
Kentucky,21
Wisconsin,6
Maryland,114
Idaho,1
Pennsylvania,19
Georgia,27
Missouri,33
New Jersey,2255
Louisiana,3
Pennsylvania,1
Texas,298
Texas,6
Kentucky,58
Tennessee,13
Virginia,9
Wyoming,13
Oklahoma,75
Georgia,7
Tennessee,8
Idaho,187
Missouri,36
New Jersey,212
Montana,6
Pennsylvania,144
Wyoming,4
Idaho,1
Minnesota,37
Maryland,39
Virginia,14
Arkansas,2
Georgia,305
Illinois,6
Indiana,7
Iowa,1
Kentucky,2
Maryland,335
Mississippi,14
New Hampshire,30
Ohio,16
Tennessee,15
Virginia,3
Texas,1
Nevada,28
Kentucky,4
Missouri,3
Oklahoma,1
Tennessee,5
North Carolina,24
Minnesota,14
Montana,13
Kentucky,1
Indiana,87
Iowa,1
Michigan,22
Minnesota,4
Missouri,53
Nebraska,4
North Dakota,246
Texas,11
Idaho,10
Texas,11
North Carolina,8
Louisiana,24
North Carolina,43
Georgia,23
New Mexico,1
New York,34
New York,36
Maryland,134
Iowa,26
Missouri,5
Nebraska,0
Utah,17
Pennsylvania,73
Iowa,14
Colorado,38
Alabama,257
Texas,35
Illinois,95
Ohio,8
Missouri,4
Maryland,392
Virginia,11
South Dakota,4
South Carolina,391
Michigan,12
Florida,139
Virginia,8
Virginia,41
Georgia,6
Kansas,1
Georgia,185
North Carolina,127
Georgia,7
Georgia,9
Kansas,3
New York,25
New Mexico,21
Tennesse

2025-01-16 13:27:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-16 13:27:47 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:47 - root - INFO - SQL:
SELECT DISTINCT "country_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' AND "year" = 2020
    LIMIT 1000;
Results:
country_name
"Venezuela, RB"
Greenland
Cabo Verde
Cameroon
"Egypt, Arab Rep."
Kenya
Sweden
Nauru
American Samoa
Gibraltar
Brazil
Chile
Dominican Republic
Lebanon
Bhutan
Afghanistan
Lower middle income
Canada
Mongolia
Fiji
"Macao SAR, China"
Bermuda
Nepal
Sudan
Latin America & Caribbean
Timor-Leste
New Zealand
Djibouti
Maldives
Guinea-Bissau
Croatia
South Asia
Uzbekistan
Sint Maarten (Dutch part)
Guam
West Bank and Gaza
Mozambique
Niger
OECD members
IDA & IBRD total
Jamaica
Heavily indebted poor countries (HIPC)
"Korea, Dem. People's Rep."
Cayman Islands
Israel
Chad
Belgium
Lithuania
Malawi
Bolivia
Jordan
Cambodia
Central African Republic
Upper middle income
Senegal
Malaysia
Vanuatu
Kazakhstan
Ukraine
Slovak Republic
Serbia
Italy
IDA blend
Kyrgyz Republic
Africa Western and Central
Belize
Ethiopia
Euro area
Other small states
Czech Republic
Russian Federation
Burundi
Sub-Saharan Africa (excluding high income)
Turks and Caicos Islands
Faroe Islands
World
Bulgaria
Least developed countries: UN classification
Middle East & North Africa (excluding high income)
French Polynesia
Low & middle income
East Asia & Pacific (excluding high income)
Papua New Guinea
United Kingdom
South Sudan
Palau
Syrian Arab Republic
Mali
Aruba
Germany
Myanmar
Nigeria
Armenia
Sri Lanka
Norway
Thailand
Nicaragua
Costa Rica
India
Peru
Mexico
Turkey
Angola
Europe & Central Asia (IDA & IBRD countries)
Middle income
High income
Finland
Switzerland
Namibia
Latin America & the Caribbean (IDA & IBRD countries)
Burkina Faso
Slovenia
Australia
Greece
Sub-Saharan Africa
Belarus
Ireland
Middle East & North Africa (IDA & IBRD countries)
Barbados
"Yemen, Rep."
IBRD only
Kosovo
Ghana
Austria
Cuba
Oman
Malta
Algeria
Europe & Central Asia
South Asia (IDA & IBRD)
Zambia
Small states
"Bahamas, The"
Monaco
El Salvador
San Marino
Guatemala
Pakistan
China
Tajikistan
Estonia
East Asia & Pacific (IDA & IBRD countries)
Fragile and conflict affected situations
Bangladesh
Denmark
European Union
Liberia
Trinidad and Tobago
Latin America & Caribbean (excluding high income)
Montenegro
St. Kitts and Nevis
Togo
Cote d'Ivoire
Solomon Islands
Somalia
Pacific island small states
Singapore
"Congo, Dem. Rep."
Brunei Darussalam
Albania
Post-demographic dividend
Turkmenistan
East Asia & Pacific
"Iran, Islamic Rep."
Dominica
Kiribati
St. Vincent and the Grenadines
Africa Eastern and Southern
Bosnia and Herzegovina
Lao PDR
Georgia
Late-demographic dividend
Romania
St. Lucia
Benin
Caribbean small states
North Macedonia
Colombia
Tunisia
Virgin Islands (U.S.)
Andorra
United States
"Korea, Rep."
Morocco
Europe & Central Asia (excluding high income)
Botswana
Zimbabwe
Poland
North America
Hungary
Channel Islands
British Virgin Islands
St. Martin (French part)
Low income
Gabon
Sub-Saharan Africa (IDA & IBRD countries)
Mauritania
Eswatini
Japan
Early-demographic dividend
Northern Mariana Islands
Guinea
Sao Tome and Principe
Isle of Man
Luxembourg
Lesotho
Madagascar
Spain
"Congo, Rep."
"Micronesia, Fed. Sts."
Vietnam
New Caledonia
"Hong Kong SAR, China"
Liechtenstein
Tanzania
Comoros
Portugal
Tuvalu
Argentina
Ecuador
Indonesia
Philippines
Paraguay
Uruguay
Iraq
Cyprus
Latvia
Honduras
Panama
South Africa
Puerto Rico
IDA total
Sierra Leone
Suriname
Moldova
Samoa
Tonga
France
Iceland
Azerbaijan
Equatorial Guinea
Netherlands
Rwanda
Bahrain
Seychelles
Haiti
Libya
Saudi Arabia
Arab World
Pre-demographic dividend
Mauritius
Curacao
Kuwait
Qatar
Antigua and Barbuda
Middle East & North Africa
IDA only
"Gambia, The"
Guyana
Central Europe and the Baltics
Uganda
Marshall Islands
United Arab Emirates
Grenada

2025-01-16 13:27:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 42
2025-01-16 13:27:49 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:49 - root - INFO - SQL:
SELECT "country_region", "date", SUM("confirmed") AS "total_confirmed_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" BETWEEN '2020-04-15' AND '2020-04-20' AND
          "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region", "date"
    LIMIT 1000;
Results:
country_region,date,total_confirmed_cases
US,2020-04-19,759086
Iran,2020-04-19,82211
US,2020-04-15,636350
France,2020-04-15,134582
Germany,2020-04-15,134753
Spain,2020-04-20,200210
US,2020-04-18,732197
Italy,2020-04-18,175925
France,2020-04-17,149130
Germany,2020-04-17,141397
Italy,2020-04-17,172434
China,2020-04-19,83805
Germany,2020-04-19,145184
Italy,2020-04-19,178972
Spain,2020-04-19,198674
Iran,2020-04-15,76389
China,2020-04-16,83403
Germany,2020-04-16,137698
Italy,2020-04-16,168941
Spain,2020-04-16,184948
Iran,2020-04-18,80868
Spain,2020-04-17,190839
France,2020-04-19,154097
Spain,2020-04-15,177644
France,2020-04-16,147091
Iran,2020-04-16,77995
China,2020-04-20,83817
France,2020-04-20,156480
Germany,2020-04-20,147065
Italy,2020-04-20,181228
Iran,2020-04-20,83505
France,2020-04-18,149149
Iran,2020-04-17,79494
Spain,2020-04-18,191726
China,2020-04-15,83356
Italy,2020-04-15,165155
US,2020-04-16,667801
US,2020-04-20,784326
China,2020-04-18,83787
Germany,2020-04-18,143342
US,2020-04-17,699706
China,2020-04-17,83760

2025-01-16 13:27:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:27:51 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:51 - root - INFO - SQL:
SELECT "country_region", SUM("deaths") AS "total_deaths"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
Results:
country_region,total_deaths
US,42094
Spain,20852
China,4636
France,20292
Germany,4862
Italy,24114
Iran,5209

2025-01-16 13:27:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:27:53 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:53 - root - INFO - SQL:
SELECT "country_region", SUM("active") AS "total_active_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
Results:
country_region,total_active_cases
US,669903
Spain,98771
China,1436
France,98152
Germany,50703
Italy,108237
Iran,19023

2025-01-16 13:27:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 13:27:54 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:55 - root - INFO - SQL:
SELECT "country_name", "year", "value" AS "population_density"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population density (people per sq. km of land area)' AND
          "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran') AND
          "year" = 2020
    LIMIT 1000;
Results:
country_name,year,population_density
France,2020,123.076834009975
United States,2020,36.0193500462426
Germany,2020,238.252118037667
China,2020,149.705447160568
Spain,2020,94.7782971703446
Italy,2020,200.026947234071

2025-01-16 13:27:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 61
2025-01-16 13:27:56 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:56 - root - INFO - SQL:
SELECT DISTINCT "year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
    ORDER BY "year" DESC
    LIMIT 1000;
Results:
year
2020
2019
2018
2017
2016
2015
2014
2013
2012
2011
2010
2009
2008
2007
2006
2005
2004
2003
2002
2001
2000
1999
1998
1997
1996
1995
1994
1993
1992
1991
1990
1989
1988
1987
1986
1985
1984
1983
1982
1981
1980
1979
1978
1977
1976
1975
1974
1973
1972
1971
1970
1969
1968
1967
1966
1965
1964
1963
1962
1961
1960

2025-01-16 13:27:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:27:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:27:58 - snowflake.connector.connection - INFO - closed
2025-01-16 13:27:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:27:58 - root - INFO - SQL:
SELECT "country_region", SUM(CAST("recovered" AS FLOAT)) AS "total_recovered_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND
          "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
Results:
country_region,total_recovered_cases
US,72329.0
Spain,80587.0
China,77745.0
France,38036.0
Germany,91500.0
Italy,48877.0
Iran,59273.0

2025-01-16 13:27:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:27:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:27:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:28:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 13:28:00 - snowflake.connector.connection - INFO - closed
2025-01-16 13:28:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:29:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:29:34 - root - INFO - ```sql
SELECT
  CASE 
    WHEN i."country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
    ELSE i."country_name"
  END AS "country",
  i."value" AS "population_indicators_data"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" i
WHERE i."indicator_name" = 'Population, total'
  AND i."year" = 2020
  AND i."country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.');
```
2025-01-16 13:29:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:29:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:29:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:29:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:29:35 - snowflake.connector.connection - INFO - closed
2025-01-16 13:29:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:29:36 - root - INFO - SQL:
SELECT
  CASE 
    WHEN i."country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
    ELSE i."country_name"
  END AS "country",
  i."value" AS "population_indicators_data"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" i
WHERE i."indicator_name" = 'Population, total'
  AND i."year" = 2020
  AND i."country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.');
Results:
country,population_indicators_data
United States,329484123.0
China,1410929362.0
Italy,59554023.0
France,67391582.0
Iran,83992953.0
Spain,47351567.0
Germany,83240525.0

2025-01-16 13:29:36 - root - INFO - itercount: 0
2025-01-16 13:29:36 - root - INFO - Database Name: COVID19_JHU_WORLD_BANK
Schema Name: COVID19_JHU_CSSE
DDL describes table information.
,0
table_name,CONFIRMED_CASES
description,
DDL,"create or replace TABLE CONFIRMED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,1
table_name,DEATHS
description,
DDL,"create or replace TABLE DEATHS (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,2
table_name,RECOVERED_CASES
description,
DDL,"create or replace TABLE RECOVERED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,3
table_name,SUMMARY
description,
DDL,"create or replace TABLE SUMMARY (
	""province_state"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""date"" DATE,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location_geom"" BINARY(8388608),
	""confirmed"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""recovered"" VARCHAR(16777216),
	""active"" NUMBER(38,0),
	""fips"" VARCHAR(16777216),
	""admin2"" VARCHAR(16777216),
	""combined_key"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_GLOBAL_POPULATION
DDL describes table information.
,0
table_name,POPULATION_BY_COUNTRY
description,
DDL,"create or replace TABLE POPULATION_BY_COUNTRY (
	""country"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""year_1960"" NUMBER(38,0),
	""year_1961"" NUMBER(38,0),
	""year_1962"" NUMBER(38,0),
	""year_1963"" NUMBER(38,0),
	""year_1964"" NUMBER(38,0),
	""year_1965"" NUMBER(38,0),
	""year_1966"" NUMBER(38,0),
	""year_1967"" NUMBER(38,0),
	""year_1968"" NUMBER(38,0),
	""year_1969"" NUMBER(38,0),
	""year_1970"" NUMBER(38,0),
	""year_1971"" NUMBER(38,0),
	""year_1972"" NUMBER(38,0),
	""year_1973"" NUMBER(38,0),
	""year_1974"" NUMBER(38,0),
	""year_1975"" NUMBER(38,0),
	""year_1976"" NUMBER(38,0),
	""year_1977"" NUMBER(38,0),
	""year_1978"" NUMBER(38,0),
	""year_1979"" NUMBER(38,0),
	""year_1980"" NUMBER(38,0),
	""year_1981"" NUMBER(38,0),
	""year_1982"" NUMBER(38,0),
	""year_1983"" NUMBER(38,0),
	""year_1984"" NUMBER(38,0),
	""year_1985"" NUMBER(38,0),
	""year_1986"" NUMBER(38,0),
	""year_1987"" NUMBER(38,0),
	""year_1988"" NUMBER(38,0),
	""year_1989"" NUMBER(38,0),
	""year_1990"" NUMBER(38,0),
	""year_1991"" NUMBER(38,0),
	""year_1992"" NUMBER(38,0),
	""year_1993"" NUMBER(38,0),
	""year_1994"" NUMBER(38,0),
	""year_1995"" NUMBER(38,0),
	""year_1996"" NUMBER(38,0),
	""year_1997"" NUMBER(38,0),
	""year_1998"" NUMBER(38,0),
	""year_1999"" NUMBER(38,0),
	""year_2000"" NUMBER(38,0),
	""year_2001"" NUMBER(38,0),
	""year_2002"" NUMBER(38,0),
	""year_2003"" NUMBER(38,0),
	""year_2004"" NUMBER(38,0),
	""year_2005"" NUMBER(38,0),
	""year_2006"" NUMBER(38,0),
	""year_2007"" NUMBER(38,0),
	""year_2008"" NUMBER(38,0),
	""year_2009"" NUMBER(38,0),
	""year_2010"" NUMBER(38,0),
	""year_2011"" NUMBER(38,0),
	""year_2012"" NUMBER(38,0),
	""year_2013"" NUMBER(38,0),
	""year_2014"" NUMBER(38,0),
	""year_2015"" NUMBER(38,0),
	""year_2016"" NUMBER(38,0),
	""year_2017"" NUMBER(38,0),
	""year_2018"" NUMBER(38,0),
	""year_2019"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_HEALTH_POPULATION
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0)
);"

,2
table_name,HEALTH_NUTRITION_POPULATION
description,
DDL,"create or replace TABLE HEALTH_NUTRITION_POPULATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" NUMBER(38,0),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,4
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_DEBT
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_Income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,INTERNATIONAL_DEBT
description,
DDL,"create or replace TABLE INTERNATIONAL_DEBT (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_EDUCATION
DDL describes table information.
,0
table_name,INTERNATIONAL_EDUCATION
description,
DDL,"create or replace TABLE INTERNATIONAL_EDUCATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_two_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_WDI
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,INDICATORS_DATA
description,
DDL,"create or replace TABLE INDICATORS_DATA (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIME
description,
DDL,"create or replace TABLE SERIES_TIME (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" VARCHAR(16777216),
	""latest_trade_data"" VARCHAR(16777216)
);"

,5
table_name,FOOTNOTES
description,
DDL,"create or replace TABLE FOOTNOTES (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}
Begin Exploring Related Columns
**Relevant Columns and Potential Usage:**

- **"COVID19_JHU_CSSE"."SUMMARY"."country_region"**: Provides the country name for COVID-19 data.
- **"COVID19_JHU_CSSE"."SUMMARY"."date"**: Date of the reported data.
- **"COVID19_JHU_CSSE"."SUMMARY"."confirmed"**: Total number of confirmed COVID-19 cases.
  - **Conditions**:
    - `"date" = '2020-04-20'`
    - `"country_region"` IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')

- **"WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"."country"**: Provides the country name for population data.
- **"WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"."year_2019"**: Population estimate for the year 2019.
  - **Conditions**:
    - `"country"` IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')

- **"WORLD_BANK_WDI"."INDICATORS_DATA"."country_name"**: Provides the country name for population data.
- **"WORLD_BANK_WDI"."INDICATORS_DATA"."indicator_name"**: Name of the indicator, e.g., 'Population, total'.
- **"WORLD_BANK_WDI"."INDICATORS_DATA"."year"**: Year of the data.
- **"WORLD_BANK_WDI"."INDICATORS_DATA"."value"**: Value of the indicator (population).
  - **Conditions**:
    - `"indicator_name" = 'Population, total'`
    - `"year" = 2020` (or latest available)
    - `"country_name"` IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')

---

**SQL Queries:**

1. **List all available dates from the COVID-19 summary data:**
   ```sql
   SELECT DISTINCT "date"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   LIMIT 1000;
   ```

2. **Retrieve all unique country names from the COVID-19 summary data:**
   ```sql
   SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   LIMIT 1000;
   ```

3. **Get total confirmed cases for specified countries on April 20, 2020:**
   ```sql
   SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   GROUP BY "country_region"
   LIMIT 1000;
   ```

4. **List all countries in the population data:**
   ```sql
   SELECT DISTINCT "country"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
   LIMIT 1000;
   ```

5. **Retrieve the 2019 population for the specified countries:**
   ```sql
   SELECT "country", "year_2019" AS "population_2019"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
   WHERE "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   LIMIT 1000;
   ```

6. **List all indicator names related to population in the World Bank Indicators data:**
   ```sql
   SELECT DISTINCT "indicator_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" ILIKE '%population%'
   LIMIT 1000;
   ```

7. **Retrieve the latest available population data for the specified countries:**
   ```sql
   SELECT "country_name", "year", "value" AS "population"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" = 'Population, total' AND
         "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran') AND
         "year" = 2020
   LIMIT 1000;
   ```
   *Note: If 2020 data is not available, adjust `"year"` to the latest year available.*

8. **Check for discrepancies in country naming between datasets (e.g., 'US' vs 'United States'):**
   ```sql
   SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "country_region" ILIKE '%United%'
   LIMIT 1000;
   ```

9. **Get total confirmed cases for all countries on April 20, 2020, ordered by cases:**
   ```sql
   SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20'
   GROUP BY "country_region"
   ORDER BY "total_confirmed_cases" DESC
   LIMIT 1000;
   ```

10. **Retrieve population estimates from the population table for the latest available year:**
    ```sql
    SELECT "country", "year_2019" AS "population"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
    WHERE "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    LIMIT 1000;
    ```

11. **Find the latest year available for 'Population, total' in the Indicators data:**
    ```sql
    SELECT MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total';
    ```

12. **Retrieve COVID-19 confirmed cases for each province/state in the US on April 20, 2020:**
    ```sql
    SELECT "province_state", "confirmed"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" = 'US'
    LIMIT 1000;
    ```

13. **List all countries with population data for the year 2020:**
    ```sql
    SELECT DISTINCT "country_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' AND "year" = 2020
    LIMIT 1000;
    ```

14. **Retrieve COVID-19 data for the specified countries over a range of dates:**
    ```sql
    SELECT "country_region", "date", SUM("confirmed") AS "total_confirmed_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" BETWEEN '2020-04-15' AND '2020-04-20' AND
          "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region", "date"
    LIMIT 1000;
    ```

15. **Get the total number of deaths for the specified countries on April 20, 2020:**
    ```sql
    SELECT "country_region", SUM("deaths") AS "total_deaths"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
    ```

16. **Calculate the active COVID-19 cases for the specified countries on April 20, 2020:**
    ```sql
    SELECT "country_region", SUM("active") AS "total_active_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
    ```

17. **Retrieve population density data for the specified countries:**
    ```sql
    SELECT "country_name", "year", "value" AS "population_density"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population density (people per sq. km of land area)' AND
          "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran') AND
          "year" = 2020
    LIMIT 1000;
    ```
    *Note: Adjust `"year"` if 2020 data is not available.*

18. **List all years available for the 'Population, total' indicator:**
    ```sql
    SELECT DISTINCT "year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
    ORDER BY "year" DESC
    LIMIT 1000;
    ```

19. **Retrieve COVID-19 recovered cases for the specified countries on April 20, 2020:**
    ```sql
    SELECT "country_region", SUM(CAST("recovered" AS FLOAT)) AS "total_recovered_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND
          "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
    ```
    *Note: The `"recovered"` column may need casting if it's stored as a string.*

20. **Check for population data consistency across different datasets:**
    ```sql
    SELECT p."country", p."year_2019" AS "population_by_country", i."value" AS "population_indicators_data"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY" p
    JOIN "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" i
      ON p."country" = i."country_name" AND i."indicator_name" = 'Population, total' AND i."year" = 2019
    WHERE p."country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    LIMIT 1000;
    ```

These queries help in understanding the available data related to confirmed COVID-19 cases and population estimates for the specified countries, as well as ensuring consistency and compatibility between different datasets.Query:
SELECT DISTINCT "date"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   LIMIT 1000;
Answer:
Too long, hard cut:
date
2022-10-16
2021-08-23
2020-12-04
2021-09-28
2021-01-28
2020-02-17
2021-07-17
2021-04-27
2020-08-16
2023-01-05
2021-03-01
2020-03-23
2020-01-24
2020-01-31
2021-11-01
2021-08-05
2022-10-14
2021-10-14
2022-11-25
2020-09-01
2021-04-05
2021-03-23
2022-06-21
2021-10-03
2022-08-21
2020-02-03
2021-09-03
2023-02-01
2023-02-28
2020-04-09
2023-03-07
2020-12-20
2022-09-09
2022-10-13
2020-08-25
2022-04-06
2023-01-21
2021-05-18
2020-11-21
2022-01-08
2021-02-03
2022-01-05
2022-02-13
2020-08-05
2021-10-18
2022-10-30
2020-08-15
2022-07-30
2021-02-24
2020-06-25
2022-04-16
2021-07-03
2022-03-07
2020-10-15
2023-02-25
2020-08-09
2021-08-27
2020-02-20
2020-03-20
2022-11-30
2022-03-05
2020-10-17
2020-04-16
2022-09-17
2021-11-03
2021-08-03
2022-03-29
2020-11-16
2021-08-04
2020-09-11
2022-05-10
2021-05-14
2022-12-23
2022-06-14
2020-05-30
2021-12-02
2020-04-21
2021-07-10
2022-02-27
2022-08-30
2020-05-29
2022-05-17
2020-11-17
2020-05-24
2020-03-29
2021-04-20
2020-05-17
2022-09-02
2020-07-09
2020-05-25
2022-08-23
2022-07-25
2020-06-10
2022-05-16
2021-01-10
2021-12-04
2020-09-03
2021-01-14
2023-02-09
2020-12-25
2022-04-10
2020-08-26
2021-06-14
2021-12-29
2020-11-27
2023-02-04
2021-07-11
2021-10-08
2020-03-06
2020-06-24
2022-09-30
2020-05-28
2022-07-19
2021-06-18
2020-09-18
2020-02-01
2021-02-22
2022-01-29
2020-08-20
2022-07-20
2022-07-09
2022-03-30
2020-04-17
2022-06-30
2021-07-13
2020-02-22
2022-09-19
2022-10-09
2020-11-15
2022-08-24
2022-11-13
2021-05-11
2021-09-04
2021-10-19
2022-07-29
2021-03-02
2022-01-14
2021-04-10
2022-10-25
2021-11-07
2020-08-10
2023-01-13
2020-09-28
2020-07-31
2020-02-11
2020-02-24
2022-06-13
2022-10-07
2020-09-26
2021-02-04
2021-04-06
2022-04-17
2020-06-21
2021-09-17
2020-03-02
2023-02-12
2021-09-01
2022-05-25
2021-11-25
2020-12-08
2022-02-17
2022-12-01
2020-12-24
2021-03-09
2020-06-12
2022-11-11
2022-06-23
2022-07-16
2020-03-14
2022-12-19
2021-11-29
2021-05-24
2022-01-21
2022-01-04
2020-06-30
2020-07-30
2021-01-24
2022-12-04
2022-03-10
2023-02-27
2020-05-19
2023-01-30
2021-01-25
2022-11-01
2020-12-19
2021-04-23
2020-07-14
2021-02-11
2021-12-16
2020-02-27
2022-12-12
2022-07-08
2021-06-11
2022-09-13
2022-03-16
2022-02-23
2022-12-28
2022-11-02
2021-03-18
2021-09-10
2022-05-05
2020-07-26
2021-11-19
2022-04-02
2021-04-09
2020-05-06
2020-09-22
2020-11-06
2020-05-09
2022-01-30
2021-04-08
2021-08-06
2021-06-10
2022-12-31
2020-01-26
2021-03-20
2021-07-26
2020-03-28
2020-04-04
2020-09-19
2021-10-23
2021-01-18
2022-04-13
2021-04-16
2020-07-18
2020-12-16
2022-02-10
2022-03-23
2020-07-19
2022-09-03
2022-11-27
2020-10-29
2020-06-01
2022-11-12
2021-05-12
2021-10-26
2021-03-31
2022-06-28
2021-01-15
2022-03-31
2021-11-05
2021-03-19
2022-05-06
2020-05-07
2021-08-01
2022-03-18
2021-01-01
2022-07-23
2020-12-02
2021-06-27
2021-10-13
2022-11-19
2021-08-15
2021-05-08
2022-04-12
2022-09-22
2021-02-20
2020-04-05
2022-04-01
2021-12-06
2022-11-24
2022-01-03
2023-01-18
2020-02-28
2021-01-03
2020-12-03
2020-12-21
2021-06-25
2021-09-05
2022-11-22
2021-01-21
2022-05-08
2020-03-04
2021-11-30
2020-04-15
2022-11-04
2022-06-15
2021-06-16
2021-06-23
2021-01-23
2021-03-21
2023-02-18
2022-08-11
2020-02-19
2020-06-14
2020-11-22
2023-01-08
2022-04-18
2020-01-27
2021-08-07
2021-04-07
2020-11-09
2020-06-04
2022-12-08
2021-08-11
2020-08-04
2022-07-13
2021-04-18
2020-05-16
2020-06-16
2022-10-20
2020-07-16
2020-12-11
2021-10-24
2021-12-18
2020-09-23
2021-12-26
2023-03-06
2022-01-26
2022-07-31
2021-12-23
2020-01-30
2020-11-28
2022-12-09
2022-04-22
2022-04-23
2021-07-07
2021-06-17
2022-06-02
2020-06-08
2021-03-14
2021-03-06
2023-03-08
2022-05-01
2021-03-10
2021-07-24
2022-06-26
2021-02-05
2022-07-11
2021-05-03
2021-05-10
2020-10-13
2020-07-23
2022-06-05
2021-08-10
2021-01-27
2022-11-29
2021-04-17
2021-09-27
2023-01-04
2022-06-09
2022-08-05
2021-03-27
2022-02-25
2022-07-18
2021-06-04
2021-07-04
2021-07-12
2022-04-05
2020-06-28
2022-07-26
2021-01-11
2021-09-07
2020-12-10
2022-08-15
2023-02-07
2022-10-05
2020-03-12
2021-10-25
2022-06-27
2022-01-17
2023-01-20
2022-07-05
2021-02-15
2022-05-02
2021-05-04
2020-07-20
2020-05-11
2020-09-20
2021-10-17
2022-06-19
2022-12-15
2020-07-11
2021-10-12
2020-03-30
2021-09-24
2022-04-26
2020-11-07
2022-09-27
2021-12-17
2022-05-19
2020-11-10
2022-12-27
2021-10-29
2022-01-27
2020-10-02
2021-03-25
2020-12-17
2020-07-08
2020-05-08
2021-01-30
2022-06-10
2021-09-22
2021-06-22
2020-12-07
2020-04-26
2020-04-20
2022-10-31
2022-05-12
2022-08-22
2023-02-15
2021-05-27
2021-09-14
2022-02-19
2022-11-23
2022-09-20
2020-08-17
2023-01-17
2020-09-21
2022-05-09
2021-11-23
2020-05-21
2021-09-08
2020-11-24
2021-05-17
2022-06-12
2021-10-10
2020-08-13
2021-10-27
2023-01-27
2020-09-02
2020-01-25
2021-07-22
2022-03-06
2020-07-12
2020-02-18
2021-08-28
2020-12-29
2021-12-10
2022-07-01
2022-10-23
2020-12-12
2020-06-17
2021-04-04
2022-06-20
2022-07-15
2020-04-18
2020-11-23
2020-04-08
2021-01-29
2021-08-25
2022-07-14
2021-02-17
2022-06-08
2020-09-07
2020-10-16
2022-09-25
2023-02-20
2021-12-15
2021-08-17
2020-11-30
2021-04-26
2021-07-09
2022-07-21
2
Query:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   LIMIT 1000;
Answer:
country_region
US
Canada
Spain
Andorra
Angola
Armenia
Benin
Comoros
Czechia
Fiji
Gabon
Greece
MS Zaandam
Nigeria
Sao Tome and Principe
Botswana
Cameroon
Chad
Chile
Costa Rica
Cuba
Djibouti
Ghana
Ireland
Kenya
Kosovo
Liechtenstein
Madagascar
Mexico
Morocco
Mozambique
Nepal
Niger
Sudan
Tanzania
Cabo Verde
Zimbabwe
Gibraltar
Channel Islands
Jersey
Brazil
Monaco
"Korea, South"
Lithuania
Nicaragua
Sri Lanka
Yemen
Zambia
Congo (Kinshasa)
Lesotho
Sweden
Thailand
Tunisia
Turkey
Mainland China
Vatican City
Nauru
"Bahamas, The"
Uzbekistan
Croatia
Hong Kong
Palestine
North Ireland
Italy
China
Netherlands
Germany
France
Albania
Argentina
Azerbaijan
Bosnia and Herzegovina
Bulgaria
El Salvador
Kyrgyzstan
Malaysia
Saint Kitts and Nevis
Brunei
Dominica
Honduras
Iceland
Indonesia
Kazakhstan
Mali
Moldova
Pakistan
Romania
San Marino
Tajikistan
Trinidad and Tobago
United Arab Emirates
Rwanda
Saint Lucia
Senegal
Palau
Tonga
Taipei and environs
Bangladesh
Belize
Estonia
Libya
Mauritius
Philippines
Togo
Guatemala
Jordan
Kuwait
Serbia
Seychelles
Somalia
Summer Olympics 2020
Winter Olympics 2022
Republic of Ireland
Macao SAR
Saint Martin
Reunion
Curacao
Puerto Rico
Portugal
Tuvalu
Iran (Islamic Republic of)
Aruba
"Gambia, The"
The Gambia
Ivory Coast
Cape Verde
Australia
Afghanistan
Algeria
Austria
Bahamas
Barbados
Burkina Faso
Colombia
Finland
Guinea
Hungary
India
Luxembourg
Belarus
Belgium
Bhutan
Jamaica
Japan
Laos
Malta
Namibia
New Zealand
Norway
Oman
Slovenia
Switzerland
Taiwan*
Vietnam
Western Sahara
Eswatini
Gambia
Israel
Lebanon
Saint Vincent and the Grenadines
Others
Macau
Republic of the Congo
Mongolia
Poland
Russia
Dominican Republic
Guinea-Bissau
Maldives
Mauritania
North Macedonia
Peru
Timor-Leste
Antarctica
South Korea
French Guiana
Martinique
occupied Palestinian territory
Cruise Ship
Guadeloupe
Greenland
West Bank and Gaza
Saint Barthelemy
Viet Nam
Cayman Islands
Guam
The Bahamas
 Azerbaijan
St. Martin
East Timor
United Kingdom
Denmark
Bahrain
Burma
Burundi
Cambodia
Central African Republic
Diamond Princess
Ecuador
Iran
Iraq
Latvia
Antigua and Barbuda
Bolivia
Cote d'Ivoire
Ethiopia
Guyana
Haiti
Liberia
Malawi
Panama
Paraguay
South Sudan
Suriname
Cyprus
Qatar
Saudi Arabia
Singapore
Venezuela
Marshall Islands
Vanuatu
UK
Taiwan
Faroe Islands
Mayotte
Congo (Brazzaville)
Equatorial Guinea
Eritrea
Grenada
Holy See
Montenegro
Papua New Guinea
Micronesia
Egypt
Georgia
Slovakia
South Africa
Syria
Ukraine
Uruguay
Kiribati
"Korea, North"
Samoa
Solomon Islands
Sierra Leone
Czech Republic
Republic of Korea
Hong Kong SAR
Russian Federation
Republic of Moldova
Guernsey
Uganda
""
Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   GROUP BY "country_region"
   LIMIT 1000;
Answer:
country_region,total_confirmed_cases
US,784326
Spain,200210
China,83817
France,156480
Germany,147065
Italy,181228
Iran,83505
Query:
SELECT DISTINCT "country"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
   LIMIT 1000;
Answer:
country
Sint Maarten (Dutch part)
Not classified
West Bank and Gaza
Serbia
Cambodia
United Arab Emirates
Cyprus
Low income
Peru
Early-demographic dividend
Fiji
Chad
Middle East & North Africa (excluding high income)
Middle East & North Africa (IDA & IBRD countries)
Dominican Republic
Kenya
"Venezuela, RB"
Guinea
Pakistan
Latvia
Qatar
Nigeria
North Macedonia
Cabo Verde
Palau
Sao Tome and Principe
Pacific island small states
St. Martin (French part)
Faroe Islands
Ireland
Bhutan
Zambia
Isle of Man
Guatemala
Singapore
Finland
Montenegro
Barbados
Syrian Arab Republic
Costa Rica
St. Lucia
Afghanistan
Gibraltar
Low & middle income
Latin America & Caribbean (excluding high income)
World
Canada
Rwanda
Thailand
Solomon Islands
Japan
Albania
Andorra
South Asia
South Sudan
Azerbaijan
Jamaica
Portugal
Mali
"Congo, Dem. Rep."
IDA total
Zimbabwe
Sudan
OECD members
Maldives
Nauru
Namibia
South Africa
Pre-demographic dividend
Sierra Leone
Grenada
Mexico
Niger
Senegal
Trinidad and Tobago
Luxembourg
Indonesia
Cayman Islands
Ghana
Lower middle income
Saudi Arabia
Denmark
United States
Europe & Central Asia (IDA & IBRD countries)
"Yemen, Rep."
Least developed countries: UN classification
Central Europe and the Baltics
Brunei Darussalam
Philippines
Sri Lanka
China
Norway
Kosovo
Oman
Middle East & North Africa
East Asia & Pacific (IDA & IBRD countries)
San Marino
Poland
Fragile and conflict affected situations
Angola
Samoa
Honduras
Channel Islands
Burundi
Madagascar
"Macao SAR, China"
Mongolia
Other small states
Bahrain
United Kingdom
Moldova
Benin
Lebanon
Estonia
Middle income
Europe & Central Asia
Croatia
Mauritius
East Asia & Pacific
North America
Netherlands
Liberia
Lao PDR
Sub-Saharan Africa
Algeria
Armenia
Switzerland
Nepal
"Bahamas, The"
Hungary
Bulgaria
Brazil
Haiti
Germany
Europe & Central Asia (excluding high income)
Morocco
Liechtenstein
Ethiopia
Paraguay
High income
Late-demographic dividend
Tajikistan
Uruguay
Italy
Caribbean small states
Malta
"Korea, Dem. People’s Rep."
Post-demographic dividend
Lithuania
Bangladesh
Gabon
IDA blend
Panama
Vanuatu
Belgium
Spain
Euro area
IBRD only
Togo
Sub-Saharan Africa (excluding high income)
Puerto Rico
Greenland
Turkey
"Micronesia, Fed. Sts."
St. Kitts and Nevis
Slovenia
"Hong Kong SAR, China"
Small states
Tanzania
Tunisia
Marshall Islands
St. Vincent and the Grenadines
Vietnam
Equatorial Guinea
Burkina Faso
Dominica
Belarus
Austria
Antigua and Barbuda
Colombia
Chile
Kyrgyz Republic
Comoros
"Korea, Rep."
Belize
Russian Federation
Guyana
Ecuador
Turkmenistan
Malaysia
Cote d'Ivoire
Mauritania
Heavily indebted poor countries (HIPC)
New Zealand
Jordan
Sweden
Bosnia and Herzegovina
Nicaragua
Cameroon
South Asia (IDA & IBRD)
East Asia & Pacific (excluding high income)
IDA & IBRD total
British Virgin Islands
Arab World
Australia
Suriname
Tonga
"Congo, Rep."
Upper middle income
Lesotho
New Caledonia
Curacao
American Samoa
Iraq
Georgia
"Egypt, Arab Rep."
Turks and Caicos Islands
Aruba
IDA only
Sub-Saharan Africa (IDA & IBRD countries)
Tuvalu
Ukraine
Greece
Malawi
Czech Republic
Iceland
Latin America & the Caribbean (IDA & IBRD countries)
Latin America & Caribbean
Botswana
European Union
India
Libya
"Iran, Islamic Rep."
Israel
Seychelles
France
Mozambique
Eritrea
Myanmar
Kiribati
Argentina
Virgin Islands (U.S.)
Djibouti
Uzbekistan
Kuwait
Papua New Guinea
Eswatini
Uganda
Romania
Northern Mariana Islands
Slovak Republic
Somalia
Bermuda
Cuba
Monaco
Guam
Kazakhstan
Central African Republic
El Salvador
Timor-Leste
Guinea-Bissau
"Gambia, The"
Bolivia
French Polynesia
Query:
SELECT a."country_name", a."year", a."value" AS "population"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" a
JOIN (
    SELECT "country_name", MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' 
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_name"
) b
ON a."country_name" = b."country_name" AND a."year" = b."latest_year"
WHERE a."indicator_name" = 'Population, total';
Answer:
country_name,year,population
United States,2020,329484123.0
China,2020,1410929362.0
Italy,2020,59554023.0
Spain,2020,47351567.0
Germany,2020,83240525.0
France,2020,67391582.0
Query:
SELECT DISTINCT "indicator_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" ILIKE '%population%'
   LIMIT 1000;
Answer:
Too long, hard cut:
indicator_name
"Age dependency ratio, young (% of working-age population)"
People practicing open defecation (% of population)
"Employment to population ratio, 15+, female (%) (modeled ILO estimate)"
"Employment to population ratio, ages 15-24, total (%) (modeled ILO estimate)"
"Labor force participation rate, total (% of total population ages 15+) (national estimate)"
"Population ages 15-64, female (% of female population)"
"Population ages 25-29, male (% of male population)"
"Population, female"
"Population, male (% of total population)"
Rural population
"Population ages 40-44, male (% of male population)"
"Population ages 65 and above, female"
Refugee population by country or territory of asylum
"Population ages 65 and above, male"
People using at least basic sanitation services (% of population)
"Population ages 00-04, male (% of male population)"
"Population ages 55-59, female (% of female population)"
"Population, female (% of total population)"
"Population ages 60-64, female (% of female population)"
"People using at least basic drinking water services, urban (% of urban population)"
"Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)"
"Employment to population ratio, 15+, male (%) (national estimate)"
Population in urban agglomerations of more than 1 million
Prevalence of undernourishment (% of population)
"Incidence of HIV, ages 15-24 (per 1,000 uninfected population ages 15-24)"
"Age dependency ratio, old (% of working-age population)"
"Educational attainment, at least completed upper secondary, population 25+, female (%) (cumulative)"
"Educational attainment, Doctoral or equivalent, population 25+, female (%) (cumulative)"
"Educational attainment, at least Bachelor's or equivalent, population 25+, female (%) (cumulative)"
Coverage of social insurance programs in poorest quintile (% of population)
Urban population growth (annual %)
"Employment to population ratio, ages 15-24, male (%) (national estimate)"
Women's share of population ages 15+ living with HIV (%)
"People with basic handwashing facilities including soap and water, rural (% of rural population)"
Coverage of social safety net programs in richest quintile (% of population)
"Account ownership at a financial institution or with a mobile-money-service provider, richest 60% (% of population ages 15+)"
"Multidimensional poverty headcount ratio, female (% of female population)"
"Multidimensional poverty headcount ratio, male (% of male population)"
Refugee population by country or territory of origin
"Employment to population ratio, 15+, total (%) (modeled ILO estimate)"
People using safely managed sanitation services (% of population)
"Suicide mortality rate, female (per 100,000 female population)"
"Population ages 25-29, female (% of female population)"
"Population ages 80 and above, female (% of female population)"
Population growth (annual %)
"Employment to population ratio, 15+, male (%) (modeled ILO estimate)"
"Population ages 35-39, male (% of male population)"
"Share of youth not in education, employment or training, male (% of male youth population)"
"Population ages 60-64, male (% of male population)"
"Educational attainment, at least Master's or equivalent, population 25+, male (%) (cumulative)"
"People using safely managed drinking water services, rural (% of rural population)"
"Incidence of HIV, ages 15-49 (per 1,000 uninfected population ages 15-49)"
"Population ages 75-79, male (% of male population)"
"Specialist surgical workforce (per 100,000 population)"
"Population ages 50-54, female (% of female population)"
Poverty headcount ratio at $1.90 a day (2011 PPP) (% of population)
"Prevalence of HIV, total (% of population ages 15-49)"
International migrant stock (% of population)
Coverage of social insurance programs (% of population)
"Survey mean consumption or income per capita, total population (2011 PPP $ per day)"
Proportion of population spending more than 10% of household consumption or income on out-of-pocket health care expenditure (%)
Account ownership at a financial institution or with a mobile-money-service provider (% of population ages 15+)
"Mortality rate attributed to household and ambient air pollution, age-standardized (per 100,000 population)"
Coverage of social insurance programs in 2nd quintile (% of population)
"Annualized average growth rate in per capita real survey mean consumption or income, bottom 40% of population (%)"
Population density (people per sq. km of land area)
"Population ages 10-14, male (% of male population)"
"Mortality rate attributed to unintentional poisoning, female (per 100,000 female population)"
Proportion of population pushed below the $1.90 ($ 2011 PPP) poverty line by out-of-pocket health care expenditure (%)
"PM2.5 pollution, population exposed to levels exceeding WHO Interim Target-3 value (% of total)"
"Educational attainment, Doctoral or equivalent, population 25+, male (%) (cumulative)"
Coverage of 
Query:
SELECT "country_name", "year", "value" AS "population"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" = 'Population, total' AND
         "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran') AND
         "year" = 2020
   LIMIT 1000;
Answer:
country_name,year,population
United States,2020,329484123.0
Spain,2020,47351567.0
Germany,2020,83240525.0
France,2020,67391582.0
China,2020,1410929362.0
Italy,2020,59554023.0
Query:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "country_region" ILIKE '%United%'
   LIMIT 1000;
Answer:
country_region
United Kingdom
United Arab Emirates
Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20'
   GROUP BY "country_region"
   ORDER BY "total_confirmed_cases" DESC
   LIMIT 1000;
Answer:
country_region,total_confirmed_cases
US,784326
Spain,200210
Italy,181228
France,156480
Germany,147065
United Kingdom,125856
Turkey,90980
China,83817
Iran,83505
Russia,47121
Brazil,40743
Belgium,39983
Canada,37658
Netherlands,33588
Switzerland,27944
Portugal,20863
India,18539
Peru,16325
Ireland,15652
Austria,14795
Sweden,14777
Israel,13713
Japan,10797
"Korea, South",10674
Chile,10507
Saudi Arabia,10484
Ecuador,10128
Poland,9593
Romania,8936
Pakistan,8418
Mexico,8261
Singapore,8014
Denmark,7711
United Arab Emirates,7265
Norway,7156
Czechia,6900
Indonesia,6760
Serbia,6630
Australia,6547
Philippines,6459
Belarus,6264
Qatar,6015
Ukraine,5710
Malaysia,5425
Dominican Republic,4964
Panama,4467
Colombia,3977
Finland,3868
Luxembourg,3558
Egypt,3333
South Africa,3300
Morocco,3046
Bangladesh,2948
Argentina,2941
Thailand,2792
Algeria,2718
Moldova,2548
Greece,2245
Kuwait,1995
Hungary,1984
Bahrain,1907
Croatia,1881
Kazakhstan,1852
Iceland,1773
Uzbekistan,1627
Iraq,1574
Estonia,1535
New Zealand,1440
Azerbaijan,1436
Oman,1410
Armenia,1339
Slovenia,1335
Lithuania,1326
Bosnia and Herzegovina,1309
North Macedonia,1225
Slovakia,1173
Cameroon,1163
Cuba,1087
Ghana,1042
Afghanistan,1026
Bulgaria,929
Tunisia,884
Cote d'Ivoire,847
Djibouti,846
Cyprus,772
Latvia,739
Andorra,717
Diamond Princess,712
Lebanon,677
Nigeria,665
Costa Rica,662
Niger,648
Guinea,622
Albania,584
Burkina Faso,581
Kyrgyzstan,568
Bolivia,564
Uruguay,535
Kosovo,510
Honduras,477
San Marino,462
West Bank and Gaza,449
Malta,431
Jordan,425
Taiwan*,422
Georgia,402
Senegal,377
Congo (Kinshasa),332
Mauritius,328
Montenegro,312
Sri Lanka,304
Guatemala,289
Kenya,281
Vietnam,268
Venezuela,256
Tanzania,254
Mali,246
Somalia,237
Jamaica,223
El Salvador,218
Paraguay,208
Congo (Brazzaville),160
Rwanda,147
Brunei,138
Cambodia,122
Madagascar,121
Gabon,120
Burma,119
Trinidad and Tobago,114
Ethiopia,111
Sudan,107
Liberia,99
Monaco,94
Togo,84
Liechtenstein,81
Equatorial Guinea,79
Barbados,75
Maldives,69
Cabo Verde,67
Zambia,65
Guyana,65
Bahamas,60
Haiti,57
Uganda,56
Benin,54
Libya,51
Guinea-Bissau,50
Sierra Leone,43
Mozambique,39
Syria,39
Eritrea,39
Mongolia,33
Chad,33
Nepal,31
Zimbabwe,25
Eswatini,24
Angola,24
Antigua and Barbuda,23
Timor-Leste,22
Botswana,20
Laos,19
Belize,18
Fiji,18
Malawi,17
Dominica,16
Namibia,16
Saint Kitts and Nevis,15
Saint Lucia,15
Grenada,14
Central African Republic,12
Saint Vincent and the Grenadines,12
Seychelles,11
Suriname,10
Nicaragua,10
Gambia,10
Holy See,9
MS Zaandam,9
Papua New Guinea,7
Mauritania,7
Western Sahara,6
Burundi,5
Bhutan,5
South Sudan,4
Sao Tome and Principe,4
Yemen,1
Query:
SELECT a."country_name", a."year", a."value" AS "population"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" a
JOIN (
    SELECT "country_name", MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' 
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    GROUP BY "country_name"
) b
ON a."country_name" = b."country_name" AND a."year" = b."latest_year"
WHERE a."indicator_name" = 'Population, total';
Answer:
country_name,year,population
United States,2020,329484123.0
Italy,2020,59554023.0
China,2020,1410929362.0
"Iran, Islamic Rep.",2020,83992953.0
Spain,2020,47351567.0
Germany,2020,83240525.0
France,2020,67391582.0
Query:
SELECT MAX("year") AS "latest_year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total';
Answer:
latest_year
2020
Query:
SELECT "province_state", "confirmed"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" = 'US'
    LIMIT 1000;
Answer:
Too long, hard cut:
province_state,confirmed
South Carolina,17
Louisiana,114
Virginia,52
Idaho,598
Iowa,1
Kentucky,54
Missouri,12
Oklahoma,46
Colorado,915
Idaho,1
Illinois,34
Indiana,7
Mississippi,83
Nebraska,100
Ohio,3
Pennsylvania,85
Washington,41
Wisconsin,4
Vermont,61
South Carolina,70
Minnesota,1
Florida,218
North Carolina,50
California,1193
Colorado,7
New York,687
Wyoming,6
Virginia,61
Michigan,4
Mississippi,7
Illinois,2
North Carolina,3
Virginia,421
Oklahoma,1
Iowa,40
Michigan,42
Maryland,32
New York,30
North Carolina,2
Virginia,5
Pennsylvania,1042
Indiana,327
Kentucky,4
Louisiana,79
Ohio,84
South Carolina,6
Michigan,15
California,1
California,7
Virginia,14
Virginia,10
Mississippi,17
Alaska,155
Kansas,0
Kentucky,6
South Carolina,134
Tennessee,16
Texas,8
Missouri,1
Texas,19
Maine,35
Texas,23
Maryland,1098
Minnesota,95
North Carolina,18
Nebraska,1
Michigan,9
Arizona,202
Iowa,2
Georgia,21
Virginia,7
Texas,2
Colorado,1536
Colorado,7
Michigan,12
Arkansas,2
Virginia,593
Pennsylvania,38
Texas,1
Maine,2
Louisiana,512
North Carolina,4
Ohio,5
Wisconsin,2
Arkansas,12
Ohio,68
Washington,13
Louisiana,146
Texas,12
Kansas,6
Missouri,2
Ohio,3
Georgia,5
New Jersey,410
Oklahoma,1
Mississippi,44
Iowa,1
Ohio,23
Virginia,24
South Dakota,1
Texas,12
Alabama,28
Louisiana,69
Colorado,10
Georgia,19
Florida,17
Georgia,20
Alabama,117
Georgia,130
Kentucky,4
Maryland,1875
Maryland,1511
South Carolina,7
Texas,4
Georgia,15
Idaho,8
Michigan,0
Kansas,1
Alabama,22
West Virginia,4
North Dakota,3
Massachusetts,632
South Carolina,6
Kentucky,6
Wisconsin,6
Georgia,93
Michigan,26
Missouri,4
Indiana,140
Kansas,7
Georgia,255
Texas,44
Missouri,6
Kentucky,3
Virginia,0
Arkansas,5
Florida,57
Michigan,85
Wisconsin,3
South Dakota,21
Utah,55
North Carolina,15
South Carolina,225
Louisiana,36
Oklahoma,1
Pennsylvania,298
Montana,1
Minnesota,1
Oklahoma,2
Pennsylvania,15
Tennessee,76
Virginia,18
Texas,5
New Hampshire,26
Texas,126
Ohio,73
Minnesota,5
Georgia,15
Vermont,37
Arkansas,62
Indiana,4
Iowa,23
Minnesota,4
Mississippi,8
Missouri,3
Oregon,28
Tennessee,4
Washington,314
Michigan,4
New Jersey,13011
South Carolina,138
West Virginia,111
Pennsylvania,1945
Massachusetts,387
New Mexico,566
Georgia,10
Michigan,164
North Carolina,24
Alaska,1
Texas,1015
Alabama,32
Georgia,203
Louisiana,66
Montana,3
Wyoming,1
Minnesota,1
Idaho,3
Iowa,259
Indiana,6
North Carolina,2
Idaho,476
Pennsylvania,14
Texas,5
Virginia,0
Georgia,5
Tennessee,10
Alabama,22
Tennessee,46
Minnesota,24
Mississippi,85
Missouri,3
South Dakota,4
Illinois,4
Idaho,4
Idaho,24
Arkansas,3
Illinois,33
Indiana,154
Iowa,6
Kentucky,81
Missouri,94
West Virginia,2
Texas,1
Louisiana,233
Virginia,24
Colorado,352
Idaho,0
Kansas,7
Kentucky,7
Texas,57
North Dakota,1
Nebraska,1
Kentucky,29
Kentucky,13
Kentucky,7
Florida,42
Pennsylvania,25
Arkansas,7
Tennessee,37
Michigan,40
Georgia,20
West Virginia,1
Texas,315
Texas,170
Kentucky,1
Kentucky,6
Iowa,28
Florida,218
Massachusetts,1731
Rhode Island,67
Virginia,1
Montana,4
West Virginia,3
South Dakota,9
Georgia,23
New York,199
Colorado,101
Florida,4078
Indiana,14
Minnesota,7
Ohio,9
South Dakota,20
Texas,13
Wisconsin,285
South Dakota,0
North Carolina,36
Virginia,12
Georgia,35
Oklahoma,5
Iowa,11
Missouri,32
Virginia,12
Virginia,26
Pennsylvania,1886
Iowa,2
Virginia,5
Nebraska,55
Wisconsin,4
Kentucky,33
Georgia,30
Alabama,11
North Carolina,47
Illinois,8
Georgia,48
North Carolina,70
North Dakota,2
North Dakota,63
Texas,9
New Jersey,1663
Texas,9
Nebraska,1
Alabama,14
Iowa,1
Kansas,12
Kentucky,72
Missouri,24
Nebraska,1
Ohio,180
Pennsylvania,161
California,16
South Dakota,0
Georgia,80
North Carolina,212
West Virginia,34
Louisiana,1276
Oklahoma,52
California,12
Louisiana,324
Kentucky,11
Louisiana,15
Missouri,2
North Carolina,23
Texas,8
Vermont,12
Alabama,80
Florida,6
Georgia,61
Illinois,1
Michigan,148
Mississippi,42
South Carolina,6
Texas,21
Texas,1
Missouri,21
Kentucky,21
Wisconsin,6
Maryland,114
Idaho,1
Pennsylvania,19
Georgia,27
Missouri,33
New Jersey,2255
Louisiana,3
Pennsylvania,1
Texas,298
Texas,6
Kentucky,58
Tennessee,13
Virginia,9
Wyoming,13
Oklahoma,75
Georgia,7
Tennessee,8
Idaho,187
Missouri,36
New Jersey,212
Montana,6
Pennsylvania,144
Wyoming,4
Idaho,1
Minnesota,37
Maryland,39
Virginia,14
Arkansas,2
Georgia,305
Illinois,6
Indiana,7
Iowa,1
Kentucky,2
Maryland,335
Mississippi,14
New Hampshire,30
Ohio,16
Tennessee,15
Virginia,3
Texas,1
Nevada,28
Kentucky,4
Missouri,3
Oklahoma,1
Tennessee,5
North Carolina,24
Minnesota,14
Montana,13
Kentucky,1
Indiana,87
Iowa,1
Michigan,22
Minnesota,4
Missouri,53
Nebraska,4
North Dakota,246
Texas,11
Idaho,10
Texas,11
North Carolina,8
Louisiana,24
North Carolina,43
Georgia,23
New Mexico,1
New York,34
New York,36
Maryland,134
Iowa,26
Missouri,5
Nebraska,0
Utah,17
Pennsylvania,73
Iowa,14
Colorado,38
Alabama,257
Texas,35
Illinois,95
Ohio,8
Missouri,4
Maryland,392
Virginia,11
South Dakota,4
South Carolina,391
Michigan,12
Florida,139
Virginia,8
Virginia,41
Georgia,6
Kansas,1
Georgia,185
North Carolina,127
Georgia,7
Georgia,9
Kansas,3
New York,25
New Mexico,21
Tennesse
Query:
SELECT DISTINCT "country_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total' AND "year" = 2020
    LIMIT 1000;
Answer:
country_name
"Venezuela, RB"
Greenland
Cabo Verde
Cameroon
"Egypt, Arab Rep."
Kenya
Sweden
Nauru
American Samoa
Gibraltar
Brazil
Chile
Dominican Republic
Lebanon
Bhutan
Afghanistan
Lower middle income
Canada
Mongolia
Fiji
"Macao SAR, China"
Bermuda
Nepal
Sudan
Latin America & Caribbean
Timor-Leste
New Zealand
Djibouti
Maldives
Guinea-Bissau
Croatia
South Asia
Uzbekistan
Sint Maarten (Dutch part)
Guam
West Bank and Gaza
Mozambique
Niger
OECD members
IDA & IBRD total
Jamaica
Heavily indebted poor countries (HIPC)
"Korea, Dem. People's Rep."
Cayman Islands
Israel
Chad
Belgium
Lithuania
Malawi
Bolivia
Jordan
Cambodia
Central African Republic
Upper middle income
Senegal
Malaysia
Vanuatu
Kazakhstan
Ukraine
Slovak Republic
Serbia
Italy
IDA blend
Kyrgyz Republic
Africa Western and Central
Belize
Ethiopia
Euro area
Other small states
Czech Republic
Russian Federation
Burundi
Sub-Saharan Africa (excluding high income)
Turks and Caicos Islands
Faroe Islands
World
Bulgaria
Least developed countries: UN classification
Middle East & North Africa (excluding high income)
French Polynesia
Low & middle income
East Asia & Pacific (excluding high income)
Papua New Guinea
United Kingdom
South Sudan
Palau
Syrian Arab Republic
Mali
Aruba
Germany
Myanmar
Nigeria
Armenia
Sri Lanka
Norway
Thailand
Nicaragua
Costa Rica
India
Peru
Mexico
Turkey
Angola
Europe & Central Asia (IDA & IBRD countries)
Middle income
High income
Finland
Switzerland
Namibia
Latin America & the Caribbean (IDA & IBRD countries)
Burkina Faso
Slovenia
Australia
Greece
Sub-Saharan Africa
Belarus
Ireland
Middle East & North Africa (IDA & IBRD countries)
Barbados
"Yemen, Rep."
IBRD only
Kosovo
Ghana
Austria
Cuba
Oman
Malta
Algeria
Europe & Central Asia
South Asia (IDA & IBRD)
Zambia
Small states
"Bahamas, The"
Monaco
El Salvador
San Marino
Guatemala
Pakistan
China
Tajikistan
Estonia
East Asia & Pacific (IDA & IBRD countries)
Fragile and conflict affected situations
Bangladesh
Denmark
European Union
Liberia
Trinidad and Tobago
Latin America & Caribbean (excluding high income)
Montenegro
St. Kitts and Nevis
Togo
Cote d'Ivoire
Solomon Islands
Somalia
Pacific island small states
Singapore
"Congo, Dem. Rep."
Brunei Darussalam
Albania
Post-demographic dividend
Turkmenistan
East Asia & Pacific
"Iran, Islamic Rep."
Dominica
Kiribati
St. Vincent and the Grenadines
Africa Eastern and Southern
Bosnia and Herzegovina
Lao PDR
Georgia
Late-demographic dividend
Romania
St. Lucia
Benin
Caribbean small states
North Macedonia
Colombia
Tunisia
Virgin Islands (U.S.)
Andorra
United States
"Korea, Rep."
Morocco
Europe & Central Asia (excluding high income)
Botswana
Zimbabwe
Poland
North America
Hungary
Channel Islands
British Virgin Islands
St. Martin (French part)
Low income
Gabon
Sub-Saharan Africa (IDA & IBRD countries)
Mauritania
Eswatini
Japan
Early-demographic dividend
Northern Mariana Islands
Guinea
Sao Tome and Principe
Isle of Man
Luxembourg
Lesotho
Madagascar
Spain
"Congo, Rep."
"Micronesia, Fed. Sts."
Vietnam
New Caledonia
"Hong Kong SAR, China"
Liechtenstein
Tanzania
Comoros
Portugal
Tuvalu
Argentina
Ecuador
Indonesia
Philippines
Paraguay
Uruguay
Iraq
Cyprus
Latvia
Honduras
Panama
South Africa
Puerto Rico
IDA total
Sierra Leone
Suriname
Moldova
Samoa
Tonga
France
Iceland
Azerbaijan
Equatorial Guinea
Netherlands
Rwanda
Bahrain
Seychelles
Haiti
Libya
Saudi Arabia
Arab World
Pre-demographic dividend
Mauritius
Curacao
Kuwait
Qatar
Antigua and Barbuda
Middle East & North Africa
IDA only
"Gambia, The"
Guyana
Central Europe and the Baltics
Uganda
Marshall Islands
United Arab Emirates
Grenada
Query:
SELECT "country_region", "date", SUM("confirmed") AS "total_confirmed_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" BETWEEN '2020-04-15' AND '2020-04-20' AND
          "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region", "date"
    LIMIT 1000;
Answer:
country_region,date,total_confirmed_cases
US,2020-04-19,759086
Iran,2020-04-19,82211
US,2020-04-15,636350
France,2020-04-15,134582
Germany,2020-04-15,134753
Spain,2020-04-20,200210
US,2020-04-18,732197
Italy,2020-04-18,175925
France,2020-04-17,149130
Germany,2020-04-17,141397
Italy,2020-04-17,172434
China,2020-04-19,83805
Germany,2020-04-19,145184
Italy,2020-04-19,178972
Spain,2020-04-19,198674
Iran,2020-04-15,76389
China,2020-04-16,83403
Germany,2020-04-16,137698
Italy,2020-04-16,168941
Spain,2020-04-16,184948
Iran,2020-04-18,80868
Spain,2020-04-17,190839
France,2020-04-19,154097
Spain,2020-04-15,177644
France,2020-04-16,147091
Iran,2020-04-16,77995
China,2020-04-20,83817
France,2020-04-20,156480
Germany,2020-04-20,147065
Italy,2020-04-20,181228
Iran,2020-04-20,83505
France,2020-04-18,149149
Iran,2020-04-17,79494
Spain,2020-04-18,191726
China,2020-04-15,83356
Italy,2020-04-15,165155
US,2020-04-16,667801
US,2020-04-20,784326
China,2020-04-18,83787
Germany,2020-04-18,143342
US,2020-04-17,699706
China,2020-04-17,83760
Query:
SELECT "country_region", SUM("deaths") AS "total_deaths"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
Answer:
country_region,total_deaths
US,42094
Spain,20852
China,4636
France,20292
Germany,4862
Italy,24114
Iran,5209
Query:
SELECT "country_region", SUM("active") AS "total_active_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
Answer:
country_region,total_active_cases
US,669903
Spain,98771
China,1436
France,98152
Germany,50703
Italy,108237
Iran,19023
Query:
SELECT "country_name", "year", "value" AS "population_density"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population density (people per sq. km of land area)' AND
          "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran') AND
          "year" = 2020
    LIMIT 1000;
Answer:
country_name,year,population_density
France,2020,123.076834009975
United States,2020,36.0193500462426
Germany,2020,238.252118037667
China,2020,149.705447160568
Spain,2020,94.7782971703446
Italy,2020,200.026947234071
Query:
SELECT DISTINCT "year"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
    ORDER BY "year" DESC
    LIMIT 1000;
Answer:
year
2020
2019
2018
2017
2016
2015
2014
2013
2012
2011
2010
2009
2008
2007
2006
2005
2004
2003
2002
2001
2000
1999
1998
1997
1996
1995
1994
1993
1992
1991
1990
1989
1988
1987
1986
1985
1984
1983
1982
1981
1980
1979
1978
1977
1976
1975
1974
1973
1972
1971
1970
1969
1968
1967
1966
1965
1964
1963
1962
1961
1960
Query:
SELECT "country_region", SUM(CAST("recovered" AS FLOAT)) AS "total_recovered_cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND
          "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
    LIMIT 1000;
Answer:
country_region,total_recovered_cases
US,72329.0
Spain,80587.0
China,77745.0
France,38036.0
Germany,91500.0
Italy,48877.0
Iran,59273.0
Query:
SELECT
  CASE 
    WHEN i."country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
    ELSE i."country_name"
  END AS "country",
  i."value" AS "population_indicators_data"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" i
WHERE i."indicator_name" = 'Population, total'
  AND i."year" = 2020
  AND i."country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.');
Answer:
country,population_indicators_data
United States,329484123.0
China,1410929362.0
Italy,59554023.0
France,67391582.0
Iran,83992953.0
Spain,47351567.0
Germany,83240525.0
End Exploring Related Columns
Task: Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Country,Total Confirmed Cases,Cases per 100,000 people
United States,786000,237.7592
France,152894,235.9910
China,83853,5.9895
Italy,181228,302.0467
Spain,200210,426.1915
Germany,145743,175.6060
Iran,83505,100.6024
```

Here is the total number of confirmed COVID-19 cases and the number of cases per 100,000 people as of April 20, 2020, for the specified countries. The cases per 100,000 people were calculated using the 2020 population estimates..
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-16 13:30:45 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:30:45 - root - INFO - ```sql
WITH covid_data AS (
    SELECT 
        "country_region" AS "Country",
        SUM("confirmed") AS "Total Confirmed Cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20'
      AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
), population_data AS (
    SELECT 
        CASE 
            WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
            WHEN "country_name" = 'United States' THEN 'US'
            ELSE "country_name"
        END AS "Country",
        "value" AS "Population"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
      AND "year" = 2020
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT 
    c."Country",
    c."Total Confirmed Cases",
    ROUND( (c."Total Confirmed Cases" / p."Population") * 100000, 4) AS "Cases per 100,000 people"
FROM covid_data c
JOIN population_data p
ON c."Country" = p."Country"
ORDER BY c."Country";
```
2025-01-16 13:30:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:30:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:30:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:30:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:30:46 - snowflake.connector.connection - INFO - closed
2025-01-16 13:30:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:30:47 - root - INFO - itercount: 1
2025-01-16 13:30:47 - root - INFO - 0
2025-01-16 13:30:47 - root - INFO - results: 
Country,Total Confirmed Cases,"Cases per 100,000 people"
China,83817,5.9406
France,156480,232.1952
Germany,147065,176.6748
Iran,83505,99.4191
Italy,181228,304.3086
Spain,200210,422.816
US,784326,238.0467


2025-01-16 13:30:47 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Country,Total Confirmed Cases,Cases per 100,000 people
United States,786000,237.7592
France,152894,235.9910
China,83853,5.9895
Italy,181228,302.0467
Spain,200210,426.1915
Germany,145743,175.6060
Iran,83505,100.6024
```

Here is the total number of confirmed COVID-19 cases and the number of cases per 100,000 people as of April 20, 2020, for the specified countries. The cases per 100,000 people were calculated using the 2020 population estimates. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Country,Total Confirmed Cases,"Cases per 100,000 people"
China,83817,5.9406
France,156480,232.1952
Germany,147065,176.6748
Iran,83505,99.4191
Italy,181228,304.3086
Spain,200210,422.816
US,784326,238.0467
Current sql:
WITH covid_data AS (
    SELECT 
        "country_region" AS "Country",
        SUM("confirmed") AS "Total Confirmed Cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20'
      AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
), population_data AS (
    SELECT 
        CASE 
            WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
            WHEN "country_name" = 'United States' THEN 'US'
            ELSE "country_name"
        END AS "Country",
        "value" AS "Population"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
      AND "year" = 2020
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT 
    c."Country",
    c."Total Confirmed Cases",
    ROUND( (c."Total Confirmed Cases" / p."Population") * 100000, 4) AS "Cases per 100,000 people"
FROM covid_data c
JOIN population_data p
ON c."Country" = p."Country"
ORDER BY c."Country";
2025-01-16 13:31:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:31:29 - root - INFO - ```sql
WITH covid_data AS (
    SELECT 
        CASE 
            WHEN "country_region" = 'US' THEN 'United States'
            ELSE "country_region"
        END AS "Country",
        SUM("confirmed") AS "Total Confirmed Cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20'
      AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
), population_data AS (
    SELECT 
        CASE 
            WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
            ELSE "country_name"
        END AS "Country",
        "value" AS "Population"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
      AND "year" = 2020
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT 
    c."Country",
    c."Total Confirmed Cases",
    ROUND( (c."Total Confirmed Cases" / p."Population") * 100000, 4) AS "Cases per 100,000 people"
FROM covid_data c
JOIN population_data p
ON c."Country" = p."Country"
ORDER BY c."Country";
```
2025-01-16 13:31:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:31:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:31:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:31:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:31:31 - snowflake.connector.connection - INFO - closed
2025-01-16 13:31:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:31:31 - root - INFO - itercount: 2
2025-01-16 13:31:31 - root - INFO - 0
2025-01-16 13:31:31 - root - INFO - results: 
Country,Total Confirmed Cases,"Cases per 100,000 people"
China,83817,5.9406
France,156480,232.1952
Germany,147065,176.6748
Iran,83505,99.4191
Italy,181228,304.3086
Spain,200210,422.816
United States,784326,238.0467


2025-01-16 13:31:31 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Country,Total Confirmed Cases,Cases per 100,000 people
United States,786000,237.7592
France,152894,235.9910
China,83853,5.9895
Italy,181228,302.0467
Spain,200210,426.1915
Germany,145743,175.6060
Iran,83505,100.6024
```

Here is the total number of confirmed COVID-19 cases and the number of cases per 100,000 people as of April 20, 2020, for the specified countries. The cases per 100,000 people were calculated using the 2020 population estimates. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Country,Total Confirmed Cases,"Cases per 100,000 people"
China,83817,5.9406
France,156480,232.1952
Germany,147065,176.6748
Iran,83505,99.4191
Italy,181228,304.3086
Spain,200210,422.816
United States,784326,238.0467
Current sql:
WITH covid_data AS (
    SELECT 
        CASE 
            WHEN "country_region" = 'US' THEN 'United States'
            ELSE "country_region"
        END AS "Country",
        SUM("confirmed") AS "Total Confirmed Cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20'
      AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
), population_data AS (
    SELECT 
        CASE 
            WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
            ELSE "country_name"
        END AS "Country",
        "value" AS "Population"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
      AND "year" = 2020
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT 
    c."Country",
    c."Total Confirmed Cases",
    ROUND( (c."Total Confirmed Cases" / p."Population") * 100000, 4) AS "Cases per 100,000 people"
FROM covid_data c
JOIN population_data p
ON c."Country" = p."Country"
ORDER BY c."Country";
2025-01-16 13:32:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 13:32:06 - root - INFO - ```sql
WITH covid_data AS (
    SELECT 
        CASE 
            WHEN "country_region" = 'US' THEN 'United States'
            ELSE "country_region"
        END AS "Country",
        SUM("confirmed") AS "Total Confirmed Cases"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20'
      AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    GROUP BY "country_region"
), population_data AS (
    SELECT 
        CASE 
            WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
            WHEN "country_name" = 'United States' THEN 'United States'
            ELSE "country_name"
        END AS "Country",
        "value" AS "Population"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" = 'Population, total'
      AND "year" = 2020
      AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT 
    c."Country",
    c."Total Confirmed Cases",
    ROUND( (c."Total Confirmed Cases" / p."Population") * 100000, 4) AS "Cases per 100,000 people"
FROM covid_data c
JOIN population_data p
ON c."Country" = p."Country"
ORDER BY c."Country";
```
2025-01-16 13:32:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 13:32:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 13:32:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 13:32:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 13:32:07 - snowflake.connector.connection - INFO - closed
2025-01-16 13:32:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 13:32:08 - root - INFO - itercount: 3
2025-01-16 13:32:08 - root - INFO - 0
2025-01-16 13:32:08 - root - INFO - Total iteration counts: 3
