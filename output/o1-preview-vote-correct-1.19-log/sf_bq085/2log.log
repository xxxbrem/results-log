2025-01-20 00:21:12 - openai._base_client - INFO - Retrying request to /chat/completions in 0.401802 seconds
2025-01-20 00:22:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:22:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:22:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:22:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:22:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 201
2025-01-20 00:22:04 - snowflake.connector.connection - INFO - closed
2025-01-20 00:22:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:22:04 - root - INFO - SQL:
SELECT DISTINCT "country_or_region"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   LIMIT 1000;
Results:
country_or_region
Antarctica
Canada
Nauru
New Zealand
Palau
Summer Olympics 2020
Tonga
Tuvalu
United Kingdom
Micronesia
Kosovo
Romania
Lesotho
Djibouti
Bahamas
Norway
Algeria
Estonia
Albania
Burkina Faso
Chile
Mauritius
Cuba
Suriname
Czechia
Indonesia
Solomon Islands
Venezuela
Bahrain
Ireland
Liechtenstein
Costa Rica
Guinea-Bissau
Saint Kitts and Nevis
Luxembourg
Mozambique
South Sudan
Iraq
Andorra
Tajikistan
Bhutan
Oman
Sao Tome and Principe
Honduras
Slovenia
Ethiopia
Lithuania
Iran
West Bank and Gaza
Paraguay
Jamaica
Austria
Iceland
Cyprus
Cambodia
Nepal
Mali
Azerbaijan
Malawi
Sudan
Morocco
Singapore
France
Australia
Netherlands
Seychelles
Congo (Brazzaville)
Belize
Latvia
North Macedonia
Nigeria
Guyana
Kenya
Dominica
Bosnia and Herzegovina
Liberia
Ukraine
Guinea
Rwanda
Marshall Islands
Vanuatu
"Korea, North"
Winter Olympics 2022
Antigua and Barbuda
Togo
Somalia
Grenada
Eswatini
Laos
Peru
Armenia
Mexico
Guatemala
Moldova
Uruguay
Kuwait
Fiji
Colombia
Georgia
Bolivia
Comoros
Madagascar
Senegal
Namibia
Maldives
Yemen
Afghanistan
Switzerland
Slovakia
Hungary
Portugal
MS Zaandam
Ghana
Zambia
Egypt
Russia
Finland
Taiwan*
Haiti
South Africa
Kiribati
Syria
Poland
Samoa
Malta
Angola
Tunisia
Zimbabwe
Barbados
Chad
Turkey
Timor-Leste
Bangladesh
China
Belgium
Sweden
US
Sierra Leone
Spain
Italy
Japan
United Arab Emirates
Burma
Mauritania
Belarus
Ecuador
Kyrgyzstan
Papua New Guinea
Brazil
Trinidad and Tobago
Brunei
Monaco
Holy See
Panama
Eritrea
Bulgaria
Kazakhstan
Cote d'Ivoire
Tanzania
San Marino
Niger
Mongolia
Nicaragua
Central African Republic
Pakistan
Uzbekistan
Montenegro
Malaysia
Libya
Saint Vincent and the Grenadines
Gabon
Denmark
Cabo Verde
Congo (Kinshasa)
Croatia
Argentina
Greece
Burundi
Saint Lucia
Botswana
Lebanon
Gambia
Jordan
Cameroon
Benin
Israel
Equatorial Guinea
Germany
Qatar
Dominican Republic
Saudi Arabia
Serbia
Philippines
India
"Korea, South"
Thailand
Diamond Princess
Vietnam
Uganda
El Salvador
Sri Lanka

2025-01-20 00:22:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:22:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:22:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:22:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 289
2025-01-20 00:22:06 - snowflake.connector.connection - INFO - closed
2025-01-20 00:22:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:22:06 - root - INFO - SQL:
SELECT "country_or_region", "_4_20_20"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   LIMIT 1000;
Results:
country_or_region,_4_20_20
Antarctica,0
Canada,0
"Korea, North",0
Nauru,0
New Zealand,0
Palau,0
Summer Olympics 2020,0
Tonga,0
Tuvalu,0
United Kingdom,0
United Kingdom,0
Winter Olympics 2022,0
Micronesia,0
New Zealand,0
France,6
Australia,545
Kyrgyzstan,568
South Sudan,4
Kosovo,561
Romania,8936
Lesotho,0
United Kingdom,3
Netherlands,97
Seychelles,11
Djibouti,846
Bahamas,60
Congo (Brazzaville),160
France,163
Iraq,1574
Netherlands,14
Australia,104
Norway,7156
Antigua and Barbuda,23
France,18
Canada,5
Belize,18
Canada,256
Algeria,2718
Estonia,1535
Canada,13
Canada,0
Latvia,739
Albania,584
Togo,84
Burkina Faso,581
Chile,11375
Andorra,717
Tajikistan,0
Mauritius,328
Cuba,1087
Suriname,10
Mali,246
Burma,119
Haiti,44
Somalia,237
Bhutan,5
Papua New Guinea,7
North Macedonia,1225
United Kingdom,300
Grenada,14
Netherlands,5
Brazil,40743
Netherlands,34134
South Africa,3300
France,148
Czechia,6900
Nigeria,665
Guyana,65
Kenya,281
Australia,28
Indonesia,6760
Dominica,16
Libya,51
Eswatini,24
France,56
France,37
Laos,19
Mauritania,7
Peru,16325
Kiribati,0
Solomon Islands,0
United Kingdom,11
Canada,26
Saint Vincent and the Grenadines,12
France,271
Bosnia and Herzegovina,1309
Oman,1410
Qatar,6015
Canada,118
Liberia,91
Trinidad and Tobago,114
Armenia,1339
Ukraine,5710
Canada,2908
Venezuela,256
Bahrain,1907
Guinea,622
France,97
Sao Tome and Principe,4
Australia,200
Honduras,477
Netherlands,67
Mexico,8772
Brunei,138
United Kingdom,11
Gabon,120
Syria,39
United Kingdom,5
France,408
United Kingdom,86
France,1
Monaco,94
Guatemala,289
Slovenia,1335
Moldova,2548
Ireland,15652
New Zealand,1440
Rwanda,147
Holy See,9
Ethiopia,111
Lithuania,1140
Denmark,7515
Uruguay,535
Poland,9593
Iran,83505
Dominican Republic,4964
Cabo Verde,67
Samoa,0
Kuwait,1995
Malta,431
West Bank and Gaza,329
Liechtenstein,82
Costa Rica,662
Congo (Kinshasa),332
Fiji,18
United Kingdom,241
Colombia,3977
Azerbaijan,1436
Angola,24
Tunisia,884
Georgia,402
Malawi,17
Paraguay,208
Sudan,92
Croatia,1881
Denmark,11
Bolivia,564
Argentina,2941
Canada,21252
Guinea-Bissau,50
Panama,4467
Comoros,0
Zimbabwe,25
Belarus,6264
Greece,2245
Marshall Islands,0
United Kingdom,0
Vanuatu,0
Barbados,75
Eritrea,39
Madagascar,121
Senegal,377
Sierra Leone,43
Bulgaria,929
Ecuador,10128
United Kingdom,132
Kazakhstan,1852
Uganda,56
Saudi Arabia,10484
France,0
Canada,316
Burundi,5
Cote d'Ivoire,847
Jamaica,223
Chad,33
Canada,254
Saint Lucia,15
Tanzania,254
San Marino,461
Morocco,3046
Turkey,90980
Botswana,20
Namibia,16
Lebanon,677
Niger,648
Canada,721
Mongolia,33
United Kingdom,66
Nicaragua,9
Gambia,10
Maldives,69
United Kingdom,11
Austria,14789
Saint Kitts and Nevis,15
Timor-Leste,22
Canada,0
Iceland,1773
Yemen,1
Afghanistan,996
Switzerland,27944
Luxembourg,3558
Denmark,185
Mozambique,39
Central African Republic,12
Serbia,6630
El Salvador,218
Cyprus,767
Jordan,425
Slovakia,1173
Cameroon,1163
Bangladesh,2948
Hungary,1984
Benin,54
United Kingdom,239
Israel,14112
Canada,11
Portugal,20863
Equatorial Guinea,79
MS Zaandam,9
Pakistan,9565
China,2565
Ghana,1042
Zambia,65
Uzbekistan,1627
Montenegro,312
China,1
Belgium,39983
Sweden,15124
Sri Lanka,304
Egypt,3333
Cambodia,122
Nepal,31
China,45
China,1019
China,1268
France,153197
China,146
China,1276
China,189
China,197
China,1581
US,799531
China,147
Germany,141672
Vietnam,268
China,168
China,184
China,18
United Kingdom,130147
Spain,200210
Russia,47121
Australia,435
Finland,4230
Malaysia,5425
Taiwan*,422
China,254
China,256
China,355
Philippines,6459
India,18539
Italy,181228
"Korea, South",10674
China,328
China,638
Thailand,2792
China,593
Australia,1329
Australia,2963
Diamond Princess,712
China,905
China,561
Canada,1647
Australia,1019
Canada,13502
China,787
China,579
China,68128
China,1025
China,653
Japan,11258
China,75
China,194
China,76
Singapore,8014
China,104
United Arab Emirates,7265
China,139
China,937
China,991

2025-01-20 00:22:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:22:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:22:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:22:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-20 00:22:08 - snowflake.connector.connection - INFO - closed
2025-01-20 00:22:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:22:08 - root - INFO - SQL:
SELECT DISTINCT "country"
   FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
   LIMIT 1000;
Results:
country
Sint Maarten (Dutch part)
Not classified
West Bank and Gaza
Serbia
Cambodia
United Arab Emirates
Cyprus
Low income
Peru
Early-demographic dividend
Fiji
Chad
Middle East & North Africa (excluding high income)
Middle East & North Africa (IDA & IBRD countries)
Dominican Republic
Kenya
"Venezuela, RB"
Guinea
Pakistan
Latvia
Qatar
Nigeria
North Macedonia
Cabo Verde
Palau
Sao Tome and Principe
Pacific island small states
St. Martin (French part)
Faroe Islands
Ireland
Bhutan
Zambia
Isle of Man
Guatemala
Singapore
Finland
Montenegro
Barbados
Syrian Arab Republic
Costa Rica
St. Lucia
Afghanistan
Gibraltar
Low & middle income
Latin America & Caribbean (excluding high income)
World
Canada
Rwanda
Thailand
Solomon Islands
Japan
Albania
Andorra
South Asia
South Sudan
Azerbaijan
Jamaica
Portugal
Mali
"Congo, Dem. Rep."
IDA total
Zimbabwe
Sudan
OECD members
Maldives
Nauru
Namibia
South Africa
Pre-demographic dividend
Sierra Leone
Grenada
Mexico
Niger
Senegal
Trinidad and Tobago
Luxembourg
Indonesia
Cayman Islands
Ghana
Lower middle income
Saudi Arabia
Denmark
United States
Europe & Central Asia (IDA & IBRD countries)
"Yemen, Rep."
Least developed countries: UN classification
Central Europe and the Baltics
Brunei Darussalam
Philippines
Sri Lanka
China
Norway
Kosovo
Oman
Middle East & North Africa
East Asia & Pacific (IDA & IBRD countries)
San Marino
Poland
Fragile and conflict affected situations
Angola
Samoa
Honduras
Channel Islands
Burundi
Madagascar
"Macao SAR, China"
Mongolia
Other small states
Bahrain
United Kingdom
Moldova
Benin
Lebanon
Estonia
Middle income
Europe & Central Asia
Croatia
Mauritius
East Asia & Pacific
North America
Netherlands
Liberia
Lao PDR
Sub-Saharan Africa
Algeria
Armenia
Switzerland
Nepal
"Bahamas, The"
Hungary
Bulgaria
Brazil
Haiti
Germany
Europe & Central Asia (excluding high income)
Morocco
Liechtenstein
Ethiopia
Paraguay
High income
Late-demographic dividend
Tajikistan
Uruguay
Italy
Caribbean small states
Malta
"Korea, Dem. People’s Rep."
Post-demographic dividend
Lithuania
Bangladesh
Gabon
IDA blend
Panama
Vanuatu
Belgium
Spain
Euro area
IBRD only
Togo
Sub-Saharan Africa (excluding high income)
Puerto Rico
Greenland
Turkey
"Micronesia, Fed. Sts."
St. Kitts and Nevis
Slovenia
"Hong Kong SAR, China"
Small states
Tanzania
Tunisia
Marshall Islands
St. Vincent and the Grenadines
Vietnam
Equatorial Guinea
Burkina Faso
Dominica
Belarus
Austria
Antigua and Barbuda
Colombia
Chile
Kyrgyz Republic
Comoros
"Korea, Rep."
Belize
Russian Federation
Guyana
Ecuador
Turkmenistan
Malaysia
Cote d'Ivoire
Mauritania
Heavily indebted poor countries (HIPC)
New Zealand
Jordan
Sweden
Bosnia and Herzegovina
Nicaragua
Cameroon
South Asia (IDA & IBRD)
East Asia & Pacific (excluding high income)
IDA & IBRD total
British Virgin Islands
Arab World
Australia
Suriname
Tonga
"Congo, Rep."
Upper middle income
Lesotho
New Caledonia
Curacao
American Samoa
Iraq
Georgia
"Egypt, Arab Rep."
Turks and Caicos Islands
Aruba
IDA only
Sub-Saharan Africa (IDA & IBRD countries)
Tuvalu
Ukraine
Greece
Malawi
Czech Republic
Iceland
Latin America & the Caribbean (IDA & IBRD countries)
Latin America & Caribbean
Botswana
European Union
India
Libya
"Iran, Islamic Rep."
Israel
Seychelles
France
Mozambique
Eritrea
Myanmar
Kiribati
Argentina
Virgin Islands (U.S.)
Djibouti
Uzbekistan
Kuwait
Papua New Guinea
Eswatini
Uganda
Romania
Northern Mariana Islands
Slovak Republic
Somalia
Bermuda
Cuba
Monaco
Guam
Kazakhstan
Central African Republic
El Salvador
Timor-Leste
Guinea-Bissau
"Gambia, The"
Bolivia
French Polynesia

2025-01-20 00:22:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:22:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:22:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:22:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-20 00:22:10 - snowflake.connector.connection - INFO - closed
2025-01-20 00:22:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:23:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:23:19 - root - INFO - ```sql
SELECT
    c."country_or_region" AS "Country",
    SUM(c."_4_20_20") AS "Total_Confirmed_Cases",
    (SUM(c."_4_20_20")::FLOAT / p."Population") * 100000 AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE("year_2019", "year_2018", "year_2017") AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
LIMIT 1000;
```
2025-01-20 00:23:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:23:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:23:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:23:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 00:23:20 - snowflake.connector.connection - INFO - closed
2025-01-20 00:23:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:24:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:24:57 - root - INFO - SQL:
SELECT
    c."country_or_region" AS "Country",
    SUM(c."_4_20_20") AS "Total_Confirmed_Cases",
    (SUM(c."_4_20_20")::FLOAT / p."Population") * 100000 AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE("year_2019", "year_2018", "year_2017") AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
LIMIT 1000;
Results:
Country,Total_Confirmed_Cases,Cases_per_100000
France,154402.0,230.49462969397575
China,86382.0,6.202350778686466
Spain,200210.0,428.4972937424178
Italy,181228.0,299.8910349131591
Iran,83505.0,102.08401637407819
US,799531.0,244.3797630542898
Germany,141672.0,170.83751356991678

2025-01-20 00:24:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:24:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:24:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:24:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 00:24:59 - snowflake.connector.connection - INFO - closed
2025-01-20 00:24:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:24:59 - root - INFO - SQL:
-- Corrected Query 1
SELECT
    "country_or_region",
    SUM("_4_20_20") AS "Total_Confirmed_Cases"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
WHERE
    "country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    "country_or_region"
LIMIT 1000
Results:
country_or_region,Total_Confirmed_Cases
France,154402.0
Iran,83505.0
China,86382.0
US,799531.0
Spain,200210.0
Italy,181228.0
Germany,141672.0

2025-01-20 00:24:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:24:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:24:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 00:25:00 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:01 - root - INFO - SQL:
-- Corrected Query 2
SELECT
    CASE
        WHEN "country" = 'United States' THEN 'US'
        WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
        ELSE "country"
    END AS "country_or_region",
    COALESCE("year_2019", "year_2018", "year_2017") AS "Population"
FROM
    COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
WHERE
    "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
LIMIT 1000
Results:
country_or_region,Population
US,327167434
China,1392730000
Germany,82927922
Italy,60431283
Spain,46723749
Iran,81800269
France,66987244

2025-01-20 00:25:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 00:25:02 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:03 - root - INFO - SQL:
-- Corrected Query 3
SELECT DISTINCT "country_or_region"
FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
WHERE "country_or_region" IN ('US', 'United Kingdom', 'United Arab Emirates')
LIMIT 1000
Results:
country_or_region
United Kingdom
US
United Arab Emirates

2025-01-20 00:25:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 201
2025-01-20 00:25:04 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:04 - root - INFO - SQL:
-- Corrected Query 4
SELECT "country_or_region", SUM("_4_20_20") AS "total_confirmed_cases"
FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
GROUP BY "country_or_region"
LIMIT 1000
Results:
country_or_region,total_confirmed_cases
Antarctica,0.0
Canada,41029.0
"Korea, North",0.0
Nauru,0.0
New Zealand,1440.0
Palau,0.0
Summer Olympics 2020,0.0
Tonga,0.0
United Kingdom,131252.0
Winter Olympics 2022,0.0
Micronesia,0.0
Kyrgyzstan,568.0
Kosovo,561.0
Romania,8936.0
Lesotho,0.0
Netherlands,34317.0
Seychelles,11.0
Djibouti,846.0
Iraq,1574.0
Estonia,1535.0
Togo,84.0
Mauritius,328.0
Burma,119.0
Somalia,237.0
South Africa,3300.0
Peru,16325.0
Solomon Islands,0.0
Syria,39.0
Moldova,2548.0
Ethiopia,111.0
Lithuania,1140.0
Uruguay,535.0
Poland,9593.0
Angola,24.0
Bolivia,564.0
Comoros,0.0
Belarus,6264.0
Cote d'Ivoire,847.0
Botswana,20.0
Congo (Brazzaville),160.0
Latvia,739.0
Kiribati,0.0
Armenia,1339.0
Bahrain,1907.0
Mexico,8772.0
Denmark,7711.0
Liechtenstein,82.0
Fiji,18.0
Malawi,17.0
Paraguay,208.0
Zimbabwe,25.0
Saint Lucia,15.0
Gambia,10.0
Hungary,1984.0
Uzbekistan,1627.0
Egypt,3333.0
Laos,19.0
Taiwan*,422.0
Argentina,2941.0
Tuvalu,0.0
France,154402.0
Australia,6623.0
South Sudan,4.0
Norway,7156.0
Antigua and Barbuda,23.0
Tajikistan,0.0
Bhutan,5.0
Papua New Guinea,7.0
Brazil,40743.0
Liberia,91.0
Trinidad and Tobago,114.0
Sao Tome and Principe,4.0
Honduras,477.0
Ireland,15652.0
Holy See,9.0
Burundi,5.0
Iceland,1773.0
Pakistan,9565.0
Bahamas,60.0
Belize,18.0
Algeria,2718.0
Albania,584.0
Burkina Faso,581.0
Cuba,1087.0
Suriname,10.0
Mauritania,7.0
Saint Vincent and the Grenadines,12.0
Oman,1410.0
Ukraine,5710.0
Guinea,622.0
Guatemala,289.0
Cabo Verde,67.0
Samoa,0.0
Malta,431.0
Colombia,3977.0
Azerbaijan,1436.0
Guinea-Bissau,50.0
Greece,2245.0
Marshall Islands,0.0
Madagascar,121.0
Jamaica,223.0
Tanzania,254.0
Austria,14789.0
Saint Kitts and Nevis,15.0
Switzerland,27944.0
Luxembourg,3558.0
Portugal,20863.0
Belgium,39983.0
Sweden,15124.0
Nepal,31.0
North Macedonia,1225.0
Kenya,281.0
Libya,51.0
Venezuela,256.0
Monaco,94.0
Slovenia,1335.0
West Bank and Gaza,329.0
Costa Rica,662.0
Sudan,92.0
Sierra Leone,43.0
Mongolia,33.0
Maldives,69.0
Timor-Leste,22.0
Mozambique,39.0
MS Zaandam,9.0
Montenegro,312.0
US,799531.0
Brunei,138.0
Cameroon,1163.0
Kuwait,1995.0
Central African Republic,12.0
Italy,181228.0
Singapore,8014.0
United Arab Emirates,7265.0
Rwanda,147.0
Tunisia,884.0
Croatia,1881.0
Morocco,3046.0
Cyprus,767.0
Chile,11375.0
Andorra,717.0
Mali,246.0
Haiti,44.0
Czechia,6900.0
Guyana,65.0
Dominica,16.0
Eswatini,24.0
Bosnia and Herzegovina,1309.0
Qatar,6015.0
Vanuatu,0.0
Barbados,75.0
Ecuador,10128.0
Kazakhstan,1852.0
Saudi Arabia,10484.0
San Marino,461.0
Niger,648.0
Nicaragua,9.0
Slovakia,1173.0
Bangladesh,2948.0
Israel,14112.0
Ghana,1042.0
Sri Lanka,304.0
Germany,141672.0
Vietnam,268.0
Malaysia,5425.0
Gabon,120.0
Iran,83505.0
Dominican Republic,4964.0
Congo (Kinshasa),332.0
Georgia,402.0
Senegal,377.0
Uganda,56.0
Chad,33.0
Turkey,90980.0
Namibia,16.0
Lebanon,677.0
Yemen,1.0
Serbia,6630.0
El Salvador,218.0
Jordan,425.0
Cambodia,122.0
Finland,4230.0
Indonesia,6760.0
Afghanistan,996.0
Zambia,65.0
Panama,4467.0
Equatorial Guinea,79.0
India,18539.0
Thailand,2792.0
Diamond Princess,712.0
Japan,11258.0
Nigeria,665.0
China,86382.0
Grenada,14.0
Spain,200210.0
Russia,47121.0
Bulgaria,929.0
Philippines,6459.0
"Korea, South",10674.0
Eritrea,39.0
Benin,54.0

2025-01-20 00:25:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-20 00:25:06 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:06 - root - INFO - SQL:
-- Corrected Query 5
SELECT DISTINCT "country"
FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
WHERE "country" ILIKE '%Iran%'
LIMIT 1000
Results:
country
"Iran, Islamic Rep."

2025-01-20 00:25:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-20 00:25:07 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:08 - root - INFO - SQL:
-- Corrected Query 6
SELECT
    c."country_or_region",
    p."country"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            "country"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE c."country_or_region" = 'Germany'
LIMIT 1000
Results:
country_or_region,country
Germany,Germany

2025-01-20 00:25:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-20 00:25:10 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:11 - root - INFO - SQL:
-- Corrected Query 7
SELECT *
FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
LIMIT 1
Results:
Too long, hard cut:
province_or_state,country_or_region,latitude,longitude,location_geom,_1_22_20,_1_23_20,_1_24_20,_1_25_20,_1_26_20,_1_27_20,_1_28_20,_1_29_20,_1_30_20,_1_31_20,_2_1_20,_2_2_20,_2_3_20,_2_4_20,_2_5_20,_2_6_20,_2_7_20,_2_8_20,_2_9_20,_2_10_20,_2_11_20,_2_12_20,_2_13_20,_2_14_20,_2_15_20,_2_16_20,_2_17_20,_2_18_20,_2_19_20,_2_20_20,_2_21_20,_2_22_20,_2_23_20,_2_24_20,_2_25_20,_2_26_20,_2_27_20,_2_28_20,_2_29_20,_3_1_20,_3_2_20,_3_3_20,_3_4_20,_3_5_20,_3_6_20,_3_7_20,_3_8_20,_3_9_20,_3_10_20,_3_11_20,_3_12_20,_3_13_20,_3_14_20,_3_15_20,_3_16_20,_3_17_20,_3_18_20,_3_19_20,_3_20_20,_3_21_20,_3_22_20,_3_23_20,_3_24_20,_3_25_20,_3_26_20,_3_27_20,_3_28_20,_3_29_20,_3_30_20,_3_31_20,_4_1_20,_4_2_20,_4_3_20,_4_4_20,_4_5_20,_4_6_20,_4_7_20,_4_8_20,_4_9_20,_4_10_20,_4_11_20,_4_12_20,_4_13_20,_4_14_20,_4_15_20,_4_16_20,_4_17_20,_4_18_20,_4_19_20,_4_20_20,_4_21_20,_4_22_20,_4_23_20,_4_24_20,_4_25_20,_4_26_20,_4_27_20,_4_28_20,_4_29_20,_4_30_20,_5_1_20,_5_2_20,_5_3_20,_5_4_20,_5_5_20,_5_6_20,_5_7_20,_5_8_20,_5_9_20,_5_10_20,_5_11_20,_5_12_20,_5_13_20,_5_14_20,_5_15_20,_5_16_20,_5_17_20,_5_18_20,_5_19_20,_5_20_20,_5_21_20,_5_22_20,_5_23_20,_5_24_20,_5_25_20,_5_26_20,_5_27_20,_5_28_20,_5_29_20,_5_30_20,_5_31_20,_6_1_20,_6_2_20,_6_3_20,_6_4_20,_6_5_20,_6_6_20,_6_7_20,_6_8_20,_6_9_20,_6_10_20,_6_11_20,_6_12_20,_6_13_20,_6_14_20,_6_15_20,_6_16_20,_6_17_20,_6_18_20,_6_19_20,_6_20_20,_6_21_20,_6_22_20,_6_23_20,_6_24_20,_6_25_20,_6_26_20,_6_27_20,_6_28_20,_6_29_20,_6_30_20,_7_1_20,_7_2_20,_7_3_20,_7_4_20,_7_5_20,_7_6_20,_7_7_20,_7_8_20,_7_9_20,_7_10_20,_7_11_20,_7_12_20,_7_13_20,_7_14_20,_7_15_20,_7_16_20,_7_17_20,_7_18_20,_7_19_20,_7_20_20,_7_21_20,_7_22_20,_7_23_20,_7_24_20,_7_25_20,_7_26_20,_7_27_20,_7_28_20,_7_29_20,_7_30_20,_7_31_20,_8_1_20,_8_2_20,_8_3_20,_8_4_20,_8_5_20,_8_6_20,_8_7_20,_8_8_20,_8_9_20,_8_10_20,_8_11_20,_8_12_20,_8_13_20,_8_14_20,_8_15_20,_8_16_20,_8_17_20,_8_18_20,_8_19_20,_8_20_20,_8_21_20,_8_22_20,_8_23_20,_8_24_20,_8_25_20,_8_26_20,_8_27_20,_8_28_20,_8_29_20,_8_30_20,_8_31_20,_9_1_20,_9_2_20,_9_3_20,_9_4_20,_9_5_20,_9_6_20,_9_7_20,_9_8_20,_9_9_20,_9_10_20,_9_11_20,_9_12_20,_9_13_20,_9_14_20,_9_15_20,_9_16_20,_9_17_20,_9_18_20,_9_19_20,_9_20_20,_9_21_20,_9_22_20,_9_23_20,_9_24_20,_9_25_20,_9_26_20,_9_27_20,_9_28_20,_9_29_20,_9_30_20,_10_1_20,_10_2_20,_10_3_20,_10_4_20,_10_5_20,_10_6_20,_10_7_20,_10_8_20,_10_9_20,_10_10_20,_10_11_20,_10_12_20,_10_13_20,_10_14_20,_10_15_20,_10_16_20,_10_17_20,_10_18_20,_10_19_20,_10_20_20,_10_21_20,_10_22_20,_10_23_20,_10_24_20,_10_25_20,_10_26_20,_10_27_20,_10_28_20,_10_29_20,_10_30_20,_10_31_20,_11_1_20,_11_2_20,_11_3_20,_11_4_20,_11_5_20,_11_6_20,_11_7_20,_11_8_20,_11_9_20,_11_10_20,_11_11_20,_11_12_20,_11_13_20,_11_14_20,_11_15_20,_11_16_20,_11_17_20,_11_18_20,_11_19_20,_11_20_20,_11_21_20,_11_22_20,_11_23_20,_11_24_20,_11_25_20,_11_26_20,_11_27_20,_11_28_20,_11_29_20,_11_30_20,_12_1_20,_12_2_20,_12_3_20,_12_4_20,_12_5_20,_12_6_20,_12_7_20,_12_8_20,_12_9_20,_12_10_20,_12_11_20,_12_12_20,_12_13_20,_12_14_20,_12_15_20,_12_16_20,_12_17_20,_12_18_20,_12_19_20,_12_20_20,_12_21_20,_12_22_20,_12_23_20,_12_24_20,_12_25_20,_12_26_20,_12_27_20,_12_28_20,_12_29_20,_12_30_20,_12_31_20,_1_1_21,_1_2_21,_1_3_21,_1_4_21,_1_5_21,_1_6_21,_1_7_21,_1_8_21,_1_9_21,_1_10_21,_1_11_21,_1_12_21,_1_13_21,_1_14_21,_1_15_21,_1_16_21,_1_17_21,_1_18_21,_1_19_21,_1_20_21,_1_21_21,_1_22_21,_1_23_21,_1_24_21,_1_25_21,_1_26_21,_1_27_21,_1_28_21,_1_29_21,_1_30_21,_1_31_21,_2_1_21,_2_2_21,_2_3_21,_2_4_21,_2_5_21,_2_6_21,_2_7_21,_2_8_21,_2_9_21,_2_10_21,_2_11_21,_2_12_21,_2_13_21,_2_14_21,_2_15_21,_2_16_21,_2_17_21,_2_18_21,_2_19_21,_2_20_21,_2_21_21,_2_22_21,_2_23_21,_2_24_21,_2_25_21,_2_26_21,_2_27_21,_2_28_21,_3_1_21,_3_2_21,_3_3_21,_3_4_21,_3_5_21,_3_6_21,_3_7_21,_3_8_21,_3_9_21,_3_10_21,_3_11_21,_3_12_21,_3_13_21,_3_14_21,_3_15_21,_3_16_21,_3_17_21,_3_18_21,_3_19_21,_3_20_21,_3_21_21,_3_22_21,_3_23_21,_3_24_21,_3_25_21,_3_26_21,_3_27_21,_3_28_21,_3_29_21,_3_30_21,_3_31_21,_4_1_21,_4_2_21,_4_3_21,_4_4_21,_4_5_21,_4_6_21,_4_7_21,_4_8_21,_4_9_21,_4_10_21,_4_11_21,_4_12_21,_4_13_21,_4_14_21,_4_15_21,_4_16_21,_4_17_21,_4_18_21,_4_19_21,_4_20_21,_4_21_21,_4_22_21,_4_23_21,_4_24_21,_4_25_21,_4_26_21,_4_27_21,_4_28_21,_4_29_21,_4_30_21,_5_1_21,_5_2_21,_5_3_21,_5_4_21,_5_5_21,_5_6_21,_5_7_21,_5_8_21,_5_9_21,_5_10_21,_5_11_21,_5_12_21,_5_13_21,_5_14_21,_5_15_21,_5_16_21,_5_17_21,_5_18_21,_5_19_21,_5_20_21,_5_21_21,_5_22_21,_5_23_21,_5_24_21,_5_25_21,_5_26_21,_5_27_21,_5_28_21,_5_29_21,_5_30_21,_5_31_21,_6_1_21,_6_2_21,_6_3_21,_6_4_21,_6_5_21,_6_6_21,_6_7_21,_6_8_21,_6_9_21,_6_10_21,_6_11_21,_6_12_21,_6_13_21,_6_14_21,_6_15_21,_6_16_21,_6_17_21,_6_18_21,_6_19_21,_6_20_21,_6_21_21,_6_22_21,_6_23_21,_6_24_21,_6_25_21,_6_26_21,_6_27_21,_6_28_21,_6_29_21,_6_30_21,_7_1_21,_7_2_21,_7_3_21,_7_4_21,_7_5_21,_7_6_21,_7_7_21,_7_8_21,_7_9_21,_7_10_21,_7_11_21,_7_12_21,_7_13_21,_7_14_21,_7_15_21,_7_16_21,_7_17_21,_7_18_21,_7_19_21,_7_20_21,_7_21_21,_7_22_21,_7_23_21,_7_24_21,_7_25_21,_7_26_21,_7_27_21,_7_28_21,_7_29_21,_7_30_

2025-01-20 00:25:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-20 00:25:12 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:25:46 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:25:46 - root - INFO - ```sql
SELECT
    c."country_or_region" AS "Country",
    SUM(c."_4_20_20") AS "Total_Confirmed_Cases",
    (SUM(c."_4_20_20")::FLOAT / p."Population") * 100000 AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            -- Use the latest available non-null population value
            COALESCE(
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010",
                "year_2009",
                "year_2008",
                "year_2007",
                "year_2006",
                "year_2005",
                "year_2004",
                "year_2003",
                "year_2002",
                "year_2001",
                "year_2000",
                "year_1999",
                "year_1998",
                "year_1997",
                "year_1996",
                "year_1995",
                "year_1994",
                "year_1993",
                "year_1992",
                "year_1991",
                "year_1990"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    AND p."Population" IS NOT NULL
GROUP BY
    c."country_or_region", p."Population"
LIMIT 1000;
```
2025-01-20 00:25:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:25:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:25:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:25:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 00:25:47 - snowflake.connector.connection - INFO - closed
2025-01-20 00:25:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:26:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:26:56 - root - INFO - SQL:
SELECT
    c."country_or_region" AS "Country",
    SUM(c."_4_20_20") AS "Total_Confirmed_Cases",
    (SUM(c."_4_20_20")::FLOAT / p."Population") * 100000 AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            -- Use the latest available non-null population value
            COALESCE(
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010",
                "year_2009",
                "year_2008",
                "year_2007",
                "year_2006",
                "year_2005",
                "year_2004",
                "year_2003",
                "year_2002",
                "year_2001",
                "year_2000",
                "year_1999",
                "year_1998",
                "year_1997",
                "year_1996",
                "year_1995",
                "year_1994",
                "year_1993",
                "year_1992",
                "year_1991",
                "year_1990"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    AND p."Population" IS NOT NULL
GROUP BY
    c."country_or_region", p."Population"
LIMIT 1000;
Results:
Country,Total_Confirmed_Cases,Cases_per_100000
France,154402.0,230.49462969397575
China,86382.0,6.202350778686466
Spain,200210.0,428.4972937424178
Italy,181228.0,299.8910349131591
Iran,83505.0,102.08401637407819
US,799531.0,244.3797630542898
Germany,141672.0,170.83751356991678

2025-01-20 00:26:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:26:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:26:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:26:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-20 00:26:57 - snowflake.connector.connection - INFO - closed
2025-01-20 00:26:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:26:58 - root - INFO - SQL:
-- Corrected Query 9
SELECT
    COALESCE(
        "year_2019",
        "year_2018",
        "year_2017",
        "year_2016",
        "year_2015",
        "year_2014",
        "year_2013",
        "year_2012",
        "year_2011",
        "year_2010",
        "year_2009",
        "year_2008",
        "year_2007",
        "year_2006",
        "year_2005",
        "year_2004",
        "year_2003",
        "year_2002",
        "year_2001",
        "year_2000",
        "year_1999",
        "year_1998",
        "year_1997",
        "year_1996",
        "year_1995",
        "year_1994",
        "year_1993",
        "year_1992",
        "year_1991",
        "year_1990"
    ) AS "Population"
FROM
    COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
WHERE
    "country" = 'France'
    AND COALESCE(
        "year_2019",
        "year_2018",
        "year_2017",
        "year_2016",
        "year_2015",
        "year_2014",
        "year_2013",
        "year_2012",
        "year_2011",
        "year_2010",
        "year_2009",
        "year_2008",
        "year_2007",
        "year_2006",
        "year_2005",
        "year_2004",
        "year_2003",
        "year_2002",
        "year_2001",
        "year_2000",
        "year_1999",
        "year_1998",
        "year_1997",
        "year_1996",
        "year_1995",
        "year_1994",
        "year_1993",
        "year_1992",
        "year_1991",
        "year_1990"
    ) IS NOT NULL
LIMIT 1000
Results:
Population
66987244

2025-01-20 00:26:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:26:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:26:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:26:59 - snowflake.connector.connection - INFO - closed
2025-01-20 00:26:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:27:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:27:17 - root - INFO - The error occurs because the column names in the `INFORMATION_SCHEMA.COLUMNS` view are case-sensitive when enclosed in double quotes. In Snowflake, the column names are uppercase by default. To fix the issue, you can remove the double quotes or use uppercase column names.

Here's the corrected query:

```sql
-- Corrected Query 10
SELECT
    COLUMN_NAME
FROM
    COVID19_JHU_WORLD_BANK.INFORMATION_SCHEMA.COLUMNS
WHERE
    TABLE_CATALOG = 'COVID19_JHU_WORLD_BANK'
    AND TABLE_SCHEMA = 'COVID19_JHU_CSSE'
    AND TABLE_NAME = 'CONFIRMED_CASES'
LIMIT 1000;
```
2025-01-20 00:27:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:27:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:27:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:27:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 00:27:19 - snowflake.connector.connection - INFO - closed
2025-01-20 00:27:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:27:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:27:41 - root - INFO - SQL:
-- Corrected Query 10
SELECT
    COLUMN_NAME
FROM
    COVID19_JHU_WORLD_BANK.INFORMATION_SCHEMA.COLUMNS
WHERE
    TABLE_CATALOG = 'COVID19_JHU_WORLD_BANK'
    AND TABLE_SCHEMA = 'COVID19_JHU_CSSE'
    AND TABLE_NAME = 'CONFIRMED_CASES'
LIMIT 1000;
Results:
Too long, hard cut:
COLUMN_NAME
_2_18_22
_12_1_21
_7_26_20
_11_10_22
_2_11_23
_7_8_20
_5_29_22
_8_29_20
_4_15_20
_12_15_21
_6_18_21
_7_15_22
_2_7_23
_11_9_20
_1_24_20
_11_8_21
_10_15_20
_8_11_22
_7_25_21
_7_11_21
_6_17_22
_8_2_22
_7_20_20
_12_12_22
_2_12_21
_2_24_23
_10_16_21
_12_6_21
_5_2_22
_6_30_20
_12_31_22
_3_6_22
_7_18_22
_1_16_22
_4_5_20
_12_24_21
_9_7_20
_3_5_22
_9_13_22
_6_22_20
_12_14_21
_4_17_22
_8_17_22
_4_19_21
_6_24_20
_8_15_20
_11_15_21
_8_20_21
_3_12_20
_11_29_21
_6_4_21
_8_1_21
_2_26_20
_3_19_20
_1_29_21
_4_15_22
_12_30_20
_4_19_20
_8_19_22
_12_5_22
_9_10_20
_4_22_22
country_or_region
_1_26_22
_5_13_20
_5_29_21
_3_13_21
_11_27_20
_10_24_21
_3_10_22
_3_5_23
_3_31_22
_10_16_20
_2_3_22
_12_22_20
_8_14_20
_10_7_21
_10_23_20
_9_12_22
_7_22_20
_6_3_21
_4_17_21
_4_10_20
_1_9_22
_11_23_22
_7_21_22
_4_18_21
_11_17_20
_9_26_20
_2_6_23
_9_19_21
_3_14_21
_4_7_22
_7_13_20
_11_25_21
_12_9_20
_1_23_20
_1_7_22
_7_3_20
_12_3_20
_7_30_22
_3_27_21
_6_12_22
_8_27_21
_11_12_21
_5_7_21
_2_16_23
_2_26_23
_11_8_20
_7_9_22
_1_23_23
_10_27_22
_10_6_21
_2_15_20
_9_26_22
_4_27_20
_6_15_20
_11_13_21
_4_3_22
_5_27_22
_6_27_22
_3_14_20
_9_30_22
_1_26_23
_1_5_21
_7_12_21
_11_26_20
_6_19_21
_6_10_21
_9_6_22
_4_1_20
_10_27_21
_2_21_22
_10_15_21
_3_12_21
_2_16_21
_9_1_22
_9_24_20
_7_1_20
_6_15_22
_11_28_22
_2_26_21
_9_23_20
_3_9_23
_10_2_22
_3_3_20
_6_8_22
_9_15_20
_10_17_22
_1_12_23
_10_26_22
_5_10_22
_5_31_20
_1_1_21
_4_30_22
_4_12_22
_8_28_21
_11_12_20
_8_26_22
_7_7_21
_1_1_23
_4_26_21
_12_10_20
_7_31_20
_7_28_20
_12_7_20
_9_9_22
_9_29_22
_3_22_20
location_geom
_6_19_22
_10_20_22
_9_25_20
_5_9_22
_7_8_22
_3_2_20
_1_26_21
_2_5_22
_9_2_22
_4_24_21
_4_14_20
_11_10_20
_2_26_22
_7_24_22
_10_31_22
_12_30_21
_6_23_20
_2_15_21
_7_26_21
_4_23_22
_4_9_20
_5_24_20
_7_22_22
_5_11_20
_6_21_21
_2_29_20
_10_28_21
_11_8_22
_5_27_21
_6_7_22
longitude
_9_28_21
_10_29_20
_6_13_21
_2_2_23
_11_21_20
_12_26_22
_4_17_20
_11_6_20
_11_30_20
_2_7_22
_5_10_20
_9_3_20
_8_7_22
_1_25_23
_2_12_20
_9_28_22
_4_22_20
_8_14_21
_9_10_21
_3_10_20
_12_25_21
_5_27_20
_5_1_21
_8_11_20
_8_14_22
_9_15_21
_1_5_23
_12_22_22
_2_6_21
_9_9_20
_2_6_20
_8_31_22
_9_23_22
_12_25_20
_5_6_21
_8_3_21
_3_23_20
_1_3_22
_8_4_21
_10_4_22
_2_2_21
_7_16_22
_7_11_22
_1_14_23
_9_27_21
_11_29_22
_5_8_20
_9_15_22
_10_7_20
_2_21_23
_2_11_22
_8_9_21
_9_17_21
_5_22_22
_6_1_20
_1_27_23
_9_5_22
_6_25_21
_10_11_21
_2_22_20
_7_4_22
_3_24_21
_9_17_20
_5_21_22
_2_25_23
_7_4_20
_11_1_22
_3_20_21
_1_28_22
_12_22_21
_2_24_20
_2_22_23
_4_3_20
_4_8_20
_5_18_22
_3_30_20
_1_10_22
_1_29_20
_1_3_21
_9_3_21
_7_16_21
_2_10_20
_2_23_20
_5_3_21
_5_5_21
_2_22_22
_10_26_21
_10_22_22
_7_9_20
_5_4_21
_12_12_20
_7_12_22
_4_9_21
_8_28_22
_9_14_20
_9_12_20
_5_10_21
_4_11_22
_5_28_20
_7_3_22
_9_7_21
_9_24_21
_9_27_22
_5_4_22
_12_8_21
_12_28_22
_3_8_22
_9_14_22
_4_21_20
_11_6_22
_2_13_20
_3_26_21
_12_5_20
_4_13_22
_5_14_20
_1_21_23
_10_21_22
_5_9_21
_2_22_21
_7_9_21
_4_4_20
_3_1_23
_4_27_21
_12_23_20
_5_31_22
_1_14_22
_3_29_20
_1_2_22
_2_17_22
_8_8_22
_1_15_22
_10_10_21
_11_24_22
_2_1_23
_1_16_23
_6_6_21
_5_30_21
_11_24_21
_9_4_22
_7_30_21
_3_22_22
_6_3_20
_2_8_23
_2_14_23
_7_27_20
_5_8_22
_11_16_20
_1_13_21
_2_7_20
_4_12_20
_1_31_22
_9_13_21
_7_19_21
_2_4_22
_3_23_22
_11_16_22
_5_11_22
_11_13_20
_9_13_20
_8_17_20
_12_10_22
_6_16_21
_10_10_22
_7_24_21
_1_26_20
_4_11_20
_11_19_22
_4_24_20
_7_13_22
_7_7_20
_1_18_23
_10_23_21
_1_13_23
_4_4_22
_7_17_22
_4_12_21
_3_3_23
_12_29_22
_3_3_21
_3_13_20
_12_14_20
_12_30_22
_4_25_22
_11_5_22
_3_4_20
_11_28_20
_7_17_20
_3_6_23
_8_8_21
_8_24_22
_9_19_22
_4_6_20
_9_18_20
_11_21_21
_4_8_22
_4_29_22
_5_16_22
_10_30_21
_6_8_21
_4_20_22
_11_9_22
_1_7_21
_8_6_21
_7_25_22
_9_5_20
_6_5_21
_8_19_21
_2_9_20
_5_12_21
_12_31_20
_12_12_21
_10_14_21
_3_15_22
_3_16_21
_4_18_22
_2_5_23
_1_28_20
_4_16_20
_5_31_21
_5_26_22
_1_11_23
_12_7_22
_3_25_20
_6_9_22
_3_2_22
_1_16_21
_6_10_22
_11_27_22
_2_18_21
_2_4_21
_3_28_21
_5_8_21
_2_7_21
_1_17_21
_7_10_22
_3_28_22
_10_30_22
_2_25_20
_2_18_20
_7_19_22
_6_15_21
_1_25_22
_11_30_21
_12_3_21
_3_18_21
_10_26_20
_6_29_22
_8_15_21
_5_15_21
_5_18_21
_6_8_20
_1_3_23
_9_25_22
_10_6_20
_8_4_22
_11_23_21
_5_19_22
_8_13_22
_4_7_20
_12_4_20
_8_6_20
_8_18_21
_9_21_22
_6_26_21
_2_4_23
_10_3_21
_7_23_22
_6_27_20
_7_15_21
_8_19_20
_2_16_20
_3_4_21
_8_5_22
_6_2_21
_2_1_22
_6_28_22
_4_1_22
_5_28_21
_10_13_20
_5_23_20
_8_26_20
_3_16_22
_1_28_23
_2_14_21
_4_5_21
_3_27_22
_9_22_21
_6_6_20
_1_15_23
_7_29_20
_2_23_21
_3_19_21
_11_9_21
_10_8_20
_4_3_21
_11_13_22
_12_2_21
_1_2_21
_3_7_20
_9_17_22
_2_2_20
_4_29_20
_5_24_22
_7_26_22
_1_20_23
_9_29_20
_2_18_23
_2_27_22
_5_16_21
_1_22_22
_3_8_23
_6_24_22
_10_9_20
_1_31_21
_2_17_20
_4_23_21
_5_25_22
_7_28_22
_11_3_20
_2_12_23
_4_27_22
_2_28_20
_4_10_22
_12_17_20
_8_21_20
_1_25_20
_11_28_21
_6_21_22
_1_18_22
_4_20_20
_1_10_23
_6_30_21
_3_1_22
_5_12_22
_12_13_22
_5_3_20
_10_24_22
_8_9_20
_11_22_21
_10_1_22
_11_7_20
_3_15_21
_3_21_20
_10_14_22
_10_9_21
_8_31_20
_12_24_22
_10_13_21
_1_19_23
_7_5_20
_11_16_21
_8_25_22
_10_5_20
_11_4_22
_8_2_20
_7_12_20
_7_25

2025-01-20 00:27:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:27:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:27:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:27:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-20 00:27:42 - snowflake.connector.connection - INFO - closed
2025-01-20 00:27:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:27:43 - root - INFO - SQL:
-- Corrected Query 11
SELECT
    SUM(TRY_TO_NUMBER("_4_20_20")) AS "global_total_confirmed_cases"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
Results:
global_total_confirmed_cases
2495886

2025-01-20 00:27:43 - root - INFO - itercount: 0
2025-01-20 00:27:43 - root - INFO - Database Name: COVID19_JHU_WORLD_BANK
Schema Name: COVID19_JHU_CSSE
DDL describes table information.
,0
table_name,CONFIRMED_CASES
description,
DDL,"create or replace TABLE CONFIRMED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,1
table_name,DEATHS
description,
DDL,"create or replace TABLE DEATHS (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,2
table_name,RECOVERED_CASES
description,
DDL,"create or replace TABLE RECOVERED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,3
table_name,SUMMARY
description,
DDL,"create or replace TABLE SUMMARY (
	""province_state"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""date"" DATE,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location_geom"" BINARY(8388608),
	""confirmed"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""recovered"" VARCHAR(16777216),
	""active"" NUMBER(38,0),
	""fips"" VARCHAR(16777216),
	""admin2"" VARCHAR(16777216),
	""combined_key"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_GLOBAL_POPULATION
DDL describes table information.
,0
table_name,POPULATION_BY_COUNTRY
description,
DDL,"create or replace TABLE POPULATION_BY_COUNTRY (
	""country"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""year_1960"" NUMBER(38,0),
	""year_1961"" NUMBER(38,0),
	""year_1962"" NUMBER(38,0),
	""year_1963"" NUMBER(38,0),
	""year_1964"" NUMBER(38,0),
	""year_1965"" NUMBER(38,0),
	""year_1966"" NUMBER(38,0),
	""year_1967"" NUMBER(38,0),
	""year_1968"" NUMBER(38,0),
	""year_1969"" NUMBER(38,0),
	""year_1970"" NUMBER(38,0),
	""year_1971"" NUMBER(38,0),
	""year_1972"" NUMBER(38,0),
	""year_1973"" NUMBER(38,0),
	""year_1974"" NUMBER(38,0),
	""year_1975"" NUMBER(38,0),
	""year_1976"" NUMBER(38,0),
	""year_1977"" NUMBER(38,0),
	""year_1978"" NUMBER(38,0),
	""year_1979"" NUMBER(38,0),
	""year_1980"" NUMBER(38,0),
	""year_1981"" NUMBER(38,0),
	""year_1982"" NUMBER(38,0),
	""year_1983"" NUMBER(38,0),
	""year_1984"" NUMBER(38,0),
	""year_1985"" NUMBER(38,0),
	""year_1986"" NUMBER(38,0),
	""year_1987"" NUMBER(38,0),
	""year_1988"" NUMBER(38,0),
	""year_1989"" NUMBER(38,0),
	""year_1990"" NUMBER(38,0),
	""year_1991"" NUMBER(38,0),
	""year_1992"" NUMBER(38,0),
	""year_1993"" NUMBER(38,0),
	""year_1994"" NUMBER(38,0),
	""year_1995"" NUMBER(38,0),
	""year_1996"" NUMBER(38,0),
	""year_1997"" NUMBER(38,0),
	""year_1998"" NUMBER(38,0),
	""year_1999"" NUMBER(38,0),
	""year_2000"" NUMBER(38,0),
	""year_2001"" NUMBER(38,0),
	""year_2002"" NUMBER(38,0),
	""year_2003"" NUMBER(38,0),
	""year_2004"" NUMBER(38,0),
	""year_2005"" NUMBER(38,0),
	""year_2006"" NUMBER(38,0),
	""year_2007"" NUMBER(38,0),
	""year_2008"" NUMBER(38,0),
	""year_2009"" NUMBER(38,0),
	""year_2010"" NUMBER(38,0),
	""year_2011"" NUMBER(38,0),
	""year_2012"" NUMBER(38,0),
	""year_2013"" NUMBER(38,0),
	""year_2014"" NUMBER(38,0),
	""year_2015"" NUMBER(38,0),
	""year_2016"" NUMBER(38,0),
	""year_2017"" NUMBER(38,0),
	""year_2018"" NUMBER(38,0),
	""year_2019"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_HEALTH_POPULATION
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0)
);"

,2
table_name,HEALTH_NUTRITION_POPULATION
description,
DDL,"create or replace TABLE HEALTH_NUTRITION_POPULATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" NUMBER(38,0),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,4
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_DEBT
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_Income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,INTERNATIONAL_DEBT
description,
DDL,"create or replace TABLE INTERNATIONAL_DEBT (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_EDUCATION
DDL describes table information.
,0
table_name,INTERNATIONAL_EDUCATION
description,
DDL,"create or replace TABLE INTERNATIONAL_EDUCATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_two_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_WDI
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,INDICATORS_DATA
description,
DDL,"create or replace TABLE INDICATORS_DATA (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIME
description,
DDL,"create or replace TABLE SERIES_TIME (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" VARCHAR(16777216),
	""latest_trade_data"" VARCHAR(16777216)
);"

,5
table_name,FOOTNOTES
description,
DDL,"create or replace TABLE FOOTNOTES (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **Table:** `COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES`
   - **Columns:**
     - `"country_or_region"`: To identify the country.
     - `"_4_20_20"`: Number of confirmed COVID-19 cases on April 20, 2020.
   - **Potential Usage:** Retrieve the total confirmed cases for each country on the specified date.
   - **Conditions:** Filter data for the countries of interest.

2. **Table:** `COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY`
   - **Columns:**
     - `"country"`: To identify the country.
     - `"year_2019"`: Population data for the year 2019 (as 2020 data might not be available).
   - **Potential Usage:** Obtain the population of each country to calculate cases per 100,000 people.
   - **Conditions:** Filter data for the countries of interest and manage any discrepancies in country naming conventions.

**Sample SQL Queries:**

1. **List distinct countries in the COVID-19 confirmed cases table:**
   ```sql
   SELECT DISTINCT "country_or_region"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   LIMIT 1000;
   ```

2. **Retrieve confirmed cases on April 20, 2020, for all countries:**
   ```sql
   SELECT "country_or_region", "_4_20_20"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   LIMIT 1000;
   ```

3. **List distinct countries in the population table:**
   ```sql
   SELECT DISTINCT "country"
   FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
   LIMIT 1000;
   ```

4. **Retrieve 2019 population data for all countries:**
   ```sql
   SELECT "country", "year_2019"
   FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
   LIMIT 1000;
   ```

5. **Get confirmed cases on April 20, 2020, for specified countries:**
   ```sql
   SELECT "country_or_region", "_4_20_20"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   WHERE "country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   LIMIT 1000;
   ```

6. **Get population data for specified countries:**
   ```sql
   SELECT "country", "year_2019"
   FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
   WHERE "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
   LIMIT 1000;
   ```

7. **Check for country name discrepancies (e.g., 'US' vs. 'United States'):**
   ```sql
   SELECT DISTINCT "country_or_region"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   WHERE "country_or_region" ILIKE '%United%'
   LIMIT 1000;
   ```

8. **Sum confirmed cases by country on April 20, 2020:**
   ```sql
   SELECT "country_or_region", SUM("_4_20_20") AS "total_confirmed_cases"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   GROUP BY "country_or_region"
   LIMIT 1000;
   ```

9. **Identify how Iran is listed in the population table:**
   ```sql
   SELECT DISTINCT "country"
   FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
   WHERE "country" ILIKE '%Iran%'
   LIMIT 1000;
   ```

10. **Compare country names between the two tables for Germany:**
    ```sql
    SELECT c."country_or_region", p."country"
    FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
    JOIN COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY p
      ON c."country_or_region" = p."country"
    WHERE c."country_or_region" = 'Germany'
    LIMIT 1000;
    ```

11. **Retrieve a sample row to view all columns in the confirmed cases table:**
    ```sql
    SELECT *
    FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
    LIMIT 1;
    ```

12. **Retrieve a sample row to view all columns in the population table:**
    ```sql
    SELECT *
    FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
    LIMIT 1;
    ```

13. **Check the data type of the population column to ensure proper calculations:**
    ```sql
    SELECT "year_2019"
    FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
    WHERE "country" = 'France'
    LIMIT 1000;
    ```

14. **Identify the date columns available in the confirmed cases table:**
    ```sql
    SELECT column_name
    FROM information_schema.columns
    WHERE table_name = 'CONFIRMED_CASES'
      AND table_schema = 'COVID19_JHU_CSSE'
    LIMIT 1000;
    ```

15. **Find the total number of confirmed cases globally on April 20, 2020:**
    ```sql
    SELECT SUM("_4_20_20") AS "global_total_confirmed_cases"
    FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
    LIMIT 1000;
    ```

**Note:** These queries help in understanding the structure and data within the relevant tables. They assist in identifying how countries are named across different datasets, ensuring accurate joins and calculations when computing the total confirmed cases and cases per 100,000 people for the specified countries.Query:
SELECT DISTINCT "country_or_region"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   LIMIT 1000;
Answer:
country_or_region
Antarctica
Canada
Nauru
New Zealand
Palau
Summer Olympics 2020
Tonga
Tuvalu
United Kingdom
Micronesia
Kosovo
Romania
Lesotho
Djibouti
Bahamas
Norway
Algeria
Estonia
Albania
Burkina Faso
Chile
Mauritius
Cuba
Suriname
Czechia
Indonesia
Solomon Islands
Venezuela
Bahrain
Ireland
Liechtenstein
Costa Rica
Guinea-Bissau
Saint Kitts and Nevis
Luxembourg
Mozambique
South Sudan
Iraq
Andorra
Tajikistan
Bhutan
Oman
Sao Tome and Principe
Honduras
Slovenia
Ethiopia
Lithuania
Iran
West Bank and Gaza
Paraguay
Jamaica
Austria
Iceland
Cyprus
Cambodia
Nepal
Mali
Azerbaijan
Malawi
Sudan
Morocco
Singapore
France
Australia
Netherlands
Seychelles
Congo (Brazzaville)
Belize
Latvia
North Macedonia
Nigeria
Guyana
Kenya
Dominica
Bosnia and Herzegovina
Liberia
Ukraine
Guinea
Rwanda
Marshall Islands
Vanuatu
"Korea, North"
Winter Olympics 2022
Antigua and Barbuda
Togo
Somalia
Grenada
Eswatini
Laos
Peru
Armenia
Mexico
Guatemala
Moldova
Uruguay
Kuwait
Fiji
Colombia
Georgia
Bolivia
Comoros
Madagascar
Senegal
Namibia
Maldives
Yemen
Afghanistan
Switzerland
Slovakia
Hungary
Portugal
MS Zaandam
Ghana
Zambia
Egypt
Russia
Finland
Taiwan*
Haiti
South Africa
Kiribati
Syria
Poland
Samoa
Malta
Angola
Tunisia
Zimbabwe
Barbados
Chad
Turkey
Timor-Leste
Bangladesh
China
Belgium
Sweden
US
Sierra Leone
Spain
Italy
Japan
United Arab Emirates
Burma
Mauritania
Belarus
Ecuador
Kyrgyzstan
Papua New Guinea
Brazil
Trinidad and Tobago
Brunei
Monaco
Holy See
Panama
Eritrea
Bulgaria
Kazakhstan
Cote d'Ivoire
Tanzania
San Marino
Niger
Mongolia
Nicaragua
Central African Republic
Pakistan
Uzbekistan
Montenegro
Malaysia
Libya
Saint Vincent and the Grenadines
Gabon
Denmark
Cabo Verde
Congo (Kinshasa)
Croatia
Argentina
Greece
Burundi
Saint Lucia
Botswana
Lebanon
Gambia
Jordan
Cameroon
Benin
Israel
Equatorial Guinea
Germany
Qatar
Dominican Republic
Saudi Arabia
Serbia
Philippines
India
"Korea, South"
Thailand
Diamond Princess
Vietnam
Uganda
El Salvador
Sri Lanka
Query:
SELECT "country_or_region", "_4_20_20"
   FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
   LIMIT 1000;
Answer:
country_or_region,_4_20_20
Antarctica,0
Canada,0
"Korea, North",0
Nauru,0
New Zealand,0
Palau,0
Summer Olympics 2020,0
Tonga,0
Tuvalu,0
United Kingdom,0
United Kingdom,0
Winter Olympics 2022,0
Micronesia,0
New Zealand,0
France,6
Australia,545
Kyrgyzstan,568
South Sudan,4
Kosovo,561
Romania,8936
Lesotho,0
United Kingdom,3
Netherlands,97
Seychelles,11
Djibouti,846
Bahamas,60
Congo (Brazzaville),160
France,163
Iraq,1574
Netherlands,14
Australia,104
Norway,7156
Antigua and Barbuda,23
France,18
Canada,5
Belize,18
Canada,256
Algeria,2718
Estonia,1535
Canada,13
Canada,0
Latvia,739
Albania,584
Togo,84
Burkina Faso,581
Chile,11375
Andorra,717
Tajikistan,0
Mauritius,328
Cuba,1087
Suriname,10
Mali,246
Burma,119
Haiti,44
Somalia,237
Bhutan,5
Papua New Guinea,7
North Macedonia,1225
United Kingdom,300
Grenada,14
Netherlands,5
Brazil,40743
Netherlands,34134
South Africa,3300
France,148
Czechia,6900
Nigeria,665
Guyana,65
Kenya,281
Australia,28
Indonesia,6760
Dominica,16
Libya,51
Eswatini,24
France,56
France,37
Laos,19
Mauritania,7
Peru,16325
Kiribati,0
Solomon Islands,0
United Kingdom,11
Canada,26
Saint Vincent and the Grenadines,12
France,271
Bosnia and Herzegovina,1309
Oman,1410
Qatar,6015
Canada,118
Liberia,91
Trinidad and Tobago,114
Armenia,1339
Ukraine,5710
Canada,2908
Venezuela,256
Bahrain,1907
Guinea,622
France,97
Sao Tome and Principe,4
Australia,200
Honduras,477
Netherlands,67
Mexico,8772
Brunei,138
United Kingdom,11
Gabon,120
Syria,39
United Kingdom,5
France,408
United Kingdom,86
France,1
Monaco,94
Guatemala,289
Slovenia,1335
Moldova,2548
Ireland,15652
New Zealand,1440
Rwanda,147
Holy See,9
Ethiopia,111
Lithuania,1140
Denmark,7515
Uruguay,535
Poland,9593
Iran,83505
Dominican Republic,4964
Cabo Verde,67
Samoa,0
Kuwait,1995
Malta,431
West Bank and Gaza,329
Liechtenstein,82
Costa Rica,662
Congo (Kinshasa),332
Fiji,18
United Kingdom,241
Colombia,3977
Azerbaijan,1436
Angola,24
Tunisia,884
Georgia,402
Malawi,17
Paraguay,208
Sudan,92
Croatia,1881
Denmark,11
Bolivia,564
Argentina,2941
Canada,21252
Guinea-Bissau,50
Panama,4467
Comoros,0
Zimbabwe,25
Belarus,6264
Greece,2245
Marshall Islands,0
United Kingdom,0
Vanuatu,0
Barbados,75
Eritrea,39
Madagascar,121
Senegal,377
Sierra Leone,43
Bulgaria,929
Ecuador,10128
United Kingdom,132
Kazakhstan,1852
Uganda,56
Saudi Arabia,10484
France,0
Canada,316
Burundi,5
Cote d'Ivoire,847
Jamaica,223
Chad,33
Canada,254
Saint Lucia,15
Tanzania,254
San Marino,461
Morocco,3046
Turkey,90980
Botswana,20
Namibia,16
Lebanon,677
Niger,648
Canada,721
Mongolia,33
United Kingdom,66
Nicaragua,9
Gambia,10
Maldives,69
United Kingdom,11
Austria,14789
Saint Kitts and Nevis,15
Timor-Leste,22
Canada,0
Iceland,1773
Yemen,1
Afghanistan,996
Switzerland,27944
Luxembourg,3558
Denmark,185
Mozambique,39
Central African Republic,12
Serbia,6630
El Salvador,218
Cyprus,767
Jordan,425
Slovakia,1173
Cameroon,1163
Bangladesh,2948
Hungary,1984
Benin,54
United Kingdom,239
Israel,14112
Canada,11
Portugal,20863
Equatorial Guinea,79
MS Zaandam,9
Pakistan,9565
China,2565
Ghana,1042
Zambia,65
Uzbekistan,1627
Montenegro,312
China,1
Belgium,39983
Sweden,15124
Sri Lanka,304
Egypt,3333
Cambodia,122
Nepal,31
China,45
China,1019
China,1268
France,153197
China,146
China,1276
China,189
China,197
China,1581
US,799531
China,147
Germany,141672
Vietnam,268
China,168
China,184
China,18
United Kingdom,130147
Spain,200210
Russia,47121
Australia,435
Finland,4230
Malaysia,5425
Taiwan*,422
China,254
China,256
China,355
Philippines,6459
India,18539
Italy,181228
"Korea, South",10674
China,328
China,638
Thailand,2792
China,593
Australia,1329
Australia,2963
Diamond Princess,712
China,905
China,561
Canada,1647
Australia,1019
Canada,13502
China,787
China,579
China,68128
China,1025
China,653
Japan,11258
China,75
China,194
China,76
Singapore,8014
China,104
United Arab Emirates,7265
China,139
China,937
China,991
Query:
SELECT DISTINCT "country"
   FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
   LIMIT 1000;
Answer:
country
Sint Maarten (Dutch part)
Not classified
West Bank and Gaza
Serbia
Cambodia
United Arab Emirates
Cyprus
Low income
Peru
Early-demographic dividend
Fiji
Chad
Middle East & North Africa (excluding high income)
Middle East & North Africa (IDA & IBRD countries)
Dominican Republic
Kenya
"Venezuela, RB"
Guinea
Pakistan
Latvia
Qatar
Nigeria
North Macedonia
Cabo Verde
Palau
Sao Tome and Principe
Pacific island small states
St. Martin (French part)
Faroe Islands
Ireland
Bhutan
Zambia
Isle of Man
Guatemala
Singapore
Finland
Montenegro
Barbados
Syrian Arab Republic
Costa Rica
St. Lucia
Afghanistan
Gibraltar
Low & middle income
Latin America & Caribbean (excluding high income)
World
Canada
Rwanda
Thailand
Solomon Islands
Japan
Albania
Andorra
South Asia
South Sudan
Azerbaijan
Jamaica
Portugal
Mali
"Congo, Dem. Rep."
IDA total
Zimbabwe
Sudan
OECD members
Maldives
Nauru
Namibia
South Africa
Pre-demographic dividend
Sierra Leone
Grenada
Mexico
Niger
Senegal
Trinidad and Tobago
Luxembourg
Indonesia
Cayman Islands
Ghana
Lower middle income
Saudi Arabia
Denmark
United States
Europe & Central Asia (IDA & IBRD countries)
"Yemen, Rep."
Least developed countries: UN classification
Central Europe and the Baltics
Brunei Darussalam
Philippines
Sri Lanka
China
Norway
Kosovo
Oman
Middle East & North Africa
East Asia & Pacific (IDA & IBRD countries)
San Marino
Poland
Fragile and conflict affected situations
Angola
Samoa
Honduras
Channel Islands
Burundi
Madagascar
"Macao SAR, China"
Mongolia
Other small states
Bahrain
United Kingdom
Moldova
Benin
Lebanon
Estonia
Middle income
Europe & Central Asia
Croatia
Mauritius
East Asia & Pacific
North America
Netherlands
Liberia
Lao PDR
Sub-Saharan Africa
Algeria
Armenia
Switzerland
Nepal
"Bahamas, The"
Hungary
Bulgaria
Brazil
Haiti
Germany
Europe & Central Asia (excluding high income)
Morocco
Liechtenstein
Ethiopia
Paraguay
High income
Late-demographic dividend
Tajikistan
Uruguay
Italy
Caribbean small states
Malta
"Korea, Dem. People’s Rep."
Post-demographic dividend
Lithuania
Bangladesh
Gabon
IDA blend
Panama
Vanuatu
Belgium
Spain
Euro area
IBRD only
Togo
Sub-Saharan Africa (excluding high income)
Puerto Rico
Greenland
Turkey
"Micronesia, Fed. Sts."
St. Kitts and Nevis
Slovenia
"Hong Kong SAR, China"
Small states
Tanzania
Tunisia
Marshall Islands
St. Vincent and the Grenadines
Vietnam
Equatorial Guinea
Burkina Faso
Dominica
Belarus
Austria
Antigua and Barbuda
Colombia
Chile
Kyrgyz Republic
Comoros
"Korea, Rep."
Belize
Russian Federation
Guyana
Ecuador
Turkmenistan
Malaysia
Cote d'Ivoire
Mauritania
Heavily indebted poor countries (HIPC)
New Zealand
Jordan
Sweden
Bosnia and Herzegovina
Nicaragua
Cameroon
South Asia (IDA & IBRD)
East Asia & Pacific (excluding high income)
IDA & IBRD total
British Virgin Islands
Arab World
Australia
Suriname
Tonga
"Congo, Rep."
Upper middle income
Lesotho
New Caledonia
Curacao
American Samoa
Iraq
Georgia
"Egypt, Arab Rep."
Turks and Caicos Islands
Aruba
IDA only
Sub-Saharan Africa (IDA & IBRD countries)
Tuvalu
Ukraine
Greece
Malawi
Czech Republic
Iceland
Latin America & the Caribbean (IDA & IBRD countries)
Latin America & Caribbean
Botswana
European Union
India
Libya
"Iran, Islamic Rep."
Israel
Seychelles
France
Mozambique
Eritrea
Myanmar
Kiribati
Argentina
Virgin Islands (U.S.)
Djibouti
Uzbekistan
Kuwait
Papua New Guinea
Eswatini
Uganda
Romania
Northern Mariana Islands
Slovak Republic
Somalia
Bermuda
Cuba
Monaco
Guam
Kazakhstan
Central African Republic
El Salvador
Timor-Leste
Guinea-Bissau
"Gambia, The"
Bolivia
French Polynesia
Query:
SELECT
    c."country_or_region" AS "Country",
    SUM(c."_4_20_20") AS "Total_Confirmed_Cases",
    (SUM(c."_4_20_20")::FLOAT / p."Population") * 100000 AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE("year_2019", "year_2018", "year_2017") AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
LIMIT 1000;
Answer:
Country,Total_Confirmed_Cases,Cases_per_100000
France,154402.0,230.49462969397575
China,86382.0,6.202350778686466
Spain,200210.0,428.4972937424178
Italy,181228.0,299.8910349131591
Iran,83505.0,102.08401637407819
US,799531.0,244.3797630542898
Germany,141672.0,170.83751356991678
Query:
-- Corrected Query 1
SELECT
    "country_or_region",
    SUM("_4_20_20") AS "Total_Confirmed_Cases"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
WHERE
    "country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    "country_or_region"
LIMIT 1000
Answer:
country_or_region,Total_Confirmed_Cases
France,154402.0
Iran,83505.0
China,86382.0
US,799531.0
Spain,200210.0
Italy,181228.0
Germany,141672.0
Query:
-- Corrected Query 2
SELECT
    CASE
        WHEN "country" = 'United States' THEN 'US'
        WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
        ELSE "country"
    END AS "country_or_region",
    COALESCE("year_2019", "year_2018", "year_2017") AS "Population"
FROM
    COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
WHERE
    "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
LIMIT 1000
Answer:
country_or_region,Population
US,327167434
China,1392730000
Germany,82927922
Italy,60431283
Spain,46723749
Iran,81800269
France,66987244
Query:
-- Corrected Query 3
SELECT DISTINCT "country_or_region"
FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
WHERE "country_or_region" IN ('US', 'United Kingdom', 'United Arab Emirates')
LIMIT 1000
Answer:
country_or_region
United Kingdom
US
United Arab Emirates
Query:
-- Corrected Query 4
SELECT "country_or_region", SUM("_4_20_20") AS "total_confirmed_cases"
FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
GROUP BY "country_or_region"
LIMIT 1000
Answer:
country_or_region,total_confirmed_cases
Antarctica,0.0
Canada,41029.0
"Korea, North",0.0
Nauru,0.0
New Zealand,1440.0
Palau,0.0
Summer Olympics 2020,0.0
Tonga,0.0
United Kingdom,131252.0
Winter Olympics 2022,0.0
Micronesia,0.0
Kyrgyzstan,568.0
Kosovo,561.0
Romania,8936.0
Lesotho,0.0
Netherlands,34317.0
Seychelles,11.0
Djibouti,846.0
Iraq,1574.0
Estonia,1535.0
Togo,84.0
Mauritius,328.0
Burma,119.0
Somalia,237.0
South Africa,3300.0
Peru,16325.0
Solomon Islands,0.0
Syria,39.0
Moldova,2548.0
Ethiopia,111.0
Lithuania,1140.0
Uruguay,535.0
Poland,9593.0
Angola,24.0
Bolivia,564.0
Comoros,0.0
Belarus,6264.0
Cote d'Ivoire,847.0
Botswana,20.0
Congo (Brazzaville),160.0
Latvia,739.0
Kiribati,0.0
Armenia,1339.0
Bahrain,1907.0
Mexico,8772.0
Denmark,7711.0
Liechtenstein,82.0
Fiji,18.0
Malawi,17.0
Paraguay,208.0
Zimbabwe,25.0
Saint Lucia,15.0
Gambia,10.0
Hungary,1984.0
Uzbekistan,1627.0
Egypt,3333.0
Laos,19.0
Taiwan*,422.0
Argentina,2941.0
Tuvalu,0.0
France,154402.0
Australia,6623.0
South Sudan,4.0
Norway,7156.0
Antigua and Barbuda,23.0
Tajikistan,0.0
Bhutan,5.0
Papua New Guinea,7.0
Brazil,40743.0
Liberia,91.0
Trinidad and Tobago,114.0
Sao Tome and Principe,4.0
Honduras,477.0
Ireland,15652.0
Holy See,9.0
Burundi,5.0
Iceland,1773.0
Pakistan,9565.0
Bahamas,60.0
Belize,18.0
Algeria,2718.0
Albania,584.0
Burkina Faso,581.0
Cuba,1087.0
Suriname,10.0
Mauritania,7.0
Saint Vincent and the Grenadines,12.0
Oman,1410.0
Ukraine,5710.0
Guinea,622.0
Guatemala,289.0
Cabo Verde,67.0
Samoa,0.0
Malta,431.0
Colombia,3977.0
Azerbaijan,1436.0
Guinea-Bissau,50.0
Greece,2245.0
Marshall Islands,0.0
Madagascar,121.0
Jamaica,223.0
Tanzania,254.0
Austria,14789.0
Saint Kitts and Nevis,15.0
Switzerland,27944.0
Luxembourg,3558.0
Portugal,20863.0
Belgium,39983.0
Sweden,15124.0
Nepal,31.0
North Macedonia,1225.0
Kenya,281.0
Libya,51.0
Venezuela,256.0
Monaco,94.0
Slovenia,1335.0
West Bank and Gaza,329.0
Costa Rica,662.0
Sudan,92.0
Sierra Leone,43.0
Mongolia,33.0
Maldives,69.0
Timor-Leste,22.0
Mozambique,39.0
MS Zaandam,9.0
Montenegro,312.0
US,799531.0
Brunei,138.0
Cameroon,1163.0
Kuwait,1995.0
Central African Republic,12.0
Italy,181228.0
Singapore,8014.0
United Arab Emirates,7265.0
Rwanda,147.0
Tunisia,884.0
Croatia,1881.0
Morocco,3046.0
Cyprus,767.0
Chile,11375.0
Andorra,717.0
Mali,246.0
Haiti,44.0
Czechia,6900.0
Guyana,65.0
Dominica,16.0
Eswatini,24.0
Bosnia and Herzegovina,1309.0
Qatar,6015.0
Vanuatu,0.0
Barbados,75.0
Ecuador,10128.0
Kazakhstan,1852.0
Saudi Arabia,10484.0
San Marino,461.0
Niger,648.0
Nicaragua,9.0
Slovakia,1173.0
Bangladesh,2948.0
Israel,14112.0
Ghana,1042.0
Sri Lanka,304.0
Germany,141672.0
Vietnam,268.0
Malaysia,5425.0
Gabon,120.0
Iran,83505.0
Dominican Republic,4964.0
Congo (Kinshasa),332.0
Georgia,402.0
Senegal,377.0
Uganda,56.0
Chad,33.0
Turkey,90980.0
Namibia,16.0
Lebanon,677.0
Yemen,1.0
Serbia,6630.0
El Salvador,218.0
Jordan,425.0
Cambodia,122.0
Finland,4230.0
Indonesia,6760.0
Afghanistan,996.0
Zambia,65.0
Panama,4467.0
Equatorial Guinea,79.0
India,18539.0
Thailand,2792.0
Diamond Princess,712.0
Japan,11258.0
Nigeria,665.0
China,86382.0
Grenada,14.0
Spain,200210.0
Russia,47121.0
Bulgaria,929.0
Philippines,6459.0
"Korea, South",10674.0
Eritrea,39.0
Benin,54.0
Query:
-- Corrected Query 5
SELECT DISTINCT "country"
FROM COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
WHERE "country" ILIKE '%Iran%'
LIMIT 1000
Answer:
country
"Iran, Islamic Rep."
Query:
-- Corrected Query 6
SELECT
    c."country_or_region",
    p."country"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            "country"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE c."country_or_region" = 'Germany'
LIMIT 1000
Answer:
country_or_region,country
Germany,Germany
Query:
-- Corrected Query 7
SELECT *
FROM COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
LIMIT 1
Answer:
Too long, hard cut:
province_or_state,country_or_region,latitude,longitude,location_geom,_1_22_20,_1_23_20,_1_24_20,_1_25_20,_1_26_20,_1_27_20,_1_28_20,_1_29_20,_1_30_20,_1_31_20,_2_1_20,_2_2_20,_2_3_20,_2_4_20,_2_5_20,_2_6_20,_2_7_20,_2_8_20,_2_9_20,_2_10_20,_2_11_20,_2_12_20,_2_13_20,_2_14_20,_2_15_20,_2_16_20,_2_17_20,_2_18_20,_2_19_20,_2_20_20,_2_21_20,_2_22_20,_2_23_20,_2_24_20,_2_25_20,_2_26_20,_2_27_20,_2_28_20,_2_29_20,_3_1_20,_3_2_20,_3_3_20,_3_4_20,_3_5_20,_3_6_20,_3_7_20,_3_8_20,_3_9_20,_3_10_20,_3_11_20,_3_12_20,_3_13_20,_3_14_20,_3_15_20,_3_16_20,_3_17_20,_3_18_20,_3_19_20,_3_20_20,_3_21_20,_3_22_20,_3_23_20,_3_24_20,_3_25_20,_3_26_20,_3_27_20,_3_28_20,_3_29_20,_3_30_20,_3_31_20,_4_1_20,_4_2_20,_4_3_20,_4_4_20,_4_5_20,_4_6_20,_4_7_20,_4_8_20,_4_9_20,_4_10_20,_4_11_20,_4_12_20,_4_13_20,_4_14_20,_4_15_20,_4_16_20,_4_17_20,_4_18_20,_4_19_20,_4_20_20,_4_21_20,_4_22_20,_4_23_20,_4_24_20,_4_25_20,_4_26_20,_4_27_20,_4_28_20,_4_29_20,_4_30_20,_5_1_20,_5_2_20,_5_3_20,_5_4_20,_5_5_20,_5_6_20,_5_7_20,_5_8_20,_5_9_20,_5_10_20,_5_11_20,_5_12_20,_5_13_20,_5_14_20,_5_15_20,_5_16_20,_5_17_20,_5_18_20,_5_19_20,_5_20_20,_5_21_20,_5_22_20,_5_23_20,_5_24_20,_5_25_20,_5_26_20,_5_27_20,_5_28_20,_5_29_20,_5_30_20,_5_31_20,_6_1_20,_6_2_20,_6_3_20,_6_4_20,_6_5_20,_6_6_20,_6_7_20,_6_8_20,_6_9_20,_6_10_20,_6_11_20,_6_12_20,_6_13_20,_6_14_20,_6_15_20,_6_16_20,_6_17_20,_6_18_20,_6_19_20,_6_20_20,_6_21_20,_6_22_20,_6_23_20,_6_24_20,_6_25_20,_6_26_20,_6_27_20,_6_28_20,_6_29_20,_6_30_20,_7_1_20,_7_2_20,_7_3_20,_7_4_20,_7_5_20,_7_6_20,_7_7_20,_7_8_20,_7_9_20,_7_10_20,_7_11_20,_7_12_20,_7_13_20,_7_14_20,_7_15_20,_7_16_20,_7_17_20,_7_18_20,_7_19_20,_7_20_20,_7_21_20,_7_22_20,_7_23_20,_7_24_20,_7_25_20,_7_26_20,_7_27_20,_7_28_20,_7_29_20,_7_30_20,_7_31_20,_8_1_20,_8_2_20,_8_3_20,_8_4_20,_8_5_20,_8_6_20,_8_7_20,_8_8_20,_8_9_20,_8_10_20,_8_11_20,_8_12_20,_8_13_20,_8_14_20,_8_15_20,_8_16_20,_8_17_20,_8_18_20,_8_19_20,_8_20_20,_8_21_20,_8_22_20,_8_23_20,_8_24_20,_8_25_20,_8_26_20,_8_27_20,_8_28_20,_8_29_20,_8_30_20,_8_31_20,_9_1_20,_9_2_20,_9_3_20,_9_4_20,_9_5_20,_9_6_20,_9_7_20,_9_8_20,_9_9_20,_9_10_20,_9_11_20,_9_12_20,_9_13_20,_9_14_20,_9_15_20,_9_16_20,_9_17_20,_9_18_20,_9_19_20,_9_20_20,_9_21_20,_9_22_20,_9_23_20,_9_24_20,_9_25_20,_9_26_20,_9_27_20,_9_28_20,_9_29_20,_9_30_20,_10_1_20,_10_2_20,_10_3_20,_10_4_20,_10_5_20,_10_6_20,_10_7_20,_10_8_20,_10_9_20,_10_10_20,_10_11_20,_10_12_20,_10_13_20,_10_14_20,_10_15_20,_10_16_20,_10_17_20,_10_18_20,_10_19_20,_10_20_20,_10_21_20,_10_22_20,_10_23_20,_10_24_20,_10_25_20,_10_26_20,_10_27_20,_10_28_20,_10_29_20,_10_30_20,_10_31_20,_11_1_20,_11_2_20,_11_3_20,_11_4_20,_11_5_20,_11_6_20,_11_7_20,_11_8_20,_11_9_20,_11_10_20,_11_11_20,_11_12_20,_11_13_20,_11_14_20,_11_15_20,_11_16_20,_11_17_20,_11_18_20,_11_19_20,_11_20_20,_11_21_20,_11_22_20,_11_23_20,_11_24_20,_11_25_20,_11_26_20,_11_27_20,_11_28_20,_11_29_20,_11_30_20,_12_1_20,_12_2_20,_12_3_20,_12_4_20,_12_5_20,_12_6_20,_12_7_20,_12_8_20,_12_9_20,_12_10_20,_12_11_20,_12_12_20,_12_13_20,_12_14_20,_12_15_20,_12_16_20,_12_17_20,_12_18_20,_12_19_20,_12_20_20,_12_21_20,_12_22_20,_12_23_20,_12_24_20,_12_25_20,_12_26_20,_12_27_20,_12_28_20,_12_29_20,_12_30_20,_12_31_20,_1_1_21,_1_2_21,_1_3_21,_1_4_21,_1_5_21,_1_6_21,_1_7_21,_1_8_21,_1_9_21,_1_10_21,_1_11_21,_1_12_21,_1_13_21,_1_14_21,_1_15_21,_1_16_21,_1_17_21,_1_18_21,_1_19_21,_1_20_21,_1_21_21,_1_22_21,_1_23_21,_1_24_21,_1_25_21,_1_26_21,_1_27_21,_1_28_21,_1_29_21,_1_30_21,_1_31_21,_2_1_21,_2_2_21,_2_3_21,_2_4_21,_2_5_21,_2_6_21,_2_7_21,_2_8_21,_2_9_21,_2_10_21,_2_11_21,_2_12_21,_2_13_21,_2_14_21,_2_15_21,_2_16_21,_2_17_21,_2_18_21,_2_19_21,_2_20_21,_2_21_21,_2_22_21,_2_23_21,_2_24_21,_2_25_21,_2_26_21,_2_27_21,_2_28_21,_3_1_21,_3_2_21,_3_3_21,_3_4_21,_3_5_21,_3_6_21,_3_7_21,_3_8_21,_3_9_21,_3_10_21,_3_11_21,_3_12_21,_3_13_21,_3_14_21,_3_15_21,_3_16_21,_3_17_21,_3_18_21,_3_19_21,_3_20_21,_3_21_21,_3_22_21,_3_23_21,_3_24_21,_3_25_21,_3_26_21,_3_27_21,_3_28_21,_3_29_21,_3_30_21,_3_31_21,_4_1_21,_4_2_21,_4_3_21,_4_4_21,_4_5_21,_4_6_21,_4_7_21,_4_8_21,_4_9_21,_4_10_21,_4_11_21,_4_12_21,_4_13_21,_4_14_21,_4_15_21,_4_16_21,_4_17_21,_4_18_21,_4_19_21,_4_20_21,_4_21_21,_4_22_21,_4_23_21,_4_24_21,_4_25_21,_4_26_21,_4_27_21,_4_28_21,_4_29_21,_4_30_21,_5_1_21,_5_2_21,_5_3_21,_5_4_21,_5_5_21,_5_6_21,_5_7_21,_5_8_21,_5_9_21,_5_10_21,_5_11_21,_5_12_21,_5_13_21,_5_14_21,_5_15_21,_5_16_21,_5_17_21,_5_18_21,_5_19_21,_5_20_21,_5_21_21,_5_22_21,_5_23_21,_5_24_21,_5_25_21,_5_26_21,_5_27_21,_5_28_21,_5_29_21,_5_30_21,_5_31_21,_6_1_21,_6_2_21,_6_3_21,_6_4_21,_6_5_21,_6_6_21,_6_7_21,_6_8_21,_6_9_21,_6_10_21,_6_11_21,_6_12_21,_6_13_21,_6_14_21,_6_15_21,_6_16_21,_6_17_21,_6_18_21,_6_19_21,_6_20_21,_6_21_21,_6_22_21,_6_23_21,_6_24_21,_6_25_21,_6_26_21,_6_27_21,_6_28_21,_6_29_21,_6_30_21,_7_1_21,_7_2_21,_7_3_21,_7_4_21,_7_5_21,_7_6_21,_7_7_21,_7_8_21,_7_9_21,_7_10_21,_7_11_21,_7_12_21,_7_13_21,_7_14_21,_7_15_21,_7_16_21,_7_17_21,_7_18_21,_7_19_21,_7_20_21,_7_21_21,_7_22_21,_7_23_21,_7_24_21,_7_25_21,_7_26_21,_7_27_21,_7_28_21,_7_29_21,_7_30_
Query:
SELECT
    c."country_or_region" AS "Country",
    SUM(c."_4_20_20") AS "Total_Confirmed_Cases",
    (SUM(c."_4_20_20")::FLOAT / p."Population") * 100000 AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            -- Use the latest available non-null population value
            COALESCE(
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010",
                "year_2009",
                "year_2008",
                "year_2007",
                "year_2006",
                "year_2005",
                "year_2004",
                "year_2003",
                "year_2002",
                "year_2001",
                "year_2000",
                "year_1999",
                "year_1998",
                "year_1997",
                "year_1996",
                "year_1995",
                "year_1994",
                "year_1993",
                "year_1992",
                "year_1991",
                "year_1990"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
    AND p."Population" IS NOT NULL
GROUP BY
    c."country_or_region", p."Population"
LIMIT 1000;
Answer:
Country,Total_Confirmed_Cases,Cases_per_100000
France,154402.0,230.49462969397575
China,86382.0,6.202350778686466
Spain,200210.0,428.4972937424178
Italy,181228.0,299.8910349131591
Iran,83505.0,102.08401637407819
US,799531.0,244.3797630542898
Germany,141672.0,170.83751356991678
Query:
-- Corrected Query 9
SELECT
    COALESCE(
        "year_2019",
        "year_2018",
        "year_2017",
        "year_2016",
        "year_2015",
        "year_2014",
        "year_2013",
        "year_2012",
        "year_2011",
        "year_2010",
        "year_2009",
        "year_2008",
        "year_2007",
        "year_2006",
        "year_2005",
        "year_2004",
        "year_2003",
        "year_2002",
        "year_2001",
        "year_2000",
        "year_1999",
        "year_1998",
        "year_1997",
        "year_1996",
        "year_1995",
        "year_1994",
        "year_1993",
        "year_1992",
        "year_1991",
        "year_1990"
    ) AS "Population"
FROM
    COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
WHERE
    "country" = 'France'
    AND COALESCE(
        "year_2019",
        "year_2018",
        "year_2017",
        "year_2016",
        "year_2015",
        "year_2014",
        "year_2013",
        "year_2012",
        "year_2011",
        "year_2010",
        "year_2009",
        "year_2008",
        "year_2007",
        "year_2006",
        "year_2005",
        "year_2004",
        "year_2003",
        "year_2002",
        "year_2001",
        "year_2000",
        "year_1999",
        "year_1998",
        "year_1997",
        "year_1996",
        "year_1995",
        "year_1994",
        "year_1993",
        "year_1992",
        "year_1991",
        "year_1990"
    ) IS NOT NULL
LIMIT 1000
Answer:
Population
66987244
Query:
-- Corrected Query 10
SELECT
    COLUMN_NAME
FROM
    COVID19_JHU_WORLD_BANK.INFORMATION_SCHEMA.COLUMNS
WHERE
    TABLE_CATALOG = 'COVID19_JHU_WORLD_BANK'
    AND TABLE_SCHEMA = 'COVID19_JHU_CSSE'
    AND TABLE_NAME = 'CONFIRMED_CASES'
LIMIT 1000;
Answer:
Too long, hard cut:
COLUMN_NAME
_2_18_22
_12_1_21
_7_26_20
_11_10_22
_2_11_23
_7_8_20
_5_29_22
_8_29_20
_4_15_20
_12_15_21
_6_18_21
_7_15_22
_2_7_23
_11_9_20
_1_24_20
_11_8_21
_10_15_20
_8_11_22
_7_25_21
_7_11_21
_6_17_22
_8_2_22
_7_20_20
_12_12_22
_2_12_21
_2_24_23
_10_16_21
_12_6_21
_5_2_22
_6_30_20
_12_31_22
_3_6_22
_7_18_22
_1_16_22
_4_5_20
_12_24_21
_9_7_20
_3_5_22
_9_13_22
_6_22_20
_12_14_21
_4_17_22
_8_17_22
_4_19_21
_6_24_20
_8_15_20
_11_15_21
_8_20_21
_3_12_20
_11_29_21
_6_4_21
_8_1_21
_2_26_20
_3_19_20
_1_29_21
_4_15_22
_12_30_20
_4_19_20
_8_19_22
_12_5_22
_9_10_20
_4_22_22
country_or_region
_1_26_22
_5_13_20
_5_29_21
_3_13_21
_11_27_20
_10_24_21
_3_10_22
_3_5_23
_3_31_22
_10_16_20
_2_3_22
_12_22_20
_8_14_20
_10_7_21
_10_23_20
_9_12_22
_7_22_20
_6_3_21
_4_17_21
_4_10_20
_1_9_22
_11_23_22
_7_21_22
_4_18_21
_11_17_20
_9_26_20
_2_6_23
_9_19_21
_3_14_21
_4_7_22
_7_13_20
_11_25_21
_12_9_20
_1_23_20
_1_7_22
_7_3_20
_12_3_20
_7_30_22
_3_27_21
_6_12_22
_8_27_21
_11_12_21
_5_7_21
_2_16_23
_2_26_23
_11_8_20
_7_9_22
_1_23_23
_10_27_22
_10_6_21
_2_15_20
_9_26_22
_4_27_20
_6_15_20
_11_13_21
_4_3_22
_5_27_22
_6_27_22
_3_14_20
_9_30_22
_1_26_23
_1_5_21
_7_12_21
_11_26_20
_6_19_21
_6_10_21
_9_6_22
_4_1_20
_10_27_21
_2_21_22
_10_15_21
_3_12_21
_2_16_21
_9_1_22
_9_24_20
_7_1_20
_6_15_22
_11_28_22
_2_26_21
_9_23_20
_3_9_23
_10_2_22
_3_3_20
_6_8_22
_9_15_20
_10_17_22
_1_12_23
_10_26_22
_5_10_22
_5_31_20
_1_1_21
_4_30_22
_4_12_22
_8_28_21
_11_12_20
_8_26_22
_7_7_21
_1_1_23
_4_26_21
_12_10_20
_7_31_20
_7_28_20
_12_7_20
_9_9_22
_9_29_22
_3_22_20
location_geom
_6_19_22
_10_20_22
_9_25_20
_5_9_22
_7_8_22
_3_2_20
_1_26_21
_2_5_22
_9_2_22
_4_24_21
_4_14_20
_11_10_20
_2_26_22
_7_24_22
_10_31_22
_12_30_21
_6_23_20
_2_15_21
_7_26_21
_4_23_22
_4_9_20
_5_24_20
_7_22_22
_5_11_20
_6_21_21
_2_29_20
_10_28_21
_11_8_22
_5_27_21
_6_7_22
longitude
_9_28_21
_10_29_20
_6_13_21
_2_2_23
_11_21_20
_12_26_22
_4_17_20
_11_6_20
_11_30_20
_2_7_22
_5_10_20
_9_3_20
_8_7_22
_1_25_23
_2_12_20
_9_28_22
_4_22_20
_8_14_21
_9_10_21
_3_10_20
_12_25_21
_5_27_20
_5_1_21
_8_11_20
_8_14_22
_9_15_21
_1_5_23
_12_22_22
_2_6_21
_9_9_20
_2_6_20
_8_31_22
_9_23_22
_12_25_20
_5_6_21
_8_3_21
_3_23_20
_1_3_22
_8_4_21
_10_4_22
_2_2_21
_7_16_22
_7_11_22
_1_14_23
_9_27_21
_11_29_22
_5_8_20
_9_15_22
_10_7_20
_2_21_23
_2_11_22
_8_9_21
_9_17_21
_5_22_22
_6_1_20
_1_27_23
_9_5_22
_6_25_21
_10_11_21
_2_22_20
_7_4_22
_3_24_21
_9_17_20
_5_21_22
_2_25_23
_7_4_20
_11_1_22
_3_20_21
_1_28_22
_12_22_21
_2_24_20
_2_22_23
_4_3_20
_4_8_20
_5_18_22
_3_30_20
_1_10_22
_1_29_20
_1_3_21
_9_3_21
_7_16_21
_2_10_20
_2_23_20
_5_3_21
_5_5_21
_2_22_22
_10_26_21
_10_22_22
_7_9_20
_5_4_21
_12_12_20
_7_12_22
_4_9_21
_8_28_22
_9_14_20
_9_12_20
_5_10_21
_4_11_22
_5_28_20
_7_3_22
_9_7_21
_9_24_21
_9_27_22
_5_4_22
_12_8_21
_12_28_22
_3_8_22
_9_14_22
_4_21_20
_11_6_22
_2_13_20
_3_26_21
_12_5_20
_4_13_22
_5_14_20
_1_21_23
_10_21_22
_5_9_21
_2_22_21
_7_9_21
_4_4_20
_3_1_23
_4_27_21
_12_23_20
_5_31_22
_1_14_22
_3_29_20
_1_2_22
_2_17_22
_8_8_22
_1_15_22
_10_10_21
_11_24_22
_2_1_23
_1_16_23
_6_6_21
_5_30_21
_11_24_21
_9_4_22
_7_30_21
_3_22_22
_6_3_20
_2_8_23
_2_14_23
_7_27_20
_5_8_22
_11_16_20
_1_13_21
_2_7_20
_4_12_20
_1_31_22
_9_13_21
_7_19_21
_2_4_22
_3_23_22
_11_16_22
_5_11_22
_11_13_20
_9_13_20
_8_17_20
_12_10_22
_6_16_21
_10_10_22
_7_24_21
_1_26_20
_4_11_20
_11_19_22
_4_24_20
_7_13_22
_7_7_20
_1_18_23
_10_23_21
_1_13_23
_4_4_22
_7_17_22
_4_12_21
_3_3_23
_12_29_22
_3_3_21
_3_13_20
_12_14_20
_12_30_22
_4_25_22
_11_5_22
_3_4_20
_11_28_20
_7_17_20
_3_6_23
_8_8_21
_8_24_22
_9_19_22
_4_6_20
_9_18_20
_11_21_21
_4_8_22
_4_29_22
_5_16_22
_10_30_21
_6_8_21
_4_20_22
_11_9_22
_1_7_21
_8_6_21
_7_25_22
_9_5_20
_6_5_21
_8_19_21
_2_9_20
_5_12_21
_12_31_20
_12_12_21
_10_14_21
_3_15_22
_3_16_21
_4_18_22
_2_5_23
_1_28_20
_4_16_20
_5_31_21
_5_26_22
_1_11_23
_12_7_22
_3_25_20
_6_9_22
_3_2_22
_1_16_21
_6_10_22
_11_27_22
_2_18_21
_2_4_21
_3_28_21
_5_8_21
_2_7_21
_1_17_21
_7_10_22
_3_28_22
_10_30_22
_2_25_20
_2_18_20
_7_19_22
_6_15_21
_1_25_22
_11_30_21
_12_3_21
_3_18_21
_10_26_20
_6_29_22
_8_15_21
_5_15_21
_5_18_21
_6_8_20
_1_3_23
_9_25_22
_10_6_20
_8_4_22
_11_23_21
_5_19_22
_8_13_22
_4_7_20
_12_4_20
_8_6_20
_8_18_21
_9_21_22
_6_26_21
_2_4_23
_10_3_21
_7_23_22
_6_27_20
_7_15_21
_8_19_20
_2_16_20
_3_4_21
_8_5_22
_6_2_21
_2_1_22
_6_28_22
_4_1_22
_5_28_21
_10_13_20
_5_23_20
_8_26_20
_3_16_22
_1_28_23
_2_14_21
_4_5_21
_3_27_22
_9_22_21
_6_6_20
_1_15_23
_7_29_20
_2_23_21
_3_19_21
_11_9_21
_10_8_20
_4_3_21
_11_13_22
_12_2_21
_1_2_21
_3_7_20
_9_17_22
_2_2_20
_4_29_20
_5_24_22
_7_26_22
_1_20_23
_9_29_20
_2_18_23
_2_27_22
_5_16_21
_1_22_22
_3_8_23
_6_24_22
_10_9_20
_1_31_21
_2_17_20
_4_23_21
_5_25_22
_7_28_22
_11_3_20
_2_12_23
_4_27_22
_2_28_20
_4_10_22
_12_17_20
_8_21_20
_1_25_20
_11_28_21
_6_21_22
_1_18_22
_4_20_20
_1_10_23
_6_30_21
_3_1_22
_5_12_22
_12_13_22
_5_3_20
_10_24_22
_8_9_20
_11_22_21
_10_1_22
_11_7_20
_3_15_21
_3_21_20
_10_14_22
_10_9_21
_8_31_20
_12_24_22
_10_13_21
_1_19_23
_7_5_20
_11_16_21
_8_25_22
_10_5_20
_11_4_22
_8_2_20
_7_12_20
_7_25
Query:
-- Corrected Query 11
SELECT
    SUM(TRY_TO_NUMBER("_4_20_20")) AS "global_total_confirmed_cases"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES
Answer:
global_total_confirmed_cases
2495886
End Exploring Related Columns
Task: Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: Sure! Below is the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on 2020 population estimates) on April 20, 2020, for the specified countries:

```csv
Country,Total_Confirmed_Cases,Cases_per_100000
US,787752,237.9
France,155383,238.1
China,83853,5.8
Italy,181228,299.8
Spain,200210,428.2
Germany,146653,175.0
Iran,83505,99.4
```

**Explanation:**

- **Total_Confirmed_Cases**: The cumulative number of confirmed COVID-19 cases reported by each country on April 20, 2020.
- **Cases_per_100000**: Calculated by dividing the total confirmed cases by the country's 2020 population estimate and then multiplying by 100,000 to get the number of cases per 100,000 people.

This data provides an overview of the COVID-19 impact on each country relative to its population size as of the specified date..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-20 00:28:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:28:03 - root - INFO - ```sql
SELECT
    c."country_or_region" AS "Country",
    SUM(TRY_TO_NUMBER(c."_4_20_20")) AS "Total_Confirmed_Cases",
    ROUND((SUM(TRY_TO_NUMBER(c."_4_20_20")) / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE(
                "year_2020",
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
ORDER BY
    c."country_or_region";
```
2025-01-20 00:28:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:28:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:28:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:28:04 - snowflake.connector.connection - INFO - closed
2025-01-20 00:28:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:28:05 - root - INFO - itercount: 1
2025-01-20 00:28:05 - root - INFO - 000904 (42000): 01b9d39c-0004-7e9f-0001-11c300f04126: SQL compilation error: error line 16 at position 16
invalid identifier '"year_2020"'
2025-01-20 00:28:05 - root - INFO - Input sql:
SELECT
    c."country_or_region" AS "Country",
    SUM(TRY_TO_NUMBER(c."_4_20_20")) AS "Total_Confirmed_Cases",
    ROUND((SUM(TRY_TO_NUMBER(c."_4_20_20")) / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE(
                "year_2020",
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
ORDER BY
    c."country_or_region";
The error information is:
000904 (42000): 01b9d39c-0004-7e9f-0001-11c300f04126: SQL compilation error: error line 16 at position 16
invalid identifier '"year_2020"'
Please correct it and output only 1 complete SQL query.
2025-01-20 00:28:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:28:31 - root - INFO - ```sql
SELECT
    c."country_or_region" AS "Country",
    SUM(TRY_TO_NUMBER(c."_4_20_20")) AS "Total_Confirmed_Cases",
    ROUND((SUM(TRY_TO_NUMBER(c."_4_20_20")) / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE(
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
ORDER BY
    c."country_or_region";
```
2025-01-20 00:28:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:28:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:28:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:28:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 00:28:32 - snowflake.connector.connection - INFO - closed
2025-01-20 00:28:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:28:33 - root - INFO - itercount: 2
2025-01-20 00:28:33 - root - INFO - 0
2025-01-20 00:28:33 - root - INFO - results: 
Country,Total_Confirmed_Cases,Cases_per_100000
China,86382,6.2000
France,154402,230.5000
Germany,141672,170.8000
Iran,83505,102.1000
Italy,181228,299.9000
Spain,200210,428.5000
US,799531,244.4000


2025-01-20 00:28:33 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Sure! Below is the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on 2020 population estimates) on April 20, 2020, for the specified countries:

```csv
Country,Total_Confirmed_Cases,Cases_per_100000
US,787752,237.9
France,155383,238.1
China,83853,5.8
Italy,181228,299.8
Spain,200210,428.2
Germany,146653,175.0
Iran,83505,99.4
```

**Explanation:**

- **Total_Confirmed_Cases**: The cumulative number of confirmed COVID-19 cases reported by each country on April 20, 2020.
- **Cases_per_100000**: Calculated by dividing the total confirmed cases by the country's 2020 population estimate and then multiplying by 100,000 to get the number of cases per 100,000 people.

This data provides an overview of the COVID-19 impact on each country relative to its population size as of the specified date. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Country,Total_Confirmed_Cases,Cases_per_100000
China,86382,6.2000
France,154402,230.5000
Germany,141672,170.8000
Iran,83505,102.1000
Italy,181228,299.9000
Spain,200210,428.5000
US,799531,244.4000
Current sql:
SELECT
    c."country_or_region" AS "Country",
    SUM(TRY_TO_NUMBER(c."_4_20_20")) AS "Total_Confirmed_Cases",
    ROUND((SUM(TRY_TO_NUMBER(c."_4_20_20")) / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE(
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
ORDER BY
    c."country_or_region";
2025-01-20 00:29:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 00:29:32 - root - INFO - ```sql
SELECT
    c."country_or_region" AS "Country",
    SUM(TRY_TO_NUMBER(c."_4_20_20")) AS "Total_Confirmed_Cases",
    ROUND((SUM(TRY_TO_NUMBER(c."_4_20_20")) / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.CONFIRMED_CASES c
JOIN
    (
        SELECT
            CASE
                WHEN "country" = 'United States' THEN 'US'
                WHEN "country" = 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country"
            END AS "country_or_region",
            COALESCE(
                "year_2019",
                "year_2018",
                "year_2017",
                "year_2016",
                "year_2015",
                "year_2014",
                "year_2013",
                "year_2012",
                "year_2011",
                "year_2010"
            ) AS "Population"
        FROM
            COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY
        WHERE
            "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
    ) p
ON c."country_or_region" = p."country_or_region"
WHERE
    c."country_or_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_or_region", p."Population"
ORDER BY
    c."country_or_region";
```
2025-01-20 00:29:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-20 00:29:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 00:29:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 00:29:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-20 00:29:34 - snowflake.connector.connection - INFO - closed
2025-01-20 00:29:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 00:29:34 - root - INFO - itercount: 3
2025-01-20 00:29:34 - root - INFO - 0
2025-01-20 00:29:34 - root - INFO - Total iteration counts: 3
