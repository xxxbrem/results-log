After comparing the SQL queries, the correct SQL is:

```plain
1result.sql
```

**Reasoning:**

The SQL query in `1result.sql` accurately identifies pseudo users who were active in the last 7 days but inactive in the last 2 days as of January 7, 2021. Here's why:

1. **Comprehensive Inclusion of Events:**

   - The query aggregates events from **January 1 to January 7, 2021** by unifying all events in the `all_events` common table expression (CTE).
   - This ensures that all user activities within the **last 7 days** are considered.

2. **Accurate Filtering Using the HAVING Clause:**

   - The `HAVING` clause employs aggregate functions to apply conditions on grouped data:
     - `MAX(CASE WHEN "EVENT_DATE" BETWEEN '20210101' AND '20210105' THEN 1 ELSE 0 END) = 1`
       - This condition ensures that the user had at least one event between **January 1 and January 5**, confirming activity in the **last 7 days**.
     - `MAX(CASE WHEN "EVENT_DATE" IN ('20210106', '20210107') THEN 1 ELSE 0 END) = 0`
       - This condition verifies that the user had **no events** on **January 6 or January 7**, ensuring they were **inactive in the last 2 days**.

3. **Effective Use of Aggregate Functions:**

   - By utilizing `MAX(CASE WHEN ...)`, the query checks for the presence or absence of events on specific dates for each user.
   - The use of aggregate functions over grouped data (`GROUP BY "USER_PSEUDO_ID"`) accurately reflects user activity across multiple dates.

4. **Accurate Representation of the Required Logic:**

   - The query precisely implements the requirement: **active in the last 7 days but inactive in the last 2 days**.
   - It ensures that users who were only active on **January 6 or 7** are excluded, even if they were inactive before.

5. **Efficiency and Clarity:**

   - The query is structured clearly with a CTE for better readability and maintenance.
   - It efficiently processes the data without unnecessary complexity.

**Conclusion:**

The `1result.sql` query effectively fulfills the task's requirements by accurately identifying the target user set using appropriate SQL constructs.