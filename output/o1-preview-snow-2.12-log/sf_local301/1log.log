2025-01-20 21:41:27 - openai._base_client - INFO - Retrying request to /chat/completions in 0.495649 seconds
2025-01-20 21:42:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:42:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:42:28 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:29 - root - INFO - SQL:
SELECT DISTINCT "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Results:
calendar_year
2020
2019
2018

2025-01-20 21:42:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:30 - root - INFO - SQL:
SELECT "week_date", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" IN (2018, 2019, 2020)
   LIMIT 1000;
Results:
Too long, hard cut:
week_date,calendar_year
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020


2025-01-20 21:42:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-20 21:42:31 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:32 - root - INFO - SQL:
SELECT DISTINCT "month_number", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Results:
month_number,calendar_year
8,2020
7,2020
6,2020
5,2020
3,2020
9,2019
8,2019
7,2019
6,2019
5,2019
4,2019
3,2019
9,2018
8,2018
7,2018
6,2018
5,2018
4,2018
4,2020
3,2018

2025-01-20 21:42:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:33 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:34 - root - INFO - SQL:
SELECT "week_number", "week_date", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "month_number" = 6 AND "calendar_year" IN (2018, 2019, 2020)
   LIMIT 1000;
Results:
Too long, hard cut:
week_number,week_date,calendar_year
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,20

2025-01-20 21:42:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:35 - root - INFO - SQL:
SELECT DISTINCT "week_date_formatted"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Results:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26

2025-01-20 21:42:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:36 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:37 - root - INFO - SQL:
SELECT "week_date", "week_date_formatted"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Results:
Too long, hard cut:
week_date,week_date_formatted
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,202

2025-01-20 21:42:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 951
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:38 - root - INFO - SQL:
SELECT "week_date", "sales"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" = 6
   LIMIT 1000;
Results:
Too long, hard cut:
week_date,sales
2018-06-25,4784320
2018-06-25,980247
2018-06-25,610184
2018-06-25,9058
2018-06-25,2430726
2018-06-25,4494
2018-06-25,411615
2018-06-25,1498072
2018-06-25,42924
2018-06-25,14335
2018-06-25,3053553
2018-06-25,3402800
2018-06-25,98731
2018-06-25,1539
2018-06-25,41931
2018-06-25,5977
2018-06-25,2303157
2018-06-25,4781297
2018-06-25,26129
2018-06-25,9957
2018-06-25,13031
2018-06-25,4080
2018-06-25,2306973
2018-06-25,413182
2018-06-25,17831
2018-06-25,12307
2018-06-25,20453
2018-06-25,77985
2018-06-25,24996545
2018-06-25,33563
2018-06-25,23649
2018-06-25,55407
2018-06-25,307
2018-06-25,2234500
2018-06-25,27885
2018-06-25,3347
2018-06-25,8297875
2018-06-25,793
2018-06-25,120340
2018-06-25,8577
2018-06-25,33831
2018-06-25,7356
2018-06-25,289806
2018-06-25,62243
2018-06-25,1626236
2018-06-25,163954
2018-06-25,75114
2018-06-25,8360
2018-06-25,57084
2018-06-25,7758
2018-06-25,1103704
2018-06-25,8636
2018-06-25,33131
2018-06-25,2547864
2018-06-25,577
2018-06-25,102674
2018-06-25,149138
2018-06-25,822356
2018-06-25,109946
2018-06-25,4242076
2018-06-25,10552
2018-06-25,7651
2018-06-25,184592
2018-06-25,1672173
2018-06-25,78511
2018-06-25,2849696
2018-06-25,26683
2018-06-25,8738789
2018-06-25,26824
2018-06-25,608274
2018-06-25,3499
2018-06-25,21378
2018-06-25,71114
2018-06-25,18917331
2018-06-25,27001
2018-06-25,186687
2018-06-25,495391
2018-06-25,198274
2018-06-25,23955
2018-06-25,362831
2018-06-25,180084
2018-06-25,73791
2018-06-25,70410
2018-06-25,17804
2018-06-25,886397
2018-06-25,7339088
2018-06-25,293192
2018-06-25,14113
2018-06-25,18254
2018-06-25,11552
2018-06-25,12842306
2018-06-25,2056991
2018-06-25,36666
2018-06-25,11898455
2018-06-25,3812138
2018-06-25,2995554
2018-06-25,20224
2018-06-25,680840
2018-06-25,15158401
2018-06-25,2203439
2018-06-25,31522
2018-06-25,9473
2018-06-25,181791
2018-06-25,45843
2018-06-25,257011
2018-06-25,15290107
2018-06-25,5052582
2018-06-25,2126186
2018-06-25,26513
2018-06-25,21468
2018-06-25,1360266
2018-06-25,4671
2018-06-25,31719
2018-06-25,1228824
2018-06-25,16287
2018-06-25,7479
2018-06-25,1044691
2018-06-25,64697
2018-06-25,12781
2018-06-25,6080231
2018-06-25,938392
2018-06-25,193426
2018-06-25,2589
2018-06-25,527867
2018-06-25,8045
2018-06-25,1947375
2018-06-25,16995
2018-06-25,1029085
2018-06-25,865735
2018-06-25,189722
2018-06-25,490531
2018-06-25,31208
2018-06-25,255432
2018-06-25,2144210
2018-06-25,3565999
2018-06-25,76181
2018-06-25,1109831
2018-06-25,880686
2018-06-25,387252
2018-06-25,19202
2018-06-25,148551
2018-06-25,427332
2018-06-25,1512
2018-06-25,2008147
2018-06-25,24546
2018-06-25,1710862
2018-06-25,8792
2018-06-25,4334
2018-06-25,270323
2018-06-25,46239
2018-06-25,32404
2018-06-25,305064
2018-06-25,273410
2018-06-25,6105
2018-06-25,7767057
2018-06-25,1868502
2018-06-25,351
2018-06-25,1662
2018-06-25,3805316
2018-06-25,57987
2018-06-25,1521003
2018-06-25,6587
2018-06-25,82190
2018-06-25,1207888
2018-06-25,814784
2018-06-25,13030
2018-06-25,13684262
2018-06-25,28555
2018-06-25,10405
2018-06-25,4490049
2018-06-25,24295
2018-06-25,24061
2018-06-25,2568012
2018-06-25,3739885
2018-06-25,3587807
2018-06-25,2770
2018-06-25,463048
2018-06-25,18376
2018-06-25,885815
2018-06-25,200901
2018-06-25,15435775
2018-06-25,3903411
2018-06-25,1363225
2018-06-25,1524
2018-06-25,12284532
2018-06-25,1678010
2018-06-25,23466
2018-06-25,2513401
2018-06-25,457754
2018-06-25,1305
2018-06-25,300916
2018-06-25,54056
2018-06-25,52609
2018-06-25,24949
2018-06-25,3363509
2018-06-25,440274
2018-06-25,43259
2018-06-25,440
2018-06-25,781083
2018-06-25,1171
2018-06-25,633015
2018-06-25,6255
2018-06-25,119007
2018-06-25,17581490
2018-06-25,136428
2018-06-25,2367537
2018-06-25,4742107
2018-06-25,291230
2018-06-25,346
2018-06-25,969548
2018-06-25,833039
2018-06-25,673560
2018-06-25,4510759
2018-06-25,1073
2018-06-25,35723
2018-06-25,5985851
2018-06-25,6412949
2018-06-25,4914683
2018-06-25,2826
2018-06-25,2346
2018-06-25,210460
2018-06-25,108496
2018-06-25,46154511
2018-06-25,314869
2018-06-25,302838
2018-06-25,886488
2018-06-25,430708
2018-06-25,52896
2018-06-25,35581
2018-06-25,152531
2018-06-25,44370
2018-06-25,25017
2018-06-25,4896922
2018-06-25,45790
2018-06-25,750447
2018-06-25,46194251
2018-06-25,516576
2018-06-25,62201935
2018-06-18,850432
2018-06-18,197694
2018-06-18,48079
2018-06-18,259145
2018-06-18,1356
2018-06-18,1955977
2018-06-18,47811
2018-06-18,1662663
2018-06-18,9473
2018-06-18,2843857
2018-06-18,23047
2018-06-18,67618
2018-06-18,23077
2018-06-18,371060
2018-06-18,15160887
2018-06-18,32768
2018-06-18,997110
2018-06-18,828629
2018-06-18,961163
2018-06-18,959705
2018-06-18,902
2018-06-18,7330858
2018-06-18,271923
2018-06-18,6678
2018-06-18,210278
2018-06-18,2584766
2018-06-18,85501
2018-06-18,10315
2018-06-18,421769
2018-06-18,15602
2018-06-18,2579875
2018-06-18,456644
2018-06-18,3881100
2018-06-18,860
2018-06-18,1211160
2018-06-18,1666337
2018-06-18,7861845
2018-06-18,9017
2018-06-18,3537336
2018-06-18,19658
2018-06-18,15311
2018-06-18,425500
2018-06-18,34585
2018-06-18

2025-01-20 21:42:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:40 - root - INFO - SQL:
SELECT "week_date", "week_number", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6)
   ORDER BY "week_number"
   LIMIT 1000;
Results:
Too long, hard cut:
week_date,week_number,calendar_year
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-

2025-01-20 21:42:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-20 21:42:41 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:42 - root - INFO - SQL:
SELECT "week_date", "sales", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6, 7)
   LIMIT 1000;
Results:
Too long, hard cut:
week_date,sales,calendar_year
2018-07-30,13903591,2018
2018-07-30,45571,2018
2018-07-30,122229,2018
2018-07-30,170688,2018
2018-07-30,3018932,2018
2018-07-30,202146,2018
2018-07-30,40017,2018
2018-07-30,4371,2018
2018-07-30,9464,2018
2018-07-30,80104,2018
2018-07-30,298080,2018
2018-07-30,9742,2018
2018-07-30,869657,2018
2018-07-30,4361666,2018
2018-07-30,15159,2018
2018-07-30,198024,2018
2018-07-30,5886451,2018
2018-07-30,873724,2018
2018-07-30,1622,2018
2018-07-30,2436346,2018
2018-07-30,11785,2018
2018-07-30,62623,2018
2018-07-30,9624597,2018
2018-07-30,35256,2018
2018-07-30,406287,2018
2018-07-30,971309,2018
2018-07-30,1428770,2018
2018-07-30,18567,2018
2018-07-30,191645,2018
2018-07-30,7862937,2018
2018-07-30,19354,2018
2018-07-30,7243,2018
2018-07-30,1959939,2018
2018-07-30,186727,2018
2018-07-30,154859,2018
2018-07-30,386,2018
2018-07-30,171081,2018
2018-07-30,29449,2018
2018-07-30,3691651,2018
2018-07-30,7532486,2018
2018-07-30,215192,2018
2018-07-30,16587776,2018
2018-07-30,2168669,2018
2018-07-30,2137159,2018
2018-07-30,3034,2018
2018-07-30,1215911,2018
2018-07-30,40953,2018
2018-07-30,62489,2018
2018-07-30,16696,2018
2018-07-30,3490872,2018
2018-07-30,1961,2018
2018-07-30,527355,2018
2018-07-30,12386,2018
2018-07-30,2628,2018
2018-07-30,6960,2018
2018-07-30,12357,2018
2018-07-30,3552744,2018
2018-07-30,1535,2018
2018-07-30,48335465,2018
2018-07-30,763380,2018
2018-07-30,1681060,2018
2018-07-30,395467,2018
2018-07-30,22089,2018
2018-07-30,26445,2018
2018-07-30,7244,2018
2018-07-30,301487,2018
2018-07-30,1404,2018
2018-07-30,1656889,2018
2018-07-30,1241463,2018
2018-07-30,2606757,2018
2018-07-30,813719,2018
2018-07-30,8813,2018
2018-07-30,13420550,2018
2018-07-30,36612,2018
2018-07-30,1074878,2018
2018-07-30,3309466,2018
2018-07-30,75440,2018
2018-07-30,26234,2018
2018-07-30,83070,2018
2018-07-30,25125,2018
2018-07-30,182993,2018
2018-07-30,4874840,2018
2018-07-30,599762,2018
2018-07-30,5233,2018
2018-07-30,5039522,2018
2018-07-30,2097411,2018
2018-07-30,2086,2018
2018-07-30,25994424,2018
2018-07-30,962977,2018
2018-07-30,211053,2018
2018-07-30,35459,2018
2018-07-30,3983227,2018
2018-07-30,260247,2018
2018-07-30,7244,2018
2018-07-30,14450,2018
2018-07-30,488992,2018
2018-07-30,28869,2018
2018-07-30,3883263,2018
2018-07-30,1110132,2018
2018-07-30,12093416,2018
2018-07-30,347389,2018
2018-07-30,475371,2018
2018-07-30,5977222,2018
2018-07-30,75507,2018
2018-07-30,9616,2018
2018-07-30,585689,2018
2018-07-30,462919,2018
2018-07-30,2526244,2018
2018-07-30,323308,2018
2018-07-30,100346,2018
2018-07-30,2266556,2018
2018-07-30,21380,2018
2018-07-30,22741,2018
2018-07-30,9491,2018
2018-07-30,3151796,2018
2018-07-30,6194,2018
2018-07-30,127773,2018
2018-07-30,2197453,2018
2018-07-30,411858,2018
2018-07-30,2703836,2018
2018-07-30,11835579,2018
2018-07-30,2199774,2018
2018-07-30,272002,2018
2018-07-30,13373,2018
2018-07-30,826987,2018
2018-07-30,50471,2018
2018-07-30,1557,2018
2018-07-30,66221,2018
2018-07-30,599363,2018
2018-07-30,15500205,2018
2018-07-30,27673,2018
2018-07-30,807710,2018
2018-07-30,2449302,2018
2018-07-30,5027111,2018
2018-07-30,949179,2018
2018-07-30,482315,2018
2018-07-30,29665,2018
2018-07-30,29158,2018
2018-07-30,782959,2018
2018-07-30,82508,2018
2018-07-30,1573145,2018
2018-07-30,2330423,2018
2018-07-30,73799,2018
2018-07-30,205094,2018
2018-07-30,872334,2018
2018-07-30,4481099,2018
2018-07-30,666846,2018
2018-07-30,40901,2018
2018-07-30,17591,2018
2018-07-30,56194,2018
2018-07-30,1003988,2018
2018-07-30,144319,2018
2018-07-30,20484,2018
2018-07-30,36080,2018
2018-07-30,2365683,2018
2018-07-30,4621256,2018
2018-07-30,246303,2018
2018-07-30,16998088,2018
2018-07-30,1341966,2018
2018-07-30,62641,2018
2018-07-30,1619985,2018
2018-07-30,188501,2018
2018-07-30,551972,2018
2018-07-30,3692547,2018
2018-07-30,3839,2018
2018-07-30,1708,2018
2018-07-30,46758,2018
2018-07-30,4204604,2018
2018-07-30,4735,2018
2018-07-30,23424,2018
2018-07-30,28633,2018
2018-07-30,26933,2018
2018-07-30,63956694,2018
2018-07-30,40752,2018
2018-07-30,7814,2018
2018-07-30,289459,2018
2018-07-30,19842905,2018
2018-07-30,3050995,2018
2018-07-30,5243165,2018
2018-07-30,45490,2018
2018-07-30,17840401,2018
2018-07-30,296822,2018
2018-07-30,38354,2018
2018-07-30,1050113,2018
2018-07-30,16884,2018
2018-07-30,1801,2018
2018-07-30,3560984,2018
2018-07-30,3946,2018
2018-07-30,1957,2018
2018-07-30,23999,2018
2018-07-30,313,2018
2018-07-30,59079,2018
2018-07-30,125012,2018
2018-07-30,1220,2018
2018-07-30,1297781,2018
2018-07-30,40767,2018
2018-07-30,28570,2018
2018-07-30,27576,2018
2018-07-30,6502022,2018
2018-07-30,109708,2018
2018-07-30,325311,2018
2018-07-30,4371,2018
2018-07-30,60050,2018
2018-07-30,10502,2018
2018-07-30,27669,2018
2018-07-30,38833,2018
2018-07-30,621487,2018
2018-07-30,4441,2018
2018-07-30,10386,2018
2018-07-30,46966890,2018
2018-07-30,329559,2018
2018-07-30,8782,2018
2018-07-30,21366,2018
2018-07-30,1081851,2018
2018-07-30,26861,2018
2018-07-30,1569818,2018
2018-07-30,271851,2018
2018-07-30,518103,2018
2018-0

2025-01-20 21:42:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:42:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:42:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:42:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-20 21:42:43 - snowflake.connector.connection - INFO - closed
2025-01-20 21:42:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:42:43 - root - INFO - SQL:
SELECT DISTINCT "age_band"
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
    LIMIT 1000;
Results:
age_band
Retirees
Young Adults
Middle Aged
unknown

2025-01-20 21:42:43 - root - INFO - itercount: 0
2025-01-20 21:42:43 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
**Relevant Table and Columns:**

- **Table:** `BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES`

- **Columns:**

  - `"calendar_year"`: Potential usage - Filter data for the years 2018, 2019, and 2020.
  - `"week_date"`: Potential usage - Identify weeks around mid-June based on week dates.
  - `"sales"`: Potential usage - Calculate sales amounts for the specified periods.
  - `"month_number"`: Potential usage - Filter data for the month of June (`"month_number"` = 6).
  - `"week_number"`: Potential usage - Determine the weeks leading up to and following June 15.
  - `"week_date_formatted"`: Potential usage - Examine the date format to assist in date filtering.

- **Conditions that may be used:**

  - `"calendar_year"` IN (2018, 2019, 2020)
  - `"month_number"` = 5, 6, or 7 (to get data around June)
  - `"week_date"` between specific dates to capture four weeks before and after June 15

---

**SQL Queries:**

1. **Query 1:** Select distinct calendar years to confirm available years.

   ```sql
   SELECT DISTINCT "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
   ```

2. **Query 2:** Retrieve week dates and calendar years for the years 2018, 2019, and 2020.

   ```sql
   SELECT "week_date", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" IN (2018, 2019, 2020)
   LIMIT 1000;
   ```

3. **Query 3:** Select distinct month numbers to see the distribution of months.

   ```sql
   SELECT DISTINCT "month_number", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
   ```

4. **Query 4:** Retrieve week numbers and week dates in June (`"month_number"` = 6).

   ```sql
   SELECT "week_number", "week_date", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "month_number" = 6 AND "calendar_year" IN (2018, 2019, 2020)
   LIMIT 1000;
   ```

5. **Query 5:** Examine the format of `"week_date_formatted"` column.

   ```sql
   SELECT DISTINCT "week_date_formatted"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
   ```

6. **Query 6:** Compare `"week_date"` and `"week_date_formatted"` to understand date formats.

   ```sql
   SELECT "week_date", "week_date_formatted"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
   ```

7. **Query 7:** Retrieve sales data for June 2018.

   ```sql
   SELECT "week_date", "sales"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" = 6
   LIMIT 1000;
   ```

8. **Query 8:** Get week dates and week numbers for May and June 2018.

   ```sql
   SELECT "week_date", "week_number", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6)
   ORDER BY "week_number"
   LIMIT 1000;
   ```

9. **Query 9:** Retrieve sales data for weeks around mid-June 2018.

   ```sql
   SELECT "week_date", "sales", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6, 7)
   LIMIT 1000;
   ```

10. **Query 10:** Select distinct `"age_band"` values to understand customer age distribution.

    ```sql
    SELECT DISTINCT "age_band"
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
    LIMIT 1000;
    ```

---

These queries will help in understanding the data within the relevant columns and assist in calculating the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year 2018, 2019, and 2020.Query:
SELECT DISTINCT "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Answer:
calendar_year
2020
2019
2018
Query:
SELECT "week_date", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" IN (2018, 2019, 2020)
   LIMIT 1000;
Answer:
Too long, hard cut:
week_date,calendar_year
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-31,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020
2020-08-24,2020

Query:
SELECT DISTINCT "month_number", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Answer:
month_number,calendar_year
8,2020
7,2020
6,2020
5,2020
3,2020
9,2019
8,2019
7,2019
6,2019
5,2019
4,2019
3,2019
9,2018
8,2018
7,2018
6,2018
5,2018
4,2018
4,2020
3,2018
Query:
SELECT "week_number", "week_date", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "month_number" = 6 AND "calendar_year" IN (2018, 2019, 2020)
   LIMIT 1000;
Answer:
Too long, hard cut:
week_number,week_date,calendar_year
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
27,2020-06-29,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,2020-06-22,2020
26,20
Query:
SELECT DISTINCT "week_date_formatted"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Answer:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26
Query:
SELECT "week_date", "week_date_formatted"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   LIMIT 1000;
Answer:
Too long, hard cut:
week_date,week_date_formatted
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,2020-8-31
2020-08-31,202
Query:
SELECT "week_date", "sales"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" = 6
   LIMIT 1000;
Answer:
Too long, hard cut:
week_date,sales
2018-06-25,4784320
2018-06-25,980247
2018-06-25,610184
2018-06-25,9058
2018-06-25,2430726
2018-06-25,4494
2018-06-25,411615
2018-06-25,1498072
2018-06-25,42924
2018-06-25,14335
2018-06-25,3053553
2018-06-25,3402800
2018-06-25,98731
2018-06-25,1539
2018-06-25,41931
2018-06-25,5977
2018-06-25,2303157
2018-06-25,4781297
2018-06-25,26129
2018-06-25,9957
2018-06-25,13031
2018-06-25,4080
2018-06-25,2306973
2018-06-25,413182
2018-06-25,17831
2018-06-25,12307
2018-06-25,20453
2018-06-25,77985
2018-06-25,24996545
2018-06-25,33563
2018-06-25,23649
2018-06-25,55407
2018-06-25,307
2018-06-25,2234500
2018-06-25,27885
2018-06-25,3347
2018-06-25,8297875
2018-06-25,793
2018-06-25,120340
2018-06-25,8577
2018-06-25,33831
2018-06-25,7356
2018-06-25,289806
2018-06-25,62243
2018-06-25,1626236
2018-06-25,163954
2018-06-25,75114
2018-06-25,8360
2018-06-25,57084
2018-06-25,7758
2018-06-25,1103704
2018-06-25,8636
2018-06-25,33131
2018-06-25,2547864
2018-06-25,577
2018-06-25,102674
2018-06-25,149138
2018-06-25,822356
2018-06-25,109946
2018-06-25,4242076
2018-06-25,10552
2018-06-25,7651
2018-06-25,184592
2018-06-25,1672173
2018-06-25,78511
2018-06-25,2849696
2018-06-25,26683
2018-06-25,8738789
2018-06-25,26824
2018-06-25,608274
2018-06-25,3499
2018-06-25,21378
2018-06-25,71114
2018-06-25,18917331
2018-06-25,27001
2018-06-25,186687
2018-06-25,495391
2018-06-25,198274
2018-06-25,23955
2018-06-25,362831
2018-06-25,180084
2018-06-25,73791
2018-06-25,70410
2018-06-25,17804
2018-06-25,886397
2018-06-25,7339088
2018-06-25,293192
2018-06-25,14113
2018-06-25,18254
2018-06-25,11552
2018-06-25,12842306
2018-06-25,2056991
2018-06-25,36666
2018-06-25,11898455
2018-06-25,3812138
2018-06-25,2995554
2018-06-25,20224
2018-06-25,680840
2018-06-25,15158401
2018-06-25,2203439
2018-06-25,31522
2018-06-25,9473
2018-06-25,181791
2018-06-25,45843
2018-06-25,257011
2018-06-25,15290107
2018-06-25,5052582
2018-06-25,2126186
2018-06-25,26513
2018-06-25,21468
2018-06-25,1360266
2018-06-25,4671
2018-06-25,31719
2018-06-25,1228824
2018-06-25,16287
2018-06-25,7479
2018-06-25,1044691
2018-06-25,64697
2018-06-25,12781
2018-06-25,6080231
2018-06-25,938392
2018-06-25,193426
2018-06-25,2589
2018-06-25,527867
2018-06-25,8045
2018-06-25,1947375
2018-06-25,16995
2018-06-25,1029085
2018-06-25,865735
2018-06-25,189722
2018-06-25,490531
2018-06-25,31208
2018-06-25,255432
2018-06-25,2144210
2018-06-25,3565999
2018-06-25,76181
2018-06-25,1109831
2018-06-25,880686
2018-06-25,387252
2018-06-25,19202
2018-06-25,148551
2018-06-25,427332
2018-06-25,1512
2018-06-25,2008147
2018-06-25,24546
2018-06-25,1710862
2018-06-25,8792
2018-06-25,4334
2018-06-25,270323
2018-06-25,46239
2018-06-25,32404
2018-06-25,305064
2018-06-25,273410
2018-06-25,6105
2018-06-25,7767057
2018-06-25,1868502
2018-06-25,351
2018-06-25,1662
2018-06-25,3805316
2018-06-25,57987
2018-06-25,1521003
2018-06-25,6587
2018-06-25,82190
2018-06-25,1207888
2018-06-25,814784
2018-06-25,13030
2018-06-25,13684262
2018-06-25,28555
2018-06-25,10405
2018-06-25,4490049
2018-06-25,24295
2018-06-25,24061
2018-06-25,2568012
2018-06-25,3739885
2018-06-25,3587807
2018-06-25,2770
2018-06-25,463048
2018-06-25,18376
2018-06-25,885815
2018-06-25,200901
2018-06-25,15435775
2018-06-25,3903411
2018-06-25,1363225
2018-06-25,1524
2018-06-25,12284532
2018-06-25,1678010
2018-06-25,23466
2018-06-25,2513401
2018-06-25,457754
2018-06-25,1305
2018-06-25,300916
2018-06-25,54056
2018-06-25,52609
2018-06-25,24949
2018-06-25,3363509
2018-06-25,440274
2018-06-25,43259
2018-06-25,440
2018-06-25,781083
2018-06-25,1171
2018-06-25,633015
2018-06-25,6255
2018-06-25,119007
2018-06-25,17581490
2018-06-25,136428
2018-06-25,2367537
2018-06-25,4742107
2018-06-25,291230
2018-06-25,346
2018-06-25,969548
2018-06-25,833039
2018-06-25,673560
2018-06-25,4510759
2018-06-25,1073
2018-06-25,35723
2018-06-25,5985851
2018-06-25,6412949
2018-06-25,4914683
2018-06-25,2826
2018-06-25,2346
2018-06-25,210460
2018-06-25,108496
2018-06-25,46154511
2018-06-25,314869
2018-06-25,302838
2018-06-25,886488
2018-06-25,430708
2018-06-25,52896
2018-06-25,35581
2018-06-25,152531
2018-06-25,44370
2018-06-25,25017
2018-06-25,4896922
2018-06-25,45790
2018-06-25,750447
2018-06-25,46194251
2018-06-25,516576
2018-06-25,62201935
2018-06-18,850432
2018-06-18,197694
2018-06-18,48079
2018-06-18,259145
2018-06-18,1356
2018-06-18,1955977
2018-06-18,47811
2018-06-18,1662663
2018-06-18,9473
2018-06-18,2843857
2018-06-18,23047
2018-06-18,67618
2018-06-18,23077
2018-06-18,371060
2018-06-18,15160887
2018-06-18,32768
2018-06-18,997110
2018-06-18,828629
2018-06-18,961163
2018-06-18,959705
2018-06-18,902
2018-06-18,7330858
2018-06-18,271923
2018-06-18,6678
2018-06-18,210278
2018-06-18,2584766
2018-06-18,85501
2018-06-18,10315
2018-06-18,421769
2018-06-18,15602
2018-06-18,2579875
2018-06-18,456644
2018-06-18,3881100
2018-06-18,860
2018-06-18,1211160
2018-06-18,1666337
2018-06-18,7861845
2018-06-18,9017
2018-06-18,3537336
2018-06-18,19658
2018-06-18,15311
2018-06-18,425500
2018-06-18,34585
2018-06-18
Query:
SELECT "week_date", "week_number", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6)
   ORDER BY "week_number"
   LIMIT 1000;
Answer:
Too long, hard cut:
week_date,week_number,calendar_year
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-07,19,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-05-14,20,2018
2018-
Query:
SELECT "week_date", "sales", "calendar_year"
   FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
   WHERE "calendar_year" = 2018 AND "month_number" IN (5, 6, 7)
   LIMIT 1000;
Answer:
Too long, hard cut:
week_date,sales,calendar_year
2018-07-30,13903591,2018
2018-07-30,45571,2018
2018-07-30,122229,2018
2018-07-30,170688,2018
2018-07-30,3018932,2018
2018-07-30,202146,2018
2018-07-30,40017,2018
2018-07-30,4371,2018
2018-07-30,9464,2018
2018-07-30,80104,2018
2018-07-30,298080,2018
2018-07-30,9742,2018
2018-07-30,869657,2018
2018-07-30,4361666,2018
2018-07-30,15159,2018
2018-07-30,198024,2018
2018-07-30,5886451,2018
2018-07-30,873724,2018
2018-07-30,1622,2018
2018-07-30,2436346,2018
2018-07-30,11785,2018
2018-07-30,62623,2018
2018-07-30,9624597,2018
2018-07-30,35256,2018
2018-07-30,406287,2018
2018-07-30,971309,2018
2018-07-30,1428770,2018
2018-07-30,18567,2018
2018-07-30,191645,2018
2018-07-30,7862937,2018
2018-07-30,19354,2018
2018-07-30,7243,2018
2018-07-30,1959939,2018
2018-07-30,186727,2018
2018-07-30,154859,2018
2018-07-30,386,2018
2018-07-30,171081,2018
2018-07-30,29449,2018
2018-07-30,3691651,2018
2018-07-30,7532486,2018
2018-07-30,215192,2018
2018-07-30,16587776,2018
2018-07-30,2168669,2018
2018-07-30,2137159,2018
2018-07-30,3034,2018
2018-07-30,1215911,2018
2018-07-30,40953,2018
2018-07-30,62489,2018
2018-07-30,16696,2018
2018-07-30,3490872,2018
2018-07-30,1961,2018
2018-07-30,527355,2018
2018-07-30,12386,2018
2018-07-30,2628,2018
2018-07-30,6960,2018
2018-07-30,12357,2018
2018-07-30,3552744,2018
2018-07-30,1535,2018
2018-07-30,48335465,2018
2018-07-30,763380,2018
2018-07-30,1681060,2018
2018-07-30,395467,2018
2018-07-30,22089,2018
2018-07-30,26445,2018
2018-07-30,7244,2018
2018-07-30,301487,2018
2018-07-30,1404,2018
2018-07-30,1656889,2018
2018-07-30,1241463,2018
2018-07-30,2606757,2018
2018-07-30,813719,2018
2018-07-30,8813,2018
2018-07-30,13420550,2018
2018-07-30,36612,2018
2018-07-30,1074878,2018
2018-07-30,3309466,2018
2018-07-30,75440,2018
2018-07-30,26234,2018
2018-07-30,83070,2018
2018-07-30,25125,2018
2018-07-30,182993,2018
2018-07-30,4874840,2018
2018-07-30,599762,2018
2018-07-30,5233,2018
2018-07-30,5039522,2018
2018-07-30,2097411,2018
2018-07-30,2086,2018
2018-07-30,25994424,2018
2018-07-30,962977,2018
2018-07-30,211053,2018
2018-07-30,35459,2018
2018-07-30,3983227,2018
2018-07-30,260247,2018
2018-07-30,7244,2018
2018-07-30,14450,2018
2018-07-30,488992,2018
2018-07-30,28869,2018
2018-07-30,3883263,2018
2018-07-30,1110132,2018
2018-07-30,12093416,2018
2018-07-30,347389,2018
2018-07-30,475371,2018
2018-07-30,5977222,2018
2018-07-30,75507,2018
2018-07-30,9616,2018
2018-07-30,585689,2018
2018-07-30,462919,2018
2018-07-30,2526244,2018
2018-07-30,323308,2018
2018-07-30,100346,2018
2018-07-30,2266556,2018
2018-07-30,21380,2018
2018-07-30,22741,2018
2018-07-30,9491,2018
2018-07-30,3151796,2018
2018-07-30,6194,2018
2018-07-30,127773,2018
2018-07-30,2197453,2018
2018-07-30,411858,2018
2018-07-30,2703836,2018
2018-07-30,11835579,2018
2018-07-30,2199774,2018
2018-07-30,272002,2018
2018-07-30,13373,2018
2018-07-30,826987,2018
2018-07-30,50471,2018
2018-07-30,1557,2018
2018-07-30,66221,2018
2018-07-30,599363,2018
2018-07-30,15500205,2018
2018-07-30,27673,2018
2018-07-30,807710,2018
2018-07-30,2449302,2018
2018-07-30,5027111,2018
2018-07-30,949179,2018
2018-07-30,482315,2018
2018-07-30,29665,2018
2018-07-30,29158,2018
2018-07-30,782959,2018
2018-07-30,82508,2018
2018-07-30,1573145,2018
2018-07-30,2330423,2018
2018-07-30,73799,2018
2018-07-30,205094,2018
2018-07-30,872334,2018
2018-07-30,4481099,2018
2018-07-30,666846,2018
2018-07-30,40901,2018
2018-07-30,17591,2018
2018-07-30,56194,2018
2018-07-30,1003988,2018
2018-07-30,144319,2018
2018-07-30,20484,2018
2018-07-30,36080,2018
2018-07-30,2365683,2018
2018-07-30,4621256,2018
2018-07-30,246303,2018
2018-07-30,16998088,2018
2018-07-30,1341966,2018
2018-07-30,62641,2018
2018-07-30,1619985,2018
2018-07-30,188501,2018
2018-07-30,551972,2018
2018-07-30,3692547,2018
2018-07-30,3839,2018
2018-07-30,1708,2018
2018-07-30,46758,2018
2018-07-30,4204604,2018
2018-07-30,4735,2018
2018-07-30,23424,2018
2018-07-30,28633,2018
2018-07-30,26933,2018
2018-07-30,63956694,2018
2018-07-30,40752,2018
2018-07-30,7814,2018
2018-07-30,289459,2018
2018-07-30,19842905,2018
2018-07-30,3050995,2018
2018-07-30,5243165,2018
2018-07-30,45490,2018
2018-07-30,17840401,2018
2018-07-30,296822,2018
2018-07-30,38354,2018
2018-07-30,1050113,2018
2018-07-30,16884,2018
2018-07-30,1801,2018
2018-07-30,3560984,2018
2018-07-30,3946,2018
2018-07-30,1957,2018
2018-07-30,23999,2018
2018-07-30,313,2018
2018-07-30,59079,2018
2018-07-30,125012,2018
2018-07-30,1220,2018
2018-07-30,1297781,2018
2018-07-30,40767,2018
2018-07-30,28570,2018
2018-07-30,27576,2018
2018-07-30,6502022,2018
2018-07-30,109708,2018
2018-07-30,325311,2018
2018-07-30,4371,2018
2018-07-30,60050,2018
2018-07-30,10502,2018
2018-07-30,27669,2018
2018-07-30,38833,2018
2018-07-30,621487,2018
2018-07-30,4441,2018
2018-07-30,10386,2018
2018-07-30,46966890,2018
2018-07-30,329559,2018
2018-07-30,8782,2018
2018-07-30,21366,2018
2018-07-30,1081851,2018
2018-07-30,26861,2018
2018-07-30,1569818,2018
2018-07-30,271851,2018
2018-07-30,518103,2018
2018-0
Query:
SELECT DISTINCT "age_band"
    FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
    LIMIT 1000;
Answer:
age_band
Retirees
Young Adults
Middle Aged
unknown
End Exploring Related Columns
Task: For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Percentage_Change
2018,percentage_change1:float
2019,percentage_change2:float
2020,percentage_change3:float
```

This table shows the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-20 21:43:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:43:58 - root - INFO - ```sql
WITH jun15_weeks AS (
    SELECT
        calendar_year,
        DATE_TRUNC('WEEK', TO_DATE(calendar_year || '-06-15', 'YYYY-MM-DD')) AS jun15_week_start
    FROM
        (
            SELECT DISTINCT calendar_year
            FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
            WHERE calendar_year IN (2018, 2019, 2020)
        )
)
SELECT
    s.calendar_year AS "Year",
    ROUND(((s.post_sales - s.pre_sales) / NULLIF(s.pre_sales, 0)) * 100, 4) AS "Percentage_Change"
FROM
    (
        SELECT
            s.calendar_year,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') >= DATEADD(week, -4, j.jun15_week_start)
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') < j.jun15_week_start
                    THEN s.sales
                    ELSE 0
                END
            ) AS pre_sales,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') > j.jun15_week_start
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') <= DATEADD(week, 4, j.jun15_week_start)
                    THEN s.sales
                    ELSE 0
                END
            ) AS post_sales
        FROM
            BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES s
            JOIN jun15_weeks j ON s.calendar_year = j.calendar_year
        WHERE
            s.calendar_year IN (2018, 2019, 2020)
            AND TO_DATE(s."week_date", 'YYYY-MM-DD') BETWEEN DATEADD(week, -4, j.jun15_week_start) AND DATEADD(week, 4, j.jun15_week_start)
        GROUP BY
            s.calendar_year
    ) s
ORDER BY
    "Year";
```
2025-01-20 21:43:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:43:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:43:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:43:59 - snowflake.connector.connection - INFO - closed
2025-01-20 21:44:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:44:00 - root - INFO - itercount: 1
2025-01-20 21:44:00 - root - INFO - 000904 (42000): 01b9d897-0004-7ed2-0001-11c300f2ce66: SQL compilation error: error line 7 at position 28
invalid identifier 'CALENDAR_YEAR'
2025-01-20 21:44:00 - root - INFO - Input sql:
WITH jun15_weeks AS (
    SELECT
        calendar_year,
        DATE_TRUNC('WEEK', TO_DATE(calendar_year || '-06-15', 'YYYY-MM-DD')) AS jun15_week_start
    FROM
        (
            SELECT DISTINCT calendar_year
            FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
            WHERE calendar_year IN (2018, 2019, 2020)
        )
)
SELECT
    s.calendar_year AS "Year",
    ROUND(((s.post_sales - s.pre_sales) / NULLIF(s.pre_sales, 0)) * 100, 4) AS "Percentage_Change"
FROM
    (
        SELECT
            s.calendar_year,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') >= DATEADD(week, -4, j.jun15_week_start)
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') < j.jun15_week_start
                    THEN s.sales
                    ELSE 0
                END
            ) AS pre_sales,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') > j.jun15_week_start
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') <= DATEADD(week, 4, j.jun15_week_start)
                    THEN s.sales
                    ELSE 0
                END
            ) AS post_sales
        FROM
            BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES s
            JOIN jun15_weeks j ON s.calendar_year = j.calendar_year
        WHERE
            s.calendar_year IN (2018, 2019, 2020)
            AND TO_DATE(s."week_date", 'YYYY-MM-DD') BETWEEN DATEADD(week, -4, j.jun15_week_start) AND DATEADD(week, 4, j.jun15_week_start)
        GROUP BY
            s.calendar_year
    ) s
ORDER BY
    "Year";
The error information is:
000904 (42000): 01b9d897-0004-7ed2-0001-11c300f2ce66: SQL compilation error: error line 7 at position 28
invalid identifier 'CALENDAR_YEAR'
Please correct it and output only 1 complete SQL query.
2025-01-20 21:44:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:44:30 - root - INFO - ```sql
WITH jun15_weeks AS (
    SELECT
        "calendar_year",
        DATE_TRUNC('WEEK', TO_DATE("calendar_year" || '-06-15', 'YYYY-MM-DD')) AS jun15_week_start
    FROM
        (
            SELECT DISTINCT "calendar_year"
            FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
            WHERE "calendar_year" IN (2018, 2019, 2020)
        )
)
SELECT
    s."calendar_year" AS "Year",
    ROUND(((s.post_sales - s.pre_sales) / NULLIF(s.pre_sales, 0)) * 100, 4) AS "Percentage_Change"
FROM
    (
        SELECT
            s."calendar_year",
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') >= DATEADD(week, -4, j.jun15_week_start)
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') < j.jun15_week_start
                    THEN s."sales"
                    ELSE 0
                END
            ) AS pre_sales,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') > j.jun15_week_start
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') <= DATEADD(week, 4, j.jun15_week_start)
                    THEN s."sales"
                    ELSE 0
                END
            ) AS post_sales
        FROM
            BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES s
            JOIN jun15_weeks j ON s."calendar_year" = j."calendar_year"
        WHERE
            s."calendar_year" IN (2018, 2019, 2020)
            AND TO_DATE(s."week_date", 'YYYY-MM-DD') BETWEEN DATEADD(week, -4, j.jun15_week_start) AND DATEADD(week, 4, j.jun15_week_start)
        GROUP BY
            s."calendar_year"
    ) s
ORDER BY
    "Year";
```
2025-01-20 21:44:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:44:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:44:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:44:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:44:32 - snowflake.connector.connection - INFO - closed
2025-01-20 21:44:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:44:33 - root - INFO - itercount: 2
2025-01-20 21:44:33 - root - INFO - 0
2025-01-20 21:44:33 - root - INFO - results: 
Year,Percentage_Change
2018,0.4516
2019,-0.2480
2020,-0.4678


2025-01-20 21:44:33 - root - INFO - Please check the answer again by reviewing For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Percentage_Change
2018,percentage_change1:float
2019,percentage_change2:float
2020,percentage_change3:float
```

This table shows the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Percentage_Change
2018,0.4516
2019,-0.2480
2020,-0.4678
Current sql:
WITH jun15_weeks AS (
    SELECT
        "calendar_year",
        DATE_TRUNC('WEEK', TO_DATE("calendar_year" || '-06-15', 'YYYY-MM-DD')) AS jun15_week_start
    FROM
        (
            SELECT DISTINCT "calendar_year"
            FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
            WHERE "calendar_year" IN (2018, 2019, 2020)
        )
)
SELECT
    s."calendar_year" AS "Year",
    ROUND(((s.post_sales - s.pre_sales) / NULLIF(s.pre_sales, 0)) * 100, 4) AS "Percentage_Change"
FROM
    (
        SELECT
            s."calendar_year",
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') >= DATEADD(week, -4, j.jun15_week_start)
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') < j.jun15_week_start
                    THEN s."sales"
                    ELSE 0
                END
            ) AS pre_sales,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') > j.jun15_week_start
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') <= DATEADD(week, 4, j.jun15_week_start)
                    THEN s."sales"
                    ELSE 0
                END
            ) AS post_sales
        FROM
            BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES s
            JOIN jun15_weeks j ON s."calendar_year" = j."calendar_year"
        WHERE
            s."calendar_year" IN (2018, 2019, 2020)
            AND TO_DATE(s."week_date", 'YYYY-MM-DD') BETWEEN DATEADD(week, -4, j.jun15_week_start) AND DATEADD(week, 4, j.jun15_week_start)
        GROUP BY
            s."calendar_year"
    ) s
ORDER BY
    "Year";
2025-01-20 21:45:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-20 21:45:11 - root - INFO - ```sql
WITH jun15_weeks AS (
    SELECT
        "calendar_year",
        DATE_TRUNC('WEEK', TO_DATE("calendar_year" || '-06-15', 'YYYY-MM-DD')) AS jun15_week_start
    FROM
        (
            SELECT DISTINCT "calendar_year"
            FROM BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES
            WHERE "calendar_year" IN (2018, 2019, 2020)
        )
)
SELECT
    s."calendar_year" AS "Year",
    ROUND(((s.post_sales - s.pre_sales) / NULLIF(s.pre_sales, 0)) * 100, 4) AS "Percentage_Change"
FROM
    (
        SELECT
            s."calendar_year",
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') >= DATEADD(week, -4, j.jun15_week_start)
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') < j.jun15_week_start
                    THEN s."sales"
                    ELSE 0
                END
            ) AS pre_sales,
            SUM(
                CASE
                    WHEN TO_DATE(s."week_date", 'YYYY-MM-DD') > j.jun15_week_start
                         AND TO_DATE(s."week_date", 'YYYY-MM-DD') <= DATEADD(week, 4, j.jun15_week_start)
                    THEN s."sales"
                    ELSE 0
                END
            ) AS post_sales
        FROM
            BANK_SALES_TRADING.BANK_SALES_TRADING.CLEANED_WEEKLY_SALES s
            JOIN jun15_weeks j ON s."calendar_year" = j."calendar_year"
        WHERE
            s."calendar_year" IN (2018, 2019, 2020)
            AND TO_DATE(s."week_date", 'YYYY-MM-DD') BETWEEN DATEADD(week, -4, j.jun15_week_start) AND DATEADD(week, 4, j.jun15_week_start)
        GROUP BY
            s."calendar_year"
    ) s
ORDER BY
    "Year";
```
2025-01-20 21:45:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-20 21:45:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-20 21:45:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-20 21:45:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-20 21:45:12 - snowflake.connector.connection - INFO - closed
2025-01-20 21:45:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-20 21:45:12 - root - INFO - itercount: 3
2025-01-20 21:45:12 - root - INFO - 0
2025-01-20 21:45:12 - root - INFO - Total iteration counts: 3
