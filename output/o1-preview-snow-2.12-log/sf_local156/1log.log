2025-01-26 03:32:42 - openai._base_client - INFO - Retrying request to /chat/completions in 0.468164 seconds
2025-01-26 03:33:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:33:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:33:32 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:32 - root - INFO - SQL:
SELECT *
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    LIMIT 100;
Results:
Too long, hard cut:
txn_id,member_id,ticker,txn_date,txn_type,quantity,percentage_fee,txn_time
1,c81e72,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
2,eccbc8,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
3,a87ff6,BTC,01-01-2017,BUY,50.0,0.0,2017-01-01T00:00:00.000Z
4,e4da3b,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
5,167909,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
6,c4ca42,BTC,01-01-2017,BUY,50.0,0.02,2017-01-01T00:00:00.000Z
7,8f14e4,BTC,01-01-2017,BUY,50.0,0.21,2017-01-01T00:00:00.000Z
8,c9f0f8,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
9,45c48c,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
10,d3d944,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
11,6512bd,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
12,c20ad4,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
13,c51ce4,BTC,01-01-2017,BUY,50.0,0.26,2017-01-01T00:00:00.000Z
14,aab323,BTC,01-01-2017,BUY,50.0,0.22,2017-01-01T00:00:00.000Z
15,167909,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
16,c4ca42,ETH,01-01-2017,BUY,50.0,0.1,2017-01-01T00:00:00.000Z
17,c81e72,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
18,eccbc8,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
19,a87ff6,ETH,01-01-2017,BUY,50.0,0.2,2017-01-01T00:00:00.000Z
20,e4da3b,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
21,8f14e4,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
22,c9f0f8,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
23,45c48c,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
24,d3d944,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
25,6512bd,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
26,c20ad4,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
27,c51ce4,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
28,aab323,ETH,01-01-2017,BUY,50.0,0.01,2017-01-01T00:00:00.000Z
29,aab323,ETH,01-01-2017,SELL,9.562185136,0.3,2017-01-01T01:22:32.097Z
30,6512bd,ETH,01-01-2017,BUY,8.842987018,0.3,2017-01-01T06:22:20.203Z
31,6512bd,BTC,01-01-2017,BUY,2.271062586,0.21,2017-01-01T06:40:48.692Z
32,c20ad4,BTC,01-01-2017,BUY,6.101895756,0.3,2017-01-01T07:13:52.126Z
33,c20ad4,ETH,01-01-2017,SELL,1.146313066,0.3,2017-01-01T07:14:37.891Z
34,c9f0f8,ETH,01-01-2017,BUY,7.511535595,0.3,2017-01-01T10:04:32.111Z
35,6512bd,BTC,01-01-2017,BUY,6.73841781,0.3,2017-01-01T11:00:14.003Z
36,6512bd,BTC,01-01-2017,BUY,9.378757912,0.3,2017-01-01T12:03:33.017Z
37,c20ad4,BTC,01-01-2017,BUY,4.394808986,0.3,2017-01-01T13:23:05.640Z
38,45c48c,BTC,01-01-2017,BUY,4.666031683,0.3,2017-01-01T16:15:42.161Z
39,c20ad4,BTC,01-01-2017,BUY,3.563597579,0.25,2017-01-01T16:23:16.957Z
40,c20ad4,ETH,01-01-2017,BUY,3.531484029,0.3,2017-01-01T16:50:56.617Z
41,a87ff6,ETH,01-01-2017,BUY,1.98666102,0.3,2017-01-01T17:39:10.894Z
42,c81e72,ETH,01-01-2017,BUY,2.156824502,0.3,2017-01-01T22:08:29.987Z
43,8f14e4,BTC,01-01-2017,BUY,4.112440109,0.3,2017-01-01T22:19:46.693Z
44,c51ce4,ETH,01-01-2017,SELL,8.889890678,0.24,2017-01-01T22:22:56.373Z
45,167909,BTC,01-01-2017,BUY,8.129992969,0.28,2017-01-01T22:44:57.081Z
46,eccbc8,BTC,02-01-2017,BUY,3.729789722,0.23,2017-01-02T00:36:35.327Z
47,45c48c,ETH,02-01-2017,BUY,1.443256636,0.3,2017-01-02T01:32:36.586Z
48,d3d944,ETH,02-01-2017,SELL,8.339030859,0.3,2017-01-02T03:43:46.365Z
49,a87ff6,ETH,02-01-2017,BUY,8.786735207,0.3,2017-01-02T04:48:50.045Z
50,c51ce4,BTC,02-01-2017,BUY,1.695672235,0.08,2017-01-02T05:47:52.702Z
51,167909,BTC,02-01-2017,BUY,4.732996255,0.3,2017-01-02T08:23:56.047Z
52,e4da3b,ETH,02-01-2017,BUY,1.371663219,0.3,2017-01-02T08:36:54.590Z
53,a87ff6,BTC,02-01-2017,BUY,5.959804819,0.3,2017-01-02T09:55:27.347Z
54,aab323,ETH,02-01-2017,BUY,9.810761938,0.3,2017-01-02T11:02:15.444Z
55,6512bd,BTC,02-01-2017,BUY,5.543838119,0.3,2017-01-02T11:12:42.895Z
56,d3d944,BTC,02-01-2017,SELL,0.617022836,0.18,2017-01-02T11:47:14.983Z
57,d3d944,BTC,02-01-2017,BUY,8.675939586,0.3,2017-01-02T14:02:49.858Z
58,aab323,BTC,02-01-2017,BUY,0.150368926,0.3,2017-01-02T14:40:12.812Z
59,c4ca42,BTC,02-01-2017,BUY,6.079650398,0.3,2017-01-02T14:57:58.581Z
60,a87ff6,BTC,02-01-2017,BUY,9.011177226,0.3,2017-01-02T17:16:29.063Z
61,aab323,BTC,02-01-2017,BUY,1.029599926,0.05,2017-01-02T19:45:03.907Z
62,c20ad4,ETH,02-01-2017,SELL,3.687415614,0.3,2017-01-02T20:39:20.102Z
63,6512bd,ETH,02-01-2017,BUY,5.043726097,0.07,2017-01-02T20:48:13.480Z
64,a87ff6,ETH,02-01-2017,BUY,1.377159083,0.01,2017-01-02T20:49:33.772Z
65,6512bd,BTC,02-01-2017,BUY,3.012760299,0.3,2017-01-02T21:00:49.342Z
66,c4ca42,BTC,02-01-2017,BUY,1.194319601,0.18,2017-01-02T21:05:35.110Z
67,c51ce4,BTC,02-01-2017,SELL,6.14200575,0.3,2017-01-02T21:52:03.560Z
68,aab323,BTC,02-01-2017,BUY,8.876596041,0.05,2017-01-02T22:57:52.892Z
69,c51ce4,BTC,03-01-2017,BUY,1.791975102,0.11,2017-01-03T00:44:20.879Z
70,45c48c,ETH,03-01-2017,BUY,7.265296941,0.3,2017-01-03T02:01:39.028Z
71,c51ce4,ETH,03-01-2017,BUY,0.494025068,0.3,2017-01-03T02:20:00.282Z
72,8f14e4,ETH,03-01-2017,BUY,5.469869519,0.3,2017-01-03T03:11:50.133Z
73,8f14e4,BTC,03-01-2017,SELL,3.704582949,0.3,2017-01-03T04:40:59.43

2025-01-26 03:33:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-26 03:33:34 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:34 - root - INFO - SQL:
SELECT DISTINCT "txn_type"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    LIMIT 100;
Results:
txn_type
BUY
SELL

2025-01-26 03:33:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:33:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-26 03:33:35 - snowflake.connector.connection - INFO - closed
2025-01-26 03:33:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:33:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:33:58 - root - INFO - ```sql
SELECT
    EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
    m."region" AS "Region",
    AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
FROM
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE
    t."txn_type" = 'BUY'
GROUP BY
    "Year", "Region"
ORDER BY
    "Year", "Average_Purchase_Cost" DESC
LIMIT 100;
```
2025-01-26 03:33:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:33:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:33:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:34:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:34:00 - snowflake.connector.connection - INFO - closed
2025-01-26 03:34:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:35:37 - root - INFO - SQL:
SELECT
    EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
    m."region" AS "Region",
    AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
FROM
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE
    t."txn_type" = 'BUY'
GROUP BY
    "Year", "Region"
ORDER BY
    "Year", "Average_Purchase_Cost" DESC
LIMIT 100;
Results:
Year,Region,Average_Purchase_Cost
2017,Africa,14898.580000902672
2017,Asia,14879.576386380966
2017,United States,11931.809061683358
2017,India,11730.321086367017
2017,Australia,10926.43541923687
2018,Africa,27464.123270235777
2018,Asia,26152.403774060753
2018,India,25073.85387109283
2018,United States,22448.25940567588
2018,Australia,19573.334929223234
2019,Africa,27146.38291560081
2019,Asia,24839.830313570466
2019,India,22639.02139247267
2019,United States,21600.56852899147
2019,Australia,16862.21098463127
2020,Asia,42261.23592071023
2020,Africa,42128.83058304218
2020,United States,31245.42774834473
2020,India,29936.145576846466
2020,Australia,29010.246761505106
2021,Africa,171461.87896826546
2021,Asia,152200.70273988033
2021,India,133310.24698892556
2021,United States,127948.57386634323
2021,Australia,109736.53635024455

2025-01-26 03:35:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:39 - root - INFO - SQL:
SELECT "txn_date", "quantity"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
WHERE "txn_type" = 'BUY'
LIMIT 100
Results:
txn_date,quantity
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,8.842987018
01-01-2017,2.271062586
01-01-2017,6.101895756
01-01-2017,7.511535595
01-01-2017,6.73841781
01-01-2017,9.378757912
01-01-2017,4.394808986
01-01-2017,4.666031683
01-01-2017,3.563597579
01-01-2017,3.531484029
01-01-2017,1.98666102
01-01-2017,2.156824502
01-01-2017,4.112440109
01-01-2017,8.129992969
02-01-2017,3.729789722
02-01-2017,1.443256636
02-01-2017,8.786735207
02-01-2017,1.695672235
02-01-2017,4.732996255
02-01-2017,1.371663219
02-01-2017,5.959804819
02-01-2017,9.810761938
02-01-2017,5.543838119
02-01-2017,8.675939586
02-01-2017,0.150368926
02-01-2017,6.079650398
02-01-2017,9.011177226
02-01-2017,1.029599926
02-01-2017,5.043726097
02-01-2017,1.377159083
02-01-2017,3.012760299
02-01-2017,1.194319601
02-01-2017,8.876596041
03-01-2017,1.791975102
03-01-2017,7.265296941
03-01-2017,0.494025068
03-01-2017,5.469869519
03-01-2017,1.248782979
03-01-2017,3.807694538
03-01-2017,0.451011553
03-01-2017,9.201727658
03-01-2017,5.159655392
03-01-2017,2.22039025
03-01-2017,1.14515606
04-01-2017,9.316518093
04-01-2017,7.736987566
04-01-2017,9.147450149
04-01-2017,5.686772069
04-01-2017,1.315816748
04-01-2017,2.639010923
04-01-2017,9.448890603
04-01-2017,8.137724997
04-01-2017,4.181393763
04-01-2017,2.927012834
04-01-2017,7.637093177
04-01-2017,9.12200761
04-01-2017,7.328769521
04-01-2017,1.831004047
04-01-2017,8.782296318
04-01-2017,8.742448545
05-01-2017,2.61926013
05-01-2017,1.510491952
05-01-2017,4.695261363
05-01-2017,6.413918106
05-01-2017,9.808394015
05-01-2017,1.032755811
05-01-2017,9.49645508
05-01-2017,7.683720954
05-01-2017,4.888776093
06-01-2017,5.529125393
06-01-2017,8.524945201
06-01-2017,1.748322551

2025-01-26 03:35:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-26 03:35:40 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:41 - root - INFO - SQL:
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
WHERE EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
)
LIMIT 100
Results:
year
2018
2019
2020
2021

2025-01-26 03:35:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:42 - root - INFO - SQL:
SELECT t."member_id", m."region", t."txn_date", t."quantity"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
ON t."member_id" = m."member_id"
LIMIT 100
Results:
member_id,region,txn_date,quantity
c81e72,United States,01-01-2017,50.0
eccbc8,United States,01-01-2017,50.0
a87ff6,United States,01-01-2017,50.0
e4da3b,United States,01-01-2017,50.0
167909,United States,01-01-2017,50.0
c4ca42,Australia,01-01-2017,50.0
8f14e4,United States,01-01-2017,50.0
c9f0f8,United States,01-01-2017,50.0
45c48c,Australia,01-01-2017,50.0
d3d944,Africa,01-01-2017,50.0
6512bd,India,01-01-2017,50.0
c20ad4,Asia,01-01-2017,50.0
c51ce4,Australia,01-01-2017,50.0
aab323,Australia,01-01-2017,50.0
167909,United States,01-01-2017,50.0
c4ca42,Australia,01-01-2017,50.0
c81e72,United States,01-01-2017,50.0
eccbc8,United States,01-01-2017,50.0
a87ff6,United States,01-01-2017,50.0
e4da3b,United States,01-01-2017,50.0
8f14e4,United States,01-01-2017,50.0
c9f0f8,United States,01-01-2017,50.0
45c48c,Australia,01-01-2017,50.0
d3d944,Africa,01-01-2017,50.0
6512bd,India,01-01-2017,50.0
c20ad4,Asia,01-01-2017,50.0
c51ce4,Australia,01-01-2017,50.0
aab323,Australia,01-01-2017,50.0
aab323,Australia,01-01-2017,9.562185136
6512bd,India,01-01-2017,8.842987018
6512bd,India,01-01-2017,2.271062586
c20ad4,Asia,01-01-2017,6.101895756
c20ad4,Asia,01-01-2017,1.146313066
c9f0f8,United States,01-01-2017,7.511535595
6512bd,India,01-01-2017,6.73841781
6512bd,India,01-01-2017,9.378757912
c20ad4,Asia,01-01-2017,4.394808986
45c48c,Australia,01-01-2017,4.666031683
c20ad4,Asia,01-01-2017,3.563597579
c20ad4,Asia,01-01-2017,3.531484029
a87ff6,United States,01-01-2017,1.98666102
c81e72,United States,01-01-2017,2.156824502
8f14e4,United States,01-01-2017,4.112440109
c51ce4,Australia,01-01-2017,8.889890678
167909,United States,01-01-2017,8.129992969
eccbc8,United States,02-01-2017,3.729789722
45c48c,Australia,02-01-2017,1.443256636
d3d944,Africa,02-01-2017,8.339030859
a87ff6,United States,02-01-2017,8.786735207
c51ce4,Australia,02-01-2017,1.695672235
167909,United States,02-01-2017,4.732996255
e4da3b,United States,02-01-2017,1.371663219
a87ff6,United States,02-01-2017,5.959804819
aab323,Australia,02-01-2017,9.810761938
6512bd,India,02-01-2017,5.543838119
d3d944,Africa,02-01-2017,0.617022836
d3d944,Africa,02-01-2017,8.675939586
aab323,Australia,02-01-2017,0.150368926
c4ca42,Australia,02-01-2017,6.079650398
a87ff6,United States,02-01-2017,9.011177226
aab323,Australia,02-01-2017,1.029599926
c20ad4,Asia,02-01-2017,3.687415614
6512bd,India,02-01-2017,5.043726097
a87ff6,United States,02-01-2017,1.377159083
6512bd,India,02-01-2017,3.012760299
c4ca42,Australia,02-01-2017,1.194319601
c51ce4,Australia,02-01-2017,6.14200575
aab323,Australia,02-01-2017,8.876596041
c51ce4,Australia,03-01-2017,1.791975102
45c48c,Australia,03-01-2017,7.265296941
c51ce4,Australia,03-01-2017,0.494025068
8f14e4,United States,03-01-2017,5.469869519
8f14e4,United States,03-01-2017,3.704582949
e4da3b,United States,03-01-2017,5.375890939
d3d944,Africa,03-01-2017,1.248782979
eccbc8,United States,03-01-2017,6.681740169
a87ff6,United States,03-01-2017,3.807694538
aab323,Australia,03-01-2017,1.120028576
aab323,Australia,03-01-2017,0.451011553
c20ad4,Asia,03-01-2017,9.201727658
d3d944,Africa,03-01-2017,3.441259193
e4da3b,United States,03-01-2017,5.159655392
c9f0f8,United States,03-01-2017,2.22039025
c9f0f8,United States,03-01-2017,1.14515606
eccbc8,United States,04-01-2017,9.316518093
c4ca42,Australia,04-01-2017,7.736987566
d3d944,Africa,04-01-2017,9.147450149
d3d944,Africa,04-01-2017,9.402255852
a87ff6,United States,04-01-2017,5.686772069
c20ad4,Asia,04-01-2017,1.315816748
8f14e4,United States,04-01-2017,2.639010923
c9f0f8,United States,04-01-2017,9.448890603
a87ff6,United States,04-01-2017,8.137724997
c9f0f8,United States,04-01-2017,4.181393763
e4da3b,United States,04-01-2017,2.927012834
aab323,Australia,04-01-2017,7.637093177
a87ff6,United States,04-01-2017,9.12200761
c51ce4,Australia,04-01-2017,7.328769521
6512bd,India,04-01-2017,1.831004047
c20ad4,Asia,04-01-2017,8.782296318

2025-01-26 03:35:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:44 - root - INFO - SQL:
SELECT p."market_date", p."price"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
WHERE p."ticker" = 'BTC'
LIMIT 100
Results:
market_date,price
29-08-2021,48255.0
28-08-2021,48897.1
27-08-2021,49064.3
26-08-2021,46831.6
25-08-2021,48994.5
24-08-2021,47714.7
23-08-2021,49539.7
22-08-2021,49254.5
21-08-2021,48875.8
20-08-2021,49324.0
19-08-2021,46755.9
18-08-2021,44723.8
17-08-2021,44691.6
16-08-2021,45996.3
15-08-2021,46991.3
14-08-2021,47081.5
13-08-2021,47809.1
12-08-2021,44403.4
11-08-2021,45564.3
10-08-2021,45593.8
09-08-2021,46284.3
08-08-2021,43792.8
07-08-2021,44614.2
06-08-2021,42795.4
05-08-2021,40867.2
04-08-2021,39736.9
03-08-2021,38130.3
02-08-2021,39168.4
01-08-2021,39878.3
31-07-2021,41553.7
30-07-2021,42203.4
29-07-2021,40001.4
28-07-2021,40003.2
27-07-2021,39452.0
26-07-2021,37276.6
25-07-2021,35391.1
24-07-2021,33824.8
23-07-2021,33603.3
22-07-2021,32298.9
21-07-2021,32131.4
20-07-2021,29793.8
19-07-2021,30837.2
18-07-2021,31785.4
17-07-2021,31518.6
16-07-2021,31394.0
15-07-2021,31840.5
14-07-2021,32820.7
13-07-2021,32728.1
12-07-2021,33113.0
11-07-2021,34227.7
10-07-2021,33510.6
09-07-2021,33797.4
08-07-2021,32866.3
07-07-2021,33867.8
06-07-2021,34225.6
05-07-2021,33687.8
04-07-2021,35298.2
03-07-2021,34742.8
02-07-2021,33813.4
01-07-2021,33543.6
30-06-2021,35026.9
29-06-2021,35834.7
28-06-2021,34475.9
27-06-2021,34678.5
26-06-2021,32243.4
25-06-2021,31594.0
24-06-2021,34665.8
23-06-2021,33674.3
22-06-2021,32496.4
21-06-2021,31692.0
20-06-2021,35595.8
19-06-2021,35513.4
18-06-2021,35749.4
17-06-2021,38052.0
16-06-2021,38336.0
15-06-2021,40156.1
14-06-2021,40529.4
13-06-2021,39022.9
12-06-2021,35467.5
11-06-2021,37314.6
10-06-2021,36649.4
09-06-2021,37332.2
08-06-2021,33382.9
07-06-2021,33578.0
06-06-2021,35815.4
05-06-2021,35520.0
04-06-2021,36851.3
03-06-2021,39187.3
02-06-2021,37555.8
01-06-2021,36687.6
31-05-2021,37298.6
30-05-2021,35652.8
29-05-2021,34584.6
28-05-2021,35662.5
27-05-2021,38417.3
26-05-2021,39249.2
25-05-2021,38378.3
24-05-2021,38750.6
23-05-2021,34679.7
22-05-2021,37448.3

2025-01-26 03:35:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 03:35:45 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:46 - root - INFO - SQL:
SELECT t."txn_date", t."quantity", p."price", (t."quantity" * p."price") AS "cost"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
LIMIT 100
Results:
txn_date,quantity,price,cost
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,8.842987018,8.2,72.5124935476
01-01-2017,2.271062586,995.4,2260.6156981044
01-01-2017,6.101895756,995.4,6073.8270355224
01-01-2017,7.511535595,8.2,61.59459187899999
01-01-2017,6.73841781,995.4,6707.421088073999
01-01-2017,9.378757912,995.4,9335.6156256048
01-01-2017,4.394808986,995.4,4374.5928646644
01-01-2017,4.666031683,995.4,4644.5679372582
01-01-2017,3.563597579,995.4,3547.2050301366
01-01-2017,3.531484029,8.2,28.958169037799998
01-01-2017,1.98666102,8.2,16.290620364
01-01-2017,2.156824502,8.2,17.6859609164
01-01-2017,4.112440109,995.4,4093.5228844985995
01-01-2017,8.129992969,995.4,8092.5950013426
02-01-2017,3.729789722,1017.0,3793.196147274
02-01-2017,1.443256636,8.37,12.08005804332
02-01-2017,8.786735207,8.37,73.54497368258998
02-01-2017,1.695672235,1017.0,1724.498662995
02-01-2017,4.732996255,1017.0,4813.457191335
02-01-2017,1.371663219,8.37,11.48082114303
02-01-2017,5.959804819,1017.0,6061.121500923
02-01-2017,9.810761938,8.37,82.11607742106
02-01-2017,5.543838119,1017.0,5638.083367023
02-01-2017,8.675939586,1017.0,8823.430558962
02-01-2017,0.150368926,1017.0,152.92519774200002
02-01-2017,6.079650398,1017.0,6183.004454766
02-01-2017,9.011177226,1017.0,9164.367238842
02-01-2017,1.029599926,1017.0,1047.1031247419999
02-01-2017,5.043726097,8.37,42.21598743189
02-01-2017,1.377159083,8.37,11.526821524709998
02-01-2017,3.012760299,1017.0,3063.977224083
02-01-2017,1.194319601,1017.0,1214.623034217
02-01-2017,8.876596041,1017.0,9027.498173697
03-01-2017,1.791975102,1033.3,1851.6478728966001
03-01-2017,7.265296941,9.74,70.76399220534
03-01-2017,0.494025068,9.74,4.8118041623200005
03-01-2017,5.469869519,9.74,53.27652911506001
03-01-2017,1.248782979,9.74,12.163146215460001
03-01-2017,3.807694538,1033.3,3934.4907661153998
03-01-2017,0.451011553,9.74,4.39285252622
03-01-2017,9.201727658,1033.3,9508.145189011399
03-01-2017,5.159655392,1033.3,5331.4719165536
03-01-2017,2.22039025,1033.3,2294.3292453249996
03-01-2017,1.14515606,9.74,11.1538200244
04-01-2017,9.316518093,1135.4,10577.9746427922
04-01-2017,7.736987566,1135.4,8784.5756824364
04-01-2017,9.147450149,1135.4,10386.014899174601
04-01-2017,5.686772069,1135.4,6456.761007142601
04-01-2017,1.315816748,1135.4,1493.9783356792002
04-01-2017,2.639010923,11.0,29.029120152999997
04-01-2017,9.448890603,11.0,103.937796633
04-01-2017,8.137724997,1135.4,9239.5729615938
04-01-2017,4.181393763,11.0,45.995331393
04-01-2017,2.927012834,1135.4,3323.3303717236004
04-01-2017,7.637093177,11.0,84.008024947
04-01-2017,9.12200761,11.0,100.34208371000001
04-01-2017,7.328769521,1135.4,8321.084914143401
04-01-2017,1.831004047,11.0,20.141044517
04-01-2017,8.782296318,1135.4,9971.419239457202
04-01-2017,8.742448545,1135.4,9926.176077993001
05-01-2017,2.61926013,989.3,2591.2340466089995
05-01-2017,1.510491952,989.3,1494.3296881136
05-01-2017,4.695261363,10.15,47.65690283445
05-01-2017,6.413918106,989.3,6345.289182265799
05-01-2017,9.808394015,989.3,9703.444199039499
05-01-2017,1.032755811,989.3,1021.7053238222999
05-01-2017,9.49645508,989.3,9394.843010644
05-01-2017,7.683720954,989.3,7601.5051397922
05-01-2017,4.888776093,989.3,4836.4661888048995
06-01-2017,5.529125393,886.2,4899.9109232766
06-01-2017,8.524945201,886.2,7554.8064371262
06-01-2017,1.748322551,886.2,1549.3634446962

2025-01-26 03:35:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:47 - root - INFO - SQL:
SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", SUM(t."quantity" * p."price") AS "total_cost"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
LIMIT 100
Results:
year,region,total_cost
2017,Africa,3784239.3202292784
2017,India,3413523.436132802
2018,United States,43078209.79949201
2018,Australia,24094775.297873802
2018,Africa,7772346.885476725
2021,Australia,86691863.7166932
2017,United States,23147709.579665713
2018,Asia,7845721.132218226
2018,India,6519202.006484136
2019,Africa,6080789.773094581
2019,India,7448238.038123509
2020,United States,62959536.91291463
2020,India,9220332.837668711
2021,Africa,26576591.240081146
2020,Africa,10742851.798675757
2017,Australia,14018616.642880905
2017,Asia,4404354.610368766
2019,United States,40868275.65685186
2019,Australia,21684803.326235816
2019,Asia,7700347.397206845
2020,Australia,38119464.24461771
2021,United States,160063665.90679538
2020,Asia,12298019.652926676
2021,India,24129154.704995528
2021,Asia,33940756.71099331

2025-01-26 03:35:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:49 - root - INFO - SQL:
SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
  )
GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
LIMIT 100
Results:
year,region,average_cost
2018,Asia,26152.403774060753
2018,India,25073.85387109283
2019,Africa,27146.38291560081
2019,India,22639.02139247267
2020,United States,31245.42774834473
2020,India,29936.145576846466
2020,Africa,42128.83058304218
2021,Africa,171461.87896826546
2019,United States,21600.56852899147
2019,Australia,16862.21098463127
2019,Asia,24839.830313570466
2020,Australia,29010.246761505106
2020,Asia,42261.23592071023
2021,India,133310.24698892556
2021,United States,127948.57386634323
2021,Asia,152200.70273988033
2018,United States,22448.25940567588
2018,Australia,19573.334929223234
2018,Africa,27464.123270235777
2021,Australia,109736.53635024455

2025-01-26 03:35:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:51 - root - INFO - SQL:
SELECT sub."year", sub."region", sub."average_cost", RANK() OVER (PARTITION BY sub."year" ORDER BY sub."average_cost" DESC) AS "rank"
FROM (
  SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
  ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
  ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
  WHERE t."txn_type" = 'BUY'
    AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
        SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
  GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) sub
ORDER BY sub."year", "rank"
LIMIT 100
Results:
year,region,average_cost,rank
2018,Africa,27464.123270235777,1
2018,Asia,26152.403774060753,2
2018,India,25073.85387109283,3
2018,United States,22448.25940567588,4
2018,Australia,19573.334929223234,5
2019,Africa,27146.38291560081,1
2019,Asia,24839.830313570466,2
2019,India,22639.02139247267,3
2019,United States,21600.56852899147,4
2019,Australia,16862.21098463127,5
2020,Asia,42261.23592071023,1
2020,Africa,42128.83058304218,2
2020,United States,31245.42774834473,3
2020,India,29936.145576846466,4
2020,Australia,29010.246761505106,5
2021,Africa,171461.87896826546,1
2021,Asia,152200.70273988033,2
2021,India,133310.24698892556,3
2021,United States,127948.57386634323,4
2021,Australia,109736.53635024455,5

2025-01-26 03:35:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:53 - root - INFO - SQL:
SELECT 
    this_year."year", 
    this_year."region", 
    this_year."average_cost", 
    ((this_year."average_cost" - last_year."average_cost") / last_year."average_cost") * 100 AS "annual_percentage_change"
FROM (
    SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY'
    GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) this_year
JOIN (
    SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY'
    GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) last_year
ON this_year."region" = last_year."region" AND this_year."year" = last_year."year" + 1
WHERE this_year."year" > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
)
LIMIT 100
Results:
year,region,average_cost,annual_percentage_change
2018,United States,22448.25940567588,88.13793691825005
2019,Asia,24839.830313570466,-5.018940024901886
2019,India,22639.02139247267,-9.710643170921688
2020,Africa,42128.83058304218,55.191322225220205
2020,India,29936.145576846466,32.232507129482386
2021,United States,127948.57386634323,309.4953504777078
2021,India,133310.24698892556,345.3153350912076
2021,Africa,171461.87896826546,306.99415719666996
2018,Australia,19573.334929223234,79.13742385520167
2018,Asia,26152.403774060753,75.76040537012614
2020,United States,31245.42774834473,44.65095076737584
2020,Australia,29010.246761505106,72.04295918219694
2020,Asia,42261.23592071023,70.13496222485111
2021,Australia,109736.53635024455,278.2681934848569
2021,Asia,152200.70273988033,260.142573741659
2018,Africa,27464.123270235777,84.34054298175924
2018,India,25073.85387109283,113.75249395546103
2019,United States,21600.56852899147,-3.7761986858993506
2019,Australia,16862.21098463127,-13.851108941809512
2019,Africa,27146.38291560081,-1.15692881039213

2025-01-26 03:35:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:54 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:55 - root - INFO - SQL:
SELECT sub."year", sub."region", sub."average_cost"
FROM (
  SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost",
         RANK() OVER (PARTITION BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) ORDER BY AVG(t."quantity" * p."price") DESC) AS "rank"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
  WHERE t."txn_type" = 'BUY'
  GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) sub
WHERE sub."rank" = 1
LIMIT 100
Results:
year,region,average_cost
2017,Africa,14898.580000902672
2019,Africa,27146.38291560081
2021,Africa,171461.87896826546
2020,Asia,42261.23592071023
2018,Africa,27464.123270235777

2025-01-26 03:35:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:57 - root - INFO - SQL:
SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", SUM(t."quantity") AS "total_quantity"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
LIMIT 100
Results:
year,region,total_quantity
2017,Australia,6813.260548
2018,Australia,6227.724489253
2018,Africa,1377.956583302
2019,Africa,1095.784869418
2019,Australia,6406.885041362
2020,India,1527.423962425
2020,Africa,1336.540782422
2021,United States,6148.806656713
2021,Australia,3938.028788841
2019,Asia,1619.618441392
2021,India,952.759891233
2017,United States,10433.219711331
2017,Africa,1413.311543373
2017,India,1571.879709356
2017,Asia,1519.935962797
2018,Asia,1442.25975353
2018,United States,9525.955557094
2019,United States,9531.629794916
2019,India,1572.679575812
2020,United States,10064.238477836
2020,Australia,6608.306619856
2020,Asia,1496.525352338
2021,Africa,791.917860565
2021,Asia,1084.526571265
2018,India,1348.171749978

2025-01-26 03:35:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:35:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:35:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:35:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - closed
2025-01-26 03:35:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:35:58 - root - INFO - SQL:
SELECT sub."region", sub."average_cost"
FROM (
  SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
  WHERE t."txn_type" = 'BUY'
  GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) sub
WHERE sub."year" = (
    SELECT MAX(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
)
ORDER BY sub."average_cost" DESC
LIMIT 5
Results:
region,average_cost
Africa,171461.87896826546
Asia,152200.70273988033
India,133310.24698892556
United States,127948.57386634323
Australia,109736.53635024455

2025-01-26 03:35:58 - root - INFO - itercount: 0
2025-01-26 03:35:58 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

From **BITCOIN_TRANSACTIONS**:
- `"member_id"`: Used to link transactions to members to obtain their regions.
- `"txn_date"`: To extract the year of each transaction.
- `"txn_type"`: To filter only Bitcoin purchase transactions.
- `"quantity"`: Quantity of Bitcoin purchased in each transaction.
- `"ticker"`: To match with Bitcoin prices.
- `"txn_time"`: May be used for precise matching if needed.

From **BITCOIN_MEMBERS**:
- `"member_id"`: To join with transactions.
- `"region"`: To identify the region of each member.

From **BITCOIN_PRICES**:
- `"ticker"`: To join with transactions.
- `"market_date"`: To get the Bitcoin price on the transaction date.
- `"price"`: The price of Bitcoin on that date.

**Conditions That May Be Used:**
- Filter `"txn_type"` to include only purchase transactions (e.g., `"txn_type" = 'purchase'`).
- Exclude data from the first year (e.g., `WHERE YEAR("txn_date") > first_year`).
- Join transactions with members on `"member_id"`.
- Join transactions with prices on `"ticker"` and `"txn_date" = "market_date"`.
- Ensure `"ticker"` corresponds to Bitcoin (e.g., `"ticker" = 'BTC'`).

---

**Sample SQL Queries:**

1. **View the first 100 rows of Bitcoin transactions:**
    ```sql
    SELECT *
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    LIMIT 100;
    ```

2. **Select distinct transaction types in Bitcoin transactions:**
    ```sql
    SELECT DISTINCT "txn_type"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    LIMIT 100;
    ```

3. **Select all Bitcoin purchase transactions:**
    ```sql
    SELECT *
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    WHERE "txn_type" = 'purchase'
    LIMIT 100;
    ```

4. **Get transaction dates and quantities for purchases:**
    ```sql
    SELECT "txn_date", "quantity"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    WHERE "txn_type" = 'purchase'
    LIMIT 100;
    ```

5. **Select distinct years of transactions excluding the first year:**
    ```sql
    SELECT DISTINCT YEAR("txn_date") AS "year"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    WHERE YEAR("txn_date") > (SELECT MIN(YEAR("txn_date")) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    LIMIT 100;
    ```

6. **Join transactions with members to get regions:**
    ```sql
    SELECT t."member_id", m."region", t."txn_date", t."quantity"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    LIMIT 100;
    ```

7. **Get Bitcoin prices on transaction dates:**
    ```sql
    SELECT p."market_date", p."price"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    WHERE p."ticker" = 'BTC'
    LIMIT 100;
    ```

8. **Join transactions with prices to get cost per transaction:**
    ```sql
    SELECT t."txn_date", t."quantity", p."price", (t."quantity" * p."price") AS "cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'purchase'
    LIMIT 100;
    ```

9. **Calculate yearly total cost of Bitcoin purchases by region:**
    ```sql
    SELECT YEAR(t."txn_date") AS "year", m."region", SUM(t."quantity" * p."price") AS "total_cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'purchase'
    GROUP BY YEAR(t."txn_date"), m."region"
    LIMIT 100;
    ```

10. **Calculate yearly average cost of Bitcoin purchases by region excluding the first year:**
    ```sql
    SELECT YEAR(t."txn_date") AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'purchase'
      AND YEAR(t."txn_date") > (SELECT MIN(YEAR("txn_date")) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    GROUP BY YEAR(t."txn_date"), m."region"
    LIMIT 100;
    ```

11. **Rank regions based on yearly average cost of Bitcoin purchases:**
    ```sql
    SELECT sub."year", sub."region", sub."average_cost", RANK() OVER (PARTITION BY sub."year" ORDER BY sub."average_cost" DESC) AS "rank"
    FROM (
      SELECT YEAR(t."txn_date") AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'purchase'
        AND YEAR(t."txn_date") > (SELECT MIN(YEAR("txn_date")) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
      GROUP BY YEAR(t."txn_date"), m."region"
    ) sub
    ORDER BY sub."year", "rank"
    LIMIT 100;
    ```

12. **Calculate annual percentage change in average cost by region:**
    ```sql
    SELECT this_year."year", this_year."region", this_year."average_cost", 
           ((this_year."average_cost" - last_year."average_cost") / last_year."average_cost") * 100 AS "annual_percentage_change"
    FROM (
      SELECT YEAR(t."txn_date") AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'purchase'
      GROUP BY YEAR(t."txn_date"), m."region"
    ) this_year
    JOIN (
      SELECT YEAR(t."txn_date") AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'purchase'
      GROUP BY YEAR(t."txn_date"), m."region"
    ) last_year
    ON this_year."region" = last_year."region" AND this_year."year" = last_year."year" + 1
    WHERE this_year."year" > (SELECT MIN(YEAR("txn_date")) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    LIMIT 100;
    ```

13. **Find the regions with the highest average purchase cost each year:**
    ```sql
    SELECT sub."year", sub."region", sub."average_cost"
    FROM (
      SELECT YEAR(t."txn_date") AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost",
             RANK() OVER (PARTITION BY YEAR(t."txn_date") ORDER BY AVG(t."quantity" * p."price") DESC) AS "rank"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'purchase'
      GROUP BY YEAR(t."txn_date"), m."region"
    ) sub
    WHERE sub."rank" = 1
    LIMIT 100;
    ```

14. **List regions and their total quantity of Bitcoin purchased each year:**
    ```sql
    SELECT YEAR(t."txn_date") AS "year", m."region", SUM(t."quantity") AS "total_quantity"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
    WHERE t."txn_type" = 'purchase'
    GROUP BY YEAR(t."txn_date"), m."region"
    LIMIT 100;
    ```

15. **Get the top 5 regions by average purchase cost in the most recent year:**
    ```sql
    SELECT sub."region", sub."average_cost"
    FROM (
      SELECT YEAR(t."txn_date") AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
      FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
      JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
      WHERE t."txn_type" = 'purchase'
      GROUP BY YEAR(t."txn_date"), m."region"
    ) sub
    WHERE sub."year" = (SELECT MAX(YEAR("txn_date")) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS")
    ORDER BY sub."average_cost" DESC
    LIMIT 5;
    ```

---

These queries help in understanding the data and preparing for the in-depth analysis required to address the task. Each query explores different aspects, such as filtering data, joining tables, calculating averages, and ranking results.Query:
SELECT *
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    LIMIT 100;
Answer:
Too long, hard cut:
txn_id,member_id,ticker,txn_date,txn_type,quantity,percentage_fee,txn_time
1,c81e72,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
2,eccbc8,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
3,a87ff6,BTC,01-01-2017,BUY,50.0,0.0,2017-01-01T00:00:00.000Z
4,e4da3b,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
5,167909,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
6,c4ca42,BTC,01-01-2017,BUY,50.0,0.02,2017-01-01T00:00:00.000Z
7,8f14e4,BTC,01-01-2017,BUY,50.0,0.21,2017-01-01T00:00:00.000Z
8,c9f0f8,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
9,45c48c,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
10,d3d944,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
11,6512bd,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
12,c20ad4,BTC,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
13,c51ce4,BTC,01-01-2017,BUY,50.0,0.26,2017-01-01T00:00:00.000Z
14,aab323,BTC,01-01-2017,BUY,50.0,0.22,2017-01-01T00:00:00.000Z
15,167909,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
16,c4ca42,ETH,01-01-2017,BUY,50.0,0.1,2017-01-01T00:00:00.000Z
17,c81e72,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
18,eccbc8,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
19,a87ff6,ETH,01-01-2017,BUY,50.0,0.2,2017-01-01T00:00:00.000Z
20,e4da3b,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
21,8f14e4,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
22,c9f0f8,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
23,45c48c,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
24,d3d944,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
25,6512bd,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
26,c20ad4,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
27,c51ce4,ETH,01-01-2017,BUY,50.0,0.3,2017-01-01T00:00:00.000Z
28,aab323,ETH,01-01-2017,BUY,50.0,0.01,2017-01-01T00:00:00.000Z
29,aab323,ETH,01-01-2017,SELL,9.562185136,0.3,2017-01-01T01:22:32.097Z
30,6512bd,ETH,01-01-2017,BUY,8.842987018,0.3,2017-01-01T06:22:20.203Z
31,6512bd,BTC,01-01-2017,BUY,2.271062586,0.21,2017-01-01T06:40:48.692Z
32,c20ad4,BTC,01-01-2017,BUY,6.101895756,0.3,2017-01-01T07:13:52.126Z
33,c20ad4,ETH,01-01-2017,SELL,1.146313066,0.3,2017-01-01T07:14:37.891Z
34,c9f0f8,ETH,01-01-2017,BUY,7.511535595,0.3,2017-01-01T10:04:32.111Z
35,6512bd,BTC,01-01-2017,BUY,6.73841781,0.3,2017-01-01T11:00:14.003Z
36,6512bd,BTC,01-01-2017,BUY,9.378757912,0.3,2017-01-01T12:03:33.017Z
37,c20ad4,BTC,01-01-2017,BUY,4.394808986,0.3,2017-01-01T13:23:05.640Z
38,45c48c,BTC,01-01-2017,BUY,4.666031683,0.3,2017-01-01T16:15:42.161Z
39,c20ad4,BTC,01-01-2017,BUY,3.563597579,0.25,2017-01-01T16:23:16.957Z
40,c20ad4,ETH,01-01-2017,BUY,3.531484029,0.3,2017-01-01T16:50:56.617Z
41,a87ff6,ETH,01-01-2017,BUY,1.98666102,0.3,2017-01-01T17:39:10.894Z
42,c81e72,ETH,01-01-2017,BUY,2.156824502,0.3,2017-01-01T22:08:29.987Z
43,8f14e4,BTC,01-01-2017,BUY,4.112440109,0.3,2017-01-01T22:19:46.693Z
44,c51ce4,ETH,01-01-2017,SELL,8.889890678,0.24,2017-01-01T22:22:56.373Z
45,167909,BTC,01-01-2017,BUY,8.129992969,0.28,2017-01-01T22:44:57.081Z
46,eccbc8,BTC,02-01-2017,BUY,3.729789722,0.23,2017-01-02T00:36:35.327Z
47,45c48c,ETH,02-01-2017,BUY,1.443256636,0.3,2017-01-02T01:32:36.586Z
48,d3d944,ETH,02-01-2017,SELL,8.339030859,0.3,2017-01-02T03:43:46.365Z
49,a87ff6,ETH,02-01-2017,BUY,8.786735207,0.3,2017-01-02T04:48:50.045Z
50,c51ce4,BTC,02-01-2017,BUY,1.695672235,0.08,2017-01-02T05:47:52.702Z
51,167909,BTC,02-01-2017,BUY,4.732996255,0.3,2017-01-02T08:23:56.047Z
52,e4da3b,ETH,02-01-2017,BUY,1.371663219,0.3,2017-01-02T08:36:54.590Z
53,a87ff6,BTC,02-01-2017,BUY,5.959804819,0.3,2017-01-02T09:55:27.347Z
54,aab323,ETH,02-01-2017,BUY,9.810761938,0.3,2017-01-02T11:02:15.444Z
55,6512bd,BTC,02-01-2017,BUY,5.543838119,0.3,2017-01-02T11:12:42.895Z
56,d3d944,BTC,02-01-2017,SELL,0.617022836,0.18,2017-01-02T11:47:14.983Z
57,d3d944,BTC,02-01-2017,BUY,8.675939586,0.3,2017-01-02T14:02:49.858Z
58,aab323,BTC,02-01-2017,BUY,0.150368926,0.3,2017-01-02T14:40:12.812Z
59,c4ca42,BTC,02-01-2017,BUY,6.079650398,0.3,2017-01-02T14:57:58.581Z
60,a87ff6,BTC,02-01-2017,BUY,9.011177226,0.3,2017-01-02T17:16:29.063Z
61,aab323,BTC,02-01-2017,BUY,1.029599926,0.05,2017-01-02T19:45:03.907Z
62,c20ad4,ETH,02-01-2017,SELL,3.687415614,0.3,2017-01-02T20:39:20.102Z
63,6512bd,ETH,02-01-2017,BUY,5.043726097,0.07,2017-01-02T20:48:13.480Z
64,a87ff6,ETH,02-01-2017,BUY,1.377159083,0.01,2017-01-02T20:49:33.772Z
65,6512bd,BTC,02-01-2017,BUY,3.012760299,0.3,2017-01-02T21:00:49.342Z
66,c4ca42,BTC,02-01-2017,BUY,1.194319601,0.18,2017-01-02T21:05:35.110Z
67,c51ce4,BTC,02-01-2017,SELL,6.14200575,0.3,2017-01-02T21:52:03.560Z
68,aab323,BTC,02-01-2017,BUY,8.876596041,0.05,2017-01-02T22:57:52.892Z
69,c51ce4,BTC,03-01-2017,BUY,1.791975102,0.11,2017-01-03T00:44:20.879Z
70,45c48c,ETH,03-01-2017,BUY,7.265296941,0.3,2017-01-03T02:01:39.028Z
71,c51ce4,ETH,03-01-2017,BUY,0.494025068,0.3,2017-01-03T02:20:00.282Z
72,8f14e4,ETH,03-01-2017,BUY,5.469869519,0.3,2017-01-03T03:11:50.133Z
73,8f14e4,BTC,03-01-2017,SELL,3.704582949,0.3,2017-01-03T04:40:59.43
Query:
SELECT DISTINCT "txn_type"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    LIMIT 100;
Answer:
txn_type
BUY
SELL
Query:
SELECT
    EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
    m."region" AS "Region",
    AVG(t."quantity" * p."price") AS "Average_Purchase_Cost"
FROM
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN
    "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE
    t."txn_type" = 'BUY'
GROUP BY
    "Year", "Region"
ORDER BY
    "Year", "Average_Purchase_Cost" DESC
LIMIT 100;
Answer:
Year,Region,Average_Purchase_Cost
2017,Africa,14898.580000902672
2017,Asia,14879.576386380966
2017,United States,11931.809061683358
2017,India,11730.321086367017
2017,Australia,10926.43541923687
2018,Africa,27464.123270235777
2018,Asia,26152.403774060753
2018,India,25073.85387109283
2018,United States,22448.25940567588
2018,Australia,19573.334929223234
2019,Africa,27146.38291560081
2019,Asia,24839.830313570466
2019,India,22639.02139247267
2019,United States,21600.56852899147
2019,Australia,16862.21098463127
2020,Asia,42261.23592071023
2020,Africa,42128.83058304218
2020,United States,31245.42774834473
2020,India,29936.145576846466
2020,Australia,29010.246761505106
2021,Africa,171461.87896826546
2021,Asia,152200.70273988033
2021,India,133310.24698892556
2021,United States,127948.57386634323
2021,Australia,109736.53635024455
Query:
SELECT "txn_date", "quantity"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
WHERE "txn_type" = 'BUY'
LIMIT 100
Answer:
txn_date,quantity
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,50.0
01-01-2017,8.842987018
01-01-2017,2.271062586
01-01-2017,6.101895756
01-01-2017,7.511535595
01-01-2017,6.73841781
01-01-2017,9.378757912
01-01-2017,4.394808986
01-01-2017,4.666031683
01-01-2017,3.563597579
01-01-2017,3.531484029
01-01-2017,1.98666102
01-01-2017,2.156824502
01-01-2017,4.112440109
01-01-2017,8.129992969
02-01-2017,3.729789722
02-01-2017,1.443256636
02-01-2017,8.786735207
02-01-2017,1.695672235
02-01-2017,4.732996255
02-01-2017,1.371663219
02-01-2017,5.959804819
02-01-2017,9.810761938
02-01-2017,5.543838119
02-01-2017,8.675939586
02-01-2017,0.150368926
02-01-2017,6.079650398
02-01-2017,9.011177226
02-01-2017,1.029599926
02-01-2017,5.043726097
02-01-2017,1.377159083
02-01-2017,3.012760299
02-01-2017,1.194319601
02-01-2017,8.876596041
03-01-2017,1.791975102
03-01-2017,7.265296941
03-01-2017,0.494025068
03-01-2017,5.469869519
03-01-2017,1.248782979
03-01-2017,3.807694538
03-01-2017,0.451011553
03-01-2017,9.201727658
03-01-2017,5.159655392
03-01-2017,2.22039025
03-01-2017,1.14515606
04-01-2017,9.316518093
04-01-2017,7.736987566
04-01-2017,9.147450149
04-01-2017,5.686772069
04-01-2017,1.315816748
04-01-2017,2.639010923
04-01-2017,9.448890603
04-01-2017,8.137724997
04-01-2017,4.181393763
04-01-2017,2.927012834
04-01-2017,7.637093177
04-01-2017,9.12200761
04-01-2017,7.328769521
04-01-2017,1.831004047
04-01-2017,8.782296318
04-01-2017,8.742448545
05-01-2017,2.61926013
05-01-2017,1.510491952
05-01-2017,4.695261363
05-01-2017,6.413918106
05-01-2017,9.808394015
05-01-2017,1.032755811
05-01-2017,9.49645508
05-01-2017,7.683720954
05-01-2017,4.888776093
06-01-2017,5.529125393
06-01-2017,8.524945201
06-01-2017,1.748322551
Query:
SELECT DISTINCT EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) AS "year"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
WHERE EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')) > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY')))
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
)
LIMIT 100
Answer:
year
2018
2019
2020
2021
Query:
SELECT t."member_id", m."region", t."txn_date", t."quantity"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
ON t."member_id" = m."member_id"
LIMIT 100
Answer:
member_id,region,txn_date,quantity
c81e72,United States,01-01-2017,50.0
eccbc8,United States,01-01-2017,50.0
a87ff6,United States,01-01-2017,50.0
e4da3b,United States,01-01-2017,50.0
167909,United States,01-01-2017,50.0
c4ca42,Australia,01-01-2017,50.0
8f14e4,United States,01-01-2017,50.0
c9f0f8,United States,01-01-2017,50.0
45c48c,Australia,01-01-2017,50.0
d3d944,Africa,01-01-2017,50.0
6512bd,India,01-01-2017,50.0
c20ad4,Asia,01-01-2017,50.0
c51ce4,Australia,01-01-2017,50.0
aab323,Australia,01-01-2017,50.0
167909,United States,01-01-2017,50.0
c4ca42,Australia,01-01-2017,50.0
c81e72,United States,01-01-2017,50.0
eccbc8,United States,01-01-2017,50.0
a87ff6,United States,01-01-2017,50.0
e4da3b,United States,01-01-2017,50.0
8f14e4,United States,01-01-2017,50.0
c9f0f8,United States,01-01-2017,50.0
45c48c,Australia,01-01-2017,50.0
d3d944,Africa,01-01-2017,50.0
6512bd,India,01-01-2017,50.0
c20ad4,Asia,01-01-2017,50.0
c51ce4,Australia,01-01-2017,50.0
aab323,Australia,01-01-2017,50.0
aab323,Australia,01-01-2017,9.562185136
6512bd,India,01-01-2017,8.842987018
6512bd,India,01-01-2017,2.271062586
c20ad4,Asia,01-01-2017,6.101895756
c20ad4,Asia,01-01-2017,1.146313066
c9f0f8,United States,01-01-2017,7.511535595
6512bd,India,01-01-2017,6.73841781
6512bd,India,01-01-2017,9.378757912
c20ad4,Asia,01-01-2017,4.394808986
45c48c,Australia,01-01-2017,4.666031683
c20ad4,Asia,01-01-2017,3.563597579
c20ad4,Asia,01-01-2017,3.531484029
a87ff6,United States,01-01-2017,1.98666102
c81e72,United States,01-01-2017,2.156824502
8f14e4,United States,01-01-2017,4.112440109
c51ce4,Australia,01-01-2017,8.889890678
167909,United States,01-01-2017,8.129992969
eccbc8,United States,02-01-2017,3.729789722
45c48c,Australia,02-01-2017,1.443256636
d3d944,Africa,02-01-2017,8.339030859
a87ff6,United States,02-01-2017,8.786735207
c51ce4,Australia,02-01-2017,1.695672235
167909,United States,02-01-2017,4.732996255
e4da3b,United States,02-01-2017,1.371663219
a87ff6,United States,02-01-2017,5.959804819
aab323,Australia,02-01-2017,9.810761938
6512bd,India,02-01-2017,5.543838119
d3d944,Africa,02-01-2017,0.617022836
d3d944,Africa,02-01-2017,8.675939586
aab323,Australia,02-01-2017,0.150368926
c4ca42,Australia,02-01-2017,6.079650398
a87ff6,United States,02-01-2017,9.011177226
aab323,Australia,02-01-2017,1.029599926
c20ad4,Asia,02-01-2017,3.687415614
6512bd,India,02-01-2017,5.043726097
a87ff6,United States,02-01-2017,1.377159083
6512bd,India,02-01-2017,3.012760299
c4ca42,Australia,02-01-2017,1.194319601
c51ce4,Australia,02-01-2017,6.14200575
aab323,Australia,02-01-2017,8.876596041
c51ce4,Australia,03-01-2017,1.791975102
45c48c,Australia,03-01-2017,7.265296941
c51ce4,Australia,03-01-2017,0.494025068
8f14e4,United States,03-01-2017,5.469869519
8f14e4,United States,03-01-2017,3.704582949
e4da3b,United States,03-01-2017,5.375890939
d3d944,Africa,03-01-2017,1.248782979
eccbc8,United States,03-01-2017,6.681740169
a87ff6,United States,03-01-2017,3.807694538
aab323,Australia,03-01-2017,1.120028576
aab323,Australia,03-01-2017,0.451011553
c20ad4,Asia,03-01-2017,9.201727658
d3d944,Africa,03-01-2017,3.441259193
e4da3b,United States,03-01-2017,5.159655392
c9f0f8,United States,03-01-2017,2.22039025
c9f0f8,United States,03-01-2017,1.14515606
eccbc8,United States,04-01-2017,9.316518093
c4ca42,Australia,04-01-2017,7.736987566
d3d944,Africa,04-01-2017,9.147450149
d3d944,Africa,04-01-2017,9.402255852
a87ff6,United States,04-01-2017,5.686772069
c20ad4,Asia,04-01-2017,1.315816748
8f14e4,United States,04-01-2017,2.639010923
c9f0f8,United States,04-01-2017,9.448890603
a87ff6,United States,04-01-2017,8.137724997
c9f0f8,United States,04-01-2017,4.181393763
e4da3b,United States,04-01-2017,2.927012834
aab323,Australia,04-01-2017,7.637093177
a87ff6,United States,04-01-2017,9.12200761
c51ce4,Australia,04-01-2017,7.328769521
6512bd,India,04-01-2017,1.831004047
c20ad4,Asia,04-01-2017,8.782296318
Query:
SELECT p."market_date", p."price"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
WHERE p."ticker" = 'BTC'
LIMIT 100
Answer:
market_date,price
29-08-2021,48255.0
28-08-2021,48897.1
27-08-2021,49064.3
26-08-2021,46831.6
25-08-2021,48994.5
24-08-2021,47714.7
23-08-2021,49539.7
22-08-2021,49254.5
21-08-2021,48875.8
20-08-2021,49324.0
19-08-2021,46755.9
18-08-2021,44723.8
17-08-2021,44691.6
16-08-2021,45996.3
15-08-2021,46991.3
14-08-2021,47081.5
13-08-2021,47809.1
12-08-2021,44403.4
11-08-2021,45564.3
10-08-2021,45593.8
09-08-2021,46284.3
08-08-2021,43792.8
07-08-2021,44614.2
06-08-2021,42795.4
05-08-2021,40867.2
04-08-2021,39736.9
03-08-2021,38130.3
02-08-2021,39168.4
01-08-2021,39878.3
31-07-2021,41553.7
30-07-2021,42203.4
29-07-2021,40001.4
28-07-2021,40003.2
27-07-2021,39452.0
26-07-2021,37276.6
25-07-2021,35391.1
24-07-2021,33824.8
23-07-2021,33603.3
22-07-2021,32298.9
21-07-2021,32131.4
20-07-2021,29793.8
19-07-2021,30837.2
18-07-2021,31785.4
17-07-2021,31518.6
16-07-2021,31394.0
15-07-2021,31840.5
14-07-2021,32820.7
13-07-2021,32728.1
12-07-2021,33113.0
11-07-2021,34227.7
10-07-2021,33510.6
09-07-2021,33797.4
08-07-2021,32866.3
07-07-2021,33867.8
06-07-2021,34225.6
05-07-2021,33687.8
04-07-2021,35298.2
03-07-2021,34742.8
02-07-2021,33813.4
01-07-2021,33543.6
30-06-2021,35026.9
29-06-2021,35834.7
28-06-2021,34475.9
27-06-2021,34678.5
26-06-2021,32243.4
25-06-2021,31594.0
24-06-2021,34665.8
23-06-2021,33674.3
22-06-2021,32496.4
21-06-2021,31692.0
20-06-2021,35595.8
19-06-2021,35513.4
18-06-2021,35749.4
17-06-2021,38052.0
16-06-2021,38336.0
15-06-2021,40156.1
14-06-2021,40529.4
13-06-2021,39022.9
12-06-2021,35467.5
11-06-2021,37314.6
10-06-2021,36649.4
09-06-2021,37332.2
08-06-2021,33382.9
07-06-2021,33578.0
06-06-2021,35815.4
05-06-2021,35520.0
04-06-2021,36851.3
03-06-2021,39187.3
02-06-2021,37555.8
01-06-2021,36687.6
31-05-2021,37298.6
30-05-2021,35652.8
29-05-2021,34584.6
28-05-2021,35662.5
27-05-2021,38417.3
26-05-2021,39249.2
25-05-2021,38378.3
24-05-2021,38750.6
23-05-2021,34679.7
22-05-2021,37448.3
Query:
SELECT t."txn_date", t."quantity", p."price", (t."quantity" * p."price") AS "cost"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
LIMIT 100
Answer:
txn_date,quantity,price,cost
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,995.4,49770.0
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,50.0,8.2,409.99999999999994
01-01-2017,8.842987018,8.2,72.5124935476
01-01-2017,2.271062586,995.4,2260.6156981044
01-01-2017,6.101895756,995.4,6073.8270355224
01-01-2017,7.511535595,8.2,61.59459187899999
01-01-2017,6.73841781,995.4,6707.421088073999
01-01-2017,9.378757912,995.4,9335.6156256048
01-01-2017,4.394808986,995.4,4374.5928646644
01-01-2017,4.666031683,995.4,4644.5679372582
01-01-2017,3.563597579,995.4,3547.2050301366
01-01-2017,3.531484029,8.2,28.958169037799998
01-01-2017,1.98666102,8.2,16.290620364
01-01-2017,2.156824502,8.2,17.6859609164
01-01-2017,4.112440109,995.4,4093.5228844985995
01-01-2017,8.129992969,995.4,8092.5950013426
02-01-2017,3.729789722,1017.0,3793.196147274
02-01-2017,1.443256636,8.37,12.08005804332
02-01-2017,8.786735207,8.37,73.54497368258998
02-01-2017,1.695672235,1017.0,1724.498662995
02-01-2017,4.732996255,1017.0,4813.457191335
02-01-2017,1.371663219,8.37,11.48082114303
02-01-2017,5.959804819,1017.0,6061.121500923
02-01-2017,9.810761938,8.37,82.11607742106
02-01-2017,5.543838119,1017.0,5638.083367023
02-01-2017,8.675939586,1017.0,8823.430558962
02-01-2017,0.150368926,1017.0,152.92519774200002
02-01-2017,6.079650398,1017.0,6183.004454766
02-01-2017,9.011177226,1017.0,9164.367238842
02-01-2017,1.029599926,1017.0,1047.1031247419999
02-01-2017,5.043726097,8.37,42.21598743189
02-01-2017,1.377159083,8.37,11.526821524709998
02-01-2017,3.012760299,1017.0,3063.977224083
02-01-2017,1.194319601,1017.0,1214.623034217
02-01-2017,8.876596041,1017.0,9027.498173697
03-01-2017,1.791975102,1033.3,1851.6478728966001
03-01-2017,7.265296941,9.74,70.76399220534
03-01-2017,0.494025068,9.74,4.8118041623200005
03-01-2017,5.469869519,9.74,53.27652911506001
03-01-2017,1.248782979,9.74,12.163146215460001
03-01-2017,3.807694538,1033.3,3934.4907661153998
03-01-2017,0.451011553,9.74,4.39285252622
03-01-2017,9.201727658,1033.3,9508.145189011399
03-01-2017,5.159655392,1033.3,5331.4719165536
03-01-2017,2.22039025,1033.3,2294.3292453249996
03-01-2017,1.14515606,9.74,11.1538200244
04-01-2017,9.316518093,1135.4,10577.9746427922
04-01-2017,7.736987566,1135.4,8784.5756824364
04-01-2017,9.147450149,1135.4,10386.014899174601
04-01-2017,5.686772069,1135.4,6456.761007142601
04-01-2017,1.315816748,1135.4,1493.9783356792002
04-01-2017,2.639010923,11.0,29.029120152999997
04-01-2017,9.448890603,11.0,103.937796633
04-01-2017,8.137724997,1135.4,9239.5729615938
04-01-2017,4.181393763,11.0,45.995331393
04-01-2017,2.927012834,1135.4,3323.3303717236004
04-01-2017,7.637093177,11.0,84.008024947
04-01-2017,9.12200761,11.0,100.34208371000001
04-01-2017,7.328769521,1135.4,8321.084914143401
04-01-2017,1.831004047,11.0,20.141044517
04-01-2017,8.782296318,1135.4,9971.419239457202
04-01-2017,8.742448545,1135.4,9926.176077993001
05-01-2017,2.61926013,989.3,2591.2340466089995
05-01-2017,1.510491952,989.3,1494.3296881136
05-01-2017,4.695261363,10.15,47.65690283445
05-01-2017,6.413918106,989.3,6345.289182265799
05-01-2017,9.808394015,989.3,9703.444199039499
05-01-2017,1.032755811,989.3,1021.7053238222999
05-01-2017,9.49645508,989.3,9394.843010644
05-01-2017,7.683720954,989.3,7601.5051397922
05-01-2017,4.888776093,989.3,4836.4661888048995
06-01-2017,5.529125393,886.2,4899.9109232766
06-01-2017,8.524945201,886.2,7554.8064371262
06-01-2017,1.748322551,886.2,1549.3634446962
Query:
SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", SUM(t."quantity" * p."price") AS "total_cost"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
LIMIT 100
Answer:
year,region,total_cost
2017,Africa,3784239.3202292784
2017,India,3413523.436132802
2018,United States,43078209.79949201
2018,Australia,24094775.297873802
2018,Africa,7772346.885476725
2021,Australia,86691863.7166932
2017,United States,23147709.579665713
2018,Asia,7845721.132218226
2018,India,6519202.006484136
2019,Africa,6080789.773094581
2019,India,7448238.038123509
2020,United States,62959536.91291463
2020,India,9220332.837668711
2021,Africa,26576591.240081146
2020,Africa,10742851.798675757
2017,Australia,14018616.642880905
2017,Asia,4404354.610368766
2019,United States,40868275.65685186
2019,Australia,21684803.326235816
2019,Asia,7700347.397206845
2020,Australia,38119464.24461771
2021,United States,160063665.90679538
2020,Asia,12298019.652926676
2021,India,24129154.704995528
2021,Asia,33940756.71099331
Query:
SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
    ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
WHERE t."txn_type" = 'BUY'
  AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
      SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
  )
GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
LIMIT 100
Answer:
year,region,average_cost
2018,Asia,26152.403774060753
2018,India,25073.85387109283
2019,Africa,27146.38291560081
2019,India,22639.02139247267
2020,United States,31245.42774834473
2020,India,29936.145576846466
2020,Africa,42128.83058304218
2021,Africa,171461.87896826546
2019,United States,21600.56852899147
2019,Australia,16862.21098463127
2019,Asia,24839.830313570466
2020,Australia,29010.246761505106
2020,Asia,42261.23592071023
2021,India,133310.24698892556
2021,United States,127948.57386634323
2021,Asia,152200.70273988033
2018,United States,22448.25940567588
2018,Australia,19573.334929223234
2018,Africa,27464.123270235777
2021,Australia,109736.53635024455
Query:
SELECT sub."year", sub."region", sub."average_cost", RANK() OVER (PARTITION BY sub."year" ORDER BY sub."average_cost" DESC) AS "rank"
FROM (
  SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
  ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
  ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
  WHERE t."txn_type" = 'BUY'
    AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
        SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
    )
  GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) sub
ORDER BY sub."year", "rank"
LIMIT 100
Answer:
year,region,average_cost,rank
2018,Africa,27464.123270235777,1
2018,Asia,26152.403774060753,2
2018,India,25073.85387109283,3
2018,United States,22448.25940567588,4
2018,Australia,19573.334929223234,5
2019,Africa,27146.38291560081,1
2019,Asia,24839.830313570466,2
2019,India,22639.02139247267,3
2019,United States,21600.56852899147,4
2019,Australia,16862.21098463127,5
2020,Asia,42261.23592071023,1
2020,Africa,42128.83058304218,2
2020,United States,31245.42774834473,3
2020,India,29936.145576846466,4
2020,Australia,29010.246761505106,5
2021,Africa,171461.87896826546,1
2021,Asia,152200.70273988033,2
2021,India,133310.24698892556,3
2021,United States,127948.57386634323,4
2021,Australia,109736.53635024455,5
Query:
SELECT 
    this_year."year", 
    this_year."region", 
    this_year."average_cost", 
    ((this_year."average_cost" - last_year."average_cost") / last_year."average_cost") * 100 AS "annual_percentage_change"
FROM (
    SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY'
    GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) this_year
JOIN (
    SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE t."txn_type" = 'BUY'
    GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) last_year
ON this_year."region" = last_year."region" AND this_year."year" = last_year."year" + 1
WHERE this_year."year" > (
    SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
)
LIMIT 100
Answer:
year,region,average_cost,annual_percentage_change
2018,United States,22448.25940567588,88.13793691825005
2019,Asia,24839.830313570466,-5.018940024901886
2019,India,22639.02139247267,-9.710643170921688
2020,Africa,42128.83058304218,55.191322225220205
2020,India,29936.145576846466,32.232507129482386
2021,United States,127948.57386634323,309.4953504777078
2021,India,133310.24698892556,345.3153350912076
2021,Africa,171461.87896826546,306.99415719666996
2018,Australia,19573.334929223234,79.13742385520167
2018,Asia,26152.403774060753,75.76040537012614
2020,United States,31245.42774834473,44.65095076737584
2020,Australia,29010.246761505106,72.04295918219694
2020,Asia,42261.23592071023,70.13496222485111
2021,Australia,109736.53635024455,278.2681934848569
2021,Asia,152200.70273988033,260.142573741659
2018,Africa,27464.123270235777,84.34054298175924
2018,India,25073.85387109283,113.75249395546103
2019,United States,21600.56852899147,-3.7761986858993506
2019,Australia,16862.21098463127,-13.851108941809512
2019,Africa,27146.38291560081,-1.15692881039213
Query:
SELECT sub."year", sub."region", sub."average_cost"
FROM (
  SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost",
         RANK() OVER (PARTITION BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) ORDER BY AVG(t."quantity" * p."price") DESC) AS "rank"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
  WHERE t."txn_type" = 'BUY'
  GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) sub
WHERE sub."rank" = 1
LIMIT 100
Answer:
year,region,average_cost
2017,Africa,14898.580000902672
2019,Africa,27146.38291560081
2021,Africa,171461.87896826546
2020,Asia,42261.23592071023
2018,Africa,27464.123270235777
Query:
SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", SUM(t."quantity") AS "total_quantity"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
    ON t."member_id" = m."member_id"
WHERE t."txn_type" = 'BUY'
GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
LIMIT 100
Answer:
year,region,total_quantity
2017,Australia,6813.260548
2018,Australia,6227.724489253
2018,Africa,1377.956583302
2019,Africa,1095.784869418
2019,Australia,6406.885041362
2020,India,1527.423962425
2020,Africa,1336.540782422
2021,United States,6148.806656713
2021,Australia,3938.028788841
2019,Asia,1619.618441392
2021,India,952.759891233
2017,United States,10433.219711331
2017,Africa,1413.311543373
2017,India,1571.879709356
2017,Asia,1519.935962797
2018,Asia,1442.25975353
2018,United States,9525.955557094
2019,United States,9531.629794916
2019,India,1572.679575812
2020,United States,10064.238477836
2020,Australia,6608.306619856
2020,Asia,1496.525352338
2021,Africa,791.917860565
2021,Asia,1084.526571265
2018,India,1348.171749978
Query:
SELECT sub."region", sub."average_cost"
FROM (
  SELECT EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "year", m."region", AVG(t."quantity" * p."price") AS "average_cost"
  FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
      ON t."member_id" = m."member_id"
  JOIN "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
      ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
  WHERE t."txn_type" = 'BUY'
  GROUP BY EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), m."region"
) sub
WHERE sub."year" = (
    SELECT MAX(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
)
ORDER BY sub."average_cost" DESC
LIMIT 5
Answer:
region,average_cost
Africa,171461.87896826546
Asia,152200.70273988033
India,133310.24698892556
United States,127948.57386634323
Australia,109736.53635024455
End Exploring Related Columns
Task: Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-26 03:36:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:36:26 - root - INFO - ```sql
WITH average_costs AS (
    SELECT 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
        m."region" AS "Region",
        AVG(t."quantity" * p."price") AS "Average_Cost"
    FROM 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE 
        t."txn_type" = 'BUY'
        AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
            SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
            FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
        )
    GROUP BY 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), 
        m."region"
),
ranked_costs AS (
    SELECT
        ac."Year",
        ac."Region",
        ac."Average_Cost",
        RANK() OVER (PARTITION BY ac."Year" ORDER BY ac."Average_Cost" DESC NULLS LAST) AS "Rank"
    FROM
        average_costs ac
),
percentage_change AS (
    SELECT
        rc."Year",
        rc."Region",
        rc."Average_Cost",
        rc."Rank",
        ROUND(((rc."Average_Cost" - prev_ac."Average_Cost") / NULLIF(prev_ac."Average_Cost", 0)) * 100, 4) AS "Annual_Percentage_Change"
    FROM
        ranked_costs rc
    LEFT JOIN
        average_costs prev_ac
        ON rc."Region" = prev_ac."Region" AND rc."Year" = prev_ac."Year" + 1
)
SELECT
    "Year",
    "Region",
    "Average_Cost",
    "Rank",
    "Annual_Percentage_Change"
FROM
    percentage_change
ORDER BY
    "Year", "Rank";
```
2025-01-26 03:36:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:36:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:36:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:36:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:36:28 - snowflake.connector.connection - INFO - closed
2025-01-26 03:36:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:36:28 - root - INFO - itercount: 1
2025-01-26 03:36:28 - root - INFO - 0
2025-01-26 03:36:28 - root - INFO - results: 
Year,Region,Average_Cost,Rank,Annual_Percentage_Change
2018,Africa,27464.123270235777,1,
2018,Asia,26152.403774060753,2,
2018,India,25073.85387109283,3,
2018,United States,22448.25940567588,4,
2018,Australia,19573.334929223234,5,
2019,Africa,27146.38291560081,1,-1.1569
2019,Asia,24839.830313570466,2,-5.0189
2019,India,22639.02139247267,3,-9.7106
2019,United States,21600.56852899147,4,-3.7762
2019,Australia,16862.21098463127,5,-13.8511
2020,Asia,42261.23592071023,1,70.135
2020,Africa,42128.83058304218,2,55.1913
2020,United States,31245.42774834473,3,44.651
2020,India,29936.145576846466,4,32.2325
2020,Australia,29010.246761505106,5,72.043
2021,Africa,171461.87896826546,1,306.9942
2021,Asia,152200.70273988033,2,260.1426
2021,India,133310.24698892556,3,345.3153
2021,United States,127948.57386634323,4,309.4954
2021,Australia,109736.53635024455,5,278.2682


2025-01-26 03:36:28 - root - INFO - Please check the answer again by reviewing Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Region,Average_Cost,Rank,Annual_Percentage_Change
2018,Africa,27464.123270235777,1,
2018,Asia,26152.403774060753,2,
2018,India,25073.85387109283,3,
2018,United States,22448.25940567588,4,
2018,Australia,19573.334929223234,5,
2019,Africa,27146.38291560081,1,-1.1569
2019,Asia,24839.830313570466,2,-5.0189
2019,India,22639.02139247267,3,-9.7106
2019,United States,21600.56852899147,4,-3.7762
2019,Australia,16862.21098463127,5,-13.8511
2020,Asia,42261.23592071023,1,70.135
2020,Africa,42128.83058304218,2,55.1913
2020,United States,31245.42774834473,3,44.651
2020,India,29936.145576846466,4,32.2325
2020,Australia,29010.246761505106,5,72.043
2021,Africa,171461.87896826546,1,306.9942
2021,Asia,152200.70273988033,2,260.1426
2021,India,133310.24698892556,3,345.3153
2021,United States,127948.57386634323,4,309.4954
2021,Australia,109736.53635024455,5,278.2682
Current sql:
WITH average_costs AS (
    SELECT 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
        m."region" AS "Region",
        AVG(t."quantity" * p."price") AS "Average_Cost"
    FROM 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE 
        t."txn_type" = 'BUY'
        AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
            SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
            FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
        )
    GROUP BY 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), 
        m."region"
),
ranked_costs AS (
    SELECT
        ac."Year",
        ac."Region",
        ac."Average_Cost",
        RANK() OVER (PARTITION BY ac."Year" ORDER BY ac."Average_Cost" DESC NULLS LAST) AS "Rank"
    FROM
        average_costs ac
),
percentage_change AS (
    SELECT
        rc."Year",
        rc."Region",
        rc."Average_Cost",
        rc."Rank",
        ROUND(((rc."Average_Cost" - prev_ac."Average_Cost") / NULLIF(prev_ac."Average_Cost", 0)) * 100, 4) AS "Annual_Percentage_Change"
    FROM
        ranked_costs rc
    LEFT JOIN
        average_costs prev_ac
        ON rc."Region" = prev_ac."Region" AND rc."Year" = prev_ac."Year" + 1
)
SELECT
    "Year",
    "Region",
    "Average_Cost",
    "Rank",
    "Annual_Percentage_Change"
FROM
    percentage_change
ORDER BY
    "Year", "Rank";
2025-01-26 03:37:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:37:06 - root - INFO - ```sql
WITH average_costs AS (
    SELECT 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
        m."region" AS "Region",
        AVG(t."quantity" * p."price") AS "Average_Cost"
    FROM 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE 
        t."txn_type" = 'BUY'
        AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
            SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
            FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
        )
    GROUP BY 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), 
        m."region"
),
ranked_costs AS (
    SELECT
        ac."Year",
        ac."Region",
        ac."Average_Cost",
        RANK() OVER (PARTITION BY ac."Year" ORDER BY ac."Average_Cost" DESC NULLS LAST) AS "Rank"
    FROM
        average_costs ac
),
percentage_change AS (
    SELECT
        rc."Year",
        rc."Region",
        ROUND(rc."Average_Cost", 4) AS "Average_Cost",
        rc."Rank",
        ROUND(((rc."Average_Cost" - prev_ac."Average_Cost") / NULLIF(prev_ac."Average_Cost", 0)) * 100, 4) AS "Annual_Percentage_Change"
    FROM
        ranked_costs rc
    LEFT JOIN
        average_costs prev_ac
        ON rc."Region" = prev_ac."Region" AND rc."Year" = prev_ac."Year" + 1
)
SELECT
    "Year",
    "Region",
    "Average_Cost" AS "Average_Purchase_Cost",
    "Rank",
    "Annual_Percentage_Change"
FROM
    percentage_change
ORDER BY
    "Year", "Rank";
```
2025-01-26 03:37:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:37:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:37:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:37:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:37:08 - snowflake.connector.connection - INFO - closed
2025-01-26 03:37:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:37:08 - root - INFO - itercount: 2
2025-01-26 03:37:08 - root - INFO - 0
2025-01-26 03:37:08 - root - INFO - results: 
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
2018,Africa,27464.1233,1,
2018,Asia,26152.4038,2,
2018,India,25073.8539,3,
2018,United States,22448.2594,4,
2018,Australia,19573.3349,5,
2019,Africa,27146.3829,1,-1.1569
2019,Asia,24839.8303,2,-5.0189
2019,India,22639.0214,3,-9.7106
2019,United States,21600.5685,4,-3.7762
2019,Australia,16862.211,5,-13.8511
2020,Asia,42261.2359,1,70.135
2020,Africa,42128.8306,2,55.1913
2020,United States,31245.4277,3,44.651
2020,India,29936.1456,4,32.2325
2020,Australia,29010.2468,5,72.043
2021,Africa,171461.879,1,306.9942
2021,Asia,152200.7027,2,260.1426
2021,India,133310.247,3,345.3153
2021,United States,127948.5739,4,309.4954
2021,Australia,109736.5364,5,278.2682


2025-01-26 03:37:08 - root - INFO - Please check the answer again by reviewing Can you analyze the yearly average cost of Bitcoin purchases by region, excluding the first year's data? Rank the regions based on these averages each year and calculate the annual percentage change in cost., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
year1:int > first year,region1:str,average_cost1:float,rank1:int,annual_change1:float
year1:int > first year,region2:str,average_cost2:float,rank2:int,annual_change2:float
...
```

We have analyzed the yearly average cost of Bitcoin purchases by region, excluding the first year's data. The table above shows, for each year and region, the average purchase cost of Bitcoin, the region's rank based on these averages for that year, and the annual percentage change in cost. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Region,Average_Purchase_Cost,Rank,Annual_Percentage_Change
2018,Africa,27464.1233,1,
2018,Asia,26152.4038,2,
2018,India,25073.8539,3,
2018,United States,22448.2594,4,
2018,Australia,19573.3349,5,
2019,Africa,27146.3829,1,-1.1569
2019,Asia,24839.8303,2,-5.0189
2019,India,22639.0214,3,-9.7106
2019,United States,21600.5685,4,-3.7762
2019,Australia,16862.211,5,-13.8511
2020,Asia,42261.2359,1,70.135
2020,Africa,42128.8306,2,55.1913
2020,United States,31245.4277,3,44.651
2020,India,29936.1456,4,32.2325
2020,Australia,29010.2468,5,72.043
2021,Africa,171461.879,1,306.9942
2021,Asia,152200.7027,2,260.1426
2021,India,133310.247,3,345.3153
2021,United States,127948.5739,4,309.4954
2021,Australia,109736.5364,5,278.2682
Current sql:
WITH average_costs AS (
    SELECT 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
        m."region" AS "Region",
        AVG(t."quantity" * p."price") AS "Average_Cost"
    FROM 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
        ON t."member_id" = m."member_id"
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
        ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE 
        t."txn_type" = 'BUY'
        AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
            SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
            FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
        )
    GROUP BY 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), 
        m."region"
),
ranked_costs AS (
    SELECT
        ac."Year",
        ac."Region",
        ac."Average_Cost",
        RANK() OVER (PARTITION BY ac."Year" ORDER BY ac."Average_Cost" DESC NULLS LAST) AS "Rank"
    FROM
        average_costs ac
),
percentage_change AS (
    SELECT
        rc."Year",
        rc."Region",
        ROUND(rc."Average_Cost", 4) AS "Average_Cost",
        rc."Rank",
        ROUND(((rc."Average_Cost" - prev_ac."Average_Cost") / NULLIF(prev_ac."Average_Cost", 0)) * 100, 4) AS "Annual_Percentage_Change"
    FROM
        ranked_costs rc
    LEFT JOIN
        average_costs prev_ac
        ON rc."Region" = prev_ac."Region" AND rc."Year" = prev_ac."Year" + 1
)
SELECT
    "Year",
    "Region",
    "Average_Cost" AS "Average_Purchase_Cost",
    "Rank",
    "Annual_Percentage_Change"
FROM
    percentage_change
ORDER BY
    "Year", "Rank";
2025-01-26 03:37:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 03:37:50 - root - INFO - ```sql
WITH average_costs AS (
    SELECT 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) AS "Year",
        m."region" AS "Region",
        AVG(t."quantity" * p."price") AS "Average_Cost"
    FROM 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS" t
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_MEMBERS" m
            ON t."member_id" = m."member_id"
    JOIN 
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_PRICES" p
            ON t."ticker" = p."ticker" AND t."txn_date" = p."market_date"
    WHERE 
        t."txn_type" = 'BUY'
        AND EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')) > (
            SELECT MIN(EXTRACT(YEAR FROM TO_DATE("txn_date", 'DD-MM-YYYY'))) 
            FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."BITCOIN_TRANSACTIONS"
        )
    GROUP BY 
        EXTRACT(YEAR FROM TO_DATE(t."txn_date", 'DD-MM-YYYY')), 
        m."region"
),
ranked_costs AS (
    SELECT
        ac."Year",
        ac."Region",
        ac."Average_Cost",
        RANK() OVER (PARTITION BY ac."Year" ORDER BY ac."Average_Cost" DESC NULLS LAST) AS "Rank"
    FROM
        average_costs ac
),
percentage_change AS (
    SELECT
        rc."Year",
        rc."Region",
        ROUND(rc."Average_Cost", 4) AS "Average_Cost",
        rc."Rank",
        ROUND(((rc."Average_Cost" - prev_ac."Average_Cost") / NULLIF(prev_ac."Average_Cost", 0)) * 100, 4) AS "Annual_Percentage_Change"
    FROM
        ranked_costs rc
    LEFT JOIN
        average_costs prev_ac
            ON rc."Region" = prev_ac."Region" AND prev_ac."Year" = rc."Year" - 1
)
SELECT
    "Year",
    "Region",
    "Average_Cost" AS "Average_Purchase_Cost",
    "Rank",
    "Annual_Percentage_Change"
FROM
    percentage_change
ORDER BY
    "Year", "Rank";
```
2025-01-26 03:37:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 03:37:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 03:37:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 03:37:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-26 03:37:51 - snowflake.connector.connection - INFO - closed
2025-01-26 03:37:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 03:37:52 - root - INFO - itercount: 3
2025-01-26 03:37:52 - root - INFO - 0
2025-01-26 03:37:52 - root - INFO - Total iteration counts: 3
