2025-02-12 18:51:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:51:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:06 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:06 - root - INFO - SQL:
SELECT "repo_name", "language"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
   LIMIT 100;
Results:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]

2025-02-12 18:51:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:07 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:08 - root - INFO - SQL:
SELECT "repo_name", f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,language_name
yyuu/antismoker,"{""bytes"":24665,""name"":""Ruby""}"
yyuu/antismoker,"{""bytes"":164,""name"":""Shell""}"
itakurara/gem_mamezo,"{""bytes"":1994,""name"":""Ruby""}"
itakurara/gem_mamezo,"{""bytes"":115,""name"":""Shell""}"
klriutsa/e_stat,"{""bytes"":3585,""name"":""Ruby""}"
klriutsa/e_stat,"{""bytes"":131,""name"":""Shell""}"
rmcfadzean/jekyll-codepen,"{""bytes"":5232,""name"":""Ruby""}"
rmcfadzean/jekyll-codepen,"{""bytes"":420,""name"":""Shell""}"
kitlangton/pessimist,"{""bytes"":2329,""name"":""Ruby""}"
kitlangton/pessimist,"{""bytes"":115,""name"":""Shell""}"
bjjb/ordu,"{""bytes"":1715,""name"":""Ruby""}"
bjjb/ordu,"{""bytes"":131,""name"":""Shell""}"
sajjadROR/extra_attributes_for_all_migration,"{""bytes"":2578,""name"":""Ruby""}"
sajjadROR/extra_attributes_for_all_migration,"{""bytes"":115,""name"":""Shell""}"
space-pirates-llc/quill-builder,"{""bytes"":14983,""name"":""Ruby""}"
space-pirates-llc/quill-builder,"{""bytes"":131,""name"":""Shell""}"
jt-platterz/slack_messenger,"{""bytes"":7726,""name"":""Ruby""}"
jt-platterz/slack_messenger,"{""bytes"":131,""name"":""Shell""}"
aquinofb/checkout,"{""bytes"":13565,""name"":""Ruby""}"
aquinofb/checkout,"{""bytes"":131,""name"":""Shell""}"
esender/ffaker,"{""bytes"":301045,""name"":""Ruby""}"
esender/ffaker,"{""bytes"":60,""name"":""Shell""}"
harshniketseta/marvels,"{""bytes"":2172,""name"":""Ruby""}"
harshniketseta/marvels,"{""bytes"":115,""name"":""Shell""}"
catalin-enache/ntk_dockerfile,"{""bytes"":192,""name"":""Ruby""}"
catalin-enache/ntk_dockerfile,"{""bytes"":182,""name"":""Shell""}"
chef/knife-linode,"{""bytes"":40951,""name"":""Ruby""}"
chef/knife-linode,"{""bytes"":455,""name"":""Shell""}"
qilab-/vagrant-cdh4.5,"{""bytes"":662,""name"":""Ruby""}"
qilab-/vagrant-cdh4.5,"{""bytes"":1229,""name"":""Shell""}"
carney520/crawler,"{""bytes"":53286,""name"":""Ruby""}"
carney520/crawler,"{""bytes"":115,""name"":""Shell""}"
alu0100789355/prct09,"{""bytes"":21138,""name"":""Ruby""}"
alu0100789355/prct09,"{""bytes"":115,""name"":""Shell""}"
ConPaaS-team/conpaas-docker-images,"{""bytes"":412,""name"":""Ruby""}"
ConPaaS-team/conpaas-docker-images,"{""bytes"":5403,""name"":""Shell""}"
dreamingechoes/bootstrap_sb_admin_base_v2,"{""bytes"":1858,""name"":""Ruby""}"
dreamingechoes/bootstrap_sb_admin_base_v2,"{""bytes"":115,""name"":""Shell""}"
wickles/homebrew-cask,"{""bytes"":2140657,""name"":""Ruby""}"
wickles/homebrew-cask,"{""bytes"":56584,""name"":""Shell""}"
pressable/chef-hipchat-cli,"{""bytes"":5169,""name"":""Ruby""}"
pressable/chef-hipchat-cli,"{""bytes"":2128,""name"":""Shell""}"
gnawhleinad/youtube,"{""bytes"":29,""name"":""Ruby""}"
gnawhleinad/youtube,"{""bytes"":1171,""name"":""Shell""}"
se3000/ruby-eth,"{""bytes"":69565,""name"":""Ruby""}"
se3000/ruby-eth,"{""bytes"":131,""name"":""Shell""}"
jayceeb/remote_syslog2-cookbook,"{""bytes"":3392,""name"":""Ruby""}"
jayceeb/remote_syslog2-cookbook,"{""bytes"":2109,""name"":""Shell""}"
cosmo0920/ansible-playbook-for-keter-deploy,"{""bytes"":3250,""name"":""Ruby""}"
cosmo0920/ansible-playbook-for-keter-deploy,"{""bytes"":316,""name"":""Shell""}"
egjiri/database_syncer,"{""bytes"":3929,""name"":""Ruby""}"
egjiri/database_syncer,"{""bytes"":115,""name"":""Shell""}"
can-explore/geojson_model,"{""bytes"":8272,""name"":""Ruby""}"
can-explore/geojson_model,"{""bytes"":115,""name"":""Shell""}"
yast/yast-storage-ng,"{""bytes"":5753311,""name"":""Ruby""}"
yast/yast-storage-ng,"{""bytes"":2203,""name"":""Shell""}"
alu0100611281/LPP_32_prct09,"{""bytes"":10513,""name"":""Ruby""}"
alu0100611281/LPP_32_prct09,"{""bytes"":115,""name"":""Shell""}"
obsidian-btc/http-commands,"{""bytes"":22977,""name"":""Ruby""}"
obsidian-btc/http-commands,"{""bytes"":2912,""name"":""Shell""}"
guttertec/vagrant-template,"{""bytes"":124,""name"":""Ruby""}"
guttertec/vagrant-template,"{""bytes"":0,""name"":""Shell""}"
altV/interleave,"{""bytes"":2176,""name"":""Ruby""}"
altV/interleave,"{""bytes"":131,""name"":""Shell""}"
phoet/memo-it,"{""bytes"":9556,""name"":""Ruby""}"
phoet/memo-it,"{""bytes"":131,""name"":""Shell""}"
dimko/carrierwave-jpegtran,"{""bytes"":3917,""name"":""Ruby""}"
dimko/carrierwave-jpegtran,"{""bytes"":66,""name"":""Shell""}"
kuldeepaggarwal/arel_extension,"{""bytes"":6601,""name"":""Ruby""}"
kuldeepaggarwal/arel_extension,"{""bytes"":115,""name"":""Shell""}"
nalabjp/mysql_import,"{""bytes"":21440,""name"":""Ruby""}"
nalabjp/mysql_import,"{""bytes"":290,""name"":""Shell""}"
marcojonker/test,"{""bytes"":156103,""name"":""Ruby""}"
marcojonker/test,"{""bytes"":1517,""name"":""Shell""}"
akuzko/parascope,"{""bytes"":24482,""name"":""Ruby""}"
akuzko/parascope,"{""bytes"":131,""name"":""Shell""}"
DivineDominion/zettel-outline-rendering,"{""bytes"":20436,""name"":""Ruby""}"
DivineDominion/zettel-outline-rendering,"{""bytes"":131,""name"":""Shell""}"
cyphactor/octopusci,"{""bytes"":84848,""name"":""Ruby""}"
cyphactor/octopusci,"{""bytes"":915,""name"":""Shell""}"
bogdan14x/d3raw,"{""bytes"":11054,""name"":""Ru

2025-02-12 18:51:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:09 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:09 - root - INFO - SQL:
SELECT DISTINCT f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   LIMIT 100;
Results:
language_name
"{""bytes"":6175,""name"":""Shell""}"
"{""bytes"":3279,""name"":""Ruby""}"
"{""bytes"":751,""name"":""Shell""}"
"{""bytes"":4295,""name"":""Ruby""}"
"{""bytes"":803,""name"":""Shell""}"
"{""bytes"":111,""name"":""Shell""}"
"{""bytes"":564,""name"":""Shell""}"
"{""bytes"":59881,""name"":""Shell""}"
"{""bytes"":3515,""name"":""Ruby""}"
"{""bytes"":1024,""name"":""Ruby""}"
"{""bytes"":6076,""name"":""Shell""}"
"{""bytes"":2373,""name"":""Ruby""}"
"{""bytes"":26521,""name"":""Ruby""}"
"{""bytes"":48537,""name"":""Ruby""}"
"{""bytes"":62701,""name"":""Ruby""}"
"{""bytes"":1606,""name"":""Ruby""}"
"{""bytes"":1762716,""name"":""Ruby""}"
"{""bytes"":14090,""name"":""Ruby""}"
"{""bytes"":51738,""name"":""Ruby""}"
"{""bytes"":8873,""name"":""Shell""}"
"{""bytes"":18410,""name"":""Ruby""}"
"{""bytes"":29813,""name"":""Ruby""}"
"{""bytes"":19709,""name"":""Ruby""}"
"{""bytes"":14196,""name"":""Ruby""}"
"{""bytes"":7156,""name"":""Ruby""}"
"{""bytes"":29192,""name"":""Shell""}"
"{""bytes"":5066,""name"":""VimL""}"
"{""bytes"":354793,""name"":""Rust""}"
"{""bytes"":13371,""name"":""Swift""}"
"{""bytes"":173762,""name"":""Rust""}"
"{""bytes"":60356,""name"":""Rust""}"
"{""bytes"":13687,""name"":""Python""}"
"{""bytes"":15166,""name"":""Rust""}"
"{""bytes"":7742,""name"":""Rust""}"
"{""bytes"":12297,""name"":""VimL""}"
"{""bytes"":9753,""name"":""Xtend""}"
"{""bytes"":6819,""name"":""Makefile""}"
"{""bytes"":74,""name"":""Shell""}"
"{""bytes"":16649,""name"":""Ruby""}"
"{""bytes"":13958,""name"":""Ruby""}"
"{""bytes"":39334,""name"":""Ruby""}"
"{""bytes"":8180,""name"":""Shell""}"
"{""bytes"":8290,""name"":""Ruby""}"
"{""bytes"":5958,""name"":""Shell""}"
"{""bytes"":1788,""name"":""Ruby""}"
"{""bytes"":1684,""name"":""Ruby""}"
"{""bytes"":331,""name"":""Ruby""}"
"{""bytes"":1438,""name"":""XSLT""}"
"{""bytes"":12038,""name"":""Thrift""}"
"{""bytes"":16137,""name"":""Rust""}"
"{""bytes"":1280,""name"":""Shell""}"
"{""bytes"":5232,""name"":""Ruby""}"
"{""bytes"":303099,""name"":""Ruby""}"
"{""bytes"":247,""name"":""Shell""}"
"{""bytes"":1095,""name"":""Shell""}"
"{""bytes"":1171,""name"":""Shell""}"
"{""bytes"":16497,""name"":""Ruby""}"
"{""bytes"":17347,""name"":""Ruby""}"
"{""bytes"":2468,""name"":""Shell""}"
"{""bytes"":2502,""name"":""Ruby""}"
"{""bytes"":2751,""name"":""Shell""}"
"{""bytes"":23697,""name"":""Ruby""}"
"{""bytes"":25240,""name"":""Vim script""}"
"{""bytes"":15379,""name"":""Swift""}"
"{""bytes"":462,""name"":""Ruby""}"
"{""bytes"":14038,""name"":""Swift""}"
"{""bytes"":9083,""name"":""Swift""}"
"{""bytes"":2959,""name"":""Shell""}"
"{""bytes"":6337,""name"":""Ruby""}"
"{""bytes"":360388,""name"":""Rust""}"
"{""bytes"":65927,""name"":""Rust""}"
"{""bytes"":1080,""name"":""Shell""}"
"{""bytes"":74616,""name"":""Swift""}"
"{""bytes"":47387,""name"":""Rust""}"
"{""bytes"":20031,""name"":""Rust""}"
"{""bytes"":4862,""name"":""Rust""}"
"{""bytes"":27620,""name"":""Rust""}"
"{""bytes"":5805,""name"":""Rust""}"
"{""bytes"":1961,""name"":""VimL""}"
"{""bytes"":216,""name"":""Shell""}"
"{""bytes"":1810,""name"":""Shell""}"
"{""bytes"":83,""name"":""Shell""}"
"{""bytes"":12202,""name"":""VimL""}"
"{""bytes"":6144,""name"":""Ruby""}"
"{""bytes"":2606,""name"":""Shell""}"
"{""bytes"":2401,""name"":""Ruby""}"
"{""bytes"":12522,""name"":""Ruby""}"
"{""bytes"":2853,""name"":""VimL""}"
"{""bytes"":28591,""name"":""Rust""}"
"{""bytes"":18800,""name"":""Ruby""}"
"{""bytes"":21120,""name"":""Ruby""}"
"{""bytes"":25365,""name"":""Ruby""}"
"{""bytes"":1317,""name"":""Ruby""}"
"{""bytes"":5271,""name"":""Ruby""}"
"{""bytes"":7900,""name"":""Ruby""}"
"{""bytes"":2967,""name"":""Ruby""}"
"{""bytes"":628,""name"":""Ruby""}"
"{""bytes"":3240,""name"":""Ruby""}"
"{""bytes"":12575,""name"":""Ruby""}"
"{""bytes"":617,""name"":""Ruby""}"

2025-02-12 18:51:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:10 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:11 - root - INFO - SQL:
SELECT DISTINCT f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   WHERE LOWER(f.value::STRING) LIKE '%python%'
   LIMIT 100;
Results:
language_name
"{""bytes"":10659416,""name"":""Python""}"
"{""bytes"":3408,""name"":""Python""}"
"{""bytes"":5801402,""name"":""Python""}"
"{""bytes"":134964,""name"":""Python""}"
"{""bytes"":78666,""name"":""Python""}"
"{""bytes"":2003341,""name"":""Python""}"
"{""bytes"":4145,""name"":""Python""}"
"{""bytes"":142861,""name"":""Python""}"
"{""bytes"":23198,""name"":""Python""}"
"{""bytes"":1890,""name"":""Python""}"
"{""bytes"":1767,""name"":""Python""}"
"{""bytes"":45826,""name"":""Python""}"
"{""bytes"":1550100,""name"":""Python""}"
"{""bytes"":23488,""name"":""Python""}"
"{""bytes"":109343,""name"":""Python""}"
"{""bytes"":4484,""name"":""Python""}"
"{""bytes"":383647,""name"":""Python""}"
"{""bytes"":8483103,""name"":""Python""}"
"{""bytes"":1303612,""name"":""Python""}"
"{""bytes"":1410962,""name"":""Python""}"
"{""bytes"":28937,""name"":""Python""}"
"{""bytes"":2119660,""name"":""Python""}"
"{""bytes"":631283,""name"":""Python""}"
"{""bytes"":1351,""name"":""Python""}"
"{""bytes"":237199,""name"":""Python""}"
"{""bytes"":39593,""name"":""Python""}"
"{""bytes"":47670,""name"":""Python""}"
"{""bytes"":136117,""name"":""Python""}"
"{""bytes"":1489,""name"":""Python""}"
"{""bytes"":10620,""name"":""Python""}"
"{""bytes"":57917,""name"":""Python""}"
"{""bytes"":138216,""name"":""Python""}"
"{""bytes"":353313,""name"":""Python""}"
"{""bytes"":856,""name"":""Python""}"
"{""bytes"":1020026,""name"":""Python""}"
"{""bytes"":7589769,""name"":""Python""}"
"{""bytes"":6047,""name"":""Python""}"
"{""bytes"":3430,""name"":""Python""}"
"{""bytes"":56184,""name"":""Python""}"
"{""bytes"":1279905,""name"":""Python""}"
"{""bytes"":914028,""name"":""Python""}"
"{""bytes"":399110,""name"":""Python""}"
"{""bytes"":4008,""name"":""Python""}"
"{""bytes"":179269,""name"":""Python""}"
"{""bytes"":52471,""name"":""Python""}"
"{""bytes"":27826,""name"":""Python""}"
"{""bytes"":35814,""name"":""Python""}"
"{""bytes"":850,""name"":""Python""}"
"{""bytes"":8772,""name"":""Python""}"
"{""bytes"":907353,""name"":""Python""}"
"{""bytes"":64380,""name"":""Python""}"
"{""bytes"":53047,""name"":""Python""}"
"{""bytes"":1943,""name"":""Python""}"
"{""bytes"":12159,""name"":""Python""}"
"{""bytes"":77452,""name"":""Python""}"
"{""bytes"":1155,""name"":""Python""}"
"{""bytes"":46,""name"":""Python""}"
"{""bytes"":611282,""name"":""Python""}"
"{""bytes"":2190334,""name"":""Python""}"
"{""bytes"":2125883,""name"":""Python""}"
"{""bytes"":11578,""name"":""Python""}"
"{""bytes"":47805,""name"":""Python""}"
"{""bytes"":736524,""name"":""Python""}"
"{""bytes"":87482,""name"":""Python""}"
"{""bytes"":2227,""name"":""Python""}"
"{""bytes"":2125,""name"":""Python""}"
"{""bytes"":248664,""name"":""Python""}"
"{""bytes"":3969,""name"":""Python""}"
"{""bytes"":5958,""name"":""Python""}"
"{""bytes"":56356,""name"":""Python""}"
"{""bytes"":64830,""name"":""Python""}"
"{""bytes"":2088075,""name"":""Python""}"
"{""bytes"":4224,""name"":""Python""}"
"{""bytes"":25206,""name"":""Python""}"
"{""bytes"":31914,""name"":""Python""}"
"{""bytes"":1301749,""name"":""Python""}"
"{""bytes"":1009167,""name"":""Python""}"
"{""bytes"":22155,""name"":""Python""}"
"{""bytes"":57336,""name"":""Python""}"
"{""bytes"":2211352,""name"":""Python""}"
"{""bytes"":2734029,""name"":""Python""}"
"{""bytes"":2750105,""name"":""Python""}"
"{""bytes"":2690706,""name"":""Python""}"
"{""bytes"":66107,""name"":""Python""}"
"{""bytes"":3262,""name"":""Python""}"
"{""bytes"":57110,""name"":""Python""}"
"{""bytes"":106200,""name"":""Python""}"
"{""bytes"":183086,""name"":""Python""}"
"{""bytes"":455903,""name"":""Python""}"
"{""bytes"":37376,""name"":""Python""}"
"{""bytes"":5894,""name"":""Python""}"
"{""bytes"":2874,""name"":""Python""}"
"{""bytes"":210085,""name"":""Python""}"
"{""bytes"":38057,""name"":""Python""}"
"{""bytes"":2185379,""name"":""Python""}"
"{""bytes"":810017,""name"":""Python""}"
"{""bytes"":2530218,""name"":""Python""}"
"{""bytes"":236151,""name"":""Python""}"
"{""bytes"":7829,""name"":""Python""}"
"{""bytes"":1657,""name"":""Python""}"

2025-02-12 18:51:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:12 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:13 - root - INFO - SQL:
SELECT DISTINCT t."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   WHERE LOWER(f.value::STRING) LIKE '%python%'
   LIMIT 100;
Results:
repo_name
vonwenm/antler4book
metatron-app/metatron-discovery
leepc12/BigDataScript
aanastasiou/adl_ebnf
followyourheart/vowpal_wabbit
dusenberrymw/incubator-systemml
gcnonato/presto
milliman/spark
collinjackson/mojo
symek/open-gto
Ultimaker/Uranium
lucteo/conan-llvm
ubuntu5678/pimouse_run_corridor
dcaceresd/pose_publisher
shaggytwodope/clockr
Neal/oh-my-zsh
waywardmonkeys/http-builder
kudlav/dnf
sagarwaghmare69/dp
yu5611789/oh-my-zsh
anandsubbu/incubator-metron
dlyle65535/metron
nickwallen/incubator-metron
troels/nz-presto
wagnermarkd/presto
p-org/P
ForesterDev/trinitycore-m4a
zaeleus/rust
sankarh/hive
mmanski/sling
avikurapati/elasticsearch
RairServer/Talos
ToyotaResearchInstitute/task_behavior_ros
jedie/DragonPy
ting-yuan/cdd
gistic/PublicSpatialImpala
schenc3/InteractiveROSETTA
chromatic-universe/imap2017
justinleet/incubator-metron
smartnews/presto
erickt/rust
ZxlAaron/mypros
mapr/elasticsearch
petli/cobol-sharp
omr-w/Verkehrswand
ngs-mtech/drools
fernandozhu/elasticsearch
team-vigir/vigir_behaviors
iwyos13/Robosys2
valueerrorx/life-exam
iidayuki/pimouse_ros
pet1330/zoidbot
dabit-industries/Turtlebot_WorkSpace
jmirabel/hpp-doc
dylan-foundry/cassandra-dylan
printerpam/Stormy
nvl1109/car_control
pjvds/oh-my-zsh
f500/ansible-supervisord
egroeper/exscript
ubi-agni/industrial_ci
FlawaPawaCrew/dragonflow
alpaca-tc/comment_extractor
leodemoura/z3
snowshine09/google-diff-match-patch
dandycheung/distorm
Testinos/Freerdp
funpopgen/veqtl-mapper
villies/mediawiki-1.18.4
syedshabihhasan/parallellaKNN
SjorsVanGelderen/Graduation
dkstar88/lemonade-jack
AbdallaMahmoud/codeyard
fitzmarcade/IsisCoreOld
3306665/trinitycore
IllusionRom-deprecated/android_platform_tools_idea
nikparmar/google-diff-match-patch
MPavleski/google-diff-match-patch
arisoyang/google-diff-match-patch
ds0nt/or-tools
sirchristian/v8DOM.NET
SkyFireArchives/SkyFireEMU_420
chaupt/google-diff-match-patch
liangsen/google-diff-match-patch
marcotm/google-diff-match-patch
snowyu/google-diff-match-patch
mannewalis/google-diff-match-patch
anastasia-podosinnikova/lda-c-modif
smarter/uncrustify
yousafsyed/casperjs
mcmdhr/google-diff-match-patch
myran2/MassChaosCore
hnu2013wwj/XNCodes
lcw/OCCA2
ericsnowcurrently/juju
Sajid3/Cello
ZeroK-RTS/SpringRTS-Tools
AlexTMjugador/mtasa-blue
Dellware78/mtasa-blue
scottj/google-diff-match-patch

2025-02-12 18:51:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:15 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:15 - root - INFO - SQL:
SELECT DISTINCT t."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
   WHERE t."repo_name" NOT IN (
       SELECT DISTINCT t2."repo_name"
       FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
       WHERE LOWER(f.value::STRING) LIKE '%python%'
   )
   LIMIT 100;
Results:
repo_name
maryjthomas/http-advancemenpower.com-brain-peak-
tutsplus/Using-the-HTML5-Gamepad-API
brunetto/chromium-v37
urinachmias/SSVerticalSlider
Phanbook/docs
dtbell91/Quinoa
mjmeintjes/tlbtools
mitre-cyber-academy/2014-crypto-50A
TonyEtek/CCTVPlugin
ichu501/GKCustomAddressBook
cstrieby/datasciencecoursera
ephillipe/php5fpm-docker
Salutarius/pixi.js
shenxiaoxu/Unblock-Youku
domu1de/RxHack
ka8725/ruby-build
Nelrum/hello-world
odontomachus/geiger_counter
tkanai/epub-testfiles
obnauticus/graphite-rethinkdb
voxaemeron/android
nobodyishere/appframework
jessicard/remote-jobs
houseoftech/CascadableBehavior
Warhawk94/Calculator
pcssi/git-bootstrapping
alphazero/adam
cyril-sf/emberjs-tutorial
michft/gnatsd
brpocock/wayland-cl
raphink/puppet-ntp
elroyens/Mockups
tresu/turnt-happiness
10045125/android-process-button
Bespinoza10/myFirstGulpFile
Vinax89/lg-g3
fluentdesk/FRESCA
adidonato/email-datadumper
lzh1204/Text
barbarae/com.pogstone.fancyparticipantsearch
citrix-openstack-build/keystonemiddleware
fmark/limesurvey-patches
russellfunk/dtools
domainholdings/domainholdings.github.io
znxster/nagios-scripts
marcosnils/ddocker
infinispan/infinispan-odata-server
axlwar/turbulent-fibula
sandeepg3159/uni_project
claudiu-persoiu/magento2-docker-compose
daajoe/dynasp_experiments
sesceu/pimatic-bbb-docker
housegold/john
shi503/TestRepo
nodule/fbgraph
fmresourceguide/custom-functions
liyun935cn/bubble
77hz/iFLYER_PHP_Client
Lazyboy159951/Energize
dricardo1/canjs
fengnq/atrs
kimgronqvist/tern
MrAta/StackSimulator
fpco/chunked-data
PetrZak/zaka-anchor-theme
niu789/huepower
Exodia/node-spring
lotusgoddess/theeemes
canerbasaran/diceware_tr
Averbis/outlinkmeta
psymeg/test3
infracritical/ninja
ovchardmitriy/helicrane
guillaume-morin/typespeed
cschwartz/rasberrypIceCream-cam
jwadhams/json-logic
WebCode-How/starsystem
Kreations-Inc/kreations-inc.git.io
bmichotte/themes
zzuli4519/android-open-project
meulemans/PythonScripting
surfingeagle/hello-world
okde/icinga
jmeas/duly-noted.js
Hannes91/navigation-test
ericf89/halfshell
maiq-0019/maikol
tzuyang/Learn-Matlab-the-hard-way
Seven139/Android
arqex/mongo-master
wdpeng/DPUtils
lambdamatters/haskell
SYJack/gitignore
tsvetan-ganev/nativescript-vscode-snippets
gpuci/gpuci-site
irshaduetian/qemu_kvm
golittledog/dev
lutianming/xcb-rust
encorex/hui_table
02047788a/Real6410_Kernel_Sample

2025-02-12 18:51:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 15
2025-02-12 18:51:18 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:19 - root - INFO - SQL:
SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
wandboard-org/linux,drivers/rtc/rtc-ds1305.c,"/*
 * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips
 *
 * Copyright (C) 2008 David Brownell
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/bcd.h>
#include <linux/slab.h>
#include <linux/rtc.h>
#include <linux/workqueue.h>

#include <linux/spi/spi.h>
#include <linux/spi/ds1305.h>
#include <linux/module.h>


/*
 * Registers ... mask DS1305_WRITE into register address to write,
 * otherwise you're reading it.  All non-bitmask values are BCD.
 */
#define DS1305_WRITE		0x80


/* RTC date/time ... the main special cases are that we:
 *  - Need fancy ""hours"" encoding in 12hour mode
 *  - Don't rely on the ""day-of-week"" field (or tm_wday)
 *  - Are a 21st-century clock (2000 <= year < 2100)
 */
#define DS1305_RTC_LEN		7		/* bytes for RTC regs */

#define DS1305_SEC		0x00		/* register addresses */
#define DS1305_MIN		0x01
#define DS1305_HOUR		0x02
#	define DS1305_HR_12		0x40	/* set == 12 hr mode */
#	define DS1305_HR_PM		0x20	/* set == PM (12hr mode) */
#define DS1305_WDAY		0x03
#define DS1305_MDAY		0x04
#define DS1305_MON		0x05
#define DS1305_YEAR		0x06


/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).
 * DS1305_ALM_DISABLE disables a match field (some combos are bad).
 *
 * NOTE that since we don't use WDAY, we limit ourselves to alarms
 * only one day into the future (vs potentially up to a week).
 *
 * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we
 * don't currently support them.  We'd either need to do it only when
 * no alarm is pending (not the standard model), or to use the second
 * alarm (implying that this is a DS1305 not DS1306, *and* that either
 * it's wired up a second IRQ we know, or that INTCN is set)
 */
#define DS1305_ALM_LEN		4		/* bytes for ALM regs */
#define DS1305_ALM_DISABLE	0x80

#define DS1305_ALM0(r)		(0x07 + (r))	/* register addresses */
#define DS1305_ALM1(r)		(0x0b + (r))


/* three control registers */
#define DS1305_CONTROL_LEN	3		/* bytes of control regs */

#define DS1305_CONTROL		0x0f		/* register addresses */
#	define DS1305_nEOSC		0x80	/* low enables oscillator */
#	define DS1305_WP		0x40	/* write protect */
#	define DS1305_INTCN		0x04	/* clear == only int0 used */
#	define DS1306_1HZ		0x04	/* enable 1Hz output */
#	define DS1305_AEI1		0x02	/* enable ALM1 IRQ */
#	define DS1305_AEI0		0x01	/* enable ALM0 IRQ */
#define DS1305_STATUS		0x10
/* status has just AEIx bits, mirrored as IRQFx */
#define DS1305_TRICKLE		0x11
/* trickle bits are defined in <linux/spi/ds1305.h> */

/* a bunch of NVRAM */
#define DS1305_NVRAM_LEN	96		/* bytes of NVRAM */

#define DS1305_NVRAM		0x20		/* register addresses */


struct ds1305 {
	struct spi_device	*spi;
	struct rtc_device	*rtc;

	struct work_struct	work;

	unsigned long		flags;
#define FLAG_EXITING	0

	bool			hr12;
	u8			ctrl[DS1305_CONTROL_LEN];
};


/*----------------------------------------------------------------------*/

/*
 * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux
 * software (like a bootloader) which may require it.
 */

static unsigned bcd2hour(u8 bcd)
{
	if (bcd & DS1305_HR_12) {
		unsigned	hour = 0;

		bcd &= ~DS1305_HR_12;
		if (bcd & DS1305_HR_PM) {
			hour = 12;
			bcd &= ~DS1305_HR_PM;
		}
		hour += bcd2bin(bcd);
		return hour - 1;
	}
	return bcd2bin(bcd);
}

static u8 hour2bcd(bool hr12, int hour)
{
	if (hr12) {
		hour++;
		if (hour <= 12)
			return DS1305_HR_12 | bin2bcd(hour);
		hour -= 12;
		return DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);
	}
	return bin2bcd(hour);
}

/*----------------------------------------------------------------------*/

/*
 * Interface to RTC framework
 */

static int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		buf[2];
	long		err = -EINVAL;

	buf[0] = DS1305_WRITE | DS1305_CONTROL;
	buf[1] = ds1305->ctrl[0];

	if (enabled) {
		if (ds1305->ctrl[0] & DS1305_AEI0)
			goto done;
		buf[1] |= DS1305_AEI0;
	} else {
		if (!(buf[1] & DS1305_AEI0))
			goto done;
		buf[1] &= ~DS1305_AEI0;
	}
	err = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);
	if (err >= 0)
		ds1305->ctrl[0] = buf[1];
done:
	return err;

}


/*
 * Get/set of date and time is pretty normal.
 */

static int ds1305_get_time(struct device *dev, struct rtc_time *time)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		addr = DS1305_SEC;
	u8		buf[DS1305_RTC_LEN];
	int		status;

	/* Use write-then-read to get all the date/time registers
	 * since dma from stack is nonportable
	 */
	status = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),
			buf, sizeof(buf));
	if (status < 0)
		return status;

	dev_vdbg(dev, ""%s: %02x %02x %02x, %02x %02x %02x %02x\n"",
		""read"", buf[0], bu

2025-02-12 18:51:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 31
2025-02-12 18:51:22 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:22 - root - INFO - SQL:
SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE LOWER("sample_path") LIKE '%readme.md%'
   LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
mozilla/oneanddone,README.md,"oneanddone
==========

One and Done is written with [Django][django].

If you're interested in helping us out, please read through the
[project wiki][wiki] and reach out to us!

About the project:
>Contribute to Mozilla - One task at a time, One day at a time.
>
>One and Done gives users a wide variety of ways to contribute to Mozilla. 
>You can pick an easy task that only takes a few minutes - or take on a 
>bigger challenge. This includes working on manual testing, automation, bug 
>verification, mobile testing and more. Tasks are from a variety of Mozilla teams - so you 
>can get involved with Automation, Firefox OS, Desktop Firefox, Mozilla 
>websites, Services, Thunderbird and more.

[django]: http://www.djangoproject.com/
[wiki]: https://wiki.mozilla.org/QA/OneandDone
[persona]: https://developer.mozilla.org/Persona/The_implementor_s_guide/Testing
[django-browserid]: https://github.com/mozilla/django-browserid


Development Setup
-----------------
These instructions assume you have [git][], [python][], and `pip` installed. If
you don't have `pip` installed, you can install it with `easy_install pip`.


1. Start by getting the source:

   ```sh
   $ git clone git@github.com:mozilla/oneanddone.git
   $ cd oneanddone
   ```
   Note you may want to fork and clone the repo as described in the
   [github docs][git-clone] if you are doing active development.

2. Create a virtualenv for One and Done. Skip the first step if you already have
   `virtualenv` installed.

   ```sh
   $ pip install virtualenv
   $ virtualenv venv
   $ source venv/bin/activate
   ```

3. Set up PostgreSQL locally. The [PostgreSQL Installation Documentation][postgres] explains how to do this.
   

4. Create the initial empty database; make sure it's utf8:
   ``` 
   # Log into the postgres console
   # using your username and password
   $ psql -U your_username
   ```
   In the mysql console:
   ```mysql
   CREATE DATABASE oneanddone;
   \q
   ```
   To run all parts of the application, you will eventually need to populate this empty database with some example data, especially Tasks. There are many ways to populate the database. The method you choose may depend on the kind of data you want to add.
      * Use the create/edit features of your local One and Done instance. For example sign in with an administrator account and go to the `/tasks/create/` URL of the app to create Tasks.
      * Use the Django admin section of your local One and Done instance by going to the `/admin` URL -- this also relies on an admin account. You can define Task Teams here, for example.
      * Use an external tool like PgAdmin.
      * Ask another active developer for a dump of their local database.

5. Install the requirements:
   ```sh
   $ ./bin/peep.py install -r requirements.txt
   ```
   _Note_: On OS X (in particular 10.8.5, Xcode 5.1), you may encounter the following error: `clang: error: unknown argument. '-mno-fused-madd'`. Try running peep with the `ARCHFLAGS` environment variable set, as follows: `ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future ./bin/peep.py install -r requirements/requirements.txt` 

6. Establish your local settings by copying `oneanddone/settings/local.py-dist` to
   `oneanddone/settings/local.py`:

   ```sh
   $ cp oneanddone/settings/local.py-dist oneanddone/settings/local.py
   ```
   
   The default settings in this file should work fine for a local dev environment, but the file
   is commented to describe how it can be customized. For example, if you wish to use `memcached` for caching instead of local memory, 
   you can change the `CACHES` section to read:
   ```python
   CACHES = {
       'default': {
           'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
           'LOCATION': '127.0.0.1:11211',
           'TIMEOUT': 600,
       }
   }
   ```
   
7. Establish your local environment by copying `.env-dist` to `.env`:
   ```sh
   $ cp .env-dist .env
   ```

   As above, the default settings in this file should work fine for a local dev environment.

8. Initialize your database structure:
   ```sh
   $ python manage.py migrate
   ```

   Once finished, the `migrate` command should produce a message about which models have been migrated, similar to that shown below.

   ```
   Operations to perform:
     Synchronize unmigrated apps: authtoken, rest_framework, cookies, base, session_csrf
     Apply all migrations: tasks, users, sessions, admin, auth, contenttypes
   Synchronizing apps without migrations:
     Creating tables...
       Creating table authtoken_token
     Installing custom SQL...
     Installing indexes...
   Running migrations:
     Applying contenttypes.0001_initial... OK
     Applying auth.0001_initial... OK
     Applying admin.0001_initial... OK
     Applying sessions.0001_initial... OK
     Applying tasks.0001_initial... OK
     Applying users.0001_initial... OK
   ```

Users
-----

One and 

2025-02-12 18:51:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 18:51:25 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:26 - root - INFO - SQL:
SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE LOWER("content") LIKE '%copyright (c)%'
   LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
RasPlex/OpenPHT,xbmc/settings/AdvancedSettings.h,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_son

2025-02-12 18:51:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 47
2025-02-12 18:51:29 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:30 - root - INFO - SQL:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    )
    LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
willfarrell/alfred-dash-workflow,screenshots/dash.png,
JRebirth/JRebirth,org.jrebirth.af/rest/src/main/java/org/jrebirth/af/rest/service/CRUDRestService.java,"package org.jrebirth.af.rest.service;

import java.util.List;

import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.GenericType;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import org.jrebirth.af.api.wave.Wave;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CRUDRestService<O extends Object> extends AbstractRestService {

    // /** The Wave Item ALL_EXPRESSIONS. */
    // public static final WaveItem<List<O>> PLANETS = new WaveItemBase<List<O>>() {
    // };
    //
    // /** The WaveType return action name. */
    // public static final String PLANETS_LIST = ""PLANETS_LIST"";
    //
    // /** The Wave Type DO_BUILD_TABLES. */
    // public static final WaveType DO_GET_PLANETS = Builders.waveType(""GET_PLANETS"")
    // .returnAction(PLANETS_LIST)
    // .returnItem(PLANETS);

    /** The class logger. */
    private static final Logger LOGGER = LoggerFactory.getLogger(CRUDRestService.class);

    private final String crudPath = ""planets"";

    private final GenericType<O> genericSingle = new GenericType<O>() {
    };
    private final GenericType<List<O>> genericList = new GenericType<List<O>>() {
    };

    /**
     * {@inheritDoc}
     */
    @Override
    protected WebTarget getWebTarget() {
        return super.getWebTarget().path(getCRUDPath());
    }

    public String getCRUDPath() {
        return crudPath;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public boolean doCreateObject(O object, final Wave wave) {
        final Response updateResponse = getWebTarget()
                                                      .request(MediaType.APPLICATION_XML)
                                                      .post(Entity.xml(object));

        return updateResponse.getStatusInfo() == Status.OK;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public boolean doUpdateObject(O object, final Wave wave) {

        final Response updateResponse = getWebTarget()
                                                      .request(MediaType.APPLICATION_XML)
                                                      .put(Entity.xml(object));

        return updateResponse.getStatusInfo() == Status.OK;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public boolean doDeleteObject(O object, final Wave wave) {

        LOGGER.trace(""Delete Object."");

        final Response deleteResponse = getWebTarget().path(""1""/* object.id() */)
                                                      .request(MediaType.APPLICATION_XML)
                                                      .delete();

        return deleteResponse.getStatusInfo() == Status.OK;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public O doGetObject(Integer id, final Wave wave) {

        LOGGER.trace(""Get Planet."");

        final O object = getWebTarget()
                                       .request(MediaType.APPLICATION_XML)
                                       .get(genericSingle);

        return object;

    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public List<O> doGetObjects(final Wave wave) {

        LOGGER.trace(""Get Planets."");

        final List<O> objects = getWebTarget()
                                              .request(MediaType.APPLICATION_XML)
                                              .get(genericList);

        return objects;

    }

}
"
JRebirth/JRebirth,org.jrebirth.af/api/src/main/java/org/jrebirth/af/api/component/behavior/annotation/BehaviorDataFors.java,"/**
 * Get more info at : www.jrebirth.org .
 * Copyright JRebirth.org © 2011-2016
 * Contact : sebastien.bordes@jrebirth.org
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jrebirth.af.api.component.behavior.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionP

2025-02-12 18:51:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 25
2025-02-12 18:51:34 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:34 - root - INFO - SQL:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
EngoEngine/engo,demos/pong/README.md,"# Pong Demo

## What does it do?
It combines a lot of features of `engo`, to demonstrate the playing of a game of pong. 

## What are important aspects of the code?
These things are key in this demo:

* Preloading files in `DefaultScene.Preload()`;
* The `SpeedSystem`, to make sure the ball increases speed gradually;
* The `ControlSystem`, to allow moving paddles up/down with WASD and arrow keys;
* The `BallSystem`, to keep track of the location of the ball, sending messages to the `ScoreSystem` when needed;
* The `ScoreSystem`, to keep track of the score of each player;
* Creating some `Entity`s and requiring the correct `System`s. 
"
felladrin/runuo-custom-scripts,Set Skill Cap/README.md,"# Set Skill Cap

This is a plug&play script to automate the skill cap changes of your shard.

It would be easy to increase total skill cap for all players using the built-in command line ""[global set skillcap 1300 where playermobile"", but it wouldn't be easy to decrease, or change the individual skill cap foreach player. That's why I've written this script.

When a player logs in, it makes sure the player skill caps are correctly. For example: if before the restart the skill cap was 1200 and after the restart it was 700, it will remove skill points of those players who have more than 700 total skill points. The smart remove will remove first focus and meditation, as they are easy to regain. Then the less used skills (skills with less points). So in the end, players should be with their best skills intact.

I've used it on my shard when I was still evaluating what would be the best skill cap.

# Install

Just drop this script anywhere inside your Scripts folder.

# Configuration

Open the script and change the Config to your needs:

    bool Enabled = true;             // Is this system enabled?
    int IndividualSkillCap = 120;    // Cap for each skill. Default: 100.
    int TotalSkillCap = 1200;        // Cap for the sum of all skills. Default: 700.
"
TelerikAcademy/SchoolAcademy,2016-01-HTML-CSS-JavaScript/09. JavaScript-DOM/README.md,"### 08. JavaScript DOM
### [View Presentation online](https://rawgit.com/TelerikAcademy/SchoolAcademy/master/2016-01-HTML-CSS-JavaScript/09.%20JavaScript-DOM/slides/index.html)
### Table of Contents
* DOM [go to slide](https://rawgit.com/TelerikAcademy/SchoolAcademy/master/2016-01-HTML-CSS-JavaScript/09.%20JavaScript-DOM/slides/index.html#/2)
	* DOM Manipulation
* DOM Event model [go to slide](https://rawgit.com/TelerikAcademy/SchoolAcademy/master/2016-01-HTML-CSS-JavaScript/09.%20JavaScript-DOM/slides/index.html#/3)
    * Common DOM Events
"
wilsonmar/oss-perf,swagger-codegen-jmeter/README.md,"This section describes how to generate everything JMeter needs to 
emulate a lot of clients calling a REST API service defined in Swagger, 
beginning with the example at 
<a target=""_blank"" href=""http://petstore.swagger.io/""> http://petstore.swagger.io</a>

Bear in mind that we are not generating server code to respond to request from clients.
That can be quite complicated, with calls to databases, etc.

0. <a href=""#SampleSwagger""> Use swagger-codegen to create server program.</a>

0. <a href=""#GenClientSwagger""> Use swagger-codegen to create Java client program.</a>
 
0. <a href=""#UsualJMeter""> Create JMeter resources for the sample API, manually.</a>
 
0. <a href=""#SwaggerJMeter""> Edit the template to produce basic JMeter code.</a>

0. <a href=""#JMeterTricks""> Edit the template to address more risks.</a>
 
0. <a href=""#JMeterGenSvc""> Make custom JMeter generator web service.</a>

0. <a href=""#JMeterGenWebsite""> Make generator available from a website.</a>

0. <a href=""#JMeterGenRefine""> Refine generator code.</a>

0. <a href=""#SwaggerJMeterGroup""> Run several at a time.</a>

<hr />


<a id=""GenClientSwagger""> 
### Use swagger-codegen to generate Java client program.</a>

0. Open <a target=""_blank"" href=""http://editor.swagger.io/#/""> http://editor.swagger.io/#</a>. 
1. Click ""Got it"" if it's your first time at the site.

0. Copy to your invisible clipboard a Swagger-spec JSON file for your project or the sample file at
<a target=""_blank"" href=""http://petstore.swagger.io/v2/swagger.json"">http://petstore.swagger.io/v2/swagger.json</a>.

0. Click on the text page at the left of the swagger editor.
0. Select **Generate Client**, then Java to follow this tutorial (or JMeter when it's ready). 
The file should be downloaded to your browser Downloads folder.

0. Use the Mac Finder or Windows Explorer to locate the download.

0. Unzip to produce the **java-client** folder.
0. Copy the folder to your workspace folder.
0. Open the folder to examine the files.
 
 ```
 build.gradle
 gradle.properties
 pom.xml
 settings.gradle
 src
 ```

0. Double-click to drill into the src folder: src/main/java/io/swagger/client

 Notice that ASTW, the source code is not internationalized. 
 English text is 

2025-02-12 18:51:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 14
2025-02-12 18:51:38 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:39 - root - INFO - SQL:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
btrask/stronglink,deps/libressl-portable/openbsd/src/lib/libc/crypt/crypt_checkpass.3,".\"" $OpenBSD: crypt_checkpass.3,v 1.8 2015/02/24 19:22:12 tedu Exp $
.\""
.\"" Copyright (c) 2014 Ted Unangst <tedu@openbsd.org>
.\""
.\"" Permission to use, copy, modify, and distribute this software for any
.\"" purpose with or without fee is hereby granted, provided that the above
.\"" copyright notice and this permission notice appear in all copies.
.\""
.\"" THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\"" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\"" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\"" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\"" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\"" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\"" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\""
.Dd $Mdocdate: February 24 2015 $
.Dt CRYPT_CHECKPASS 3
.Os
.Sh NAME
.Nm crypt_checkpass ,
.Nm crypt_newhash
.Nd password hashing
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn crypt_checkpass ""const char *password"" ""const char *hash""
.Ft int
.Fn crypt_newhash ""const char *password"" ""const char *pref"" ""char *hash"" ""size_t hashsize""
.Sh DESCRIPTION
The
.Fn crypt_checkpass
function is provided to simplify checking a user's password.
If both the
.Fa hash
and the
.Fa password
are the empty string, authentication
is a success.
Otherwise, the
.Fa password
is hashed and compared to the provided
.Fa hash .
If the
.Fa hash
is
.Dv NULL ,
authentication will always fail, but a default
amount of work is performed to simulate the hashing operation.
A successful match will return 0.
A failure will return \-1 and set
.Xr errno 2 .
.Pp
The
.Fn crypt_newhash
function is provided to simplify the creation of new password hashes.
The provided
.Fa password
is randomly salted and hashed and stored in
.Fa hash .
The
.Fa pref
argument identifies the preferred hashing algorithm and parameters.
Possible values are:
.Bl -tag -width Ds
.It Dq bcrypt,<rounds>
The bcrypt algorithm, where the value of rounds can be between 4 and 31 and
specifies the base 2 logarithm of the number of rounds.
The special rounds value
.Sq a
automatically selects rounds based on system performance.
.El
.Sh RETURN VALUES
.Rv -std crypt_checkpass crypt_newhash
.Sh ERRORS
The
.Fn crypt_checkpass
function sets
.Va errno
to
.Er EACCESS
when authentication fails.
.Pp
The
.Fn crypt_newhash
function sets
.Va errno
to
.Er EINVAL
if
.Fa pref
is unsupported.
.Sh SEE ALSO
.Xr crypt 3 ,
.Xr login.conf 5 ,
.Xr passwd 5
.Sh HISTORY
The function
.Fn crypt_checkpass
first appeared in
.Ox 5.6 ,
and
.Fn crypt_newhash
in
.Ox 5.7 .
.Sh AUTHORS
.An Ted Unangst Aq Mt tedu@openbsd.org
"
objectarts/Dolphin,Core/Object Arts/Dolphin/MVP/Views/Common Controls/Dolphin Common Controls.pax,"| package |
package := Package name: 'Dolphin Common Controls'.
package paxVersion: 1;
	basicComment: 'Dolphin Smalltalk Common Controls.
Copyright (c) Object Arts Ltd, 1997-2003. Portions Copyright (c) CGI Group (Europe) Ltd, 1996.

This package contains MVP View wrappers for the standard Windows common controls (e.g. the Enhanced List View, Tab View, and Tree View). The other less commonly used common controls are separately packaged.'.

package basicPackageVersion: '6.2'.


package classNames
	add: #CCHITTESTINFO;
	add: #CCITEM;
	add: #IconicListAbstract;
	add: #ListView;
	add: #ListViewColumn;
	add: #LVBKIMAGE;
	add: #LVCOLUMN;
	add: #LVFINDINFO;
	add: #LVHITTESTINFO;
	add: #LVITEM;
	add: #NMCUSTOMDRAW;
	add: #NMITEMACTIVATE;
	add: #NMKEYDOWN;
	add: #NMLISTVIEW;
	add: #NMLVCUSTOMDRAW;
	add: #NMLVDISPINFO;
	add: #NMLVFINDITEM;
	add: #NMLVGETINFOTIPA;
	add: #NMLVODSTATECHANGE;
	add: #NMTREEVIEW;
	add: #NMTVCUSTOMDRAW;
	add: #NMTVDISPINFO;
	add: #NMTVGETINFOTIPA;
	add: #TabView;
	add: #TabViewXP;
	add: #TCHITTESTINFO;
	add: #TCITEM;
	add: #TreeView;
	add: #TVHITTESTINFO;
	add: #TVINSERTSTRUCT;
	add: #TVITEM;
	yourself.

package methodNames
	add: 'FolderPresenter class' -> #resource_Default_view;
	add: 'ListPresenter class' -> #resource_Enhanced_list_view;
	add: 'ListPresenter class' -> #resource_Tab_view;
	yourself.

package globalNames
	add: #ListViewConstants;
	add: #TabViewConstants;
	add: #TreeViewConstants;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\..\Base\Dolphin';
	add: '..\..\Presenters\Folder\Dolphin Folder Presenter';
	add: '..\..\Models\List\Dolphin List Models';
	add: '..\..\Presenters\List\Dolphin List Presenter';
	add: '..\..\Base\Dolphin MVP Base';
	add: '..\..\Models\Tree\Dolphin Tree Models';
	yourself).

package!

""Class Definitions""!

Object subclass: #ListViewColumn
	instanceVariableNames: 'text width alignment getTextBlock getSortValueBlock getContentsBlock name p

2025-02-12 18:51:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-02-12 18:51:41 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:41 - root - INFO - SQL:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path,content
adafruit/Adafruit-Trinket-Gemma-Bootloader,README.md,"Adafruit-Trinket-Gemma-Bootloader
=================================

This is the code for the Trinket/Gemma bootloader. There are two versions, HV (16MHz 5V) and LV (8MHz 3V), but we only use the 3V version and then clock double in the user code.

Check the Makefile for fuses, etc. Requires modifications to avrdude.conf - for advanced users only - we do not offer any support for this code!

=================================
 Please note: you cannot use the Adafruit USB VID/PID for your own non-Trinket/Gemma products or projects. Purchase a USB VID for yourself at http://www.usb.org/developers/vendor/ 
=================================

Written by Frank Zhao for Adafruit Industries, 2013!

=================================

  This code is heavily derived from USBaspLoader, but also from USBtiny, 
  with USBtinyISP's settings
 
  Copyright (c) 2013 Adafruit Industries
  All rights reserved.

  GemmaBoot is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation, either version 3 of
  the License, or (at your option) any later version.

  GemmaBoot is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with GemmaBoot. If not, see
  <http://www.gnu.org/licenses/>.
"
SuperID/super-cache,README.md,"[![NPM version][npm-image]][npm-url]
[![build status][travis-image]][travis-url]
[![Test coverage][coveralls-image]][coveralls-url]
[![Gittip][gittip-image]][gittip-url]
[![David deps][david-image]][david-url]
[![node version][node-image]][node-url]
[![npm download][download-image]][download-url]

[npm-image]: https://img.shields.io/npm/v/super-cache.svg?style=flat-square
[npm-url]: https://npmjs.org/package/super-cache
[travis-image]: https://img.shields.io/travis/SuperID/super-cache.svg?style=flat-square
[travis-url]: https://travis-ci.org/SuperID/super-cache
[coveralls-image]: https://img.shields.io/coveralls/SuperID/super-cache.svg?style=flat-square
[coveralls-url]: https://coveralls.io/r/SuperID/super-cache?branch=master
[gittip-image]: https://img.shields.io/gittip/SuperID.svg?style=flat-square
[gittip-url]: https://www.gittip.com/SuperID/
[david-image]: https://img.shields.io/david/SuperID/super-cache.svg?style=flat-square
[david-url]: https://david-dm.org/SuperID/super-cache
[node-image]: https://img.shields.io/badge/node.js-%3E=_4.0-green.svg?style=flat-square
[node-url]: http://nodejs.org/download/
[download-image]: https://img.shields.io/npm/dm/super-cache.svg?style=flat-square
[download-url]: https://npmjs.org/package/super-cache


# super-cache
Node.js缓存管理模块，支持自定义存储引擎


## 在Node.js中使用

1、安装

```bash
$ npm install super-cache --save
```

2、载入模块

```javascript
var SuperCache = require('super-cache');
var cache = new SuperCache({ttl: 60});
```


## 在浏览器中使用

可供在浏览器上使用的文件存放在`dist`目录

1、Shim方式

```html
<script src=""dist/supercache.js""></script>
<script>
var cache = new SuperCache({ttl: 60});
</script>
```

2、AMD方式

```html
<script>
require.config({
  baseUrl: './dist/'
})
require(['supercache'], function (SuperCache) {
  var cache = new SuperCache({ttl: 60});
});
</script>
```


## 入门

```javascript
var cache = new SuperCache({ttl: 60});

// 定义缓存date的数据如何获取
cache.define('date', function (name, callback) {
  callback(null, new Date().toLocaleTimeString());
});

// 取缓存，如果缓存不存在则会先调用已设置的方法来获取
cache.get('date', function (err, ret) {
  if (err) throw err;
  console.log(ret);
});
```


## 详细使用方法

1、创建`SuperCache`实例：

```javascript
var cache = new SuperCache({
  // 存储引擎
  store: new SuperCache.MemoryStore(),
  // 缓存有效期，单位：秒
  ttl: 60
});
```

2、定义获取缓存的方法：

```javascript
// 定义获取缓存key的方法
cache.define('key', function (name, callback) {
  // name是当前缓存的名称
  // 此处查询数据库，再调用callback返回数据
  // 如果data为undefined活null，则不会被缓存
  // 如果没有指定ttl则使用默认的ttl
  callback(null, data, ttl);
  // 默认data=null或undefined时也会缓存结果，如果想不缓存，指定notNull参数
  callback(null, {ttl: ttl, notNull: true});
});

// key可以是一个正则表达式，或者是一个函数（返回true/fase）
// 当查找没有匹配的字符串key时，则会依次判断正则表达式或者函数的key
// 所以此类key数量不宜过多
cache.define(/^xx/, function (name, callback) {
  callback(null, data);
});
cache.define(function (name) {
  return name.indexOf('xx') === 0;
}, function (name, callback) {
  callback(null, data);
});
```

3、查询缓存：

```javascript
// 获取缓存，如果缓存不存在则先执行预设的方法取得缓存再返回
cache.get('key', function (err, data) {
  // 如果出错，err为出错信息
  // data为缓存数据
  console.log(data);
});
```

4、查询临时的缓存：

```javascript
// 获取缓存，如果缓存不存在则使用当前设置的方法取得缓存再返回
cache.get('key', function (name, callback) {
  // name是当前缓存的名称
  // 此处查询数据库，在调用callback返回数据
  // 如果data为undefined活null，则不会被缓存
  // 如果没有指定ttl则使用默认的ttl
  callback(null, data, ttl);
}, function (err, 

2025-02-12 18:51:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:51:42 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:43 - root - INFO - SQL:
SELECT DISTINCT sc."sample_repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" NOT IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
    )
    LIMIT 100;
Results:
sample_repo_name
gurock/testrail-api
impresspages/ImpressPages
mirror/chromium
bitemyapp/dotfiles
jagregory/docu
tymat/FilipinoCoin
graemeg/fpGUI
KDE/marble
keeferrourke/la-capitaine-icon-theme
panda3d/panda3d
pgundlach/LuaTeX
chenshuo/linux-study
ngorogiannis/cyclist
datal-org/datal
wandboard-org/linux
rija/docker-nginx-fpm-caches-wordpress
dotse/zonemaster-engine
rstudio/shiny-server
blazux/Live
KTXSoftware/KodeStudio
bytemine/lcdproc
ComputationalRadiationPhysics/picongpu
rswier/swieros
ProjectPolyester/LightDM-Material-Android
endlessm/linux-meson
andikleen/linux-misc
cvxopt/cvxopt
domokit/mojo
ccrisan/samba
smorks/smtp4dev
wildfly/quickstart
lockrecv/got
LitleCarl/FaceProGame
mreinstein/peerjs-lobby
flar2/shamu
magenta-aps/mox
GoogleCloudPlatform/DataflowJavaSDK
aboutsip/pkts
txt2tags/txt2tags
brendanhay/gogol
sweeneychris/TheiaSfM
reds-heig/logisim-evolution
high-performance-spark/high-performance-spark-examples
Abastro/SciAPI
beagleboard/buildroot
railwaycat/emacs-mac-port
OpenVPN/openvpn-gui
ajaxorg/node-github
openstack/monasca-agent
voron00/linux
ec-europa/joinup-dev
lscgzwd/WeixinShop
alchemy-fr/Phraseanet
Wanyor/openwrt-rtk
lwfinger/rtl8188eu
multipath-tcp/mptcp
pear/pear-core
mathjax/MathJax-dev
AjithPanneerselvam/AjithPanneerselvam.github.io
flaming0/libdf3d
ovh/tatcli
gamaral/rpi-buildroot
PacificBiosciences/pypeFLOW
Calinou/godot-snippets
rongcloud/demo-project-eclipse
AsociacionDrupalES/DrupalCampEs
google/libfuzzer-bot
gzsll/SupportDownloadManager
tecnickcom/tcexam
CaliOpen/caliopen-dev
GStreamer/gst-plugins-bad
sealuzh/PersonalAnalytics
ahernp/django-feedreader
erikdoe/ccmenu
wangzzu/wangzzu.github.com
livecode/livecode-ide
reactjs-cn/react-docs
slvn/android-aosp-mms
appcelerator/titanium_mobile
openpreserve/jhove
dealii/dealii
srsLTE/srsLTE
rockchip-linux/kernel
marcdegraef/EMsoft
Stuk/jszip
roboterclubaachen/xpcc
naelstrof/slop
TechEmpower/FrameworkBenchmarks
KDE/plasma-desktop
riscv/riscv-go
paulrosen/abcjs
cybereality/Perception
juju/juju-gui
presscustomizr/customizr
BurntSushi/nflgame
SciRuby/nmatrix
ibex-team/ibex-robotics
dCache/nfs4j
NICTA/cogent
CheeBam/Gallery

2025-02-12 18:51:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:51:45 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:45 - root - INFO - SQL:
SELECT COUNT(*) AS "total_files"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    );
Results:
total_files
12731

2025-02-12 18:51:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:51:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:51:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:51:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:51:47 - snowflake.connector.connection - INFO - closed
2025-02-12 18:51:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:51:47 - root - INFO - SQL:
SELECT COUNT(*) AS "matching_files"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      );
Results:
matching_files
12

2025-02-12 18:51:47 - root - INFO - itercount: 0
2025-02-12 18:51:47 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
Tables and columns relevant to the task:

**LANGUAGES table**:
- `"repo_name"`: Used to identify repositories.
- `"language"` (VARIANT): Contains programming languages used in each repository.

  Potential usage:
  - Determine repositories that use programming languages whose names include "python" (case-insensitive).
  - Identify repositories that do not use any programming language with "python" in the name.

**SAMPLE_CONTENTS table**:
- `"sample_repo_name"`: Repository name; links files to repositories.
- `"sample_path"`: Path of the file within the repository.
- `"content"`: Content of the file.

  Potential usage:
  - Find files in the relevant repositories.
  - Identify files whose paths include "readme.md" (case-insensitive).
  - Identify files whose contents contain the phrase "Copyright (c)" (case-insensitive).

**Conditions that may be used**:
- Exclude repositories that use any programming language with "python" in the name.
- Include files where `"sample_path"` includes "readme.md" (case-insensitive).
- Include files where `"content"` contains "Copyright (c)" (case-insensitive).

---

**SQL Queries**:

1. **Retrieve sample repositories and their languages**:

   ```sql
   SELECT "repo_name", "language"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
   LIMIT 100;
   ```

2. **Extract programming language names from the VARIANT field**:

   ```sql
   SELECT "repo_name", f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   LIMIT 100;
   ```

3. **List distinct programming language names**:

   ```sql
   SELECT DISTINCT f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   LIMIT 100;
   ```

4. **Find programming languages that include "python"**:

   ```sql
   SELECT DISTINCT f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   WHERE LOWER(f.value::STRING) LIKE '%python%'
   LIMIT 100;
   ```

5. **Identify repositories that use programming languages including "python"**:

   ```sql
   SELECT DISTINCT t."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   WHERE LOWER(f.value::STRING) LIKE '%python%'
   LIMIT 100;
   ```

6. **Retrieve repositories that do not use any programming language including "python"**:

   ```sql
   SELECT DISTINCT t."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
   WHERE t."repo_name" NOT IN (
       SELECT DISTINCT t2."repo_name"
       FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
       WHERE LOWER(f.value::STRING) LIKE '%python%'
   )
   LIMIT 100;
   ```

7. **Get sample files and their paths**:

   ```sql
   SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   LIMIT 100;
   ```

8. **Find files where the path includes "readme.md"**:

   ```sql
   SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE LOWER("sample_path") LIKE '%readme.md%'
   LIMIT 100;
   ```

9. **Find files where the content includes "Copyright (c)"**:

   ```sql
   SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE LOWER("content") LIKE '%copyright (c)%'
   LIMIT 100;
   ```

10. **Retrieve files in repositories not using "python" languages**:

    ```sql
    SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    )
    LIMIT 100;
    ```

11. **Find files in non-"python" repositories where path includes "readme.md"**:

    ```sql
    SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
    ```

12. **Find files in non-"python" repositories where content includes "Copyright (c)"**:

    ```sql
    SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
    ```

13. **Find files in non-"python" repositories where path includes "readme.md" and content includes "Copyright (c)"**:

    ```sql
    SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
    ```

14. **List repositories without any language data (possible non-programming repositories)**:

    ```sql
    SELECT DISTINCT sc."sample_repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" NOT IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
    )
    LIMIT 100;
    ```

15. **Get total number of files in non-"python" repositories**:

    ```sql
    SELECT COUNT(*) AS "total_files"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    );
    ```

16. **Get total number of matching files (path includes "readme.md" and content includes "Copyright (c)") in non-"python" repositories**:

    ```sql
    SELECT COUNT(*) AS "matching_files"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      );
    ```

---

These queries help in understanding the data and preparing to calculate the required proportion.Query:
SELECT "repo_name", "language"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES
   LIMIT 100;
Answer:
repo_name,language
konrad/READemption,[]
Duobe/TheFirstOne,[]
andyyardley/SecureO,[]
PGower/Timetabler2SQL,[]
brykmoore/SeniorProject,[]
mpusz/SimpleWorkarounds,[]
lily06280425/lian-,[]
seanarooni/gitignore,[]
mashurex/arduino-tuts,[]
Natashka89/ironpython_training2,[]
Chookahead/Locally-Created-Repo,[]
twiess/hello-world,[]
jasonzissman/Algorithms,[]
pl85s/programming-for_testers,[]
maicki/GDUpload,[]
cyclejs/base,[]
renwei360/-,[]
pedazo/ogo,[]
jsheng258/helloworld,[]
web1o1/pixi.js,[]
birthcat/HelloWorld,[]
webner/nginx-proxy,[]
s3r4ph/PySplice,[]
makerspacelt/car-usb-charger,[]
hioxxo/radiojavandownloader,[]
alanmcna/heat_templates,[]
dbhys/com.dbhys,[]
Ivshti/awesome-hacking-spots,[]
du5t/char-custom,[]
slimchrisp/bootstrap_cms,[]
skeeet/iOSAppReverseEngineering,[]
ajsondev/fullcalendar,[]
zen-np/np-log,[]
kragen/zxing,[]
Davidmeng78/PPRE,[]
SebastienGaspar/Gecko,[]
maquanyi/crew,[]
marcelobarretto/docker-tomcat-mysql,[]
delgadom/lptutorial,[]
zcrutherford/zhangchao,[]
sampanelaid/panelteam,[]
NodeTutorials/express.js-intro,[]
hubertod/MarketWatcher,[]
GameDevBlizzardThread/game,[]
RagnarDanneskjold/bitbot,[]
deependragit/testing,[]
kennethormandy/default,[]
renqiaoyang/www,[]
pjcnunes/ADS2017,[]
drewhammond/idea-gulp,[]
basilajith/python,[]
pedro/active_merchant,[]
baiyanghese/angular.js,[]
kemalacar/mediaplayer_plugin,[]
ridesoftech/videoconf,[]
airate/docker-base,[]
Galves96/CP,[]
ibanezz/GitDemo,[]
vpayno/md-api-perl,[]
AnujaK/chrome-dropbox-oauth,[]
tcalmant/nao-iotdays-2015,[]
adyates/steamalytics,[]
Remnaut/DungeonCrawler,[]
FireFlyDreamWorks/aladino,[]
active-interest/reverse-proxy-comment-ip-fix,[]
pataquets/docker-supervisor,[]
Sameer-Shukla/FirstRepo,[]
gloryministry/.com,[]
iicray/Rails-102,[]
mrblabs/vitwitter.net,[]
mardann/randomNumGeneratorNonReacuring,[]
PaperHat/programmer-training,[]
eahrold/Chainables,[]
substruct/mohawk,[]
Chromatophore/MDS,[]
dazzyd/firefox-searchplugins,[]
lutaf/auto-complete,[]
dayler/nuevatel.common,[]
nwgat/nodejs-rtorrent-installer,[]
collabx/LegalComponents,[]
4everdunn/phonefix,[]
eos-org/autoload,[]
devendradhanal/T,[]
metavida/Multi-Firefox-Launcher,[]
yjchou/polar,[]
andreaslindeboom/padlock,[]
mewiteor/algorithm,[]
refactorthis/acute.js,[]
inshideru/datasciencecoursera,[]
sysb-io/sysbio-gallery,[]
manutddidaka/Moments-in-Space,[]
mako-taco/react-components,[]
ajaycode/docker-cheat-sheet,[]
icyflame/install-from-source-tmux-2-0,[]
hcp4715/AnalyzingExpData,[]
nishant-jain-94/QuizRT,[]
therebelrobot/hublog,[]
cheaboar/my,[]
zarathustra1/Tom-Shelling,[]
bobalazek/open-model,[]
Query:
SELECT "repo_name", f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,language_name
yyuu/antismoker,"{""bytes"":24665,""name"":""Ruby""}"
yyuu/antismoker,"{""bytes"":164,""name"":""Shell""}"
itakurara/gem_mamezo,"{""bytes"":1994,""name"":""Ruby""}"
itakurara/gem_mamezo,"{""bytes"":115,""name"":""Shell""}"
klriutsa/e_stat,"{""bytes"":3585,""name"":""Ruby""}"
klriutsa/e_stat,"{""bytes"":131,""name"":""Shell""}"
rmcfadzean/jekyll-codepen,"{""bytes"":5232,""name"":""Ruby""}"
rmcfadzean/jekyll-codepen,"{""bytes"":420,""name"":""Shell""}"
kitlangton/pessimist,"{""bytes"":2329,""name"":""Ruby""}"
kitlangton/pessimist,"{""bytes"":115,""name"":""Shell""}"
bjjb/ordu,"{""bytes"":1715,""name"":""Ruby""}"
bjjb/ordu,"{""bytes"":131,""name"":""Shell""}"
sajjadROR/extra_attributes_for_all_migration,"{""bytes"":2578,""name"":""Ruby""}"
sajjadROR/extra_attributes_for_all_migration,"{""bytes"":115,""name"":""Shell""}"
space-pirates-llc/quill-builder,"{""bytes"":14983,""name"":""Ruby""}"
space-pirates-llc/quill-builder,"{""bytes"":131,""name"":""Shell""}"
jt-platterz/slack_messenger,"{""bytes"":7726,""name"":""Ruby""}"
jt-platterz/slack_messenger,"{""bytes"":131,""name"":""Shell""}"
aquinofb/checkout,"{""bytes"":13565,""name"":""Ruby""}"
aquinofb/checkout,"{""bytes"":131,""name"":""Shell""}"
esender/ffaker,"{""bytes"":301045,""name"":""Ruby""}"
esender/ffaker,"{""bytes"":60,""name"":""Shell""}"
harshniketseta/marvels,"{""bytes"":2172,""name"":""Ruby""}"
harshniketseta/marvels,"{""bytes"":115,""name"":""Shell""}"
catalin-enache/ntk_dockerfile,"{""bytes"":192,""name"":""Ruby""}"
catalin-enache/ntk_dockerfile,"{""bytes"":182,""name"":""Shell""}"
chef/knife-linode,"{""bytes"":40951,""name"":""Ruby""}"
chef/knife-linode,"{""bytes"":455,""name"":""Shell""}"
qilab-/vagrant-cdh4.5,"{""bytes"":662,""name"":""Ruby""}"
qilab-/vagrant-cdh4.5,"{""bytes"":1229,""name"":""Shell""}"
carney520/crawler,"{""bytes"":53286,""name"":""Ruby""}"
carney520/crawler,"{""bytes"":115,""name"":""Shell""}"
alu0100789355/prct09,"{""bytes"":21138,""name"":""Ruby""}"
alu0100789355/prct09,"{""bytes"":115,""name"":""Shell""}"
ConPaaS-team/conpaas-docker-images,"{""bytes"":412,""name"":""Ruby""}"
ConPaaS-team/conpaas-docker-images,"{""bytes"":5403,""name"":""Shell""}"
dreamingechoes/bootstrap_sb_admin_base_v2,"{""bytes"":1858,""name"":""Ruby""}"
dreamingechoes/bootstrap_sb_admin_base_v2,"{""bytes"":115,""name"":""Shell""}"
wickles/homebrew-cask,"{""bytes"":2140657,""name"":""Ruby""}"
wickles/homebrew-cask,"{""bytes"":56584,""name"":""Shell""}"
pressable/chef-hipchat-cli,"{""bytes"":5169,""name"":""Ruby""}"
pressable/chef-hipchat-cli,"{""bytes"":2128,""name"":""Shell""}"
gnawhleinad/youtube,"{""bytes"":29,""name"":""Ruby""}"
gnawhleinad/youtube,"{""bytes"":1171,""name"":""Shell""}"
se3000/ruby-eth,"{""bytes"":69565,""name"":""Ruby""}"
se3000/ruby-eth,"{""bytes"":131,""name"":""Shell""}"
jayceeb/remote_syslog2-cookbook,"{""bytes"":3392,""name"":""Ruby""}"
jayceeb/remote_syslog2-cookbook,"{""bytes"":2109,""name"":""Shell""}"
cosmo0920/ansible-playbook-for-keter-deploy,"{""bytes"":3250,""name"":""Ruby""}"
cosmo0920/ansible-playbook-for-keter-deploy,"{""bytes"":316,""name"":""Shell""}"
egjiri/database_syncer,"{""bytes"":3929,""name"":""Ruby""}"
egjiri/database_syncer,"{""bytes"":115,""name"":""Shell""}"
can-explore/geojson_model,"{""bytes"":8272,""name"":""Ruby""}"
can-explore/geojson_model,"{""bytes"":115,""name"":""Shell""}"
yast/yast-storage-ng,"{""bytes"":5753311,""name"":""Ruby""}"
yast/yast-storage-ng,"{""bytes"":2203,""name"":""Shell""}"
alu0100611281/LPP_32_prct09,"{""bytes"":10513,""name"":""Ruby""}"
alu0100611281/LPP_32_prct09,"{""bytes"":115,""name"":""Shell""}"
obsidian-btc/http-commands,"{""bytes"":22977,""name"":""Ruby""}"
obsidian-btc/http-commands,"{""bytes"":2912,""name"":""Shell""}"
guttertec/vagrant-template,"{""bytes"":124,""name"":""Ruby""}"
guttertec/vagrant-template,"{""bytes"":0,""name"":""Shell""}"
altV/interleave,"{""bytes"":2176,""name"":""Ruby""}"
altV/interleave,"{""bytes"":131,""name"":""Shell""}"
phoet/memo-it,"{""bytes"":9556,""name"":""Ruby""}"
phoet/memo-it,"{""bytes"":131,""name"":""Shell""}"
dimko/carrierwave-jpegtran,"{""bytes"":3917,""name"":""Ruby""}"
dimko/carrierwave-jpegtran,"{""bytes"":66,""name"":""Shell""}"
kuldeepaggarwal/arel_extension,"{""bytes"":6601,""name"":""Ruby""}"
kuldeepaggarwal/arel_extension,"{""bytes"":115,""name"":""Shell""}"
nalabjp/mysql_import,"{""bytes"":21440,""name"":""Ruby""}"
nalabjp/mysql_import,"{""bytes"":290,""name"":""Shell""}"
marcojonker/test,"{""bytes"":156103,""name"":""Ruby""}"
marcojonker/test,"{""bytes"":1517,""name"":""Shell""}"
akuzko/parascope,"{""bytes"":24482,""name"":""Ruby""}"
akuzko/parascope,"{""bytes"":131,""name"":""Shell""}"
DivineDominion/zettel-outline-rendering,"{""bytes"":20436,""name"":""Ruby""}"
DivineDominion/zettel-outline-rendering,"{""bytes"":131,""name"":""Shell""}"
cyphactor/octopusci,"{""bytes"":84848,""name"":""Ruby""}"
cyphactor/octopusci,"{""bytes"":915,""name"":""Shell""}"
bogdan14x/d3raw,"{""bytes"":11054,""name"":""Ru
Query:
SELECT DISTINCT f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   LIMIT 100;
Answer:
language_name
"{""bytes"":6175,""name"":""Shell""}"
"{""bytes"":3279,""name"":""Ruby""}"
"{""bytes"":751,""name"":""Shell""}"
"{""bytes"":4295,""name"":""Ruby""}"
"{""bytes"":803,""name"":""Shell""}"
"{""bytes"":111,""name"":""Shell""}"
"{""bytes"":564,""name"":""Shell""}"
"{""bytes"":59881,""name"":""Shell""}"
"{""bytes"":3515,""name"":""Ruby""}"
"{""bytes"":1024,""name"":""Ruby""}"
"{""bytes"":6076,""name"":""Shell""}"
"{""bytes"":2373,""name"":""Ruby""}"
"{""bytes"":26521,""name"":""Ruby""}"
"{""bytes"":48537,""name"":""Ruby""}"
"{""bytes"":62701,""name"":""Ruby""}"
"{""bytes"":1606,""name"":""Ruby""}"
"{""bytes"":1762716,""name"":""Ruby""}"
"{""bytes"":14090,""name"":""Ruby""}"
"{""bytes"":51738,""name"":""Ruby""}"
"{""bytes"":8873,""name"":""Shell""}"
"{""bytes"":18410,""name"":""Ruby""}"
"{""bytes"":29813,""name"":""Ruby""}"
"{""bytes"":19709,""name"":""Ruby""}"
"{""bytes"":14196,""name"":""Ruby""}"
"{""bytes"":7156,""name"":""Ruby""}"
"{""bytes"":29192,""name"":""Shell""}"
"{""bytes"":5066,""name"":""VimL""}"
"{""bytes"":354793,""name"":""Rust""}"
"{""bytes"":13371,""name"":""Swift""}"
"{""bytes"":173762,""name"":""Rust""}"
"{""bytes"":60356,""name"":""Rust""}"
"{""bytes"":13687,""name"":""Python""}"
"{""bytes"":15166,""name"":""Rust""}"
"{""bytes"":7742,""name"":""Rust""}"
"{""bytes"":12297,""name"":""VimL""}"
"{""bytes"":9753,""name"":""Xtend""}"
"{""bytes"":6819,""name"":""Makefile""}"
"{""bytes"":74,""name"":""Shell""}"
"{""bytes"":16649,""name"":""Ruby""}"
"{""bytes"":13958,""name"":""Ruby""}"
"{""bytes"":39334,""name"":""Ruby""}"
"{""bytes"":8180,""name"":""Shell""}"
"{""bytes"":8290,""name"":""Ruby""}"
"{""bytes"":5958,""name"":""Shell""}"
"{""bytes"":1788,""name"":""Ruby""}"
"{""bytes"":1684,""name"":""Ruby""}"
"{""bytes"":331,""name"":""Ruby""}"
"{""bytes"":1438,""name"":""XSLT""}"
"{""bytes"":12038,""name"":""Thrift""}"
"{""bytes"":16137,""name"":""Rust""}"
"{""bytes"":1280,""name"":""Shell""}"
"{""bytes"":5232,""name"":""Ruby""}"
"{""bytes"":303099,""name"":""Ruby""}"
"{""bytes"":247,""name"":""Shell""}"
"{""bytes"":1095,""name"":""Shell""}"
"{""bytes"":1171,""name"":""Shell""}"
"{""bytes"":16497,""name"":""Ruby""}"
"{""bytes"":17347,""name"":""Ruby""}"
"{""bytes"":2468,""name"":""Shell""}"
"{""bytes"":2502,""name"":""Ruby""}"
"{""bytes"":2751,""name"":""Shell""}"
"{""bytes"":23697,""name"":""Ruby""}"
"{""bytes"":25240,""name"":""Vim script""}"
"{""bytes"":15379,""name"":""Swift""}"
"{""bytes"":462,""name"":""Ruby""}"
"{""bytes"":14038,""name"":""Swift""}"
"{""bytes"":9083,""name"":""Swift""}"
"{""bytes"":2959,""name"":""Shell""}"
"{""bytes"":6337,""name"":""Ruby""}"
"{""bytes"":360388,""name"":""Rust""}"
"{""bytes"":65927,""name"":""Rust""}"
"{""bytes"":1080,""name"":""Shell""}"
"{""bytes"":74616,""name"":""Swift""}"
"{""bytes"":47387,""name"":""Rust""}"
"{""bytes"":20031,""name"":""Rust""}"
"{""bytes"":4862,""name"":""Rust""}"
"{""bytes"":27620,""name"":""Rust""}"
"{""bytes"":5805,""name"":""Rust""}"
"{""bytes"":1961,""name"":""VimL""}"
"{""bytes"":216,""name"":""Shell""}"
"{""bytes"":1810,""name"":""Shell""}"
"{""bytes"":83,""name"":""Shell""}"
"{""bytes"":12202,""name"":""VimL""}"
"{""bytes"":6144,""name"":""Ruby""}"
"{""bytes"":2606,""name"":""Shell""}"
"{""bytes"":2401,""name"":""Ruby""}"
"{""bytes"":12522,""name"":""Ruby""}"
"{""bytes"":2853,""name"":""VimL""}"
"{""bytes"":28591,""name"":""Rust""}"
"{""bytes"":18800,""name"":""Ruby""}"
"{""bytes"":21120,""name"":""Ruby""}"
"{""bytes"":25365,""name"":""Ruby""}"
"{""bytes"":1317,""name"":""Ruby""}"
"{""bytes"":5271,""name"":""Ruby""}"
"{""bytes"":7900,""name"":""Ruby""}"
"{""bytes"":2967,""name"":""Ruby""}"
"{""bytes"":628,""name"":""Ruby""}"
"{""bytes"":3240,""name"":""Ruby""}"
"{""bytes"":12575,""name"":""Ruby""}"
"{""bytes"":617,""name"":""Ruby""}"
Query:
SELECT DISTINCT f.value::STRING AS "language_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   WHERE LOWER(f.value::STRING) LIKE '%python%'
   LIMIT 100;
Answer:
language_name
"{""bytes"":10659416,""name"":""Python""}"
"{""bytes"":3408,""name"":""Python""}"
"{""bytes"":5801402,""name"":""Python""}"
"{""bytes"":134964,""name"":""Python""}"
"{""bytes"":78666,""name"":""Python""}"
"{""bytes"":2003341,""name"":""Python""}"
"{""bytes"":4145,""name"":""Python""}"
"{""bytes"":142861,""name"":""Python""}"
"{""bytes"":23198,""name"":""Python""}"
"{""bytes"":1890,""name"":""Python""}"
"{""bytes"":1767,""name"":""Python""}"
"{""bytes"":45826,""name"":""Python""}"
"{""bytes"":1550100,""name"":""Python""}"
"{""bytes"":23488,""name"":""Python""}"
"{""bytes"":109343,""name"":""Python""}"
"{""bytes"":4484,""name"":""Python""}"
"{""bytes"":383647,""name"":""Python""}"
"{""bytes"":8483103,""name"":""Python""}"
"{""bytes"":1303612,""name"":""Python""}"
"{""bytes"":1410962,""name"":""Python""}"
"{""bytes"":28937,""name"":""Python""}"
"{""bytes"":2119660,""name"":""Python""}"
"{""bytes"":631283,""name"":""Python""}"
"{""bytes"":1351,""name"":""Python""}"
"{""bytes"":237199,""name"":""Python""}"
"{""bytes"":39593,""name"":""Python""}"
"{""bytes"":47670,""name"":""Python""}"
"{""bytes"":136117,""name"":""Python""}"
"{""bytes"":1489,""name"":""Python""}"
"{""bytes"":10620,""name"":""Python""}"
"{""bytes"":57917,""name"":""Python""}"
"{""bytes"":138216,""name"":""Python""}"
"{""bytes"":353313,""name"":""Python""}"
"{""bytes"":856,""name"":""Python""}"
"{""bytes"":1020026,""name"":""Python""}"
"{""bytes"":7589769,""name"":""Python""}"
"{""bytes"":6047,""name"":""Python""}"
"{""bytes"":3430,""name"":""Python""}"
"{""bytes"":56184,""name"":""Python""}"
"{""bytes"":1279905,""name"":""Python""}"
"{""bytes"":914028,""name"":""Python""}"
"{""bytes"":399110,""name"":""Python""}"
"{""bytes"":4008,""name"":""Python""}"
"{""bytes"":179269,""name"":""Python""}"
"{""bytes"":52471,""name"":""Python""}"
"{""bytes"":27826,""name"":""Python""}"
"{""bytes"":35814,""name"":""Python""}"
"{""bytes"":850,""name"":""Python""}"
"{""bytes"":8772,""name"":""Python""}"
"{""bytes"":907353,""name"":""Python""}"
"{""bytes"":64380,""name"":""Python""}"
"{""bytes"":53047,""name"":""Python""}"
"{""bytes"":1943,""name"":""Python""}"
"{""bytes"":12159,""name"":""Python""}"
"{""bytes"":77452,""name"":""Python""}"
"{""bytes"":1155,""name"":""Python""}"
"{""bytes"":46,""name"":""Python""}"
"{""bytes"":611282,""name"":""Python""}"
"{""bytes"":2190334,""name"":""Python""}"
"{""bytes"":2125883,""name"":""Python""}"
"{""bytes"":11578,""name"":""Python""}"
"{""bytes"":47805,""name"":""Python""}"
"{""bytes"":736524,""name"":""Python""}"
"{""bytes"":87482,""name"":""Python""}"
"{""bytes"":2227,""name"":""Python""}"
"{""bytes"":2125,""name"":""Python""}"
"{""bytes"":248664,""name"":""Python""}"
"{""bytes"":3969,""name"":""Python""}"
"{""bytes"":5958,""name"":""Python""}"
"{""bytes"":56356,""name"":""Python""}"
"{""bytes"":64830,""name"":""Python""}"
"{""bytes"":2088075,""name"":""Python""}"
"{""bytes"":4224,""name"":""Python""}"
"{""bytes"":25206,""name"":""Python""}"
"{""bytes"":31914,""name"":""Python""}"
"{""bytes"":1301749,""name"":""Python""}"
"{""bytes"":1009167,""name"":""Python""}"
"{""bytes"":22155,""name"":""Python""}"
"{""bytes"":57336,""name"":""Python""}"
"{""bytes"":2211352,""name"":""Python""}"
"{""bytes"":2734029,""name"":""Python""}"
"{""bytes"":2750105,""name"":""Python""}"
"{""bytes"":2690706,""name"":""Python""}"
"{""bytes"":66107,""name"":""Python""}"
"{""bytes"":3262,""name"":""Python""}"
"{""bytes"":57110,""name"":""Python""}"
"{""bytes"":106200,""name"":""Python""}"
"{""bytes"":183086,""name"":""Python""}"
"{""bytes"":455903,""name"":""Python""}"
"{""bytes"":37376,""name"":""Python""}"
"{""bytes"":5894,""name"":""Python""}"
"{""bytes"":2874,""name"":""Python""}"
"{""bytes"":210085,""name"":""Python""}"
"{""bytes"":38057,""name"":""Python""}"
"{""bytes"":2185379,""name"":""Python""}"
"{""bytes"":810017,""name"":""Python""}"
"{""bytes"":2530218,""name"":""Python""}"
"{""bytes"":236151,""name"":""Python""}"
"{""bytes"":7829,""name"":""Python""}"
"{""bytes"":1657,""name"":""Python""}"
Query:
SELECT DISTINCT t."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t, LATERAL FLATTEN(input => t."language") f
   WHERE LOWER(f.value::STRING) LIKE '%python%'
   LIMIT 100;
Answer:
repo_name
vonwenm/antler4book
metatron-app/metatron-discovery
leepc12/BigDataScript
aanastasiou/adl_ebnf
followyourheart/vowpal_wabbit
dusenberrymw/incubator-systemml
gcnonato/presto
milliman/spark
collinjackson/mojo
symek/open-gto
Ultimaker/Uranium
lucteo/conan-llvm
ubuntu5678/pimouse_run_corridor
dcaceresd/pose_publisher
shaggytwodope/clockr
Neal/oh-my-zsh
waywardmonkeys/http-builder
kudlav/dnf
sagarwaghmare69/dp
yu5611789/oh-my-zsh
anandsubbu/incubator-metron
dlyle65535/metron
nickwallen/incubator-metron
troels/nz-presto
wagnermarkd/presto
p-org/P
ForesterDev/trinitycore-m4a
zaeleus/rust
sankarh/hive
mmanski/sling
avikurapati/elasticsearch
RairServer/Talos
ToyotaResearchInstitute/task_behavior_ros
jedie/DragonPy
ting-yuan/cdd
gistic/PublicSpatialImpala
schenc3/InteractiveROSETTA
chromatic-universe/imap2017
justinleet/incubator-metron
smartnews/presto
erickt/rust
ZxlAaron/mypros
mapr/elasticsearch
petli/cobol-sharp
omr-w/Verkehrswand
ngs-mtech/drools
fernandozhu/elasticsearch
team-vigir/vigir_behaviors
iwyos13/Robosys2
valueerrorx/life-exam
iidayuki/pimouse_ros
pet1330/zoidbot
dabit-industries/Turtlebot_WorkSpace
jmirabel/hpp-doc
dylan-foundry/cassandra-dylan
printerpam/Stormy
nvl1109/car_control
pjvds/oh-my-zsh
f500/ansible-supervisord
egroeper/exscript
ubi-agni/industrial_ci
FlawaPawaCrew/dragonflow
alpaca-tc/comment_extractor
leodemoura/z3
snowshine09/google-diff-match-patch
dandycheung/distorm
Testinos/Freerdp
funpopgen/veqtl-mapper
villies/mediawiki-1.18.4
syedshabihhasan/parallellaKNN
SjorsVanGelderen/Graduation
dkstar88/lemonade-jack
AbdallaMahmoud/codeyard
fitzmarcade/IsisCoreOld
3306665/trinitycore
IllusionRom-deprecated/android_platform_tools_idea
nikparmar/google-diff-match-patch
MPavleski/google-diff-match-patch
arisoyang/google-diff-match-patch
ds0nt/or-tools
sirchristian/v8DOM.NET
SkyFireArchives/SkyFireEMU_420
chaupt/google-diff-match-patch
liangsen/google-diff-match-patch
marcotm/google-diff-match-patch
snowyu/google-diff-match-patch
mannewalis/google-diff-match-patch
anastasia-podosinnikova/lda-c-modif
smarter/uncrustify
yousafsyed/casperjs
mcmdhr/google-diff-match-patch
myran2/MassChaosCore
hnu2013wwj/XNCodes
lcw/OCCA2
ericsnowcurrently/juju
Sajid3/Cello
ZeroK-RTS/SpringRTS-Tools
AlexTMjugador/mtasa-blue
Dellware78/mtasa-blue
scottj/google-diff-match-patch
Query:
SELECT DISTINCT t."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
   WHERE t."repo_name" NOT IN (
       SELECT DISTINCT t2."repo_name"
       FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
       WHERE LOWER(f.value::STRING) LIKE '%python%'
   )
   LIMIT 100;
Answer:
repo_name
maryjthomas/http-advancemenpower.com-brain-peak-
tutsplus/Using-the-HTML5-Gamepad-API
brunetto/chromium-v37
urinachmias/SSVerticalSlider
Phanbook/docs
dtbell91/Quinoa
mjmeintjes/tlbtools
mitre-cyber-academy/2014-crypto-50A
TonyEtek/CCTVPlugin
ichu501/GKCustomAddressBook
cstrieby/datasciencecoursera
ephillipe/php5fpm-docker
Salutarius/pixi.js
shenxiaoxu/Unblock-Youku
domu1de/RxHack
ka8725/ruby-build
Nelrum/hello-world
odontomachus/geiger_counter
tkanai/epub-testfiles
obnauticus/graphite-rethinkdb
voxaemeron/android
nobodyishere/appframework
jessicard/remote-jobs
houseoftech/CascadableBehavior
Warhawk94/Calculator
pcssi/git-bootstrapping
alphazero/adam
cyril-sf/emberjs-tutorial
michft/gnatsd
brpocock/wayland-cl
raphink/puppet-ntp
elroyens/Mockups
tresu/turnt-happiness
10045125/android-process-button
Bespinoza10/myFirstGulpFile
Vinax89/lg-g3
fluentdesk/FRESCA
adidonato/email-datadumper
lzh1204/Text
barbarae/com.pogstone.fancyparticipantsearch
citrix-openstack-build/keystonemiddleware
fmark/limesurvey-patches
russellfunk/dtools
domainholdings/domainholdings.github.io
znxster/nagios-scripts
marcosnils/ddocker
infinispan/infinispan-odata-server
axlwar/turbulent-fibula
sandeepg3159/uni_project
claudiu-persoiu/magento2-docker-compose
daajoe/dynasp_experiments
sesceu/pimatic-bbb-docker
housegold/john
shi503/TestRepo
nodule/fbgraph
fmresourceguide/custom-functions
liyun935cn/bubble
77hz/iFLYER_PHP_Client
Lazyboy159951/Energize
dricardo1/canjs
fengnq/atrs
kimgronqvist/tern
MrAta/StackSimulator
fpco/chunked-data
PetrZak/zaka-anchor-theme
niu789/huepower
Exodia/node-spring
lotusgoddess/theeemes
canerbasaran/diceware_tr
Averbis/outlinkmeta
psymeg/test3
infracritical/ninja
ovchardmitriy/helicrane
guillaume-morin/typespeed
cschwartz/rasberrypIceCream-cam
jwadhams/json-logic
WebCode-How/starsystem
Kreations-Inc/kreations-inc.git.io
bmichotte/themes
zzuli4519/android-open-project
meulemans/PythonScripting
surfingeagle/hello-world
okde/icinga
jmeas/duly-noted.js
Hannes91/navigation-test
ericf89/halfshell
maiq-0019/maikol
tzuyang/Learn-Matlab-the-hard-way
Seven139/Android
arqex/mongo-master
wdpeng/DPUtils
lambdamatters/haskell
SYJack/gitignore
tsvetan-ganev/nativescript-vscode-snippets
gpuci/gpuci-site
irshaduetian/qemu_kvm
golittledog/dev
lutianming/xcb-rust
encorex/hui_table
02047788a/Real6410_Kernel_Sample
Query:
SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
wandboard-org/linux,drivers/rtc/rtc-ds1305.c,"/*
 * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips
 *
 * Copyright (C) 2008 David Brownell
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/bcd.h>
#include <linux/slab.h>
#include <linux/rtc.h>
#include <linux/workqueue.h>

#include <linux/spi/spi.h>
#include <linux/spi/ds1305.h>
#include <linux/module.h>


/*
 * Registers ... mask DS1305_WRITE into register address to write,
 * otherwise you're reading it.  All non-bitmask values are BCD.
 */
#define DS1305_WRITE		0x80


/* RTC date/time ... the main special cases are that we:
 *  - Need fancy ""hours"" encoding in 12hour mode
 *  - Don't rely on the ""day-of-week"" field (or tm_wday)
 *  - Are a 21st-century clock (2000 <= year < 2100)
 */
#define DS1305_RTC_LEN		7		/* bytes for RTC regs */

#define DS1305_SEC		0x00		/* register addresses */
#define DS1305_MIN		0x01
#define DS1305_HOUR		0x02
#	define DS1305_HR_12		0x40	/* set == 12 hr mode */
#	define DS1305_HR_PM		0x20	/* set == PM (12hr mode) */
#define DS1305_WDAY		0x03
#define DS1305_MDAY		0x04
#define DS1305_MON		0x05
#define DS1305_YEAR		0x06


/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).
 * DS1305_ALM_DISABLE disables a match field (some combos are bad).
 *
 * NOTE that since we don't use WDAY, we limit ourselves to alarms
 * only one day into the future (vs potentially up to a week).
 *
 * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we
 * don't currently support them.  We'd either need to do it only when
 * no alarm is pending (not the standard model), or to use the second
 * alarm (implying that this is a DS1305 not DS1306, *and* that either
 * it's wired up a second IRQ we know, or that INTCN is set)
 */
#define DS1305_ALM_LEN		4		/* bytes for ALM regs */
#define DS1305_ALM_DISABLE	0x80

#define DS1305_ALM0(r)		(0x07 + (r))	/* register addresses */
#define DS1305_ALM1(r)		(0x0b + (r))


/* three control registers */
#define DS1305_CONTROL_LEN	3		/* bytes of control regs */

#define DS1305_CONTROL		0x0f		/* register addresses */
#	define DS1305_nEOSC		0x80	/* low enables oscillator */
#	define DS1305_WP		0x40	/* write protect */
#	define DS1305_INTCN		0x04	/* clear == only int0 used */
#	define DS1306_1HZ		0x04	/* enable 1Hz output */
#	define DS1305_AEI1		0x02	/* enable ALM1 IRQ */
#	define DS1305_AEI0		0x01	/* enable ALM0 IRQ */
#define DS1305_STATUS		0x10
/* status has just AEIx bits, mirrored as IRQFx */
#define DS1305_TRICKLE		0x11
/* trickle bits are defined in <linux/spi/ds1305.h> */

/* a bunch of NVRAM */
#define DS1305_NVRAM_LEN	96		/* bytes of NVRAM */

#define DS1305_NVRAM		0x20		/* register addresses */


struct ds1305 {
	struct spi_device	*spi;
	struct rtc_device	*rtc;

	struct work_struct	work;

	unsigned long		flags;
#define FLAG_EXITING	0

	bool			hr12;
	u8			ctrl[DS1305_CONTROL_LEN];
};


/*----------------------------------------------------------------------*/

/*
 * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux
 * software (like a bootloader) which may require it.
 */

static unsigned bcd2hour(u8 bcd)
{
	if (bcd & DS1305_HR_12) {
		unsigned	hour = 0;

		bcd &= ~DS1305_HR_12;
		if (bcd & DS1305_HR_PM) {
			hour = 12;
			bcd &= ~DS1305_HR_PM;
		}
		hour += bcd2bin(bcd);
		return hour - 1;
	}
	return bcd2bin(bcd);
}

static u8 hour2bcd(bool hr12, int hour)
{
	if (hr12) {
		hour++;
		if (hour <= 12)
			return DS1305_HR_12 | bin2bcd(hour);
		hour -= 12;
		return DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);
	}
	return bin2bcd(hour);
}

/*----------------------------------------------------------------------*/

/*
 * Interface to RTC framework
 */

static int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		buf[2];
	long		err = -EINVAL;

	buf[0] = DS1305_WRITE | DS1305_CONTROL;
	buf[1] = ds1305->ctrl[0];

	if (enabled) {
		if (ds1305->ctrl[0] & DS1305_AEI0)
			goto done;
		buf[1] |= DS1305_AEI0;
	} else {
		if (!(buf[1] & DS1305_AEI0))
			goto done;
		buf[1] &= ~DS1305_AEI0;
	}
	err = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);
	if (err >= 0)
		ds1305->ctrl[0] = buf[1];
done:
	return err;

}


/*
 * Get/set of date and time is pretty normal.
 */

static int ds1305_get_time(struct device *dev, struct rtc_time *time)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		addr = DS1305_SEC;
	u8		buf[DS1305_RTC_LEN];
	int		status;

	/* Use write-then-read to get all the date/time registers
	 * since dma from stack is nonportable
	 */
	status = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),
			buf, sizeof(buf));
	if (status < 0)
		return status;

	dev_vdbg(dev, ""%s: %02x %02x %02x, %02x %02x %02x %02x\n"",
		""read"", buf[0], bu
Query:
SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE LOWER("sample_path") LIKE '%readme.md%'
   LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
mozilla/oneanddone,README.md,"oneanddone
==========

One and Done is written with [Django][django].

If you're interested in helping us out, please read through the
[project wiki][wiki] and reach out to us!

About the project:
>Contribute to Mozilla - One task at a time, One day at a time.
>
>One and Done gives users a wide variety of ways to contribute to Mozilla. 
>You can pick an easy task that only takes a few minutes - or take on a 
>bigger challenge. This includes working on manual testing, automation, bug 
>verification, mobile testing and more. Tasks are from a variety of Mozilla teams - so you 
>can get involved with Automation, Firefox OS, Desktop Firefox, Mozilla 
>websites, Services, Thunderbird and more.

[django]: http://www.djangoproject.com/
[wiki]: https://wiki.mozilla.org/QA/OneandDone
[persona]: https://developer.mozilla.org/Persona/The_implementor_s_guide/Testing
[django-browserid]: https://github.com/mozilla/django-browserid


Development Setup
-----------------
These instructions assume you have [git][], [python][], and `pip` installed. If
you don't have `pip` installed, you can install it with `easy_install pip`.


1. Start by getting the source:

   ```sh
   $ git clone git@github.com:mozilla/oneanddone.git
   $ cd oneanddone
   ```
   Note you may want to fork and clone the repo as described in the
   [github docs][git-clone] if you are doing active development.

2. Create a virtualenv for One and Done. Skip the first step if you already have
   `virtualenv` installed.

   ```sh
   $ pip install virtualenv
   $ virtualenv venv
   $ source venv/bin/activate
   ```

3. Set up PostgreSQL locally. The [PostgreSQL Installation Documentation][postgres] explains how to do this.
   

4. Create the initial empty database; make sure it's utf8:
   ``` 
   # Log into the postgres console
   # using your username and password
   $ psql -U your_username
   ```
   In the mysql console:
   ```mysql
   CREATE DATABASE oneanddone;
   \q
   ```
   To run all parts of the application, you will eventually need to populate this empty database with some example data, especially Tasks. There are many ways to populate the database. The method you choose may depend on the kind of data you want to add.
      * Use the create/edit features of your local One and Done instance. For example sign in with an administrator account and go to the `/tasks/create/` URL of the app to create Tasks.
      * Use the Django admin section of your local One and Done instance by going to the `/admin` URL -- this also relies on an admin account. You can define Task Teams here, for example.
      * Use an external tool like PgAdmin.
      * Ask another active developer for a dump of their local database.

5. Install the requirements:
   ```sh
   $ ./bin/peep.py install -r requirements.txt
   ```
   _Note_: On OS X (in particular 10.8.5, Xcode 5.1), you may encounter the following error: `clang: error: unknown argument. '-mno-fused-madd'`. Try running peep with the `ARCHFLAGS` environment variable set, as follows: `ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future ./bin/peep.py install -r requirements/requirements.txt` 

6. Establish your local settings by copying `oneanddone/settings/local.py-dist` to
   `oneanddone/settings/local.py`:

   ```sh
   $ cp oneanddone/settings/local.py-dist oneanddone/settings/local.py
   ```
   
   The default settings in this file should work fine for a local dev environment, but the file
   is commented to describe how it can be customized. For example, if you wish to use `memcached` for caching instead of local memory, 
   you can change the `CACHES` section to read:
   ```python
   CACHES = {
       'default': {
           'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
           'LOCATION': '127.0.0.1:11211',
           'TIMEOUT': 600,
       }
   }
   ```
   
7. Establish your local environment by copying `.env-dist` to `.env`:
   ```sh
   $ cp .env-dist .env
   ```

   As above, the default settings in this file should work fine for a local dev environment.

8. Initialize your database structure:
   ```sh
   $ python manage.py migrate
   ```

   Once finished, the `migrate` command should produce a message about which models have been migrated, similar to that shown below.

   ```
   Operations to perform:
     Synchronize unmigrated apps: authtoken, rest_framework, cookies, base, session_csrf
     Apply all migrations: tasks, users, sessions, admin, auth, contenttypes
   Synchronizing apps without migrations:
     Creating tables...
       Creating table authtoken_token
     Installing custom SQL...
     Installing indexes...
   Running migrations:
     Applying contenttypes.0001_initial... OK
     Applying auth.0001_initial... OK
     Applying admin.0001_initial... OK
     Applying sessions.0001_initial... OK
     Applying tasks.0001_initial... OK
     Applying users.0001_initial... OK
   ```

Users
-----

One and 
Query:
SELECT "sample_repo_name", "sample_path", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE LOWER("content") LIKE '%copyright (c)%'
   LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
RasPlex/OpenPHT,xbmc/settings/AdvancedSettings.h,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_son
Query:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    )
    LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
willfarrell/alfred-dash-workflow,screenshots/dash.png,
JRebirth/JRebirth,org.jrebirth.af/rest/src/main/java/org/jrebirth/af/rest/service/CRUDRestService.java,"package org.jrebirth.af.rest.service;

import java.util.List;

import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.GenericType;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import org.jrebirth.af.api.wave.Wave;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CRUDRestService<O extends Object> extends AbstractRestService {

    // /** The Wave Item ALL_EXPRESSIONS. */
    // public static final WaveItem<List<O>> PLANETS = new WaveItemBase<List<O>>() {
    // };
    //
    // /** The WaveType return action name. */
    // public static final String PLANETS_LIST = ""PLANETS_LIST"";
    //
    // /** The Wave Type DO_BUILD_TABLES. */
    // public static final WaveType DO_GET_PLANETS = Builders.waveType(""GET_PLANETS"")
    // .returnAction(PLANETS_LIST)
    // .returnItem(PLANETS);

    /** The class logger. */
    private static final Logger LOGGER = LoggerFactory.getLogger(CRUDRestService.class);

    private final String crudPath = ""planets"";

    private final GenericType<O> genericSingle = new GenericType<O>() {
    };
    private final GenericType<List<O>> genericList = new GenericType<List<O>>() {
    };

    /**
     * {@inheritDoc}
     */
    @Override
    protected WebTarget getWebTarget() {
        return super.getWebTarget().path(getCRUDPath());
    }

    public String getCRUDPath() {
        return crudPath;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public boolean doCreateObject(O object, final Wave wave) {
        final Response updateResponse = getWebTarget()
                                                      .request(MediaType.APPLICATION_XML)
                                                      .post(Entity.xml(object));

        return updateResponse.getStatusInfo() == Status.OK;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public boolean doUpdateObject(O object, final Wave wave) {

        final Response updateResponse = getWebTarget()
                                                      .request(MediaType.APPLICATION_XML)
                                                      .put(Entity.xml(object));

        return updateResponse.getStatusInfo() == Status.OK;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public boolean doDeleteObject(O object, final Wave wave) {

        LOGGER.trace(""Delete Object."");

        final Response deleteResponse = getWebTarget().path(""1""/* object.id() */)
                                                      .request(MediaType.APPLICATION_XML)
                                                      .delete();

        return deleteResponse.getStatusInfo() == Status.OK;
    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public O doGetObject(Integer id, final Wave wave) {

        LOGGER.trace(""Get Planet."");

        final O object = getWebTarget()
                                       .request(MediaType.APPLICATION_XML)
                                       .get(genericSingle);

        return object;

    }

    /**
     * .
     * 
     * @param wave the source wave
     */
    public List<O> doGetObjects(final Wave wave) {

        LOGGER.trace(""Get Planets."");

        final List<O> objects = getWebTarget()
                                              .request(MediaType.APPLICATION_XML)
                                              .get(genericList);

        return objects;

    }

}
"
JRebirth/JRebirth,org.jrebirth.af/api/src/main/java/org/jrebirth/af/api/component/behavior/annotation/BehaviorDataFors.java,"/**
 * Get more info at : www.jrebirth.org .
 * Copyright JRebirth.org © 2011-2016
 * Contact : sebastien.bordes@jrebirth.org
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.jrebirth.af.api.component.behavior.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionP
Query:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
EngoEngine/engo,demos/pong/README.md,"# Pong Demo

## What does it do?
It combines a lot of features of `engo`, to demonstrate the playing of a game of pong. 

## What are important aspects of the code?
These things are key in this demo:

* Preloading files in `DefaultScene.Preload()`;
* The `SpeedSystem`, to make sure the ball increases speed gradually;
* The `ControlSystem`, to allow moving paddles up/down with WASD and arrow keys;
* The `BallSystem`, to keep track of the location of the ball, sending messages to the `ScoreSystem` when needed;
* The `ScoreSystem`, to keep track of the score of each player;
* Creating some `Entity`s and requiring the correct `System`s. 
"
felladrin/runuo-custom-scripts,Set Skill Cap/README.md,"# Set Skill Cap

This is a plug&play script to automate the skill cap changes of your shard.

It would be easy to increase total skill cap for all players using the built-in command line ""[global set skillcap 1300 where playermobile"", but it wouldn't be easy to decrease, or change the individual skill cap foreach player. That's why I've written this script.

When a player logs in, it makes sure the player skill caps are correctly. For example: if before the restart the skill cap was 1200 and after the restart it was 700, it will remove skill points of those players who have more than 700 total skill points. The smart remove will remove first focus and meditation, as they are easy to regain. Then the less used skills (skills with less points). So in the end, players should be with their best skills intact.

I've used it on my shard when I was still evaluating what would be the best skill cap.

# Install

Just drop this script anywhere inside your Scripts folder.

# Configuration

Open the script and change the Config to your needs:

    bool Enabled = true;             // Is this system enabled?
    int IndividualSkillCap = 120;    // Cap for each skill. Default: 100.
    int TotalSkillCap = 1200;        // Cap for the sum of all skills. Default: 700.
"
TelerikAcademy/SchoolAcademy,2016-01-HTML-CSS-JavaScript/09. JavaScript-DOM/README.md,"### 08. JavaScript DOM
### [View Presentation online](https://rawgit.com/TelerikAcademy/SchoolAcademy/master/2016-01-HTML-CSS-JavaScript/09.%20JavaScript-DOM/slides/index.html)
### Table of Contents
* DOM [go to slide](https://rawgit.com/TelerikAcademy/SchoolAcademy/master/2016-01-HTML-CSS-JavaScript/09.%20JavaScript-DOM/slides/index.html#/2)
	* DOM Manipulation
* DOM Event model [go to slide](https://rawgit.com/TelerikAcademy/SchoolAcademy/master/2016-01-HTML-CSS-JavaScript/09.%20JavaScript-DOM/slides/index.html#/3)
    * Common DOM Events
"
wilsonmar/oss-perf,swagger-codegen-jmeter/README.md,"This section describes how to generate everything JMeter needs to 
emulate a lot of clients calling a REST API service defined in Swagger, 
beginning with the example at 
<a target=""_blank"" href=""http://petstore.swagger.io/""> http://petstore.swagger.io</a>

Bear in mind that we are not generating server code to respond to request from clients.
That can be quite complicated, with calls to databases, etc.

0. <a href=""#SampleSwagger""> Use swagger-codegen to create server program.</a>

0. <a href=""#GenClientSwagger""> Use swagger-codegen to create Java client program.</a>
 
0. <a href=""#UsualJMeter""> Create JMeter resources for the sample API, manually.</a>
 
0. <a href=""#SwaggerJMeter""> Edit the template to produce basic JMeter code.</a>

0. <a href=""#JMeterTricks""> Edit the template to address more risks.</a>
 
0. <a href=""#JMeterGenSvc""> Make custom JMeter generator web service.</a>

0. <a href=""#JMeterGenWebsite""> Make generator available from a website.</a>

0. <a href=""#JMeterGenRefine""> Refine generator code.</a>

0. <a href=""#SwaggerJMeterGroup""> Run several at a time.</a>

<hr />


<a id=""GenClientSwagger""> 
### Use swagger-codegen to generate Java client program.</a>

0. Open <a target=""_blank"" href=""http://editor.swagger.io/#/""> http://editor.swagger.io/#</a>. 
1. Click ""Got it"" if it's your first time at the site.

0. Copy to your invisible clipboard a Swagger-spec JSON file for your project or the sample file at
<a target=""_blank"" href=""http://petstore.swagger.io/v2/swagger.json"">http://petstore.swagger.io/v2/swagger.json</a>.

0. Click on the text page at the left of the swagger editor.
0. Select **Generate Client**, then Java to follow this tutorial (or JMeter when it's ready). 
The file should be downloaded to your browser Downloads folder.

0. Use the Mac Finder or Windows Explorer to locate the download.

0. Unzip to produce the **java-client** folder.
0. Copy the folder to your workspace folder.
0. Open the folder to examine the files.
 
 ```
 build.gradle
 gradle.properties
 pom.xml
 settings.gradle
 src
 ```

0. Double-click to drill into the src folder: src/main/java/io/swagger/client

 Notice that ASTW, the source code is not internationalized. 
 English text is 
Query:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
btrask/stronglink,deps/libressl-portable/openbsd/src/lib/libc/crypt/crypt_checkpass.3,".\"" $OpenBSD: crypt_checkpass.3,v 1.8 2015/02/24 19:22:12 tedu Exp $
.\""
.\"" Copyright (c) 2014 Ted Unangst <tedu@openbsd.org>
.\""
.\"" Permission to use, copy, modify, and distribute this software for any
.\"" purpose with or without fee is hereby granted, provided that the above
.\"" copyright notice and this permission notice appear in all copies.
.\""
.\"" THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\"" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\"" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\"" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\"" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\"" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\"" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\""
.Dd $Mdocdate: February 24 2015 $
.Dt CRYPT_CHECKPASS 3
.Os
.Sh NAME
.Nm crypt_checkpass ,
.Nm crypt_newhash
.Nd password hashing
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn crypt_checkpass ""const char *password"" ""const char *hash""
.Ft int
.Fn crypt_newhash ""const char *password"" ""const char *pref"" ""char *hash"" ""size_t hashsize""
.Sh DESCRIPTION
The
.Fn crypt_checkpass
function is provided to simplify checking a user's password.
If both the
.Fa hash
and the
.Fa password
are the empty string, authentication
is a success.
Otherwise, the
.Fa password
is hashed and compared to the provided
.Fa hash .
If the
.Fa hash
is
.Dv NULL ,
authentication will always fail, but a default
amount of work is performed to simulate the hashing operation.
A successful match will return 0.
A failure will return \-1 and set
.Xr errno 2 .
.Pp
The
.Fn crypt_newhash
function is provided to simplify the creation of new password hashes.
The provided
.Fa password
is randomly salted and hashed and stored in
.Fa hash .
The
.Fa pref
argument identifies the preferred hashing algorithm and parameters.
Possible values are:
.Bl -tag -width Ds
.It Dq bcrypt,<rounds>
The bcrypt algorithm, where the value of rounds can be between 4 and 31 and
specifies the base 2 logarithm of the number of rounds.
The special rounds value
.Sq a
automatically selects rounds based on system performance.
.El
.Sh RETURN VALUES
.Rv -std crypt_checkpass crypt_newhash
.Sh ERRORS
The
.Fn crypt_checkpass
function sets
.Va errno
to
.Er EACCESS
when authentication fails.
.Pp
The
.Fn crypt_newhash
function sets
.Va errno
to
.Er EINVAL
if
.Fa pref
is unsupported.
.Sh SEE ALSO
.Xr crypt 3 ,
.Xr login.conf 5 ,
.Xr passwd 5
.Sh HISTORY
The function
.Fn crypt_checkpass
first appeared in
.Ox 5.6 ,
and
.Fn crypt_newhash
in
.Ox 5.7 .
.Sh AUTHORS
.An Ted Unangst Aq Mt tedu@openbsd.org
"
objectarts/Dolphin,Core/Object Arts/Dolphin/MVP/Views/Common Controls/Dolphin Common Controls.pax,"| package |
package := Package name: 'Dolphin Common Controls'.
package paxVersion: 1;
	basicComment: 'Dolphin Smalltalk Common Controls.
Copyright (c) Object Arts Ltd, 1997-2003. Portions Copyright (c) CGI Group (Europe) Ltd, 1996.

This package contains MVP View wrappers for the standard Windows common controls (e.g. the Enhanced List View, Tab View, and Tree View). The other less commonly used common controls are separately packaged.'.

package basicPackageVersion: '6.2'.


package classNames
	add: #CCHITTESTINFO;
	add: #CCITEM;
	add: #IconicListAbstract;
	add: #ListView;
	add: #ListViewColumn;
	add: #LVBKIMAGE;
	add: #LVCOLUMN;
	add: #LVFINDINFO;
	add: #LVHITTESTINFO;
	add: #LVITEM;
	add: #NMCUSTOMDRAW;
	add: #NMITEMACTIVATE;
	add: #NMKEYDOWN;
	add: #NMLISTVIEW;
	add: #NMLVCUSTOMDRAW;
	add: #NMLVDISPINFO;
	add: #NMLVFINDITEM;
	add: #NMLVGETINFOTIPA;
	add: #NMLVODSTATECHANGE;
	add: #NMTREEVIEW;
	add: #NMTVCUSTOMDRAW;
	add: #NMTVDISPINFO;
	add: #NMTVGETINFOTIPA;
	add: #TabView;
	add: #TabViewXP;
	add: #TCHITTESTINFO;
	add: #TCITEM;
	add: #TreeView;
	add: #TVHITTESTINFO;
	add: #TVINSERTSTRUCT;
	add: #TVITEM;
	yourself.

package methodNames
	add: 'FolderPresenter class' -> #resource_Default_view;
	add: 'ListPresenter class' -> #resource_Enhanced_list_view;
	add: 'ListPresenter class' -> #resource_Tab_view;
	yourself.

package globalNames
	add: #ListViewConstants;
	add: #TabViewConstants;
	add: #TreeViewConstants;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\..\Base\Dolphin';
	add: '..\..\Presenters\Folder\Dolphin Folder Presenter';
	add: '..\..\Models\List\Dolphin List Models';
	add: '..\..\Presenters\List\Dolphin List Presenter';
	add: '..\..\Base\Dolphin MVP Base';
	add: '..\..\Models\Tree\Dolphin Tree Models';
	yourself).

package!

""Class Definitions""!

Object subclass: #ListViewColumn
	instanceVariableNames: 'text width alignment getTextBlock getSortValueBlock getContentsBlock name p
Query:
SELECT sc."sample_repo_name", sc."sample_path", sc."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path,content
adafruit/Adafruit-Trinket-Gemma-Bootloader,README.md,"Adafruit-Trinket-Gemma-Bootloader
=================================

This is the code for the Trinket/Gemma bootloader. There are two versions, HV (16MHz 5V) and LV (8MHz 3V), but we only use the 3V version and then clock double in the user code.

Check the Makefile for fuses, etc. Requires modifications to avrdude.conf - for advanced users only - we do not offer any support for this code!

=================================
 Please note: you cannot use the Adafruit USB VID/PID for your own non-Trinket/Gemma products or projects. Purchase a USB VID for yourself at http://www.usb.org/developers/vendor/ 
=================================

Written by Frank Zhao for Adafruit Industries, 2013!

=================================

  This code is heavily derived from USBaspLoader, but also from USBtiny, 
  with USBtinyISP's settings
 
  Copyright (c) 2013 Adafruit Industries
  All rights reserved.

  GemmaBoot is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation, either version 3 of
  the License, or (at your option) any later version.

  GemmaBoot is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with GemmaBoot. If not, see
  <http://www.gnu.org/licenses/>.
"
SuperID/super-cache,README.md,"[![NPM version][npm-image]][npm-url]
[![build status][travis-image]][travis-url]
[![Test coverage][coveralls-image]][coveralls-url]
[![Gittip][gittip-image]][gittip-url]
[![David deps][david-image]][david-url]
[![node version][node-image]][node-url]
[![npm download][download-image]][download-url]

[npm-image]: https://img.shields.io/npm/v/super-cache.svg?style=flat-square
[npm-url]: https://npmjs.org/package/super-cache
[travis-image]: https://img.shields.io/travis/SuperID/super-cache.svg?style=flat-square
[travis-url]: https://travis-ci.org/SuperID/super-cache
[coveralls-image]: https://img.shields.io/coveralls/SuperID/super-cache.svg?style=flat-square
[coveralls-url]: https://coveralls.io/r/SuperID/super-cache?branch=master
[gittip-image]: https://img.shields.io/gittip/SuperID.svg?style=flat-square
[gittip-url]: https://www.gittip.com/SuperID/
[david-image]: https://img.shields.io/david/SuperID/super-cache.svg?style=flat-square
[david-url]: https://david-dm.org/SuperID/super-cache
[node-image]: https://img.shields.io/badge/node.js-%3E=_4.0-green.svg?style=flat-square
[node-url]: http://nodejs.org/download/
[download-image]: https://img.shields.io/npm/dm/super-cache.svg?style=flat-square
[download-url]: https://npmjs.org/package/super-cache


# super-cache
Node.js缓存管理模块，支持自定义存储引擎


## 在Node.js中使用

1、安装

```bash
$ npm install super-cache --save
```

2、载入模块

```javascript
var SuperCache = require('super-cache');
var cache = new SuperCache({ttl: 60});
```


## 在浏览器中使用

可供在浏览器上使用的文件存放在`dist`目录

1、Shim方式

```html
<script src=""dist/supercache.js""></script>
<script>
var cache = new SuperCache({ttl: 60});
</script>
```

2、AMD方式

```html
<script>
require.config({
  baseUrl: './dist/'
})
require(['supercache'], function (SuperCache) {
  var cache = new SuperCache({ttl: 60});
});
</script>
```


## 入门

```javascript
var cache = new SuperCache({ttl: 60});

// 定义缓存date的数据如何获取
cache.define('date', function (name, callback) {
  callback(null, new Date().toLocaleTimeString());
});

// 取缓存，如果缓存不存在则会先调用已设置的方法来获取
cache.get('date', function (err, ret) {
  if (err) throw err;
  console.log(ret);
});
```


## 详细使用方法

1、创建`SuperCache`实例：

```javascript
var cache = new SuperCache({
  // 存储引擎
  store: new SuperCache.MemoryStore(),
  // 缓存有效期，单位：秒
  ttl: 60
});
```

2、定义获取缓存的方法：

```javascript
// 定义获取缓存key的方法
cache.define('key', function (name, callback) {
  // name是当前缓存的名称
  // 此处查询数据库，再调用callback返回数据
  // 如果data为undefined活null，则不会被缓存
  // 如果没有指定ttl则使用默认的ttl
  callback(null, data, ttl);
  // 默认data=null或undefined时也会缓存结果，如果想不缓存，指定notNull参数
  callback(null, {ttl: ttl, notNull: true});
});

// key可以是一个正则表达式，或者是一个函数（返回true/fase）
// 当查找没有匹配的字符串key时，则会依次判断正则表达式或者函数的key
// 所以此类key数量不宜过多
cache.define(/^xx/, function (name, callback) {
  callback(null, data);
});
cache.define(function (name) {
  return name.indexOf('xx') === 0;
}, function (name, callback) {
  callback(null, data);
});
```

3、查询缓存：

```javascript
// 获取缓存，如果缓存不存在则先执行预设的方法取得缓存再返回
cache.get('key', function (err, data) {
  // 如果出错，err为出错信息
  // data为缓存数据
  console.log(data);
});
```

4、查询临时的缓存：

```javascript
// 获取缓存，如果缓存不存在则使用当前设置的方法取得缓存再返回
cache.get('key', function (name, callback) {
  // name是当前缓存的名称
  // 此处查询数据库，在调用callback返回数据
  // 如果data为undefined活null，则不会被缓存
  // 如果没有指定ttl则使用默认的ttl
  callback(null, data, ttl);
}, function (err, 
Query:
SELECT DISTINCT sc."sample_repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" NOT IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
    )
    LIMIT 100;
Answer:
sample_repo_name
gurock/testrail-api
impresspages/ImpressPages
mirror/chromium
bitemyapp/dotfiles
jagregory/docu
tymat/FilipinoCoin
graemeg/fpGUI
KDE/marble
keeferrourke/la-capitaine-icon-theme
panda3d/panda3d
pgundlach/LuaTeX
chenshuo/linux-study
ngorogiannis/cyclist
datal-org/datal
wandboard-org/linux
rija/docker-nginx-fpm-caches-wordpress
dotse/zonemaster-engine
rstudio/shiny-server
blazux/Live
KTXSoftware/KodeStudio
bytemine/lcdproc
ComputationalRadiationPhysics/picongpu
rswier/swieros
ProjectPolyester/LightDM-Material-Android
endlessm/linux-meson
andikleen/linux-misc
cvxopt/cvxopt
domokit/mojo
ccrisan/samba
smorks/smtp4dev
wildfly/quickstart
lockrecv/got
LitleCarl/FaceProGame
mreinstein/peerjs-lobby
flar2/shamu
magenta-aps/mox
GoogleCloudPlatform/DataflowJavaSDK
aboutsip/pkts
txt2tags/txt2tags
brendanhay/gogol
sweeneychris/TheiaSfM
reds-heig/logisim-evolution
high-performance-spark/high-performance-spark-examples
Abastro/SciAPI
beagleboard/buildroot
railwaycat/emacs-mac-port
OpenVPN/openvpn-gui
ajaxorg/node-github
openstack/monasca-agent
voron00/linux
ec-europa/joinup-dev
lscgzwd/WeixinShop
alchemy-fr/Phraseanet
Wanyor/openwrt-rtk
lwfinger/rtl8188eu
multipath-tcp/mptcp
pear/pear-core
mathjax/MathJax-dev
AjithPanneerselvam/AjithPanneerselvam.github.io
flaming0/libdf3d
ovh/tatcli
gamaral/rpi-buildroot
PacificBiosciences/pypeFLOW
Calinou/godot-snippets
rongcloud/demo-project-eclipse
AsociacionDrupalES/DrupalCampEs
google/libfuzzer-bot
gzsll/SupportDownloadManager
tecnickcom/tcexam
CaliOpen/caliopen-dev
GStreamer/gst-plugins-bad
sealuzh/PersonalAnalytics
ahernp/django-feedreader
erikdoe/ccmenu
wangzzu/wangzzu.github.com
livecode/livecode-ide
reactjs-cn/react-docs
slvn/android-aosp-mms
appcelerator/titanium_mobile
openpreserve/jhove
dealii/dealii
srsLTE/srsLTE
rockchip-linux/kernel
marcdegraef/EMsoft
Stuk/jszip
roboterclubaachen/xpcc
naelstrof/slop
TechEmpower/FrameworkBenchmarks
KDE/plasma-desktop
riscv/riscv-go
paulrosen/abcjs
cybereality/Perception
juju/juju-gui
presscustomizr/customizr
BurntSushi/nflgame
SciRuby/nmatrix
ibex-team/ibex-robotics
dCache/nfs4j
NICTA/cogent
CheeBam/Gallery
Query:
SELECT COUNT(*) AS "total_files"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    );
Answer:
total_files
12731
Query:
SELECT COUNT(*) AS "matching_files"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2, LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      );
Answer:
matching_files
12
End Exploring Related Columns
Task: Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)"..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 18:52:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:52:15 - root - INFO - ```sql
SELECT
    (SELECT COUNT(*)::FLOAT
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2,
                   LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    ) / 
    (SELECT COUNT(*)
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2,
                 LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    )
    ) AS "Proportion";
```
2025-02-12 18:52:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:52:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:52:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:52:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:52:18 - snowflake.connector.connection - INFO - closed
2025-02-12 18:52:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:52:18 - root - INFO - itercount: 1
2025-02-12 18:52:18 - root - INFO - 0
2025-02-12 18:52:18 - root - INFO - results: 
Proportion
0.00094258110124892


2025-02-12 18:52:18 - root - INFO - Please check the answer again by reviewing Among all repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," what is the proportion of files whose paths include "readme.md" and whose contents contain the phrase "Copyright (c)"?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Proportion
value:float<1
```

This proportion represents the fraction of files in repositories that do not use any programming language whose name (case-insensitively) includes the substring "python," where the files' paths include "readme.md" and their contents contain the phrase "Copyright (c)". The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Proportion
0.00094258110124892
Current sql:
SELECT
    (SELECT COUNT(*)::FLOAT
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2,
                   LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    ) / 
    (SELECT COUNT(*)
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2,
                 LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    )
    ) AS "Proportion";
2025-02-12 18:52:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:52:40 - root - INFO - ```sql
SELECT
    (SELECT COUNT(*)::FLOAT
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE LOWER(sc."sample_path") LIKE '%readme.md%'
      AND LOWER(sc."content") LIKE '%copyright (c)%'
      AND sc."sample_repo_name" IN (
          SELECT DISTINCT t."repo_name"
          FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
          WHERE t."repo_name" NOT IN (
              SELECT DISTINCT t2."repo_name"
              FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2,
                   LATERAL FLATTEN(input => t2."language") f
              WHERE LOWER(f.value::STRING) LIKE '%python%'
          )
      )
    ) / 
    (SELECT COUNT(*)
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS sc
    WHERE sc."sample_repo_name" IN (
        SELECT DISTINCT t."repo_name"
        FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t
        WHERE t."repo_name" NOT IN (
            SELECT DISTINCT t2."repo_name"
            FROM GITHUB_REPOS.GITHUB_REPOS.LANGUAGES t2,
                 LATERAL FLATTEN(input => t2."language") f
            WHERE LOWER(f.value::STRING) LIKE '%python%'
        )
    )
    ) AS "Proportion";
```
2025-02-12 18:52:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:52:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:52:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:52:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:52:41 - snowflake.connector.connection - INFO - closed
2025-02-12 18:52:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:52:41 - root - INFO - itercount: 2
2025-02-12 18:52:41 - root - INFO - 0
2025-02-12 18:52:41 - root - INFO - Total iteration counts: 2
