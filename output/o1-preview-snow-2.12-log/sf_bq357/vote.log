After comparing the three SQL queries and their results, I conclude that **`1result.sql`** is the correct SQL for the task. Here's the reasoning:

1. **Handling Non-Numeric Wind Speed Values**:
   - In `1result.sql`, **`TRY_TO_DOUBLE(t."wind_speed")`** is used in both the `AVG` function and the `WHERE` clause. This ensures that any non-numeric wind speed values are excluded from the calculation and do not cause errors.
   - In contrast, `0result.sql` does not use `TRY_TO_DOUBLE`, which may lead to errors or incorrect calculations if non-numeric values are present in the `"wind_speed"` column.

2. **Date Construction**:
   - `1result.sql` uses **`DATE_FROM_PARTS(t."year", t."month", t."day") AS "date"`**, which is a clear and efficient way to construct dates from individual year, month, and day columns.
   - `0result.sql` concatenates strings and uses `TO_DATE`, which is less efficient and more error-prone due to string manipulation.

3. **Clarity and Simplicity**:
   - `1result.sql` is straightforward and focuses on the necessary conditions and calculations without extra or unnecessary code.
   - `2result.sql` adds additional conditions (e.g., checking if `"month"` and `"day"` are not null), which might exclude valid records unnecessarily.

4. **Correctness of Results**:
   - All three queries produce the same results in the sample outputs provided. However, due to the reasons above, `1result.sql` is more robust and reliable for the task.

Therefore, the correct SQL query that accurately computes the top 5 highest daily average wind speeds between 2005 and 2015, excluding records with missing wind speed values, is:

```plain
1result.sql
```