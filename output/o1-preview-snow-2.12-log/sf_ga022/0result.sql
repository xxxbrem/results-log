WITH initial_events AS (
    SELECT
        *,
        CONVERT_TIMEZONE('UTC', 'Asia/Shanghai', TO_TIMESTAMP_LTZ("event_timestamp" / 1000000)) AS event_shanghai_time
    FROM (
        SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180901"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180902"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180903"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180904"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180905"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180906"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180907"
    )
    WHERE "event_name" = 'first_open'
      AND event_shanghai_time BETWEEN '2018-09-01 00:00:00' AND '2018-09-07 23:59:59'
),
initial_cohort AS (
    SELECT DISTINCT "user_pseudo_id", MIN(event_shanghai_time) AS "first_open_time"
    FROM initial_events
    GROUP BY "user_pseudo_id"
),
all_events AS (
    SELECT
        *,
        CONVERT_TIMEZONE('UTC', 'Asia/Shanghai', TO_TIMESTAMP_LTZ("event_timestamp" / 1000000)) AS event_shanghai_time
    FROM (
        SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180901"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180902"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180903"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180904"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180905"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180906"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180907"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180908"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180909"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180910"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180911"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180912"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180913"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180914"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180915"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180916"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180917"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180918"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180919"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180920"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180921"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180922"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180923"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180924"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180925"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180926"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180927"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180928"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180929"
        UNION ALL SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180930"
    )
),
user_events_with_diff AS (
    SELECT
        e."user_pseudo_id",
        e.event_shanghai_time,
        e."event_name",
        c."first_open_time",
        DATEDIFF('day', c."first_open_time", e.event_shanghai_time) AS days_diff
    FROM all_events e
    INNER JOIN initial_cohort c ON e."user_pseudo_id" = c."user_pseudo_id"
    WHERE e."event_name" <> 'first_open'
),
user_weeks AS (
    SELECT
        "user_pseudo_id",
        CASE
            WHEN days_diff BETWEEN 1 AND 7 THEN 1
            WHEN days_diff BETWEEN 8 AND 14 THEN 2
            WHEN days_diff BETWEEN 15 AND 21 THEN 3
            ELSE NULL
        END AS retention_week
    FROM user_events_with_diff
    WHERE days_diff BETWEEN 1 AND 21
),
weekly_retention AS (
    SELECT
        retention_week AS "Week",
        COUNT(DISTINCT "user_pseudo_id") AS retained_users
    FROM user_weeks
    GROUP BY retention_week
),
total_users AS (
    SELECT COUNT(DISTINCT "user_pseudo_id") AS total_users
    FROM initial_cohort
)
SELECT
    wr."Week",
    ROUND((wr.retained_users / tu.total_users::FLOAT) * 100, 4) AS "Retention_Rate"
FROM weekly_retention wr
CROSS JOIN total_users tu
ORDER BY wr."Week";