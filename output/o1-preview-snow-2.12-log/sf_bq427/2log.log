2025-02-12 02:03:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 02:03:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:03:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:03:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:03:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 02:03:13 - snowflake.connector.connection - INFO - closed
2025-02-12 02:03:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:03:14 - root - INFO - SQL:
-- 1. List distinct scheduled dates in MBB_PBP_SR to understand the date format
SELECT DISTINCT "scheduled_date"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
ORDER BY "scheduled_date" ASC
LIMIT 100;
Results:
scheduled_date
1383940800000000
1383948000000000
1383951600000000
1383953400000000
1383955200000000
1383957000000000
1383958800000000
1383962400000000
1383962700000000
1383964200000000
1383966000000000
1383973200000000
1384016400000000
1384020000000000
1384030800000000
1384038000000000
1384041600000000
1384045200000000
1384047000000000
1384052400000000
1384106400000000
1384113600000000
1384117200000000
1384119000000000
1384124400000000
1384131600000000
1384138800000000
1384200000000000
1384214400000000
1384218000000000
1384221600000000
1384225200000000
1384228800000000
1384236000000000
1384272000000000
1384279200000000
1384286400000000
1384293600000000
1384297200000000
1384300800000000
1384302600000000
1384304400000000
1384308000000000
1384309800000000
1384315200000000
1384387200000000
1384389000000000
1384394400000000
1384401600000000
1384473600000000
1384475400000000
1384477200000000
1384480800000000
1384484700000000
1384488000000000
1384556400000000
1384560000000000
1384563600000000
1384565400000000
1384567200000000
1384570800000000
1384574400000000
1384621200000000
1384624800000000
1384628400000000
1384635600000000
1384637400000000
1384646400000000
1384650000000000
1384666200000000
1384707600000000
1384714800000000
1384722000000000
1384725600000000
1384729200000000
1384729500000000
1384732800000000
1384736400000000
1384819200000000
1384821000000000
1384822800000000
1384826400000000
1384833600000000
1384902000000000
1384905600000000
1384907400000000
1384909200000000
1384911000000000
1384912800000000
1384916700000000
1384920000000000
1384992000000000
1384993800000000
1384995600000000
1385001000000000
1385047800000000
1385055000000000
1385057400000000
1385065500000000
1385071200000000

2025-02-12 02:03:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:03:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:03:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:03:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 02:03:15 - snowflake.connector.connection - INFO - closed
2025-02-12 02:03:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:03:15 - root - INFO - SQL:
-- 2. Examine shot types and their counts
SELECT "shot_type", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_type"
ORDER BY count DESC
LIMIT 100;
Results:
shot_type,COUNT
jump shot,680076
layup,337805
dunk,41997
hook shot,11015
tip shot,6117

2025-02-12 02:03:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:03:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:03:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:03:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 02:03:16 - snowflake.connector.connection - INFO - closed
2025-02-12 02:03:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:03:17 - root - INFO - SQL:
-- 3. Retrieve sample data with event coordinates
SELECT "event_coord_x", "event_coord_y", "shot_type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL
LIMIT 100;
Results:
event_coord_x,event_coord_y,shot_type
996.0,339.0,layup
150.0,294.0,layup
945.0,239.0,
240.0,308.0,
81.0,163.0,
800.0,239.0,
101.0,273.0,
290.0,276.0,jump shot
239.0,314.0,
141.0,231.0,jump shot
246.0,286.0,
212.0,260.0,
894.0,303.0,
1051.0,318.0,layup
110.0,307.0,
295.0,272.0,
112.0,270.0,
91.0,279.0,
1004.0,264.0,
71.0,242.0,
886.0,513.0,
794.0,304.0,
87.0,564.0,
892.0,310.0,
896.0,297.0,
78.0,19.0,jump shot
1006.0,286.0,
1054.0,314.0,
1011.0,307.0,
416.0,178.0,
134.0,360.0,
72.0,272.0,
1040.0,344.0,layup
343.0,279.0,
1051.0,276.0,
1003.0,349.0,
228.0,296.0,
1024.0,312.0,
266.0,493.0,
1021.0,262.0,
198.0,246.0,
85.0,201.0,
945.0,228.0,layup
82.0,359.0,jump shot
77.0,331.0,
971.0,53.0,jump shot
118.0,300.0,layup
882.0,454.0,
1047.0,334.0,
291.0,101.0,jump shot
999.0,111.0,
226.0,300.0,
84.0,454.0,jump shot
295.0,264.0,jump shot
92.0,310.0,
1031.0,329.0,
244.0,277.0,
164.0,290.0,
98.0,300.0,
1051.0,245.0,
1011.0,334.0,
105.0,272.0,
315.0,396.0,
260.0,266.0,
1030.0,314.0,
880.0,311.0,
976.0,48.0,
999.0,274.0,
240.0,296.0,
983.0,41.0,
419.0,263.0,
923.0,537.0,
233.0,85.0,
87.0,291.0,
96.0,269.0,
394.0,312.0,
882.0,368.0,jump shot
132.0,270.0,jump shot
67.0,362.0,
87.0,300.0,
380.0,178.0,jump shot
154.0,270.0,
129.0,301.0,
218.0,176.0,
235.0,291.0,
240.0,256.0,
838.0,105.0,jump shot
149.0,290.0,
315.0,469.0,
95.0,202.0,
220.0,191.0,
1065.0,202.0,
246.0,315.0,
813.0,297.0,jump shot
1016.0,300.0,
872.0,78.0,jump shot
951.0,239.0,
927.0,283.0,jump shot
892.0,370.0,
243.0,294.0,

2025-02-12 02:03:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:03:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:03:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:03:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 02:03:18 - snowflake.connector.connection - INFO - closed
2025-02-12 02:03:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:03:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 02:03:57 - root - INFO - ```sql
SELECT
    p."shot_type",
    AVG(
        CASE
            WHEN p."event_coord_x" < 564 THEN p."event_coord_x"
            ELSE 1128 - p."event_coord_x"
        END
    ) AS avg_adjusted_x,
    AVG(
        CASE
            WHEN p."event_coord_x" < 564 THEN 600 - p."event_coord_y"
            ELSE p."event_coord_y"
        END
    ) AS avg_adjusted_y,
    COUNT(*) AS avg_shot_attempts,
    SUM(CASE WHEN p."shot_made" = TRUE THEN 1 ELSE 0 END) AS avg_successful_shots
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE
    p."shot_type" IS NOT NULL
    AND p."event_coord_x" IS NOT NULL
    AND p."event_coord_y" IS NOT NULL
    AND g."scheduled_date" < '2018-03-15'
    AND (
        (p."event_coord_x" < 564 AND p."team_basket" = 'left')
        OR
        (p."event_coord_x" >= 564 AND p."team_basket" = 'right')
    )
GROUP BY p."shot_type";
```
2025-02-12 02:03:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:03:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:03:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:03:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 02:03:59 - snowflake.connector.connection - INFO - closed
2025-02-12 02:03:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:48 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 02:04:48 - root - INFO - SQL:
SELECT
    p."shot_type",
    AVG(
        CASE
            WHEN p."event_coord_x" < 564 THEN p."event_coord_x"
            ELSE 1128 - p."event_coord_x"
        END
    ) AS avg_adjusted_x,
    AVG(
        CASE
            WHEN p."event_coord_x" < 564 THEN 600 - p."event_coord_y"
            ELSE p."event_coord_y"
        END
    ) AS avg_adjusted_y,
    COUNT(*) AS avg_shot_attempts,
    SUM(CASE WHEN p."shot_made" = TRUE THEN 1 ELSE 0 END) AS avg_successful_shots
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE
    p."shot_type" IS NOT NULL
    AND p."event_coord_x" IS NOT NULL
    AND p."event_coord_y" IS NOT NULL
    AND g."scheduled_date" < '2018-03-15'
    AND (
        (p."event_coord_x" < 564 AND p."team_basket" = 'left')
        OR
        (p."event_coord_x" >= 564 AND p."team_basket" = 'right')
    )
GROUP BY p."shot_type";
Results:
shot_type,AVG_ADJUSTED_X,AVG_ADJUSTED_Y,AVG_SHOT_ATTEMPTS,AVG_SUCCESSFUL_SHOTS
jump shot,211.25291442560925,297.78205423049815,673975,236173
layup,96.35235796498377,302.9383168189653,334759,183997
hook shot,124.90350309640448,304.56899898327015,10819,5184
dunk,90.50040861455629,301.2168060763388,41604,36850
tip shot,93.31835643895106,301.83831635209623,5987,3675

2025-02-12 02:04:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 02:04:49 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:50 - root - INFO - SQL:
-- 5. View distinct values of team_basket
SELECT DISTINCT "team_basket"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
LIMIT 100;
Results:
team_basket
right
""
left

2025-02-12 02:04:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-02-12 02:04:51 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:51 - root - INFO - SQL:
-- 6. Examine counts of shot_made values
SELECT "shot_made", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_made"
LIMIT 100;
Results:
shot_made,COUNT
True,469738
False,607272

2025-02-12 02:04:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 02:04:52 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:53 - root - INFO - SQL:
-- 7. Get sample data with team_basket and coordinates
SELECT "team_basket", "event_coord_x", "event_coord_y", "shot_type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "team_basket" IS NOT NULL AND "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL
LIMIT 100;
Results:
team_basket,event_coord_x,event_coord_y,shot_type
right,996.0,339.0,layup
left,150.0,294.0,layup
left,945.0,239.0,
left,240.0,308.0,
left,81.0,163.0,
right,800.0,239.0,
right,101.0,273.0,
left,290.0,276.0,jump shot
left,239.0,314.0,
left,141.0,231.0,jump shot
left,246.0,286.0,
right,212.0,260.0,
right,894.0,303.0,
right,1051.0,318.0,layup
right,110.0,307.0,
left,295.0,272.0,
left,112.0,270.0,
left,91.0,279.0,
left,1004.0,264.0,
left,71.0,242.0,
right,886.0,513.0,
left,794.0,304.0,
right,87.0,564.0,
left,892.0,310.0,
right,896.0,297.0,
left,78.0,19.0,jump shot
right,1006.0,286.0,
right,1054.0,314.0,
right,1011.0,307.0,
left,416.0,178.0,
left,134.0,360.0,
left,72.0,272.0,
right,1040.0,344.0,layup
left,343.0,279.0,
right,1051.0,276.0,
right,1003.0,349.0,
left,228.0,296.0,
right,1024.0,312.0,
right,266.0,493.0,
right,1021.0,262.0,
left,198.0,246.0,
right,85.0,201.0,
right,945.0,228.0,layup
left,82.0,359.0,jump shot
right,77.0,331.0,
right,971.0,53.0,jump shot
left,118.0,300.0,layup
right,882.0,454.0,
right,1047.0,334.0,
left,291.0,101.0,jump shot
left,999.0,111.0,
left,226.0,300.0,
left,84.0,454.0,jump shot
left,295.0,264.0,jump shot
left,92.0,310.0,
right,1031.0,329.0,
left,244.0,277.0,
left,164.0,290.0,
left,98.0,300.0,
right,1051.0,245.0,
left,1011.0,334.0,
left,105.0,272.0,
right,315.0,396.0,
left,260.0,266.0,
right,1030.0,314.0,
right,880.0,311.0,
right,976.0,48.0,
right,999.0,274.0,
right,240.0,296.0,
right,983.0,41.0,
left,419.0,263.0,
right,923.0,537.0,
left,233.0,85.0,
right,87.0,291.0,
left,96.0,269.0,
right,394.0,312.0,
right,882.0,368.0,jump shot
left,132.0,270.0,jump shot
left,67.0,362.0,
right,87.0,300.0,
left,380.0,178.0,jump shot
right,154.0,270.0,
right,129.0,301.0,
right,218.0,176.0,
right,235.0,291.0,
left,240.0,256.0,
right,838.0,105.0,jump shot
left,149.0,290.0,
right,315.0,469.0,
left,95.0,202.0,
left,220.0,191.0,
right,1065.0,202.0,
left,246.0,315.0,
right,813.0,297.0,jump shot
right,1016.0,300.0,
right,872.0,78.0,jump shot
right,951.0,239.0,
right,927.0,283.0,jump shot
right,892.0,370.0,
left,243.0,294.0,

2025-02-12 02:04:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 02:04:54 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:54 - root - INFO - SQL:
-- 8. Join MBB_PBP_SR and MBB_GAMES_SR to get scheduled_date in DATE format
SELECT p."game_id", g."scheduled_date", p."shot_type", p."event_coord_x", p."event_coord_y"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE p."shot_type" IS NOT NULL AND p."event_coord_x" IS NOT NULL AND p."event_coord_y" IS NOT NULL
LIMIT 100;
Results:
Too long, hard cut:
game_id,scheduled_date,shot_type,event_coord_x,event_coord_y
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,88.0,255.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,99.0,255.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,71.0,327.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,240.0,177.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,237.0,336.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,208.0,231.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,339.0,356.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,119.0,219.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,hook shot,134.0,214.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,153.0,286.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,184.0,423.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,359.0,236.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,65.0,41.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,251.0,85.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,87.0,248.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,134.0,263.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,212.0,221.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,141.0,272.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,tip shot,88.0,266.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,tip shot,99.0,301.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,hook shot,140.0,304.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,130.0,92.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,273.0,324.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,92.0,248.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,89.0,329.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,91.0,246.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,72.0,328.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,dunk,85.0,300.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,336.0,328.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,181.0,533.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1037.0,332.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1050.0,334.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,962.0,39.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,790.0,368.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,935.0,132.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1076.0,557.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,848.0,109.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,813.0,400.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1083.0,46.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,808.0,403.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,773.0,336.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1010.0,301.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1027.0,346.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,808.0,341.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,841.0,130.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1020.0,358.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1054.0,339.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1027.0,303.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1009.0,331.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1024.0,262.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,975.0,253.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1048.0,338.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1048.0,328.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1013.0,459.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1055.0,417.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,dunk,1045.0,301.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,dunk,1052.0,312.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,838.0,125.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,838.0,133.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,880.0,489.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1090.0,29.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1081.0,37.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,243.0,317.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,hook shot,972.0,290.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,hook shot,126.0,297.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,89.0,32.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,1026.0,397.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,layup,1006.0,236.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,956.0,260.0
f519a979-dada-49a1-a581-e85bdc2be8b0,2017-12-20,jump shot,779.0,294.0
8c4a1703-39d7-4539-88e3-30e456012364,2015-11-14,layup,86.0,324.0
8c4a1703-39d7-4539-88e3-30e456012364,2015-11-14,jump shot,305.0,406.0
8

2025-02-12 02:04:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 02:04:55 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:56 - root - INFO - SQL:
-- 9. Check the earliest and latest scheduled dates in MBB_GAMES_SR
SELECT MIN("scheduled_date") AS earliest_date, MAX("scheduled_date") AS latest_date
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR";
Results:
EARLIEST_DATE,LATEST_DATE
2013-11-08,2018-04-03

2025-02-12 02:04:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 02:04:57 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:57 - root - INFO - SQL:
-- 10. Count number of shots taken before March 15, 2018
SELECT COUNT(*) AS shot_count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE g."scheduled_date" < '2018-03-15' AND p."shot_type" IS NOT NULL AND p."event_coord_x" IS NOT NULL AND p."event_coord_y" IS NOT NULL;
Results:
SHOT_COUNT
1068844

2025-02-12 02:04:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:04:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 02:04:58 - snowflake.connector.connection - INFO - closed
2025-02-12 02:04:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:04:59 - root - INFO - SQL:
-- 11. Examine relation between shot_made and points_scored
SELECT "shot_made", "points_scored", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_made", "points_scored"
ORDER BY count DESC
LIMIT 100;
Results:
shot_made,points_scored,COUNT
False,,607272
True,2.0,337269
True,3.0,132469

2025-02-12 02:04:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:04:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:04:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:05:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 57
2025-02-12 02:05:00 - snowflake.connector.connection - INFO - closed
2025-02-12 02:05:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:05:00 - root - INFO - SQL:
-- 12. List distinct event types and types
SELECT DISTINCT "event_type", "type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
LIMIT 100;
Results:
event_type,type
offensivefoul,personalfoul
offensivefoul,fouldrawn
assist,assist
twopointmiss,
minortechnicalfoul,technicalfoul
offensivefoul,offensivefoul
technicalfoul,personalfoul
flagrantone,personalfoul
ejection,ejection
tvtimeout,
officialtimeout,
technicalfoul,technicalfoul
possession,
teamtimeout,
assist,threepointmade
flagrantone,flagrantfoul
clearpathfoul,personalfoul
defensivethreeseconds,
endperiod,
personalfoul,fouldrawn
laneviolation,
block,block
shootingfoul,fouldrawn
flagranttwo,personalfoul
freethrowmade,freethrow
opentip,
openinbound,
flagranttwo,fouldrawn
substitution,
lineupchange,
twopointmade,fieldgoal
attemptblocked,twopointmiss
flagrantone,fouldrawn
block,threepointmiss
rebound,
ejection,
threepointmade,fieldgoal
delay,
freethrow,
review,
deadball,
threepointmiss,fieldgoal
personalfoul,personalfoul
jumpball,
twopointmiss,fieldgoal
rebound,rebound
shootingfoul,personalfoul
kickball,
attemptblocked,threepointmiss
turnover,turnover
freethrowmiss,freethrow
flagranttwo,flagrantfoul
clearpathfoul,fouldrawn
turnover,steal
block,twopointmiss
attemptblocked,attemptblocked
assist,twopointmade

2025-02-12 02:05:00 - root - INFO - itercount: 0
2025-02-12 02:05:00 - root - INFO - Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,0
table_name,MBB_GAMES_SR
description,
DDL,"create or replace TABLE MBB_GAMES_SR (
	""game_id"" VARCHAR(16777216),
	""season"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""coverage"" VARCHAR(16777216),
	""neutral_site"" BOOLEAN,
	""scheduled_date"" DATE,
	""gametime"" NUMBER(38,0),
	""conference_game"" BOOLEAN,
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""tournament_round"" VARCHAR(16777216),
	""tournament_game_no"" VARCHAR(16777216),
	""attendance"" NUMBER(38,0),
	""lead_changes"" NUMBER(38,0),
	""times_tied"" NUMBER(38,0),
	""periods"" NUMBER(38,0),
	""possession_arrow"" VARCHAR(16777216),
	""venue_id"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""h_name"" VARCHAR(16777216),
	""h_market"" VARCHAR(16777216),
	""h_id"" VARCHAR(16777216),
	""h_alias"" VARCHAR(16777216),
	""h_league_id"" VARCHAR(16777216),
	""h_league_name"" VARCHAR(16777216),
	""h_league_alias"" VARCHAR(16777216),
	""h_conf_id"" VARCHAR(16777216),
	""h_conf_name"" VARCHAR(16777216),
	""h_conf_alias"" VARCHAR(16777216),
	""h_division_id"" VARCHAR(16777216),
	""h_division_name"" VARCHAR(16777216),
	""h_division_alias"" VARCHAR(16777216),
	""h_logo_large"" VARCHAR(16777216),
	""h_logo_medium"" VARCHAR(16777216),
	""h_logo_small"" VARCHAR(16777216),
	""h_points_game"" NUMBER(38,0),
	""h_rank"" NUMBER(38,0),
	""h_minutes"" VARCHAR(16777216),
	""h_field_goals_made"" NUMBER(38,0),
	""h_field_goals_att"" NUMBER(38,0),
	""h_field_goals_pct"" FLOAT,
	""h_three_points_made"" NUMBER(38,0),
	""h_three_points_att"" NUMBER(38,0),
	""h_three_points_pct"" FLOAT,
	""h_two_points_made"" NUMBER(38,0),
	""h_two_points_att"" NUMBER(38,0),
	""h_two_points_pct"" FLOAT,
	""h_blocked_att"" NUMBER(38,0),
	""h_free_throws_made"" NUMBER(38,0),
	""h_free_throws_att"" NUMBER(38,0),
	""h_free_throws_pct"" FLOAT,
	""h_offensive_rebounds"" NUMBER(38,0),
	""h_defensive_rebounds"" NUMBER(38,0),
	""h_rebounds"" NUMBER(38,0),
	""h_assists"" NUMBER(38,0),
	""h_turnovers"" NUMBER(38,0),
	""h_steals"" NUMBER(38,0),
	""h_blocks"" NUMBER(38,0),
	""h_assists_turnover_ratio"" FLOAT,
	""h_personal_fouls"" NUMBER(38,0),
	""h_ejections"" NUMBER(38,0),
	""h_foulouts"" NUMBER(38,0),
	""h_points"" NUMBER(38,0),
	""h_fast_break_pts"" NUMBER(38,0),
	""h_second_chance_pts"" NUMBER(38,0),
	""h_team_turnovers"" NUMBER(38,0),
	""h_points_off_turnovers"" NUMBER(38,0),
	""h_team_rebounds"" NUMBER(38,0),
	""h_flagrant_fouls"" NUMBER(38,0),
	""h_player_tech_fouls"" NUMBER(38,0),
	""h_team_tech_fouls"" NUMBER(38,0),
	""h_coach_tech_fouls"" NUMBER(38,0),
	""a_name"" VARCHAR(16777216),
	""a_market"" VARCHAR(16777216),
	""a_id"" VARCHAR(16777216),
	""a_alias"" VARCHAR(16777216),
	""a_league_id"" VARCHAR(16777216),
	""a_league_name"" VARCHAR(16777216),
	""a_league_alias"" VARCHAR(16777216),
	""a_conf_id"" VARCHAR(16777216),
	""a_conf_name"" VARCHAR(16777216),
	""a_conf_alias"" VARCHAR(16777216),
	""a_division_id"" VARCHAR(16777216),
	""a_division_name"" VARCHAR(16777216),
	""a_division_alias"" VARCHAR(16777216),
	""a_logo_large"" VARCHAR(16777216),
	""a_logo_medium"" VARCHAR(16777216),
	""a_logo_small"" VARCHAR(16777216),
	""a_points_game"" NUMBER(38,0),
	""a_rank"" NUMBER(38,0),
	""a_minutes"" VARCHAR(16777216),
	""a_field_goals_made"" NUMBER(38,0),
	""a_field_goals_att"" NUMBER(38,0),
	""a_field_goals_pct"" FLOAT,
	""a_three_points_made"" NUMBER(38,0),
	""a_three_points_att"" NUMBER(38,0),
	""a_three_points_pct"" FLOAT,
	""a_two_points_made"" NUMBER(38,0),
	""a_two_points_att"" NUMBER(38,0),
	""a_two_points_pct"" FLOAT,
	""a_blocked_att"" NUMBER(38,0),
	""a_free_throws_made"" NUMBER(38,0),
	""a_free_throws_att"" NUMBER(38,0),
	""a_free_throws_pct"" FLOAT,
	""a_offensive_rebounds"" NUMBER(38,0),
	""a_defensive_rebounds"" NUMBER(38,0),
	""a_rebounds"" NUMBER(38,0),
	""a_assists"" NUMBER(38,0),
	""a_turnovers"" NUMBER(38,0),
	""a_steals"" NUMBER(38,0),
	""a_blocks"" NUMBER(38,0),
	""a_assists_turnover_ratio"" FLOAT,
	""a_personal_fouls"" NUMBER(38,0),
	""a_ejections"" NUMBER(38,0),
	""a_foulouts"" NUMBER(38,0),
	""a_points"" NUMBER(38,0),
	""a_fast_break_pts"" NUMBER(38,0),
	""a_second_chance_pts"" NUMBER(38,0),
	""a_team_turnovers"" NUMBER(38,0),
	""a_points_off_turnovers"" NUMBER(38,0),
	""a_team_rebounds"" NUMBER(38,0),
	""a_flagrant_fouls"" NUMBER(38,0),
	""a_player_tech_fouls"" NUMBER(38,0),
	""a_team_tech_fouls"" NUMBER(38,0),
	""a_coach_tech_fouls"" NUMBER(38,0),
	""created"" NUMBER(38,0)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,1
table_name,MBB_HISTORICAL_TOURNAMENT_GAMES
description,
DDL,"create or replace TABLE MBB_HISTORICAL_TOURNAMENT_GAMES (
	""season"" NUMBER(38,0),
	""round"" NUMBER(38,0),
	""days_from_epoch"" NUMBER(38,0),
	""game_date"" DATE,
	""day"" VARCHAR(16777216),
	""win_seed"" VARCHAR(16777216),
	""win_region"" VARCHAR(16777216),
	""win_market"" VARCHAR(16777216),
	""win_name"" VARCHAR(16777216),
	""win_alias"" VARCHAR(16777216),
	""win_team_id"" VARCHAR(16777216),
	""win_school_ncaa"" VARCHAR(16777216),
	""win_code_ncaa"" NUMBER(38,0),
	""win_kaggle_team_id"" NUMBER(38,0),
	""win_pts"" NUMBER(38,0),
	""lose_seed"" VARCHAR(16777216),
	""lose_region"" VARCHAR(16777216),
	""lose_market"" VARCHAR(16777216),
	""lose_name"" VARCHAR(16777216),
	""lose_alias"" VARCHAR(16777216),
	""lose_team_id"" VARCHAR(16777216),
	""lose_school_ncaa"" VARCHAR(16777216),
	""lose_code_ncaa"" NUMBER(38,0),
	""lose_kaggle_team_id"" NUMBER(38,0),
	""lose_pts"" NUMBER(38,0),
	""num_ot"" NUMBER(38,0),
	""academic_year"" NUMBER(38,0)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,2
table_name,MBB_HISTORICAL_TEAMS_GAMES
description,
DDL,"create or replace TABLE MBB_HISTORICAL_TEAMS_GAMES (
	""season"" NUMBER(38,0),
	""scheduled_date"" VARCHAR(16777216),
	""attendance"" FLOAT,
	""market"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""team_code"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""current_division"" VARCHAR(16777216),
	""points_game"" NUMBER(38,0),
	""win"" BOOLEAN,
	""opp_market"" VARCHAR(16777216),
	""opp_name"" VARCHAR(16777216),
	""opp_code"" NUMBER(38,0),
	""opp_id"" VARCHAR(16777216),
	""opp_alias"" VARCHAR(16777216),
	""opp_current_division"" VARCHAR(16777216),
	""opp_points_game"" NUMBER(38,0)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,3
table_name,MBB_PBP_SR
description,
DDL,"create or replace TABLE MBB_PBP_SR (
	""game_id"" VARCHAR(16777216),
	""load_timestamp"" NUMBER(38,0),
	""season"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""scheduled_date"" NUMBER(38,0),
	""venue_id"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""attendance"" NUMBER(38,0),
	""neutral_site"" BOOLEAN,
	""conference_game"" BOOLEAN,
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""round"" VARCHAR(16777216),
	""game_no"" VARCHAR(16777216),
	""away_market"" VARCHAR(16777216),
	""away_name"" VARCHAR(16777216),
	""away_id"" VARCHAR(16777216),
	""away_alias"" VARCHAR(16777216),
	""away_conf_name"" VARCHAR(16777216),
	""away_conf_alias"" VARCHAR(16777216),
	""away_division_name"" VARCHAR(16777216),
	""away_division_alias"" VARCHAR(16777216),
	""away_league_name"" VARCHAR(16777216),
	""home_market"" VARCHAR(16777216),
	""home_name"" VARCHAR(16777216),
	""home_id"" VARCHAR(16777216),
	""home_alias"" VARCHAR(16777216),
	""home_conf_name"" VARCHAR(16777216),
	""home_conf_alias"" VARCHAR(16777216),
	""home_division_name"" VARCHAR(16777216),
	""home_division_alias"" VARCHAR(16777216),
	""home_league_name"" VARCHAR(16777216),
	""period"" NUMBER(38,0),
	""game_clock"" VARCHAR(16777216),
	""elapsed_time_sec"" NUMBER(38,0),
	""possession_arrow"" VARCHAR(16777216),
	""team_name"" VARCHAR(16777216),
	""team_market"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""team_alias"" VARCHAR(16777216),
	""team_conf_name"" VARCHAR(16777216),
	""team_conf_alias"" VARCHAR(16777216),
	""team_division_name"" VARCHAR(16777216),
	""team_division_alias"" VARCHAR(16777216),
	""team_league_name"" VARCHAR(16777216),
	""team_basket"" VARCHAR(16777216),
	""possession_team_id"" VARCHAR(16777216),
	""player_id"" VARCHAR(16777216),
	""player_full_name"" VARCHAR(16777216),
	""jersey_num"" NUMBER(38,0),
	""event_id"" VARCHAR(16777216),
	""timestamp"" NUMBER(38,0),
	""event_description"" VARCHAR(16777216),
	""event_coord_x"" FLOAT,
	""event_coord_y"" FLOAT,
	""event_type"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""shot_made"" BOOLEAN,
	""shot_type"" VARCHAR(16777216),
	""shot_subtype"" VARCHAR(16777216),
	""three_point_shot"" BOOLEAN,
	""points_scored"" FLOAT,
	""turnover_type"" VARCHAR(16777216),
	""rebound_type"" VARCHAR(16777216),
	""timeout_duration"" FLOAT
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,4
table_name,MBB_TEAMS
description,
DDL,"create or replace TABLE MBB_TEAMS (
	""market"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""id"" VARCHAR(16777216),
	""code_ncaa"" NUMBER(38,0),
	""kaggle_team_id"" NUMBER(38,0),
	""school_ncaa"" VARCHAR(16777216),
	""turner_name"" VARCHAR(16777216),
	""league_name"" VARCHAR(16777216),
	""league_alias"" VARCHAR(16777216),
	""league_id"" VARCHAR(16777216),
	""conf_name"" VARCHAR(16777216),
	""conf_alias"" VARCHAR(16777216),
	""conf_id"" VARCHAR(16777216),
	""division_name"" VARCHAR(16777216),
	""division_alias"" VARCHAR(16777216),
	""division_id"" VARCHAR(16777216),
	""venue_id"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""logo_large"" VARCHAR(16777216),
	""logo_medium"" VARCHAR(16777216),
	""logo_small"" VARCHAR(16777216)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,5
table_name,TEAM_COLORS
description,
DDL,"create or replace TABLE TEAM_COLORS (
	""market"" VARCHAR(16777216),
	""id"" VARCHAR(16777216),
	""code_ncaa"" NUMBER(38,0),
	""color"" VARCHAR(16777216)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,6
table_name,MBB_PLAYERS_GAMES_SR
description,
DDL,"create or replace TABLE MBB_PLAYERS_GAMES_SR (
	""game_id"" VARCHAR(16777216),
	""season"" NUMBER(38,0),
	""neutral_site"" BOOLEAN,
	""scheduled_date"" DATE,
	""gametime"" NUMBER(38,0),
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""tournament_round"" VARCHAR(16777216),
	""tournament_game_no"" VARCHAR(16777216),
	""player_id"" VARCHAR(16777216),
	""last_name"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""full_name"" VARCHAR(16777216),
	""abbr_name"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""jersey_number"" NUMBER(38,0),
	""height"" NUMBER(38,0),
	""weight"" NUMBER(38,0),
	""birth_place"" VARCHAR(16777216),
	""birthplace_city"" VARCHAR(16777216),
	""birthplace_state"" VARCHAR(16777216),
	""birthplace_country"" VARCHAR(16777216),
	""class"" VARCHAR(16777216),
	""team_name"" VARCHAR(16777216),
	""team_market"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""team_alias"" VARCHAR(16777216),
	""conf_name"" VARCHAR(16777216),
	""conf_alias"" VARCHAR(16777216),
	""division_name"" VARCHAR(16777216),
	""division_alias"" VARCHAR(16777216),
	""league_name"" VARCHAR(16777216),
	""home_team"" BOOLEAN,
	""active"" BOOLEAN,
	""played"" BOOLEAN,
	""starter"" BOOLEAN,
	""minutes"" VARCHAR(16777216),
	""minutes_int64"" NUMBER(38,0),
	""position"" VARCHAR(16777216),
	""primary_position"" VARCHAR(16777216),
	""field_goals_made"" NUMBER(38,0),
	""field_goals_att"" NUMBER(38,0),
	""field_goals_pct"" FLOAT,
	""three_points_made"" NUMBER(38,0),
	""three_points_att"" NUMBER(38,0),
	""three_points_pct"" FLOAT,
	""two_points_made"" NUMBER(38,0),
	""two_points_att"" NUMBER(38,0),
	""two_points_pct"" FLOAT,
	""blocked_att"" NUMBER(38,0),
	""free_throws_made"" NUMBER(38,0),
	""free_throws_att"" NUMBER(38,0),
	""free_throws_pct"" FLOAT,
	""offensive_rebounds"" NUMBER(38,0),
	""defensive_rebounds"" NUMBER(38,0),
	""rebounds"" NUMBER(38,0),
	""assists"" NUMBER(38,0),
	""turnovers"" NUMBER(38,0),
	""steals"" NUMBER(38,0),
	""blocks"" NUMBER(38,0),
	""assists_turnover_ratio"" FLOAT,
	""personal_fouls"" NUMBER(38,0),
	""tech_fouls"" NUMBER(38,0),
	""flagrant_fouls"" NUMBER(38,0),
	""points"" NUMBER(38,0),
	""sp_created"" NUMBER(38,0)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,7
table_name,MASCOTS
description,
DDL,"create or replace TABLE MASCOTS (
	""id"" VARCHAR(16777216),
	""market"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""mascot"" VARCHAR(16777216),
	""mascot_name"" VARCHAR(16777216),
	""mascot_common_name"" VARCHAR(16777216),
	""tax_subspecies"" VARCHAR(16777216),
	""tax_species"" VARCHAR(16777216),
	""tax_genus"" VARCHAR(16777216),
	""tax_family"" VARCHAR(16777216),
	""tax_order"" VARCHAR(16777216),
	""tax_class"" VARCHAR(16777216),
	""tax_phylum"" VARCHAR(16777216),
	""tax_kingdom"" VARCHAR(16777216),
	""tax_domain"" VARCHAR(16777216),
	""non_tax_type"" VARCHAR(16777216)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,8
table_name,MBB_HISTORICAL_TEAMS_SEASONS
description,
DDL,"create or replace TABLE MBB_HISTORICAL_TEAMS_SEASONS (
	""season"" NUMBER(38,0),
	""market"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""team_code"" NUMBER(38,0),
	""team_id"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""division"" NUMBER(38,0),
	""current_division"" VARCHAR(16777216),
	""wins"" NUMBER(38,0),
	""losses"" NUMBER(38,0),
	""ties"" NUMBER(38,0)
);"

Database Name: NCAA_BASKETBALL
Schema Name: NCAA_BASKETBALL
,9
table_name,MBB_TEAMS_GAMES_SR
description,
DDL,"create or replace TABLE MBB_TEAMS_GAMES_SR (
	""game_id"" VARCHAR(16777216),
	""season"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""coverage"" VARCHAR(16777216),
	""neutral_site"" BOOLEAN,
	""scheduled_date"" DATE,
	""gametime"" NUMBER(38,0),
	""conference_game"" BOOLEAN,
	""tournament"" VARCHAR(16777216),
	""tournament_type"" VARCHAR(16777216),
	""tournament_round"" VARCHAR(16777216),
	""tournament_game_no"" VARCHAR(16777216),
	""attendance"" NUMBER(38,0),
	""lead_changes"" NUMBER(38,0),
	""times_tied"" NUMBER(38,0),
	""periods"" NUMBER(38,0),
	""possession_arrow"" VARCHAR(16777216),
	""venue_id"" VARCHAR(16777216),
	""venue_city"" VARCHAR(16777216),
	""venue_state"" VARCHAR(16777216),
	""venue_address"" VARCHAR(16777216),
	""venue_zip"" VARCHAR(16777216),
	""venue_country"" VARCHAR(16777216),
	""venue_name"" VARCHAR(16777216),
	""venue_capacity"" NUMBER(38,0),
	""home_team"" BOOLEAN,
	""name"" VARCHAR(16777216),
	""market"" VARCHAR(16777216),
	""team_id"" VARCHAR(16777216),
	""alias"" VARCHAR(16777216),
	""league_id"" VARCHAR(16777216),
	""league_name"" VARCHAR(16777216),
	""league_alias"" VARCHAR(16777216),
	""conf_id"" VARCHAR(16777216),
	""conf_name"" VARCHAR(16777216),
	""conf_alias"" VARCHAR(16777216),
	""division_id"" VARCHAR(16777216),
	""division_name"" VARCHAR(16777216),
	""division_alias"" VARCHAR(16777216),
	""logo_large"" VARCHAR(16777216),
	""logo_medium"" VARCHAR(16777216),
	""logo_small"" VARCHAR(16777216),
	""opp_name"" VARCHAR(16777216),
	""opp_market"" VARCHAR(16777216),
	""opp_id"" VARCHAR(16777216),
	""opp_alias"" VARCHAR(16777216),
	""opp_league_id"" VARCHAR(16777216),
	""opp_league_name"" VARCHAR(16777216),
	""opp_league_alias"" VARCHAR(16777216),
	""opp_conf_id"" VARCHAR(16777216),
	""opp_conf_name"" VARCHAR(16777216),
	""opp_conf_alias"" VARCHAR(16777216),
	""opp_division_id"" VARCHAR(16777216),
	""opp_division_name"" VARCHAR(16777216),
	""opp_division_alias"" VARCHAR(16777216),
	""opp_logo_large"" VARCHAR(16777216),
	""opp_logo_medium"" VARCHAR(16777216),
	""opp_logo_small"" VARCHAR(16777216),
	""win"" BOOLEAN,
	""points_game"" NUMBER(38,0),
	""minutes"" VARCHAR(16777216),
	""field_goals_made"" NUMBER(38,0),
	""field_goals_att"" NUMBER(38,0),
	""field_goals_pct"" FLOAT,
	""three_points_made"" NUMBER(38,0),
	""three_points_att"" NUMBER(38,0),
	""three_points_pct"" FLOAT,
	""two_points_made"" NUMBER(38,0),
	""two_points_att"" NUMBER(38,0),
	""two_points_pct"" FLOAT,
	""blocked_att"" NUMBER(38,0),
	""free_throws_made"" NUMBER(38,0),
	""free_throws_att"" NUMBER(38,0),
	""free_throws_pct"" FLOAT,
	""offensive_rebounds"" NUMBER(38,0),
	""defensive_rebounds"" NUMBER(38,0),
	""rebounds"" NUMBER(38,0),
	""assists"" NUMBER(38,0),
	""turnovers"" NUMBER(38,0),
	""steals"" NUMBER(38,0),
	""blocks"" NUMBER(38,0),
	""assists_turnover_ratio"" FLOAT,
	""personal_fouls"" NUMBER(38,0),
	""ejections"" NUMBER(38,0),
	""foulouts"" NUMBER(38,0),
	""points"" NUMBER(38,0),
	""fast_break_pts"" NUMBER(38,0),
	""second_chance_pts"" NUMBER(38,0),
	""team_turnovers"" NUMBER(38,0),
	""points_off_turnovers"" NUMBER(38,0),
	""team_rebounds"" NUMBER(38,0),
	""flagrant_fouls"" NUMBER(38,0),
	""player_tech_fouls"" NUMBER(38,0),
	""team_tech_fouls"" NUMBER(38,0),
	""coach_tech_fouls"" NUMBER(38,0),
	""opp_points_game"" NUMBER(38,0),
	""opp_minutes"" VARCHAR(16777216),
	""opp_field_goals_made"" NUMBER(38,0),
	""opp_field_goals_att"" NUMBER(38,0),
	""opp_field_goals_pct"" FLOAT,
	""opp_three_points_made"" NUMBER(38,0),
	""opp_three_points_att"" NUMBER(38,0),
	""opp_three_points_pct"" FLOAT,
	""opp_two_points_made"" NUMBER(38,0),
	""opp_two_points_att"" NUMBER(38,0),
	""opp_two_points_pct"" FLOAT,
	""opp_blocked_att"" NUMBER(38,0),
	""opp_free_throws_made"" NUMBER(38,0),
	""opp_free_throws_att"" NUMBER(38,0),
	""opp_free_throws_pct"" FLOAT,
	""opp_offensive_rebounds"" NUMBER(38,0),
	""opp_defensive_rebounds"" NUMBER(38,0),
	""opp_rebounds"" NUMBER(38,0),
	""opp_assists"" NUMBER(38,0),
	""opp_turnovers"" NUMBER(38,0),
	""opp_steals"" NUMBER(38,0),
	""opp_blocks"" NUMBER(38,0),
	""opp_assists_turnover_ratio"" FLOAT,
	""opp_personal_fouls"" NUMBER(38,0),
	""opp_ejections"" NUMBER(38,0),
	""opp_foulouts"" NUMBER(38,0),
	""opp_points"" NUMBER(38,0),
	""opp_fast_break_pts"" NUMBER(38,0),
	""opp_second_chance_pts"" NUMBER(38,0),
	""opp_team_turnovers"" NUMBER(38,0),
	""opp_points_off_turnovers"" NUMBER(38,0),
	""opp_team_rebounds"" NUMBER(38,0),
	""opp_flagrant_fouls"" NUMBER(38,0),
	""opp_player_tech_fouls"" NUMBER(38,0),
	""opp_team_tech_fouls"" NUMBER(38,0),
	""opp_coach_tech_fouls"" NUMBER(38,0),
	""created"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
# Score Intervals and Coordinates Logic

## Score Delta Intervals

To categorize the score deltas into intervals, the following conditions are used:

- **<-20**: When `score_delta < -20`
- **-20 — -11**: When `score_delta` is between -20 (inclusive) and -10 (exclusive)
- **-10 — -1**: When `score_delta` is between -10 (inclusive) and 0 (exclusive)
- **0**: When `score_delta` equals 0
- **1 — 10**: When `score_delta` is between 1 (inclusive) and 10 (inclusive)
- **11 — 20**: When `score_delta` is between 11 (exclusive) and 20 (inclusive)
- **>20**: When `score_delta > 20`

These intervals help in analyzing the performance based on the difference in team scores.

## X and Y Coordinates Calculation

Coordinates are adjusted based on the `event_coord_x` and `event_coord_y` values as follows:

- **X Coordinate**: 
  - If `event_coord_x < 564`: Use `event_coord_x` directly.
  - Otherwise: Calculate as `1128 - event_coord_x`.

- **Y Coordinate**: 
  - If `event_coord_x < 564`: Calculate as `600 - event_coord_y`.
  - Otherwise: Use `event_coord_y` directly.

The table structure information is ({database name: {schema name: [table name]}}): 
{'NCAA_BASKETBALL': {'NCAA_BASKETBALL': ['MBB_GAMES_SR', 'MBB_HISTORICAL_TOURNAMENT_GAMES', 'MBB_HISTORICAL_TEAMS_GAMES', 'MBB_PBP_SR', 'MBB_TEAMS', 'TEAM_COLORS', 'MBB_PLAYERS_GAMES_SR', 'MASCOTS', 'MBB_HISTORICAL_TEAMS_SEASONS', 'MBB_TEAMS_GAMES_SR']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"`

  - **"shot_type"**: Used to group shots by type.
  - **"event_coord_x", "event_coord_y"**: Coordinates of shots; need adjustment for consistency regarding the left or right basket.
  - **"shot_made"**: Indicates if the shot was successful.
  - **"team_basket"**: Helps ensure shots are on the correct side of the court based on the team's basket.
  - **"game_id"**: Used to join with other tables for additional information like the scheduled date.
  - **"scheduled_date"**: Needed to filter shots taken before March 15, 2018. In this table, it's a `NUMBER`, so joining with another table might be necessary to get the date in `DATE` format.

- **Table:** `NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR"`

  - **"game_id"**: Used to join with the `"MBB_PBP_SR"` table.
  - **"scheduled_date"**: `DATE` type; used to filter shots taken before March 15, 2018.

**Conditions that may be used:**

- Exclude records where **"shot_type"** is `NULL`.
- Exclude records where **"event_coord_x"** or **"event_coord_y"** are `NULL`.
- Filter shots taken **before March 15, 2018**.
- Ensure shots are on the correct side of the court based on **"team_basket"**.

---

**SQL Queries:**

```sql
-- 1. List distinct scheduled dates in MBB_PBP_SR to understand the date format
SELECT DISTINCT "scheduled_date"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
ORDER BY "scheduled_date" ASC
LIMIT 100;
```

```sql
-- 2. Examine shot types and their counts
SELECT "shot_type", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_type"
ORDER BY count DESC
LIMIT 100;
```

```sql
-- 3. Retrieve sample data with event coordinates
SELECT "event_coord_x", "event_coord_y", "shot_type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL
LIMIT 100;
```

```sql
-- 4. Check the range of event coordinates
SELECT MIN("event_coord_x") AS min_x, MAX("event_coord_x") AS max_x,
       MIN("event_coord_y") AS min_y, MAX("event_coord_y") AS max_y
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL;
```

```sql
-- 5. View distinct values of team_basket
SELECT DISTINCT "team_basket"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
LIMIT 100;
```

```sql
-- 6. Examine counts of shot_made values
SELECT "shot_made", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_made"
LIMIT 100;
```

```sql
-- 7. Get sample data with team_basket and coordinates
SELECT "team_basket", "event_coord_x", "event_coord_y", "shot_type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "team_basket" IS NOT NULL AND "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL
LIMIT 100;
```

```sql
-- 8. Join MBB_PBP_SR and MBB_GAMES_SR to get scheduled_date in DATE format
SELECT p."game_id", g."scheduled_date", p."shot_type", p."event_coord_x", p."event_coord_y"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE p."shot_type" IS NOT NULL AND p."event_coord_x" IS NOT NULL AND p."event_coord_y" IS NOT NULL
LIMIT 100;
```

```sql
-- 9. Check the earliest and latest scheduled dates in MBB_GAMES_SR
SELECT MIN("scheduled_date") AS earliest_date, MAX("scheduled_date") AS latest_date
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR";
```

```sql
-- 10. Count number of shots taken before March 15, 2018
SELECT COUNT(*) AS shot_count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE g."scheduled_date" < '2018-03-15' AND p."shot_type" IS NOT NULL AND p."event_coord_x" IS NOT NULL AND p."event_coord_y" IS NOT NULL;
```

```sql
-- 11. Examine relation between shot_made and points_scored
SELECT "shot_made", "points_scored", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_made", "points_scored"
ORDER BY count DESC
LIMIT 100;
```

```sql
-- 12. List distinct event types and types
SELECT DISTINCT "event_type", "type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
LIMIT 100;
```

---

These queries help in understanding the data and the relevant columns needed to perform the analysis for determining the average adjusted coordinates, shot attempts, and successful shots per shot type.Query:
-- 1. List distinct scheduled dates in MBB_PBP_SR to understand the date format
SELECT DISTINCT "scheduled_date"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
ORDER BY "scheduled_date" ASC
LIMIT 100;
Answer:
scheduled_date
1383940800000000
1383948000000000
1383951600000000
1383953400000000
1383955200000000
1383957000000000
1383958800000000
1383962400000000
1383962700000000
1383964200000000
1383966000000000
1383973200000000
1384016400000000
1384020000000000
1384030800000000
1384038000000000
1384041600000000
1384045200000000
1384047000000000
1384052400000000
1384106400000000
1384113600000000
1384117200000000
1384119000000000
1384124400000000
1384131600000000
1384138800000000
1384200000000000
1384214400000000
1384218000000000
1384221600000000
1384225200000000
1384228800000000
1384236000000000
1384272000000000
1384279200000000
1384286400000000
1384293600000000
1384297200000000
1384300800000000
1384302600000000
1384304400000000
1384308000000000
1384309800000000
1384315200000000
1384387200000000
1384389000000000
1384394400000000
1384401600000000
1384473600000000
1384475400000000
1384477200000000
1384480800000000
1384484700000000
1384488000000000
1384556400000000
1384560000000000
1384563600000000
1384565400000000
1384567200000000
1384570800000000
1384574400000000
1384621200000000
1384624800000000
1384628400000000
1384635600000000
1384637400000000
1384646400000000
1384650000000000
1384666200000000
1384707600000000
1384714800000000
1384722000000000
1384725600000000
1384729200000000
1384729500000000
1384732800000000
1384736400000000
1384819200000000
1384821000000000
1384822800000000
1384826400000000
1384833600000000
1384902000000000
1384905600000000
1384907400000000
1384909200000000
1384911000000000
1384912800000000
1384916700000000
1384920000000000
1384992000000000
1384993800000000
1384995600000000
1385001000000000
1385047800000000
1385055000000000
1385057400000000
1385065500000000
1385071200000000
Query:
-- 2. Examine shot types and their counts
SELECT "shot_type", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_type"
ORDER BY count DESC
LIMIT 100;
Answer:
shot_type,COUNT
jump shot,680076
layup,337805
dunk,41997
hook shot,11015
tip shot,6117
Query:
-- 3. Retrieve sample data with event coordinates
SELECT "event_coord_x", "event_coord_y", "shot_type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL
LIMIT 100;
Answer:
event_coord_x,event_coord_y,shot_type
996.0,339.0,layup
150.0,294.0,layup
945.0,239.0,
240.0,308.0,
81.0,163.0,
800.0,239.0,
101.0,273.0,
290.0,276.0,jump shot
239.0,314.0,
141.0,231.0,jump shot
246.0,286.0,
212.0,260.0,
894.0,303.0,
1051.0,318.0,layup
110.0,307.0,
295.0,272.0,
112.0,270.0,
91.0,279.0,
1004.0,264.0,
71.0,242.0,
886.0,513.0,
794.0,304.0,
87.0,564.0,
892.0,310.0,
896.0,297.0,
78.0,19.0,jump shot
1006.0,286.0,
1054.0,314.0,
1011.0,307.0,
416.0,178.0,
134.0,360.0,
72.0,272.0,
1040.0,344.0,layup
343.0,279.0,
1051.0,276.0,
1003.0,349.0,
228.0,296.0,
1024.0,312.0,
266.0,493.0,
1021.0,262.0,
198.0,246.0,
85.0,201.0,
945.0,228.0,layup
82.0,359.0,jump shot
77.0,331.0,
971.0,53.0,jump shot
118.0,300.0,layup
882.0,454.0,
1047.0,334.0,
291.0,101.0,jump shot
999.0,111.0,
226.0,300.0,
84.0,454.0,jump shot
295.0,264.0,jump shot
92.0,310.0,
1031.0,329.0,
244.0,277.0,
164.0,290.0,
98.0,300.0,
1051.0,245.0,
1011.0,334.0,
105.0,272.0,
315.0,396.0,
260.0,266.0,
1030.0,314.0,
880.0,311.0,
976.0,48.0,
999.0,274.0,
240.0,296.0,
983.0,41.0,
419.0,263.0,
923.0,537.0,
233.0,85.0,
87.0,291.0,
96.0,269.0,
394.0,312.0,
882.0,368.0,jump shot
132.0,270.0,jump shot
67.0,362.0,
87.0,300.0,
380.0,178.0,jump shot
154.0,270.0,
129.0,301.0,
218.0,176.0,
235.0,291.0,
240.0,256.0,
838.0,105.0,jump shot
149.0,290.0,
315.0,469.0,
95.0,202.0,
220.0,191.0,
1065.0,202.0,
246.0,315.0,
813.0,297.0,jump shot
1016.0,300.0,
872.0,78.0,jump shot
951.0,239.0,
927.0,283.0,jump shot
892.0,370.0,
243.0,294.0,
Query:
SELECT
    p."shot_type",
    AVG(
        CASE
            WHEN p."event_coord_x" < 564 THEN p."event_coord_x"
            ELSE 1128 - p."event_coord_x"
        END
    ) AS avg_adjusted_x,
    AVG(
        CASE
            WHEN p."event_coord_x" < 564 THEN 600 - p."event_coord_y"
            ELSE p."event_coord_y"
        END
    ) AS avg_adjusted_y,
    COUNT(*) AS avg_shot_attempts,
    SUM(CASE WHEN p."shot_made" = TRUE THEN 1 ELSE 0 END) AS avg_successful_shots
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE
    p."shot_type" IS NOT NULL
    AND p."event_coord_x" IS NOT NULL
    AND p."event_coord_y" IS NOT NULL
    AND g."scheduled_date" < '2018-03-15'
    AND (
        (p."event_coord_x" < 564 AND p."team_basket" = 'left')
        OR
        (p."event_coord_x" >= 564 AND p."team_basket" = 'right')
    )
GROUP BY p."shot_type";
Answer:
shot_type,AVG_ADJUSTED_X,AVG_ADJUSTED_Y,AVG_SHOT_ATTEMPTS,AVG_SUCCESSFUL_SHOTS
jump shot,211.25291442560925,297.78205423049815,673975,236173
layup,96.35235796498377,302.9383168189653,334759,183997
hook shot,124.90350309640448,304.56899898327015,10819,5184
dunk,90.50040861455629,301.2168060763388,41604,36850
tip shot,93.31835643895106,301.83831635209623,5987,3675
Query:
-- 5. View distinct values of team_basket
SELECT DISTINCT "team_basket"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
LIMIT 100;
Answer:
team_basket
right
""
left
Query:
-- 6. Examine counts of shot_made values
SELECT "shot_made", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_made"
LIMIT 100;
Answer:
shot_made,COUNT
True,469738
False,607272
Query:
-- 7. Get sample data with team_basket and coordinates
SELECT "team_basket", "event_coord_x", "event_coord_y", "shot_type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "team_basket" IS NOT NULL AND "event_coord_x" IS NOT NULL AND "event_coord_y" IS NOT NULL
LIMIT 100;
Answer:
team_basket,event_coord_x,event_coord_y,shot_type
right,996.0,339.0,layup
left,150.0,294.0,layup
left,945.0,239.0,
left,240.0,308.0,
left,81.0,163.0,
right,800.0,239.0,
right,101.0,273.0,
left,290.0,276.0,jump shot
left,239.0,314.0,
left,141.0,231.0,jump shot
left,246.0,286.0,
right,212.0,260.0,
right,894.0,303.0,
right,1051.0,318.0,layup
right,110.0,307.0,
left,295.0,272.0,
left,112.0,270.0,
left,91.0,279.0,
left,1004.0,264.0,
left,71.0,242.0,
right,886.0,513.0,
left,794.0,304.0,
right,87.0,564.0,
left,892.0,310.0,
right,896.0,297.0,
left,78.0,19.0,jump shot
right,1006.0,286.0,
right,1054.0,314.0,
right,1011.0,307.0,
left,416.0,178.0,
left,134.0,360.0,
left,72.0,272.0,
right,1040.0,344.0,layup
left,343.0,279.0,
right,1051.0,276.0,
right,1003.0,349.0,
left,228.0,296.0,
right,1024.0,312.0,
right,266.0,493.0,
right,1021.0,262.0,
left,198.0,246.0,
right,85.0,201.0,
right,945.0,228.0,layup
left,82.0,359.0,jump shot
right,77.0,331.0,
right,971.0,53.0,jump shot
left,118.0,300.0,layup
right,882.0,454.0,
right,1047.0,334.0,
left,291.0,101.0,jump shot
left,999.0,111.0,
left,226.0,300.0,
left,84.0,454.0,jump shot
left,295.0,264.0,jump shot
left,92.0,310.0,
right,1031.0,329.0,
left,244.0,277.0,
left,164.0,290.0,
left,98.0,300.0,
right,1051.0,245.0,
left,1011.0,334.0,
left,105.0,272.0,
right,315.0,396.0,
left,260.0,266.0,
right,1030.0,314.0,
right,880.0,311.0,
right,976.0,48.0,
right,999.0,274.0,
right,240.0,296.0,
right,983.0,41.0,
left,419.0,263.0,
right,923.0,537.0,
left,233.0,85.0,
right,87.0,291.0,
left,96.0,269.0,
right,394.0,312.0,
right,882.0,368.0,jump shot
left,132.0,270.0,jump shot
left,67.0,362.0,
right,87.0,300.0,
left,380.0,178.0,jump shot
right,154.0,270.0,
right,129.0,301.0,
right,218.0,176.0,
right,235.0,291.0,
left,240.0,256.0,
right,838.0,105.0,jump shot
left,149.0,290.0,
right,315.0,469.0,
left,95.0,202.0,
left,220.0,191.0,
right,1065.0,202.0,
left,246.0,315.0,
right,813.0,297.0,jump shot
right,1016.0,300.0,
right,872.0,78.0,jump shot
right,951.0,239.0,
right,927.0,283.0,jump shot
right,892.0,370.0,
left,243.0,294.0,
Query:
-- 8. Join MBB_PBP_SR and MBB_GAMES_SR to get scheduled_date in DATE format
SELECT p."game_id", g."scheduled_date", p."shot_type", p."event_coord_x", p."event_coord_y"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE p."shot_type" IS NOT NULL AND p."event_coord_x" IS NOT NULL AND p."event_coord_y" IS NOT NULL
LIMIT 100;
Answer:
Too long, hard cut:
game_id,scheduled_date,shot_type,event_coord_x,event_coord_y
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,88.0,255.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,99.0,255.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,71.0,327.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,240.0,177.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,237.0,336.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,208.0,231.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,339.0,356.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,119.0,219.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,hook shot,134.0,214.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,153.0,286.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,184.0,423.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,359.0,236.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,65.0,41.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,251.0,85.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,87.0,248.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,134.0,263.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,212.0,221.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,141.0,272.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,tip shot,88.0,266.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,tip shot,99.0,301.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,hook shot,140.0,304.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,130.0,92.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,273.0,324.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,92.0,248.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,89.0,329.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,91.0,246.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,72.0,328.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,dunk,85.0,300.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,336.0,328.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,181.0,533.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1037.0,332.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1050.0,334.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,962.0,39.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,790.0,368.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,935.0,132.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1076.0,557.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,848.0,109.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,813.0,400.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1083.0,46.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,808.0,403.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,773.0,336.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1010.0,301.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1027.0,346.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,808.0,341.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,841.0,130.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1020.0,358.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1054.0,339.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1027.0,303.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1009.0,331.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1024.0,262.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,975.0,253.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1048.0,338.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,layup,1048.0,328.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1013.0,459.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1055.0,417.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,dunk,1045.0,301.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,dunk,1052.0,312.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,838.0,125.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,838.0,133.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,880.0,489.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1090.0,29.0
d20765db-ba7f-4278-bad6-e1604c9bc0f0,2018-04-01,jump shot,1081.0,37.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,243.0,317.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,hook shot,972.0,290.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,hook shot,126.0,297.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,89.0,32.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,1026.0,397.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,layup,1006.0,236.0
7f167c26-7462-4111-88fa-3d6199c9a57d,2018-03-08,jump shot,956.0,260.0
f519a979-dada-49a1-a581-e85bdc2be8b0,2017-12-20,jump shot,779.0,294.0
8c4a1703-39d7-4539-88e3-30e456012364,2015-11-14,layup,86.0,324.0
8c4a1703-39d7-4539-88e3-30e456012364,2015-11-14,jump shot,305.0,406.0
8
Query:
-- 9. Check the earliest and latest scheduled dates in MBB_GAMES_SR
SELECT MIN("scheduled_date") AS earliest_date, MAX("scheduled_date") AS latest_date
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR";
Answer:
EARLIEST_DATE,LATEST_DATE
2013-11-08,2018-04-03
Query:
-- 10. Count number of shots taken before March 15, 2018
SELECT COUNT(*) AS shot_count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g ON p."game_id" = g."game_id"
WHERE g."scheduled_date" < '2018-03-15' AND p."shot_type" IS NOT NULL AND p."event_coord_x" IS NOT NULL AND p."event_coord_y" IS NOT NULL;
Answer:
SHOT_COUNT
1068844
Query:
-- 11. Examine relation between shot_made and points_scored
SELECT "shot_made", "points_scored", COUNT(*) AS count
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
WHERE "shot_type" IS NOT NULL
GROUP BY "shot_made", "points_scored"
ORDER BY count DESC
LIMIT 100;
Answer:
shot_made,points_scored,COUNT
False,,607272
True,2.0,337269
True,3.0,132469
Query:
-- 12. List distinct event types and types
SELECT DISTINCT "event_type", "type"
FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR"
LIMIT 100;
Answer:
event_type,type
offensivefoul,personalfoul
offensivefoul,fouldrawn
assist,assist
twopointmiss,
minortechnicalfoul,technicalfoul
offensivefoul,offensivefoul
technicalfoul,personalfoul
flagrantone,personalfoul
ejection,ejection
tvtimeout,
officialtimeout,
technicalfoul,technicalfoul
possession,
teamtimeout,
assist,threepointmade
flagrantone,flagrantfoul
clearpathfoul,personalfoul
defensivethreeseconds,
endperiod,
personalfoul,fouldrawn
laneviolation,
block,block
shootingfoul,fouldrawn
flagranttwo,personalfoul
freethrowmade,freethrow
opentip,
openinbound,
flagranttwo,fouldrawn
substitution,
lineupchange,
twopointmade,fieldgoal
attemptblocked,twopointmiss
flagrantone,fouldrawn
block,threepointmiss
rebound,
ejection,
threepointmade,fieldgoal
delay,
freethrow,
review,
deadball,
threepointmiss,fieldgoal
personalfoul,personalfoul
jumpball,
twopointmiss,fieldgoal
rebound,rebound
shootingfoul,personalfoul
kickball,
attemptblocked,threepointmiss
turnover,turnover
freethrowmiss,freethrow
flagranttwo,flagrantfoul
clearpathfoul,fouldrawn
turnover,steal
block,twopointmiss
attemptblocked,attemptblocked
assist,twopointmade
End Exploring Related Columns
Task: Could you determine, for each shot type, the average x and y coordinates (adjusted to ensure consistency regarding the left or right basket), the average number of shot attempts, and the average number of successful shots, considering only shots taken before March 15, 2018, excluding those with null shot types or coordinates, ensuring the shots are on the correct side of the court based on the team's basket.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: I'm unable to provide the exact statistics as I don't have access to the actual data. However, to achieve the desired results, you would need to process the data as follows:

1. **Data Filtering**:
   - Select records from the `MBB_PBP_SR` table.
   - Include only shots taken **before March 15, 2018**.
   - Exclude records where the `shot_type`, `event_coord_x`, or `event_coord_y` are NULL.
   - Ensure shots are on the **correct side of the court** based on the team's basket.

2. **Coordinate Adjustment**:
   - **X Coordinate**:
     - If `event_coord_x < 564`, use `event_coord_x` directly.
     - Else, calculate `adjusted_x = 1128 - event_coord_x`.
   - **Y Coordinate**:
     - If `event_coord_x < 564`, calculate `adjusted_y = 600 - event_coord_y`.
     - Else, use `event_coord_y` directly.

3. **Aggregation**:
   - Group the data by `shot_type`.
   - Calculate the following for each `shot_type`:
     - **Average Adjusted X Coordinate**: Mean of `adjusted_x`.
     - **Average Adjusted Y Coordinate**: Mean of `adjusted_y`.
     - **Average Number of Shot Attempts**: Average count of shots per game.
     - **Average Number of Successful Shots**: Average count of made shots per game.

The final output would be structured as:

```csv
shot_type,avg_adjusted_x,avg_adjusted_y,avg_shot_attempts,avg_successful_shots
```

Unfortunately, without access to the actual dataset, I cannot provide the specific values..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'NCAA_BASKETBALL': {'NCAA_BASKETBALL': ['MBB_GAMES_SR', 'MBB_HISTORICAL_TOURNAMENT_GAMES', 'MBB_HISTORICAL_TEAMS_GAMES', 'MBB_PBP_SR', 'MBB_TEAMS', 'TEAM_COLORS', 'MBB_PLAYERS_GAMES_SR', 'MASCOTS', 'MBB_HISTORICAL_TEAMS_SEASONS', 'MBB_TEAMS_GAMES_SR']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 02:05:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 02:05:50 - root - INFO - ```sql
WITH shot_data AS (
    SELECT
        p."game_id",
        p."shot_type",
        CASE
            WHEN p."event_coord_x" < 564 THEN p."event_coord_x"
            ELSE 1128 - p."event_coord_x"
        END AS "adjusted_x",
        CASE
            WHEN p."event_coord_x" < 564 THEN 600 - p."event_coord_y"
            ELSE p."event_coord_y"
        END AS "adjusted_y",
        p."shot_made"
    FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
    INNER JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g
        ON p."game_id" = g."game_id"
    WHERE
        p."shot_type" IS NOT NULL
        AND p."event_coord_x" IS NOT NULL
        AND p."event_coord_y" IS NOT NULL
        AND g."scheduled_date" < '2018-03-15'
        AND (
            (p."event_coord_x" < 564 AND p."team_basket" = 'left')
            OR
            (p."event_coord_x" >= 564 AND p."team_basket" = 'right')
        )
),
coordinate_avgs AS (
    SELECT
        "shot_type",
        AVG("adjusted_x") AS "avg_adjusted_x",
        AVG("adjusted_y") AS "avg_adjusted_y"
    FROM shot_data
    GROUP BY "shot_type"
),
per_game_stats AS (
    SELECT
        "shot_type",
        "game_id",
        COUNT(*) AS "shot_attempts",
        SUM(CASE WHEN "shot_made" = TRUE THEN 1 ELSE 0 END) AS "successful_shots"
    FROM shot_data
    GROUP BY "shot_type", "game_id"
),
avg_shot_stats AS (
    SELECT
        "shot_type",
        AVG("shot_attempts") AS "avg_shot_attempts",
        AVG("successful_shots") AS "avg_successful_shots"
    FROM per_game_stats
    GROUP BY "shot_type"
)
SELECT
    c."shot_type",
    c."avg_adjusted_x",
    c."avg_adjusted_y",
    a."avg_shot_attempts",
    a."avg_successful_shots"
FROM coordinate_avgs c
JOIN avg_shot_stats a ON c."shot_type" = a."shot_type"
ORDER BY c."shot_type";
```
2025-02-12 02:05:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:05:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:05:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:05:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 02:05:51 - snowflake.connector.connection - INFO - closed
2025-02-12 02:05:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:05:51 - root - INFO - itercount: 1
2025-02-12 02:05:51 - root - INFO - 0
2025-02-12 02:05:52 - root - INFO - results: 
shot_type,avg_adjusted_x,avg_adjusted_y,avg_shot_attempts,avg_successful_shots
dunk,90.50040861455629,301.2168060763388,4.609351,4.082650
hook shot,124.90350309640448,304.56899898327015,3.813535,1.827282
jump shot,211.25291442560925,297.78205423049815,72.090598,25.261846
layup,96.35235796498377,302.9383168189653,35.810762,19.683034
tip shot,93.31835643895106,301.83831635209623,2.191435,1.345168


2025-02-12 02:05:52 - root - INFO - Please check the answer again by reviewing Could you determine, for each shot type, the average x and y coordinates (adjusted to ensure consistency regarding the left or right basket), the average number of shot attempts, and the average number of successful shots, considering only shots taken before March 15, 2018, excluding those with null shot types or coordinates, ensuring the shots are on the correct side of the court based on the team's basket., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: I'm unable to provide the exact statistics as I don't have access to the actual data. However, to achieve the desired results, you would need to process the data as follows:

1. **Data Filtering**:
   - Select records from the `MBB_PBP_SR` table.
   - Include only shots taken **before March 15, 2018**.
   - Exclude records where the `shot_type`, `event_coord_x`, or `event_coord_y` are NULL.
   - Ensure shots are on the **correct side of the court** based on the team's basket.

2. **Coordinate Adjustment**:
   - **X Coordinate**:
     - If `event_coord_x < 564`, use `event_coord_x` directly.
     - Else, calculate `adjusted_x = 1128 - event_coord_x`.
   - **Y Coordinate**:
     - If `event_coord_x < 564`, calculate `adjusted_y = 600 - event_coord_y`.
     - Else, use `event_coord_y` directly.

3. **Aggregation**:
   - Group the data by `shot_type`.
   - Calculate the following for each `shot_type`:
     - **Average Adjusted X Coordinate**: Mean of `adjusted_x`.
     - **Average Adjusted Y Coordinate**: Mean of `adjusted_y`.
     - **Average Number of Shot Attempts**: Average count of shots per game.
     - **Average Number of Successful Shots**: Average count of made shots per game.

The final output would be structured as:

```csv
shot_type,avg_adjusted_x,avg_adjusted_y,avg_shot_attempts,avg_successful_shots
```

Unfortunately, without access to the actual dataset, I cannot provide the specific values. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
shot_type,avg_adjusted_x,avg_adjusted_y,avg_shot_attempts,avg_successful_shots
dunk,90.50040861455629,301.2168060763388,4.609351,4.082650
hook shot,124.90350309640448,304.56899898327015,3.813535,1.827282
jump shot,211.25291442560925,297.78205423049815,72.090598,25.261846
layup,96.35235796498377,302.9383168189653,35.810762,19.683034
tip shot,93.31835643895106,301.83831635209623,2.191435,1.345168
Current sql:
WITH shot_data AS (
    SELECT
        p."game_id",
        p."shot_type",
        CASE
            WHEN p."event_coord_x" < 564 THEN p."event_coord_x"
            ELSE 1128 - p."event_coord_x"
        END AS "adjusted_x",
        CASE
            WHEN p."event_coord_x" < 564 THEN 600 - p."event_coord_y"
            ELSE p."event_coord_y"
        END AS "adjusted_y",
        p."shot_made"
    FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
    INNER JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g
        ON p."game_id" = g."game_id"
    WHERE
        p."shot_type" IS NOT NULL
        AND p."event_coord_x" IS NOT NULL
        AND p."event_coord_y" IS NOT NULL
        AND g."scheduled_date" < '2018-03-15'
        AND (
            (p."event_coord_x" < 564 AND p."team_basket" = 'left')
            OR
            (p."event_coord_x" >= 564 AND p."team_basket" = 'right')
        )
),
coordinate_avgs AS (
    SELECT
        "shot_type",
        AVG("adjusted_x") AS "avg_adjusted_x",
        AVG("adjusted_y") AS "avg_adjusted_y"
    FROM shot_data
    GROUP BY "shot_type"
),
per_game_stats AS (
    SELECT
        "shot_type",
        "game_id",
        COUNT(*) AS "shot_attempts",
        SUM(CASE WHEN "shot_made" = TRUE THEN 1 ELSE 0 END) AS "successful_shots"
    FROM shot_data
    GROUP BY "shot_type", "game_id"
),
avg_shot_stats AS (
    SELECT
        "shot_type",
        AVG("shot_attempts") AS "avg_shot_attempts",
        AVG("successful_shots") AS "avg_successful_shots"
    FROM per_game_stats
    GROUP BY "shot_type"
)
SELECT
    c."shot_type",
    c."avg_adjusted_x",
    c."avg_adjusted_y",
    a."avg_shot_attempts",
    a."avg_successful_shots"
FROM coordinate_avgs c
JOIN avg_shot_stats a ON c."shot_type" = a."shot_type"
ORDER BY c."shot_type";
2025-02-12 02:06:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 02:06:18 - root - INFO - ```sql
WITH shot_data AS (
    SELECT
        p."game_id",
        p."shot_type",
        CASE
            WHEN p."event_coord_x" < 564 THEN p."event_coord_x"
            ELSE 1128 - p."event_coord_x"
        END AS "adjusted_x",
        CASE
            WHEN p."event_coord_x" < 564 THEN 600 - p."event_coord_y"
            ELSE p."event_coord_y"
        END AS "adjusted_y",
        p."shot_made"
    FROM NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_PBP_SR" p
    INNER JOIN NCAA_BASKETBALL.NCAA_BASKETBALL."MBB_GAMES_SR" g
        ON p."game_id" = g."game_id"
    WHERE
        p."shot_type" IS NOT NULL
        AND p."event_coord_x" IS NOT NULL
        AND p."event_coord_y" IS NOT NULL
        AND g."scheduled_date" < '2018-03-15'
        AND (
            (p."event_coord_x" < 564 AND p."team_basket" = 'left')
            OR
            (p."event_coord_x" >= 564 AND p."team_basket" = 'right')
        )
),
coordinate_avgs AS (
    SELECT
        "shot_type",
        ROUND(AVG("adjusted_x"), 4) AS "avg_adjusted_x",
        ROUND(AVG("adjusted_y"), 4) AS "avg_adjusted_y"
    FROM shot_data
    GROUP BY "shot_type"
),
per_game_stats AS (
    SELECT
        "shot_type",
        "game_id",
        COUNT(*) AS "shot_attempts",
        SUM(CASE WHEN "shot_made" = TRUE THEN 1 ELSE 0 END) AS "successful_shots"
    FROM shot_data
    GROUP BY "shot_type", "game_id"
),
avg_shot_stats AS (
    SELECT
        "shot_type",
        ROUND(AVG("shot_attempts"), 4) AS "avg_shot_attempts",
        ROUND(AVG("successful_shots"), 4) AS "avg_successful_shots"
    FROM per_game_stats
    GROUP BY "shot_type"
)
SELECT
    c."shot_type",
    c."avg_adjusted_x",
    c."avg_adjusted_y",
    a."avg_shot_attempts",
    a."avg_successful_shots"
FROM coordinate_avgs c
JOIN avg_shot_stats a ON c."shot_type" = a."shot_type"
ORDER BY c."shot_type";
```
2025-02-12 02:06:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 02:06:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 02:06:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 02:06:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 02:06:19 - snowflake.connector.connection - INFO - closed
2025-02-12 02:06:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 02:06:20 - root - INFO - itercount: 2
2025-02-12 02:06:20 - root - INFO - 0
2025-02-12 02:06:20 - root - INFO - Total iteration counts: 2
