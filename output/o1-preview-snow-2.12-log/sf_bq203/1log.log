2025-02-12 08:06:58 - openai._base_client - INFO - Retrying request to /chat/completions in 0.497712 seconds
2025-02-12 08:07:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 08:07:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:07:59 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:59 - root - INFO - SQL:
SELECT *
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   LIMIT 100;
Results:
Too long, hard cut:
station_id,complex_id,gtfs_stop_id,division,line,station_name,borough_name,daytime_routes,structure,north_direction_label,south_direction_label,station_lat,station_lon,station_geom
1,1,R01,BMT,Astoria,Astoria - Ditmars Blvd,Queens,N W,Elevated,,Manhattan,40.775036,-73.912034,bytearray(b'\x01\x01\x00\x00\x00\xc4\xb5\xda\xc3^zR\xc0\x80\x9c0a4cD@')
2,2,R03,BMT,Astoria,Astoria Blvd,Queens,N W,Elevated,Ditmars Blvd,Manhattan,40.770258,-73.917843,bytearray(b'\x01\x01\x00\x00\x004\xf7\x90\xf0\xbdzR\xc0\xbe\xbdk\xd0\x97bD@')
3,3,R04,BMT,Astoria,30 Av,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.766779,-73.921479,bytearray(b'\x01\x01\x00\x00\x00\xda<\x0e\x83\xf9zR\xc0:!t\xd0%bD@')
4,4,R05,BMT,Astoria,Broadway,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.76182,-73.925508,bytearray(b'\x01\x01\x00\x00\x00\xed\x0b\xe8\x85;{R\xc0(\xb8XQ\x83aD@')
5,5,R06,BMT,Astoria,36 Av,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.756804,-73.929575,bytearray(b'\x01\x01\x00\x00\x00x\x0b$(~{R\xc0\xb1\xbd\x16\xf4\xde`D@')
6,6,R08,BMT,Astoria,39 Av,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.752882,-73.932755,bytearray(b'\x01\x01\x00\x00\x00\x8d\x0b\x07B\xb2{R\xc0\xa0\xdf\xf7o^`D@')
7,613,R11,BMT,Astoria,Lexington Av/59 St,Manhattan,N W R,Subway,Queens,Downtown & Brooklyn,40.76266,-73.967258,bytearray(b'\x01\x01\x00\x00\x00\xd72\x19\x8e\xe7}R\xc0\xd2\xfb\xc6\xd7\x9eaD@')
8,8,R13,BMT,Astoria,5 Av/59 St,Manhattan,N W R,Subway,Queens,Downtown & Brooklyn,40.764811,-73.973347,bytearray(b'\x01\x01\x00\x00\x009*7QK~R\xc0~O\xacS\xe5aD@')
9,9,R14,BMT,Broadway - Brighton,57 St - 7 Av,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.764664,-73.980658,bytearray(b'\x01\x01\x00\x00\x00\xe4\xa3\xc5\x19\xc3~R\xc0\xdb6\x8c\x82\xe0aD@')
10,10,R15,BMT,Broadway - Brighton,49 St,Manhattan,N R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.759901,-73.984139,"bytearray(b'\x01\x01\x00\x00\x00\xf6\xed$""\xfc~R\xc0M\x99\x9boDaD@')"
11,611,R16,BMT,Broadway - Brighton,Times Sq - 42 St,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.754672,-73.986754,bytearray(b'\x01\x01\x00\x00\x00\x9f\xcc?\xfa&\x7fR\xc0|\x9a\x93\x17\x99`D@')
12,607,R17,BMT,Broadway - Brighton,34 St - Herald Sq,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.749567,-73.98795,bytearray(b'\x01\x01\x00\x00\x00S\x05\xa3\x92:\x7fR\xc0\x96\x94\xbb\xcf\xf1_D@')
13,13,R18,BMT,Broadway - Brighton,28 St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.745494,-73.988691,bytearray(b'\x01\x01\x00\x00\x00_\xb6\x9d\xb6F\x7fR\xc0\x9f\xae\xeeXl_D@')
14,14,R19,BMT,Broadway - Brighton,23 St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.741303,-73.989344,bytearray(b'\x01\x01\x00\x00\x00\x9b\x1f\x7fiQ\x7fR\xc0\x9f\xb6F\x04\xe3^D@')
15,602,R20,BMT,Broadway - Brighton,14 St - Union Sq,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.735736,-73.990568,"bytearray(b'\x01\x01\x00\x00\x00\xb4\x1dSwe\x7fR\xc0\xb4>\xe5\x98,^D@')"
16,16,R21,BMT,Broadway - Brighton,8 St - NYU,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.730328,-73.992629,bytearray(b'\x01\x01\x00\x00\x00\xea\x03\xc9;\x87\x7fR\xc03\xadMc{]D@')
17,17,R22,BMT,Broadway - Brighton,Prince St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.724329,-73.997702,bytearray(b'\x01\x01\x00\x00\x00\xd8I}Y\xda\x7fR\xc0\xaeE\x0b\xd0\xb6\\D@')
18,623,R23,BMT,Broadway,Canal St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.719527,-74.001775,bytearray(b'\x01\x01\x00\x00\x00\xd3\xbc\xe3\x14\x1d\x80R\xc0d\xcb\xf2u\x19\\D@')
19,623,Q01,BMT,Manhattan Bridge,Canal St,Manhattan,N Q,Subway,Uptown & Queens,Downtown & Brooklyn,40.718383,-74.00046,bytearray(b'\x01\x01\x00\x00\x002=a\x89\x07\x80R\xc0O\x80a\xf9\xf3[D@')
20,20,R24,BMT,Broadway,City Hall,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.713282,-74.006978,bytearray(b'\x01\x01\x00\x00\x00\xa8r\xdaSr\x80R\xc0\xa9i\x17\xd3L[D@')
21,624,R25,BMT,Broadway,Cortlandt St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.710668,-74.011029,bytearray(b'\x01\x01\x00\x00\x00\xaf\x93\xfa\xb2\xb4\x80R\xc0((E+\xf7ZD@')
22,22,R26,BMT,Broadway,Rector St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.70722,-74.013342,bytearray(b'\x01\x01\x00\x00\x00rjg\x98\xda\x80R\xc0\xdf\x89Y/\x86ZD@')
23,635,R27,BMT,Broadway,Whitehall St,Manhattan,R W,Subway,Uptown & Queens,Brooklyn,40.703087,-74.012994,bytearray(b'\x01\x01\x00\x00\x00\xd5B\xc9\xe4\xd4\x80R\xc0\x11\x9f;\xc1\xfeYD@')
24,620,R28,BMT,Broadway,Court St,Brooklyn,R,Subway,Manhattan,Bay Ridge - 95 St,40.6941,-73.991777,bytearray(b'\x01\x01\x00\x00\x003\xfb<Fy\x7fR\xc0\xa9\x13\xd0D\xd8XD@')
25,636,R29,BMT,Broadway,Jay St - MetroTech,Brooklyn,R,Subway,Manhattan,Bay Ridge - 95 St,40.69218,-73.985942,bytearray(b'\x01\x01\x00\x00\x00.py\xac\x19\x7fR\xc0\xffx\xafZ\x99XD@')
26,26,R30,BMT,Broadway - Brighton,DeKalb Av,Brooklyn,B Q R,Subway,Manhattan,Coney Island - Bay Ridge,40.690635,-73.981824,bytearray(b'\x01\x01

2025-02-12 08:07:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:00 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:01 - root - INFO - SQL:
SELECT DISTINCT "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
Results:
borough_name
Queens
Manhattan
Brooklyn
Bronx
Staten Island

2025-02-12 08:08:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 08:08:02 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:02 - root - INFO - SQL:
SELECT COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
Results:
total_stations
493

2025-02-12 08:08:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:03 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:04 - root - INFO - SQL:
SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   GROUP BY "borough_name"
   LIMIT 100;
Results:
borough_name,total_stations
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21

2025-02-12 08:08:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:05 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:08:05 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:06 - root - INFO - SQL:
SELECT *
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
Results:
Too long, hard cut:
division,line,station_name,station_lat,station_lon,route_1,route_2,route_3,route_4,route_5,route_6,route_7,route_8,route_9,route_10,route_11,entrance_type,staff,staff_hours,ada_notes,free_crossover,north_south_street,east_west_street,corner,entrance_lat,entrance_lon,entry,exit_only,vending,ada_compliant,station_geom,entrance_geom
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,FULL,,,True,William St,Wall St,NW,40.706506,-74.009544,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,FULL,,,True,William St,Wall St,NE,40.706392,-74.009332,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,NONE,,,True,William St,Wall St,SE,40.706272,-74.009447,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,NONE,,,True,William St,Pine St,SE,40.706755,-74.008804,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,NONE,,,True,William St,Wall St,SW,40.706385,-74.009658,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Easement,NONE,,,True,William St,Cedar St,NW,40.707431,-74.008778,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Stair,FULL,,,True,William St,Fulton St,SE,40.709475,-74.006409,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Easement,NONE,,,True,William St,Fulton St,SE,40.7092,-74.006664,False,False,False,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Easement,NONE,,,True,William St,John St,NE,40.70863,-74.006999,False,False,False,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Easement,NONE,,,True,William St,Fulton St,SE,40.709046,-74.006814,False,False,False,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Clark St,40.697466,-73.993086,2,3,,,,,,,,,,Door,FULL,,,True,Clark St,Henry St,NW,40.69759,-73.993275,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@'),bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@')
IRT,Clark,Clark St,40.697466,-73.993086,2,3,,,,,,,,,,Door,FULL,,,True,Clark St,Henry St,NW,40.697649,-73.99306,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@'),bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Elevator,FULL,,,True,Court Street,Montague Street,SE,40.693594,-73.990304,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693569,-73.990599,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693728,-73.99063,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Cadman Plaza West,Montague St,NE,40.693838,-73.990119,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Park Place,40.713051,-74.0088

2025-02-12 08:08:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-02-12 08:08:07 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:07 - root - INFO - SQL:
SELECT DISTINCT "station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "entry" = TRUE AND "ada_compliant" = TRUE
   LIMIT 100;
Results:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St

2025-02-12 08:08:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 08:08:08 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:09 - root - INFO - SQL:
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
   GROUP BY s."borough_name"
   LIMIT 100;
Results:
borough_name,ada_stations
Manhattan,13
Brooklyn,19
Bronx,4
Queens,2

2025-02-12 08:08:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:10 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:10 - root - INFO - SQL:
SELECT
     s."borough_name",
     COUNT(DISTINCT s."station_id") AS "total_stations",
     COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   GROUP BY s."borough_name"
   LIMIT 100;
Results:
borough_name,total_stations,ada_stations
Brooklyn,169,19
Queens,82,2
Bronx,70,4
Manhattan,151,13
Staten Island,21,0

2025-02-12 08:08:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:08:11 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:12 - root - INFO - SQL:
SELECT s."borough_name", s."station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   WHERE s."station_name" NOT IN (
     SELECT DISTINCT se."station_name"
     FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
   )
   LIMIT 100;
Results:
borough_name,station_name
Queens,Astoria - Ditmars Blvd
Queens,Astoria Blvd
Queens,30 Av
Queens,Broadway
Queens,36 Av
Queens,39 Av
Manhattan,Lexington Av/59 St
Manhattan,5 Av/59 St
Manhattan,57 St - 7 Av
Manhattan,49 St
Manhattan,Times Sq - 42 St
Manhattan,34 St - Herald Sq
Manhattan,28 St
Manhattan,23 St
Manhattan,14 St - Union Sq
Manhattan,8 St - NYU
Manhattan,Prince St
Manhattan,City Hall
Manhattan,Cortlandt St
Manhattan,Rector St
Manhattan,Whitehall St
Brooklyn,Court St
Brooklyn,Jay St - MetroTech
Brooklyn,Atlantic Av - Barclays Ctr
Brooklyn,Union St
Brooklyn,9 St
Brooklyn,Prospect Av
Brooklyn,25 St
Brooklyn,36 St
Brooklyn,45 St
Brooklyn,53 St
Brooklyn,59 St
Brooklyn,Bay Ridge Av
Brooklyn,77 St
Brooklyn,86 St
Brooklyn,Bay Ridge - 95 St
Brooklyn,Atlantic Av - Barclays Ctr
Brooklyn,7 Av
Brooklyn,Parkside Av
Brooklyn,Beverley Rd
Brooklyn,Cortelyou Rd
Brooklyn,Newkirk Plaza
Brooklyn,Avenue H
Brooklyn,Avenue J
Brooklyn,Avenue M
Brooklyn,Kings Hwy
Brooklyn,Avenue U
Brooklyn,Neck Rd
Brooklyn,Sheepshead Bay
Brooklyn,Brighton Beach
Brooklyn,Ocean Pkwy
Brooklyn,W 8 St - NY Aquarium
Brooklyn,Coney Island - Stillwell Av
Brooklyn,9 Av
Brooklyn,Fort Hamilton Pkwy
Brooklyn,50 St
Brooklyn,55 St
Brooklyn,62 St
Brooklyn,71 St
Brooklyn,79 St
Brooklyn,18 Av
Brooklyn,20 Av
Brooklyn,Bay Pkwy
Brooklyn,25 Av
Brooklyn,Bay 50 St
Brooklyn,8 Av
Brooklyn,Fort Hamilton Pkwy
Brooklyn,New Utrecht Av
Brooklyn,18 Av
Brooklyn,20 Av
Brooklyn,Bay Pkwy
Brooklyn,Kings Hwy
Brooklyn,Avenue U
Brooklyn,86 St
Queens,121 St
Queens,111 St
Queens,104 St
Queens,Woodhaven Blvd
Queens,85 St - Forest Pkwy
Queens,75 St
Brooklyn,Cypress Hills
Brooklyn,Crescent St
Brooklyn,Norwood Av
Brooklyn,Cleveland St
Brooklyn,Van Siclen Av
Brooklyn,Alabama Av
Brooklyn,Broadway Jct
Brooklyn,Chauncey St
Brooklyn,Halsey St
Brooklyn,Gates Av
Brooklyn,Kosciuszko St
Brooklyn,Lorimer St
Brooklyn,Hewes St
Manhattan,Essex St
Manhattan,Bowery
Manhattan,Fulton St
Manhattan,Broad St
Queens,Middle Village - Metropolitan Av
Queens,Fresh Pond Rd
Queens,Forest Av

2025-02-12 08:08:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:13 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:14 - root - INFO - SQL:
SELECT
      s."borough_name",
      COUNT(DISTINCT s."station_id") AS "total_stations",
      COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "ada_stations",
      (COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0) / COUNT(DISTINCT s."station_id") AS "percentage_ada_stations"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    GROUP BY s."borough_name"
    ORDER BY "percentage_ada_stations" DESC
    LIMIT 100;
Results:
borough_name,total_stations,ada_stations,percentage_ada_stations
Brooklyn,169,19,11.242604
Manhattan,151,13,8.609272
Bronx,70,4,5.714286
Queens,82,2,2.439024
Staten Island,21,0,0.000000

2025-02-12 08:08:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:08:15 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:15 - root - INFO - SQL:
SELECT *
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "entry" = TRUE AND "ada_compliant" = TRUE
    LIMIT 100;
Results:
Too long, hard cut:
division,line,station_name,station_lat,station_lon,route_1,route_2,route_3,route_4,route_5,route_6,route_7,route_8,route_9,route_10,route_11,entrance_type,staff,staff_hours,ada_notes,free_crossover,north_south_street,east_west_street,corner,entrance_lat,entrance_lon,entry,exit_only,vending,ada_compliant,station_geom,entrance_geom
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Elevator,FULL,,,True,Court Street,Montague Street,SE,40.693594,-73.990304,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693569,-73.990599,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693728,-73.99063,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Cadman Plaza West,Montague St,NE,40.693838,-73.990119,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,NONE,,,False,Lenox Ave,135th St,NE,40.814188,-73.940618,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,FULL,,,False,Lenox Ave,135th St,SW,40.814024,-73.941117,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,NONE,,,False,Lenox Ave,135th St,SE,40.813896,-73.940831,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,FULL,,,False,Lenox Ave,135th St,NW,40.814316,-73.94091,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IND,Fulton,Franklin Av,40.68138,-73.956848,A,C,FS,,,,,,,,,Stair,NONE,,,True,Franklin Ave,Fulton St,NE,40.681256,-73.95559,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\x8d\xcfd\xff<}R\xc0\x01\x13\xb8u7WD@'),bytearray(b'\x01\x01\x00\x00\x00\x8d\xcfd\xff<}R\xc0\x01\x13\xb8u7WD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,SE,40.675301,-73.871801,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,NE,40.675533,-73.871742,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,NW,40.675478,-73.872109,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,SW,40.675274,-73.872115,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Elevator,FULL,,,True,Pitkin,,NE,40.675554,-73.871875,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IRT,Jerome,Fordham Rd,40.862803,-73.901034,4,,,,,,,,,,,Stair,FULL,,,True,Jerome Ave,Fordham Rd,NE,40.862814,-73.900815,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@'),bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@')
IRT,Jerome,Fordham Rd,40.862803,-73.901034,4,,,,,,,,,,,Stair,FULL,,,True,Jerome Ave,Fordham Rd,SE,40.862592,-73.90097,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@'),bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@')
IRT,Jerome,Fordham Rd,40.862803,-73.901034,4,,,,,,,,,,,Stair,FULL,,,True,Jerome Ave,Fordham Rd,NW,40.86289,-73.901262,True,False,True,T

2025-02-12 08:08:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-02-12 08:08:16 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:17 - root - INFO - SQL:
SELECT "station_name", COUNT(*) AS "num_ada_entries"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "entry" = TRUE AND "ada_compliant" = TRUE
    GROUP BY "station_name"
    LIMIT 100;
Results:
station_name,num_ada_entries
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,9
42nd St,7
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,5
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,8
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,5
Times Square,9
South Ferry,4
Chambers St,5
Jackson Heights-Roosevelt Ave,4
21st St,5
59th St-Columbus Circle,3
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,5
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,4
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,5
72nd St,3

2025-02-12 08:08:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:08:18 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:18 - root - INFO - SQL:
SELECT
      s."station_id",
      s."station_name",
      s."borough_name",
      CASE WHEN SUM(CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN 1 ELSE 0 END) > 0 THEN TRUE ELSE FALSE END AS "has_ada_entry"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    GROUP BY s."station_id", s."station_name", s."borough_name"
    LIMIT 100;
Results:
station_id,station_name,borough_name,has_ada_entry
292,Fulton St,Brooklyn,False
412,Fulton St,Manhattan,False
415,Borough Hall,Brooklyn,True
178,Franklin Av,Brooklyn,True
139,Franklin Av,Brooklyn,True
182,Ralph Av,Brooklyn,False
176,Lafayette Av,Brooklyn,False
351,Van Siclen Av,Brooklyn,False
185,Liberty Av,Brooklyn,False
183,Rockaway Av,Brooklyn,False
381,Kingsbridge Rd,Bronx,False
378,Woodlawn,Bronx,False
113,Knickerbocker Av,Brooklyn,False
111,Seneca Av,Queens,False
103,Bowery,Manhattan,False
169,Canal St,Manhattan,True
325,Canal St,Manhattan,True
367,St Lawrence Av,Bronx,False
212,Kingsbridge Rd,Bronx,False
110,Forest Av,Queens,False
285,Metropolitan Av,Brooklyn,True
104,Canal St,Manhattan,True
410,Canal St,Manhattan,True
369,Elder Av,Bronx,False
371,Hunts Point Av,Bronx,False
370,Whitlock Av,Bronx,False
286,Broadway,Brooklyn,False
443,Baychester Av,Bronx,False
446,Morris Park,Bronx,False
192,Rockaway Blvd,Queens,False
233,Delancey St,Manhattan,False
173,High St,Brooklyn,False
53,Neck Rd,Brooklyn,False
358,Newkirk Av,Brooklyn,False
444,Gun Hill Rd,Bronx,False
189,Grant Av,Brooklyn,False
409,Spring St,Manhattan,False
46,Cortelyou Rd,Brooklyn,False
94,Halsey St,Brooklyn,False
99,Lorimer St,Brooklyn,False
349,Junius St,Brooklyn,False
354,Sterling St,Brooklyn,False
199,Broad Channel,Queens,False
344,Kingston Av,Brooklyn,False
87,Crescent St,Brooklyn,False
91,Alabama Av,Brooklyn,False
101,Marcy Av,Brooklyn,True
461,Queensboro Plaza,Queens,False
423,Allerton Av,Bronx,False
422,Burke Av,Bronx,False
308,Cathedral Pkwy,Manhattan,False
296,Marble Hill - 225 St,Manhattan,False
504,Clifton,Staten Island,False
221,21 St - Queensbridge,Queens,False
462,Court Sq,Queens,False
319,28 St,Manhattan,False
455,69 St,Queens,False
338,Atlantic Av - Barclays Ctr,Brooklyn,False
90,Van Siclen Av,Brooklyn,False
213,Fordham Rd,Bronx,True
186,Van Siclen Av,Brooklyn,False
375,Cypress Av,Bronx,False
361,Buhre Av,Bronx,False
36,Bay Ridge Av,Brooklyn,False
30,Prospect Av,Brooklyn,False
235,York St,Brooklyn,False
42,Prospect Park,Brooklyn,True
236,Bergen St,Brooklyn,False
24,Court St,Brooklyn,False
22,Rector St,Manhattan,False
135,Livonia Av,Brooklyn,False
125,Morgan Av,Brooklyn,False
451,Junction Blvd,Queens,True
347,Saratoga Av,Brooklyn,False
353,President St,Brooklyn,False
215,Tremont Av,Bronx,False
340,Grand Army Plaza,Brooklyn,False
83,Woodhaven Blvd,Queens,False
264,Woodhaven Blvd,Queens,False
299,Dyckman St,Manhattan,False
273,Queens Plaza,Queens,True
257,Sutphin Blvd,Queens,False
271,Steinway St,Queens,False
73,New Utrecht Av,Brooklyn,False
222,Roosevelt Island,Manhattan,True
86,Cypress Hills,Brooklyn,False
430,Simpson St,Bronx,True
433,Jackson Av,Bronx,False
305,137 St - City College,Manhattan,False
466,5 Av,Manhattan,False
265,Grand Av - Newtown,Queens,False
32,36 St,Brooklyn,False
272,36 St,Queens,False
512,Bay Terrace,Staten Island,False
108,Middle Village - Metropolitan Av,Queens,False
156,103 St,Manhattan,False
309,103 St,Manhattan,False
359,Flatbush Av - Brooklyn College,Brooklyn,False
397,86 St,Manhattan,False
328,WTC Cortlandt,Manhattan,False

2025-02-12 08:08:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:08:19 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:20 - root - INFO - SQL:
SELECT
      se."station_name",
      se."entrance_lat",
      se."entrance_lon",
      se."entry",
      se."ada_compliant"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
    LIMIT 100;
Results:
station_name,entrance_lat,entrance_lon,entry,ada_compliant
Borough Hall,40.693594,-73.990304,True,True
Borough Hall,40.693569,-73.990599,True,True
Borough Hall,40.693728,-73.99063,True,True
Borough Hall,40.693838,-73.990119,True,True
135th St,40.814188,-73.940618,True,True
135th St,40.814024,-73.941117,True,True
135th St,40.813896,-73.940831,True,True
135th St,40.814316,-73.94091,True,True
Franklin Av,40.681256,-73.95559,True,True
Euclid Av,40.675301,-73.871801,True,True
Euclid Av,40.675533,-73.871742,True,True
Euclid Av,40.675478,-73.872109,True,True
Euclid Av,40.675274,-73.872115,True,True
Euclid Av,40.675554,-73.871875,True,True
Fordham Rd,40.862814,-73.900815,True,True
Fordham Rd,40.862592,-73.90097,True,True
Fordham Rd,40.86289,-73.901262,True,True
Fordham Rd,40.862562,-73.901367,True,True
Yankee Stadium-161st St,40.827605,-73.926282,True,True
Yankee Stadium-161st St,40.827854,-73.925745,True,True
Yankee Stadium-161st St,40.827529,-73.926322,True,True
Yankee Stadium-161st St,40.827399,-73.926394,True,True
Yankee Stadium-161st St,40.827685,-73.925842,True,True
Yankee Stadium-161st St,40.827942,-73.926,True,True
Yankee Stadium-161st St,40.827461,-73.926362,True,True
Yankee Stadium-161st St,40.827759,-73.9261,True,True
Metropolitan Av,40.712082,-73.88954,True,True
Pelham Bay Park,40.853012,-73.827172,True,True
Pelham Bay Park,40.853041,-73.826991,True,True
Pelham Bay Park,40.852803,-73.827195,True,True
Pelham Bay Park,40.852824,-73.827035,True,True
Pelham Bay Park,40.852377,-73.825986,True,True
DeKalb Av,40.689817,-73.981082,True,True
DeKalb Av,40.68974,-73.981156,True,True
DeKalb Av,40.68981,-73.981651,True,True
DeKalb Av,40.69154,-73.982565,True,True
DeKalb Av,40.689804,-73.981164,True,True
DeKalb Av,40.691562,-73.982048,True,True
Pacific St,40.683928,-73.978412,True,True
Atlantic Av-Barclays Ctr,40.683805,-73.978487,True,True
Pacific St,40.683905,-73.978879,True,True
Church Av,40.644908,-73.980019,True,True
Church Av,40.643147,-73.979342,True,True
Church Av,40.643006,-73.97966,True,True
Church Av,40.645042,-73.979573,True,True
Church Av,40.642692,-73.97926,True,True
Church Av,40.642571,-73.979579,True,True
34th St,40.750088,-73.988142,True,True
34th St,40.749615,-73.988159,True,True
34th St,40.750404,-73.986989,True,True
34th St,40.74895,-73.988623,True,True
34th St,40.750674,-73.988031,True,True
34th St,40.750647,-73.987346,True,True
34th St,40.750271,-73.987066,True,True
34th St,40.748746,-73.988774,True,True
34th St,40.75088,-73.988096,True,True
34th St,40.749845,-73.988254,True,True
47-50th Sts Rockefeller Center,40.759414,-73.981035,True,True
47-50th Sts Rockefeller Center,40.758024,-73.982079,True,True
47-50th Sts Rockefeller Center,40.758615,-73.981095,True,True
47-50th Sts Rockefeller Center,40.759105,-73.981252,True,True
47-50th Sts Rockefeller Center,40.759434,-73.981001,True,True
47-50th Sts Rockefeller Center,40.757801,-73.981788,True,True
47-50th Sts Rockefeller Center,40.758977,-73.981352,True,True
47-50th Sts Rockefeller Center,40.757981,-73.98154,True,True
47-50th Sts Rockefeller Center,40.759953,-73.980117,True,True
47-50th Sts Rockefeller Center,40.760502,-73.980218,True,True
47-50th Sts Rockefeller Center,40.758996,-73.980788,True,True
47-50th Sts Rockefeller Center,40.759301,-73.980594,True,True
47-50th Sts Rockefeller Center,40.758486,-73.981158,True,True
47-50th Sts Rockefeller Center,40.758623,-73.981566,True,True
47-50th Sts Rockefeller Center,40.757862,-73.981735,True,True
47-50th Sts Rockefeller Center,40.759896,-73.980706,True,True
47-50th Sts Rockefeller Center,40.760125,-73.980499,True,True
168th St - Washington Heights,40.84186,-73.939569,True,True
168th St - Washington Heights,40.84176,-73.939067,True,True
168th St - Washington Heights,40.841928,-73.939455,True,True
168th St - Washington Heights,40.840741,-73.939252,True,True
West 4th St,40.733259,-73.999615,True,True
West 4th St,40.731133,-74.001534,True,True
West 4th St,40.731091,-74.001127,True,True
West 4th St,40.733072,-74.000192,True,True
West 4th St,40.731086,-74.001209,True,True
West 4th St,40.733067,-73.999728,True,True
34th St,40.751291,-73.993887,True,True
34th St,40.752689,-73.992742,True,True
34th St,40.753032,-73.993188,True,True
34th St,40.752161,-73.993109,True,True
34th St,40.751996,73.993327,True,True
34th St,40.752178,-73.993701,True,True
34th St,40.751539,-73.994181,True,True
34th St,40.75202,-73.993352,True,True
34th St,40.752796,-73.992669,True,True
34th St,40.751677,-73.994107,True,True
34th St,40.752766,-73.992596,True,True
34th St,40.752877,-73.993244,True,True
34th St,40.751561,-73.994243,True,True
34th St,40.752427,-73.993679,True,True
34th St,40.751432,-73.993538,True,True
34th St,40.753053,-73.993256,True,True

2025-02-12 08:08:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:08:21 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:21 - root - INFO - SQL:
SELECT
      se."station_name",
      COUNT(*) AS "total_entrances",
      SUM(CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN 1 ELSE 0 END) AS "ada_entrances"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    GROUP BY se."station_name"
    LIMIT 100;
Results:
station_name,total_entrances,ada_entrances
Wall St,14,0
Fulton St,17,0
Clark St,2,0
Borough Hall,9,9
Park Place,3,2
Harlem-148th St,1,0
135th St,10,4
125th St,19,5
145th St,13,0
116th St,12,0
18th Av,9,0
Av N,4,0
Kings Highway,9,0
Ditmas Av,4,0
Av X,2,0
Neptune Av-Van Siclen,2,0
Franklin Av,6,2
Ralph Av,3,0
Shepherd Av,4,0
Kingston-Throop,4,0
183rd St,3,0
Kingsbridge Rd,8,0
176th St,2,0
Knickerbocker Av,2,0
Forest Av,2,0
Central Av,2,0
Seneca Av,2,0
Broad St,9,0
St Lawrence Av,2,0
Cypress Av,4,0
Zerega Av,2,0
Parkchester-East 177th St,1,0
138th St-3rd Ave,7,0
Bay Parkway-22nd Av,5,0
Lafayette Av,9,0
Yankee Stadium-161st St,16,16
149th St-Grand Concourse,4,0
Woodlawn,2,0
170th St,8,0
Mosholu Parkway,4,0
Canal St,17,4
Chambers St,16,5
Brook Av,4,0
Pelham Bay Park,5,5
Broadway,7,0
Ditmars Blvd,4,0
Astoria Blvd-Hoyt Av,4,0
88th St-Boyd Av,2,0
95th St,5,0
Union St,4,0
Atlantic Av-Barclays Ctr,2,2
36th St,8,0
Cathedral Parkway-110th St,6,0
Av J,3,0
Atlantic Av,4,1
Av M,2,0
5th Av,10,0
34th St,41,41
49th St,7,7
Beach 98th St,3,0
Aqueduct Racetrack,1,0
20th Av,5,0
Freeman St,4,0
Av I,4,0
Av P,2,0
Nostrand Av,6,0
Clinton & Washington Avs,5,0
Liberty Av,4,0
Rockaway Av,8,0
Fordham Rd,10,4
167th St,10,0
Westchester Square-East Tremont Av,1,0
Castle Hill Av,2,0
Buhre Av,3,0
Elder Av,2,0
110th St-Central Park North,2,0
Av U,7,0
Utica Av,11,7
Euclid Av,5,5
Van Siclen Av,8,0
138th St,3,0
Mt Eden Av,2,0
Fresh Pond Rd,2,0
Metropolitan Av,5,1
Morrison Av-Soundview Av,3,0
Longwood Av,4,0
Jay St - Borough Hall,13,0
Bedford Park Blvd-Lehman College,1,0
Burnside Av,4,0
East 143rd St-St Mary's St,4,0
Whitlock Av,2,0
Middletown Rd,2,0
30 Av-Grand Av,4,0
Baychester Av,2,0
Gun Hill Rd,4,0
111th St-Greenwood Av,4,0
Grant Av,1,0
Bay Ridge Av,3,0
77th St,11,0
Prospect Av,8,0

2025-02-12 08:08:21 - root - INFO - itercount: 0
2025-02-12 08:08:21 - root - INFO - Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_311
,0
table_name,_311_SERVICE_REQUESTS
description,
DDL,"create or replace TABLE _311_SERVICE_REQUESTS (
	""unique_key"" NUMBER(38,0),
	""created_date"" NUMBER(38,0),
	""closed_date"" NUMBER(38,0),
	""agency"" VARCHAR(16777216),
	""agency_name"" VARCHAR(16777216),
	""complaint_type"" VARCHAR(16777216),
	""descriptor"" VARCHAR(16777216),
	""location_type"" VARCHAR(16777216),
	""incident_zip"" VARCHAR(16777216),
	""incident_address"" VARCHAR(16777216),
	""street_name"" VARCHAR(16777216),
	""cross_street_1"" VARCHAR(16777216),
	""cross_street_2"" VARCHAR(16777216),
	""intersection_street_1"" VARCHAR(16777216),
	""intersection_street_2"" VARCHAR(16777216),
	""address_type"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""landmark"" VARCHAR(16777216),
	""facility_type"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""due_date"" NUMBER(38,0),
	""resolution_description"" VARCHAR(16777216),
	""resolution_action_updated_date"" NUMBER(38,0),
	""community_board"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""x_coordinate"" NUMBER(38,0),
	""y_coordinate"" NUMBER(38,0),
	""park_facility_name"" VARCHAR(16777216),
	""park_borough"" VARCHAR(16777216),
	""bbl"" NUMBER(38,0),
	""open_data_channel_type"" VARCHAR(16777216),
	""vehicle_type"" VARCHAR(16777216),
	""taxi_company_borough"" VARCHAR(16777216),
	""taxi_pickup_location"" VARCHAR(16777216),
	""bridge_highway_name"" VARCHAR(16777216),
	""bridge_highway_direction"" VARCHAR(16777216),
	""road_ramp"" VARCHAR(16777216),
	""bridge_highway_segment"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_CITIBIKE
,0
table_name,CITIBIKE_STATIONS
description,
DDL,"create or replace TABLE CITIBIKE_STATIONS (
	""station_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_id"" NUMBER(38,0),
	""rental_methods"" VARCHAR(16777216),
	""capacity"" NUMBER(38,0),
	""eightd_has_key_dispenser"" BOOLEAN,
	""num_bikes_available"" NUMBER(38,0),
	""num_bikes_disabled"" NUMBER(38,0),
	""num_docks_available"" NUMBER(38,0),
	""num_docks_disabled"" NUMBER(38,0),
	""is_installed"" BOOLEAN,
	""is_renting"" BOOLEAN,
	""is_returning"" BOOLEAN,
	""eightd_has_available_keys"" BOOLEAN,
	""last_reported"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_CITIBIKE
,1
table_name,CITIBIKE_TRIPS
description,
DDL,"create or replace TABLE CITIBIKE_TRIPS (
	""tripduration"" NUMBER(38,0),
	""starttime"" NUMBER(38,0),
	""stoptime"" NUMBER(38,0),
	""start_station_id"" NUMBER(38,0),
	""start_station_name"" VARCHAR(16777216),
	""start_station_latitude"" FLOAT,
	""start_station_longitude"" FLOAT,
	""end_station_id"" NUMBER(38,0),
	""end_station_name"" VARCHAR(16777216),
	""end_station_latitude"" FLOAT,
	""end_station_longitude"" FLOAT,
	""bikeid"" NUMBER(38,0),
	""usertype"" VARCHAR(16777216),
	""birth_year"" NUMBER(38,0),
	""gender"" VARCHAR(16777216),
	""customer_plan"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_MV_COLLISIONS
,0
table_name,NYPD_MV_COLLISIONS
description,
DDL,"create or replace TABLE NYPD_MV_COLLISIONS (
	""borough"" VARCHAR(16777216),
	""contributing_factor_vehicle_1"" VARCHAR(16777216),
	""contributing_factor_vehicle_2"" VARCHAR(16777216),
	""contributing_factor_vehicle_3"" VARCHAR(16777216),
	""contributing_factor_vehicle_4"" VARCHAR(16777216),
	""contributing_factor_vehicle_5"" VARCHAR(16777216),
	""cross_street_name"" VARCHAR(16777216),
	""timestamp"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216),
	""number_of_cyclist_injured"" NUMBER(38,0),
	""number_of_cyclist_killed"" NUMBER(38,0),
	""number_of_motorist_injured"" NUMBER(38,0),
	""number_of_motorist_killed"" NUMBER(38,0),
	""number_of_pedestrians_injured"" NUMBER(38,0),
	""number_of_pedestrians_killed"" NUMBER(38,0),
	""number_of_persons_injured"" NUMBER(38,0),
	""number_of_persons_killed"" NUMBER(38,0),
	""off_street_name"" VARCHAR(16777216),
	""on_street_name"" VARCHAR(16777216),
	""unique_key"" NUMBER(38,0),
	""vehicle_type_code1"" VARCHAR(16777216),
	""vehicle_type_code2"" VARCHAR(16777216),
	""vehicle_type_code_3"" VARCHAR(16777216),
	""vehicle_type_code_4"" VARCHAR(16777216),
	""vehicle_type_code_5"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,0
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""station_id"" VARCHAR(16777216),
	""complex_id"" VARCHAR(16777216),
	""gtfs_stop_id"" VARCHAR(16777216),
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""daytime_routes"" VARCHAR(16777216),
	""structure"" VARCHAR(16777216),
	""north_direction_label"" VARCHAR(16777216),
	""south_direction_label"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""station_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,1
table_name,STATION_ENTRANCES
description,
DDL,"create or replace TABLE STATION_ENTRANCES (
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""route_1"" VARCHAR(16777216),
	""route_2"" VARCHAR(16777216),
	""route_3"" VARCHAR(16777216),
	""route_4"" VARCHAR(16777216),
	""route_5"" VARCHAR(16777216),
	""route_6"" VARCHAR(16777216),
	""route_7"" VARCHAR(16777216),
	""route_8"" VARCHAR(16777216),
	""route_9"" VARCHAR(16777216),
	""route_10"" VARCHAR(16777216),
	""route_11"" VARCHAR(16777216),
	""entrance_type"" VARCHAR(16777216),
	""staff"" VARCHAR(16777216),
	""staff_hours"" VARCHAR(16777216),
	""ada_notes"" VARCHAR(16777216),
	""free_crossover"" BOOLEAN,
	""north_south_street"" VARCHAR(16777216),
	""east_west_street"" VARCHAR(16777216),
	""corner"" VARCHAR(16777216),
	""entrance_lat"" FLOAT,
	""entrance_lon"" FLOAT,
	""entry"" BOOLEAN,
	""exit_only"" BOOLEAN,
	""vending"" BOOLEAN,
	""ada_compliant"" BOOLEAN,
	""station_geom"" BINARY(8388608),
	""entrance_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,2
table_name,GEO_NYC_BOROUGH_BOUNDARIES
description,
DDL,"create or replace TABLE GEO_NYC_BOROUGH_BOUNDARIES (
	""borough_code"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""borough_area"" FLOAT,
	""borough_len"" FLOAT,
	""borough_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,3
table_name,STOP_TIMES
description,
DDL,"create or replace TABLE STOP_TIMES (
	""trip_id"" VARCHAR(16777216),
	""arrival_time"" VARCHAR(16777216),
	""departure_time"" VARCHAR(16777216),
	""stop_id"" VARCHAR(16777216),
	""stop_sequence"" VARCHAR(16777216),
	""stop_headsign"" VARCHAR(16777216),
	""pickup_type"" VARCHAR(16777216),
	""dropoff_type"" VARCHAR(16777216),
	""shape_dist_traveled"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,4
table_name,ROUTES
description,
DDL,"create or replace TABLE ROUTES (
	""route_id"" VARCHAR(16777216),
	""route_short_name"" VARCHAR(16777216),
	""route_long_name"" VARCHAR(16777216),
	""route_describe"" VARCHAR(16777216),
	""route_type"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,5
table_name,STATION_COMPLEXES
description,
DDL,"create or replace TABLE STATION_COMPLEXES (
	""complex_id"" VARCHAR(16777216),
	""complex_name"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,6
table_name,SUBWAY_RIDERSHIP_2013_PRESENT
description,
DDL,"create or replace TABLE SUBWAY_RIDERSHIP_2013_PRESENT (
	""station_name"" VARCHAR(16777216),
	""routes"" VARCHAR(16777216),
	""ridership_2013"" NUMBER(38,0),
	""ridership_2014"" NUMBER(38,0),
	""ridership_2015"" NUMBER(38,0),
	""ridership_2016"" NUMBER(38,0),
	""ridership_2017"" NUMBER(38,0),
	""ridership_2018"" NUMBER(38,0),
	""change_2018_raw"" NUMBER(38,0),
	""change_2018_percent"" FLOAT,
	""rank_ridership_2018"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,7
table_name,TRIPS
description,
DDL,"create or replace TABLE TRIPS (
	""route_id"" VARCHAR(16777216),
	""service_id"" VARCHAR(16777216),
	""trip_id"" VARCHAR(16777216),
	""trip_headsign"" VARCHAR(16777216),
	""direction_id"" VARCHAR(16777216),
	""block_id"" VARCHAR(16777216),
	""shape_id"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,0
table_name,TLC_GREEN_TRIPS_2021
description,
DDL,"create or replace TABLE TLC_GREEN_TRIPS_2021 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""rate_code"" VARCHAR(16777216),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""ehail_fee"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""payment_type"" VARCHAR(16777216),
	""distance_between_service"" NUMBER(38,9),
	""time_between_service"" NUMBER(38,0),
	""trip_type"" VARCHAR(16777216),
	""imp_surcharge"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,1
table_name,TLC_YELLOW_TRIPS_2011
description,
DDL,"create or replace TABLE TLC_YELLOW_TRIPS_2011 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""rate_code"" VARCHAR(16777216),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""payment_type"" VARCHAR(16777216),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""imp_surcharge"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,2
table_name,TAXI_ZONE_GEOM
description,
DDL,"create or replace TABLE TAXI_ZONE_GEOM (
	""zone_id"" VARCHAR(16777216),
	""zone_name"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,3
table_name,TLC_FHV_TRIPS_2015
description,
DDL,"create or replace TABLE TLC_FHV_TRIPS_2015 (
	""location_id"" NUMBER(38,0),
	""pickup_datetime"" NUMBER(38,0),
	""dispatching_base_num"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""service_zone"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TREES
,0
table_name,TREE_CENSUS_2015
description,
DDL,"create or replace TABLE TREE_CENSUS_2015 (
	""tree_id"" NUMBER(38,0),
	""block_id"" NUMBER(38,0),
	""created_at"" DATE,
	""tree_dbh"" NUMBER(38,0),
	""stump_diam"" NUMBER(38,0),
	""curb_loc"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""health"" VARCHAR(16777216),
	""spc_latin"" VARCHAR(16777216),
	""spc_common"" VARCHAR(16777216),
	""steward"" VARCHAR(16777216),
	""guards"" VARCHAR(16777216),
	""sidewalk"" VARCHAR(16777216),
	""user_type"" VARCHAR(16777216),
	""problems"" VARCHAR(16777216),
	""root_stone"" VARCHAR(16777216),
	""root_grate"" VARCHAR(16777216),
	""root_other"" VARCHAR(16777216),
	""trunk_wire"" VARCHAR(16777216),
	""trnk_light"" VARCHAR(16777216),
	""trnk_other"" VARCHAR(16777216),
	""brch_light"" VARCHAR(16777216),
	""brch_shoe"" VARCHAR(16777216),
	""brch_other"" VARCHAR(16777216),
	""address"" VARCHAR(16777216),
	""zipcode"" NUMBER(38,0),
	""zip_city"" VARCHAR(16777216),
	""cb_num"" NUMBER(38,0),
	""borocode"" NUMBER(38,0),
	""boroname"" VARCHAR(16777216),
	""cncldist"" NUMBER(38,0),
	""st_assem"" NUMBER(38,0),
	""st_senate"" NUMBER(38,0),
	""nta"" VARCHAR(16777216),
	""nta_name"" VARCHAR(16777216),
	""boro_ct"" NUMBER(38,0),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""x_sp"" FLOAT,
	""y_sp"" FLOAT
);"

Some other tables have the similar structure: ['TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TREES
,1
table_name,TREE_SPECIES
description,
DDL,"create or replace TABLE TREE_SPECIES (
	""species_scientific_name"" VARCHAR(16777216),
	""species_common_name"" VARCHAR(16777216),
	""form"" VARCHAR(16777216),
	""growth_rate"" VARCHAR(16777216),
	""fall_color"" VARCHAR(16777216),
	""environmental_tolerances"" VARCHAR(16777216),
	""location_tolerances"" VARCHAR(16777216),
	""notes_suggested_cultivars"" VARCHAR(16777216),
	""tree_size"" VARCHAR(16777216),
	""comments"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['STATIONS', 'STATION_ENTRANCES', 'GEO_NYC_BOROUGH_BOUNDARIES', 'STOP_TIMES', 'ROUTES', 'STATION_COMPLEXES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021', 'TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016'], 'NEW_YORK_TREES': ['TREE_CENSUS_2015', 'TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995', 'TREE_SPECIES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `"NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"`
  - `"station_id"`: Used to uniquely identify each subway station.
  - `"station_name"`: Used to join with `STATION_ENTRANCES` table.
  - `"borough_name"`: Used to group stations by borough.
  
- **Table:** `"NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"`
  - `"station_name"`: Used to join with `STATIONS` table.
  - `"entry"`: (BOOLEAN) Used to identify entrances that are actual entry points (`TRUE` for entry).
  - `"ada_compliant"`: (BOOLEAN) Used to identify entrances that are ADA-compliant (`TRUE` for compliant).
  
**Potential Conditions:**

- Join `"STATIONS"` and `"STATION_ENTRANCES"` tables on `"station_name"`.
- Filter entrances where `"entry"` is `TRUE`.
- Filter entrances where `"ada_compliant"` is `TRUE`.
- Group by `"borough_name"` to aggregate data per borough.
- Use `DISTINCT` to count unique stations.

---

**SQL Queries:**

1. **View all stations (limited to 100 rows):**
   ```sql
   SELECT *
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   LIMIT 100;
   ```

2. **List all distinct borough names:**
   ```sql
   SELECT DISTINCT "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
   ```

3. **Count the total number of subway stations:**
   ```sql
   SELECT COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
   ```

4. **Count total stations per borough:**
   ```sql
   SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   GROUP BY "borough_name"
   LIMIT 100;
   ```

5. **View all station entrances (limited to 100 rows):**
   ```sql
   SELECT *
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
   ```

6. **List stations with entrances that are actual entries and ADA-compliant:**
   ```sql
   SELECT DISTINCT "station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "entry" = TRUE AND "ada_compliant" = TRUE
   LIMIT 100;
   ```

7. **Count the number of ADA-compliant stations per borough:**
   ```sql
   SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
   GROUP BY s."borough_name"
   LIMIT 100;
   ```

8. **Get total and ADA-compliant stations per borough:**
   ```sql
   SELECT
     s."borough_name",
     COUNT(DISTINCT s."station_id") AS "total_stations",
     COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   GROUP BY s."borough_name"
   LIMIT 100;
   ```

9. **List stations without ADA-compliant entries per borough:**
   ```sql
   SELECT s."borough_name", s."station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   WHERE s."station_name" NOT IN (
     SELECT DISTINCT se."station_name"
     FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
   )
   LIMIT 100;
   ```

10. **Calculate percentage of ADA-compliant stations per borough:**
    ```sql
    SELECT
      s."borough_name",
      COUNT(DISTINCT s."station_id") AS "total_stations",
      COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "ada_stations",
      (COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0) / COUNT(DISTINCT s."station_id") AS "percentage_ada_stations"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    GROUP BY s."borough_name"
    ORDER BY "percentage_ada_stations" DESC
    LIMIT 100;
    ```

11. **List all ADA-compliant entrances (limited to 100 rows):**
    ```sql
    SELECT *
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "entry" = TRUE AND "ada_compliant" = TRUE
    LIMIT 100;
    ```

12. **Count ADA-compliant entrances per station:**
    ```sql
    SELECT "station_name", COUNT(*) AS "num_ada_entries"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "entry" = TRUE AND "ada_compliant" = TRUE
    GROUP BY "station_name"
    LIMIT 100;
    ```

13. **List stations with their ADA compliance status:**
    ```sql
    SELECT
      s."station_id",
      s."station_name",
      s."borough_name",
      CASE WHEN SUM(CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN 1 ELSE 0 END) > 0 THEN TRUE ELSE FALSE END AS "has_ada_entry"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    GROUP BY s."station_id", s."station_name", s."borough_name"
    LIMIT 100;
    ```

14. **View detailed ADA-compliant entrances with location data:**
    ```sql
    SELECT
      se."station_name",
      se."entrance_lat",
      se."entrance_lon",
      se."entry",
      se."ada_compliant"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
    LIMIT 100;
    ```

15. **Count total entrances per station and ADA-compliant entrances per station:**
    ```sql
    SELECT
      se."station_name",
      COUNT(*) AS "total_entrances",
      SUM(CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN 1 ELSE 0 END) AS "ada_entrances"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    GROUP BY se."station_name"
    LIMIT 100;
    ```

These queries help in understanding the distribution of subway stations and entrances in New York City boroughs, and they explore the ADA compliance status of station entrances. They build up from simple data retrieval to more complex aggregations and calculations required to address the task.Query:
SELECT *
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   LIMIT 100;
Answer:
Too long, hard cut:
station_id,complex_id,gtfs_stop_id,division,line,station_name,borough_name,daytime_routes,structure,north_direction_label,south_direction_label,station_lat,station_lon,station_geom
1,1,R01,BMT,Astoria,Astoria - Ditmars Blvd,Queens,N W,Elevated,,Manhattan,40.775036,-73.912034,bytearray(b'\x01\x01\x00\x00\x00\xc4\xb5\xda\xc3^zR\xc0\x80\x9c0a4cD@')
2,2,R03,BMT,Astoria,Astoria Blvd,Queens,N W,Elevated,Ditmars Blvd,Manhattan,40.770258,-73.917843,bytearray(b'\x01\x01\x00\x00\x004\xf7\x90\xf0\xbdzR\xc0\xbe\xbdk\xd0\x97bD@')
3,3,R04,BMT,Astoria,30 Av,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.766779,-73.921479,bytearray(b'\x01\x01\x00\x00\x00\xda<\x0e\x83\xf9zR\xc0:!t\xd0%bD@')
4,4,R05,BMT,Astoria,Broadway,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.76182,-73.925508,bytearray(b'\x01\x01\x00\x00\x00\xed\x0b\xe8\x85;{R\xc0(\xb8XQ\x83aD@')
5,5,R06,BMT,Astoria,36 Av,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.756804,-73.929575,bytearray(b'\x01\x01\x00\x00\x00x\x0b$(~{R\xc0\xb1\xbd\x16\xf4\xde`D@')
6,6,R08,BMT,Astoria,39 Av,Queens,N W,Elevated,Astoria - Ditmars Blvd,Manhattan,40.752882,-73.932755,bytearray(b'\x01\x01\x00\x00\x00\x8d\x0b\x07B\xb2{R\xc0\xa0\xdf\xf7o^`D@')
7,613,R11,BMT,Astoria,Lexington Av/59 St,Manhattan,N W R,Subway,Queens,Downtown & Brooklyn,40.76266,-73.967258,bytearray(b'\x01\x01\x00\x00\x00\xd72\x19\x8e\xe7}R\xc0\xd2\xfb\xc6\xd7\x9eaD@')
8,8,R13,BMT,Astoria,5 Av/59 St,Manhattan,N W R,Subway,Queens,Downtown & Brooklyn,40.764811,-73.973347,bytearray(b'\x01\x01\x00\x00\x009*7QK~R\xc0~O\xacS\xe5aD@')
9,9,R14,BMT,Broadway - Brighton,57 St - 7 Av,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.764664,-73.980658,bytearray(b'\x01\x01\x00\x00\x00\xe4\xa3\xc5\x19\xc3~R\xc0\xdb6\x8c\x82\xe0aD@')
10,10,R15,BMT,Broadway - Brighton,49 St,Manhattan,N R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.759901,-73.984139,"bytearray(b'\x01\x01\x00\x00\x00\xf6\xed$""\xfc~R\xc0M\x99\x9boDaD@')"
11,611,R16,BMT,Broadway - Brighton,Times Sq - 42 St,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.754672,-73.986754,bytearray(b'\x01\x01\x00\x00\x00\x9f\xcc?\xfa&\x7fR\xc0|\x9a\x93\x17\x99`D@')
12,607,R17,BMT,Broadway - Brighton,34 St - Herald Sq,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.749567,-73.98795,bytearray(b'\x01\x01\x00\x00\x00S\x05\xa3\x92:\x7fR\xc0\x96\x94\xbb\xcf\xf1_D@')
13,13,R18,BMT,Broadway - Brighton,28 St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.745494,-73.988691,bytearray(b'\x01\x01\x00\x00\x00_\xb6\x9d\xb6F\x7fR\xc0\x9f\xae\xeeXl_D@')
14,14,R19,BMT,Broadway - Brighton,23 St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.741303,-73.989344,bytearray(b'\x01\x01\x00\x00\x00\x9b\x1f\x7fiQ\x7fR\xc0\x9f\xb6F\x04\xe3^D@')
15,602,R20,BMT,Broadway - Brighton,14 St - Union Sq,Manhattan,N Q R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.735736,-73.990568,"bytearray(b'\x01\x01\x00\x00\x00\xb4\x1dSwe\x7fR\xc0\xb4>\xe5\x98,^D@')"
16,16,R21,BMT,Broadway - Brighton,8 St - NYU,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.730328,-73.992629,bytearray(b'\x01\x01\x00\x00\x00\xea\x03\xc9;\x87\x7fR\xc03\xadMc{]D@')
17,17,R22,BMT,Broadway - Brighton,Prince St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.724329,-73.997702,bytearray(b'\x01\x01\x00\x00\x00\xd8I}Y\xda\x7fR\xc0\xaeE\x0b\xd0\xb6\\D@')
18,623,R23,BMT,Broadway,Canal St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.719527,-74.001775,bytearray(b'\x01\x01\x00\x00\x00\xd3\xbc\xe3\x14\x1d\x80R\xc0d\xcb\xf2u\x19\\D@')
19,623,Q01,BMT,Manhattan Bridge,Canal St,Manhattan,N Q,Subway,Uptown & Queens,Downtown & Brooklyn,40.718383,-74.00046,bytearray(b'\x01\x01\x00\x00\x002=a\x89\x07\x80R\xc0O\x80a\xf9\xf3[D@')
20,20,R24,BMT,Broadway,City Hall,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.713282,-74.006978,bytearray(b'\x01\x01\x00\x00\x00\xa8r\xdaSr\x80R\xc0\xa9i\x17\xd3L[D@')
21,624,R25,BMT,Broadway,Cortlandt St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.710668,-74.011029,bytearray(b'\x01\x01\x00\x00\x00\xaf\x93\xfa\xb2\xb4\x80R\xc0((E+\xf7ZD@')
22,22,R26,BMT,Broadway,Rector St,Manhattan,R W,Subway,Uptown & Queens,Downtown & Brooklyn,40.70722,-74.013342,bytearray(b'\x01\x01\x00\x00\x00rjg\x98\xda\x80R\xc0\xdf\x89Y/\x86ZD@')
23,635,R27,BMT,Broadway,Whitehall St,Manhattan,R W,Subway,Uptown & Queens,Brooklyn,40.703087,-74.012994,bytearray(b'\x01\x01\x00\x00\x00\xd5B\xc9\xe4\xd4\x80R\xc0\x11\x9f;\xc1\xfeYD@')
24,620,R28,BMT,Broadway,Court St,Brooklyn,R,Subway,Manhattan,Bay Ridge - 95 St,40.6941,-73.991777,bytearray(b'\x01\x01\x00\x00\x003\xfb<Fy\x7fR\xc0\xa9\x13\xd0D\xd8XD@')
25,636,R29,BMT,Broadway,Jay St - MetroTech,Brooklyn,R,Subway,Manhattan,Bay Ridge - 95 St,40.69218,-73.985942,bytearray(b'\x01\x01\x00\x00\x00.py\xac\x19\x7fR\xc0\xffx\xafZ\x99XD@')
26,26,R30,BMT,Broadway - Brighton,DeKalb Av,Brooklyn,B Q R,Subway,Manhattan,Coney Island - Bay Ridge,40.690635,-73.981824,bytearray(b'\x01\x01
Query:
SELECT DISTINCT "borough_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
Answer:
borough_name
Queens
Manhattan
Brooklyn
Bronx
Staten Island
Query:
SELECT COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS";
Answer:
total_stations
493
Query:
SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
   GROUP BY "borough_name"
   LIMIT 100;
Answer:
borough_name,total_stations
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21
Query:
SELECT *
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   LIMIT 100;
Answer:
Too long, hard cut:
division,line,station_name,station_lat,station_lon,route_1,route_2,route_3,route_4,route_5,route_6,route_7,route_8,route_9,route_10,route_11,entrance_type,staff,staff_hours,ada_notes,free_crossover,north_south_street,east_west_street,corner,entrance_lat,entrance_lon,entry,exit_only,vending,ada_compliant,station_geom,entrance_geom
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,FULL,,,True,William St,Wall St,NW,40.706506,-74.009544,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,FULL,,,True,William St,Wall St,NE,40.706392,-74.009332,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,NONE,,,True,William St,Wall St,SE,40.706272,-74.009447,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,NONE,,,True,William St,Pine St,SE,40.706755,-74.008804,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Stair,NONE,,,True,William St,Wall St,SW,40.706385,-74.009658,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Wall St,40.706821,-74.0091,2,3,,,,,,,,,,Easement,NONE,,,True,William St,Cedar St,NW,40.707431,-74.008778,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@'),bytearray(b'\x01\x01\x00\x00\x001\x99*\x18\x95\x80R\xc0!\x90K\x1cyZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Stair,FULL,,,True,William St,Fulton St,SE,40.709475,-74.006409,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Easement,NONE,,,True,William St,Fulton St,SE,40.7092,-74.006664,False,False,False,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Easement,NONE,,,True,William St,John St,NE,40.70863,-74.006999,False,False,False,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Fulton St,40.709416,-74.006571,A,C,J,Z,2,3,4,5,,,,Easement,NONE,,,True,William St,Fulton St,SE,40.709046,-74.006814,False,False,False,False,bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@'),bytearray(b'\x01\x01\x00\x00\x00\x87\x86\xc5\xa8k\x80R\xc0+\xa1\xbb$\xceZD@')
IRT,Clark,Clark St,40.697466,-73.993086,2,3,,,,,,,,,,Door,FULL,,,True,Clark St,Henry St,NW,40.69759,-73.993275,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@'),bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@')
IRT,Clark,Clark St,40.697466,-73.993086,2,3,,,,,,,,,,Door,FULL,,,True,Clark St,Henry St,NW,40.697649,-73.99306,True,False,True,False,bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@'),bytearray(b'\x01\x01\x00\x00\x00d\x07\x95\xb8\x8e\x7fR\xc04\t\xde\x90FYD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Elevator,FULL,,,True,Court Street,Montague Street,SE,40.693594,-73.990304,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693569,-73.990599,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693728,-73.99063,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Cadman Plaza West,Montague St,NE,40.693838,-73.990119,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Park Place,40.713051,-74.0088
Query:
SELECT DISTINCT "station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
   WHERE "entry" = TRUE AND "ada_compliant" = TRUE
   LIMIT 100;
Answer:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St
Query:
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
   GROUP BY s."borough_name"
   LIMIT 100;
Answer:
borough_name,ada_stations
Manhattan,13
Brooklyn,19
Bronx,4
Queens,2
Query:
SELECT
     s."borough_name",
     COUNT(DISTINCT s."station_id") AS "total_stations",
     COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "ada_stations"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     ON s."station_name" = se."station_name"
   GROUP BY s."borough_name"
   LIMIT 100;
Answer:
borough_name,total_stations,ada_stations
Brooklyn,169,19
Queens,82,2
Bronx,70,4
Manhattan,151,13
Staten Island,21,0
Query:
SELECT s."borough_name", s."station_name"
   FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
   WHERE s."station_name" NOT IN (
     SELECT DISTINCT se."station_name"
     FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
     WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
   )
   LIMIT 100;
Answer:
borough_name,station_name
Queens,Astoria - Ditmars Blvd
Queens,Astoria Blvd
Queens,30 Av
Queens,Broadway
Queens,36 Av
Queens,39 Av
Manhattan,Lexington Av/59 St
Manhattan,5 Av/59 St
Manhattan,57 St - 7 Av
Manhattan,49 St
Manhattan,Times Sq - 42 St
Manhattan,34 St - Herald Sq
Manhattan,28 St
Manhattan,23 St
Manhattan,14 St - Union Sq
Manhattan,8 St - NYU
Manhattan,Prince St
Manhattan,City Hall
Manhattan,Cortlandt St
Manhattan,Rector St
Manhattan,Whitehall St
Brooklyn,Court St
Brooklyn,Jay St - MetroTech
Brooklyn,Atlantic Av - Barclays Ctr
Brooklyn,Union St
Brooklyn,9 St
Brooklyn,Prospect Av
Brooklyn,25 St
Brooklyn,36 St
Brooklyn,45 St
Brooklyn,53 St
Brooklyn,59 St
Brooklyn,Bay Ridge Av
Brooklyn,77 St
Brooklyn,86 St
Brooklyn,Bay Ridge - 95 St
Brooklyn,Atlantic Av - Barclays Ctr
Brooklyn,7 Av
Brooklyn,Parkside Av
Brooklyn,Beverley Rd
Brooklyn,Cortelyou Rd
Brooklyn,Newkirk Plaza
Brooklyn,Avenue H
Brooklyn,Avenue J
Brooklyn,Avenue M
Brooklyn,Kings Hwy
Brooklyn,Avenue U
Brooklyn,Neck Rd
Brooklyn,Sheepshead Bay
Brooklyn,Brighton Beach
Brooklyn,Ocean Pkwy
Brooklyn,W 8 St - NY Aquarium
Brooklyn,Coney Island - Stillwell Av
Brooklyn,9 Av
Brooklyn,Fort Hamilton Pkwy
Brooklyn,50 St
Brooklyn,55 St
Brooklyn,62 St
Brooklyn,71 St
Brooklyn,79 St
Brooklyn,18 Av
Brooklyn,20 Av
Brooklyn,Bay Pkwy
Brooklyn,25 Av
Brooklyn,Bay 50 St
Brooklyn,8 Av
Brooklyn,Fort Hamilton Pkwy
Brooklyn,New Utrecht Av
Brooklyn,18 Av
Brooklyn,20 Av
Brooklyn,Bay Pkwy
Brooklyn,Kings Hwy
Brooklyn,Avenue U
Brooklyn,86 St
Queens,121 St
Queens,111 St
Queens,104 St
Queens,Woodhaven Blvd
Queens,85 St - Forest Pkwy
Queens,75 St
Brooklyn,Cypress Hills
Brooklyn,Crescent St
Brooklyn,Norwood Av
Brooklyn,Cleveland St
Brooklyn,Van Siclen Av
Brooklyn,Alabama Av
Brooklyn,Broadway Jct
Brooklyn,Chauncey St
Brooklyn,Halsey St
Brooklyn,Gates Av
Brooklyn,Kosciuszko St
Brooklyn,Lorimer St
Brooklyn,Hewes St
Manhattan,Essex St
Manhattan,Bowery
Manhattan,Fulton St
Manhattan,Broad St
Queens,Middle Village - Metropolitan Av
Queens,Fresh Pond Rd
Queens,Forest Av
Query:
SELECT
      s."borough_name",
      COUNT(DISTINCT s."station_id") AS "total_stations",
      COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "ada_stations",
      (COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0) / COUNT(DISTINCT s."station_id") AS "percentage_ada_stations"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    GROUP BY s."borough_name"
    ORDER BY "percentage_ada_stations" DESC
    LIMIT 100;
Answer:
borough_name,total_stations,ada_stations,percentage_ada_stations
Brooklyn,169,19,11.242604
Manhattan,151,13,8.609272
Bronx,70,4,5.714286
Queens,82,2,2.439024
Staten Island,21,0,0.000000
Query:
SELECT *
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "entry" = TRUE AND "ada_compliant" = TRUE
    LIMIT 100;
Answer:
Too long, hard cut:
division,line,station_name,station_lat,station_lon,route_1,route_2,route_3,route_4,route_5,route_6,route_7,route_8,route_9,route_10,route_11,entrance_type,staff,staff_hours,ada_notes,free_crossover,north_south_street,east_west_street,corner,entrance_lat,entrance_lon,entry,exit_only,vending,ada_compliant,station_geom,entrance_geom
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Elevator,FULL,,,True,Court Street,Montague Street,SE,40.693594,-73.990304,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693569,-73.990599,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Court St,Montague St,SW,40.693728,-73.99063,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Clark,Borough Hall,40.693219,-73.989998,R,2,3,4,5,,,,,,,Stair,FULL,,,True,Cadman Plaza West,Montague St,NE,40.693838,-73.990119,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@'),bytearray(b'\x01\x01\x00\x00\x00\xbfF\x92 \\\x7fR\xc0\xa0\xfbrf\xbbXD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,NONE,,,False,Lenox Ave,135th St,NE,40.814188,-73.940618,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,FULL,,,False,Lenox Ave,135th St,SW,40.814024,-73.941117,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,NONE,,,False,Lenox Ave,135th St,SE,40.813896,-73.940831,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IRT,Lenox,135th St,40.814229,-73.94077,2,3,,,,,,,,,,Stair,FULL,,,False,Lenox Ave,135th St,NW,40.814316,-73.94091,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@'),bytearray(b'\x01\x01\x00\x00\x00\xb5\xc3_\x935|R\xc06:\xe7\xa78hD@')
IND,Fulton,Franklin Av,40.68138,-73.956848,A,C,FS,,,,,,,,,Stair,NONE,,,True,Franklin Ave,Fulton St,NE,40.681256,-73.95559,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00\x8d\xcfd\xff<}R\xc0\x01\x13\xb8u7WD@'),bytearray(b'\x01\x01\x00\x00\x00\x8d\xcfd\xff<}R\xc0\x01\x13\xb8u7WD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,SE,40.675301,-73.871801,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,NE,40.675533,-73.871742,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,NW,40.675478,-73.872109,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Stair,FULL,,,True,Euclid Ave,Pitkin Ave,SW,40.675274,-73.872115,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IND,Fulton,Euclid Av,40.675377,-73.872106,A,C,,,,,,,,,,Elevator,FULL,,,True,Pitkin,,NE,40.675554,-73.871875,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@'),bytearray(b'\x01\x01\x00\x00\x00N)\xaf\x95\xd0wR\xc0<\xbc\xe7\xc0rVD@')
IRT,Jerome,Fordham Rd,40.862803,-73.901034,4,,,,,,,,,,,Stair,FULL,,,True,Jerome Ave,Fordham Rd,NE,40.862814,-73.900815,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@'),bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@')
IRT,Jerome,Fordham Rd,40.862803,-73.901034,4,,,,,,,,,,,Stair,FULL,,,True,Jerome Ave,Fordham Rd,SE,40.862592,-73.90097,True,False,True,True,bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@'),bytearray(b'\x01\x01\x00\x00\x00a\xa5\x82\x8a\xaayR\xc0\x03\xf2%TpnD@')
IRT,Jerome,Fordham Rd,40.862803,-73.901034,4,,,,,,,,,,,Stair,FULL,,,True,Jerome Ave,Fordham Rd,NW,40.86289,-73.901262,True,False,True,T
Query:
SELECT "station_name", COUNT(*) AS "num_ada_entries"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "entry" = TRUE AND "ada_compliant" = TRUE
    GROUP BY "station_name"
    LIMIT 100;
Answer:
station_name,num_ada_entries
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,9
42nd St,7
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,5
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,8
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,5
Times Square,9
South Ferry,4
Chambers St,5
Jackson Heights-Roosevelt Ave,4
21st St,5
59th St-Columbus Circle,3
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,5
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,4
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,5
72nd St,3
Query:
SELECT
      s."station_id",
      s."station_name",
      s."borough_name",
      CASE WHEN SUM(CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN 1 ELSE 0 END) > 0 THEN TRUE ELSE FALSE END AS "has_ada_entry"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
    LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
      ON s."station_name" = se."station_name"
    GROUP BY s."station_id", s."station_name", s."borough_name"
    LIMIT 100;
Answer:
station_id,station_name,borough_name,has_ada_entry
292,Fulton St,Brooklyn,False
412,Fulton St,Manhattan,False
415,Borough Hall,Brooklyn,True
178,Franklin Av,Brooklyn,True
139,Franklin Av,Brooklyn,True
182,Ralph Av,Brooklyn,False
176,Lafayette Av,Brooklyn,False
351,Van Siclen Av,Brooklyn,False
185,Liberty Av,Brooklyn,False
183,Rockaway Av,Brooklyn,False
381,Kingsbridge Rd,Bronx,False
378,Woodlawn,Bronx,False
113,Knickerbocker Av,Brooklyn,False
111,Seneca Av,Queens,False
103,Bowery,Manhattan,False
169,Canal St,Manhattan,True
325,Canal St,Manhattan,True
367,St Lawrence Av,Bronx,False
212,Kingsbridge Rd,Bronx,False
110,Forest Av,Queens,False
285,Metropolitan Av,Brooklyn,True
104,Canal St,Manhattan,True
410,Canal St,Manhattan,True
369,Elder Av,Bronx,False
371,Hunts Point Av,Bronx,False
370,Whitlock Av,Bronx,False
286,Broadway,Brooklyn,False
443,Baychester Av,Bronx,False
446,Morris Park,Bronx,False
192,Rockaway Blvd,Queens,False
233,Delancey St,Manhattan,False
173,High St,Brooklyn,False
53,Neck Rd,Brooklyn,False
358,Newkirk Av,Brooklyn,False
444,Gun Hill Rd,Bronx,False
189,Grant Av,Brooklyn,False
409,Spring St,Manhattan,False
46,Cortelyou Rd,Brooklyn,False
94,Halsey St,Brooklyn,False
99,Lorimer St,Brooklyn,False
349,Junius St,Brooklyn,False
354,Sterling St,Brooklyn,False
199,Broad Channel,Queens,False
344,Kingston Av,Brooklyn,False
87,Crescent St,Brooklyn,False
91,Alabama Av,Brooklyn,False
101,Marcy Av,Brooklyn,True
461,Queensboro Plaza,Queens,False
423,Allerton Av,Bronx,False
422,Burke Av,Bronx,False
308,Cathedral Pkwy,Manhattan,False
296,Marble Hill - 225 St,Manhattan,False
504,Clifton,Staten Island,False
221,21 St - Queensbridge,Queens,False
462,Court Sq,Queens,False
319,28 St,Manhattan,False
455,69 St,Queens,False
338,Atlantic Av - Barclays Ctr,Brooklyn,False
90,Van Siclen Av,Brooklyn,False
213,Fordham Rd,Bronx,True
186,Van Siclen Av,Brooklyn,False
375,Cypress Av,Bronx,False
361,Buhre Av,Bronx,False
36,Bay Ridge Av,Brooklyn,False
30,Prospect Av,Brooklyn,False
235,York St,Brooklyn,False
42,Prospect Park,Brooklyn,True
236,Bergen St,Brooklyn,False
24,Court St,Brooklyn,False
22,Rector St,Manhattan,False
135,Livonia Av,Brooklyn,False
125,Morgan Av,Brooklyn,False
451,Junction Blvd,Queens,True
347,Saratoga Av,Brooklyn,False
353,President St,Brooklyn,False
215,Tremont Av,Bronx,False
340,Grand Army Plaza,Brooklyn,False
83,Woodhaven Blvd,Queens,False
264,Woodhaven Blvd,Queens,False
299,Dyckman St,Manhattan,False
273,Queens Plaza,Queens,True
257,Sutphin Blvd,Queens,False
271,Steinway St,Queens,False
73,New Utrecht Av,Brooklyn,False
222,Roosevelt Island,Manhattan,True
86,Cypress Hills,Brooklyn,False
430,Simpson St,Bronx,True
433,Jackson Av,Bronx,False
305,137 St - City College,Manhattan,False
466,5 Av,Manhattan,False
265,Grand Av - Newtown,Queens,False
32,36 St,Brooklyn,False
272,36 St,Queens,False
512,Bay Terrace,Staten Island,False
108,Middle Village - Metropolitan Av,Queens,False
156,103 St,Manhattan,False
309,103 St,Manhattan,False
359,Flatbush Av - Brooklyn College,Brooklyn,False
397,86 St,Manhattan,False
328,WTC Cortlandt,Manhattan,False
Query:
SELECT
      se."station_name",
      se."entrance_lat",
      se."entrance_lon",
      se."entry",
      se."ada_compliant"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
    LIMIT 100;
Answer:
station_name,entrance_lat,entrance_lon,entry,ada_compliant
Borough Hall,40.693594,-73.990304,True,True
Borough Hall,40.693569,-73.990599,True,True
Borough Hall,40.693728,-73.99063,True,True
Borough Hall,40.693838,-73.990119,True,True
135th St,40.814188,-73.940618,True,True
135th St,40.814024,-73.941117,True,True
135th St,40.813896,-73.940831,True,True
135th St,40.814316,-73.94091,True,True
Franklin Av,40.681256,-73.95559,True,True
Euclid Av,40.675301,-73.871801,True,True
Euclid Av,40.675533,-73.871742,True,True
Euclid Av,40.675478,-73.872109,True,True
Euclid Av,40.675274,-73.872115,True,True
Euclid Av,40.675554,-73.871875,True,True
Fordham Rd,40.862814,-73.900815,True,True
Fordham Rd,40.862592,-73.90097,True,True
Fordham Rd,40.86289,-73.901262,True,True
Fordham Rd,40.862562,-73.901367,True,True
Yankee Stadium-161st St,40.827605,-73.926282,True,True
Yankee Stadium-161st St,40.827854,-73.925745,True,True
Yankee Stadium-161st St,40.827529,-73.926322,True,True
Yankee Stadium-161st St,40.827399,-73.926394,True,True
Yankee Stadium-161st St,40.827685,-73.925842,True,True
Yankee Stadium-161st St,40.827942,-73.926,True,True
Yankee Stadium-161st St,40.827461,-73.926362,True,True
Yankee Stadium-161st St,40.827759,-73.9261,True,True
Metropolitan Av,40.712082,-73.88954,True,True
Pelham Bay Park,40.853012,-73.827172,True,True
Pelham Bay Park,40.853041,-73.826991,True,True
Pelham Bay Park,40.852803,-73.827195,True,True
Pelham Bay Park,40.852824,-73.827035,True,True
Pelham Bay Park,40.852377,-73.825986,True,True
DeKalb Av,40.689817,-73.981082,True,True
DeKalb Av,40.68974,-73.981156,True,True
DeKalb Av,40.68981,-73.981651,True,True
DeKalb Av,40.69154,-73.982565,True,True
DeKalb Av,40.689804,-73.981164,True,True
DeKalb Av,40.691562,-73.982048,True,True
Pacific St,40.683928,-73.978412,True,True
Atlantic Av-Barclays Ctr,40.683805,-73.978487,True,True
Pacific St,40.683905,-73.978879,True,True
Church Av,40.644908,-73.980019,True,True
Church Av,40.643147,-73.979342,True,True
Church Av,40.643006,-73.97966,True,True
Church Av,40.645042,-73.979573,True,True
Church Av,40.642692,-73.97926,True,True
Church Av,40.642571,-73.979579,True,True
34th St,40.750088,-73.988142,True,True
34th St,40.749615,-73.988159,True,True
34th St,40.750404,-73.986989,True,True
34th St,40.74895,-73.988623,True,True
34th St,40.750674,-73.988031,True,True
34th St,40.750647,-73.987346,True,True
34th St,40.750271,-73.987066,True,True
34th St,40.748746,-73.988774,True,True
34th St,40.75088,-73.988096,True,True
34th St,40.749845,-73.988254,True,True
47-50th Sts Rockefeller Center,40.759414,-73.981035,True,True
47-50th Sts Rockefeller Center,40.758024,-73.982079,True,True
47-50th Sts Rockefeller Center,40.758615,-73.981095,True,True
47-50th Sts Rockefeller Center,40.759105,-73.981252,True,True
47-50th Sts Rockefeller Center,40.759434,-73.981001,True,True
47-50th Sts Rockefeller Center,40.757801,-73.981788,True,True
47-50th Sts Rockefeller Center,40.758977,-73.981352,True,True
47-50th Sts Rockefeller Center,40.757981,-73.98154,True,True
47-50th Sts Rockefeller Center,40.759953,-73.980117,True,True
47-50th Sts Rockefeller Center,40.760502,-73.980218,True,True
47-50th Sts Rockefeller Center,40.758996,-73.980788,True,True
47-50th Sts Rockefeller Center,40.759301,-73.980594,True,True
47-50th Sts Rockefeller Center,40.758486,-73.981158,True,True
47-50th Sts Rockefeller Center,40.758623,-73.981566,True,True
47-50th Sts Rockefeller Center,40.757862,-73.981735,True,True
47-50th Sts Rockefeller Center,40.759896,-73.980706,True,True
47-50th Sts Rockefeller Center,40.760125,-73.980499,True,True
168th St - Washington Heights,40.84186,-73.939569,True,True
168th St - Washington Heights,40.84176,-73.939067,True,True
168th St - Washington Heights,40.841928,-73.939455,True,True
168th St - Washington Heights,40.840741,-73.939252,True,True
West 4th St,40.733259,-73.999615,True,True
West 4th St,40.731133,-74.001534,True,True
West 4th St,40.731091,-74.001127,True,True
West 4th St,40.733072,-74.000192,True,True
West 4th St,40.731086,-74.001209,True,True
West 4th St,40.733067,-73.999728,True,True
34th St,40.751291,-73.993887,True,True
34th St,40.752689,-73.992742,True,True
34th St,40.753032,-73.993188,True,True
34th St,40.752161,-73.993109,True,True
34th St,40.751996,73.993327,True,True
34th St,40.752178,-73.993701,True,True
34th St,40.751539,-73.994181,True,True
34th St,40.75202,-73.993352,True,True
34th St,40.752796,-73.992669,True,True
34th St,40.751677,-73.994107,True,True
34th St,40.752766,-73.992596,True,True
34th St,40.752877,-73.993244,True,True
34th St,40.751561,-73.994243,True,True
34th St,40.752427,-73.993679,True,True
34th St,40.751432,-73.993538,True,True
34th St,40.753053,-73.993256,True,True
Query:
SELECT
      se."station_name",
      COUNT(*) AS "total_entrances",
      SUM(CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN 1 ELSE 0 END) AS "ada_entrances"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    GROUP BY se."station_name"
    LIMIT 100;
Answer:
station_name,total_entrances,ada_entrances
Wall St,14,0
Fulton St,17,0
Clark St,2,0
Borough Hall,9,9
Park Place,3,2
Harlem-148th St,1,0
135th St,10,4
125th St,19,5
145th St,13,0
116th St,12,0
18th Av,9,0
Av N,4,0
Kings Highway,9,0
Ditmas Av,4,0
Av X,2,0
Neptune Av-Van Siclen,2,0
Franklin Av,6,2
Ralph Av,3,0
Shepherd Av,4,0
Kingston-Throop,4,0
183rd St,3,0
Kingsbridge Rd,8,0
176th St,2,0
Knickerbocker Av,2,0
Forest Av,2,0
Central Av,2,0
Seneca Av,2,0
Broad St,9,0
St Lawrence Av,2,0
Cypress Av,4,0
Zerega Av,2,0
Parkchester-East 177th St,1,0
138th St-3rd Ave,7,0
Bay Parkway-22nd Av,5,0
Lafayette Av,9,0
Yankee Stadium-161st St,16,16
149th St-Grand Concourse,4,0
Woodlawn,2,0
170th St,8,0
Mosholu Parkway,4,0
Canal St,17,4
Chambers St,16,5
Brook Av,4,0
Pelham Bay Park,5,5
Broadway,7,0
Ditmars Blvd,4,0
Astoria Blvd-Hoyt Av,4,0
88th St-Boyd Av,2,0
95th St,5,0
Union St,4,0
Atlantic Av-Barclays Ctr,2,2
36th St,8,0
Cathedral Parkway-110th St,6,0
Av J,3,0
Atlantic Av,4,1
Av M,2,0
5th Av,10,0
34th St,41,41
49th St,7,7
Beach 98th St,3,0
Aqueduct Racetrack,1,0
20th Av,5,0
Freeman St,4,0
Av I,4,0
Av P,2,0
Nostrand Av,6,0
Clinton & Washington Avs,5,0
Liberty Av,4,0
Rockaway Av,8,0
Fordham Rd,10,4
167th St,10,0
Westchester Square-East Tremont Av,1,0
Castle Hill Av,2,0
Buhre Av,3,0
Elder Av,2,0
110th St-Central Park North,2,0
Av U,7,0
Utica Av,11,7
Euclid Av,5,5
Van Siclen Av,8,0
138th St,3,0
Mt Eden Av,2,0
Fresh Pond Rd,2,0
Metropolitan Av,5,1
Morrison Av-Soundview Av,3,0
Longwood Av,4,0
Jay St - Borough Hall,13,0
Bedford Park Blvd-Lehman College,1,0
Burnside Av,4,0
East 143rd St-St Mary's St,4,0
Whitlock Av,2,0
Middletown Rd,2,0
30 Av-Grand Av,4,0
Baychester Av,2,0
Gun Hill Rd,4,0
111th St-Greenwood Av,4,0
Grant Av,1,0
Bay Ridge Av,3,0
77th St,11,0
Prospect Av,8,0
End Exploring Related Columns
Task: For each New York City borough, how many subway stations are there in total, how many have at least one entrance that is marked both as an actual entry and as ADA-compliant, and what percentage of the total stations in each borough does this represent, listing boroughs from the highest to the lowest percentage?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Borough,Total_number_of_stations,Number_of_ADA_stations,Percentage_of_ADA_stations
borough_name:str,total_stations:int,ADA_stations:int,percentage:float between 0 and 100
...
(Ordered from highest to lowest percentage of ADA stations)
```

This table lists each New York City borough with the total number of subway stations, the number of stations that have at least one entrance marked both as an actual entry and ADA-compliant, and the percentage this represents of the total stations in each borough. The boroughs are ordered from the highest to the lowest percentage of ADA-compliant stations..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['STATIONS', 'STATION_ENTRANCES', 'GEO_NYC_BOROUGH_BOUNDARIES', 'STOP_TIMES', 'ROUTES', 'STATION_COMPLEXES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021', 'TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016'], 'NEW_YORK_TREES': ['TREE_CENSUS_2015', 'TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995', 'TREE_SPECIES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 08:08:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 08:08:41 - root - INFO - ```sql
SELECT
    s."borough_name" AS "Borough",
    COUNT(DISTINCT s."station_id") AS "Total_number_of_stations",
    COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "Number_of_ADA_stations",
    (COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0) / COUNT(DISTINCT s."station_id") AS "Percentage_of_ADA_stations"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s."station_name" = se."station_name"
GROUP BY s."borough_name"
ORDER BY "Percentage_of_ADA_stations" DESC;
```
2025-02-12 08:08:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:42 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:43 - root - INFO - itercount: 1
2025-02-12 08:08:43 - root - INFO - 0
2025-02-12 08:08:43 - root - INFO - results: 
Borough,Total_number_of_stations,Number_of_ADA_stations,Percentage_of_ADA_stations
Brooklyn,169,19,11.242604
Manhattan,151,13,8.609272
Bronx,70,4,5.714286
Queens,82,2,2.439024
Staten Island,21,0,0.000000


2025-02-12 08:08:43 - root - INFO - Please check the answer again by reviewing For each New York City borough, how many subway stations are there in total, how many have at least one entrance that is marked both as an actual entry and as ADA-compliant, and what percentage of the total stations in each borough does this represent, listing boroughs from the highest to the lowest percentage?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Borough,Total_number_of_stations,Number_of_ADA_stations,Percentage_of_ADA_stations
borough_name:str,total_stations:int,ADA_stations:int,percentage:float between 0 and 100
...
(Ordered from highest to lowest percentage of ADA stations)
```

This table lists each New York City borough with the total number of subway stations, the number of stations that have at least one entrance marked both as an actual entry and ADA-compliant, and the percentage this represents of the total stations in each borough. The boroughs are ordered from the highest to the lowest percentage of ADA-compliant stations. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Borough,Total_number_of_stations,Number_of_ADA_stations,Percentage_of_ADA_stations
Brooklyn,169,19,11.242604
Manhattan,151,13,8.609272
Bronx,70,4,5.714286
Queens,82,2,2.439024
Staten Island,21,0,0.000000
Current sql:
SELECT
    s."borough_name" AS "Borough",
    COUNT(DISTINCT s."station_id") AS "Total_number_of_stations",
    COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "Number_of_ADA_stations",
    (COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0) / COUNT(DISTINCT s."station_id") AS "Percentage_of_ADA_stations"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s."station_name" = se."station_name"
GROUP BY s."borough_name"
ORDER BY "Percentage_of_ADA_stations" DESC;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-02-12 08:09:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 08:09:18 - root - INFO - ```sql
SELECT
    s."borough_name" AS "Borough",
    COUNT(DISTINCT s."station_id") AS "Total_number_of_stations",
    COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS "Number_of_ADA_stations",
    ROUND((COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0) / COUNT(DISTINCT s."station_id"), 4) AS "Percentage_of_ADA_stations"
FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
LEFT JOIN "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES" se
    ON s."station_name" = se."station_name"
GROUP BY s."borough_name"
ORDER BY "Percentage_of_ADA_stations" DESC NULLS LAST;
```
2025-02-12 08:09:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:09:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:09:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:09:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:09:20 - snowflake.connector.connection - INFO - closed
2025-02-12 08:09:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:09:20 - root - INFO - itercount: 2
2025-02-12 08:09:20 - root - INFO - 0
2025-02-12 08:09:20 - root - INFO - Total iteration counts: 2
