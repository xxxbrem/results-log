2025-02-12 08:06:58 - openai._base_client - INFO - Retrying request to /chat/completions in 0.498168 seconds
2025-02-12 08:07:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 08:07:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:07:42 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:43 - root - INFO - SQL:
-- 1. List all distinct boroughs from the STATIONS table.
SELECT DISTINCT "borough_name"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
LIMIT 100;
Results:
borough_name
Queens
Manhattan
Brooklyn
Bronx
Staten Island

2025-02-12 08:07:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 08:07:44 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:44 - root - INFO - SQL:
-- 2. Count the total number of stations in the STATIONS table.
SELECT COUNT(DISTINCT "station_id") AS total_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
LIMIT 100;
Results:
TOTAL_STATIONS
493

2025-02-12 08:07:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:07:45 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:46 - root - INFO - SQL:
-- 3. Count the total number of stations in each borough.
SELECT "borough_name", COUNT(DISTINCT "station_id") AS total_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
GROUP BY "borough_name"
LIMIT 100;
Results:
borough_name,TOTAL_STATIONS
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21

2025-02-12 08:07:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:07:47 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:48 - root - INFO - SQL:
-- 4. List all entrances that are marked as actual entries.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE
LIMIT 100;
Results:
station_name,entrance_lat,entrance_lon
Wall St,40.706506,-74.009544
Wall St,40.706392,-74.009332
Wall St,40.706272,-74.009447
Wall St,40.706755,-74.008804
Wall St,40.706385,-74.009658
Wall St,40.707431,-74.008778
Fulton St,40.709475,-74.006409
Clark St,40.69759,-73.993275
Clark St,40.697649,-73.99306
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
Park Place,40.712712,-74.007766
Harlem-148th St,40.824069,-73.936981
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
125th St,40.807875,-73.945229
125th St,40.807995,-73.945524
125th St,40.807681,-73.945752
125th St,40.807548,-73.945463
110th St-Central Park North,40.799033,-73.952058
110th St-Central Park North,40.798497,-73.952672
145th St,40.820662,-73.936275
145th St,40.820343,-73.936508
116th St,40.801945,-73.949943
116th St,40.802229,-73.949734
116th St,40.802111,-73.949437
116th St,40.801822,-73.949651
18th Av,40.630531,-73.977251
18th Av,40.630562,-73.976995
18th Av,40.628674,-73.976892
18th Av,40.628708,-73.976646
Av N,40.61616,-73.97427
Av N,40.616121,-73.974507
Av N,40.614304,-73.97391
Av N,40.614279,-73.97418
Av I,40.626163,-73.976177
Av I,40.626133,-73.976407
Kings Highway,40.602178,-73.972379
Kings Highway,40.602197,-73.97264
Kings Highway,40.604007,-73.972393
Kings Highway,40.603999,-73.972124
Av P,40.609041,-73.972904
Av P,40.608615,-73.973097
Bay Parkway-22nd Av,40.620825,-73.975138
Bay Parkway-22nd Av,40.620797,-73.975479
Bay Parkway-22nd Av,40.621162,-73.975467
Av U,40.596897,-73.973137
Av U,40.596701,-73.973402
Ditmas Av,40.637093,-73.978463
Ditmas Av,40.637107,-73.978257
Ditmas Av,40.635389,-73.977914
Ditmas Av,40.635434,-73.978289
Av X,40.590521,-73.974242
Av X,40.590266,-73.974051
Neptune Av-Van Siclen,40.580547,-73.974778
Neptune Av-Van Siclen,40.580576,-73.974443
Franklin Av,40.681256,-73.95559
Ralph Av,40.678702,-73.921552
Ralph Av,40.678984,-73.921442
Ralph Av,40.679164,-73.92187
Lafayette Av,40.685559,-73.9729
Lafayette Av,40.686041,-73.974278
Lafayette Av,40.686409,-73.974347
Lafayette Av,40.686119,-73.974517
Lafayette Av,40.685789,-73.97276
Lafayette Av,40.686077,-73.973308
Lafayette Av,40.6857,-73.973526
Lafayette Av,40.685969,-73.973021
Lafayette Av,40.686553,-73.974606
Utica Av,40.679095,-73.930044
Utica Av,40.679346,-73.931987
Utica Av,40.67953,-73.932021
Utica Av,40.679487,-73.929725
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Shepherd Av,40.673989,-73.880869
Shepherd Av,40.67397,-73.880667
Shepherd Av,40.674303,-73.880749
Shepherd Av,40.674234,-73.880927
Nostrand Av,40.680228,-73.949414
Nostrand Av,40.680572,-73.949753
Nostrand Av,40.680262,-73.949635
Nostrand Av,40.680547,-73.949515
Kingston-Throop,40.679804,-73.941119
Kingston-Throop,40.679728,-73.941362
Kingston-Throop,40.680057,-73.940483
Kingston-Throop,40.68001,-73.940247
Clinton & Washington Avs,40.683653,-73.966797
Clinton & Washington Avs,40.683172,-73.964689
Clinton & Washington Avs,40.682868,-73.96463
Clinton & Washington Avs,40.683695,-73.967069
Jay St - Borough Hall,40.692393,-73.987443
Jay St - Borough Hall,40.692394,-73.987491

2025-02-12 08:07:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:07:49 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:49 - root - INFO - SQL:
-- 5. List all entrances that are ADA-compliant.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "ada_compliant" = TRUE
LIMIT 100;
Results:
station_name,entrance_lat,entrance_lon
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
Franklin Av,40.681256,-73.95559
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Fordham Rd,40.862814,-73.900815
Fordham Rd,40.862592,-73.90097
Fordham Rd,40.86289,-73.901262
Fordham Rd,40.862562,-73.901367
Yankee Stadium-161st St,40.827605,-73.926282
Yankee Stadium-161st St,40.827854,-73.925745
Yankee Stadium-161st St,40.827529,-73.926322
Yankee Stadium-161st St,40.827399,-73.926394
Yankee Stadium-161st St,40.827685,-73.925842
Yankee Stadium-161st St,40.827942,-73.926
Yankee Stadium-161st St,40.827461,-73.926362
Yankee Stadium-161st St,40.827759,-73.9261
Metropolitan Av,40.712082,-73.88954
Pelham Bay Park,40.853012,-73.827172
Pelham Bay Park,40.853041,-73.826991
Pelham Bay Park,40.852803,-73.827195
Pelham Bay Park,40.852824,-73.827035
Pelham Bay Park,40.852377,-73.825986
DeKalb Av,40.689817,-73.981082
DeKalb Av,40.68974,-73.981156
DeKalb Av,40.68981,-73.981651
DeKalb Av,40.69154,-73.982565
DeKalb Av,40.689804,-73.981164
DeKalb Av,40.691562,-73.982048
Pacific St,40.683928,-73.978412
Atlantic Av-Barclays Ctr,40.683805,-73.978487
Pacific St,40.683905,-73.978879
Church Av,40.644908,-73.980019
Church Av,40.643147,-73.979342
Church Av,40.643006,-73.97966
Church Av,40.645042,-73.979573
Church Av,40.642692,-73.97926
Church Av,40.642571,-73.979579
34th St,40.750088,-73.988142
34th St,40.749615,-73.988159
34th St,40.750404,-73.986989
34th St,40.74895,-73.988623
34th St,40.750674,-73.988031
34th St,40.750647,-73.987346
34th St,40.750271,-73.987066
34th St,40.748746,-73.988774
34th St,40.75088,-73.988096
34th St,40.749845,-73.988254
47-50th Sts Rockefeller Center,40.759414,-73.981035
47-50th Sts Rockefeller Center,40.758024,-73.982079
47-50th Sts Rockefeller Center,40.758615,-73.981095
47-50th Sts Rockefeller Center,40.759105,-73.981252
47-50th Sts Rockefeller Center,40.759434,-73.981001
47-50th Sts Rockefeller Center,40.757801,-73.981788
47-50th Sts Rockefeller Center,40.758977,-73.981352
47-50th Sts Rockefeller Center,40.757981,-73.98154
47-50th Sts Rockefeller Center,40.759953,-73.980117
47-50th Sts Rockefeller Center,40.760502,-73.980218
47-50th Sts Rockefeller Center,40.758996,-73.980788
47-50th Sts Rockefeller Center,40.759301,-73.980594
47-50th Sts Rockefeller Center,40.758486,-73.981158
47-50th Sts Rockefeller Center,40.758623,-73.981566
47-50th Sts Rockefeller Center,40.757862,-73.981735
47-50th Sts Rockefeller Center,40.759896,-73.980706
47-50th Sts Rockefeller Center,40.760125,-73.980499
168th St - Washington Heights,40.84186,-73.939569
168th St - Washington Heights,40.84176,-73.939067
168th St - Washington Heights,40.841928,-73.939455
168th St - Washington Heights,40.840741,-73.939252
West 4th St,40.733259,-73.999615
West 4th St,40.731133,-74.001534
West 4th St,40.731091,-74.001127
West 4th St,40.733072,-74.000192
West 4th St,40.731086,-74.001209
West 4th St,40.733067,-73.999728
34th St,40.751291,-73.993887
34th St,40.752689,-73.992742
34th St,40.753032,-73.993188
34th St,40.752161,-73.993109
34th St,40.751996,73.993327
34th St,40.752178,-73.993701
34th St,40.751539,-73.994181
34th St,40.75202,-73.993352
34th St,40.752796,-73.992669
34th St,40.751677,-73.994107
34th St,40.752766,-73.992596
34th St,40.752877,-73.993244
34th St,40.751561,-73.994243
34th St,40.752427,-73.993679
34th St,40.751432,-73.993538
34th St,40.753053,-73.993256

2025-02-12 08:07:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:07:50 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:51 - root - INFO - SQL:
-- 6. Find entrances that are both actual entries and ADA-compliant.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE AND "ada_compliant" = TRUE
LIMIT 100;
Results:
station_name,entrance_lat,entrance_lon
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
Franklin Av,40.681256,-73.95559
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Fordham Rd,40.862814,-73.900815
Fordham Rd,40.862592,-73.90097
Fordham Rd,40.86289,-73.901262
Fordham Rd,40.862562,-73.901367
Yankee Stadium-161st St,40.827605,-73.926282
Yankee Stadium-161st St,40.827854,-73.925745
Yankee Stadium-161st St,40.827529,-73.926322
Yankee Stadium-161st St,40.827399,-73.926394
Yankee Stadium-161st St,40.827685,-73.925842
Yankee Stadium-161st St,40.827942,-73.926
Yankee Stadium-161st St,40.827461,-73.926362
Yankee Stadium-161st St,40.827759,-73.9261
Metropolitan Av,40.712082,-73.88954
Pelham Bay Park,40.853012,-73.827172
Pelham Bay Park,40.853041,-73.826991
Pelham Bay Park,40.852803,-73.827195
Pelham Bay Park,40.852824,-73.827035
Pelham Bay Park,40.852377,-73.825986
DeKalb Av,40.689817,-73.981082
DeKalb Av,40.68974,-73.981156
DeKalb Av,40.68981,-73.981651
DeKalb Av,40.69154,-73.982565
DeKalb Av,40.689804,-73.981164
DeKalb Av,40.691562,-73.982048
Pacific St,40.683928,-73.978412
Atlantic Av-Barclays Ctr,40.683805,-73.978487
Pacific St,40.683905,-73.978879
Church Av,40.644908,-73.980019
Church Av,40.643147,-73.979342
Church Av,40.643006,-73.97966
Church Av,40.645042,-73.979573
Church Av,40.642692,-73.97926
Church Av,40.642571,-73.979579
34th St,40.750088,-73.988142
34th St,40.749615,-73.988159
34th St,40.750404,-73.986989
34th St,40.74895,-73.988623
34th St,40.750674,-73.988031
34th St,40.750647,-73.987346
34th St,40.750271,-73.987066
34th St,40.748746,-73.988774
34th St,40.75088,-73.988096
34th St,40.749845,-73.988254
47-50th Sts Rockefeller Center,40.759414,-73.981035
47-50th Sts Rockefeller Center,40.758024,-73.982079
47-50th Sts Rockefeller Center,40.758615,-73.981095
47-50th Sts Rockefeller Center,40.759105,-73.981252
47-50th Sts Rockefeller Center,40.759434,-73.981001
47-50th Sts Rockefeller Center,40.757801,-73.981788
47-50th Sts Rockefeller Center,40.758977,-73.981352
47-50th Sts Rockefeller Center,40.757981,-73.98154
47-50th Sts Rockefeller Center,40.759953,-73.980117
47-50th Sts Rockefeller Center,40.760502,-73.980218
47-50th Sts Rockefeller Center,40.758996,-73.980788
47-50th Sts Rockefeller Center,40.759301,-73.980594
47-50th Sts Rockefeller Center,40.758486,-73.981158
47-50th Sts Rockefeller Center,40.758623,-73.981566
47-50th Sts Rockefeller Center,40.757862,-73.981735
47-50th Sts Rockefeller Center,40.759896,-73.980706
47-50th Sts Rockefeller Center,40.760125,-73.980499
168th St - Washington Heights,40.84186,-73.939569
168th St - Washington Heights,40.84176,-73.939067
168th St - Washington Heights,40.841928,-73.939455
168th St - Washington Heights,40.840741,-73.939252
West 4th St,40.733259,-73.999615
West 4th St,40.731133,-74.001534
West 4th St,40.731091,-74.001127
West 4th St,40.733072,-74.000192
West 4th St,40.731086,-74.001209
West 4th St,40.733067,-73.999728
34th St,40.751291,-73.993887
34th St,40.752689,-73.992742
34th St,40.753032,-73.993188
34th St,40.752161,-73.993109
34th St,40.751996,73.993327
34th St,40.752178,-73.993701
34th St,40.751539,-73.994181
34th St,40.75202,-73.993352
34th St,40.752796,-73.992669
34th St,40.751677,-73.994107
34th St,40.752766,-73.992596
34th St,40.752877,-73.993244
34th St,40.751561,-73.994243
34th St,40.752427,-73.993679
34th St,40.751432,-73.993538
34th St,40.753053,-73.993256

2025-02-12 08:07:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-02-12 08:07:52 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:52 - root - INFO - SQL:
-- 7. List all distinct station names that have at least one ADA-compliant entry.
SELECT DISTINCT "station_name"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE AND "ada_compliant" = TRUE
LIMIT 100;
Results:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St

2025-02-12 08:07:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 08:07:53 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:53 - root - INFO - SQL:
-- 8. Join STATIONS and STATION_ENTRANCES to associate entrances with boroughs.
SELECT se."station_name", s."borough_name", se."entry", se."ada_compliant"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
INNER JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
  ON se."station_name" = s."station_name"
LIMIT 100;
Results:
station_name,borough_name,entry,ada_compliant
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Fulton St,Manhattan,True,False
Fulton St,Manhattan,True,False
Fulton St,Brooklyn,True,False
Fulton St,Manhattan,True,False
Fulton St,Manhattan,True,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Brooklyn,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Brooklyn,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Brooklyn,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Clark St,Brooklyn,True,False
Clark St,Brooklyn,True,False
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Ditmas Av,Brooklyn,True,False
Ditmas Av,Brooklyn,True,False
Ditmas Av,Brooklyn,True,False
Ditmas Av,Brooklyn,True,False
Franklin Av,Brooklyn,True,True
Franklin Av,Brooklyn,True,True
Franklin Av,Brooklyn,True,True
Ralph Av,Brooklyn,True,False
Ralph Av,Brooklyn,True,False
Ralph Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Shepherd Av,Brooklyn,True,False
Shepherd Av,Brooklyn,True,False
Shepherd Av,Brooklyn,True,False
Shepherd Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Rockaway Av,Brooklyn,False,False
Rockaway Av,Brooklyn,False,False

2025-02-12 08:07:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-02-12 08:07:54 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:55 - root - INFO - SQL:
-- 9. Count the number of ADA-compliant entries per station.
SELECT se."station_name", COUNT(*) AS ada_entry_count
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
GROUP BY se."station_name"
LIMIT 100;
Results:
station_name,ADA_ENTRY_COUNT
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,9
42nd St,7
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,5
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,8
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,5
Times Square,9
South Ferry,4
Chambers St,5
Jackson Heights-Roosevelt Ave,4
21st St,5
59th St-Columbus Circle,3
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,5
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,4
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,5
72nd St,3

2025-02-12 08:07:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:07:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:07:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:07:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 08:07:56 - snowflake.connector.connection - INFO - closed
2025-02-12 08:07:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:07:56 - root - INFO - SQL:
-- 10. Count the number of stations per borough that have at least one ADA-compliant entry.
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS ada_compliant_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
INNER JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
  ON s."station_name" = se."station_name"
WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
GROUP BY s."borough_name"
LIMIT 100;
Results:
borough_name,ADA_COMPLIANT_STATIONS
Brooklyn,19
Bronx,4
Queens,2
Manhattan,13

2025-02-12 08:07:56 - root - INFO - itercount: 0
2025-02-12 08:07:56 - root - INFO - Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_311
,0
table_name,_311_SERVICE_REQUESTS
description,
DDL,"create or replace TABLE _311_SERVICE_REQUESTS (
	""unique_key"" NUMBER(38,0),
	""created_date"" NUMBER(38,0),
	""closed_date"" NUMBER(38,0),
	""agency"" VARCHAR(16777216),
	""agency_name"" VARCHAR(16777216),
	""complaint_type"" VARCHAR(16777216),
	""descriptor"" VARCHAR(16777216),
	""location_type"" VARCHAR(16777216),
	""incident_zip"" VARCHAR(16777216),
	""incident_address"" VARCHAR(16777216),
	""street_name"" VARCHAR(16777216),
	""cross_street_1"" VARCHAR(16777216),
	""cross_street_2"" VARCHAR(16777216),
	""intersection_street_1"" VARCHAR(16777216),
	""intersection_street_2"" VARCHAR(16777216),
	""address_type"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""landmark"" VARCHAR(16777216),
	""facility_type"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""due_date"" NUMBER(38,0),
	""resolution_description"" VARCHAR(16777216),
	""resolution_action_updated_date"" NUMBER(38,0),
	""community_board"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""x_coordinate"" NUMBER(38,0),
	""y_coordinate"" NUMBER(38,0),
	""park_facility_name"" VARCHAR(16777216),
	""park_borough"" VARCHAR(16777216),
	""bbl"" NUMBER(38,0),
	""open_data_channel_type"" VARCHAR(16777216),
	""vehicle_type"" VARCHAR(16777216),
	""taxi_company_borough"" VARCHAR(16777216),
	""taxi_pickup_location"" VARCHAR(16777216),
	""bridge_highway_name"" VARCHAR(16777216),
	""bridge_highway_direction"" VARCHAR(16777216),
	""road_ramp"" VARCHAR(16777216),
	""bridge_highway_segment"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_CITIBIKE
,0
table_name,CITIBIKE_STATIONS
description,
DDL,"create or replace TABLE CITIBIKE_STATIONS (
	""station_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_id"" NUMBER(38,0),
	""rental_methods"" VARCHAR(16777216),
	""capacity"" NUMBER(38,0),
	""eightd_has_key_dispenser"" BOOLEAN,
	""num_bikes_available"" NUMBER(38,0),
	""num_bikes_disabled"" NUMBER(38,0),
	""num_docks_available"" NUMBER(38,0),
	""num_docks_disabled"" NUMBER(38,0),
	""is_installed"" BOOLEAN,
	""is_renting"" BOOLEAN,
	""is_returning"" BOOLEAN,
	""eightd_has_available_keys"" BOOLEAN,
	""last_reported"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_CITIBIKE
,1
table_name,CITIBIKE_TRIPS
description,
DDL,"create or replace TABLE CITIBIKE_TRIPS (
	""tripduration"" NUMBER(38,0),
	""starttime"" NUMBER(38,0),
	""stoptime"" NUMBER(38,0),
	""start_station_id"" NUMBER(38,0),
	""start_station_name"" VARCHAR(16777216),
	""start_station_latitude"" FLOAT,
	""start_station_longitude"" FLOAT,
	""end_station_id"" NUMBER(38,0),
	""end_station_name"" VARCHAR(16777216),
	""end_station_latitude"" FLOAT,
	""end_station_longitude"" FLOAT,
	""bikeid"" NUMBER(38,0),
	""usertype"" VARCHAR(16777216),
	""birth_year"" NUMBER(38,0),
	""gender"" VARCHAR(16777216),
	""customer_plan"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_MV_COLLISIONS
,0
table_name,NYPD_MV_COLLISIONS
description,
DDL,"create or replace TABLE NYPD_MV_COLLISIONS (
	""borough"" VARCHAR(16777216),
	""contributing_factor_vehicle_1"" VARCHAR(16777216),
	""contributing_factor_vehicle_2"" VARCHAR(16777216),
	""contributing_factor_vehicle_3"" VARCHAR(16777216),
	""contributing_factor_vehicle_4"" VARCHAR(16777216),
	""contributing_factor_vehicle_5"" VARCHAR(16777216),
	""cross_street_name"" VARCHAR(16777216),
	""timestamp"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216),
	""number_of_cyclist_injured"" NUMBER(38,0),
	""number_of_cyclist_killed"" NUMBER(38,0),
	""number_of_motorist_injured"" NUMBER(38,0),
	""number_of_motorist_killed"" NUMBER(38,0),
	""number_of_pedestrians_injured"" NUMBER(38,0),
	""number_of_pedestrians_killed"" NUMBER(38,0),
	""number_of_persons_injured"" NUMBER(38,0),
	""number_of_persons_killed"" NUMBER(38,0),
	""off_street_name"" VARCHAR(16777216),
	""on_street_name"" VARCHAR(16777216),
	""unique_key"" NUMBER(38,0),
	""vehicle_type_code1"" VARCHAR(16777216),
	""vehicle_type_code2"" VARCHAR(16777216),
	""vehicle_type_code_3"" VARCHAR(16777216),
	""vehicle_type_code_4"" VARCHAR(16777216),
	""vehicle_type_code_5"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,0
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""station_id"" VARCHAR(16777216),
	""complex_id"" VARCHAR(16777216),
	""gtfs_stop_id"" VARCHAR(16777216),
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""daytime_routes"" VARCHAR(16777216),
	""structure"" VARCHAR(16777216),
	""north_direction_label"" VARCHAR(16777216),
	""south_direction_label"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""station_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,1
table_name,STATION_ENTRANCES
description,
DDL,"create or replace TABLE STATION_ENTRANCES (
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""route_1"" VARCHAR(16777216),
	""route_2"" VARCHAR(16777216),
	""route_3"" VARCHAR(16777216),
	""route_4"" VARCHAR(16777216),
	""route_5"" VARCHAR(16777216),
	""route_6"" VARCHAR(16777216),
	""route_7"" VARCHAR(16777216),
	""route_8"" VARCHAR(16777216),
	""route_9"" VARCHAR(16777216),
	""route_10"" VARCHAR(16777216),
	""route_11"" VARCHAR(16777216),
	""entrance_type"" VARCHAR(16777216),
	""staff"" VARCHAR(16777216),
	""staff_hours"" VARCHAR(16777216),
	""ada_notes"" VARCHAR(16777216),
	""free_crossover"" BOOLEAN,
	""north_south_street"" VARCHAR(16777216),
	""east_west_street"" VARCHAR(16777216),
	""corner"" VARCHAR(16777216),
	""entrance_lat"" FLOAT,
	""entrance_lon"" FLOAT,
	""entry"" BOOLEAN,
	""exit_only"" BOOLEAN,
	""vending"" BOOLEAN,
	""ada_compliant"" BOOLEAN,
	""station_geom"" BINARY(8388608),
	""entrance_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,2
table_name,GEO_NYC_BOROUGH_BOUNDARIES
description,
DDL,"create or replace TABLE GEO_NYC_BOROUGH_BOUNDARIES (
	""borough_code"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""borough_area"" FLOAT,
	""borough_len"" FLOAT,
	""borough_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,3
table_name,STOP_TIMES
description,
DDL,"create or replace TABLE STOP_TIMES (
	""trip_id"" VARCHAR(16777216),
	""arrival_time"" VARCHAR(16777216),
	""departure_time"" VARCHAR(16777216),
	""stop_id"" VARCHAR(16777216),
	""stop_sequence"" VARCHAR(16777216),
	""stop_headsign"" VARCHAR(16777216),
	""pickup_type"" VARCHAR(16777216),
	""dropoff_type"" VARCHAR(16777216),
	""shape_dist_traveled"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,4
table_name,ROUTES
description,
DDL,"create or replace TABLE ROUTES (
	""route_id"" VARCHAR(16777216),
	""route_short_name"" VARCHAR(16777216),
	""route_long_name"" VARCHAR(16777216),
	""route_describe"" VARCHAR(16777216),
	""route_type"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,5
table_name,STATION_COMPLEXES
description,
DDL,"create or replace TABLE STATION_COMPLEXES (
	""complex_id"" VARCHAR(16777216),
	""complex_name"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,6
table_name,SUBWAY_RIDERSHIP_2013_PRESENT
description,
DDL,"create or replace TABLE SUBWAY_RIDERSHIP_2013_PRESENT (
	""station_name"" VARCHAR(16777216),
	""routes"" VARCHAR(16777216),
	""ridership_2013"" NUMBER(38,0),
	""ridership_2014"" NUMBER(38,0),
	""ridership_2015"" NUMBER(38,0),
	""ridership_2016"" NUMBER(38,0),
	""ridership_2017"" NUMBER(38,0),
	""ridership_2018"" NUMBER(38,0),
	""change_2018_raw"" NUMBER(38,0),
	""change_2018_percent"" FLOAT,
	""rank_ridership_2018"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
,7
table_name,TRIPS
description,
DDL,"create or replace TABLE TRIPS (
	""route_id"" VARCHAR(16777216),
	""service_id"" VARCHAR(16777216),
	""trip_id"" VARCHAR(16777216),
	""trip_headsign"" VARCHAR(16777216),
	""direction_id"" VARCHAR(16777216),
	""block_id"" VARCHAR(16777216),
	""shape_id"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,0
table_name,TLC_GREEN_TRIPS_2021
description,
DDL,"create or replace TABLE TLC_GREEN_TRIPS_2021 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""rate_code"" VARCHAR(16777216),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""ehail_fee"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""payment_type"" VARCHAR(16777216),
	""distance_between_service"" NUMBER(38,9),
	""time_between_service"" NUMBER(38,0),
	""trip_type"" VARCHAR(16777216),
	""imp_surcharge"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,1
table_name,TLC_YELLOW_TRIPS_2011
description,
DDL,"create or replace TABLE TLC_YELLOW_TRIPS_2011 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""rate_code"" VARCHAR(16777216),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""payment_type"" VARCHAR(16777216),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""imp_surcharge"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,2
table_name,TAXI_ZONE_GEOM
description,
DDL,"create or replace TABLE TAXI_ZONE_GEOM (
	""zone_id"" VARCHAR(16777216),
	""zone_name"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone_geom"" BINARY(8388608)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
,3
table_name,TLC_FHV_TRIPS_2015
description,
DDL,"create or replace TABLE TLC_FHV_TRIPS_2015 (
	""location_id"" NUMBER(38,0),
	""pickup_datetime"" NUMBER(38,0),
	""dispatching_base_num"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""service_zone"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TREES
,0
table_name,TREE_CENSUS_2015
description,
DDL,"create or replace TABLE TREE_CENSUS_2015 (
	""tree_id"" NUMBER(38,0),
	""block_id"" NUMBER(38,0),
	""created_at"" DATE,
	""tree_dbh"" NUMBER(38,0),
	""stump_diam"" NUMBER(38,0),
	""curb_loc"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""health"" VARCHAR(16777216),
	""spc_latin"" VARCHAR(16777216),
	""spc_common"" VARCHAR(16777216),
	""steward"" VARCHAR(16777216),
	""guards"" VARCHAR(16777216),
	""sidewalk"" VARCHAR(16777216),
	""user_type"" VARCHAR(16777216),
	""problems"" VARCHAR(16777216),
	""root_stone"" VARCHAR(16777216),
	""root_grate"" VARCHAR(16777216),
	""root_other"" VARCHAR(16777216),
	""trunk_wire"" VARCHAR(16777216),
	""trnk_light"" VARCHAR(16777216),
	""trnk_other"" VARCHAR(16777216),
	""brch_light"" VARCHAR(16777216),
	""brch_shoe"" VARCHAR(16777216),
	""brch_other"" VARCHAR(16777216),
	""address"" VARCHAR(16777216),
	""zipcode"" NUMBER(38,0),
	""zip_city"" VARCHAR(16777216),
	""cb_num"" NUMBER(38,0),
	""borocode"" NUMBER(38,0),
	""boroname"" VARCHAR(16777216),
	""cncldist"" NUMBER(38,0),
	""st_assem"" NUMBER(38,0),
	""st_senate"" NUMBER(38,0),
	""nta"" VARCHAR(16777216),
	""nta_name"" VARCHAR(16777216),
	""boro_ct"" NUMBER(38,0),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""x_sp"" FLOAT,
	""y_sp"" FLOAT
);"

Some other tables have the similar structure: ['TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TREES
,1
table_name,TREE_SPECIES
description,
DDL,"create or replace TABLE TREE_SPECIES (
	""species_scientific_name"" VARCHAR(16777216),
	""species_common_name"" VARCHAR(16777216),
	""form"" VARCHAR(16777216),
	""growth_rate"" VARCHAR(16777216),
	""fall_color"" VARCHAR(16777216),
	""environmental_tolerances"" VARCHAR(16777216),
	""location_tolerances"" VARCHAR(16777216),
	""notes_suggested_cultivars"" VARCHAR(16777216),
	""tree_size"" VARCHAR(16777216),
	""comments"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['STATIONS', 'STATION_ENTRANCES', 'GEO_NYC_BOROUGH_BOUNDARIES', 'STOP_TIMES', 'ROUTES', 'STATION_COMPLEXES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021', 'TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016'], 'NEW_YORK_TREES': ['TREE_CENSUS_2015', 'TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995', 'TREE_SPECIES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

**Table:** `NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS`

- **"station_id"**: Unique identifier for each subway station.
  - *Potential usage*: Counting total number of subway stations.
  
- **"station_name"**: Name of the subway station.
  - *Potential usage*: Joining with entrances to associate entrances with stations.

- **"borough_name"**: Name of the borough where the station is located.
  - *Potential usage*: Grouping stations by borough.

---

**Table:** `NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES`

- **"station_name"**: Name of the subway station.
  - *Potential usage*: Joining with stations to associate entrances with stations.

- **"entry"**: `BOOLEAN` indicating if the entrance is an actual entry point.
  - *Potential usage*: Filtering entrances that are actual entries.

- **"ada_compliant"**: `BOOLEAN` indicating if the entrance is ADA-compliant.
  - *Potential usage*: Filtering entrances that are ADA-compliant.

---

**Conditions that may be used:**

- **Filtering for actual entries**: `"entry" = TRUE`
- **Filtering for ADA-compliant entrances**: `"ada_compliant" = TRUE`
- **Joining stations and entrances**: Matching on `"station_name"`
- **Grouping by boroughs**: Using `"borough_name"` for grouping

---

**SQL Queries:**

```sql
-- 1. List all distinct boroughs from the STATIONS table.
SELECT DISTINCT "borough_name"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
LIMIT 100;
```

---

```sql
-- 2. Count the total number of stations in the STATIONS table.
SELECT COUNT(DISTINCT "station_id") AS total_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
LIMIT 100;
```

---

```sql
-- 3. Count the total number of stations in each borough.
SELECT "borough_name", COUNT(DISTINCT "station_id") AS total_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
GROUP BY "borough_name"
LIMIT 100;
```

---

```sql
-- 4. List all entrances that are marked as actual entries.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE
LIMIT 100;
```

---

```sql
-- 5. List all entrances that are ADA-compliant.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "ada_compliant" = TRUE
LIMIT 100;
```

---

```sql
-- 6. Find entrances that are both actual entries and ADA-compliant.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE AND "ada_compliant" = TRUE
LIMIT 100;
```

---

```sql
-- 7. List all distinct station names that have at least one ADA-compliant entry.
SELECT DISTINCT "station_name"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE AND "ada_compliant" = TRUE
LIMIT 100;
```

---

```sql
-- 8. Join STATIONS and STATION_ENTRANCES to associate entrances with boroughs.
SELECT se."station_name", s."borough_name", se."entry", se."ada_compliant"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
INNER JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
  ON se."station_name" = s."station_name"
LIMIT 100;
```

---

```sql
-- 9. Count the number of ADA-compliant entries per station.
SELECT se."station_name", COUNT(*) AS ada_entry_count
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
GROUP BY se."station_name"
LIMIT 100;
```

---

```sql
-- 10. Count the number of stations per borough that have at least one ADA-compliant entry.
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS ada_compliant_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
INNER JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
  ON s."station_name" = se."station_name"
WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
GROUP BY s."borough_name"
LIMIT 100;
```

These queries explore the relevant data needed to address the task. They help in understanding:

- The distribution of subway stations across boroughs.
- The identification of entrances that are both actual entries and ADA-compliant.
- The association between stations and their entrances.
- The counting and grouping necessary to compute totals and percentages by borough.

**Note:** All column names are enclosed in double quotations as required, and all queries are limited to 100 rows.Query:
-- 1. List all distinct boroughs from the STATIONS table.
SELECT DISTINCT "borough_name"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
LIMIT 100;
Answer:
borough_name
Queens
Manhattan
Brooklyn
Bronx
Staten Island
Query:
-- 2. Count the total number of stations in the STATIONS table.
SELECT COUNT(DISTINCT "station_id") AS total_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
LIMIT 100;
Answer:
TOTAL_STATIONS
493
Query:
-- 3. Count the total number of stations in each borough.
SELECT "borough_name", COUNT(DISTINCT "station_id") AS total_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
GROUP BY "borough_name"
LIMIT 100;
Answer:
borough_name,TOTAL_STATIONS
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21
Query:
-- 4. List all entrances that are marked as actual entries.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE
LIMIT 100;
Answer:
station_name,entrance_lat,entrance_lon
Wall St,40.706506,-74.009544
Wall St,40.706392,-74.009332
Wall St,40.706272,-74.009447
Wall St,40.706755,-74.008804
Wall St,40.706385,-74.009658
Wall St,40.707431,-74.008778
Fulton St,40.709475,-74.006409
Clark St,40.69759,-73.993275
Clark St,40.697649,-73.99306
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
Park Place,40.712712,-74.007766
Harlem-148th St,40.824069,-73.936981
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
125th St,40.807875,-73.945229
125th St,40.807995,-73.945524
125th St,40.807681,-73.945752
125th St,40.807548,-73.945463
110th St-Central Park North,40.799033,-73.952058
110th St-Central Park North,40.798497,-73.952672
145th St,40.820662,-73.936275
145th St,40.820343,-73.936508
116th St,40.801945,-73.949943
116th St,40.802229,-73.949734
116th St,40.802111,-73.949437
116th St,40.801822,-73.949651
18th Av,40.630531,-73.977251
18th Av,40.630562,-73.976995
18th Av,40.628674,-73.976892
18th Av,40.628708,-73.976646
Av N,40.61616,-73.97427
Av N,40.616121,-73.974507
Av N,40.614304,-73.97391
Av N,40.614279,-73.97418
Av I,40.626163,-73.976177
Av I,40.626133,-73.976407
Kings Highway,40.602178,-73.972379
Kings Highway,40.602197,-73.97264
Kings Highway,40.604007,-73.972393
Kings Highway,40.603999,-73.972124
Av P,40.609041,-73.972904
Av P,40.608615,-73.973097
Bay Parkway-22nd Av,40.620825,-73.975138
Bay Parkway-22nd Av,40.620797,-73.975479
Bay Parkway-22nd Av,40.621162,-73.975467
Av U,40.596897,-73.973137
Av U,40.596701,-73.973402
Ditmas Av,40.637093,-73.978463
Ditmas Av,40.637107,-73.978257
Ditmas Av,40.635389,-73.977914
Ditmas Av,40.635434,-73.978289
Av X,40.590521,-73.974242
Av X,40.590266,-73.974051
Neptune Av-Van Siclen,40.580547,-73.974778
Neptune Av-Van Siclen,40.580576,-73.974443
Franklin Av,40.681256,-73.95559
Ralph Av,40.678702,-73.921552
Ralph Av,40.678984,-73.921442
Ralph Av,40.679164,-73.92187
Lafayette Av,40.685559,-73.9729
Lafayette Av,40.686041,-73.974278
Lafayette Av,40.686409,-73.974347
Lafayette Av,40.686119,-73.974517
Lafayette Av,40.685789,-73.97276
Lafayette Av,40.686077,-73.973308
Lafayette Av,40.6857,-73.973526
Lafayette Av,40.685969,-73.973021
Lafayette Av,40.686553,-73.974606
Utica Av,40.679095,-73.930044
Utica Av,40.679346,-73.931987
Utica Av,40.67953,-73.932021
Utica Av,40.679487,-73.929725
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Shepherd Av,40.673989,-73.880869
Shepherd Av,40.67397,-73.880667
Shepherd Av,40.674303,-73.880749
Shepherd Av,40.674234,-73.880927
Nostrand Av,40.680228,-73.949414
Nostrand Av,40.680572,-73.949753
Nostrand Av,40.680262,-73.949635
Nostrand Av,40.680547,-73.949515
Kingston-Throop,40.679804,-73.941119
Kingston-Throop,40.679728,-73.941362
Kingston-Throop,40.680057,-73.940483
Kingston-Throop,40.68001,-73.940247
Clinton & Washington Avs,40.683653,-73.966797
Clinton & Washington Avs,40.683172,-73.964689
Clinton & Washington Avs,40.682868,-73.96463
Clinton & Washington Avs,40.683695,-73.967069
Jay St - Borough Hall,40.692393,-73.987443
Jay St - Borough Hall,40.692394,-73.987491
Query:
-- 5. List all entrances that are ADA-compliant.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "ada_compliant" = TRUE
LIMIT 100;
Answer:
station_name,entrance_lat,entrance_lon
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
Franklin Av,40.681256,-73.95559
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Fordham Rd,40.862814,-73.900815
Fordham Rd,40.862592,-73.90097
Fordham Rd,40.86289,-73.901262
Fordham Rd,40.862562,-73.901367
Yankee Stadium-161st St,40.827605,-73.926282
Yankee Stadium-161st St,40.827854,-73.925745
Yankee Stadium-161st St,40.827529,-73.926322
Yankee Stadium-161st St,40.827399,-73.926394
Yankee Stadium-161st St,40.827685,-73.925842
Yankee Stadium-161st St,40.827942,-73.926
Yankee Stadium-161st St,40.827461,-73.926362
Yankee Stadium-161st St,40.827759,-73.9261
Metropolitan Av,40.712082,-73.88954
Pelham Bay Park,40.853012,-73.827172
Pelham Bay Park,40.853041,-73.826991
Pelham Bay Park,40.852803,-73.827195
Pelham Bay Park,40.852824,-73.827035
Pelham Bay Park,40.852377,-73.825986
DeKalb Av,40.689817,-73.981082
DeKalb Av,40.68974,-73.981156
DeKalb Av,40.68981,-73.981651
DeKalb Av,40.69154,-73.982565
DeKalb Av,40.689804,-73.981164
DeKalb Av,40.691562,-73.982048
Pacific St,40.683928,-73.978412
Atlantic Av-Barclays Ctr,40.683805,-73.978487
Pacific St,40.683905,-73.978879
Church Av,40.644908,-73.980019
Church Av,40.643147,-73.979342
Church Av,40.643006,-73.97966
Church Av,40.645042,-73.979573
Church Av,40.642692,-73.97926
Church Av,40.642571,-73.979579
34th St,40.750088,-73.988142
34th St,40.749615,-73.988159
34th St,40.750404,-73.986989
34th St,40.74895,-73.988623
34th St,40.750674,-73.988031
34th St,40.750647,-73.987346
34th St,40.750271,-73.987066
34th St,40.748746,-73.988774
34th St,40.75088,-73.988096
34th St,40.749845,-73.988254
47-50th Sts Rockefeller Center,40.759414,-73.981035
47-50th Sts Rockefeller Center,40.758024,-73.982079
47-50th Sts Rockefeller Center,40.758615,-73.981095
47-50th Sts Rockefeller Center,40.759105,-73.981252
47-50th Sts Rockefeller Center,40.759434,-73.981001
47-50th Sts Rockefeller Center,40.757801,-73.981788
47-50th Sts Rockefeller Center,40.758977,-73.981352
47-50th Sts Rockefeller Center,40.757981,-73.98154
47-50th Sts Rockefeller Center,40.759953,-73.980117
47-50th Sts Rockefeller Center,40.760502,-73.980218
47-50th Sts Rockefeller Center,40.758996,-73.980788
47-50th Sts Rockefeller Center,40.759301,-73.980594
47-50th Sts Rockefeller Center,40.758486,-73.981158
47-50th Sts Rockefeller Center,40.758623,-73.981566
47-50th Sts Rockefeller Center,40.757862,-73.981735
47-50th Sts Rockefeller Center,40.759896,-73.980706
47-50th Sts Rockefeller Center,40.760125,-73.980499
168th St - Washington Heights,40.84186,-73.939569
168th St - Washington Heights,40.84176,-73.939067
168th St - Washington Heights,40.841928,-73.939455
168th St - Washington Heights,40.840741,-73.939252
West 4th St,40.733259,-73.999615
West 4th St,40.731133,-74.001534
West 4th St,40.731091,-74.001127
West 4th St,40.733072,-74.000192
West 4th St,40.731086,-74.001209
West 4th St,40.733067,-73.999728
34th St,40.751291,-73.993887
34th St,40.752689,-73.992742
34th St,40.753032,-73.993188
34th St,40.752161,-73.993109
34th St,40.751996,73.993327
34th St,40.752178,-73.993701
34th St,40.751539,-73.994181
34th St,40.75202,-73.993352
34th St,40.752796,-73.992669
34th St,40.751677,-73.994107
34th St,40.752766,-73.992596
34th St,40.752877,-73.993244
34th St,40.751561,-73.994243
34th St,40.752427,-73.993679
34th St,40.751432,-73.993538
34th St,40.753053,-73.993256
Query:
-- 6. Find entrances that are both actual entries and ADA-compliant.
SELECT "station_name", "entrance_lat", "entrance_lon"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE AND "ada_compliant" = TRUE
LIMIT 100;
Answer:
station_name,entrance_lat,entrance_lon
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
Franklin Av,40.681256,-73.95559
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Fordham Rd,40.862814,-73.900815
Fordham Rd,40.862592,-73.90097
Fordham Rd,40.86289,-73.901262
Fordham Rd,40.862562,-73.901367
Yankee Stadium-161st St,40.827605,-73.926282
Yankee Stadium-161st St,40.827854,-73.925745
Yankee Stadium-161st St,40.827529,-73.926322
Yankee Stadium-161st St,40.827399,-73.926394
Yankee Stadium-161st St,40.827685,-73.925842
Yankee Stadium-161st St,40.827942,-73.926
Yankee Stadium-161st St,40.827461,-73.926362
Yankee Stadium-161st St,40.827759,-73.9261
Metropolitan Av,40.712082,-73.88954
Pelham Bay Park,40.853012,-73.827172
Pelham Bay Park,40.853041,-73.826991
Pelham Bay Park,40.852803,-73.827195
Pelham Bay Park,40.852824,-73.827035
Pelham Bay Park,40.852377,-73.825986
DeKalb Av,40.689817,-73.981082
DeKalb Av,40.68974,-73.981156
DeKalb Av,40.68981,-73.981651
DeKalb Av,40.69154,-73.982565
DeKalb Av,40.689804,-73.981164
DeKalb Av,40.691562,-73.982048
Pacific St,40.683928,-73.978412
Atlantic Av-Barclays Ctr,40.683805,-73.978487
Pacific St,40.683905,-73.978879
Church Av,40.644908,-73.980019
Church Av,40.643147,-73.979342
Church Av,40.643006,-73.97966
Church Av,40.645042,-73.979573
Church Av,40.642692,-73.97926
Church Av,40.642571,-73.979579
34th St,40.750088,-73.988142
34th St,40.749615,-73.988159
34th St,40.750404,-73.986989
34th St,40.74895,-73.988623
34th St,40.750674,-73.988031
34th St,40.750647,-73.987346
34th St,40.750271,-73.987066
34th St,40.748746,-73.988774
34th St,40.75088,-73.988096
34th St,40.749845,-73.988254
47-50th Sts Rockefeller Center,40.759414,-73.981035
47-50th Sts Rockefeller Center,40.758024,-73.982079
47-50th Sts Rockefeller Center,40.758615,-73.981095
47-50th Sts Rockefeller Center,40.759105,-73.981252
47-50th Sts Rockefeller Center,40.759434,-73.981001
47-50th Sts Rockefeller Center,40.757801,-73.981788
47-50th Sts Rockefeller Center,40.758977,-73.981352
47-50th Sts Rockefeller Center,40.757981,-73.98154
47-50th Sts Rockefeller Center,40.759953,-73.980117
47-50th Sts Rockefeller Center,40.760502,-73.980218
47-50th Sts Rockefeller Center,40.758996,-73.980788
47-50th Sts Rockefeller Center,40.759301,-73.980594
47-50th Sts Rockefeller Center,40.758486,-73.981158
47-50th Sts Rockefeller Center,40.758623,-73.981566
47-50th Sts Rockefeller Center,40.757862,-73.981735
47-50th Sts Rockefeller Center,40.759896,-73.980706
47-50th Sts Rockefeller Center,40.760125,-73.980499
168th St - Washington Heights,40.84186,-73.939569
168th St - Washington Heights,40.84176,-73.939067
168th St - Washington Heights,40.841928,-73.939455
168th St - Washington Heights,40.840741,-73.939252
West 4th St,40.733259,-73.999615
West 4th St,40.731133,-74.001534
West 4th St,40.731091,-74.001127
West 4th St,40.733072,-74.000192
West 4th St,40.731086,-74.001209
West 4th St,40.733067,-73.999728
34th St,40.751291,-73.993887
34th St,40.752689,-73.992742
34th St,40.753032,-73.993188
34th St,40.752161,-73.993109
34th St,40.751996,73.993327
34th St,40.752178,-73.993701
34th St,40.751539,-73.994181
34th St,40.75202,-73.993352
34th St,40.752796,-73.992669
34th St,40.751677,-73.994107
34th St,40.752766,-73.992596
34th St,40.752877,-73.993244
34th St,40.751561,-73.994243
34th St,40.752427,-73.993679
34th St,40.751432,-73.993538
34th St,40.753053,-73.993256
Query:
-- 7. List all distinct station names that have at least one ADA-compliant entry.
SELECT DISTINCT "station_name"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
WHERE "entry" = TRUE AND "ada_compliant" = TRUE
LIMIT 100;
Answer:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St
Query:
-- 8. Join STATIONS and STATION_ENTRANCES to associate entrances with boroughs.
SELECT se."station_name", s."borough_name", se."entry", se."ada_compliant"
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
INNER JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
  ON se."station_name" = s."station_name"
LIMIT 100;
Answer:
station_name,borough_name,entry,ada_compliant
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Wall St,Manhattan,True,False
Fulton St,Manhattan,True,False
Fulton St,Manhattan,True,False
Fulton St,Brooklyn,True,False
Fulton St,Manhattan,True,False
Fulton St,Manhattan,True,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Brooklyn,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Brooklyn,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Fulton St,Brooklyn,False,False
Fulton St,Manhattan,False,False
Fulton St,Manhattan,False,False
Clark St,Brooklyn,True,False
Clark St,Brooklyn,True,False
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Borough Hall,Brooklyn,True,True
Ditmas Av,Brooklyn,True,False
Ditmas Av,Brooklyn,True,False
Ditmas Av,Brooklyn,True,False
Ditmas Av,Brooklyn,True,False
Franklin Av,Brooklyn,True,True
Franklin Av,Brooklyn,True,True
Franklin Av,Brooklyn,True,True
Ralph Av,Brooklyn,True,False
Ralph Av,Brooklyn,True,False
Ralph Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Lafayette Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Utica Av,Brooklyn,True,False
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Euclid Av,Brooklyn,True,True
Shepherd Av,Brooklyn,True,False
Shepherd Av,Brooklyn,True,False
Shepherd Av,Brooklyn,True,False
Shepherd Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Nostrand Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Van Siclen Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Liberty Av,Brooklyn,True,False
Rockaway Av,Brooklyn,False,False
Rockaway Av,Brooklyn,False,False
Query:
-- 9. Count the number of ADA-compliant entries per station.
SELECT se."station_name", COUNT(*) AS ada_entry_count
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
GROUP BY se."station_name"
LIMIT 100;
Answer:
station_name,ADA_ENTRY_COUNT
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,9
42nd St,7
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,5
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,8
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,5
Times Square,9
South Ferry,4
Chambers St,5
Jackson Heights-Roosevelt Ave,4
21st St,5
59th St-Columbus Circle,3
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,5
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,4
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,5
72nd St,3
Query:
-- 10. Count the number of stations per borough that have at least one ADA-compliant entry.
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS ada_compliant_stations
FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
INNER JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
  ON s."station_name" = se."station_name"
WHERE se."entry" = TRUE AND se."ada_compliant" = TRUE
GROUP BY s."borough_name"
LIMIT 100;
Answer:
borough_name,ADA_COMPLIANT_STATIONS
Brooklyn,19
Bronx,4
Queens,2
Manhattan,13
End Exploring Related Columns
Task: For each New York City borough, how many subway stations are there in total, how many have at least one entrance that is marked both as an actual entry and as ADA-compliant, and what percentage of the total stations in each borough does this represent, listing boroughs from the highest to the lowest percentage?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Borough,Total_number_of_stations,Number_of_ADA_stations,Percentage_of_ADA_stations
borough_name:str,total_stations:int,ADA_stations:int,percentage:float between 0 and 100
...
(Ordered from highest to lowest percentage of ADA stations)
```

This table lists each New York City borough with the total number of subway stations, the number of stations that have at least one entrance marked both as an actual entry and ADA-compliant, and the percentage this represents of the total stations in each borough. The boroughs are ordered from the highest to the lowest percentage of ADA-compliant stations..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['STATIONS', 'STATION_ENTRANCES', 'GEO_NYC_BOROUGH_BOUNDARIES', 'STOP_TIMES', 'ROUTES', 'STATION_COMPLEXES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021', 'TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016'], 'NEW_YORK_TREES': ['TREE_CENSUS_2015', 'TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995', 'TREE_SPECIES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 08:08:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 08:08:22 - root - INFO - ```sql
SELECT
    s."borough_name" AS Borough,
    COUNT(DISTINCT s."station_id") AS Total_number_of_stations,
    COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS Number_of_ADA_stations,
    ROUND(
        COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0
        / COUNT(DISTINCT s."station_id"), 4) AS Percentage_of_ADA_stations
FROM
    NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
LEFT JOIN
    NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
ON
    s."station_name" = se."station_name"
GROUP BY
    s."borough_name"
ORDER BY
    Percentage_of_ADA_stations DESC;
```
2025-02-12 08:08:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:23 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:24 - root - INFO - itercount: 1
2025-02-12 08:08:24 - root - INFO - 0
2025-02-12 08:08:24 - root - INFO - results: 
BOROUGH,TOTAL_NUMBER_OF_STATIONS,NUMBER_OF_ADA_STATIONS,PERCENTAGE_OF_ADA_STATIONS
Brooklyn,169,19,11.2426
Manhattan,151,13,8.6093
Bronx,70,4,5.7143
Queens,82,2,2.4390
Staten Island,21,0,0.0000


2025-02-12 08:08:24 - root - INFO - Please check the answer again by reviewing For each New York City borough, how many subway stations are there in total, how many have at least one entrance that is marked both as an actual entry and as ADA-compliant, and what percentage of the total stations in each borough does this represent, listing boroughs from the highest to the lowest percentage?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Borough,Total_number_of_stations,Number_of_ADA_stations,Percentage_of_ADA_stations
borough_name:str,total_stations:int,ADA_stations:int,percentage:float between 0 and 100
...
(Ordered from highest to lowest percentage of ADA stations)
```

This table lists each New York City borough with the total number of subway stations, the number of stations that have at least one entrance marked both as an actual entry and ADA-compliant, and the percentage this represents of the total stations in each borough. The boroughs are ordered from the highest to the lowest percentage of ADA-compliant stations. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
BOROUGH,TOTAL_NUMBER_OF_STATIONS,NUMBER_OF_ADA_STATIONS,PERCENTAGE_OF_ADA_STATIONS
Brooklyn,169,19,11.2426
Manhattan,151,13,8.6093
Bronx,70,4,5.7143
Queens,82,2,2.4390
Staten Island,21,0,0.0000
Current sql:
SELECT
    s."borough_name" AS Borough,
    COUNT(DISTINCT s."station_id") AS Total_number_of_stations,
    COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS Number_of_ADA_stations,
    ROUND(
        COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0
        / COUNT(DISTINCT s."station_id"), 4) AS Percentage_of_ADA_stations
FROM
    NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
LEFT JOIN
    NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
ON
    s."station_name" = se."station_name"
GROUP BY
    s."borough_name"
ORDER BY
    Percentage_of_ADA_stations DESC;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-02-12 08:08:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 08:08:57 - root - INFO - ```sql
SELECT
    s."borough_name" AS Borough,
    COUNT(DISTINCT s."station_id") AS Total_number_of_stations,
    COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) AS Number_of_ADA_stations,
    ROUND(
        COUNT(DISTINCT CASE WHEN se."entry" = TRUE AND se."ada_compliant" = TRUE THEN s."station_id" END) * 100.0
        / COUNT(DISTINCT s."station_id"), 4) AS Percentage_of_ADA_stations
FROM
    NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
LEFT JOIN
    NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES se
ON
    s."station_name" = se."station_name"
GROUP BY
    s."borough_name"
ORDER BY
    Percentage_of_ADA_stations DESC NULLS LAST;
```
2025-02-12 08:08:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 08:08:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 08:08:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 08:08:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 08:08:58 - snowflake.connector.connection - INFO - closed
2025-02-12 08:08:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 08:08:58 - root - INFO - itercount: 2
2025-02-12 08:08:58 - root - INFO - 0
2025-02-12 08:08:58 - root - INFO - Total iteration counts: 2
