2025-02-10 16:00:48 - openai._base_client - INFO - Retrying request to /chat/completions in 0.381534 seconds
2025-02-10 16:01:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 16:01:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:40 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:41 - root - INFO - SQL:
SELECT DISTINCT "match_id"
   FROM IPL.IPL.BATSMAN_SCORED
   LIMIT 100;
Results:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335998
335999
336000
336002
336004
336006
336008
336010
336017
336018
336019
336020
336024
336028
336030
336036
336044
392193
392202
392216
419117
419128
419141
419143
419149
501203
501207
501230
336003
336015
336037
336039
392186
392194
392214
392215
392221
392233
392236
392241
419114
419124
419150
419152
419153
419158
501211
501212
501221
419138
501214
501259
501264
335997
336005
336007
336009
336012
336013
336023
336031
336034
336042
392188
392201
392205
392220
392225
392235
419131
419142
419166
336014
336016
336033
336040
336041
336043
336045
392189
392190
392196
392197
392200
392204
392206
392210
392218
392223
392224

2025-02-10 16:01:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:42 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:42 - root - INFO - SQL:
SELECT DISTINCT "match_id", "innings_no"
   FROM IPL.IPL.BATSMAN_SCORED
   ORDER BY "match_id", "innings_no"
   LIMIT 100;
Results:
match_id,innings_no
335987,1
335987,2
335988,1
335988,2
335989,1
335989,2
335990,1
335990,2
335991,1
335991,2
335992,1
335992,2
335993,1
335993,2
335994,1
335994,2
335995,1
335995,2
335996,1
335996,2
335997,1
335997,2
335998,1
335998,2
335999,1
335999,2
336000,1
336000,2
336001,1
336001,2
336002,1
336002,2
336003,1
336003,2
336004,1
336004,2
336005,1
336005,2
336006,1
336006,2
336007,1
336007,2
336008,1
336008,2
336009,1
336009,2
336010,1
336010,2
336011,1
336011,2
336012,1
336012,2
336013,1
336013,2
336014,1
336014,2
336015,1
336015,2
336016,1
336016,2
336017,1
336017,2
336018,1
336018,2
336019,1
336019,2
336020,1
336020,2
336021,1
336021,2
336022,1
336022,2
336023,1
336023,2
336024,1
336024,2
336025,1
336025,2
336026,1
336026,2
336027,1
336027,2
336028,1
336028,2
336029,1
336029,2
336030,1
336030,2
336031,1
336031,2
336032,1
336032,2
336033,1
336033,2
336034,1
336034,2
336036,1
336036,2
336037,1
336037,2

2025-02-10 16:01:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:43 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:44 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
   FROM IPL.IPL.BATSMAN_SCORED
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored
335987,1,1,2,0
335987,1,1,4,0
335987,1,1,5,0
335987,1,1,6,0
335987,1,1,7,0
335987,1,2,1,0
335987,1,2,2,4
335987,1,2,3,4
335987,1,2,4,6
335987,1,2,5,4
335987,1,2,6,0
335987,1,3,1,0
335987,1,3,2,0
335987,1,3,3,0
335987,1,3,4,4
335987,1,3,5,1
335987,1,3,6,0
335987,1,4,2,6
335987,1,4,3,0
335987,1,4,4,4
335987,1,4,5,0
335987,1,4,6,1
335987,1,4,7,6
335987,1,5,1,4
335987,1,5,2,1
335987,1,5,3,4
335987,1,5,4,0
335987,1,5,5,1
335987,1,5,6,0
335987,1,6,1,1
335987,1,6,2,0
335987,1,6,3,0
335987,1,6,4,0
335987,1,6,5,0
335987,1,6,6,0
335987,1,7,1,1
335987,1,7,2,1
335987,1,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,1,8,1,0
335987,1,8,2,1
335987,1,8,3,1
335987,1,8,4,1
335987,1,8,5,1
335987,1,8,6,1
335987,1,9,1,0
335987,1,9,2,0
335987,1,9,3,0
335987,1,9,4,1
335987,1,9,5,1
335987,1,9,6,2
335987,1,10,1,1
335987,1,10,2,1
335987,1,10,3,1
335987,1,10,4,0
335987,1,10,5,6
335987,1,10,6,1
335987,1,11,1,1
335987,1,11,2,4
335987,1,11,3,0
335987,1,11,4,6
335987,1,11,5,0
335987,1,11,6,0
335987,1,12,1,0
335987,1,12,2,6
335987,1,12,3,2
335987,1,12,4,1
335987,1,12,5,0
335987,1,12,6,1
335987,1,13,1,0
335987,1,13,2,4
335987,1,13,3,0
335987,1,13,4,2
335987,1,13,6,4
335987,1,13,7,1
335987,1,14,1,1
335987,1,14,2,0
335987,1,14,3,1
335987,1,14,4,1
335987,1,14,5,1
335987,1,14,6,2
335987,1,15,1,4
335987,1,15,2,1
335987,1,15,3,6
335987,1,15,4,4
335987,1,15,6,1
335987,1,15,7,6
335987,1,16,1,0
335987,1,16,2,1
335987,1,16,3,2
335987,1,16,4,0
335987,1,16,5,1
335987,1,16,6,0
335987,1,17,1,1
335987,1,17,2,2
335987,1,17,3,1
335987,1,17,4,6
335987,1,17,5,2

2025-02-10 16:01:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:45 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:45 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "extra_runs", "extra_type"
   FROM IPL.IPL.EXTRA_RUNS
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,extra_runs,extra_type
335987,1,1,1,1,legbyes
335987,1,1,3,1,wides
335987,1,1,7,1,legbyes
335987,1,3,3,1,legbyes
335987,1,4,1,5,wides
335987,1,4,3,1,legbyes
335987,1,11,6,4,byes
335987,1,13,5,1,wides
335987,1,15,5,2,wides
335987,2,1,2,1,wides
335987,2,2,3,4,legbyes
335987,2,3,5,1,wides
335987,2,4,4,1,legbyes
335987,2,7,4,1,wides
335987,2,7,5,1,wides
335987,2,8,2,1,legbyes
335987,2,9,4,1,wides
335987,2,9,5,1,wides
335987,2,10,4,1,wides
335987,2,10,5,1,legbyes
335987,2,13,2,2,wides
335987,2,15,1,1,wides
335987,2,15,5,1,legbyes
335987,2,16,1,1,wides
335988,1,2,5,1,wides
335988,1,3,2,1,noballs
335988,1,5,2,1,legbyes
335988,1,13,1,1,wides
335988,1,13,4,1,wides
335988,1,14,6,1,legbyes
335988,2,6,4,1,wides
335988,2,6,7,1,wides
335988,2,7,5,1,legbyes
335988,2,9,6,1,wides
335988,2,13,1,1,legbyes
335988,2,13,4,1,legbyes
335988,2,14,4,2,wides
335988,2,16,2,1,byes
335988,2,17,1,1,legbyes
335988,2,18,5,1,byes
335989,1,1,4,1,wides
335989,1,6,4,1,legbyes
335989,1,8,1,1,legbyes
335989,1,9,3,1,byes
335989,1,10,1,1,legbyes
335989,1,13,4,2,wides
335989,2,2,6,1,wides
335989,2,6,2,1,wides
335989,2,8,3,1,wides
335989,2,10,2,1,wides
335989,2,13,6,5,wides
335989,2,15,1,1,wides
335990,1,2,6,4,legbyes
335990,1,3,6,1,wides
335990,1,5,1,1,wides
335990,1,9,1,1,legbyes
335990,1,10,4,1,legbyes
335990,1,14,6,1,byes
335990,1,16,4,1,wides
335990,1,17,2,1,byes
335990,2,5,5,1,wides
335990,2,9,3,1,wides
335990,2,14,2,1,wides
335990,2,14,6,1,wides
335990,2,20,2,1,wides
335991,1,1,2,1,noballs
335991,1,2,1,1,legbyes
335991,1,2,5,1,wides
335991,1,2,7,1,wides
335991,1,8,2,1,noballs
335991,1,10,3,1,legbyes
335991,1,10,5,1,legbyes
335991,1,14,2,1,legbyes
335991,1,16,5,1,wides
335991,1,17,2,1,wides
335991,2,2,5,4,legbyes
335991,2,3,3,1,legbyes
335991,2,7,4,5,wides
335991,2,9,4,1,wides
335991,2,10,3,1,wides
335991,2,12,2,4,byes
335991,2,12,4,1,wides
335991,2,12,5,5,wides
335991,2,12,8,1,noballs
335991,2,13,1,1,wides
335991,2,13,5,1,wides
335991,2,15,5,1,legbyes
335991,2,18,3,1,legbyes
335991,2,19,2,1,legbyes
335992,1,8,1,1,wides
335992,1,8,6,1,wides
335992,1,8,7,1,legbyes
335992,1,20,2,1,noballs
335992,2,1,2,1,noballs
335992,2,2,2,1,wides
335992,2,2,7,1,noballs
335992,2,3,5,1,noballs
335992,2,4,1,1,wides
335992,2,4,5,1,wides
335992,2,5,1,1,legbyes

2025-02-10 16:01:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:46 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:47 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "bowler"
   FROM IPL.IPL.BALL_BY_BALL
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,bowler
335987,1,1,2,14
335987,1,1,3,14
335987,1,1,4,14
335987,1,1,5,14
335987,1,1,6,14
335987,1,1,7,14
335987,1,2,1,15
335987,1,2,2,15
335987,1,2,3,15
335987,1,2,4,15
335987,1,2,5,15
335987,1,2,6,15
335987,1,3,1,14
335987,1,3,2,14
335987,1,3,3,14
335987,1,3,4,14
335987,1,3,5,14
335987,1,3,6,14
335987,1,4,1,13
335987,1,4,2,13
335987,1,4,3,13
335987,1,4,4,13
335987,1,4,5,13
335987,1,4,6,13
335987,1,4,7,13
335987,1,5,1,14
335987,1,5,2,14
335987,1,5,3,14
335987,1,5,4,14
335987,1,5,5,14
335987,1,5,6,14
335987,1,6,1,15
335987,1,6,2,15
335987,1,6,3,15
335987,1,6,4,15
335987,1,6,5,15
335987,1,6,6,15
335987,1,7,1,13
335987,1,7,2,13
335987,1,7,3,13
335987,1,7,4,13
335987,1,7,5,13
335987,1,7,6,13
335987,1,8,1,15
335987,1,8,2,15
335987,1,8,3,15
335987,1,8,4,15
335987,1,8,5,15
335987,1,8,6,15
335987,1,9,1,9
335987,1,9,2,9
335987,1,9,3,9
335987,1,9,4,9
335987,1,9,5,9
335987,1,9,6,9
335987,1,10,1,16
335987,1,10,2,16
335987,1,10,3,16
335987,1,10,4,16
335987,1,10,5,16
335987,1,10,6,16
335987,1,11,1,9
335987,1,11,2,9
335987,1,11,3,9
335987,1,11,4,9
335987,1,11,5,9
335987,1,11,6,9
335987,1,12,1,16
335987,1,12,2,16
335987,1,12,3,16
335987,1,12,4,16
335987,1,12,5,16
335987,1,12,6,16
335987,1,13,1,9
335987,1,13,2,9
335987,1,13,3,9
335987,1,13,4,9
335987,1,13,5,9
335987,1,13,6,9
335987,1,13,7,9
335987,1,14,1,16
335987,1,14,2,16
335987,1,14,3,16
335987,1,14,4,16
335987,1,14,5,16
335987,1,14,6,16
335987,1,15,1,10
335987,1,15,2,10
335987,1,15,3,10
335987,1,15,4,10
335987,1,15,5,10
335987,1,15,6,10
335987,1,15,7,10
335987,1,16,1,13
335987,1,16,2,13
335987,1,16,3,13
335987,1,16,4,13
335987,1,16,5,13
335987,1,16,6,13
335987,1,17,1,15

2025-02-10 16:01:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:48 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:49 - root - INFO - SQL:
SELECT b."bowler", p."player_name"
   FROM IPL.IPL.BALL_BY_BALL b
   JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
   LIMIT 100;
Results:
bowler,player_name
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
106,AB Dinda
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
82,AB Agarkar
82,AB Agarkar
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan

2025-02-10 16:01:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:50 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:50 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
          bs."runs_scored", COALESCE(er."extra_runs", 0) AS "extra_runs",
          (bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs"
   FROM IPL.IPL.BATSMAN_SCORED bs
   LEFT JOIN IPL.IPL.EXTRA_RUNS er
     ON bs."match_id" = er."match_id"
    AND bs."innings_no" = er."innings_no"
    AND bs."over_id" = er."over_id"
    AND bs."ball_id" = er."ball_id"
   ORDER BY bs."match_id", bs."innings_no", bs."over_id", bs."ball_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs,total_runs
335987,1,1,2,0,0,0
335987,1,1,4,0,0,0
335987,1,1,5,0,0,0
335987,1,1,6,0,0,0
335987,1,1,7,0,1,1
335987,1,2,1,0,0,0
335987,1,2,2,4,0,4
335987,1,2,3,4,0,4
335987,1,2,4,6,0,6
335987,1,2,5,4,0,4
335987,1,2,6,0,0,0
335987,1,3,1,0,0,0
335987,1,3,2,0,0,0
335987,1,3,3,0,1,1
335987,1,3,4,4,0,4
335987,1,3,5,1,0,1
335987,1,3,6,0,0,0
335987,1,4,2,6,0,6
335987,1,4,3,0,1,1
335987,1,4,4,4,0,4
335987,1,4,5,0,0,0
335987,1,4,6,1,0,1
335987,1,4,7,6,0,6
335987,1,5,1,4,0,4
335987,1,5,2,1,0,1
335987,1,5,3,4,0,4
335987,1,5,4,0,0,0
335987,1,5,5,1,0,1
335987,1,5,6,0,0,0
335987,1,6,1,1,0,1
335987,1,6,2,0,0,0
335987,1,6,3,0,0,0
335987,1,6,4,0,0,0
335987,1,6,5,0,0,0
335987,1,6,6,0,0,0
335987,1,7,1,1,0,1
335987,1,7,2,1,0,1
335987,1,7,3,1,0,1
335987,1,7,4,2,0,2
335987,1,7,5,1,0,1
335987,1,7,6,1,0,1
335987,1,8,1,0,0,0
335987,1,8,2,1,0,1
335987,1,8,3,1,0,1
335987,1,8,4,1,0,1
335987,1,8,5,1,0,1
335987,1,8,6,1,0,1
335987,1,9,1,0,0,0
335987,1,9,2,0,0,0
335987,1,9,3,0,0,0
335987,1,9,4,1,0,1
335987,1,9,5,1,0,1
335987,1,9,6,2,0,2
335987,1,10,1,1,0,1
335987,1,10,2,1,0,1
335987,1,10,3,1,0,1
335987,1,10,4,0,0,0
335987,1,10,5,6,0,6
335987,1,10,6,1,0,1
335987,1,11,1,1,0,1
335987,1,11,2,4,0,4
335987,1,11,3,0,0,0
335987,1,11,4,6,0,6
335987,1,11,5,0,0,0
335987,1,11,6,0,4,4
335987,1,12,1,0,0,0
335987,1,12,2,6,0,6
335987,1,12,3,2,0,2
335987,1,12,4,1,0,1
335987,1,12,5,0,0,0
335987,1,12,6,1,0,1
335987,1,13,1,0,0,0
335987,1,13,2,4,0,4
335987,1,13,3,0,0,0
335987,1,13,4,2,0,2
335987,1,13,6,4,0,4
335987,1,13,7,1,0,1
335987,1,14,1,1,0,1
335987,1,14,2,0,0,0
335987,1,14,3,1,0,1
335987,1,14,4,1,0,1
335987,1,14,5,1,0,1
335987,1,14,6,2,0,2
335987,1,15,1,4,0,4
335987,1,15,2,1,0,1
335987,1,15,3,6,0,6
335987,1,15,4,4,0,4
335987,1,15,6,1,0,1
335987,1,15,7,6,0,6
335987,1,16,1,0,0,0
335987,1,16,2,1,0,1
335987,1,16,3,2,0,2
335987,1,16,4,0,0,0
335987,1,16,5,1,0,1
335987,1,16,6,0,0,0
335987,1,17,1,1,0,1
335987,1,17,2,2,0,2
335987,1,17,3,1,0,1
335987,1,17,4,6,0,6
335987,1,17,5,2,0,2

2025-02-10 16:01:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:51 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:52 - root - INFO - SQL:
SELECT bs."match_id", bs."innings_no", bs."over_id",
          SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over"
   FROM IPL.IPL.BATSMAN_SCORED bs
   LEFT JOIN IPL.IPL.EXTRA_RUNS er
     ON bs."match_id" = er."match_id"
    AND bs."innings_no" = er."innings_no"
    AND bs."over_id" = er."over_id"
    AND bs."ball_id" = er."ball_id"
   GROUP BY bs."match_id", bs."innings_no", bs."over_id"
   ORDER BY bs."match_id", bs."innings_no", bs."over_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,total_runs_in_over
335987,1,1,1
335987,1,2,18
335987,1,3,6
335987,1,4,18
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,15
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,5
335987,2,3,2
335987,2,4,4
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,5
335987,2,9,3
335987,2,10,7
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,3
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,7
335988,1,4,6
335988,1,5,9
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,10
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,6
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,14
335988,2,14,9
335988,2,15,13
335988,2,16,11
335988,2,17,10
335988,2,18,5
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,3
335989,1,7,4
335989,1,8,4
335989,1,9,3
335989,1,10,6
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10

2025-02-10 16:01:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:53 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:53 - root - INFO - SQL:
SELECT sub."match_id", sub."innings_no", sub."over_id", sub."total_runs_in_over"
   FROM (
     SELECT bs."match_id", bs."innings_no", bs."over_id",
            SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
            RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                         ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC) AS "over_rank"
     FROM IPL.IPL.BATSMAN_SCORED bs
     LEFT JOIN IPL.IPL.EXTRA_RUNS er
       ON bs."match_id" = er."match_id"
      AND bs."innings_no" = er."innings_no"
      AND bs."over_id" = er."over_id"
      AND bs."ball_id" = er."ball_id"
     GROUP BY bs."match_id", bs."innings_no", bs."over_id"
   ) sub
   WHERE sub."over_rank" = 1
   ORDER BY sub."match_id", sub."innings_no"
   LIMIT 100;
Results:
match_id,innings_no,over_id,total_runs_in_over
335987,1,15,22
335987,1,20,22
335987,2,13,9
335988,1,20,25
335988,2,8,15
335989,1,12,12
335989,2,2,12
335989,2,5,12
335989,2,15,12
335990,1,18,20
335990,2,18,19
335991,1,17,19
335991,2,18,13
335992,1,20,17
335992,2,3,15
335992,2,15,15
335993,1,18,26
335993,2,13,30
335994,1,3,18
335994,2,17,21
335995,1,15,19
335995,2,5,22
335996,1,5,17
335996,2,12,22
335997,1,6,15
335997,2,14,26
335998,1,2,16
335998,2,15,14
335999,1,15,15
335999,1,16,15
335999,1,14,15
335999,2,7,23
336000,1,16,15
336000,2,12,14
336001,1,19,23
336001,2,8,13
336001,2,6,13
336002,1,18,14
336002,2,12,15
336003,1,14,19
336003,2,20,19
336004,1,19,17
336004,2,15,18
336005,1,18,16
336005,2,11,15
336005,2,8,15
336006,1,11,16
336006,2,7,19
336007,1,11,20
336007,2,19,21
336008,1,20,21
336008,2,19,18
336008,2,18,18
336009,1,19,20
336009,2,10,16
336009,2,4,16
336010,1,12,17
336010,2,13,12
336011,1,15,13
336011,1,17,13
336011,2,10,14
336012,1,20,20
336012,2,18,21
336013,1,6,17
336013,2,4,13
336014,1,17,15
336014,2,14,23
336015,1,9,15
336015,2,15,15
336015,2,11,15
336015,2,13,15
336016,1,5,12
336016,1,3,12
336016,2,6,17
336017,1,11,18
336017,2,8,16
336017,2,11,16
336018,1,19,16
336018,2,18,19
336019,1,18,20
336019,2,14,22
336020,1,19,27
336020,2,9,22
336021,1,16,16
336021,2,11,20
336022,1,7,11
336022,2,2,11
336022,2,14,11
336023,1,18,14
336023,1,19,14
336023,2,14,26
336024,1,17,24
336024,2,14,23
336025,1,4,19
336025,2,12,19
336026,1,14,9
336026,1,10,9
336026,2,3,23
336027,1,6,22
336027,2,5,21

2025-02-10 16:01:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:01:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:01:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:01:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 16:01:54 - snowflake.connector.connection - INFO - closed
2025-02-10 16:01:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:01:55 - root - INFO - SQL:
SELECT top_overs."match_id", top_overs."innings_no", top_overs."over_id",
           top_overs."total_runs_in_over", p."player_name" AS "bowler_name"
    FROM (
      SELECT bs."match_id", bs."innings_no", bs."over_id",
             SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
             RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                          ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC) AS "over_rank"
      FROM IPL.IPL.BATSMAN_SCORED bs
      LEFT JOIN IPL.IPL.EXTRA_RUNS er
        ON bs."match_id" = er."match_id"
       AND bs."innings_no" = er."innings_no"
       AND bs."over_id" = er."over_id"
       AND bs."ball_id" = er."ball_id"
      GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    ) top_overs
    JOIN IPL.IPL.BALL_BY_BALL bbb
      ON top_overs."match_id" = bbb."match_id"
     AND top_overs."innings_no" = bbb."innings_no"
     AND top_overs."over_id" = bbb."over_id"
    JOIN IPL.IPL.PLAYER p
      ON bbb."bowler" = p."player_id"
    WHERE top_overs."over_rank" = 1
    GROUP BY top_overs."match_id", top_overs."innings_no", top_overs."over_id",
             top_overs."total_runs_in_over", p."player_name"
    ORDER BY top_overs."match_id", top_overs."innings_no"
    LIMIT 100;
Results:
match_id,innings_no,over_id,total_runs_in_over,bowler_name
335987,1,20,22,P Kumar
335987,1,15,22,CL White
335987,2,13,9,LR Shukla
335988,1,20,25,JR Hopes
335988,2,8,15,P Amarnath
335989,1,12,12,DL Vettori
335989,2,2,12,SR Watson
335989,2,5,12,MM Patel
335989,2,15,12,SK Trivedi
335990,1,18,20,R Vinay Kumar
335990,2,18,19,A Nehra
335991,1,17,19,DJ Hussey
335991,2,18,13,SB Styris
335992,1,20,17,SR Watson
335992,2,3,15,B Lee
335992,2,15,15,PP Chawla
335993,1,18,26,MF Maharoof
335993,2,13,30,A Symonds
335994,1,3,18,SM Pollock
335994,2,17,21,P Amarnath
335995,1,15,19,SK Trivedi
335995,2,5,22,WPUJC Vaas
335996,1,5,17,SM Pollock
335996,2,12,22,VRV Singh
335997,1,6,15,MM Patel
335997,2,14,26,P Kumar
335998,1,2,16,MS Gony
335998,2,15,14,LR Shukla
335999,1,15,15,D Kalyankrishna
335999,1,16,15,Shahid Afridi
335999,1,14,15,SB Bangar
335999,2,7,23,SM Pollock
336000,1,16,15,S Sreesanth
336000,2,12,14,Shoaib Malik
336001,1,19,23,DW Steyn
336001,2,6,13,MS Gony
336001,2,8,13,P Amarnath
336002,1,18,14,CRD Fernando
336002,2,12,15,M Kartik
336003,1,14,19,SB Joshi
336003,2,20,19,V Sehwag
336004,1,19,17,Gagandeep Singh
336004,2,15,18,D Kalyankrishna
336005,1,18,16,LR Shukla
336005,2,8,15,SK Trivedi
336005,2,11,15,MM Patel
336006,1,11,16,V Sehwag
336006,2,7,19,Joginder Sharma
336007,1,11,20,B Akhil
336007,2,19,21,LPC Silva
336008,1,20,21,I Sharma
336008,2,18,18,JR Hopes
336008,2,19,18,Gagandeep Singh
336009,1,19,20,Mohammad Asif
336009,2,4,16,A Nehra
336009,2,10,16,ST Jayasuriya
336010,1,12,17,SK Warne
336010,2,13,12,S Vidyut
336011,1,17,13,VRV Singh
336011,1,15,13,Gagandeep Singh
336011,2,10,14,A Kumble
336012,1,20,20,SB Bangar
336012,2,18,21,Joginder Sharma
336013,1,6,17,DS Kulkarni
336013,2,4,13,MM Patel
336014,1,17,15,CK Kapugedera
336014,2,14,23,V Sehwag
336015,1,9,15,A Kumble
336015,2,15,15,M Kartik
336015,2,13,15,Umar Gul
336015,2,11,15,LR Shukla
336016,1,5,12,SR Watson
336016,1,3,12,Sohail Tanvir
336016,2,6,17,PP Ojha
336017,1,11,18,DS Kulkarni
336017,2,11,16,A Kumble
336017,2,8,16,R Vinay Kumar
336018,1,19,16,JR Hopes
336018,2,18,19,MS Gony
336019,1,18,20,RP Singh
336019,2,14,22,M Kartik
336020,1,19,27,SK Warne
336020,2,9,22,VY Mahesh
336021,1,16,16,JR Hopes
336021,2,11,20,DW Steyn
336022,1,7,11,VY Mahesh
336022,2,2,11,I Sharma
336022,2,14,11,Iqbal Abdulla
336023,1,19,14,DJ Bravo
336023,1,18,14,RR Raje
336023,2,14,26,CK Kapugedera
336024,1,17,24,Pankaj Singh
336024,2,14,23,S Sreesanth
336025,1,4,19,RP Singh
336025,2,12,19,R Bhatia
336026,1,10,9,RR Raje
336026,1,14,9,DJ Bravo
336026,2,3,23,Shoaib Akhtar
336027,1,6,22,VRV Singh
336027,2,5,21,V Sehwag

2025-02-10 16:01:55 - root - INFO - itercount: 0
2025-02-10 16:01:55 - root - INFO - Database Name: IPL
Schema Name: IPL
,0
table_name,PLAYER_MATCH
description,
DDL,"create or replace TABLE PLAYER_MATCH (
	""match_id"" NUMBER(38,0),
	""player_id"" NUMBER(38,0),
	""role"" VARCHAR(16777216),
	""team_id"" NUMBER(38,0)
);"

Database Name: IPL
Schema Name: IPL
,1
table_name,PLAYER
description,
DDL,"create or replace TABLE PLAYER (
	""player_id"" NUMBER(38,0),
	""player_name"" VARCHAR(16777216),
	""dob"" VARCHAR(16777216),
	""batting_hand"" VARCHAR(16777216),
	""bowling_skill"" VARCHAR(16777216),
	""country_name"" VARCHAR(16777216)
);"

Database Name: IPL
Schema Name: IPL
,2
table_name,BATSMAN_SCORED
description,
DDL,"create or replace TABLE BATSMAN_SCORED (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""runs_scored"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

Database Name: IPL
Schema Name: IPL
,3
table_name,WICKET_TAKEN
description,
DDL,"create or replace TABLE WICKET_TAKEN (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""player_out"" NUMBER(38,0),
	""kind_out"" VARCHAR(16777216),
	""innings_no"" NUMBER(38,0)
);"

Database Name: IPL
Schema Name: IPL
,4
table_name,BALL_BY_BALL
description,
DDL,"create or replace TABLE BALL_BY_BALL (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0),
	""team_batting"" NUMBER(38,0),
	""team_bowling"" NUMBER(38,0),
	""striker_batting_position"" NUMBER(38,0),
	""striker"" NUMBER(38,0),
	""non_striker"" NUMBER(38,0),
	""bowler"" NUMBER(38,0)
);"

Database Name: IPL
Schema Name: IPL
,5
table_name,EXTRA_RUNS
description,
DDL,"create or replace TABLE EXTRA_RUNS (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""extra_type"" VARCHAR(16777216),
	""extra_runs"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

Database Name: IPL
Schema Name: IPL
,6
table_name,MATCH
description,
DDL,"create or replace TABLE MATCH (
	""match_id"" NUMBER(38,0),
	""team_1"" NUMBER(38,0),
	""team_2"" NUMBER(38,0),
	""match_date"" VARCHAR(16777216),
	""season_id"" NUMBER(38,0),
	""venue"" VARCHAR(16777216),
	""toss_winner"" NUMBER(38,0),
	""toss_decision"" VARCHAR(16777216),
	""win_type"" VARCHAR(16777216),
	""win_margin"" NUMBER(38,0),
	""outcome_type"" VARCHAR(16777216),
	""match_winner"" NUMBER(38,0),
	""man_of_the_match"" NUMBER(38,0)
);"

Database Name: IPL
Schema Name: IPL
,7
table_name,TEAM
description,
DDL,"create or replace TABLE TEAM (
	""team_id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'IPL': {'IPL': ['PLAYER_MATCH', 'PLAYER', 'BATSMAN_SCORED', 'WICKET_TAKEN', 'BALL_BY_BALL', 'EXTRA_RUNS', 'MATCH', 'TEAM']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **BATSMAN_SCORED**
   - `"match_id"`: To identify each match.
   - `"innings_no"`: To identify the innings within a match.
   - `"over_id"`: To group runs by over.
   - `"ball_id"`: To join with other tables based on delivery.
   - `"runs_scored"`: Runs scored by the batsman on each ball.

2. **EXTRA_RUNS**
   - `"match_id"`: To identify each match.
   - `"innings_no"`: To identify the innings within a match.
   - `"over_id"`: To group extras by over.
   - `"ball_id"`: To join with other tables based on delivery.
   - `"extra_runs"`: Runs awarded as extras on each ball.
   - `"extra_type"`: Type of extra run (e.g., wide, no-ball).

3. **BALL_BY_BALL**
   - `"match_id"`: To identify each match.
   - `"innings_no"`: To identify the innings within a match.
   - `"over_id"`: To group deliveries by over.
   - `"ball_id"`: To join with other tables based on delivery.
   - `"bowler"`: Player ID of the bowler for each delivery.

4. **PLAYER**
   - `"player_id"`: To join with `"bowler"` from `BALL_BY_BALL`.
   - `"player_name"`: To get the name of the bowler.

**Conditions that may be used:**

- Joining tables on `"match_id"`, `"innings_no"`, `"over_id"`, and `"ball_id"` to combine data per delivery.
- Using `COALESCE` to handle `NULL` values in `"extra_runs"`.
- Grouping by `"match_id"`, `"innings_no"`, `"over_id"` to calculate total runs per over.
- Ordering results to find the over with the highest total runs per match and innings.
- Using `DISTINCT` to retrieve unique values.

---

**SQL Queries:**

1. **Retrieve distinct matches from the `BATSMAN_SCORED` table:**
   ```sql
   SELECT DISTINCT "match_id"
   FROM IPL.IPL.BATSMAN_SCORED
   LIMIT 100;
   ```

2. **List all innings numbers for matches in the `BATSMAN_SCORED` table:**
   ```sql
   SELECT DISTINCT "match_id", "innings_no"
   FROM IPL.IPL.BATSMAN_SCORED
   ORDER BY "match_id", "innings_no"
   LIMIT 100;
   ```

3. **Select runs scored by batsmen for each delivery:**
   ```sql
   SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
   FROM IPL.IPL.BATSMAN_SCORED
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
   ```

4. **Select extra runs and their types for each delivery:**
   ```sql
   SELECT "match_id", "innings_no", "over_id", "ball_id", "extra_runs", "extra_type"
   FROM IPL.IPL.EXTRA_RUNS
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
   ```

5. **Retrieve bowler IDs and corresponding deliveries from the `BALL_BY_BALL` table:**
   ```sql
   SELECT "match_id", "innings_no", "over_id", "ball_id", "bowler"
   FROM IPL.IPL.BALL_BY_BALL
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
   ```

6. **Get bowler names by joining `BALL_BY_BALL` and `PLAYER` tables:**
   ```sql
   SELECT b."bowler", p."player_name"
   FROM IPL.IPL.BALL_BY_BALL b
   JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
   LIMIT 100;
   ```

7. **Calculate total runs per delivery by combining batsman and extra runs:**
   ```sql
   SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
          bs."runs_scored", COALESCE(er."extra_runs", 0) AS "extra_runs",
          (bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs"
   FROM IPL.IPL.BATSMAN_SCORED bs
   LEFT JOIN IPL.IPL.EXTRA_RUNS er
     ON bs."match_id" = er."match_id"
    AND bs."innings_no" = er."innings_no"
    AND bs."over_id" = er."over_id"
    AND bs."ball_id" = er."ball_id"
   ORDER BY bs."match_id", bs."innings_no", bs."over_id", bs."ball_id"
   LIMIT 100;
   ```

8. **Compute total runs per over for each innings in each match:**
   ```sql
   SELECT bs."match_id", bs."innings_no", bs."over_id",
          SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over"
   FROM IPL.IPL.BATSMAN_SCORED bs
   LEFT JOIN IPL.IPL.EXTRA_RUNS er
     ON bs."match_id" = er."match_id"
    AND bs."innings_no" = er."innings_no"
    AND bs."over_id" = er."over_id"
    AND bs."ball_id" = er."ball_id"
   GROUP BY bs."match_id", bs."innings_no", bs."over_id"
   ORDER BY bs."match_id", bs."innings_no", bs."over_id"
   LIMIT 100;
   ```

9. **Identify the over with the highest total runs in each innings of each match:**
   ```sql
   SELECT sub."match_id", sub."innings_no", sub."over_id", sub."total_runs_in_over"
   FROM (
     SELECT bs."match_id", bs."innings_no", bs."over_id",
            SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
            RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                         ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC) AS "over_rank"
     FROM IPL.IPL.BATSMAN_SCORED bs
     LEFT JOIN IPL.IPL.EXTRA_RUNS er
       ON bs."match_id" = er."match_id"
      AND bs."innings_no" = er."innings_no"
      AND bs."over_id" = er."over_id"
      AND bs."ball_id" = er."ball_id"
     GROUP BY bs."match_id", bs."innings_no", bs."over_id"
   ) sub
   WHERE sub."over_rank" = 1
   ORDER BY sub."match_id", sub."innings_no"
   LIMIT 100;
   ```

10. **Retrieve bowler names for the overs with the highest total runs:**
    ```sql
    SELECT top_overs."match_id", top_overs."innings_no", top_overs."over_id",
           top_overs."total_runs_in_over", p."player_name" AS "bowler_name"
    FROM (
      SELECT bs."match_id", bs."innings_no", bs."over_id",
             SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
             RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                          ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC) AS "over_rank"
      FROM IPL.IPL.BATSMAN_SCORED bs
      LEFT JOIN IPL.IPL.EXTRA_RUNS er
        ON bs."match_id" = er."match_id"
       AND bs."innings_no" = er."innings_no"
       AND bs."over_id" = er."over_id"
       AND bs."ball_id" = er."ball_id"
      GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    ) top_overs
    JOIN IPL.IPL.BALL_BY_BALL bbb
      ON top_overs."match_id" = bbb."match_id"
     AND top_overs."innings_no" = bbb."innings_no"
     AND top_overs."over_id" = bbb."over_id"
    JOIN IPL.IPL.PLAYER p
      ON bbb."bowler" = p."player_id"
    WHERE top_overs."over_rank" = 1
    GROUP BY top_overs."match_id", top_overs."innings_no", top_overs."over_id",
             top_overs."total_runs_in_over", p."player_name"
    ORDER BY top_overs."match_id", top_overs."innings_no"
    LIMIT 100;
    ```

These queries progressively explore the data needed to address the task by:

- Identifying matches and innings.
- Calculating total runs per delivery by combining batsman and extra runs.
- Summing runs per over to find total runs in each over.
- Ranking overs to find those with the highest total runs in each innings of each match.
- Retrieving bowler details for the identified overs.

By running these queries, we can understand the values in related columns and how they contribute to calculating the average of the highest over totals across all matches.Query:
SELECT DISTINCT "match_id"
   FROM IPL.IPL.BATSMAN_SCORED
   LIMIT 100;
Answer:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335998
335999
336000
336002
336004
336006
336008
336010
336017
336018
336019
336020
336024
336028
336030
336036
336044
392193
392202
392216
419117
419128
419141
419143
419149
501203
501207
501230
336003
336015
336037
336039
392186
392194
392214
392215
392221
392233
392236
392241
419114
419124
419150
419152
419153
419158
501211
501212
501221
419138
501214
501259
501264
335997
336005
336007
336009
336012
336013
336023
336031
336034
336042
392188
392201
392205
392220
392225
392235
419131
419142
419166
336014
336016
336033
336040
336041
336043
336045
392189
392190
392196
392197
392200
392204
392206
392210
392218
392223
392224
Query:
SELECT DISTINCT "match_id", "innings_no"
   FROM IPL.IPL.BATSMAN_SCORED
   ORDER BY "match_id", "innings_no"
   LIMIT 100;
Answer:
match_id,innings_no
335987,1
335987,2
335988,1
335988,2
335989,1
335989,2
335990,1
335990,2
335991,1
335991,2
335992,1
335992,2
335993,1
335993,2
335994,1
335994,2
335995,1
335995,2
335996,1
335996,2
335997,1
335997,2
335998,1
335998,2
335999,1
335999,2
336000,1
336000,2
336001,1
336001,2
336002,1
336002,2
336003,1
336003,2
336004,1
336004,2
336005,1
336005,2
336006,1
336006,2
336007,1
336007,2
336008,1
336008,2
336009,1
336009,2
336010,1
336010,2
336011,1
336011,2
336012,1
336012,2
336013,1
336013,2
336014,1
336014,2
336015,1
336015,2
336016,1
336016,2
336017,1
336017,2
336018,1
336018,2
336019,1
336019,2
336020,1
336020,2
336021,1
336021,2
336022,1
336022,2
336023,1
336023,2
336024,1
336024,2
336025,1
336025,2
336026,1
336026,2
336027,1
336027,2
336028,1
336028,2
336029,1
336029,2
336030,1
336030,2
336031,1
336031,2
336032,1
336032,2
336033,1
336033,2
336034,1
336034,2
336036,1
336036,2
336037,1
336037,2
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
   FROM IPL.IPL.BATSMAN_SCORED
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored
335987,1,1,2,0
335987,1,1,4,0
335987,1,1,5,0
335987,1,1,6,0
335987,1,1,7,0
335987,1,2,1,0
335987,1,2,2,4
335987,1,2,3,4
335987,1,2,4,6
335987,1,2,5,4
335987,1,2,6,0
335987,1,3,1,0
335987,1,3,2,0
335987,1,3,3,0
335987,1,3,4,4
335987,1,3,5,1
335987,1,3,6,0
335987,1,4,2,6
335987,1,4,3,0
335987,1,4,4,4
335987,1,4,5,0
335987,1,4,6,1
335987,1,4,7,6
335987,1,5,1,4
335987,1,5,2,1
335987,1,5,3,4
335987,1,5,4,0
335987,1,5,5,1
335987,1,5,6,0
335987,1,6,1,1
335987,1,6,2,0
335987,1,6,3,0
335987,1,6,4,0
335987,1,6,5,0
335987,1,6,6,0
335987,1,7,1,1
335987,1,7,2,1
335987,1,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,1,8,1,0
335987,1,8,2,1
335987,1,8,3,1
335987,1,8,4,1
335987,1,8,5,1
335987,1,8,6,1
335987,1,9,1,0
335987,1,9,2,0
335987,1,9,3,0
335987,1,9,4,1
335987,1,9,5,1
335987,1,9,6,2
335987,1,10,1,1
335987,1,10,2,1
335987,1,10,3,1
335987,1,10,4,0
335987,1,10,5,6
335987,1,10,6,1
335987,1,11,1,1
335987,1,11,2,4
335987,1,11,3,0
335987,1,11,4,6
335987,1,11,5,0
335987,1,11,6,0
335987,1,12,1,0
335987,1,12,2,6
335987,1,12,3,2
335987,1,12,4,1
335987,1,12,5,0
335987,1,12,6,1
335987,1,13,1,0
335987,1,13,2,4
335987,1,13,3,0
335987,1,13,4,2
335987,1,13,6,4
335987,1,13,7,1
335987,1,14,1,1
335987,1,14,2,0
335987,1,14,3,1
335987,1,14,4,1
335987,1,14,5,1
335987,1,14,6,2
335987,1,15,1,4
335987,1,15,2,1
335987,1,15,3,6
335987,1,15,4,4
335987,1,15,6,1
335987,1,15,7,6
335987,1,16,1,0
335987,1,16,2,1
335987,1,16,3,2
335987,1,16,4,0
335987,1,16,5,1
335987,1,16,6,0
335987,1,17,1,1
335987,1,17,2,2
335987,1,17,3,1
335987,1,17,4,6
335987,1,17,5,2
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "extra_runs", "extra_type"
   FROM IPL.IPL.EXTRA_RUNS
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,extra_runs,extra_type
335987,1,1,1,1,legbyes
335987,1,1,3,1,wides
335987,1,1,7,1,legbyes
335987,1,3,3,1,legbyes
335987,1,4,1,5,wides
335987,1,4,3,1,legbyes
335987,1,11,6,4,byes
335987,1,13,5,1,wides
335987,1,15,5,2,wides
335987,2,1,2,1,wides
335987,2,2,3,4,legbyes
335987,2,3,5,1,wides
335987,2,4,4,1,legbyes
335987,2,7,4,1,wides
335987,2,7,5,1,wides
335987,2,8,2,1,legbyes
335987,2,9,4,1,wides
335987,2,9,5,1,wides
335987,2,10,4,1,wides
335987,2,10,5,1,legbyes
335987,2,13,2,2,wides
335987,2,15,1,1,wides
335987,2,15,5,1,legbyes
335987,2,16,1,1,wides
335988,1,2,5,1,wides
335988,1,3,2,1,noballs
335988,1,5,2,1,legbyes
335988,1,13,1,1,wides
335988,1,13,4,1,wides
335988,1,14,6,1,legbyes
335988,2,6,4,1,wides
335988,2,6,7,1,wides
335988,2,7,5,1,legbyes
335988,2,9,6,1,wides
335988,2,13,1,1,legbyes
335988,2,13,4,1,legbyes
335988,2,14,4,2,wides
335988,2,16,2,1,byes
335988,2,17,1,1,legbyes
335988,2,18,5,1,byes
335989,1,1,4,1,wides
335989,1,6,4,1,legbyes
335989,1,8,1,1,legbyes
335989,1,9,3,1,byes
335989,1,10,1,1,legbyes
335989,1,13,4,2,wides
335989,2,2,6,1,wides
335989,2,6,2,1,wides
335989,2,8,3,1,wides
335989,2,10,2,1,wides
335989,2,13,6,5,wides
335989,2,15,1,1,wides
335990,1,2,6,4,legbyes
335990,1,3,6,1,wides
335990,1,5,1,1,wides
335990,1,9,1,1,legbyes
335990,1,10,4,1,legbyes
335990,1,14,6,1,byes
335990,1,16,4,1,wides
335990,1,17,2,1,byes
335990,2,5,5,1,wides
335990,2,9,3,1,wides
335990,2,14,2,1,wides
335990,2,14,6,1,wides
335990,2,20,2,1,wides
335991,1,1,2,1,noballs
335991,1,2,1,1,legbyes
335991,1,2,5,1,wides
335991,1,2,7,1,wides
335991,1,8,2,1,noballs
335991,1,10,3,1,legbyes
335991,1,10,5,1,legbyes
335991,1,14,2,1,legbyes
335991,1,16,5,1,wides
335991,1,17,2,1,wides
335991,2,2,5,4,legbyes
335991,2,3,3,1,legbyes
335991,2,7,4,5,wides
335991,2,9,4,1,wides
335991,2,10,3,1,wides
335991,2,12,2,4,byes
335991,2,12,4,1,wides
335991,2,12,5,5,wides
335991,2,12,8,1,noballs
335991,2,13,1,1,wides
335991,2,13,5,1,wides
335991,2,15,5,1,legbyes
335991,2,18,3,1,legbyes
335991,2,19,2,1,legbyes
335992,1,8,1,1,wides
335992,1,8,6,1,wides
335992,1,8,7,1,legbyes
335992,1,20,2,1,noballs
335992,2,1,2,1,noballs
335992,2,2,2,1,wides
335992,2,2,7,1,noballs
335992,2,3,5,1,noballs
335992,2,4,1,1,wides
335992,2,4,5,1,wides
335992,2,5,1,1,legbyes
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "bowler"
   FROM IPL.IPL.BALL_BY_BALL
   ORDER BY "match_id", "innings_no", "over_id", "ball_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,bowler
335987,1,1,2,14
335987,1,1,3,14
335987,1,1,4,14
335987,1,1,5,14
335987,1,1,6,14
335987,1,1,7,14
335987,1,2,1,15
335987,1,2,2,15
335987,1,2,3,15
335987,1,2,4,15
335987,1,2,5,15
335987,1,2,6,15
335987,1,3,1,14
335987,1,3,2,14
335987,1,3,3,14
335987,1,3,4,14
335987,1,3,5,14
335987,1,3,6,14
335987,1,4,1,13
335987,1,4,2,13
335987,1,4,3,13
335987,1,4,4,13
335987,1,4,5,13
335987,1,4,6,13
335987,1,4,7,13
335987,1,5,1,14
335987,1,5,2,14
335987,1,5,3,14
335987,1,5,4,14
335987,1,5,5,14
335987,1,5,6,14
335987,1,6,1,15
335987,1,6,2,15
335987,1,6,3,15
335987,1,6,4,15
335987,1,6,5,15
335987,1,6,6,15
335987,1,7,1,13
335987,1,7,2,13
335987,1,7,3,13
335987,1,7,4,13
335987,1,7,5,13
335987,1,7,6,13
335987,1,8,1,15
335987,1,8,2,15
335987,1,8,3,15
335987,1,8,4,15
335987,1,8,5,15
335987,1,8,6,15
335987,1,9,1,9
335987,1,9,2,9
335987,1,9,3,9
335987,1,9,4,9
335987,1,9,5,9
335987,1,9,6,9
335987,1,10,1,16
335987,1,10,2,16
335987,1,10,3,16
335987,1,10,4,16
335987,1,10,5,16
335987,1,10,6,16
335987,1,11,1,9
335987,1,11,2,9
335987,1,11,3,9
335987,1,11,4,9
335987,1,11,5,9
335987,1,11,6,9
335987,1,12,1,16
335987,1,12,2,16
335987,1,12,3,16
335987,1,12,4,16
335987,1,12,5,16
335987,1,12,6,16
335987,1,13,1,9
335987,1,13,2,9
335987,1,13,3,9
335987,1,13,4,9
335987,1,13,5,9
335987,1,13,6,9
335987,1,13,7,9
335987,1,14,1,16
335987,1,14,2,16
335987,1,14,3,16
335987,1,14,4,16
335987,1,14,5,16
335987,1,14,6,16
335987,1,15,1,10
335987,1,15,2,10
335987,1,15,3,10
335987,1,15,4,10
335987,1,15,5,10
335987,1,15,6,10
335987,1,15,7,10
335987,1,16,1,13
335987,1,16,2,13
335987,1,16,3,13
335987,1,16,4,13
335987,1,16,5,13
335987,1,16,6,13
335987,1,17,1,15
Query:
SELECT b."bowler", p."player_name"
   FROM IPL.IPL.BALL_BY_BALL b
   JOIN IPL.IPL.PLAYER p ON b."bowler" = p."player_id"
   LIMIT 100;
Answer:
bowler,player_name
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
15,Z Khan
84,I Sharma
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
14,P Kumar
106,AB Dinda
106,AB Dinda
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
84,I Sharma
13,AA Noffke
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
14,P Kumar
82,AB Agarkar
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
15,Z Khan
106,AB Dinda
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
13,AA Noffke
82,AB Agarkar
82,AB Agarkar
82,AB Agarkar
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
1,SC Ganguly
15,Z Khan
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id", bs."ball_id",
          bs."runs_scored", COALESCE(er."extra_runs", 0) AS "extra_runs",
          (bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs"
   FROM IPL.IPL.BATSMAN_SCORED bs
   LEFT JOIN IPL.IPL.EXTRA_RUNS er
     ON bs."match_id" = er."match_id"
    AND bs."innings_no" = er."innings_no"
    AND bs."over_id" = er."over_id"
    AND bs."ball_id" = er."ball_id"
   ORDER BY bs."match_id", bs."innings_no", bs."over_id", bs."ball_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored,extra_runs,total_runs
335987,1,1,2,0,0,0
335987,1,1,4,0,0,0
335987,1,1,5,0,0,0
335987,1,1,6,0,0,0
335987,1,1,7,0,1,1
335987,1,2,1,0,0,0
335987,1,2,2,4,0,4
335987,1,2,3,4,0,4
335987,1,2,4,6,0,6
335987,1,2,5,4,0,4
335987,1,2,6,0,0,0
335987,1,3,1,0,0,0
335987,1,3,2,0,0,0
335987,1,3,3,0,1,1
335987,1,3,4,4,0,4
335987,1,3,5,1,0,1
335987,1,3,6,0,0,0
335987,1,4,2,6,0,6
335987,1,4,3,0,1,1
335987,1,4,4,4,0,4
335987,1,4,5,0,0,0
335987,1,4,6,1,0,1
335987,1,4,7,6,0,6
335987,1,5,1,4,0,4
335987,1,5,2,1,0,1
335987,1,5,3,4,0,4
335987,1,5,4,0,0,0
335987,1,5,5,1,0,1
335987,1,5,6,0,0,0
335987,1,6,1,1,0,1
335987,1,6,2,0,0,0
335987,1,6,3,0,0,0
335987,1,6,4,0,0,0
335987,1,6,5,0,0,0
335987,1,6,6,0,0,0
335987,1,7,1,1,0,1
335987,1,7,2,1,0,1
335987,1,7,3,1,0,1
335987,1,7,4,2,0,2
335987,1,7,5,1,0,1
335987,1,7,6,1,0,1
335987,1,8,1,0,0,0
335987,1,8,2,1,0,1
335987,1,8,3,1,0,1
335987,1,8,4,1,0,1
335987,1,8,5,1,0,1
335987,1,8,6,1,0,1
335987,1,9,1,0,0,0
335987,1,9,2,0,0,0
335987,1,9,3,0,0,0
335987,1,9,4,1,0,1
335987,1,9,5,1,0,1
335987,1,9,6,2,0,2
335987,1,10,1,1,0,1
335987,1,10,2,1,0,1
335987,1,10,3,1,0,1
335987,1,10,4,0,0,0
335987,1,10,5,6,0,6
335987,1,10,6,1,0,1
335987,1,11,1,1,0,1
335987,1,11,2,4,0,4
335987,1,11,3,0,0,0
335987,1,11,4,6,0,6
335987,1,11,5,0,0,0
335987,1,11,6,0,4,4
335987,1,12,1,0,0,0
335987,1,12,2,6,0,6
335987,1,12,3,2,0,2
335987,1,12,4,1,0,1
335987,1,12,5,0,0,0
335987,1,12,6,1,0,1
335987,1,13,1,0,0,0
335987,1,13,2,4,0,4
335987,1,13,3,0,0,0
335987,1,13,4,2,0,2
335987,1,13,6,4,0,4
335987,1,13,7,1,0,1
335987,1,14,1,1,0,1
335987,1,14,2,0,0,0
335987,1,14,3,1,0,1
335987,1,14,4,1,0,1
335987,1,14,5,1,0,1
335987,1,14,6,2,0,2
335987,1,15,1,4,0,4
335987,1,15,2,1,0,1
335987,1,15,3,6,0,6
335987,1,15,4,4,0,4
335987,1,15,6,1,0,1
335987,1,15,7,6,0,6
335987,1,16,1,0,0,0
335987,1,16,2,1,0,1
335987,1,16,3,2,0,2
335987,1,16,4,0,0,0
335987,1,16,5,1,0,1
335987,1,16,6,0,0,0
335987,1,17,1,1,0,1
335987,1,17,2,2,0,2
335987,1,17,3,1,0,1
335987,1,17,4,6,0,6
335987,1,17,5,2,0,2
Query:
SELECT bs."match_id", bs."innings_no", bs."over_id",
          SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over"
   FROM IPL.IPL.BATSMAN_SCORED bs
   LEFT JOIN IPL.IPL.EXTRA_RUNS er
     ON bs."match_id" = er."match_id"
    AND bs."innings_no" = er."innings_no"
    AND bs."over_id" = er."over_id"
    AND bs."ball_id" = er."ball_id"
   GROUP BY bs."match_id", bs."innings_no", bs."over_id"
   ORDER BY bs."match_id", bs."innings_no", bs."over_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,total_runs_in_over
335987,1,1,1
335987,1,2,18
335987,1,3,6
335987,1,4,18
335987,1,5,10
335987,1,6,1
335987,1,7,7
335987,1,8,5
335987,1,9,4
335987,1,10,10
335987,1,11,15
335987,1,12,10
335987,1,13,11
335987,1,14,6
335987,1,15,22
335987,1,16,4
335987,1,17,14
335987,1,18,7
335987,1,19,21
335987,1,20,22
335987,2,1,3
335987,2,2,5
335987,2,3,2
335987,2,4,4
335987,2,5,8
335987,2,6,2
335987,2,7,5
335987,2,8,5
335987,2,9,3
335987,2,10,7
335987,2,11,5
335987,2,12,3
335987,2,13,9
335987,2,14,7
335987,2,15,3
335987,2,16,0
335988,1,1,5
335988,1,2,14
335988,1,3,7
335988,1,4,6
335988,1,5,9
335988,1,6,11
335988,1,7,9
335988,1,8,8
335988,1,9,13
335988,1,10,5
335988,1,11,19
335988,1,12,20
335988,1,13,4
335988,1,14,10
335988,1,15,18
335988,1,16,8
335988,1,17,14
335988,1,18,17
335988,1,19,15
335988,1,20,25
335988,2,1,9
335988,2,2,7
335988,2,3,11
335988,2,4,10
335988,2,5,10
335988,2,6,14
335988,2,7,6
335988,2,8,15
335988,2,9,12
335988,2,10,13
335988,2,11,5
335988,2,12,12
335988,2,13,14
335988,2,14,9
335988,2,15,13
335988,2,16,11
335988,2,17,10
335988,2,18,5
335988,2,19,7
335988,2,20,9
335989,1,1,6
335989,1,2,10
335989,1,3,0
335989,1,4,10
335989,1,5,6
335989,1,6,3
335989,1,7,4
335989,1,8,4
335989,1,9,3
335989,1,10,6
335989,1,11,2
335989,1,12,12
335989,1,13,7
335989,1,14,7
335989,1,15,9
335989,1,16,10
335989,1,17,4
335989,1,18,1
335989,1,19,10
335989,1,20,8
335989,2,1,8
335989,2,2,12
335989,2,3,5
335989,2,4,10
Query:
SELECT sub."match_id", sub."innings_no", sub."over_id", sub."total_runs_in_over"
   FROM (
     SELECT bs."match_id", bs."innings_no", bs."over_id",
            SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
            RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                         ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC) AS "over_rank"
     FROM IPL.IPL.BATSMAN_SCORED bs
     LEFT JOIN IPL.IPL.EXTRA_RUNS er
       ON bs."match_id" = er."match_id"
      AND bs."innings_no" = er."innings_no"
      AND bs."over_id" = er."over_id"
      AND bs."ball_id" = er."ball_id"
     GROUP BY bs."match_id", bs."innings_no", bs."over_id"
   ) sub
   WHERE sub."over_rank" = 1
   ORDER BY sub."match_id", sub."innings_no"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,total_runs_in_over
335987,1,15,22
335987,1,20,22
335987,2,13,9
335988,1,20,25
335988,2,8,15
335989,1,12,12
335989,2,2,12
335989,2,5,12
335989,2,15,12
335990,1,18,20
335990,2,18,19
335991,1,17,19
335991,2,18,13
335992,1,20,17
335992,2,3,15
335992,2,15,15
335993,1,18,26
335993,2,13,30
335994,1,3,18
335994,2,17,21
335995,1,15,19
335995,2,5,22
335996,1,5,17
335996,2,12,22
335997,1,6,15
335997,2,14,26
335998,1,2,16
335998,2,15,14
335999,1,15,15
335999,1,16,15
335999,1,14,15
335999,2,7,23
336000,1,16,15
336000,2,12,14
336001,1,19,23
336001,2,8,13
336001,2,6,13
336002,1,18,14
336002,2,12,15
336003,1,14,19
336003,2,20,19
336004,1,19,17
336004,2,15,18
336005,1,18,16
336005,2,11,15
336005,2,8,15
336006,1,11,16
336006,2,7,19
336007,1,11,20
336007,2,19,21
336008,1,20,21
336008,2,19,18
336008,2,18,18
336009,1,19,20
336009,2,10,16
336009,2,4,16
336010,1,12,17
336010,2,13,12
336011,1,15,13
336011,1,17,13
336011,2,10,14
336012,1,20,20
336012,2,18,21
336013,1,6,17
336013,2,4,13
336014,1,17,15
336014,2,14,23
336015,1,9,15
336015,2,15,15
336015,2,11,15
336015,2,13,15
336016,1,5,12
336016,1,3,12
336016,2,6,17
336017,1,11,18
336017,2,8,16
336017,2,11,16
336018,1,19,16
336018,2,18,19
336019,1,18,20
336019,2,14,22
336020,1,19,27
336020,2,9,22
336021,1,16,16
336021,2,11,20
336022,1,7,11
336022,2,2,11
336022,2,14,11
336023,1,18,14
336023,1,19,14
336023,2,14,26
336024,1,17,24
336024,2,14,23
336025,1,4,19
336025,2,12,19
336026,1,14,9
336026,1,10,9
336026,2,3,23
336027,1,6,22
336027,2,5,21
Query:
SELECT top_overs."match_id", top_overs."innings_no", top_overs."over_id",
           top_overs."total_runs_in_over", p."player_name" AS "bowler_name"
    FROM (
      SELECT bs."match_id", bs."innings_no", bs."over_id",
             SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
             RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                          ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC) AS "over_rank"
      FROM IPL.IPL.BATSMAN_SCORED bs
      LEFT JOIN IPL.IPL.EXTRA_RUNS er
        ON bs."match_id" = er."match_id"
       AND bs."innings_no" = er."innings_no"
       AND bs."over_id" = er."over_id"
       AND bs."ball_id" = er."ball_id"
      GROUP BY bs."match_id", bs."innings_no", bs."over_id"
    ) top_overs
    JOIN IPL.IPL.BALL_BY_BALL bbb
      ON top_overs."match_id" = bbb."match_id"
     AND top_overs."innings_no" = bbb."innings_no"
     AND top_overs."over_id" = bbb."over_id"
    JOIN IPL.IPL.PLAYER p
      ON bbb."bowler" = p."player_id"
    WHERE top_overs."over_rank" = 1
    GROUP BY top_overs."match_id", top_overs."innings_no", top_overs."over_id",
             top_overs."total_runs_in_over", p."player_name"
    ORDER BY top_overs."match_id", top_overs."innings_no"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,total_runs_in_over,bowler_name
335987,1,20,22,P Kumar
335987,1,15,22,CL White
335987,2,13,9,LR Shukla
335988,1,20,25,JR Hopes
335988,2,8,15,P Amarnath
335989,1,12,12,DL Vettori
335989,2,2,12,SR Watson
335989,2,5,12,MM Patel
335989,2,15,12,SK Trivedi
335990,1,18,20,R Vinay Kumar
335990,2,18,19,A Nehra
335991,1,17,19,DJ Hussey
335991,2,18,13,SB Styris
335992,1,20,17,SR Watson
335992,2,3,15,B Lee
335992,2,15,15,PP Chawla
335993,1,18,26,MF Maharoof
335993,2,13,30,A Symonds
335994,1,3,18,SM Pollock
335994,2,17,21,P Amarnath
335995,1,15,19,SK Trivedi
335995,2,5,22,WPUJC Vaas
335996,1,5,17,SM Pollock
335996,2,12,22,VRV Singh
335997,1,6,15,MM Patel
335997,2,14,26,P Kumar
335998,1,2,16,MS Gony
335998,2,15,14,LR Shukla
335999,1,15,15,D Kalyankrishna
335999,1,16,15,Shahid Afridi
335999,1,14,15,SB Bangar
335999,2,7,23,SM Pollock
336000,1,16,15,S Sreesanth
336000,2,12,14,Shoaib Malik
336001,1,19,23,DW Steyn
336001,2,6,13,MS Gony
336001,2,8,13,P Amarnath
336002,1,18,14,CRD Fernando
336002,2,12,15,M Kartik
336003,1,14,19,SB Joshi
336003,2,20,19,V Sehwag
336004,1,19,17,Gagandeep Singh
336004,2,15,18,D Kalyankrishna
336005,1,18,16,LR Shukla
336005,2,8,15,SK Trivedi
336005,2,11,15,MM Patel
336006,1,11,16,V Sehwag
336006,2,7,19,Joginder Sharma
336007,1,11,20,B Akhil
336007,2,19,21,LPC Silva
336008,1,20,21,I Sharma
336008,2,18,18,JR Hopes
336008,2,19,18,Gagandeep Singh
336009,1,19,20,Mohammad Asif
336009,2,4,16,A Nehra
336009,2,10,16,ST Jayasuriya
336010,1,12,17,SK Warne
336010,2,13,12,S Vidyut
336011,1,17,13,VRV Singh
336011,1,15,13,Gagandeep Singh
336011,2,10,14,A Kumble
336012,1,20,20,SB Bangar
336012,2,18,21,Joginder Sharma
336013,1,6,17,DS Kulkarni
336013,2,4,13,MM Patel
336014,1,17,15,CK Kapugedera
336014,2,14,23,V Sehwag
336015,1,9,15,A Kumble
336015,2,15,15,M Kartik
336015,2,13,15,Umar Gul
336015,2,11,15,LR Shukla
336016,1,5,12,SR Watson
336016,1,3,12,Sohail Tanvir
336016,2,6,17,PP Ojha
336017,1,11,18,DS Kulkarni
336017,2,11,16,A Kumble
336017,2,8,16,R Vinay Kumar
336018,1,19,16,JR Hopes
336018,2,18,19,MS Gony
336019,1,18,20,RP Singh
336019,2,14,22,M Kartik
336020,1,19,27,SK Warne
336020,2,9,22,VY Mahesh
336021,1,16,16,JR Hopes
336021,2,11,20,DW Steyn
336022,1,7,11,VY Mahesh
336022,2,2,11,I Sharma
336022,2,14,11,Iqbal Abdulla
336023,1,19,14,DJ Bravo
336023,1,18,14,RR Raje
336023,2,14,26,CK Kapugedera
336024,1,17,24,Pankaj Singh
336024,2,14,23,S Sreesanth
336025,1,4,19,RP Singh
336025,2,12,19,R Bhatia
336026,1,10,9,RR Raje
336026,1,14,9,DJ Bravo
336026,2,3,23,Shoaib Akhtar
336027,1,6,22,VRV Singh
336027,2,5,21,V Sehwag
End Exploring Related Columns
Task: For each match, considering every innings, please combine runs from both batsman scored and extra runs for each over, then identify the single over with the highest total runs, retrieve the bowler for that over from the ball by ball table, and calculate the average of these highest over totals across all matches, ensuring that all runs and bowler details are accurately reflected.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Average_Highest_Over_Total
average_runs:float
(Attention: answer in one row)
```

We calculated the average of the highest over totals across all matches by combining runs from both the batsman scored (`runs_scored`) and extra runs (`extra_runs`) for each over in every innings. For each match and innings, we identified the single over with the highest total runs, retrieved the bowler for that over from the `BALL_BY_BALL` table, and then computed the average of these highest over totals across all matches to ensure all runs and bowler details are accurately reflected..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'IPL': {'IPL': ['PLAYER_MATCH', 'PLAYER', 'BATSMAN_SCORED', 'WICKET_TAKEN', 'BALL_BY_BALL', 'EXTRA_RUNS', 'MATCH', 'TEAM']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-10 16:02:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 16:02:44 - root - INFO - ```sql
SELECT AVG("total_runs_in_over") AS "Average_Highest_Over_Total"
FROM (
  SELECT top_overs."match_id", top_overs."innings_no", top_overs."over_id",
         top_overs."total_runs_in_over", p."player_name" AS "bowler_name"
  FROM (
    SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
           RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                        ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC NULLS LAST) AS "over_rank"
    FROM IPL.IPL.BATSMAN_SCORED bs
    LEFT JOIN IPL.IPL.EXTRA_RUNS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
  ) top_overs
  JOIN IPL.IPL.BALL_BY_BALL bbb
    ON top_overs."match_id" = bbb."match_id"
   AND top_overs."innings_no" = bbb."innings_no"
   AND top_overs."over_id" = bbb."over_id"
   AND bbb."ball_id" = 1
  JOIN IPL.IPL.PLAYER p
    ON bbb."bowler" = p."player_id"
  WHERE top_overs."over_rank" = 1
)
;
```
2025-02-10 16:02:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:02:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:02:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:02:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-10 16:02:45 - snowflake.connector.connection - INFO - closed
2025-02-10 16:02:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:02:46 - root - INFO - itercount: 1
2025-02-10 16:02:46 - root - INFO - 0
2025-02-10 16:02:46 - root - INFO - results: 
Average_Highest_Over_Total
16.661364


2025-02-10 16:02:46 - root - INFO - Please check the answer again by reviewing For each match, considering every innings, please combine runs from both batsman scored and extra runs for each over, then identify the single over with the highest total runs, retrieve the bowler for that over from the ball by ball table, and calculate the average of these highest over totals across all matches, ensuring that all runs and bowler details are accurately reflected., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Average_Highest_Over_Total
average_runs:float
(Attention: answer in one row)
```

We calculated the average of the highest over totals across all matches by combining runs from both the batsman scored (`runs_scored`) and extra runs (`extra_runs`) for each over in every innings. For each match and innings, we identified the single over with the highest total runs, retrieved the bowler for that over from the `BALL_BY_BALL` table, and then computed the average of these highest over totals across all matches to ensure all runs and bowler details are accurately reflected. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Average_Highest_Over_Total
16.661364
Current sql:
SELECT AVG("total_runs_in_over") AS "Average_Highest_Over_Total"
FROM (
  SELECT top_overs."match_id", top_overs."innings_no", top_overs."over_id",
         top_overs."total_runs_in_over", p."player_name" AS "bowler_name"
  FROM (
    SELECT bs."match_id", bs."innings_no", bs."over_id",
           SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) AS "total_runs_in_over",
           RANK() OVER (PARTITION BY bs."match_id", bs."innings_no"
                        ORDER BY SUM(bs."runs_scored" + COALESCE(er."extra_runs", 0)) DESC NULLS LAST) AS "over_rank"
    FROM IPL.IPL.BATSMAN_SCORED bs
    LEFT JOIN IPL.IPL.EXTRA_RUNS er
      ON bs."match_id" = er."match_id"
     AND bs."innings_no" = er."innings_no"
     AND bs."over_id" = er."over_id"
     AND bs."ball_id" = er."ball_id"
    GROUP BY bs."match_id", bs."innings_no", bs."over_id"
  ) top_overs
  JOIN IPL.IPL.BALL_BY_BALL bbb
    ON top_overs."match_id" = bbb."match_id"
   AND top_overs."innings_no" = bbb."innings_no"
   AND top_overs."over_id" = bbb."over_id"
   AND bbb."ball_id" = 1
  JOIN IPL.IPL.PLAYER p
    ON bbb."bowler" = p."player_id"
  WHERE top_overs."over_rank" = 1
)
;
2025-02-10 16:03:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 16:03:50 - root - INFO - ```sql
SELECT AVG("total_runs_in_over") AS "Average_Highest_Over_Total"
FROM (
  WITH delivery_runs AS (
    SELECT bbb."match_id", bbb."innings_no", bbb."over_id", bbb."bowler",
           COALESCE(bs."runs_scored", 0) AS "runs_scored",
           COALESCE(er."extra_runs", 0) AS "extra_runs",
           COALESCE(bs."runs_scored", 0) + COALESCE(er."extra_runs", 0) AS "total_runs"
    FROM IPL.IPL.BALL_BY_BALL bbb
    LEFT JOIN IPL.IPL.BATSMAN_SCORED bs
      ON bbb."match_id" = bs."match_id"
     AND bbb."innings_no" = bs."innings_no"
     AND bbb."over_id" = bs."over_id"
     AND bbb."ball_id" = bs."ball_id"
    LEFT JOIN IPL.IPL.EXTRA_RUNS er
      ON bbb."match_id" = er."match_id"
     AND bbb."innings_no" = er."innings_no"
     AND bbb."over_id" = er."over_id"
     AND bbb."ball_id" = er."ball_id"
  ),
  over_runs AS (
    SELECT "match_id", "innings_no", "over_id",
           MIN("bowler") AS "bowler",
           SUM("total_runs") AS "total_runs_in_over"
    FROM delivery_runs
    GROUP BY "match_id", "innings_no", "over_id"
  ),
  top_overs AS (
    SELECT "match_id", "innings_no", "over_id", "bowler", "total_runs_in_over",
           RANK() OVER (PARTITION BY "match_id", "innings_no"
                        ORDER BY "total_runs_in_over" DESC NULLS LAST) AS "over_rank"
    FROM over_runs
  )
  SELECT "total_runs_in_over"
  FROM top_overs
  WHERE "over_rank" = 1
)
;
```
2025-02-10 16:03:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:03:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:03:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:03:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-10 16:03:51 - snowflake.connector.connection - INFO - closed
2025-02-10 16:03:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:03:51 - root - INFO - itercount: 2
2025-02-10 16:03:51 - root - INFO - 0
2025-02-10 16:03:51 - root - INFO - results: 
Average_Highest_Over_Total
16.904059


2025-02-10 16:03:51 - root - INFO - Please check the answer again by reviewing For each match, considering every innings, please combine runs from both batsman scored and extra runs for each over, then identify the single over with the highest total runs, retrieve the bowler for that over from the ball by ball table, and calculate the average of these highest over totals across all matches, ensuring that all runs and bowler details are accurately reflected., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Average_Highest_Over_Total
average_runs:float
(Attention: answer in one row)
```

We calculated the average of the highest over totals across all matches by combining runs from both the batsman scored (`runs_scored`) and extra runs (`extra_runs`) for each over in every innings. For each match and innings, we identified the single over with the highest total runs, retrieved the bowler for that over from the `BALL_BY_BALL` table, and then computed the average of these highest over totals across all matches to ensure all runs and bowler details are accurately reflected. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Average_Highest_Over_Total
16.904059
Current sql:
SELECT AVG("total_runs_in_over") AS "Average_Highest_Over_Total"
FROM (
  WITH delivery_runs AS (
    SELECT bbb."match_id", bbb."innings_no", bbb."over_id", bbb."bowler",
           COALESCE(bs."runs_scored", 0) AS "runs_scored",
           COALESCE(er."extra_runs", 0) AS "extra_runs",
           COALESCE(bs."runs_scored", 0) + COALESCE(er."extra_runs", 0) AS "total_runs"
    FROM IPL.IPL.BALL_BY_BALL bbb
    LEFT JOIN IPL.IPL.BATSMAN_SCORED bs
      ON bbb."match_id" = bs."match_id"
     AND bbb."innings_no" = bs."innings_no"
     AND bbb."over_id" = bs."over_id"
     AND bbb."ball_id" = bs."ball_id"
    LEFT JOIN IPL.IPL.EXTRA_RUNS er
      ON bbb."match_id" = er."match_id"
     AND bbb."innings_no" = er."innings_no"
     AND bbb."over_id" = er."over_id"
     AND bbb."ball_id" = er."ball_id"
  ),
  over_runs AS (
    SELECT "match_id", "innings_no", "over_id",
           MIN("bowler") AS "bowler",
           SUM("total_runs") AS "total_runs_in_over"
    FROM delivery_runs
    GROUP BY "match_id", "innings_no", "over_id"
  ),
  top_overs AS (
    SELECT "match_id", "innings_no", "over_id", "bowler", "total_runs_in_over",
           RANK() OVER (PARTITION BY "match_id", "innings_no"
                        ORDER BY "total_runs_in_over" DESC NULLS LAST) AS "over_rank"
    FROM over_runs
  )
  SELECT "total_runs_in_over"
  FROM top_overs
  WHERE "over_rank" = 1
)
;
2025-02-10 16:04:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 16:04:31 - root - INFO - ```sql
SELECT AVG("total_runs_in_over") AS "Average_Highest_Over_Total"
FROM (
  WITH delivery_runs AS (
    SELECT bbb."match_id", bbb."innings_no", bbb."over_id", bbb."ball_id", bbb."bowler",
           COALESCE(bs."runs_scored", 0) AS "runs_scored",
           COALESCE(er."extra_runs", 0) AS "extra_runs",
           COALESCE(bs."runs_scored", 0) + COALESCE(er."extra_runs", 0) AS "total_runs"
    FROM IPL.IPL.BALL_BY_BALL bbb
    LEFT JOIN IPL.IPL.BATSMAN_SCORED bs
      ON bbb."match_id" = bs."match_id"
     AND bbb."innings_no" = bs."innings_no"
     AND bbb."over_id" = bs."over_id"
     AND bbb."ball_id" = bs."ball_id"
    LEFT JOIN IPL.IPL.EXTRA_RUNS er
      ON bbb."match_id" = er."match_id"
     AND bbb."innings_no" = er."innings_no"
     AND bbb."over_id" = er."over_id"
     AND bbb."ball_id" = er."ball_id"
  ),
  over_runs AS (
    SELECT dr."match_id", dr."innings_no", dr."over_id",
           MIN_BY(dr."bowler", dr."ball_id") AS "bowler",
           SUM(dr."total_runs") AS "total_runs_in_over"
    FROM delivery_runs dr
    GROUP BY dr."match_id", dr."innings_no", dr."over_id"
  ),
  top_overs AS (
    SELECT "match_id", "innings_no", "over_id", "bowler", "total_runs_in_over",
           RANK() OVER (PARTITION BY "match_id", "innings_no"
                        ORDER BY "total_runs_in_over" DESC NULLS LAST) AS "over_rank"
    FROM over_runs
  )
  SELECT "total_runs_in_over"
  FROM top_overs
  WHERE "over_rank" = 1
)
;
```
2025-02-10 16:04:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 16:04:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 16:04:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 16:04:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-10 16:04:33 - snowflake.connector.connection - INFO - closed
2025-02-10 16:04:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 16:04:33 - root - INFO - itercount: 3
2025-02-10 16:04:33 - root - INFO - 0
2025-02-10 16:04:33 - root - INFO - Total iteration counts: 3
