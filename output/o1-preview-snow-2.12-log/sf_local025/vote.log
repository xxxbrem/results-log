Based on the analysis of the provided SQL queries and their alignment with the task requirements, **`1result.sql`** is the correct choice. Here's the reasoning:

---

**Task Requirements Recap:**

1. **Combine Runs per Over:**
   - Sum both batsman scores and extra runs for each over in every innings of each match.
2. **Identify Highest Scoring Over:**
   - For each innings in each match, find the single over with the highest total runs.
3. **Retrieve Bowler Details:**
   - Obtain the bowler for the identified over from the `BALL_BY_BALL` table.
4. **Calculate Average of Highest Over Totals:**
   - Compute the average of these highest over totals across all matches.
5. **Ensure Accuracy:**
   - All runs and bowler details must be accurately reflected.

---

**Comparison of SQL Queries:**

1. **`0result.sql`:**

   - **Approach:**
     - Uses a **non-standard function `MIN_BY`** to determine the bowler for each over.
     - Calculates total runs per delivery and sums them per over.
     - Identifies the highest scoring over per innings.
     - Computes the average of the highest over totals.
   - **Issue:**
     - The `MIN_BY` function is not standard SQL and may lead to inconsistencies across different SQL environments.
     - May not fully ensure accurate selection of the bowler for each over.

2. **`1result.sql`:**

   - **Approach:**
     - **Uses standard SQL functions** to compute total runs per over by summing batsman scores and extra runs.
     - Retrieves the bowler for each over by selecting the first delivery in the `BALL_BY_BALL` table.
     - Identifies the highest scoring over per innings in each match.
     - Calculates the average of these highest over totals.
   - **Advantages:**
     - Avoids reliance on non-standard SQL functions.
     - Ensures accurate retrieval of bowler details.
     - Fully aligns with the task requirements by considering each innings separately.

3. **`2result.sql`:**

   - **Approach:**
     - Calculates total runs per over similar to the other queries.
     - Retrieves the bowler per over.
     - **Identifies the highest scoring over per match, not per innings.**
     - Calculates the average of the highest over totals.
   - **Issue:**
     - **Does not align with the task requirement** of finding the highest scoring over per innings.
     - Averages may be skewed due to considering only the highest over per match.

---

**Conclusion:**

- **`2result.sql`** incorrectly identifies the highest scoring over per match rather than per innings, thus not satisfying the task's conditions.
- **`0result.sql`** relies on a non-standard function, which may lead to inaccuracies.
- **`1result.sql`** correctly fulfills all task requirements using standard SQL functions, ensuring accuracy and compliance with the specified conditions.

---

**Selected Answer:**

```plaintext
1result.sql
```