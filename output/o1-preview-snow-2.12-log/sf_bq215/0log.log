2025-02-12 21:26:44 - openai._base_client - INFO - Retrying request to /chat/completions in 0.471236 seconds
2025-02-12 21:27:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:27:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:27:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:27:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:27:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:27:52 - snowflake.connector.connection - INFO - closed
2025-02-12 21:27:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:27:52 - root - INFO - SQL:
SELECT "publication_number", "kind_code", "grant_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
publication_number,kind_code,grant_date
AU-2010202595-B2,B2,20150820
AU-2010339481-B2,B2,20160204
AU-2011224053-B2,B2,20150702
AU-2011279176-B2,B2,20150226
AU-2012200410-B2,B2,20150528
AU-2012214405-B2,B2,20150723
AU-2012261627-B2,B2,20151022
AU-2012279110-B2,B2,20160225
AU-2012290121-B2,B2,20151126
AU-2012312016-B2,B2,20150618
AU-2012396247-B2,B2,20160526
AU-2013202145-B2,B2,20150226
AU-2013268781-B2,B2,20151203
AU-2013281125-B2,B2,20170824
AU-2014250113-B2,B2,20170330
AU-2014338589-B2,B2,20180222
AU-2015207934-B2,B2,20161208
AU-2015409096-B2,B2,20181115
EP-2592165-B2,B2,20180919
US-9258696-B2,B2,20160209
US-9637570-B2,B2,20170502
US-9056087-B2,B2,20150616
US-9358141-B2,B2,20160607
US-8998077-B2,B2,20150407
US-9175419-B2,B2,20151103
US-8930853-B2,B2,20150106
US-9468034-B2,B2,20161011
US-10154644-B2,B2,20181218
US-9292092-B2,B2,20160322
US-9619652-B2,B2,20170411
US-9091473-B2,B2,20150728
US-8974798-B2,B2,20150310
US-9245361-B2,B2,20160126
US-9391798-B2,B2,20160712
US-9446906-B2,B2,20160920
US-9006458-B2,B2,20150414
US-9330002-B2,B2,20160503
US-9319810-B2,B2,20160419
US-8957637-B2,B2,20150217
US-9249661-B2,B2,20160202
US-9049273-B2,B2,20150602
US-9319157-B2,B2,20160419
US-8944512-B2,B2,20150203
US-8979733-B2,B2,20150317
US-9225922-B2,B2,20151229
US-9274360-B2,B2,20160301
US-8934992-B2,B2,20150113
US-9207957-B2,B2,20151208
US-9160809-B2,B2,20151013
US-8942708-B2,B2,20150127
US-8978879-B2,B2,20150317
US-9024630-B2,B2,20150505
US-10092214-B2,B2,20181009
US-9091534-B2,B2,20150728
US-8946076-B2,B2,20150203
US-9073091-B2,B2,20150707
US-9400798-B2,B2,20160726
US-9275480-B2,B2,20160301
US-9048888-B2,B2,20150602
US-9326820-B2,B2,20160503
US-8963461-B2,B2,20150224
US-8996479-B2,B2,20150331
US-9330483-B2,B2,20160503
US-9347211-B2,B2,20160524
US-8961216-B2,B2,20150224
US-9199270-B2,B2,20151201
US-9319289-B2,B2,20160419
US-9382821-B2,B2,20160705
US-9442399-B2,B2,20160913
US-9478344-B2,B2,20161025
US-9468443-B2,B2,20161018
US-9171827-B2,B2,20151027
US-9179488-B2,B2,20151103
US-9143591-B2,B2,20150922
US-8954157-B2,B2,20150210
US-9244257-B2,B2,20160126
US-8935238-B2,B2,20150113
US-9462441-B2,B2,20161004
US-9202992-B2,B2,20151201
US-9365588-B2,B2,20160614
US-9475565-B2,B2,20161025
US-9376113-B2,B2,20160628
US-9580288-B2,B2,20170228
US-9069729-B2,B2,20150630
US-9137993-B2,B2,20150922
US-9506772-B2,B2,20161129
US-9628633-B2,B2,20170418
US-9471055-B2,B2,20161018
US-9299403-B2,B2,20160329
US-10098115-B2,B2,20181009
US-9468383-B2,B2,20161018
US-9412767-B2,B2,20160809
US-9527297-B2,B2,20161227
US-9474734-B2,B2,20161025
US-9363053-B2,B2,20160607
US-10008517-B2,B2,20180626
US-9476164-B2,B2,20161025
US-10142304-B2,B2,20181127
US-10077795-B2,B2,20180918
US-10133566-B2,B2,20181120

2025-02-12 21:27:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:27:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:27:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:27:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:27:53 - snowflake.connector.connection - INFO - closed
2025-02-12 21:27:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:27:54 - root - INFO - SQL:
SELECT "publication_number", "citation"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
Too long, hard cut:
publication_number,citation
JP-5743884-B2,[]
JP-5670338-B2,[]
JP-5694943-B2,[]
JP-5713933-B2,[]
JP-5829955-B2,[]
JP-5886104-B2,[]
JP-6071247-B2,[]
JP-5843696-B2,[]
JP-6005998-B2,[]
JP-5973790-B2,[]
JP-5958105-B2,[]
JP-5979713-B2,[]
JP-6140400-B2,[]
JP-6089290-B2,[]
JP-5705176-B2,[]
JP-5751218-B2,[]
JP-6015207-B2,[]
JP-5925629-B2,[]
JP-6157817-B2,[]
JP-6163720-B2,[]
JP-5990735-B2,[]
JP-6042145-B2,[]
JP-6009879-B2,[]
JP-6072487-B2,[]
JP-5809123-B2,[]
JP-6078286-B2,[]
JP-6057653-B2,[]
JP-5942770-B2,[]
JP-6004430-B2,[]
JP-6142500-B2,[]
JP-6014461-B2,[]
JP-6205712-B2,[]
JP-5968758-B2,[]
JP-6077844-B2,[]
JP-6155019-B2,[]
JP-5746132-B2,[]
JP-5743338-B2,[]
JP-5733838-B2,"[
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2004289813-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2005142780-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2005210280-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""SEA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2006340152-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""SEA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2008017353-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2009170987-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2009212902-A"",
    ""type"": """"
  }
]"
JP-5676581-B2,[]
JP-5774001-B2,[]
JP-5818024-B2,"[
  {
    ""application_number"": """",
    ""category"": ""SEA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-H09502650-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-H09280403-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2001288793-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2002320565-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2003181335-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2007130615-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2007312829-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2008012413-A"",
    ""type"": """"
  }
]"
JP-5889796-B2,[]
JP-5815565-B2,[]
JP-5968791-B2,"[
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2011205371-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": ""JPN6015049094; Ｑｕａｌｃｏｍｍ Ｉｎｃｏｒｐｏｒａｔｅｄ: 'Ｅｎａｂｌｉｎｇ ｒｅｐｏｒｔｉｎｇ ｏｆ ＡＢＳ ｒｅｓｏｕｒｃｅ ｓｔａｔｕｓ ｆｏｒ ｅＩＣＩＣ ｐｕｒｐｏｓｅｓ［ｏｎｌｉｎｅ］' ３ＧＰＰ ＴＳＧ-ＲＡＮ ＷＧ３＃７０ｂｉｓ Ｒ３-１１０１６４ , 20110117, インターネット＜ＵＲＬ：ｈｔｔｐ：／／ｗｗｗ．３ｇｐｐ．ｏｒｇ／ｆｔｐ／ｔｓｇ＿ｒａ"",
    ""publication_number"": """",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA,SEA"",
    ""filing_date"": 0,
    ""npl_text"": ""JPN6015049095; Ｑｕａｌｃｏｍｍ Ｉｎｃｏｒｐｏｒａｔｅｄ: 'Ｍｏｒｅ ｏｎ ｒｅｓｏｕｒｃｅ ｓｔａｔｕｓ ｒｅｐｏｒｔ ｆｏｒ ｅＩＣＩＣ［ｏｎｌｉｎｅ］' ３ＧＰＰ ＴＳＧ-ＲＡＮ ＷＧ３＃７０ｂｉｓ Ｒ３-１１０１６３ , 20110117, インターネット＜ＵＲＬ：ｈｔｔｐ：／／ｗｗｗ．３ｇｐｐ．ｏｒｇ／ｆｔｐ／ｔｓｇ＿ｒａ"",
    ""publication_number"": """",
    ""type"": """"
  }
]"
JP-6113512-B2,[]
JP-6064639-B2,[]
JP-6326685-B2,[]
JP-5784662-B2,[]
JP-5832470-B2,[]
JP-5995772-B2,[]
JP-6176991-B2,[]
JP-5704768-B2,[]
JP-6104048-B2,[]
JP-6083568-B2,[]
JP-6052841-B2,[]
JP-6167687-B2,[]
JP-5805144-B2,[]
JP-6086037-B2,[]
JP-6202256-B2,[]
JP-6268773-B2,[]
JP-6197435-B2,[]
JP-6303331-B2,[]
JP-6245599-B2,[]
JP-6098445-B2,[]
JP-6102653-B2,[]
JP-5979111-B2,[]
JP-6287028-B2,[]
JP-6425374-B2,[]
JP-5832502-B2,[]
JP-5949725-B2,[]
JP-6281247-B2,[]
JP-6362321-B2,[]
JP-6238712-B2,[]
JP-6281056-B2,[]
JP-5733539-B2,[]

2025-02-12 21:27:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:27:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:27:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:27:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:27:55 - snowflake.connector.connection - INFO - closed
2025-02-12 21:27:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:27:55 - root - INFO - SQL:
SELECT t."publication_number", c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Results:
publication_number,cited_publication_number
US-8984389-B2,KR-20000037283-A
US-8984389-B2,US-6313854-B1
US-8984389-B2,KR-20030003818-A
US-8984389-B2,US-6546393-B1
US-8984389-B2,US-2003135820-A1
US-8984389-B2,US-2003177265-A1
US-8984389-B2,US-2004019611-A1
US-8984389-B2,US-2004105127-A1
US-8984389-B2,KR-20040083269-A
US-8984389-B2,US-2004214611-A1
US-8984389-B2,KR-20040091987-A
US-8984389-B2,US-2004236774-A1
US-8984389-B2,US-2004250220-A1
US-8984389-B2,US-2005097623-A1
US-8984389-B2,US-2005131992-A1
US-8984389-B2,US-2005210399-A1
US-8984389-B2,US-2005216526-A1
US-8984389-B2,US-2005223342-A1
US-8984389-B2,US-2005246626-A1
US-8984389-B2,US-2005246622-A1
US-8984389-B2,US-6970867-B1
US-8984389-B2,US-6981028-B1
US-8984389-B2,US-2006123183-A1
US-8984389-B2,US-7107540-B1
US-8984389-B2,US-2007033517-A1
US-8984389-B2,KR-20070033736-A
US-8984389-B2,US-7225407-B2
US-8984389-B2,US-2007180381-A1
US-8984389-B2,US-7290204-B1
US-8984389-B2,US-2007283267-A1
US-8984389-B2,US-2008059906-A1
US-8984389-B2,US-2008104535-A1
US-8984389-B2,US-2008108341-A1
US-8984389-B2,US-2008235563-A1
US-8984389-B2,US-2008270891-A1
US-9031134-B2,EP-0856995-A2
US-9031134-B2,US-5828786-A
US-9031134-B2,JP-H11194745-A
US-9031134-B2,JP-2001013914-A
US-9031134-B2,US-2001003468-A1
US-9031134-B2,US-2002069408-A1
US-9031134-B2,WO-2005029833-A2
US-9031134-B2,GB-2410634-A
US-9031134-B2,US-2005220188-A1
US-9031134-B2,
US-9137031-B2,US-2002013948-A1
US-9137031-B2,WO-02073441-A1
US-9137031-B2,US-2004192342-A1
US-9137031-B2,US-2005015431-A1
US-9137031-B2,US-2006187860-A1
US-9137031-B2,US-2006294561-A1
US-9137031-B2,US-2007101104-A1
US-9137031-B2,US-2008130890-A1
US-9137031-B2,US-2009132823-A1
US-9137031-B2,US-7613182-B2
US-9137031-B2,US-2010017532-A1
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9228180-B2,US-5620896-A
US-9228180-B2,WO-9840510-A1
US-9228180-B2,WO-9925817-A2
US-9228180-B2,WO-0068399-A2
US-9228180-B2,WO-0181565-A2
US-9228180-B2,US-2002016975-A1
US-9228180-B2,US-6489458-B2
US-9228180-B2,US-6613752-B2
US-9228180-B2,US-2005003542-A1
US-9228180-B2,US-2005112764-A1
US-9228180-B2,US-2006252140-A1
US-9228180-B2,WO-2009003671-A2
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
JP-5873481-B2,JP-H1147287-A
JP-5873481-B2,JP-2000140134-A
JP-5873481-B2,JP-2001129103-A
JP-5873481-B2,JP-2001259058-A
JP-5873481-B2,JP-2003503120-A
JP-5873481-B2,JP-2008054892-A
JP-5873481-B2,DE-102007032025-A1
JP-5873481-B2,WO-2009153864-A1

2025-02-12 21:27:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:27:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:27:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:27:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:27:56 - snowflake.connector.connection - INFO - closed
2025-02-12 21:27:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:27:56 - root - INFO - SQL:
SELECT "publication_number", "ipc"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 100;
Results:
Too long, hard cut:
publication_number,ipc
CR-5634-A,"[
  {
    ""code"": ""G01N21/01"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CR-5990-A,[]
FI-429-A,"[
  {
    ""code"": ""C10C1/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
HK-6083-A,"[
  {
    ""code"": ""H02M5/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
HU-T52763-A,"[
  {
    ""code"": ""A01N43/54"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A01N47/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D239/47"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D521/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-H03206829-A,"[
  {
    ""code"": ""A01K61/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A01K63/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-S62159089-A,"[
  {
    ""code"": ""G21C5/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G21C1/02"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-416-A,[]
US-2528225-A,"[
  {
    ""code"": ""E21B27/02"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
AT-A41580-A,"[
  {
    ""code"": ""B22D11/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
AT-A47682-A,"[
  {
    ""code"": ""C07D471/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D471/16"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
AT-A63682-A,"[
  {
    ""code"": ""G01N27/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-920790-A,"[
  {
    ""code"": ""C03C4/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-950907-A,"[
  {
    ""code"": ""C08K5/47"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/44"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D263/56"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D277/64"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/46"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/48"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/35"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C11B5/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10L1/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M135/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C09K15/30"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D235/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/3447"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-920830-A,"[
  {
    ""code"": ""E02D5/38"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/80"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/28"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/54"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/26"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-9086-A,[]
CH-3256-A,[]
CH-540255-A,"[
  {
    ""code"": ""C07D213/56"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/38"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/51"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/32"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/30"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CH-433637-A,[]
CH-8494-A,[]
CH-9587-A,[]
CH-9968-A,[]
DD-8297-A,[]
FR-1334211-A,"[
  {
    ""code"": ""C12H1/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1444995-A,"[
  {
    ""code"": ""C07F7/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1474468-A,"[
  {
    ""code"": ""G11B15/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G11B15/62"",
    ""first"": false,
    ""inventive"": true,
    

2025-02-12 21:27:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:27:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:27:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:27:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:27:58 - snowflake.connector.connection - INFO - closed
2025-02-12 21:27:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:27:58 - root - INFO - SQL:
SELECT t."publication_number", ipc_u.value::VARIANT:"code"::STRING AS "ipc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc_u
   LIMIT 100;
Results:
publication_number,ipc_code
US-2020372460-A1,H04L9/08
US-2020372460-A1,H04L9/32
US-2020372460-A1,G06Q10/08
US-2020372460-A1,G08G1/00
US-2020377325-A1,B65H31/20
US-2020377325-A1,B65H5/36
US-2020377325-A1,B65H1/04
US-2020377325-A1,B41J11/00
US-2021265514-A1,H01L27/146
US-2021265514-A1,H01L31/0216
US-2021265514-A1,G01J1/42
US-2021265514-A1,H01L31/0236
US-2021265514-A1,G01J1/04
US-2021064907-A1,G06K9/46
US-2021064907-A1,G06K9/62
US-2021064907-A1,G06K9/44
US-2020399226-A1,C07D403/06
US-2020399226-A1,C07D413/12
US-2020399226-A1,C07D405/12
US-2020399226-A1,C07D401/12
US-2020399226-A1,C07D235/02
US-2020399226-A1,C07D401/06
US-2020399226-A1,C07D403/12
US-2020399226-A1,C07D417/06
US-2020399226-A1,C07D487/04
US-2021257383-A1,H10B43/35
US-2021257383-A1,H10B43/27
US-2021257383-A1,H10B43/10
US-2020404493-A1,H04W52/02
US-2020404493-A1,H04L29/06
US-2020404493-A1,H04W76/28
US-2020404493-A1,H04W12/04
US-2020401918-A1,G06N20/00
US-2020401918-A1,G06Q30/02
US-2020401918-A1,G06F40/00
US-2020401918-A1,G06N5/04
US-2020401918-A1,G06F16/9535
US-2020401918-A1,G06F16/2457
US-2021090749-A1,G16H10/40
US-2021090749-A1,G16H40/20
US-2021090749-A1,G06N20/00
US-2021090749-A1,G16H50/70
US-2021090749-A1,G16H70/60
US-2021090749-A1,G16H50/80
US-2021090749-A1,G06N7/00
US-2021090749-A1,G16H70/40
US-2021090749-A1,G16H10/60
US-2022093492-A1,H05K1/11
US-2022093492-A1,H01L23/532
US-2022093492-A1,H01L23/538
US-2022093492-A1,H01L23/49
US-2021240288-A1,A63F9/10
US-2021240288-A1,G02F1/03
US-2021240288-A1,G06F3/044
US-2021098805-A1,H01M8/04746
US-2021098805-A1,H01M8/04029
US-2022033866-A1,C08G69/08
US-2022033866-A1,C12P13/02
US-2022090664-A1,F16H45/02
US-2022090664-A1,F16H41/28
US-2021011040-A1,G01N35/04
US-2021097835-A1,H04B17/318
US-2021097835-A1,G08B25/10
US-2021097835-A1,G08B13/24
US-2022097744-A1,B61L15/00
US-2021031929-A1,B32B27/20
US-2021031929-A1,B64D15/12
US-2021031929-A1,B32B38/00
US-2021031929-A1,B32B27/08
US-2021031929-A1,B32B27/28
US-2021031929-A1,B32B37/20
US-2021031929-A1,H05B3/18
US-2021031929-A1,C23C4/129
US-2021162946-A1,B60N2/00
US-2021162946-A1,B60R22/48
US-2021115519-A1,C12Q1/6886
US-2021115310-A1,C09J109/08
US-2021115310-A1,C09J111/02
US-2021115310-A1,C09J11/08
US-2021115310-A1,C09J5/00
US-2021255068-A1,G01N15/06
US-2021255068-A1,G01N15/02
US-2021255068-A1,G01N1/22
US-2021226449-A1,H02J3/00
US-2021226449-A1,H02J3/24
US-2021226449-A1,H02M7/537
US-2022108380-A1,G06Q30/06
US-2021072035-A1,G01C21/34
US-2021032509-A1,C09J11/08
US-2021032509-A1,C08F120/08
US-2021032509-A1,C09J11/06
US-2021032509-A1,C09J105/00
US-2021032509-A1,C08F120/06
US-2021130103-A1,B65G39/12
US-2021130103-A1,B65G21/20
US-2021030268-A1,H04M1/72403
US-2021030268-A1,H04N7/18
US-2021030268-A1,A61B3/032
US-2021030268-A1,G06T3/20
US-2021030268-A1,A61B3/00

2025-02-12 21:27:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:27:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:27:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:27:59 - snowflake.connector.connection - INFO - closed
2025-02-12 21:27:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:28:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:28:40 - root - INFO - The error you're encountering is due to the way `LATERAL FLATTEN` is being used with your `JOIN` clauses in Snowflake SQL. In Snowflake, you cannot use `JOIN LATERAL FLATTEN(...)` with an `ON` clause or any join predicates. Instead, you should use `CROSS JOIN LATERAL` when flattening arrays or variants using the `FLATTEN` function.

**Here's how you can correct your query:**

```sql
SELECT
  t."publication_number" AS "citing_publication",
  c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
  p."ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
```

**Explanation:**

- **Use `CROSS JOIN LATERAL`:** Replace `JOIN LATERAL FLATTEN(...) ON TRUE` with `CROSS JOIN LATERAL FLATTEN(...)`. The `CROSS JOIN LATERAL` syntax allows you to join each row in your table (`t`) with the result of the `FLATTEN` function applied to that row.

- **Remove the `ON TRUE` clause:** When using `CROSS JOIN LATERAL`, you don't need an `ON` clause because it's implicitly applied to each row.

- **Structure of the Query:**

  - **FROM clause:** Start with your main table `t` (which is an alias for `PATENTS.PATENTS.PUBLICATIONS`).
  
  - **CROSS JOIN LATERAL FLATTEN:** Flatten the `"citation"` field of each row in `t`. This will produce rows for each element in the `"citation"` array.
  
  - **LEFT JOIN:** Join the flattened citations (`c`) with the `PUBLICATIONS` table (`p`) to get the IPC codes of the cited publications.

**Why Your Original Query Caused an Error:**

- **Unsupported Syntax:** Snowflake does not support `JOIN LATERAL` with an `ON` clause or predicates like `ON TRUE`. The error message indicates that using a lateral table function (like `FLATTEN`) with outer join syntax or join predicates is not supported.

- **Correct Usage:** The correct approach is to use `CROSS JOIN LATERAL` without an `ON` clause when you need to flatten a nested field for each row.

**Additional Tips:**

- **Ensure Data Consistency:** Be aware that some cited publications might not exist in the `PUBLICATIONS` table (`p`), which is why we use a `LEFT JOIN`. This ensures that all citations are included, even if the IPC codes are missing.

- **Handle Null or Empty Citations:** If some records have null or empty `"citation"` fields, the `CROSS JOIN LATERAL FLATTEN` will handle them appropriately by not returning any rows for those records.

**Alternative Query Using a CTE (Common Table Expression):**

If you prefer to use a CTE for clarity, you can structure your query as follows:

```sql
WITH t_citations AS (
  SELECT
    t."publication_number" AS "citing_publication",
    c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  WHERE t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
)
SELECT
  t_citations.citing_publication,
  t_citations.cited_publication_number,
  p."ipc"
FROM t_citations
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = t_citations.cited_publication_number
LIMIT 100;
```

This approach first extracts the citations in the CTE `t_citations` and then joins them with the `PUBLICATIONS` table to fetch the IPC codes.

**Verify the Results:**

After running the corrected query, verify that the results are as expected:

- **Fields Returned:**
  - `citing_publication`: The publication number of the citing (original) patent.
  - `cited_publication_number`: The publication number of the cited (referenced) patent.
  - `ipc`: The IPC codes of the cited patent.

- **Row Count:** Ensure that you're getting the expected number of rows (up to 100 due to the `LIMIT` clause).

**Proceeding with Your Originality Calculation:**

With the corrected query, you can proceed to calculate the originality scores as per your task. You'll need to:

1. **Extract 4-Digit IPC Codes:** From the `ipc` field of the cited publications, extract the first four characters to get the 4-digit IPC codes.

2. **Count Occurrences:** For each citing publication, count the occurrences of each distinct 4-digit IPC code in its backward citations.

3. **Calculate the Originality Score:** Use the formula provided to calculate the originality score for each citing publication.

4. **Identify the Patent with the Highest Score:** Order the results by the originality score in descending order and select the top one.

**Example of Extracting 4-Digit IPC Codes:**

```sql
-- Continue from the previous query
SELECT
  citing_publication,
  cited_publication_number,
  SUBSTR(ipc_u.value::VARIANT:"code"::STRING, 1, 4) AS ipc4_code
FROM (
  SELECT
    t."publication_number" AS citing_publication,
    c.value::VARIANT:"publication_number"::STRING AS cited_publication_number,
    p."ipc"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
  WHERE t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
) cp
CROSS JOIN LATERAL FLATTEN(input => cp."ipc") ipc_u
WHERE cp."ipc" IS NOT NULL
LIMIT 100;
```

**Note:**

- **Performance Considerations:** Be cautious with large datasets. Joining on large tables and flattening arrays can be resource-intensive. Consider processing the data in batches or applying additional filters if necessary.

- **Test with Smaller Data:** Start by testing your queries with smaller datasets (using `LIMIT`) to ensure correctness before scaling up.

---

If you have any further questions or need assistance with the next steps, feel free to ask!
2025-02-12 21:28:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:28:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:28:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:28:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:28:41 - snowflake.connector.connection - INFO - closed
2025-02-12 21:28:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:30:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:30:01 - root - INFO - SQL:
SELECT
  t."publication_number" AS "citing_publication",
  c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
  p."ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Results:
Too long, hard cut:
citing_publication,cited_publication_number,ipc
US-9067254-B2,US-2009089738-A1,"[
  {
    ""code"": ""G06F9/44"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9646713-B2,US-2010026338-A1,"[
  {
    ""code"": ""H03K19/003"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9622691-B2,US-2007095661-A1,"[
  {
    ""code"": ""G01N27/26"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C23C14/32"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9551731-B2,US-2008171931-A1,"[
  {
    ""code"": ""A61B5/055"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B18/18"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9293644-B2,US-2008092812-A1,"[
  {
    ""code"": ""H01L21/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C23C16/52"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L23/24"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L21/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-10130893-B2,US-5145110-A,"[
  {
    ""code"": ""B65D5/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9226006-B2,JP-S58210776-A,"[
  {
    ""code"": ""H04N5/445"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/081"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/025"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/03"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/035"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N5/60"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/06"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-10137283-B2,US-2006008606-A1,"[
  {
    ""code"": ""A61F2/958"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61L29/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B29D22/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-8986850-B2,US-2007122648-A1,"[
  {
    ""code"": ""B32B15/01"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9546744-B2,US-2004165943-A1,"[
  {
    ""code"": ""F16B37/04"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""F16B37/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9202992-B2,US-2009159902-A1,"[
  {
    ""code"": ""B23K1/20"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""F21V21/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L33/38"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L33/48"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
US-8984387-B2,US-2008294544-A1,"[
  {
    ""code"": ""G06Q40/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06Q30/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9575648-B2,US-2008114614-A1,"[
  {
    ""code"": ""G16H40/20"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G16H40/67"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B5/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9284409-B2,US-2008071350-A1,"[
  {
    ""code"": ""A61F2/06"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9372790-B2,US-2007233941-A1,"[
  {
    ""code"": ""G06F12/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-10105167-B2,US-2009112263-A1,"[
  {
    ""code"": ""A61B5/103"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61N1/39"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B17/58"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B17/70"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9410163-B2,US-2011041197-A1,"[
  {
    ""code"": ""C12N15/873"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C12N5/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C12N15/85"",
    ""first"": false,
    ""inventive"": true,
   

2025-02-12 21:30:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:30:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:30:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:30:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:30:02 - snowflake.connector.connection - INFO - closed
2025-02-12 21:30:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:30:03 - root - INFO - SQL:
SELECT p."publication_number", SUBSTR(ipc_u.value::VARIANT:"code"::STRING, 0, 4) AS "ipc4_code"
   FROM PATENTS.PATENTS.PUBLICATIONS p,
        LATERAL FLATTEN(input => p."ipc") ipc_u
   LIMIT 100;
Results:
publication_number,ipc4_code
US-2004046148-A1,H01L
US-2004046148-A1,C23F
US-2004046148-A1,H01L
US-2004046148-A1,C23F
US-2004046148-A1,H01L
US-2004046148-A1,C23F
US-2004046148-A1,C23F
US-2004046148-A1,B24B
US-2004046148-A1,C09K
US-2004046148-A1,C09G
US-2004046148-A1,C23F
US-2004249430-A1,A61N
US-2004254481-A1,A61B
US-2004254481-A1,A61B
US-2004254481-A1,A61B
US-2004179568-A1,H01S
US-2004179568-A1,H01S
US-2004179568-A1,H01S
US-2004179568-A1,H01S
US-2004250894-A1,B27L
US-2005110223-A1,F16J
US-2005031765-A1,A23L
US-2005031765-A1,A23L
US-2005012526-A1,H03K
US-2005012526-A1,H03K
US-2005012526-A1,H03B
US-2005012526-A1,H03K
US-2005012526-A1,H03F
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61F
US-2006088579-A1,A61L
US-2005067057-A1,C23C
US-2005067057-A1,C23C
US-2005104271-A1,B65H
US-2005104271-A1,B65H
US-2005104271-A1,B65H
US-2005104271-A1,B65H
US-2005245440-A1,C07K
US-2005245440-A1,C12Q
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005242230-A1,F42B
US-2005242230-A1,F41F
US-2006155515-A1,G06F
US-2006155515-A1,G01F
US-2006155515-A1,G01F
US-2006051028-A1,G02B
US-2006112011-A1,G06Q
US-2005254980-A1,F04B
US-2005254980-A1,F04B
US-2005254980-A1,F04B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006020748-A1,H04N
US-2006020748-A1,H04N
US-2006020748-A1,G06F
US-2006020748-A1,G06F
US-2006063746-A1,A61K
US-2006063746-A1,C07J
US-2006063746-A1,A61K
US-2006063746-A1,A61K
US-2006063746-A1,C07J
US-2006063746-A1,A61K
US-2006116315-A1,C12N
US-2006116315-A1,C12N
US-2006116315-A1,C07K
US-2006116315-A1,G01N
US-2006116315-A1,C12N
US-2006116315-A1,A61K
US-2006116315-A1,C12N
US-2007092960-A1,C12P
US-2007092960-A1,A23J
US-2007092960-A1,C07K
US-2007092960-A1,B01D
US-2007092960-A1,C12N
US-2007092960-A1,B01D
US-2007092960-A1,A23J
US-2007092960-A1,A23J
US-2007092960-A1,C07K
US-2007068805-A1,G01N

2025-02-12 21:30:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:30:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:30:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:30:04 - snowflake.connector.connection - INFO - closed
2025-02-12 21:30:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:30:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:30:34 - root - INFO - The error you're encountering is due to the usage of `JOIN LATERAL FLATTEN` with an `ON` clause, which is not supported in Snowflake SQL. To resolve this issue, you should replace `JOIN LATERAL FLATTEN(...)` with `CROSS JOIN LATERAL FLATTEN(...)` and adjust the `LEFT JOIN LATERAL FLATTEN(...)` accordingly.

**Here's the corrected SQL query:**

```sql
SELECT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
  COUNT(*) AS "ipc4_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number", ipc4_code
LIMIT 100;
```

**Explanation of the Corrections:**

1. **Replace `JOIN LATERAL FLATTEN` with `CROSS JOIN LATERAL FLATTEN`:**

   - **Original:** `JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE`
   - **Corrected:** `CROSS JOIN LATERAL FLATTEN(input => t."citation") c`

   In Snowflake SQL, use `CROSS JOIN LATERAL` to join each row of the left table with the result of the lateral function (`FLATTEN` in this case). The `ON TRUE` clause is unnecessary and unsupported with `CROSS JOIN LATERAL`.

2. **Adjust the `LEFT JOIN LATERAL FLATTEN`:**

   - **Original:** `LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE`
   - **Corrected:** `LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited`

   Snowflake does not support `LEFT JOIN LATERAL FLATTEN` with an `ON` clause. Instead, use `LEFT JOIN TABLE(FLATTEN(...))` without an `ON` clause. This performs a lateral join and allows for left outer joining with the results of the `FLATTEN` function.

3. **Adjust the `SUBSTR` Function:**

   - **Original:** `SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4)`
   - **Corrected:** `SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)`

   In SQL, string indexing starts at 1, not 0. Therefore, to extract the first four characters of the IPC code, start at position 1.

**Summary of the Query's Functionality:**

- **Selects:**
  - The publication number of the citing patent (`citing_publication`).
  - The 4-digit IPC code (`ipc4_code`) from the cited patents.
  - The count of occurrences of each 4-digit IPC code in the backward citations (`ipc4_count`).

- **From:**
  - The `PUBLICATIONS` table aliased as `t`.

- **Joins:**
  - `CROSS JOIN LATERAL FLATTEN` on `t."citation"` to extract individual citations.
  - `LEFT JOIN` on `p`, the `PUBLICATIONS` table, to get details of the cited publications.
  - `LEFT JOIN TABLE(FLATTEN(...))` on `p."ipc"` to extract the IPC codes of cited patents.

- **Where Conditions:**
  - Filters patents with `kind_code` = 'B2'.
  - Filters patents with a `grant_date` between 20150101 and 20181231.

- **Group By:**
  - Groups the results by the citing publication number and the 4-digit IPC code.

- **Limit:**
  - Limits the result set to 100 rows.

**Next Steps:**

With the corrected query, you can proceed to:

- **Calculate the Originality Score** for each B2 patent granted between 2015 and 2018.
- **Identify the Patent with the Highest Originality Score** based on the provided formula.

Feel free to run the corrected query and continue with your analysis. If you encounter any further issues or need assistance with the calculation of the originality score, please let me know!
2025-02-12 21:30:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:30:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:30:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:30:35 - snowflake.connector.connection - INFO - closed
2025-02-12 21:30:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:31:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:31:08 - root - INFO - The error you're encountering is due to the use of a column alias (`"ipc4_code"`) in the `GROUP BY` clause. In SQL, especially in Snowflake SQL, you cannot reference a column alias directly in the `GROUP BY` clause. Instead, you need to use the actual expression or column name.

**Here's how you can correct your query:**

1. **Replace the Alias in the `GROUP BY` Clause with the Actual Expression:**

   Replace `"ipc4_code"` in your `GROUP BY` clause with the actual expression used in the `SELECT` clause.

2. **Adjust the `SUBSTR` Function:**

   Ensure that the `SUBSTR` function starts at position **1** instead of **0** because, in SQL, string positions start at **1**.

**Corrected SQL Query:**

```sql
SELECT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
  COUNT(*) AS "ipc4_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY
  t."publication_number",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
LIMIT 100;
```

**Explanation:**

- **Issue with Column Alias in `GROUP BY`:**

  - The alias `"ipc4_code"` is defined in the `SELECT` clause.
  - SQL does not allow you to use column aliases in the `GROUP BY` clause.
  - To fix this, replace `"ipc4_code"` in the `GROUP BY` clause with the actual expression: `SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)`.

- **Adjusting the `SUBSTR` Function:**

  - Changed `SUBSTR(..., 0, 4)` to `SUBSTR(..., 1, 4)` because SQL strings are 1-indexed.
  - This ensures we're extracting the first four characters of the IPC code.

- **Using `CROSS JOIN LATERAL` and `LEFT JOIN TABLE(FLATTEN(...))`:**

  - As previously corrected, using `CROSS JOIN LATERAL FLATTEN` and `LEFT JOIN TABLE(FLATTEN(...))` is the correct syntax in Snowflake SQL.

**Additional Notes:**

- **Why Can't We Use Aliases in `GROUP BY`?**

  - The `GROUP BY` clause is evaluated before the `SELECT` clause in the SQL execution order.
  - Since the alias is assigned in the `SELECT` clause, it is not recognized in the `GROUP BY`.
  - Always use the actual column names or expressions in the `GROUP BY` clause.

- **Alternative Approach Using a Subquery:**

  If you prefer to keep your `GROUP BY` clause cleaner, you can wrap your query in a subquery:

  ```sql
  SELECT
    citing_publication,
    ipc4_code,
    ipc4_count
  FROM (
    SELECT
      t."publication_number" AS "citing_publication",
      SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
      COUNT(*) AS "ipc4_count"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    CROSS JOIN LATERAL FLATTEN(input => t."citation") c
    LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
    LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY
      t."publication_number",
      SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
  ) sub
  LIMIT 100;
  ```

  In this approach:

  - The inner query performs the grouping using the expression.
  - The outer query selects from the subquery, allowing you to use the aliases as needed.

**Proceeding with Your Analysis:**

With the corrected query, you should now be able to:

1. **Execute the Query Successfully:**

   - Verify that the query runs without errors.
   - Ensure that the results make sense and that you are getting counts of IPC code occurrences per citing publication.

2. **Compute the Originality Score:**

   - Use the results to calculate the originality score for each patent as per the formula:

     \[
     \text{Originality} = 1 - \frac{\sum_k (\text{Occurrences of IPC code } k)^2}{(\text{Total occurrences of IPC codes})^2}
     \]

3. **Identify the Patent with the Highest Originality Score:**

   - After calculating the originality scores, sort the patents in descending order of originality.
   - Select the patent with the highest score that meets your criteria.

**If You Need Assistance in Writing the Full Query to Calculate the Originality Score:**

Feel free to let me know, and I can help construct a complete query that calculates the originality score for each patent and identifies the one with the highest score.

**Summary:**

- **Error Resolution:**

  - Replace column aliases in `GROUP BY` clauses with the actual expressions.

- **Best Practices:**

  - Be cautious with SQL execution order and limitations.
  - Use official documentation or SQL language references for syntax guidelines.

**Let me know if you have any further questions or need additional assistance!**
2025-02-12 21:31:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:31:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:31:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:31:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:31:09 - snowflake.connector.connection - INFO - closed
2025-02-12 21:31:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:32:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:32:01 - root - INFO - SQL:
SELECT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
  COUNT(*) AS "ipc4_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY
  t."publication_number",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
LIMIT 100;
Results:
citing_publication,ipc4_code,ipc4_count
US-9155586-B2,A61B,7
US-9636072-B2,G01T,2
US-9089261-B2,A61B,4
US-9347655-B2,G03F,1
US-9457510-B2,G09F,1
US-9048913-B2,H01Q,2
US-9044021-B2,F27D,1
US-9597149-B2,A61B,1
US-9226006-B2,F25D,3
US-9048913-B2,G01S,1
US-8984387-B2,G06Q,4
US-9371099-B2,G08G,1
US-9551731-B2,A61B,2
US-10017537-B2,C12N,4
US-9291935-B2,G03G,1
US-10059084-B2,B27N,1
US-10042510-B2,A61B,1
US-9270639-B2,G06F,1
US-9399738-B2,B01J,1
US-9184581-B2,B60L,2
US-8967144-B2,A61M,4
US-8932208-B2,A61B,4
US-10105167-B2,A61F,3
US-9355294-B2,G06F,2
US-9355294-B2,G06K,1
US-9293644-B2,F01N,1
US-9518924-B2,G01J,2
US-9100526-B2,G03G,1
US-9372790-B2,G06F,1
US-9169941-B2,F16K,2
US-9371099-B2,G06K,1
US-9518924-B2,G03B,3
US-9226006-B2,G11B,2
US-9270639-B2,H04L,3
US-9332944-B2,A61B,8
US-9457510-B2,G07D,1
US-9182815-B2,G01B,2
US-9293644-B2,C30B,1
US-9575648-B2,A61B,1
US-9597149-B2,A61M,1
US-9293644-B2,B01J,4
US-9100526-B2,B41J,2
US-8932208-B2,A61F,1
US-10101801-B2,H04W,1
US-9447521-B2,H01L,7
US-10007422-B2,G06T,4
US-9284409-B2,B22F,1
US-8932208-B2,A61N,1
US-9585927-B2,A61P,1
US-9548844-B2,H04J,1
US-9474734-B2,A61K,4
US-9214830-B2,H01M,6
US-9410163-B2,C12N,3
US-10034624-B2,G06F,1
US-9182815-B2,G09G,2
US-9121016-B2,A01N,1
US-8992024-B2,G09G,1
US-10137283-B2,A61L,1
US-8984387-B2,G06F,1
US-9622691-B2,H01L,2
US-9293644-B2,H01L,7
US-9048913-B2,H03F,1
US-9448946-B2,G11C,1
US-8992024-B2,G09F,1
US-9522312-B2,B23K,1
US-9415120-B2,C12R,2
US-10060975-B2,G01D,1
US-8954157-B2,A61N,1
US-9317887-B2,G06F,1
US-10060975-B2,G01R,5
US-9244073-B2,C07K,2
US-10059084-B2,E04B,1
US-9173003-B2,H04L,2
US-9068247-B2,C22B,1
US-9646713-B2,H03K,1
US-9575648-B2,G06F,6
US-10137283-B2,B29D,1
US-9100526-B2,G06K,1
US-9290472-B2,A61K,1
US-9402981-B2,A61B,3
US-9293644-B2,H01S,1
US-9284409-B2,A61F,5
US-9173003-B2,G06F,1
US-10034624-B2,A61B,3
JP-5720697-B2,A61Q,1
US-9522312-B2,A63B,2
US-9175419-B2,H01L,4
US-9290472-B2,A61P,1
US-9044021-B2,F24C,3
US-10077795-B2,F16B,1
US-9548844-B2,H04B,1
US-9048913-B2,H04B,5
US-9142476-B2,H01L,1
US-9526699-B2,C07C,1
US-9185094-B2,G06F,4
US-9436499-B2,G06F,4
US-9622691-B2,G06F,1
US-10076611-B2,A61M,1
US-9001770-B2,H04B,1
US-9404565-B2,B62M,1

2025-02-12 21:32:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:32:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:32:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:32:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:32:02 - snowflake.connector.connection - INFO - closed
2025-02-12 21:32:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:32:02 - root - INFO - SQL:
SELECT t."publication_number" AS "citing_publication",
          COUNT(*) AS "total_backward_citations"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   GROUP BY t."publication_number"
   LIMIT 100;
Results:
citing_publication,total_backward_citations
JP-6075881-B2,4
AU-2009298122-B2,5
US-9009580-B2,5
US-9315115-B2,20
US-9385307-B2,12
US-9531867-B2,3
US-9563163-B2,20
AU-2014340644-B2,2
AU-2013313333-B2,4
US-9341793-B2,9
US-9469348-B2,14
US-8955748-B2,8
US-8986850-B2,18
US-9472647-B2,23
US-9384366-B2,5
JP-5688829-B2,2
US-9347655-B2,284
US-9608421-B2,19
US-10086270-B2,43
US-10059084-B2,770
JP-5750454-B2,2
US-10147221-B2,67
US-9181681-B2,15
US-10121264-B2,33
AU-2013202145-B2,1
AU-2014250113-B2,9
US-9166674-B2,7
JP-5747439-B2,6
US-8928823-B2,1
US-9232163-B2,11
AU-2012283387-B2,1
US-9216062-B2,9
US-10075826-B2,14
AU-2015234864-B2,1
US-10064731-B2,29
AU-2015265241-B2,3
US-10116352-B2,16
AU-2013326933-B2,1
US-9157491-B2,13
US-9207691-B2,4
US-9068247-B2,30
US-9087924-B2,41
US-10121790-B2,13
US-10155928-B2,22
US-10134165-B2,13
US-10015072-B2,5
US-9119720-B2,112
US-9459437-B2,15
AU-2013227101-B2,1
US-9447712-B2,23
US-9585927-B2,10
US-10079751-B2,21
AU-2013244860-B2,1
US-10094379-B2,20
US-8997705-B2,14
US-10119697-B2,9
US-9258696-B2,22
US-9503862-B2,7
JP-5907267-B2,3
US-9106422-B2,187
US-8971612-B2,226
US-9160895-B2,15
US-9166782-B2,20
US-8944695-B2,30
US-9182815-B2,149
US-9448946-B2,333
US-9529903-B2,40
AU-2012275561-B2,2
AU-2013204154-B2,1
AU-2014201503-B2,6
AU-2010214112-B2,4
US-10079102-B2,5
US-8953633-B2,33
US-9466467-B2,12
US-9185094-B2,140
US-9280023-B2,12
US-9356222-B2,6
US-9326820-B2,6
US-8935238-B2,1
US-9628633-B2,34
US-9344698-B2,18
EP-1579759-B2,11
US-9505537-B2,36
US-9309435-B2,146
US-9254730-B2,16
AU-2015257456-B2,1
US-9335448-B2,9
US-10152369-B2,9
US-9412846-B2,12
US-9384632-B2,409
US-9196418-B2,12
US-9151465-B2,29
US-9442731-B2,6
US-9233779-B2,10
US-10156954-B2,57
AU-2012211513-B2,2
AU-2016201029-B2,5
US-9436209-B2,7
US-9607689-B2,10
JP-5740065-B2,3

2025-02-12 21:32:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:32:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:32:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:32:03 - snowflake.connector.connection - INFO - closed
2025-02-12 21:32:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:32:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:32:29 - root - INFO - The error you're experiencing is due to the incorrect use of `JOIN LATERAL FLATTEN` with an `ON` clause in Snowflake SQL. In Snowflake, you cannot use `JOIN LATERAL FLATTEN` with any `ON` predicates. Instead, you should use `CROSS JOIN LATERAL FLATTEN` or `LEFT JOIN TABLE(FLATTEN(...))`.

**Here's the corrected SQL query:**

```sql
SELECT DISTINCT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
```

**Explanation of Corrections:**

1. **Replace `JOIN LATERAL FLATTEN` with `CROSS JOIN LATERAL FLATTEN`:**

   - **Original:**

     ```sql
     JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
     ```

   - **Corrected:**

     ```sql
     CROSS JOIN LATERAL FLATTEN(input => t."citation") c
     ```

   - **Reason:** Snowflake SQL does not support `JOIN LATERAL FLATTEN` with an `ON` clause. Instead, use `CROSS JOIN LATERAL FLATTEN` to join each row of `t` with the flattened contents of `"citation"`.

2. **Adjust the `LEFT JOIN LATERAL FLATTEN`:**

   - **Original:**

     ```sql
     LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
     ```

   - **Corrected:**

     ```sql
     LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
     ```

   - **Reason:** Similar to the first correction, `LEFT JOIN LATERAL FLATTEN` with an `ON` clause is not supported. Use `LEFT JOIN TABLE(FLATTEN(...))` instead. This performs a left outer join with the results of the `FLATTEN` function.

3. **Modify the `SUBSTR` Function:**

   - **Original:**

     ```sql
     SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4)
     ```

   - **Corrected:**

     ```sql
     SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
     ```

   - **Reason:** SQL string positions start at **1**, not **0**. Adjusting the starting position ensures that you're extracting the first four characters of the IPC code.

**Summary of the Corrected Query:**

- **SELECT Clause:**

  - Retrieves the citing publication number (`"citing_publication"`).
  - Extracts the first four characters of the IPC code from the cited publications, resulting in the 4-digit IPC code (`"ipc4_code"`).

- **FROM Clause:**

  - Starts with the `PUBLICATIONS` table aliased as `t`.

- **Joins:**

  - **CROSS JOIN LATERAL FLATTEN:** Flattens the `"citation"` array in `t` to get individual citations.
  - **LEFT JOIN:** Joins with the `PUBLICATIONS` table (`p`) to retrieve details about the cited publications.
  - **LEFT JOIN TABLE(FLATTEN(...)):** Flattens the `"ipc"` array in `p` to access individual IPC codes.

- **WHERE Clause:**

  - Filters for publications with `kind_code` 'B2'.
  - Filters for publications with `grant_date` between `20150101` and `20181231`.

- **LIMIT Clause:**

  - Limits the result to 100 rows.

**Additional Notes:**

- **Why Use `LEFT JOIN TABLE(FLATTEN(...))`?**

  - This allows you to perform a left outer join with the flattened IPC codes of the cited publications. If a cited publication does not have any IPC codes, the IPC fields will be `NULL`, but the citing publication will still be included in the results.

- **Understanding `CROSS JOIN LATERAL FLATTEN`:**

  - The `CROSS JOIN LATERAL` applies the `FLATTEN` function to each row of the left table (`t`), effectively unnesting arrays or variant data types.

- **Handling Null Values:**

  - Be aware that some cited publications may not exist in your `PUBLICATIONS` table or may not have IPC codes. The use of `LEFT JOIN` ensures that you still retrieve all citing publications, even if the corresponding data in `p` is missing.

**Example Usage:**

You can run this query to retrieve the distinct combinations of citing publications and the 4-digit IPC codes from their backward citations. This information can be used to calculate the originality scores as per your task requirements.

**Proceeding with Your Analysis:**

With the corrected query, you should now be able to:

1. **Execute the Query Successfully:**

   - Ensure that it runs without errors.
   - Examine the results to verify that the data aligns with your expectations.

2. **Calculate the Originality Scores:**

   - Use the retrieved data to compute the originality score for each patent using the formula:

     \[
     \text{Originality} = 1 - \frac{\sum (\text{Occurrences of each 4-digit IPC code})^2}{(\text{Total occurrences of 4-digit IPC codes})^2}
     \]

   - This will involve aggregating the counts of each IPC code per citing publication and performing the necessary calculations.

3. **Identify the Patent with the Highest Originality Score:**

   - Once you have calculated the originality scores for all relevant patents, sort the results in descending order to find the patent with the highest score.

**If You Need Further Assistance:**

Feel free to ask if you need help constructing the query to calculate the originality scores or any other aspect of your analysis!
2025-02-12 21:32:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:32:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:32:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:32:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:32:30 - snowflake.connector.connection - INFO - closed
2025-02-12 21:32:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:33:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:33:33 - root - INFO - SQL:
SELECT DISTINCT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Results:
citing_publication,ipc4_code
US-9522312-B2,A63B
US-9175419-B2,H01L
US-9622691-B2,G06F
US-9185094-B2,G06F
US-9436499-B2,G06F
US-9001770-B2,H04B
US-10076611-B2,A61M
US-9526699-B2,C07C
US-9293644-B2,F01N
US-9518924-B2,G01J
US-9372790-B2,G06F
US-9100526-B2,G03G
US-9169941-B2,F16K
US-9121016-B2,A01N
US-10034624-B2,G06F
US-9182815-B2,G09G
US-10100810-B2,F03D
US-9244073-B2,C12N
US-9448946-B2,G11C
US-9048913-B2,H03F
US-9151260-B2,F02M
JP-6005268-B2,F25B
US-9185094-B2,G11B
US-9067254-B2,G06F
AU-2012282191-B2,B01D
US-9332944-B2,H01L
US-9182815-B2,G06K
US-9564199-B2,G11C
US-9226006-B2,B65D
US-9575648-B2,A61B
US-8967144-B2,A61M
US-10105167-B2,A61F
US-8932208-B2,A61B
US-9355294-B2,G06F
US-9355294-B2,G06K
US-10059084-B2,B27N
US-10042510-B2,A61B
US-10119947-B2,C12P
US-9622691-B2,A61B
US-9173003-B2,H04N
US-10017537-B2,C12N
US-9291935-B2,G03G
US-9551731-B2,A61B
US-9044021-B2,A21B
US-9597149-B2,H01L
US-9371099-B2,H04N
JP-5720697-B2,A61K
US-9649467-B2,A61K
US-9220860-B2,A61M
US-9575648-B2,G09G
US-9121016-B2,C12S
US-9447521-B2,C30B
US-9415120-B2,C12N
US-9212846-B2,F25D
US-10141118-B2,H01L
US-9575648-B2,G16H
US-9121016-B2,A61F
US-8954157-B2,A61N
US-8992024-B2,G09F
US-9522312-B2,B23K
US-9415120-B2,C12R
US-10060975-B2,G01D
US-9457510-B2,G07D
US-9226006-B2,G11B
US-9270639-B2,H04L
US-9332944-B2,A61B
US-9293644-B2,C30B
US-9518924-B2,G03B
US-9182815-B2,G01B
US-9169941-B2,F16H
US-9430016-B2,G06F
US-9211498-B2,A61J
US-9200186-B2,B41J
US-9575648-B2,G06F
US-10137283-B2,B29D
US-9290472-B2,A61K
US-9402981-B2,A61B
US-9100526-B2,G06K
US-9293644-B2,H01S
US-9290472-B2,A61P
US-9044021-B2,F24C
US-10077795-B2,F16B
US-8932208-B2,A61N
US-9284409-B2,B22F
US-9585927-B2,A61P
US-10007422-B2,G06T
US-8992024-B2,G02B
US-10010405-B2,A61F
US-10119947-B2,A23L
US-9649467-B2,A61J
US-8992024-B2,G09G
US-9306600-B2,H03M
US-8992024-B2,H04N
US-9546744-B2,E04B
US-9207691-B2,H02P
US-10141118-B2,H01M
US-9347655-B2,H05B
US-10034624-B2,G06Q
US-9399738-B2,C10J
US-10101801-B2,H04L

2025-02-12 21:33:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:33:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:33:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:33:34 - snowflake.connector.connection - INFO - closed
2025-02-12 21:33:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:33:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:33:55 - root - INFO - ```sql
SELECT
  t."publication_number" AS "citing_publication",
  COUNT(*) AS "total_ipc4_occurrences"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
```
2025-02-12 21:33:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:33:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:33:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:33:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:33:56 - snowflake.connector.connection - INFO - closed
2025-02-12 21:33:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:35:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:35:18 - root - INFO - SQL:
SELECT
  t."publication_number" AS "citing_publication",
  COUNT(*) AS "total_ipc4_occurrences"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
Results:
citing_publication,total_ipc4_occurrences
US-10036488-B2,1
US-9169941-B2,3
US-10077795-B2,1
US-9184581-B2,3
US-9575648-B2,10
US-9117791-B2,4
US-9597149-B2,3
US-10100810-B2,1
US-9155586-B2,7
US-10060975-B2,6
US-9548844-B2,2
US-10107583-B2,2
US-10105167-B2,9
US-10007422-B2,7
US-10076611-B2,3
US-9437430-B2,8
US-9121016-B2,19
US-9182815-B2,9
US-9185094-B2,5
US-9384632-B2,3
US-9448946-B2,3
US-10141118-B2,2
US-9244073-B2,3
US-9457510-B2,3
US-9362579-B2,1
JP-6005268-B2,2
US-10034624-B2,5
US-9293644-B2,19
US-9173003-B2,7
US-9436499-B2,4
US-9404565-B2,2
US-9175419-B2,9
US-9211498-B2,2
US-9332944-B2,13
US-9526699-B2,1
US-9200186-B2,1
US-9197224-B2,2
US-8954157-B2,2
US-9270639-B2,4
US-9160809-B2,2
US-9202992-B2,4
US-9311616-B2,1
US-8984387-B2,5
US-9371099-B2,13
US-9474734-B2,5
US-9302085-B2,4
US-9233513-B2,1
US-10042510-B2,1
US-9214830-B2,6
US-9100526-B2,6
US-9410163-B2,3
US-8992024-B2,5
US-9290472-B2,4
US-9284409-B2,11
US-9518924-B2,7
US-9131283-B2,1
US-9212846-B2,4
US-9306600-B2,1
US-9315115-B2,1
US-8986850-B2,1
US-10059084-B2,9
US-9347655-B2,13
US-9235943-B2,3
US-10137283-B2,3
US-10037903-B2,2
US-9067254-B2,1
US-9564199-B2,3
US-9089261-B2,4
US-9546744-B2,4
US-10119947-B2,6
US-9220860-B2,2
US-9001770-B2,13
US-8932208-B2,6
US-9585927-B2,24
US-9207691-B2,2
US-9068247-B2,1
US-9399738-B2,2
US-10017537-B2,8
US-9447521-B2,8
US-9622691-B2,13
US-9044021-B2,8
US-9415120-B2,8
US-9355294-B2,5
US-9464982-B2,1
US-9372790-B2,1
US-9636072-B2,5
AU-2012283875-B2,2
US-9522312-B2,3
US-9142476-B2,1
US-9151260-B2,2
US-9402981-B2,7
US-9048913-B2,9
JP-5715162-B2,2
US-10010405-B2,2
US-9226006-B2,40
US-10130893-B2,1
US-9456204-B2,2
US-9551731-B2,2
US-9649467-B2,6
US-9317887-B2,1

2025-02-12 21:35:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:35:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:35:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:35:19 - snowflake.connector.connection - INFO - closed
2025-02-12 21:35:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:36:24 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:36:24 - root - INFO - ```sql
SELECT t."publication_number" AS "citing_publication",
       COUNT(DISTINCT SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)) AS "num_distinct_ipc4_codes"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
```

```sql
SELECT citing_publication,
       SUM(POWER(ipc4_count, 2)) AS "sum_squared_ipc4_counts"
FROM (
  SELECT t."publication_number" AS citing_publication,
         SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS ipc4_code,
         COUNT(*) AS ipc4_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
  LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
  WHERE t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
) grouped_ipc
GROUP BY citing_publication
LIMIT 100;
```

```sql
SELECT t."publication_number", t."grant_date", t."kind_code",
       ARRAY_SIZE(t."citation") AS "num_citations"
FROM PATENTS.PATENTS.PUBLICATIONS t
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
```

```sql
SELECT t."publication_number" AS "citing_publication",
       c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
       SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
```

```sql
SELECT t."publication_number" AS "citing_publication",
       COUNT(ipc_cited.value::VARIANT:"code"::STRING) AS "num_citations_with_ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
```

**Explanation:**

These corrected SQL queries address the errors related to:

- **Usage of `LATERAL FLATTEN`:** Replaced `JOIN LATERAL FLATTEN` with `CROSS JOIN LATERAL FLATTEN` and `LEFT JOIN LATERAL FLATTEN` with `LEFT JOIN TABLE(FLATTEN(...))` as per Snowflake SQL syntax requirements. Snowflake does not support `JOIN LATERAL FLATTEN` with an `ON` clause or predicates.

- **Adjusting the `SUBSTR` Function:** Changed `SUBSTR(..., 0, 4)` to `SUBSTR(..., 1, 4)` because SQL string indexing starts at **1**, not **0**.

- **Column Aliases in `GROUP BY`:** Ensured that any expressions used in the `SELECT` clause are replicated in the `GROUP BY` clause instead of using their aliases, since SQL does not allow aliases to be referenced in the `GROUP BY` clause.

Feel free to run these corrected queries. They should resolve the errors and help you proceed with your analysis. If you need further assistance, please let me know!
2025-02-12 21:36:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:36:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:36:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:36:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:36:26 - snowflake.connector.connection - INFO - closed
2025-02-12 21:36:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:37:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:37:05 - root - INFO - SQL:
SELECT t."publication_number" AS "citing_publication",
       COUNT(DISTINCT SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)) AS "num_distinct_ipc4_codes"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
Results:
citing_publication,num_distinct_ipc4_codes
US-8954157-B2,2
US-9270639-B2,2
US-9160809-B2,1
US-9290472-B2,3
US-9100526-B2,5
US-8992024-B2,5
US-9410163-B2,1
US-10100810-B2,1
US-9155586-B2,1
US-9089261-B2,1
US-10077795-B2,1
US-9184581-B2,2
US-8984387-B2,2
US-9332944-B2,4
US-9526699-B2,1
US-9131283-B2,1
US-9272338-B2,2
US-8967144-B2,1
US-9646713-B2,1
US-9619652-B2,2
US-9372790-B2,1
US-9197224-B2,1
US-9200186-B2,1
US-9121016-B2,9
US-9437430-B2,2
US-9448946-B2,2
US-9182815-B2,4
US-9185094-B2,2
US-9384632-B2,2
US-9235943-B2,2
US-9546744-B2,2
US-9575648-B2,4
US-9597149-B2,3
US-9117791-B2,1
US-9522312-B2,2
US-9142476-B2,1
US-9169941-B2,2
US-10036488-B2,1
US-9244073-B2,2
US-9457510-B2,3
US-9551731-B2,1
US-9291935-B2,1
US-9649467-B2,3
US-9317887-B2,1
US-10019265-B2,1
US-9564199-B2,1
US-9067254-B2,1
US-10037903-B2,1
US-9175419-B2,2
US-9293644-B2,8
US-9173003-B2,3
US-10034624-B2,3
US-9404565-B2,2
JP-6005268-B2,1
US-9211498-B2,2
US-9436499-B2,1
US-9362579-B2,1
AU-2012283875-B2,2
US-9636072-B2,3
US-9233513-B2,1
US-9306600-B2,1
US-9207691-B2,1
US-9068247-B2,1
US-9585927-B2,2
US-10017537-B2,2
US-9399738-B2,2
US-10067609-B2,2
US-9622691-B2,5
US-10141118-B2,2
US-10042510-B2,1
US-9214830-B2,1
US-9226006-B2,6
US-10010405-B2,1
US-10130893-B2,1
US-9456204-B2,1
US-9355294-B2,4
US-9518924-B2,4
US-9284409-B2,5
US-10007422-B2,2
US-10107583-B2,2
US-10105167-B2,3
US-10119947-B2,3
US-9001770-B2,3
US-8932208-B2,3
US-9220860-B2,1
US-9048913-B2,4
JP-5715162-B2,2
US-9044021-B2,4
US-9415120-B2,4
US-9447521-B2,2
US-9548844-B2,2
US-10060975-B2,2
JP-5720697-B2,2
US-9153188-B2,3
AU-2012282191-B2,1
US-9212846-B2,1
US-10139262-B2,1
US-10101801-B2,3
US-9347655-B2,5
US-10059084-B2,5

2025-02-12 21:37:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:37:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:37:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:37:06 - snowflake.connector.connection - INFO - closed
2025-02-12 21:37:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:37:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:37:39 - root - INFO - ```sql
SELECT citing_publication,
       SUM(POWER(ipc4_count, 2)) AS "sum_squared_ipc4_counts"
FROM (
  SELECT
    t."publication_number" AS citing_publication,
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS ipc4_code,
    COUNT(*) AS ipc4_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
  LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
  WHERE t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
) grouped_ipc
GROUP BY citing_publication
LIMIT 100;
```

**Explanation:**

The error you're encountering is due to the use of `JOIN LATERAL FLATTEN` with an `ON` clause, which is not supported in Snowflake SQL. To resolve this issue, you need to adjust the joins involving the `FLATTEN` function.

**Corrections Made:**

1. **Replace `JOIN LATERAL FLATTEN` with `CROSS JOIN LATERAL FLATTEN`:**

   - **Original:**
     ```sql
     JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
     ```
   - **Corrected:**
     ```sql
     CROSS JOIN LATERAL FLATTEN(input => t."citation") c
     ```

2. **Replace `LEFT JOIN LATERAL FLATTEN` with `LEFT JOIN TABLE(FLATTEN(...))`:**

   - **Original:**
     ```sql
     LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
     ```
   - **Corrected:**
     ```sql
     LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
     ```

3. **Adjust the `SUBSTR` Function:**

   - Changed `SUBSTR(..., 0, 4)` to `SUBSTR(..., 1, 4)` because SQL string positions start at **1**, not **0**.

4. **Modify the `GROUP BY` Clause:**

   - In the subquery, replace `ipc4_code` in the `GROUP BY` clause with the actual expression:
     ```sql
     GROUP BY
       t."publication_number",
       SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
     ```
   - This is necessary because SQL does not allow the use of column aliases in the `GROUP BY` clause.

**Summary of the Query:**

- **Outer Query:**
  - Calculates the sum of squared counts (`ipc4_count`) for each `citing_publication`.
  - This sum is used to compute the originality score as per your formula.

- **Inner Query (Subquery `grouped_ipc`):**
  - Extracts the 4-digit IPC codes (`ipc4_code`) from the IPC codes of the cited publications.
  - Counts the occurrences (`ipc4_count`) of each 4-digit IPC code for each citing publication.

- **Joins and Conditions:**
  - **`CROSS JOIN LATERAL FLATTEN` on `t."citation"`:** To flatten the citations array and get individual citations.
  - **`LEFT JOIN` to `p`:** To get the details of the cited publications (including their IPC codes).
  - **`LEFT JOIN TABLE(FLATTEN(...))` on `p."ipc"`:** To flatten the IPC codes of the cited publications.
  - **Filters:** Applied to the citing publications with `kind_code` 'B2' and `grant_date` between 20150101 and 20181231.

**Next Steps:**

With this corrected query, you should be able to compute the `sum_squared_ipc4_counts` for each citing publication. This value is essential for calculating the originality score using the formula:

\[
\text{Originality} = 1 - \frac{\sum (\text{Occurrences of each IPC code})^2}{(\text{Total occurrences of IPC codes})^2}
\]

**Additional Considerations:**

- **Calculating Total Occurrences:**
  - After obtaining `sum_squared_ipc4_counts`, you'll need to calculate the square of the total occurrences of IPC codes for each citing publication.
  - You can modify the query to include the total count of IPC code occurrences and perform the calculation within the query.

- **Final Originality Score Calculation:**

  You may extend the query to compute the originality score directly:

  ```sql
  SELECT
    citing_publication,
    1 - (SUM(POWER(ipc4_count, 2)) / POWER(SUM(ipc4_count), 2)) AS originality_score
  FROM (
    -- Inner query as before
  ) grouped_ipc
  GROUP BY citing_publication
  ORDER BY originality_score DESC
  LIMIT 1;
  ```

  - This will give you the publication with the highest originality score.

**Note:**

- Replace `LIMIT 100` with `LIMIT 1` if you only want the patent with the highest originality score.
- Ensure that you handle cases where the denominator might be zero to avoid division errors.

**Conclusion:**

By applying these corrections, your query should run successfully in Snowflake SQL, allowing you to compute the originality scores as required. If you need further assistance with extending the query or interpreting the results, feel free to ask!
2025-02-12 21:37:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:37:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:37:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:37:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:37:40 - snowflake.connector.connection - INFO - closed
2025-02-12 21:37:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:38:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:38:23 - root - INFO - SQL:
SELECT citing_publication,
       SUM(POWER(ipc4_count, 2)) AS "sum_squared_ipc4_counts"
FROM (
  SELECT
    t."publication_number" AS citing_publication,
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS ipc4_code,
    COUNT(*) AS ipc4_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
  LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
  WHERE t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
) grouped_ipc
GROUP BY citing_publication
LIMIT 100;
Results:
CITING_PUBLICATION,sum_squared_ipc4_counts
US-9169941-B2,5.0
US-10036488-B2,1.0
US-9448946-B2,5.0
US-9384632-B2,5.0
US-9182815-B2,21.0
US-9185094-B2,17.0
US-9121016-B2,59.0
US-9437430-B2,50.0
US-10137283-B2,3.0
US-9270639-B2,10.0
US-8954157-B2,2.0
US-9160809-B2,4.0
US-9235943-B2,5.0
US-9575648-B2,42.0
US-9597149-B2,3.0
US-9117791-B2,16.0
US-9244073-B2,5.0
US-9457510-B2,3.0
US-9089261-B2,16.0
US-9355294-B2,7.0
US-10100810-B2,1.0
US-9155586-B2,49.0
US-9197224-B2,4.0
US-9200186-B2,1.0
US-9233513-B2,1.0
US-9548844-B2,2.0
US-10060975-B2,26.0
US-9546744-B2,10.0
US-9290472-B2,6.0
US-9100526-B2,8.0
US-8992024-B2,5.0
US-9410163-B2,9.0
US-9447521-B2,50.0
US-9293644-B2,79.0
US-10034624-B2,11.0
US-9173003-B2,21.0
US-9211498-B2,2.0
US-9404565-B2,2.0
JP-6005268-B2,4.0
US-9436499-B2,16.0
US-9175419-B2,41.0
US-9362579-B2,1.0
US-9131283-B2,1.0
US-8967144-B2,16.0
US-9619652-B2,2.0
US-9272338-B2,2.0
US-9646713-B2,1.0
US-10105167-B2,35.0
US-10107583-B2,2.0
US-10007422-B2,25.0
US-9332944-B2,73.0
US-9526699-B2,1.0
US-10141118-B2,2.0
US-10042510-B2,1.0
US-9214830-B2,36.0
US-9551731-B2,4.0
US-9291935-B2,1.0
US-10019265-B2,1.0
US-9649467-B2,14.0
US-9317887-B2,1.0
US-9284409-B2,37.0
US-9518924-B2,15.0
US-9372790-B2,1.0
JP-5720697-B2,101.0
US-9153188-B2,6.0
AU-2012282191-B2,36.0
US-9212846-B2,16.0
US-9402981-B2,25.0
US-9151260-B2,4.0
US-9585927-B2,530.0
US-9207691-B2,4.0
US-9068247-B2,1.0
US-9415120-B2,22.0
US-9044021-B2,18.0
US-10017537-B2,32.0
US-9399738-B2,2.0
US-9067254-B2,1.0
US-9564199-B2,9.0
US-10037903-B2,4.0
US-9622691-B2,51.0
US-9306600-B2,1.0
JP-5715162-B2,2.0
US-9048913-B2,31.0
US-9202992-B2,6.0
US-9311616-B2,1.0
US-9464982-B2,1.0
US-8984387-B2,17.0
US-9371099-B2,103.0
US-9302085-B2,16.0
US-9474734-B2,17.0
US-9430016-B2,4.0
US-9001770-B2,75.0
US-10119947-B2,14.0
US-8932208-B2,18.0
US-9220860-B2,4.0
US-9347655-B2,47.0
US-10059084-B2,21.0
US-8986850-B2,1.0
US-9315115-B2,1.0
US-9226006-B2,824.0

2025-02-12 21:38:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:38:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:38:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:38:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:38:25 - snowflake.connector.connection - INFO - closed
2025-02-12 21:38:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:38:26 - root - INFO - SQL:
SELECT t."publication_number", t."grant_date", t."kind_code",
           ARRAY_SIZE(t."citation") AS "num_citations"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    LIMIT 100;
Results:
publication_number,grant_date,kind_code,num_citations
US-8965864-B2,20150224,B2,1
US-9437430-B2,20160906,B2,375
US-9333492-B2,20160510,B2,24
US-9284409-B2,20160315,B2,2183
US-9452241-B2,20160927,B2,87
US-9302085-B2,20160405,B2,19
US-8935511-B2,20150113,B2,16
US-8962132-B2,20150224,B2,24
US-9456204-B2,20160927,B2,17
US-9011636-B2,20150421,B2,26
US-9159092-B2,20151013,B2,18
US-8934781-B2,20150113,B2,10
US-9166782-B2,20151020,B2,20
US-9037990-B2,20150519,B2,12
US-9008007-B2,20150414,B2,10
US-9068692-B2,20150630,B2,14
US-9080562-B2,20150714,B2,14
US-8944695-B2,20150203,B2,30
US-9453104-B2,20160927,B2,47
US-9104711-B2,20150811,B2,37
US-9362818-B2,20160607,B2,31
US-10034007-B2,20180724,B2,3
US-9200186-B2,20151201,B2,219
US-8984387-B2,20150317,B2,375
US-8954747-B2,20150210,B2,31
US-9164153-B2,20151020,B2,21
US-9438879-B2,20160906,B2,28
US-10153865-B2,20181211,B2,22
US-9351806-B2,20160531,B2,14
US-9072319-B2,20150707,B2,187
AU-2010202595-B2,20150820,B2,1
AU-2010339481-B2,20160204,B2,2
AU-2011224053-B2,20150702,B2,3
AU-2011279176-B2,20150226,B2,4
AU-2012200410-B2,20150528,B2,1
AU-2012214405-B2,20150723,B2,1
AU-2012261627-B2,20151022,B2,2
AU-2012279110-B2,20160225,B2,2
AU-2012290121-B2,20151126,B2,1
AU-2012312016-B2,20150618,B2,2
AU-2012396247-B2,20160526,B2,1
AU-2013202145-B2,20150226,B2,1
AU-2013268781-B2,20151203,B2,3
AU-2013281125-B2,20170824,B2,6
AU-2014250113-B2,20170330,B2,9
AU-2014338589-B2,20180222,B2,1
AU-2015207934-B2,20161208,B2,5
AU-2015409096-B2,20181115,B2,3
EP-2592165-B2,20180919,B2,5
US-9575648-B2,20170221,B2,1143
US-9028999-B2,20150512,B2,9
US-9068473-B2,20150630,B2,18
US-8997137-B2,20150331,B2,14
US-9396257-B2,20160719,B2,33
US-9362717-B2,20160607,B2,27
US-9275036-B2,20160301,B2,33
US-8974982-B2,20150310,B2,30
US-8992882-B2,20150331,B2,5
US-9049991-B2,20150609,B2,14
US-9393557-B2,20160719,B2,53
US-9006081-B2,20150414,B2,5
US-9046276-B2,20150602,B2,15
US-9034622-B2,20150519,B2,23
US-8930147-B2,20150106,B2,1
US-9297942-B2,20160329,B2,52
US-9121051-B2,20150901,B2,39
US-9019050-B2,20150428,B2,21
US-9405938-B2,20160802,B2,30
US-9246583-B2,20160126,B2,24
US-8996516-B2,20150331,B2,21
US-9009469-B2,20150414,B2,24
US-8998654-B2,20150407,B2,22
US-9281167-B2,20160308,B2,15
US-9029140-B2,20150512,B2,229
US-9181681-B2,20151110,B2,15
US-9394731-B2,20160719,B2,12
US-9068384-B2,20150630,B2,18
US-9082772-B2,20150714,B2,16
US-9136098-B2,20150915,B2,15
US-10047399-B2,20180814,B2,30
US-10098361-B2,20181016,B2,27
US-9009580-B2,20150414,B2,5
US-9258696-B2,20160209,B2,22
US-9637570-B2,20170502,B2,39
US-9371099-B2,20160621,B2,879
US-9429369-B2,20160830,B2,13
US-8952769-B2,20150210,B2,11
US-9095517-B2,20150804,B2,13
US-9332944-B2,20160510,B2,1288
US-9413238-B2,20160809,B2,16
US-9056087-B2,20150616,B2,123
US-8971612-B2,20150303,B2,226
US-9266071-B2,20160223,B2,14
US-9381070-B2,20160705,B2,66
US-9288404-B2,20160315,B2,17
US-9546122-B2,20170117,B2,58
US-9211434-B2,20151215,B2,69
US-9139000-B2,20150922,B2,6
US-9019995-B2,20150428,B2,12
US-9358141-B2,20160607,B2,237

2025-02-12 21:38:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:38:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:38:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:38:27 - snowflake.connector.connection - INFO - closed
2025-02-12 21:38:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:38:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:38:50 - root - INFO - ```sql
SELECT
  t."publication_number" AS "citing_publication",
  c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
```

**Explanation:**

The error you're encountering arises from using `JOIN LATERAL FLATTEN` with an `ON` clause, which is not supported in Snowflake SQL. Here’s how to correct the query:

1. **Replace `JOIN LATERAL FLATTEN` with `CROSS JOIN LATERAL FLATTEN`:**

   - **Original:**
     ```sql
     JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
     ```
   - **Corrected:**
     ```sql
     CROSS JOIN LATERAL FLATTEN(input => t."citation") c
     ```
   - **Reason:** Snowflake SQL does not support `JOIN LATERAL FLATTEN` with an `ON` clause or join predicates. Instead, use `CROSS JOIN LATERAL FLATTEN` to join each row of the left table (`t`) with the result of the `FLATTEN` function.

2. **Replace `LEFT JOIN LATERAL FLATTEN` with `LEFT JOIN TABLE(FLATTEN(...))`:**

   - **Original:**
     ```sql
     LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
     ```
   - **Corrected:**
     ```sql
     LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
     ```
   - **Reason:** Similar to the first correction, `LEFT JOIN LATERAL FLATTEN` with an `ON` clause is not supported. Use `LEFT JOIN TABLE(FLATTEN(...))` without an `ON` clause to perform a lateral left join with the `FLATTEN` function.

3. **Adjust the `SUBSTR` Function:**

   - **Original:**
     ```sql
     SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4)
     ```
   - **Corrected:**
     ```sql
     SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
     ```
   - **Reason:** In SQL, string positions start at **1**, not **0**. Adjusting the starting position to **1** ensures that you extract the first four characters of the IPC code correctly.

**Summary of the Corrected Query:**

- **Selects:**
  - `citing_publication`: The publication number of the citing (original) patent.
  - `cited_publication_number`: The publication number of the cited (referenced) patent.
  - `ipc4_code`: The first four characters of the IPC code from the cited publication.

- **From Clause:**
  - The main table is `PATENTS.PATENTS.PUBLICATIONS` aliased as `t`.

- **Joins:**
  - **CROSS JOIN LATERAL FLATTEN** on `t."citation"` to flatten the citations array and obtain individual citations.
  - **LEFT JOIN** on `PATENTS.PATENTS.PUBLICATIONS` aliased as `p` to get details of the cited publications.
  - **LEFT JOIN TABLE(FLATTEN(...))** on `p."ipc"` to flatten the IPC codes of the cited publications.

- **Where Clause:**
  - Filters for patents with `kind_code` of 'B2'.
  - Filters for patents with a `grant_date` between `20150101` and `20181231`.

- **Limit Clause:**
  - Limits the results to 100 rows.

**Additional Notes:**

- **Why Use `CROSS JOIN LATERAL FLATTEN`?**
  - It allows you to join each row of your main table with the result of the `FLATTEN` function applied to that row, effectively unnesting arrays or variant data types.

- **Why Use `LEFT JOIN TABLE(FLATTEN(...))`?**
  - This performs a lateral left join, enabling you to include all rows from the left table (`p`) and the flattened IPC codes. If a cited publication does not have IPC codes, `ipc_cited` will be `NULL`, but the row will still be included.

**Example Usage:**

This query will give you a list of citing publications along with their cited publications and the corresponding 4-digit IPC codes. This data is useful for analyzing the IPC classifications of patents cited by B2 patents granted between 2015 and 2018.

**Proceeding with Your Analysis:**

With the corrected query, you can:

- **Execute the Query Successfully:**
  - Run the query to retrieve the desired data without encountering the previous error.

- **Use the Data for Further Analysis:**
  - Analyze the relationships between citing and cited patents.
  - Calculate metrics like originality scores or examine citation patterns.

**If You Need Further Assistance:**

Feel free to ask if you have any more questions or need help with additional queries or analysis steps.
2025-02-12 21:38:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:38:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:38:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:38:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:38:51 - snowflake.connector.connection - INFO - closed
2025-02-12 21:38:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:39:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:39:09 - root - INFO - SQL:
SELECT
  t."publication_number" AS "citing_publication",
  c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Results:
citing_publication,cited_publication_number,ipc4_code
US-9284409-B2,US-2008071350-A1,A61F
US-9372790-B2,US-2007233941-A1,G06F
US-10105167-B2,US-2009112263-A1,A61B
US-10105167-B2,US-2009112263-A1,A61N
US-10105167-B2,US-2009112263-A1,A61B
US-10105167-B2,US-2009112263-A1,A61B
US-9067254-B2,US-2009089738-A1,G06F
US-9646713-B2,US-2010026338-A1,H03K
US-9410163-B2,US-2011041197-A1,C12N
US-9410163-B2,US-2011041197-A1,C12N
US-9410163-B2,US-2011041197-A1,C12N
US-9622691-B2,US-2007095661-A1,G01N
US-9622691-B2,US-2007095661-A1,C23C
US-9551731-B2,US-2008171931-A1,A61B
US-9551731-B2,US-2008171931-A1,A61B
US-9121016-B2,US-2010248334-A1,C09D
US-9121016-B2,US-2010248334-A1,A01N
US-9121016-B2,US-2010248334-A1,A61K
US-9121016-B2,US-2010248334-A1,A62D
US-9121016-B2,US-2010248334-A1,C09D
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,A61F
US-9121016-B2,US-2010248334-A1,A62D
US-9121016-B2,US-2010248334-A1,A61K
US-9121016-B2,US-2010248334-A1,A61K
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,C12S
US-9121016-B2,US-2010248334-A1,A62D
US-9121016-B2,US-2010248334-A1,C12M
US-9121016-B2,US-2010248334-A1,C09J
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,A61K
US-9169941-B2,US-2005000579-A1,F16K
US-9169941-B2,US-2005000579-A1,F16H
US-9169941-B2,US-2005000579-A1,F16K
US-9619652-B2,US-2004199489-A1,G06F
US-9619652-B2,US-2004199489-A1,G06Q
US-8984387-B2,US-2005097008-A1,G06Q
US-8984387-B2,US-2005097008-A1,G06Q
US-8984387-B2,US-2005097008-A1,G06F
US-9212846-B2,US-2213274-A,F25D
US-9212846-B2,US-2213274-A,F25D
US-9212846-B2,US-2213274-A,F25D
US-9212846-B2,US-2213274-A,F25D
US-9291935-B2,US-2009290903-A1,G03G
US-9293644-B2,US-2008092812-A1,H01L
US-9293644-B2,US-2008092812-A1,C23C
US-9293644-B2,US-2008092812-A1,H01L
US-9293644-B2,US-2008092812-A1,H01L
US-9197224-B2,US-2009285279-A1,H03K
US-9197224-B2,US-2009285279-A1,H03K
US-9160809-B2,US-2008120617-A1,G06F
US-9160809-B2,US-2008120617-A1,G06F
US-9597149-B2,US-5730752-A,A61M
US-9597149-B2,US-5730752-A,A61B
AU-2012283875-B2,US-2007198040-A1,B05D
AU-2012283875-B2,US-2007198040-A1,A61F
US-9226006-B2,US-5914746-A,H04N
US-9226006-B2,US-5914746-A,H04N
US-9347655-B2,US-8547391-B2,H05B
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,G06K
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,G06K
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,G03F
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,F01N
US-9293644-B2,US-4870045-A,B28B
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,B01D
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G09G

2025-02-12 21:39:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:39:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:39:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:39:10 - snowflake.connector.connection - INFO - closed
2025-02-12 21:39:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:39:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:39:27 - root - INFO - ```sql
SELECT t."publication_number" AS "citing_publication",
       COUNT(ipc_cited.value::VARIANT:"code"::STRING) AS "num_citations_with_ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
```
2025-02-12 21:39:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:39:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:39:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:39:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:39:28 - snowflake.connector.connection - INFO - closed
2025-02-12 21:39:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:39:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:39:35 - root - INFO - SQL:
SELECT t."publication_number" AS "citing_publication",
       COUNT(ipc_cited.value::VARIANT:"code"::STRING) AS "num_citations_with_ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
Results:
citing_publication,num_citations_with_ipc
US-10036488-B2,1
US-9169941-B2,3
US-9284409-B2,11
US-9518924-B2,7
US-9526699-B2,1
US-9332944-B2,13
US-10100810-B2,1
US-9155586-B2,7
US-9089261-B2,4
US-9355294-B2,5
US-9622691-B2,13
US-10017537-B2,8
US-9399738-B2,2
US-9184581-B2,3
US-10077795-B2,1
US-10141118-B2,2
US-9200186-B2,1
US-9197224-B2,2
US-9202992-B2,4
US-9311616-B2,1
US-9437430-B2,8
US-9121016-B2,19
US-10130893-B2,1
US-9226006-B2,40
US-10010405-B2,2
US-9456204-B2,2
US-9173003-B2,7
US-10034624-B2,5
US-9436499-B2,4
US-9404565-B2,2
US-9175419-B2,9
US-9293644-B2,19
US-9362579-B2,1
US-9211498-B2,2
JP-6005268-B2,2
US-8984387-B2,5
US-9372790-B2,1
US-9548844-B2,2
US-10060975-B2,6
US-9212846-B2,4
US-10042510-B2,1
US-9214830-B2,6
US-9182815-B2,9
US-9185094-B2,5
US-9448946-B2,3
US-9384632-B2,3
US-9575648-B2,10
US-9597149-B2,3
US-9117791-B2,4
US-10076611-B2,3
US-9546744-B2,4
US-10101801-B2,7
US-10139262-B2,1
US-9585927-B2,24
US-9207691-B2,2
US-9068247-B2,1
US-9447521-B2,8
US-9233513-B2,1
US-9151260-B2,2
US-9402981-B2,7
US-8954157-B2,2
US-9270639-B2,4
US-9160809-B2,2
US-9244073-B2,3
US-9457510-B2,3
US-10137283-B2,3
US-9564199-B2,3
US-9067254-B2,1
US-10037903-B2,2
US-9131283-B2,1
AU-2012282191-B2,6
JP-5720697-B2,11
US-9153188-B2,4
US-9306600-B2,1
JP-5715162-B2,2
US-9048913-B2,9
US-9235943-B2,3
US-9649467-B2,6
US-9317887-B2,1
US-9551731-B2,2
US-9291935-B2,1
US-10019265-B2,1
US-9464982-B2,1
US-10007422-B2,7
US-10105167-B2,9
US-10107583-B2,2
US-9636072-B2,5
AU-2012283875-B2,2
US-9142476-B2,1
US-9522312-B2,3
US-9315115-B2,1
US-8986850-B2,1
US-10059084-B2,9
US-9347655-B2,13
US-9044021-B2,8
US-9415120-B2,8
US-9410163-B2,3
US-9100526-B2,6
US-8992024-B2,5
US-9290472-B2,4

2025-02-12 21:39:35 - root - INFO - itercount: 0
2025-02-12 21:39:35 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

Database Name: PATENTS
Schema Name: PATENTS
,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

Database Name: PATENTS
Schema Name: PATENTS
,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Table:** `PATENTS.PATENTS.PUBLICATIONS`

  - **"publication_number"**: Used to identify each patent publication.
  - **"kind_code"**: To filter patents with kind code 'B2'.
  - **"grant_date"**: To select patents granted between 2015 and 2018.
  - **"citation"**: Contains backward citations of patents; used to extract cited publication numbers.
  - **"ipc"**: Contains IPC codes assigned to patents; needed to extract 4-digit IPC codes of cited patents.

**Conditions that may be used:**

- **Filter for B2 kind code:**
  - `WHERE "kind_code" = 'B2'`
- **Filter for grant dates between 2015 and 2018:**
  - `WHERE "grant_date" BETWEEN 20150101 AND 20181231`

---

**SQL Queries:**

1. **Retrieve publication numbers, kind codes, and grant dates for B2 patents granted between 2015 and 2018:**

   ```sql
   SELECT "publication_number", "kind_code", "grant_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

2. **Extract citations for B2 patents granted between 2015 and 2018:**

   ```sql
   SELECT "publication_number", "citation"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

3. **Flatten the citations to get individual cited publication numbers:**

   ```sql
   SELECT t."publication_number", c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

4. **Retrieve IPC codes for patents (to understand the structure of the "ipc" field):**

   ```sql
   SELECT "publication_number", "ipc"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 100;
   ```

5. **Flatten the IPC field to extract individual IPC codes for patents:**

   ```sql
   SELECT t."publication_number", ipc_u.value::VARIANT:"code"::STRING AS "ipc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc_u
   LIMIT 100;
   ```

6. **Join cited publications to retrieve their IPC codes:**

   ```sql
   SELECT t."publication_number" AS "citing_publication",
          c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
          p."ipc"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
   LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
     ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
   ```

7. **Extract 4-digit IPC codes from cited publications' IPC codes:**

   ```sql
   SELECT p."publication_number", SUBSTR(ipc_u.value::VARIANT:"code"::STRING, 0, 4) AS "ipc4_code"
   FROM PATENTS.PATENTS.PUBLICATIONS p,
        LATERAL FLATTEN(input => p."ipc") ipc_u
   LIMIT 100;
   ```

8. **Count occurrences of each 4-digit IPC code in backward citations of B2 patents:**

   ```sql
   SELECT t."publication_number" AS "citing_publication",
          SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4) AS "ipc4_code",
          COUNT(*) AS "ipc4_count"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
   LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
     ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
   LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   GROUP BY t."publication_number", "ipc4_code"
   LIMIT 100;
   ```

9. **Calculate the total number of backward citations for each B2 patent:**

   ```sql
   SELECT t."publication_number" AS "citing_publication",
          COUNT(*) AS "total_backward_citations"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   GROUP BY t."publication_number"
   LIMIT 100;
   ```

10. **List distinct 4-digit IPC codes found in backward citations for each B2 patent:**

    ```sql
    SELECT DISTINCT t."publication_number" AS "citing_publication",
           SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4) AS "ipc4_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
    LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    LIMIT 100;
    ```

11. **Count total occurrences of 4-digit IPC codes in backward citations for each B2 patent:**

    ```sql
    SELECT t."publication_number" AS "citing_publication",
           COUNT(*) AS "total_ipc4_occurrences"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
    LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    LIMIT 100;
    ```

12. **Retrieve the number of distinct 4-digit IPC codes in backward citations per B2 patent:**

    ```sql
    SELECT t."publication_number" AS "citing_publication",
           COUNT(DISTINCT SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4)) AS "num_distinct_ipc4_codes"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
    LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    LIMIT 100;
    ```

13. **Calculate the sum of squared counts of 4-digit IPC codes in backward citations per B2 patent:**

    ```sql
    SELECT citing_publication,
           SUM(POWER(ipc4_count, 2)) AS "sum_squared_ipc4_counts"
    FROM (
      SELECT t."publication_number" AS citing_publication,
             SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4) AS ipc4_code,
             COUNT(*) AS ipc4_count
      FROM PATENTS.PATENTS.PUBLICATIONS t
      JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
      LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
        ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
      LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
      WHERE t."kind_code" = 'B2'
        AND t."grant_date" BETWEEN 20150101 AND 20181231
      GROUP BY t."publication_number", ipc4_code
    ) grouped_ipc
    GROUP BY citing_publication
    LIMIT 100;
    ```

14. **Retrieve publication numbers with their grant dates and kind codes, along with the total number of citations:**

    ```sql
    SELECT t."publication_number", t."grant_date", t."kind_code",
           ARRAY_SIZE(t."citation") AS "num_citations"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    LIMIT 100;
    ```

15. **List patents along with the IPC codes of their backward citations:**

    ```sql
    SELECT t."publication_number" AS "citing_publication",
           c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
           SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 0, 4) AS "ipc4_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
    LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    LIMIT 100;
    ```

16. **Find the total number of backward citations with valid IPC codes for each B2 patent:**

    ```sql
    SELECT t."publication_number" AS "citing_publication",
           COUNT(ipc_cited.value::VARIANT:"code"::STRING) AS "num_citations_with_ipc"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    JOIN LATERAL FLATTEN(input => t."citation") c ON TRUE
    LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
      ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
    LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited ON TRUE
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    GROUP BY t."publication_number"
    LIMIT 100;
    ```

These queries help in understanding the structure and content of the relevant columns needed to calculate the originality score for patents, as per the task requirements.Query:
SELECT "publication_number", "kind_code", "grant_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
publication_number,kind_code,grant_date
AU-2010202595-B2,B2,20150820
AU-2010339481-B2,B2,20160204
AU-2011224053-B2,B2,20150702
AU-2011279176-B2,B2,20150226
AU-2012200410-B2,B2,20150528
AU-2012214405-B2,B2,20150723
AU-2012261627-B2,B2,20151022
AU-2012279110-B2,B2,20160225
AU-2012290121-B2,B2,20151126
AU-2012312016-B2,B2,20150618
AU-2012396247-B2,B2,20160526
AU-2013202145-B2,B2,20150226
AU-2013268781-B2,B2,20151203
AU-2013281125-B2,B2,20170824
AU-2014250113-B2,B2,20170330
AU-2014338589-B2,B2,20180222
AU-2015207934-B2,B2,20161208
AU-2015409096-B2,B2,20181115
EP-2592165-B2,B2,20180919
US-9258696-B2,B2,20160209
US-9637570-B2,B2,20170502
US-9056087-B2,B2,20150616
US-9358141-B2,B2,20160607
US-8998077-B2,B2,20150407
US-9175419-B2,B2,20151103
US-8930853-B2,B2,20150106
US-9468034-B2,B2,20161011
US-10154644-B2,B2,20181218
US-9292092-B2,B2,20160322
US-9619652-B2,B2,20170411
US-9091473-B2,B2,20150728
US-8974798-B2,B2,20150310
US-9245361-B2,B2,20160126
US-9391798-B2,B2,20160712
US-9446906-B2,B2,20160920
US-9006458-B2,B2,20150414
US-9330002-B2,B2,20160503
US-9319810-B2,B2,20160419
US-8957637-B2,B2,20150217
US-9249661-B2,B2,20160202
US-9049273-B2,B2,20150602
US-9319157-B2,B2,20160419
US-8944512-B2,B2,20150203
US-8979733-B2,B2,20150317
US-9225922-B2,B2,20151229
US-9274360-B2,B2,20160301
US-8934992-B2,B2,20150113
US-9207957-B2,B2,20151208
US-9160809-B2,B2,20151013
US-8942708-B2,B2,20150127
US-8978879-B2,B2,20150317
US-9024630-B2,B2,20150505
US-10092214-B2,B2,20181009
US-9091534-B2,B2,20150728
US-8946076-B2,B2,20150203
US-9073091-B2,B2,20150707
US-9400798-B2,B2,20160726
US-9275480-B2,B2,20160301
US-9048888-B2,B2,20150602
US-9326820-B2,B2,20160503
US-8963461-B2,B2,20150224
US-8996479-B2,B2,20150331
US-9330483-B2,B2,20160503
US-9347211-B2,B2,20160524
US-8961216-B2,B2,20150224
US-9199270-B2,B2,20151201
US-9319289-B2,B2,20160419
US-9382821-B2,B2,20160705
US-9442399-B2,B2,20160913
US-9478344-B2,B2,20161025
US-9468443-B2,B2,20161018
US-9171827-B2,B2,20151027
US-9179488-B2,B2,20151103
US-9143591-B2,B2,20150922
US-8954157-B2,B2,20150210
US-9244257-B2,B2,20160126
US-8935238-B2,B2,20150113
US-9462441-B2,B2,20161004
US-9202992-B2,B2,20151201
US-9365588-B2,B2,20160614
US-9475565-B2,B2,20161025
US-9376113-B2,B2,20160628
US-9580288-B2,B2,20170228
US-9069729-B2,B2,20150630
US-9137993-B2,B2,20150922
US-9506772-B2,B2,20161129
US-9628633-B2,B2,20170418
US-9471055-B2,B2,20161018
US-9299403-B2,B2,20160329
US-10098115-B2,B2,20181009
US-9468383-B2,B2,20161018
US-9412767-B2,B2,20160809
US-9527297-B2,B2,20161227
US-9474734-B2,B2,20161025
US-9363053-B2,B2,20160607
US-10008517-B2,B2,20180626
US-9476164-B2,B2,20161025
US-10142304-B2,B2,20181127
US-10077795-B2,B2,20180918
US-10133566-B2,B2,20181120
Query:
SELECT "publication_number", "citation"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "kind_code" = 'B2'
     AND "grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
Too long, hard cut:
publication_number,citation
JP-5743884-B2,[]
JP-5670338-B2,[]
JP-5694943-B2,[]
JP-5713933-B2,[]
JP-5829955-B2,[]
JP-5886104-B2,[]
JP-6071247-B2,[]
JP-5843696-B2,[]
JP-6005998-B2,[]
JP-5973790-B2,[]
JP-5958105-B2,[]
JP-5979713-B2,[]
JP-6140400-B2,[]
JP-6089290-B2,[]
JP-5705176-B2,[]
JP-5751218-B2,[]
JP-6015207-B2,[]
JP-5925629-B2,[]
JP-6157817-B2,[]
JP-6163720-B2,[]
JP-5990735-B2,[]
JP-6042145-B2,[]
JP-6009879-B2,[]
JP-6072487-B2,[]
JP-5809123-B2,[]
JP-6078286-B2,[]
JP-6057653-B2,[]
JP-5942770-B2,[]
JP-6004430-B2,[]
JP-6142500-B2,[]
JP-6014461-B2,[]
JP-6205712-B2,[]
JP-5968758-B2,[]
JP-6077844-B2,[]
JP-6155019-B2,[]
JP-5746132-B2,[]
JP-5743338-B2,[]
JP-5733838-B2,"[
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2004289813-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2005142780-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2005210280-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""SEA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2006340152-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""SEA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2008017353-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2009170987-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2009212902-A"",
    ""type"": """"
  }
]"
JP-5676581-B2,[]
JP-5774001-B2,[]
JP-5818024-B2,"[
  {
    ""application_number"": """",
    ""category"": ""SEA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-H09502650-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-H09280403-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2001288793-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2002320565-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2003181335-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2007130615-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2007312829-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2008012413-A"",
    ""type"": """"
  }
]"
JP-5889796-B2,[]
JP-5815565-B2,[]
JP-5968791-B2,"[
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": """",
    ""publication_number"": ""JP-2011205371-A"",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA"",
    ""filing_date"": 0,
    ""npl_text"": ""JPN6015049094; Ｑｕａｌｃｏｍｍ Ｉｎｃｏｒｐｏｒａｔｅｄ: 'Ｅｎａｂｌｉｎｇ ｒｅｐｏｒｔｉｎｇ ｏｆ ＡＢＳ ｒｅｓｏｕｒｃｅ ｓｔａｔｕｓ ｆｏｒ ｅＩＣＩＣ ｐｕｒｐｏｓｅｓ［ｏｎｌｉｎｅ］' ３ＧＰＰ ＴＳＧ-ＲＡＮ ＷＧ３＃７０ｂｉｓ Ｒ３-１１０１６４ , 20110117, インターネット＜ＵＲＬ：ｈｔｔｐ：／／ｗｗｗ．３ｇｐｐ．ｏｒｇ／ｆｔｐ／ｔｓｇ＿ｒａ"",
    ""publication_number"": """",
    ""type"": """"
  },
  {
    ""application_number"": """",
    ""category"": ""EXA,SEA"",
    ""filing_date"": 0,
    ""npl_text"": ""JPN6015049095; Ｑｕａｌｃｏｍｍ Ｉｎｃｏｒｐｏｒａｔｅｄ: 'Ｍｏｒｅ ｏｎ ｒｅｓｏｕｒｃｅ ｓｔａｔｕｓ ｒｅｐｏｒｔ ｆｏｒ ｅＩＣＩＣ［ｏｎｌｉｎｅ］' ３ＧＰＰ ＴＳＧ-ＲＡＮ ＷＧ３＃７０ｂｉｓ Ｒ３-１１０１６３ , 20110117, インターネット＜ＵＲＬ：ｈｔｔｐ：／／ｗｗｗ．３ｇｐｐ．ｏｒｇ／ｆｔｐ／ｔｓｇ＿ｒａ"",
    ""publication_number"": """",
    ""type"": """"
  }
]"
JP-6113512-B2,[]
JP-6064639-B2,[]
JP-6326685-B2,[]
JP-5784662-B2,[]
JP-5832470-B2,[]
JP-5995772-B2,[]
JP-6176991-B2,[]
JP-5704768-B2,[]
JP-6104048-B2,[]
JP-6083568-B2,[]
JP-6052841-B2,[]
JP-6167687-B2,[]
JP-5805144-B2,[]
JP-6086037-B2,[]
JP-6202256-B2,[]
JP-6268773-B2,[]
JP-6197435-B2,[]
JP-6303331-B2,[]
JP-6245599-B2,[]
JP-6098445-B2,[]
JP-6102653-B2,[]
JP-5979111-B2,[]
JP-6287028-B2,[]
JP-6425374-B2,[]
JP-5832502-B2,[]
JP-5949725-B2,[]
JP-6281247-B2,[]
JP-6362321-B2,[]
JP-6238712-B2,[]
JP-6281056-B2,[]
JP-5733539-B2,[]
Query:
SELECT t."publication_number", c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   LIMIT 100;
Answer:
publication_number,cited_publication_number
US-8984389-B2,KR-20000037283-A
US-8984389-B2,US-6313854-B1
US-8984389-B2,KR-20030003818-A
US-8984389-B2,US-6546393-B1
US-8984389-B2,US-2003135820-A1
US-8984389-B2,US-2003177265-A1
US-8984389-B2,US-2004019611-A1
US-8984389-B2,US-2004105127-A1
US-8984389-B2,KR-20040083269-A
US-8984389-B2,US-2004214611-A1
US-8984389-B2,KR-20040091987-A
US-8984389-B2,US-2004236774-A1
US-8984389-B2,US-2004250220-A1
US-8984389-B2,US-2005097623-A1
US-8984389-B2,US-2005131992-A1
US-8984389-B2,US-2005210399-A1
US-8984389-B2,US-2005216526-A1
US-8984389-B2,US-2005223342-A1
US-8984389-B2,US-2005246626-A1
US-8984389-B2,US-2005246622-A1
US-8984389-B2,US-6970867-B1
US-8984389-B2,US-6981028-B1
US-8984389-B2,US-2006123183-A1
US-8984389-B2,US-7107540-B1
US-8984389-B2,US-2007033517-A1
US-8984389-B2,KR-20070033736-A
US-8984389-B2,US-7225407-B2
US-8984389-B2,US-2007180381-A1
US-8984389-B2,US-7290204-B1
US-8984389-B2,US-2007283267-A1
US-8984389-B2,US-2008059906-A1
US-8984389-B2,US-2008104535-A1
US-8984389-B2,US-2008108341-A1
US-8984389-B2,US-2008235563-A1
US-8984389-B2,US-2008270891-A1
US-9031134-B2,EP-0856995-A2
US-9031134-B2,US-5828786-A
US-9031134-B2,JP-H11194745-A
US-9031134-B2,JP-2001013914-A
US-9031134-B2,US-2001003468-A1
US-9031134-B2,US-2002069408-A1
US-9031134-B2,WO-2005029833-A2
US-9031134-B2,GB-2410634-A
US-9031134-B2,US-2005220188-A1
US-9031134-B2,
US-9137031-B2,US-2002013948-A1
US-9137031-B2,WO-02073441-A1
US-9137031-B2,US-2004192342-A1
US-9137031-B2,US-2005015431-A1
US-9137031-B2,US-2006187860-A1
US-9137031-B2,US-2006294561-A1
US-9137031-B2,US-2007101104-A1
US-9137031-B2,US-2008130890-A1
US-9137031-B2,US-2009132823-A1
US-9137031-B2,US-7613182-B2
US-9137031-B2,US-2010017532-A1
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9137031-B2,
US-9228180-B2,US-5620896-A
US-9228180-B2,WO-9840510-A1
US-9228180-B2,WO-9925817-A2
US-9228180-B2,WO-0068399-A2
US-9228180-B2,WO-0181565-A2
US-9228180-B2,US-2002016975-A1
US-9228180-B2,US-6489458-B2
US-9228180-B2,US-6613752-B2
US-9228180-B2,US-2005003542-A1
US-9228180-B2,US-2005112764-A1
US-9228180-B2,US-2006252140-A1
US-9228180-B2,WO-2009003671-A2
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
US-9228180-B2,
JP-5873481-B2,JP-H1147287-A
JP-5873481-B2,JP-2000140134-A
JP-5873481-B2,JP-2001129103-A
JP-5873481-B2,JP-2001259058-A
JP-5873481-B2,JP-2003503120-A
JP-5873481-B2,JP-2008054892-A
JP-5873481-B2,DE-102007032025-A1
JP-5873481-B2,WO-2009153864-A1
Query:
SELECT "publication_number", "ipc"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 100;
Answer:
Too long, hard cut:
publication_number,ipc
CR-5634-A,"[
  {
    ""code"": ""G01N21/01"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CR-5990-A,[]
FI-429-A,"[
  {
    ""code"": ""C10C1/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
HK-6083-A,"[
  {
    ""code"": ""H02M5/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
HU-T52763-A,"[
  {
    ""code"": ""A01N43/54"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A01N47/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D239/47"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D521/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-H03206829-A,"[
  {
    ""code"": ""A01K61/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A01K63/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-S62159089-A,"[
  {
    ""code"": ""G21C5/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G21C1/02"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-416-A,[]
US-2528225-A,"[
  {
    ""code"": ""E21B27/02"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
AT-A41580-A,"[
  {
    ""code"": ""B22D11/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
AT-A47682-A,"[
  {
    ""code"": ""C07D471/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D471/16"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
AT-A63682-A,"[
  {
    ""code"": ""G01N27/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-920790-A,"[
  {
    ""code"": ""C03C4/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-950907-A,"[
  {
    ""code"": ""C08K5/47"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/44"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D263/56"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D277/64"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/46"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M133/48"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/35"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C11B5/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10L1/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C10M135/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C09K15/30"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D235/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C08K5/3447"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-920830-A,"[
  {
    ""code"": ""E02D5/38"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/80"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/28"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D5/54"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""E02D7/26"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-9086-A,[]
CH-3256-A,[]
CH-540255-A,"[
  {
    ""code"": ""C07D213/56"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/38"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/51"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/32"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D213/30"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CH-433637-A,[]
CH-8494-A,[]
CH-9587-A,[]
CH-9968-A,[]
DD-8297-A,[]
FR-1334211-A,"[
  {
    ""code"": ""C12H1/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1444995-A,"[
  {
    ""code"": ""C07F7/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1474468-A,"[
  {
    ""code"": ""G11B15/22"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G11B15/62"",
    ""first"": false,
    ""inventive"": true,
    
Query:
SELECT t."publication_number", ipc_u.value::VARIANT:"code"::STRING AS "ipc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."ipc") ipc_u
   LIMIT 100;
Answer:
publication_number,ipc_code
US-2020372460-A1,H04L9/08
US-2020372460-A1,H04L9/32
US-2020372460-A1,G06Q10/08
US-2020372460-A1,G08G1/00
US-2020377325-A1,B65H31/20
US-2020377325-A1,B65H5/36
US-2020377325-A1,B65H1/04
US-2020377325-A1,B41J11/00
US-2021265514-A1,H01L27/146
US-2021265514-A1,H01L31/0216
US-2021265514-A1,G01J1/42
US-2021265514-A1,H01L31/0236
US-2021265514-A1,G01J1/04
US-2021064907-A1,G06K9/46
US-2021064907-A1,G06K9/62
US-2021064907-A1,G06K9/44
US-2020399226-A1,C07D403/06
US-2020399226-A1,C07D413/12
US-2020399226-A1,C07D405/12
US-2020399226-A1,C07D401/12
US-2020399226-A1,C07D235/02
US-2020399226-A1,C07D401/06
US-2020399226-A1,C07D403/12
US-2020399226-A1,C07D417/06
US-2020399226-A1,C07D487/04
US-2021257383-A1,H10B43/35
US-2021257383-A1,H10B43/27
US-2021257383-A1,H10B43/10
US-2020404493-A1,H04W52/02
US-2020404493-A1,H04L29/06
US-2020404493-A1,H04W76/28
US-2020404493-A1,H04W12/04
US-2020401918-A1,G06N20/00
US-2020401918-A1,G06Q30/02
US-2020401918-A1,G06F40/00
US-2020401918-A1,G06N5/04
US-2020401918-A1,G06F16/9535
US-2020401918-A1,G06F16/2457
US-2021090749-A1,G16H10/40
US-2021090749-A1,G16H40/20
US-2021090749-A1,G06N20/00
US-2021090749-A1,G16H50/70
US-2021090749-A1,G16H70/60
US-2021090749-A1,G16H50/80
US-2021090749-A1,G06N7/00
US-2021090749-A1,G16H70/40
US-2021090749-A1,G16H10/60
US-2022093492-A1,H05K1/11
US-2022093492-A1,H01L23/532
US-2022093492-A1,H01L23/538
US-2022093492-A1,H01L23/49
US-2021240288-A1,A63F9/10
US-2021240288-A1,G02F1/03
US-2021240288-A1,G06F3/044
US-2021098805-A1,H01M8/04746
US-2021098805-A1,H01M8/04029
US-2022033866-A1,C08G69/08
US-2022033866-A1,C12P13/02
US-2022090664-A1,F16H45/02
US-2022090664-A1,F16H41/28
US-2021011040-A1,G01N35/04
US-2021097835-A1,H04B17/318
US-2021097835-A1,G08B25/10
US-2021097835-A1,G08B13/24
US-2022097744-A1,B61L15/00
US-2021031929-A1,B32B27/20
US-2021031929-A1,B64D15/12
US-2021031929-A1,B32B38/00
US-2021031929-A1,B32B27/08
US-2021031929-A1,B32B27/28
US-2021031929-A1,B32B37/20
US-2021031929-A1,H05B3/18
US-2021031929-A1,C23C4/129
US-2021162946-A1,B60N2/00
US-2021162946-A1,B60R22/48
US-2021115519-A1,C12Q1/6886
US-2021115310-A1,C09J109/08
US-2021115310-A1,C09J111/02
US-2021115310-A1,C09J11/08
US-2021115310-A1,C09J5/00
US-2021255068-A1,G01N15/06
US-2021255068-A1,G01N15/02
US-2021255068-A1,G01N1/22
US-2021226449-A1,H02J3/00
US-2021226449-A1,H02J3/24
US-2021226449-A1,H02M7/537
US-2022108380-A1,G06Q30/06
US-2021072035-A1,G01C21/34
US-2021032509-A1,C09J11/08
US-2021032509-A1,C08F120/08
US-2021032509-A1,C09J11/06
US-2021032509-A1,C09J105/00
US-2021032509-A1,C08F120/06
US-2021130103-A1,B65G39/12
US-2021130103-A1,B65G21/20
US-2021030268-A1,H04M1/72403
US-2021030268-A1,H04N7/18
US-2021030268-A1,A61B3/032
US-2021030268-A1,G06T3/20
US-2021030268-A1,A61B3/00
Query:
SELECT
  t."publication_number" AS "citing_publication",
  c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
  p."ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Answer:
Too long, hard cut:
citing_publication,cited_publication_number,ipc
US-9067254-B2,US-2009089738-A1,"[
  {
    ""code"": ""G06F9/44"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9646713-B2,US-2010026338-A1,"[
  {
    ""code"": ""H03K19/003"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9622691-B2,US-2007095661-A1,"[
  {
    ""code"": ""G01N27/26"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C23C14/32"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9551731-B2,US-2008171931-A1,"[
  {
    ""code"": ""A61B5/055"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B18/18"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9293644-B2,US-2008092812-A1,"[
  {
    ""code"": ""H01L21/36"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C23C16/52"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L23/24"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L21/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-10130893-B2,US-5145110-A,"[
  {
    ""code"": ""B65D5/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9226006-B2,JP-S58210776-A,"[
  {
    ""code"": ""H04N5/445"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/081"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/025"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/03"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/035"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N5/60"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H04N7/06"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-10137283-B2,US-2006008606-A1,"[
  {
    ""code"": ""A61F2/958"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61L29/14"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B29D22/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-8986850-B2,US-2007122648-A1,"[
  {
    ""code"": ""B32B15/01"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9546744-B2,US-2004165943-A1,"[
  {
    ""code"": ""F16B37/04"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""F16B37/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9202992-B2,US-2009159902-A1,"[
  {
    ""code"": ""B23K1/20"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""F21V21/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L33/38"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""H01L33/48"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
US-8984387-B2,US-2008294544-A1,"[
  {
    ""code"": ""G06Q40/00"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06Q30/08"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9575648-B2,US-2008114614-A1,"[
  {
    ""code"": ""G16H40/20"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G16H40/67"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B5/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9284409-B2,US-2008071350-A1,"[
  {
    ""code"": ""A61F2/06"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9372790-B2,US-2007233941-A1,"[
  {
    ""code"": ""G06F12/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-10105167-B2,US-2009112263-A1,"[
  {
    ""code"": ""A61B5/103"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61N1/39"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B17/58"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B17/70"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-9410163-B2,US-2011041197-A1,"[
  {
    ""code"": ""C12N15/873"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C12N5/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C12N15/85"",
    ""first"": false,
    ""inventive"": true,
   
Query:
SELECT p."publication_number", SUBSTR(ipc_u.value::VARIANT:"code"::STRING, 0, 4) AS "ipc4_code"
   FROM PATENTS.PATENTS.PUBLICATIONS p,
        LATERAL FLATTEN(input => p."ipc") ipc_u
   LIMIT 100;
Answer:
publication_number,ipc4_code
US-2004046148-A1,H01L
US-2004046148-A1,C23F
US-2004046148-A1,H01L
US-2004046148-A1,C23F
US-2004046148-A1,H01L
US-2004046148-A1,C23F
US-2004046148-A1,C23F
US-2004046148-A1,B24B
US-2004046148-A1,C09K
US-2004046148-A1,C09G
US-2004046148-A1,C23F
US-2004249430-A1,A61N
US-2004254481-A1,A61B
US-2004254481-A1,A61B
US-2004254481-A1,A61B
US-2004179568-A1,H01S
US-2004179568-A1,H01S
US-2004179568-A1,H01S
US-2004179568-A1,H01S
US-2004250894-A1,B27L
US-2005110223-A1,F16J
US-2005031765-A1,A23L
US-2005031765-A1,A23L
US-2005012526-A1,H03K
US-2005012526-A1,H03K
US-2005012526-A1,H03B
US-2005012526-A1,H03K
US-2005012526-A1,H03F
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61K
US-2006088579-A1,A61F
US-2006088579-A1,A61L
US-2005067057-A1,C23C
US-2005067057-A1,C23C
US-2005104271-A1,B65H
US-2005104271-A1,B65H
US-2005104271-A1,B65H
US-2005104271-A1,B65H
US-2005245440-A1,C07K
US-2005245440-A1,C12Q
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005245440-A1,A61K
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005256254-A1,C09J
US-2005242230-A1,F42B
US-2005242230-A1,F41F
US-2006155515-A1,G06F
US-2006155515-A1,G01F
US-2006155515-A1,G01F
US-2006051028-A1,G02B
US-2006112011-A1,G06Q
US-2005254980-A1,F04B
US-2005254980-A1,F04B
US-2005254980-A1,F04B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006135297-A1,A63B
US-2006020748-A1,H04N
US-2006020748-A1,H04N
US-2006020748-A1,G06F
US-2006020748-A1,G06F
US-2006063746-A1,A61K
US-2006063746-A1,C07J
US-2006063746-A1,A61K
US-2006063746-A1,A61K
US-2006063746-A1,C07J
US-2006063746-A1,A61K
US-2006116315-A1,C12N
US-2006116315-A1,C12N
US-2006116315-A1,C07K
US-2006116315-A1,G01N
US-2006116315-A1,C12N
US-2006116315-A1,A61K
US-2006116315-A1,C12N
US-2007092960-A1,C12P
US-2007092960-A1,A23J
US-2007092960-A1,C07K
US-2007092960-A1,B01D
US-2007092960-A1,C12N
US-2007092960-A1,B01D
US-2007092960-A1,A23J
US-2007092960-A1,A23J
US-2007092960-A1,C07K
US-2007068805-A1,G01N
Query:
SELECT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
  COUNT(*) AS "ipc4_count"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY
  t."publication_number",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
LIMIT 100;
Answer:
citing_publication,ipc4_code,ipc4_count
US-9155586-B2,A61B,7
US-9636072-B2,G01T,2
US-9089261-B2,A61B,4
US-9347655-B2,G03F,1
US-9457510-B2,G09F,1
US-9048913-B2,H01Q,2
US-9044021-B2,F27D,1
US-9597149-B2,A61B,1
US-9226006-B2,F25D,3
US-9048913-B2,G01S,1
US-8984387-B2,G06Q,4
US-9371099-B2,G08G,1
US-9551731-B2,A61B,2
US-10017537-B2,C12N,4
US-9291935-B2,G03G,1
US-10059084-B2,B27N,1
US-10042510-B2,A61B,1
US-9270639-B2,G06F,1
US-9399738-B2,B01J,1
US-9184581-B2,B60L,2
US-8967144-B2,A61M,4
US-8932208-B2,A61B,4
US-10105167-B2,A61F,3
US-9355294-B2,G06F,2
US-9355294-B2,G06K,1
US-9293644-B2,F01N,1
US-9518924-B2,G01J,2
US-9100526-B2,G03G,1
US-9372790-B2,G06F,1
US-9169941-B2,F16K,2
US-9371099-B2,G06K,1
US-9518924-B2,G03B,3
US-9226006-B2,G11B,2
US-9270639-B2,H04L,3
US-9332944-B2,A61B,8
US-9457510-B2,G07D,1
US-9182815-B2,G01B,2
US-9293644-B2,C30B,1
US-9575648-B2,A61B,1
US-9597149-B2,A61M,1
US-9293644-B2,B01J,4
US-9100526-B2,B41J,2
US-8932208-B2,A61F,1
US-10101801-B2,H04W,1
US-9447521-B2,H01L,7
US-10007422-B2,G06T,4
US-9284409-B2,B22F,1
US-8932208-B2,A61N,1
US-9585927-B2,A61P,1
US-9548844-B2,H04J,1
US-9474734-B2,A61K,4
US-9214830-B2,H01M,6
US-9410163-B2,C12N,3
US-10034624-B2,G06F,1
US-9182815-B2,G09G,2
US-9121016-B2,A01N,1
US-8992024-B2,G09G,1
US-10137283-B2,A61L,1
US-8984387-B2,G06F,1
US-9622691-B2,H01L,2
US-9293644-B2,H01L,7
US-9048913-B2,H03F,1
US-9448946-B2,G11C,1
US-8992024-B2,G09F,1
US-9522312-B2,B23K,1
US-9415120-B2,C12R,2
US-10060975-B2,G01D,1
US-8954157-B2,A61N,1
US-9317887-B2,G06F,1
US-10060975-B2,G01R,5
US-9244073-B2,C07K,2
US-10059084-B2,E04B,1
US-9173003-B2,H04L,2
US-9068247-B2,C22B,1
US-9646713-B2,H03K,1
US-9575648-B2,G06F,6
US-10137283-B2,B29D,1
US-9100526-B2,G06K,1
US-9290472-B2,A61K,1
US-9402981-B2,A61B,3
US-9293644-B2,H01S,1
US-9284409-B2,A61F,5
US-9173003-B2,G06F,1
US-10034624-B2,A61B,3
JP-5720697-B2,A61Q,1
US-9522312-B2,A63B,2
US-9175419-B2,H01L,4
US-9290472-B2,A61P,1
US-9044021-B2,F24C,3
US-10077795-B2,F16B,1
US-9548844-B2,H04B,1
US-9048913-B2,H04B,5
US-9142476-B2,H01L,1
US-9526699-B2,C07C,1
US-9185094-B2,G06F,4
US-9436499-B2,G06F,4
US-9622691-B2,G06F,1
US-10076611-B2,A61M,1
US-9001770-B2,H04B,1
US-9404565-B2,B62M,1
Query:
SELECT t."publication_number" AS "citing_publication",
          COUNT(*) AS "total_backward_citations"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."citation") c
   WHERE t."kind_code" = 'B2'
     AND t."grant_date" BETWEEN 20150101 AND 20181231
   GROUP BY t."publication_number"
   LIMIT 100;
Answer:
citing_publication,total_backward_citations
JP-6075881-B2,4
AU-2009298122-B2,5
US-9009580-B2,5
US-9315115-B2,20
US-9385307-B2,12
US-9531867-B2,3
US-9563163-B2,20
AU-2014340644-B2,2
AU-2013313333-B2,4
US-9341793-B2,9
US-9469348-B2,14
US-8955748-B2,8
US-8986850-B2,18
US-9472647-B2,23
US-9384366-B2,5
JP-5688829-B2,2
US-9347655-B2,284
US-9608421-B2,19
US-10086270-B2,43
US-10059084-B2,770
JP-5750454-B2,2
US-10147221-B2,67
US-9181681-B2,15
US-10121264-B2,33
AU-2013202145-B2,1
AU-2014250113-B2,9
US-9166674-B2,7
JP-5747439-B2,6
US-8928823-B2,1
US-9232163-B2,11
AU-2012283387-B2,1
US-9216062-B2,9
US-10075826-B2,14
AU-2015234864-B2,1
US-10064731-B2,29
AU-2015265241-B2,3
US-10116352-B2,16
AU-2013326933-B2,1
US-9157491-B2,13
US-9207691-B2,4
US-9068247-B2,30
US-9087924-B2,41
US-10121790-B2,13
US-10155928-B2,22
US-10134165-B2,13
US-10015072-B2,5
US-9119720-B2,112
US-9459437-B2,15
AU-2013227101-B2,1
US-9447712-B2,23
US-9585927-B2,10
US-10079751-B2,21
AU-2013244860-B2,1
US-10094379-B2,20
US-8997705-B2,14
US-10119697-B2,9
US-9258696-B2,22
US-9503862-B2,7
JP-5907267-B2,3
US-9106422-B2,187
US-8971612-B2,226
US-9160895-B2,15
US-9166782-B2,20
US-8944695-B2,30
US-9182815-B2,149
US-9448946-B2,333
US-9529903-B2,40
AU-2012275561-B2,2
AU-2013204154-B2,1
AU-2014201503-B2,6
AU-2010214112-B2,4
US-10079102-B2,5
US-8953633-B2,33
US-9466467-B2,12
US-9185094-B2,140
US-9280023-B2,12
US-9356222-B2,6
US-9326820-B2,6
US-8935238-B2,1
US-9628633-B2,34
US-9344698-B2,18
EP-1579759-B2,11
US-9505537-B2,36
US-9309435-B2,146
US-9254730-B2,16
AU-2015257456-B2,1
US-9335448-B2,9
US-10152369-B2,9
US-9412846-B2,12
US-9384632-B2,409
US-9196418-B2,12
US-9151465-B2,29
US-9442731-B2,6
US-9233779-B2,10
US-10156954-B2,57
AU-2012211513-B2,2
AU-2016201029-B2,5
US-9436209-B2,7
US-9607689-B2,10
JP-5740065-B2,3
Query:
SELECT DISTINCT
  t."publication_number" AS "citing_publication",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Answer:
citing_publication,ipc4_code
US-9522312-B2,A63B
US-9175419-B2,H01L
US-9622691-B2,G06F
US-9185094-B2,G06F
US-9436499-B2,G06F
US-9001770-B2,H04B
US-10076611-B2,A61M
US-9526699-B2,C07C
US-9293644-B2,F01N
US-9518924-B2,G01J
US-9372790-B2,G06F
US-9100526-B2,G03G
US-9169941-B2,F16K
US-9121016-B2,A01N
US-10034624-B2,G06F
US-9182815-B2,G09G
US-10100810-B2,F03D
US-9244073-B2,C12N
US-9448946-B2,G11C
US-9048913-B2,H03F
US-9151260-B2,F02M
JP-6005268-B2,F25B
US-9185094-B2,G11B
US-9067254-B2,G06F
AU-2012282191-B2,B01D
US-9332944-B2,H01L
US-9182815-B2,G06K
US-9564199-B2,G11C
US-9226006-B2,B65D
US-9575648-B2,A61B
US-8967144-B2,A61M
US-10105167-B2,A61F
US-8932208-B2,A61B
US-9355294-B2,G06F
US-9355294-B2,G06K
US-10059084-B2,B27N
US-10042510-B2,A61B
US-10119947-B2,C12P
US-9622691-B2,A61B
US-9173003-B2,H04N
US-10017537-B2,C12N
US-9291935-B2,G03G
US-9551731-B2,A61B
US-9044021-B2,A21B
US-9597149-B2,H01L
US-9371099-B2,H04N
JP-5720697-B2,A61K
US-9649467-B2,A61K
US-9220860-B2,A61M
US-9575648-B2,G09G
US-9121016-B2,C12S
US-9447521-B2,C30B
US-9415120-B2,C12N
US-9212846-B2,F25D
US-10141118-B2,H01L
US-9575648-B2,G16H
US-9121016-B2,A61F
US-8954157-B2,A61N
US-8992024-B2,G09F
US-9522312-B2,B23K
US-9415120-B2,C12R
US-10060975-B2,G01D
US-9457510-B2,G07D
US-9226006-B2,G11B
US-9270639-B2,H04L
US-9332944-B2,A61B
US-9293644-B2,C30B
US-9518924-B2,G03B
US-9182815-B2,G01B
US-9169941-B2,F16H
US-9430016-B2,G06F
US-9211498-B2,A61J
US-9200186-B2,B41J
US-9575648-B2,G06F
US-10137283-B2,B29D
US-9290472-B2,A61K
US-9402981-B2,A61B
US-9100526-B2,G06K
US-9293644-B2,H01S
US-9290472-B2,A61P
US-9044021-B2,F24C
US-10077795-B2,F16B
US-8932208-B2,A61N
US-9284409-B2,B22F
US-9585927-B2,A61P
US-10007422-B2,G06T
US-8992024-B2,G02B
US-10010405-B2,A61F
US-10119947-B2,A23L
US-9649467-B2,A61J
US-8992024-B2,G09G
US-9306600-B2,H03M
US-8992024-B2,H04N
US-9546744-B2,E04B
US-9207691-B2,H02P
US-10141118-B2,H01M
US-9347655-B2,H05B
US-10034624-B2,G06Q
US-9399738-B2,C10J
US-10101801-B2,H04L
Query:
SELECT
  t."publication_number" AS "citing_publication",
  COUNT(*) AS "total_ipc4_occurrences"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
Answer:
citing_publication,total_ipc4_occurrences
US-10036488-B2,1
US-9169941-B2,3
US-10077795-B2,1
US-9184581-B2,3
US-9575648-B2,10
US-9117791-B2,4
US-9597149-B2,3
US-10100810-B2,1
US-9155586-B2,7
US-10060975-B2,6
US-9548844-B2,2
US-10107583-B2,2
US-10105167-B2,9
US-10007422-B2,7
US-10076611-B2,3
US-9437430-B2,8
US-9121016-B2,19
US-9182815-B2,9
US-9185094-B2,5
US-9384632-B2,3
US-9448946-B2,3
US-10141118-B2,2
US-9244073-B2,3
US-9457510-B2,3
US-9362579-B2,1
JP-6005268-B2,2
US-10034624-B2,5
US-9293644-B2,19
US-9173003-B2,7
US-9436499-B2,4
US-9404565-B2,2
US-9175419-B2,9
US-9211498-B2,2
US-9332944-B2,13
US-9526699-B2,1
US-9200186-B2,1
US-9197224-B2,2
US-8954157-B2,2
US-9270639-B2,4
US-9160809-B2,2
US-9202992-B2,4
US-9311616-B2,1
US-8984387-B2,5
US-9371099-B2,13
US-9474734-B2,5
US-9302085-B2,4
US-9233513-B2,1
US-10042510-B2,1
US-9214830-B2,6
US-9100526-B2,6
US-9410163-B2,3
US-8992024-B2,5
US-9290472-B2,4
US-9284409-B2,11
US-9518924-B2,7
US-9131283-B2,1
US-9212846-B2,4
US-9306600-B2,1
US-9315115-B2,1
US-8986850-B2,1
US-10059084-B2,9
US-9347655-B2,13
US-9235943-B2,3
US-10137283-B2,3
US-10037903-B2,2
US-9067254-B2,1
US-9564199-B2,3
US-9089261-B2,4
US-9546744-B2,4
US-10119947-B2,6
US-9220860-B2,2
US-9001770-B2,13
US-8932208-B2,6
US-9585927-B2,24
US-9207691-B2,2
US-9068247-B2,1
US-9399738-B2,2
US-10017537-B2,8
US-9447521-B2,8
US-9622691-B2,13
US-9044021-B2,8
US-9415120-B2,8
US-9355294-B2,5
US-9464982-B2,1
US-9372790-B2,1
US-9636072-B2,5
AU-2012283875-B2,2
US-9522312-B2,3
US-9142476-B2,1
US-9151260-B2,2
US-9402981-B2,7
US-9048913-B2,9
JP-5715162-B2,2
US-10010405-B2,2
US-9226006-B2,40
US-10130893-B2,1
US-9456204-B2,2
US-9551731-B2,2
US-9649467-B2,6
US-9317887-B2,1
Query:
SELECT t."publication_number" AS "citing_publication",
       COUNT(DISTINCT SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)) AS "num_distinct_ipc4_codes"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
Answer:
citing_publication,num_distinct_ipc4_codes
US-8954157-B2,2
US-9270639-B2,2
US-9160809-B2,1
US-9290472-B2,3
US-9100526-B2,5
US-8992024-B2,5
US-9410163-B2,1
US-10100810-B2,1
US-9155586-B2,1
US-9089261-B2,1
US-10077795-B2,1
US-9184581-B2,2
US-8984387-B2,2
US-9332944-B2,4
US-9526699-B2,1
US-9131283-B2,1
US-9272338-B2,2
US-8967144-B2,1
US-9646713-B2,1
US-9619652-B2,2
US-9372790-B2,1
US-9197224-B2,1
US-9200186-B2,1
US-9121016-B2,9
US-9437430-B2,2
US-9448946-B2,2
US-9182815-B2,4
US-9185094-B2,2
US-9384632-B2,2
US-9235943-B2,2
US-9546744-B2,2
US-9575648-B2,4
US-9597149-B2,3
US-9117791-B2,1
US-9522312-B2,2
US-9142476-B2,1
US-9169941-B2,2
US-10036488-B2,1
US-9244073-B2,2
US-9457510-B2,3
US-9551731-B2,1
US-9291935-B2,1
US-9649467-B2,3
US-9317887-B2,1
US-10019265-B2,1
US-9564199-B2,1
US-9067254-B2,1
US-10037903-B2,1
US-9175419-B2,2
US-9293644-B2,8
US-9173003-B2,3
US-10034624-B2,3
US-9404565-B2,2
JP-6005268-B2,1
US-9211498-B2,2
US-9436499-B2,1
US-9362579-B2,1
AU-2012283875-B2,2
US-9636072-B2,3
US-9233513-B2,1
US-9306600-B2,1
US-9207691-B2,1
US-9068247-B2,1
US-9585927-B2,2
US-10017537-B2,2
US-9399738-B2,2
US-10067609-B2,2
US-9622691-B2,5
US-10141118-B2,2
US-10042510-B2,1
US-9214830-B2,1
US-9226006-B2,6
US-10010405-B2,1
US-10130893-B2,1
US-9456204-B2,1
US-9355294-B2,4
US-9518924-B2,4
US-9284409-B2,5
US-10007422-B2,2
US-10107583-B2,2
US-10105167-B2,3
US-10119947-B2,3
US-9001770-B2,3
US-8932208-B2,3
US-9220860-B2,1
US-9048913-B2,4
JP-5715162-B2,2
US-9044021-B2,4
US-9415120-B2,4
US-9447521-B2,2
US-9548844-B2,2
US-10060975-B2,2
JP-5720697-B2,2
US-9153188-B2,3
AU-2012282191-B2,1
US-9212846-B2,1
US-10139262-B2,1
US-10101801-B2,3
US-9347655-B2,5
US-10059084-B2,5
Query:
SELECT citing_publication,
       SUM(POWER(ipc4_count, 2)) AS "sum_squared_ipc4_counts"
FROM (
  SELECT
    t."publication_number" AS citing_publication,
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS ipc4_code,
    COUNT(*) AS ipc4_count
  FROM PATENTS.PATENTS.PUBLICATIONS t
  CROSS JOIN LATERAL FLATTEN(input => t."citation") c
  LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
  LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
  WHERE t."kind_code" = 'B2'
    AND t."grant_date" BETWEEN 20150101 AND 20181231
  GROUP BY
    t."publication_number",
    SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
) grouped_ipc
GROUP BY citing_publication
LIMIT 100;
Answer:
CITING_PUBLICATION,sum_squared_ipc4_counts
US-9169941-B2,5.0
US-10036488-B2,1.0
US-9448946-B2,5.0
US-9384632-B2,5.0
US-9182815-B2,21.0
US-9185094-B2,17.0
US-9121016-B2,59.0
US-9437430-B2,50.0
US-10137283-B2,3.0
US-9270639-B2,10.0
US-8954157-B2,2.0
US-9160809-B2,4.0
US-9235943-B2,5.0
US-9575648-B2,42.0
US-9597149-B2,3.0
US-9117791-B2,16.0
US-9244073-B2,5.0
US-9457510-B2,3.0
US-9089261-B2,16.0
US-9355294-B2,7.0
US-10100810-B2,1.0
US-9155586-B2,49.0
US-9197224-B2,4.0
US-9200186-B2,1.0
US-9233513-B2,1.0
US-9548844-B2,2.0
US-10060975-B2,26.0
US-9546744-B2,10.0
US-9290472-B2,6.0
US-9100526-B2,8.0
US-8992024-B2,5.0
US-9410163-B2,9.0
US-9447521-B2,50.0
US-9293644-B2,79.0
US-10034624-B2,11.0
US-9173003-B2,21.0
US-9211498-B2,2.0
US-9404565-B2,2.0
JP-6005268-B2,4.0
US-9436499-B2,16.0
US-9175419-B2,41.0
US-9362579-B2,1.0
US-9131283-B2,1.0
US-8967144-B2,16.0
US-9619652-B2,2.0
US-9272338-B2,2.0
US-9646713-B2,1.0
US-10105167-B2,35.0
US-10107583-B2,2.0
US-10007422-B2,25.0
US-9332944-B2,73.0
US-9526699-B2,1.0
US-10141118-B2,2.0
US-10042510-B2,1.0
US-9214830-B2,36.0
US-9551731-B2,4.0
US-9291935-B2,1.0
US-10019265-B2,1.0
US-9649467-B2,14.0
US-9317887-B2,1.0
US-9284409-B2,37.0
US-9518924-B2,15.0
US-9372790-B2,1.0
JP-5720697-B2,101.0
US-9153188-B2,6.0
AU-2012282191-B2,36.0
US-9212846-B2,16.0
US-9402981-B2,25.0
US-9151260-B2,4.0
US-9585927-B2,530.0
US-9207691-B2,4.0
US-9068247-B2,1.0
US-9415120-B2,22.0
US-9044021-B2,18.0
US-10017537-B2,32.0
US-9399738-B2,2.0
US-9067254-B2,1.0
US-9564199-B2,9.0
US-10037903-B2,4.0
US-9622691-B2,51.0
US-9306600-B2,1.0
JP-5715162-B2,2.0
US-9048913-B2,31.0
US-9202992-B2,6.0
US-9311616-B2,1.0
US-9464982-B2,1.0
US-8984387-B2,17.0
US-9371099-B2,103.0
US-9302085-B2,16.0
US-9474734-B2,17.0
US-9430016-B2,4.0
US-9001770-B2,75.0
US-10119947-B2,14.0
US-8932208-B2,18.0
US-9220860-B2,4.0
US-9347655-B2,47.0
US-10059084-B2,21.0
US-8986850-B2,1.0
US-9315115-B2,1.0
US-9226006-B2,824.0
Query:
SELECT t."publication_number", t."grant_date", t."kind_code",
           ARRAY_SIZE(t."citation") AS "num_citations"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    WHERE t."kind_code" = 'B2'
      AND t."grant_date" BETWEEN 20150101 AND 20181231
    LIMIT 100;
Answer:
publication_number,grant_date,kind_code,num_citations
US-8965864-B2,20150224,B2,1
US-9437430-B2,20160906,B2,375
US-9333492-B2,20160510,B2,24
US-9284409-B2,20160315,B2,2183
US-9452241-B2,20160927,B2,87
US-9302085-B2,20160405,B2,19
US-8935511-B2,20150113,B2,16
US-8962132-B2,20150224,B2,24
US-9456204-B2,20160927,B2,17
US-9011636-B2,20150421,B2,26
US-9159092-B2,20151013,B2,18
US-8934781-B2,20150113,B2,10
US-9166782-B2,20151020,B2,20
US-9037990-B2,20150519,B2,12
US-9008007-B2,20150414,B2,10
US-9068692-B2,20150630,B2,14
US-9080562-B2,20150714,B2,14
US-8944695-B2,20150203,B2,30
US-9453104-B2,20160927,B2,47
US-9104711-B2,20150811,B2,37
US-9362818-B2,20160607,B2,31
US-10034007-B2,20180724,B2,3
US-9200186-B2,20151201,B2,219
US-8984387-B2,20150317,B2,375
US-8954747-B2,20150210,B2,31
US-9164153-B2,20151020,B2,21
US-9438879-B2,20160906,B2,28
US-10153865-B2,20181211,B2,22
US-9351806-B2,20160531,B2,14
US-9072319-B2,20150707,B2,187
AU-2010202595-B2,20150820,B2,1
AU-2010339481-B2,20160204,B2,2
AU-2011224053-B2,20150702,B2,3
AU-2011279176-B2,20150226,B2,4
AU-2012200410-B2,20150528,B2,1
AU-2012214405-B2,20150723,B2,1
AU-2012261627-B2,20151022,B2,2
AU-2012279110-B2,20160225,B2,2
AU-2012290121-B2,20151126,B2,1
AU-2012312016-B2,20150618,B2,2
AU-2012396247-B2,20160526,B2,1
AU-2013202145-B2,20150226,B2,1
AU-2013268781-B2,20151203,B2,3
AU-2013281125-B2,20170824,B2,6
AU-2014250113-B2,20170330,B2,9
AU-2014338589-B2,20180222,B2,1
AU-2015207934-B2,20161208,B2,5
AU-2015409096-B2,20181115,B2,3
EP-2592165-B2,20180919,B2,5
US-9575648-B2,20170221,B2,1143
US-9028999-B2,20150512,B2,9
US-9068473-B2,20150630,B2,18
US-8997137-B2,20150331,B2,14
US-9396257-B2,20160719,B2,33
US-9362717-B2,20160607,B2,27
US-9275036-B2,20160301,B2,33
US-8974982-B2,20150310,B2,30
US-8992882-B2,20150331,B2,5
US-9049991-B2,20150609,B2,14
US-9393557-B2,20160719,B2,53
US-9006081-B2,20150414,B2,5
US-9046276-B2,20150602,B2,15
US-9034622-B2,20150519,B2,23
US-8930147-B2,20150106,B2,1
US-9297942-B2,20160329,B2,52
US-9121051-B2,20150901,B2,39
US-9019050-B2,20150428,B2,21
US-9405938-B2,20160802,B2,30
US-9246583-B2,20160126,B2,24
US-8996516-B2,20150331,B2,21
US-9009469-B2,20150414,B2,24
US-8998654-B2,20150407,B2,22
US-9281167-B2,20160308,B2,15
US-9029140-B2,20150512,B2,229
US-9181681-B2,20151110,B2,15
US-9394731-B2,20160719,B2,12
US-9068384-B2,20150630,B2,18
US-9082772-B2,20150714,B2,16
US-9136098-B2,20150915,B2,15
US-10047399-B2,20180814,B2,30
US-10098361-B2,20181016,B2,27
US-9009580-B2,20150414,B2,5
US-9258696-B2,20160209,B2,22
US-9637570-B2,20170502,B2,39
US-9371099-B2,20160621,B2,879
US-9429369-B2,20160830,B2,13
US-8952769-B2,20150210,B2,11
US-9095517-B2,20150804,B2,13
US-9332944-B2,20160510,B2,1288
US-9413238-B2,20160809,B2,16
US-9056087-B2,20150616,B2,123
US-8971612-B2,20150303,B2,226
US-9266071-B2,20160223,B2,14
US-9381070-B2,20160705,B2,66
US-9288404-B2,20160315,B2,17
US-9546122-B2,20170117,B2,58
US-9211434-B2,20151215,B2,69
US-9139000-B2,20150922,B2,6
US-9019995-B2,20150428,B2,12
US-9358141-B2,20160607,B2,237
Query:
SELECT
  t."publication_number" AS "citing_publication",
  c.value::VARIANT:"publication_number"::STRING AS "cited_publication_number",
  SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
LIMIT 100;
Answer:
citing_publication,cited_publication_number,ipc4_code
US-9284409-B2,US-2008071350-A1,A61F
US-9372790-B2,US-2007233941-A1,G06F
US-10105167-B2,US-2009112263-A1,A61B
US-10105167-B2,US-2009112263-A1,A61N
US-10105167-B2,US-2009112263-A1,A61B
US-10105167-B2,US-2009112263-A1,A61B
US-9067254-B2,US-2009089738-A1,G06F
US-9646713-B2,US-2010026338-A1,H03K
US-9410163-B2,US-2011041197-A1,C12N
US-9410163-B2,US-2011041197-A1,C12N
US-9410163-B2,US-2011041197-A1,C12N
US-9622691-B2,US-2007095661-A1,G01N
US-9622691-B2,US-2007095661-A1,C23C
US-9551731-B2,US-2008171931-A1,A61B
US-9551731-B2,US-2008171931-A1,A61B
US-9121016-B2,US-2010248334-A1,C09D
US-9121016-B2,US-2010248334-A1,A01N
US-9121016-B2,US-2010248334-A1,A61K
US-9121016-B2,US-2010248334-A1,A62D
US-9121016-B2,US-2010248334-A1,C09D
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,A61F
US-9121016-B2,US-2010248334-A1,A62D
US-9121016-B2,US-2010248334-A1,A61K
US-9121016-B2,US-2010248334-A1,A61K
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,C12S
US-9121016-B2,US-2010248334-A1,A62D
US-9121016-B2,US-2010248334-A1,C12M
US-9121016-B2,US-2010248334-A1,C09J
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,C12N
US-9121016-B2,US-2010248334-A1,A61K
US-9169941-B2,US-2005000579-A1,F16K
US-9169941-B2,US-2005000579-A1,F16H
US-9169941-B2,US-2005000579-A1,F16K
US-9619652-B2,US-2004199489-A1,G06F
US-9619652-B2,US-2004199489-A1,G06Q
US-8984387-B2,US-2005097008-A1,G06Q
US-8984387-B2,US-2005097008-A1,G06Q
US-8984387-B2,US-2005097008-A1,G06F
US-9212846-B2,US-2213274-A,F25D
US-9212846-B2,US-2213274-A,F25D
US-9212846-B2,US-2213274-A,F25D
US-9212846-B2,US-2213274-A,F25D
US-9291935-B2,US-2009290903-A1,G03G
US-9293644-B2,US-2008092812-A1,H01L
US-9293644-B2,US-2008092812-A1,C23C
US-9293644-B2,US-2008092812-A1,H01L
US-9293644-B2,US-2008092812-A1,H01L
US-9197224-B2,US-2009285279-A1,H03K
US-9197224-B2,US-2009285279-A1,H03K
US-9160809-B2,US-2008120617-A1,G06F
US-9160809-B2,US-2008120617-A1,G06F
US-9597149-B2,US-5730752-A,A61M
US-9597149-B2,US-5730752-A,A61B
AU-2012283875-B2,US-2007198040-A1,B05D
AU-2012283875-B2,US-2007198040-A1,A61F
US-9226006-B2,US-5914746-A,H04N
US-9226006-B2,US-5914746-A,H04N
US-9347655-B2,US-8547391-B2,H05B
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,G06K
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,G06K
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,H04N
US-9347655-B2,US-8547391-B2,G09G
US-9347655-B2,US-8547391-B2,G03F
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,F01N
US-9293644-B2,US-4870045-A,B28B
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,B01J
US-9293644-B2,US-4870045-A,B01D
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9437430-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9447521-B2,US-2010025717-A1,H01L
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G06F
US-9575648-B2,US-2006028455-A1,G09G
Query:
SELECT t."publication_number" AS "citing_publication",
       COUNT(ipc_cited.value::VARIANT:"code"::STRING) AS "num_citations_with_ipc"
FROM PATENTS.PATENTS.PUBLICATIONS t
CROSS JOIN LATERAL FLATTEN(input => t."citation") c
LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
  ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
LEFT JOIN TABLE(FLATTEN(input => p."ipc")) ipc_cited
WHERE t."kind_code" = 'B2'
  AND t."grant_date" BETWEEN 20150101 AND 20181231
GROUP BY t."publication_number"
LIMIT 100;
Answer:
citing_publication,num_citations_with_ipc
US-10036488-B2,1
US-9169941-B2,3
US-9284409-B2,11
US-9518924-B2,7
US-9526699-B2,1
US-9332944-B2,13
US-10100810-B2,1
US-9155586-B2,7
US-9089261-B2,4
US-9355294-B2,5
US-9622691-B2,13
US-10017537-B2,8
US-9399738-B2,2
US-9184581-B2,3
US-10077795-B2,1
US-10141118-B2,2
US-9200186-B2,1
US-9197224-B2,2
US-9202992-B2,4
US-9311616-B2,1
US-9437430-B2,8
US-9121016-B2,19
US-10130893-B2,1
US-9226006-B2,40
US-10010405-B2,2
US-9456204-B2,2
US-9173003-B2,7
US-10034624-B2,5
US-9436499-B2,4
US-9404565-B2,2
US-9175419-B2,9
US-9293644-B2,19
US-9362579-B2,1
US-9211498-B2,2
JP-6005268-B2,2
US-8984387-B2,5
US-9372790-B2,1
US-9548844-B2,2
US-10060975-B2,6
US-9212846-B2,4
US-10042510-B2,1
US-9214830-B2,6
US-9182815-B2,9
US-9185094-B2,5
US-9448946-B2,3
US-9384632-B2,3
US-9575648-B2,10
US-9597149-B2,3
US-9117791-B2,4
US-10076611-B2,3
US-9546744-B2,4
US-10101801-B2,7
US-10139262-B2,1
US-9585927-B2,24
US-9207691-B2,2
US-9068247-B2,1
US-9447521-B2,8
US-9233513-B2,1
US-9151260-B2,2
US-9402981-B2,7
US-8954157-B2,2
US-9270639-B2,4
US-9160809-B2,2
US-9244073-B2,3
US-9457510-B2,3
US-10137283-B2,3
US-9564199-B2,3
US-9067254-B2,1
US-10037903-B2,2
US-9131283-B2,1
AU-2012282191-B2,6
JP-5720697-B2,11
US-9153188-B2,4
US-9306600-B2,1
JP-5715162-B2,2
US-9048913-B2,9
US-9235943-B2,3
US-9649467-B2,6
US-9317887-B2,1
US-9551731-B2,2
US-9291935-B2,1
US-10019265-B2,1
US-9464982-B2,1
US-10007422-B2,7
US-10105167-B2,9
US-10107583-B2,2
US-9636072-B2,5
AU-2012283875-B2,2
US-9142476-B2,1
US-9522312-B2,3
US-9315115-B2,1
US-8986850-B2,1
US-10059084-B2,9
US-9347655-B2,13
US-9044021-B2,8
US-9415120-B2,8
US-9410163-B2,3
US-9100526-B2,6
US-8992024-B2,5
US-9290472-B2,4
End Exploring Related Columns
Task: Which US patent (with a B2 kind code and a grant date between 2015 and 2018) has the highest originality score calculated as 1 - (the sum of squared occurrences of distinct 4-digit IPC codes in its backward citations divided by the square of the total occurrences of these 4-digit IPC codes)?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Publication_Number,Originality_Score
patent_number:str,score:float
(Attention: answer in one row)
```

The above table represents the US patent with a B2 kind code and a grant date between 2015 and 2018 that has the highest originality score, calculated as \( 1 - \frac{\sum (\text{occurrences of each 4-digit IPC code})^2}{(\text{total occurrences of 4-digit IPC codes})^2} \). Since specific data is not provided, placeholders for the publication number and originality score are used..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 21:40:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:40:13 - root - INFO - ```sql
SELECT
    "publication_number",
    "originality_score"
FROM
    (
        WITH t AS (
            SELECT
                "publication_number"
            FROM
                PATENTS.PATENTS.PUBLICATIONS
            WHERE
                "kind_code" = 'B2'
                AND "grant_date" BETWEEN 20150101 AND 20181231
                AND "publication_number" LIKE 'US-%'
        ),
        nk_table AS (
            SELECT
                t."publication_number" AS "publication_number",
                SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
                COUNT(*) AS "n_k"
            FROM
                t
                JOIN PATENTS.PATENTS.PUBLICATIONS t_pub ON t_pub."publication_number" = t."publication_number"
                CROSS JOIN LATERAL FLATTEN(input => t_pub."citation") c
                LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
                    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
                LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited
            WHERE
                ipc_cited.value::VARIANT:"code"::STRING IS NOT NULL
            GROUP BY
                t."publication_number",
                SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
        ),
        nk_sums AS (
            SELECT
                "publication_number",
                SUM(POWER("n_k", 2)) AS "sum_nk_squared",
                SUM("n_k") AS "sum_nk"
            FROM
                nk_table
            GROUP BY
                "publication_number"
        ),
        originality_scores AS (
            SELECT
                t."publication_number",
                CASE WHEN nk_sums."sum_nk" IS NOT NULL AND nk_sums."sum_nk" <> 0
                    THEN 1 - (nk_sums."sum_nk_squared" / POWER(nk_sums."sum_nk", 2))
                    ELSE 0
                END AS "originality_score"
            FROM
                t
                LEFT JOIN nk_sums ON t."publication_number" = nk_sums."publication_number"
        )
        SELECT
            "publication_number",
            "originality_score"
        FROM
            originality_scores
        ORDER BY
            "originality_score" DESC NULLS LAST
        LIMIT 1
    );
```
2025-02-12 21:40:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:40:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:40:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:40:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 21:40:14 - snowflake.connector.connection - INFO - closed
2025-02-12 21:40:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:40:15 - root - INFO - itercount: 1
2025-02-12 21:40:15 - root - INFO - 0
2025-02-12 21:40:15 - root - INFO - results: 
publication_number,originality_score
US-9121016-B2,0.8365650969529086


2025-02-12 21:40:15 - root - INFO - Please check the answer again by reviewing Which US patent (with a B2 kind code and a grant date between 2015 and 2018) has the highest originality score calculated as 1 - (the sum of squared occurrences of distinct 4-digit IPC codes in its backward citations divided by the square of the total occurrences of these 4-digit IPC codes)?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Publication_Number,Originality_Score
patent_number:str,score:float
(Attention: answer in one row)
```

The above table represents the US patent with a B2 kind code and a grant date between 2015 and 2018 that has the highest originality score, calculated as \( 1 - \frac{\sum (\text{occurrences of each 4-digit IPC code})^2}{(\text{total occurrences of 4-digit IPC codes})^2} \). Since specific data is not provided, placeholders for the publication number and originality score are used. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,originality_score
US-9121016-B2,0.8365650969529086
Current sql:
SELECT
    "publication_number",
    "originality_score"
FROM
    (
        WITH t AS (
            SELECT
                "publication_number"
            FROM
                PATENTS.PATENTS.PUBLICATIONS
            WHERE
                "kind_code" = 'B2'
                AND "grant_date" BETWEEN 20150101 AND 20181231
                AND "publication_number" LIKE 'US-%'
        ),
        nk_table AS (
            SELECT
                t."publication_number" AS "publication_number",
                SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
                COUNT(*) AS "n_k"
            FROM
                t
                JOIN PATENTS.PATENTS.PUBLICATIONS t_pub ON t_pub."publication_number" = t."publication_number"
                CROSS JOIN LATERAL FLATTEN(input => t_pub."citation") c
                LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
                    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
                LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited
            WHERE
                ipc_cited.value::VARIANT:"code"::STRING IS NOT NULL
            GROUP BY
                t."publication_number",
                SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
        ),
        nk_sums AS (
            SELECT
                "publication_number",
                SUM(POWER("n_k", 2)) AS "sum_nk_squared",
                SUM("n_k") AS "sum_nk"
            FROM
                nk_table
            GROUP BY
                "publication_number"
        ),
        originality_scores AS (
            SELECT
                t."publication_number",
                CASE WHEN nk_sums."sum_nk" IS NOT NULL AND nk_sums."sum_nk" <> 0
                    THEN 1 - (nk_sums."sum_nk_squared" / POWER(nk_sums."sum_nk", 2))
                    ELSE 0
                END AS "originality_score"
            FROM
                t
                LEFT JOIN nk_sums ON t."publication_number" = nk_sums."publication_number"
        )
        SELECT
            "publication_number",
            "originality_score"
        FROM
            originality_scores
        ORDER BY
            "originality_score" DESC NULLS LAST
        LIMIT 1
    );
2025-02-12 21:40:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:40:47 - root - INFO - ```sql
SELECT
    "publication_number",
    "originality_score"
FROM
    (
        WITH t AS (
            SELECT
                "publication_number"
            FROM
                PATENTS.PATENTS.PUBLICATIONS
            WHERE
                "kind_code" = 'B2'
                AND "grant_date" BETWEEN 20150101 AND 20181231
                AND "publication_number" LIKE 'US-%'
        ),
        nk_table AS (
            SELECT
                t."publication_number" AS "publication_number",
                SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4) AS "ipc4_code",
                COUNT(*) AS "n_k"
            FROM
                t
                JOIN PATENTS.PATENTS.PUBLICATIONS t_pub ON t_pub."publication_number" = t."publication_number"
                CROSS JOIN LATERAL FLATTEN(input => t_pub."citation") c
                LEFT JOIN PATENTS.PATENTS.PUBLICATIONS p
                    ON p."publication_number" = c.value::VARIANT:"publication_number"::STRING
                LEFT JOIN LATERAL FLATTEN(input => p."ipc") ipc_cited
            WHERE
                ipc_cited.value::VARIANT:"code"::STRING IS NOT NULL
            GROUP BY
                t."publication_number",
                SUBSTR(ipc_cited.value::VARIANT:"code"::STRING, 1, 4)
        ),
        nk_sums AS (
            SELECT
                "publication_number",
                SUM(POWER("n_k", 2)) AS "sum_nk_squared",
                SUM("n_k") AS "sum_nk"
            FROM
                nk_table
            GROUP BY
                "publication_number"
        ),
        originality_scores AS (
            SELECT
                t."publication_number",
                CASE WHEN nk_sums."sum_nk" IS NOT NULL AND nk_sums."sum_nk" <> 0
                    THEN ROUND(1 - (nk_sums."sum_nk_squared" / POWER(nk_sums."sum_nk", 2)), 4)
                    ELSE 0
                END AS "originality_score"
            FROM
                t
                LEFT JOIN nk_sums ON t."publication_number" = nk_sums."publication_number"
        )
        SELECT
            "publication_number",
            "originality_score"
        FROM
            originality_scores
        ORDER BY
            "originality_score" DESC NULLS LAST
        LIMIT 1
    );
```
2025-02-12 21:40:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:40:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:40:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:40:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 21:40:48 - snowflake.connector.connection - INFO - closed
2025-02-12 21:40:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:40:49 - root - INFO - itercount: 2
2025-02-12 21:40:49 - root - INFO - 0
2025-02-12 21:40:49 - root - INFO - Total iteration counts: 2
