2025-02-12 20:56:12 - openai._base_client - INFO - Retrying request to /chat/completions in 0.466537 seconds
2025-02-12 20:56:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:56:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:56:45 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:56:46 - root - INFO - SQL:
SELECT DISTINCT "application_number"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "application_number" IS NOT NULL AND "application_number" <> ''
   LIMIT 100;
Results:
application_number
US-201213474229-A
US-201515301591-A
US-201213727956-A
US-201314037090-A
US-201615779282-A
US-201815940360-A
LU-41565D-A
AR-P130104719-A
US-201917259556-A
US-202117488151-A
US-202217847521-A
US-202318100229-A
US-202318118483-A
US-202318196781-A
US-202117904682-A
US-202218059574-A
EP-01130275-A
US-202118004159-A
US-2017038259-W
US-2017049272-W
US-2022029510-W
US-2022043079-W
DE-102012020674-A
DE-102016125191-A
DE-102021214720-A
DE-102019125712-A
CN-202220391266-U
CN-202123435349-U
CN-202220573254-U
CN-202220442667-U
CN-202220692784-U
US-202218571558-A
DD-22909681-A
US-71411646-A
US-46044554-A
US-46584754-A
US-13679550-A
CA-689064D-A
US-564845D-A
DD-14671D-A
DE-102008034854-A
US-201514731709-A
US-201514803565-A
US-201515516995-A
US-89612504-A
US-85277104-A
US-17118605-A
DE-8129640-U
PL-20708216-T
DE-20010922-U
AU-2012213056-A
AU-2019213327-A
AU-2021461372-A
CL-2009001242-A
CN-2014082524-W
CN-2020089189-W
US-202117403089-A
US-202017593160-A
US-202017755631-A
US-202217979376-A
CA-423429-A
BE-618741-A
CH-34785D-A
CH-66089D-A
US-201715638684-A
US-201414908160-A
US-201715626091-A
US-201214363900-A
US-201715746292-A
US-12717608-A
US-201615295135-A
US-201715646111-A
US-201816188377-A
US-62378956-A
US-46345742-A
US-16605450-A
US-67491533-A
US-1912721891-A
CA-30631D-A
KR-19940700442-A
KR-20020030070-A
KR-19990065717-A
KR-19997009558-A
KR-20030095701-A
KR-19970708040-A
KR-20050125950-A
CN-202120446528-U
CN-202120518914-U
JP-2010027766-A
JP-2010123823-A
JP-2014164235-A
JP-2011164779-A
JP-2013259713-A
JP-2014503291-A
US-201715467252-A
US-201615771734-A
US-201915733842-A
US-201815938146-A
US-201916382278-A
US-201816112905-A

2025-02-12 20:56:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:56:47 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:56:47 - root - INFO - SQL:
SELECT "filing_date"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "filing_date" IS NOT NULL
   LIMIT 100;
Results:
filing_date
19971015
19990322
0
19830217
19900109
19900101
19860106
0
19480102
19800125
19820209
19820219
19700116
19700224
19700501
0
18901220
19690318
19660117
18940609
18941217
18950125
0
19620924
19650616
19660402
19660506
19660704
19660725
19661121
19600102
19580106
19290107
19400116
19870521
19840705
19920730
19781012
19861030
19910225
19860106
19930106
20150702
19830922
19860626
19730907
19780905
19820512
19880217
19900307
0
19790102
0
0
19710204
19971230
19880317
19820430
19750221
19830503
19810413
19780313
19820518
19820524
19800416
19901205
19860918
19850916
19730328
19851029
19750527
19770706
19750707
19791105
19781012
19721012
19781219
19730906
19731029
19740405
19741216
19750221
19750925
19760105
19760123
19760331
19761125
19770324
19770413
19770802
19771125
19780505
19780613
19780712
19780717
19781020
19790110
19790718
19800918
19520218

2025-02-12 20:56:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:56:49 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:56:49 - root - INFO - SQL:
SELECT p."publication_number", f.value::VARIANT::STRING AS "first_cpc_code"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
   LATERAL FLATTEN(input => p."cpc") f
   LIMIT 100;
Results:
Too long, hard cut:
publication_number,first_cpc_code
DE-69427315-T2,"{""code"":""C08L83/00"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L25/06"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J5/18"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2367/03"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J3/24"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29C55/12"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L67/03"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2425/06"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29K2995/0072"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29K2995/0072"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2425/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L67/02"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2367/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J5/18"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J5/18"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29K2995/0072"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2425/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""Y10T428/254"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2367/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""Y10T428/254"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L67/02"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69611147-T2,"{""code"":""E05B77/00"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69611147-T2,"{""code"":""E05B17/0058"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69614271-T2,"{""code"":""C07K14/705"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69614271-T2,"{""code"":""A61K48/00"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69630331-T2,"{""code"":""G06F7/725"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69630331-T2,"{""code"":""H04L9/0844"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69630331-T2,"{""code"":""H04L9/0838"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69630331-T2,"{""code"":""H04L9/0844"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69630331-T2,"{""code"":""G06F7/725"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2503/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N5/0621"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2503/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2510/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N5/0621"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2510/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/04"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12674"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/20"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/31678"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12458"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/31678"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12458"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/20"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/31504"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B41N1/00"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/09"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B2367/00"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/20"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12493"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/043"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/36"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/08"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/04"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12493"",""first"":false,""inventive"":f

2025-02-12 20:56:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:56:50 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:56:51 - root - INFO - SQL:
SELECT f.value
   FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
   LATERAL FLATTEN(input => p."cpc") f
   LIMIT 100;
Results:
Too long, hard cut:
VALUE
"{
  ""code"": ""Y02P70/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E10/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/7072"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T90/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/70"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""E04B2/967"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02E20/16"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J2250/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J2240/90"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J2235/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04836"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/0483"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04593"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04575"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04545"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02P60/21"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02W30/40"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E50/30"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02A20/108"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02B20/40"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E10/20"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F16K15/026"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K2200/303"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F16K1/54"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K15/063"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K15/025"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K1/38"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K1/46"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K27/029"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K17/04"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02P70/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""A47J43/24"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B07B1/46"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""A23N12/02"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B01D35/02"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02W30/40"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02P70/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F24F1/48"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F24F1/38"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02P70/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""B65D41/485"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B65D2401/35"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""B65D2401/20"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""B65D2401/25"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H02J7/1492"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H02P9/48"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/92"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/70"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F02P1/086"",
 

2025-02-12 20:56:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:56:52 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:56:52 - root - INFO - SQL:
SELECT DISTINCT "symbol", "level"
   FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
   LIMIT 100;
Results:
symbol,level
B,2.0
Y,2.0
E,2.0
C,2.0
G,2.0
A42,4.0
A47,4.0
A46,4.0
A21,4.0
A41,4.0
B21,4.0
B31,4.0
B63,4.0
B07,4.0
C06,4.0
C07,4.0
C11,4.0
C14,4.0
F22,4.0
F21,4.0
G10,4.0
G01,4.0
A01B,5.0
A61B,5.0
A61P,5.0
B66,4.0
B61,4.0
B24,4.0
B05,4.0
C02,4.0
C25,4.0
C03,4.0
D04,4.0
D10,4.0
D05,4.0
F41,4.0
F04,4.0
F99,4.0
G05,4.0
G03,4.0
H99,4.0
A23P,5.0
A23J,5.0
A44D,5.0
A45F,5.0
A45B,5.0
E02,4.0
F01,4.0
F26,4.0
F25,4.0
Y10,4.0
A44C,5.0
A61D,5.0
A62B,5.0
B01D,5.0
B04C,5.0
B01,4.0
F03,4.0
A21D,5.0
A99,4.0
B30,4.0
B43,4.0
C40,4.0
D07,4.0
E05,4.0
E01,4.0
E03,4.0
F24,4.0
F28,4.0
G21,4.0
G11,4.0
A01K,5.0
A01J,5.0
A23L,5.0
A61M,5.0
A61J,5.0
A63J,5.0
C23,4.0
C04,4.0
E04,4.0
H10,4.0
A01M,5.0
A24D,5.0
A41H,5.0
A42B,5.0
A43C,5.0
A44B,5.0
A47F,5.0
A47G,5.0
A47K,5.0
A61F,5.0
A61L,5.0
A63G,5.0
A63K,5.0
B01B,5.0
B01F,5.0
B09C,5.0
B21L,5.0
A01P,5.0
A46D,5.0

2025-02-12 20:56:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:56:54 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:56:54 - root - INFO - SQL:
SELECT "symbol", "titleFull"
   FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
   WHERE "level" = 5
   LIMIT 100;
Results:
Too long, hard cut:
symbol,titleFull
A01H,NEW PLANTS OR NON-TRANSGENIC PROCESSES FOR OBTAINING THEM; PLANT REPRODUCTION BY TISSUE CULTURE TECHNIQUES
A01F,PROCESSING OF HARVESTED PRODUCE; HAY OR STRAW PRESSES; DEVICES FOR STORING AGRICULTURAL OR HORTICULTURAL PRODUCE
A01C,PLANTING; SOWING; FERTILISING
A01G,"HORTICULTURE; CULTIVATION OF VEGETABLES, FLOWERS, RICE, FRUIT, VINES, HOPS OR SEAWEED; FORESTRY; WATERING"
A01N,"PRESERVATION OF BODIES OF HUMANS OR ANIMALS OR PLANTS OR PARTS THEREOF; BIOCIDES, e.g. AS DISINFECTANTS, AS PESTICIDES OR AS HERBICIDES; PEST REPELLANTS OR ATTRACTANTS; PLANT GROWTH REGULATORS"
A01P,"BIOCIDAL, PEST REPELLANT, PEST ATTRACTANT OR PLANT GROWTH REGULATORY ACTIVITY OF CHEMICAL COMPOUNDS OR PREPARATIONS"
A01D,HARVESTING; MOWING
A01L,SHOEING OF ANIMALS
A01K,"ANIMAL HUSBANDRY; AVICULTURE; APICULTURE; PISCICULTURE; FISHING; REARING OR BREEDING ANIMALS, NOT OTHERWISE PROVIDED FOR; NEW BREEDS OF ANIMALS"
A01M,"CATCHING, TRAPPING OR SCARING OF ANIMALS; APPARATUS FOR THE DESTRUCTION OF NOXIOUS ANIMALS OR NOXIOUS PLANTS"
A01J,MANUFACTURE OF DAIRY PRODUCTS
A01B,"SOIL WORKING IN AGRICULTURE OR FORESTRY; PARTS, DETAILS, OR ACCESSORIES OF AGRICULTURAL MACHINES OR IMPLEMENTS, IN GENERAL"
A21D,"TREATMENT, e.g. PRESERVATION, OF FLOUR OR DOUGH, e.g. BY ADDITION OF MATERIALS; BAKING; BAKERY PRODUCTS; PRESERVATION THEREOF"
A21C,MACHINES OR EQUIPMENT FOR MAKING OR PROCESSING DOUGHS; HANDLING BAKED ARTICLES MADE FROM DOUGH
A21B,BAKERS' OVENS; MACHINES OR EQUIPMENT FOR BAKING
A22B,SLAUGHTERING
A22C,"PROCESSING MEAT, POULTRY, OR FISH"
A23P,"SHAPING OR WORKING OF FOODSTUFFS, NOT FULLY COVERED BY A SINGLE OTHER SUBCLASS"
A23C,"DAIRY PRODUCTS, e.g. MILK, BUTTER OR CHEESE; MILK OR CHEESE SUBSTITUTES; MAKING THEREOF"
A23J,PROTEIN COMPOSITIONS FOR FOODSTUFFS; WORKING-UP PROTEINS FOR FOODSTUFFS; PHOSPHATIDE COMPOSITIONS FOR FOODSTUFFS
A23K,FODDER
A23L,"FOODS, FOODSTUFFS, OR NON-ALCOHOLIC BEVERAGES, NOT COVERED BY SUBCLASSES A21D OR A23B-A23J; THEIR PREPARATION OR TREATMENT, e.g. COOKING, MODIFICATION OF NUTRITIVE QUALITIES, PHYSICAL TREATMENT; PRESERVATION OF FOODS OR FOODSTUFFS, IN GENERAL"
A23N,"MACHINES OR APPARATUS FOR TREATING HARVESTED FRUIT, VEGETABLES OR FLOWER BULBS IN BULK, NOT OTHERWISE PROVIDED FOR; PEELING VEGETABLES OR FRUIT IN BULK; APPARATUS FOR PREPARING ANIMAL FEEDING- STUFFS"
A23V,"INDEXING SCHEME RELATING TO FOODS, FOODSTUFFS OR NON-ALCOHOLIC BEVERAGES AND LACTIC OR PROPIONIC ACID BACTERIA USED IN FOODSTUFFS OR FOOD PREPARATION"
A23F,"COFFEE; TEA; THEIR SUBSTITUTES; MANUFACTURE, PREPARATION, OR INFUSION THEREOF"
A23G,"COCOA; COCOA PRODUCTS, e.g. CHOCOLATE; SUBSTITUTES FOR COCOA OR COCOA PRODUCTS; CONFECTIONERY; CHEWING GUM; ICE-CREAM; PREPARATION THEREOF"
A23B,"PRESERVING, e.g. BY CANNING, MEAT, FISH, EGGS, FRUIT, VEGETABLES, EDIBLE SEEDS; CHEMICAL RIPENING OF FRUIT OR VEGETABLES; THE PRESERVED, RIPENED, OR CANNED PRODUCTS"
A23D,"EDIBLE OILS OR FATS, e.g. MARGARINES, SHORTENINGS, COOKING OILS"
A24C,MACHINES FOR MAKING CIGARS OR CIGARETTES
A24D,CIGARS; CIGARETTES; TOBACCO SMOKE FILTERS; MOUTHPIECES FOR CIGARS OR CIGARETTES; MANUFACTURE OF TOBACCO SMOKE FILTERS OR MOUTHPIECES
A24F,SMOKERS' REQUISITES; MATCH BOXES; SIMULATED SMOKING DEVICES
A24B,MANUFACTURE OR PREPARATION OF TOBACCO FOR SMOKING OR CHEWING; TOBACCO; SNUFF
A41F,GARMENT FASTENINGS; SUSPENDERS
A41G,ARTIFICIAL FLOWERS; WIGS; MASKS; FEATHERS
A41B,SHIRTS; UNDERWEAR; BABY LINEN; HANDKERCHIEFS
A41D,OUTERWEAR; PROTECTIVE GARMENTS; ACCESSORIES
A41C,CORSETS; BRASSIERES
A41H,"APPLIANCES OR METHODS FOR MAKING CLOTHES, e.g. FOR DRESS-MAKING OR FOR TAILORING, NOT OTHERWISE PROVIDED FOR"
A42B,HATS; HEAD COVERINGS
A42C,"MANUFACTURING OR TRIMMING HEAD COVERINGS, e.g. HATS"
A43B,CHARACTERISTIC FEATURES OF FOOTWEAR; PARTS OF FOOTWEAR
A43C,FASTENINGS OR ATTACHMENTS OF FOOTWEAR; LACES IN GENERAL
A43D,"MACHINES, TOOLS, EQUIPMENT OR METHODS FOR MANUFACTURING OR REPAIRING FOOTWEAR"
A44D,"INDEXING SCHEME RELATING TO BUTTONS, PINS, BUCKLES OR SLIDE FASTENERS, AND TO JEWELLERY, BRACELETS OR OTHER PERSONAL ADORNMENTS"
A44B,"BUTTONS, PINS, BUCKLES, SLIDE FASTENERS, OR THE LIKE"
A44C,"PERSONAL ADORNMENTS, e.g. JEWELLERY; COINS"
A45F,TRAVELLING OR CAMP EQUIPMENT: SACKS OR PACKS CARRIED ON THE BODY
A45C,PURSES; LUGGAGE; HAND CARRIED BAGS
A45D,"HAIRDRESSING OR SHAVING EQUIPMENT; EQUIPMENT FOR COSMETICS OR COSMETIC TREATMENTS, e.g. FOR MANICURING OR PEDICURING"
A45B,WALKING STICKS; UMBRELLAS; LADIES' OR LIKE FANS
A46D,MANUFACTURE OF BRUSHES
A46B,BRUSHES
A47L,DOMESTIC WASHING OR CLEANING; SUCTION CLEANERS IN GENERAL
A47F,"SPECIAL FURNITURE, FITTINGS, OR ACCESSORIES FOR SHOPS, STOREHOUSES, BARS, RESTAURANTS OR THE LIKE; PAYING COUNTERS"
A47D,FURNITURE SPECIALLY ADAPTED FOR CHILDREN
A47G,HOUSEHOLD OR TABLE EQUIPMENT
A47K,SANITARY EQUIPMENT NOT OTHERWISE PROVIDED FOR; TOILET ACCESSORIES
A47H,FURNISHINGS FOR WINDOWS OR DOORS
A47B,TABLES; DESKS; OFFICE FURNITURE; CABINETS; DRAWERS; GENERAL DETAILS OF FURNITURE
A47C,CHAIRS; SOFAS; BEDS
A47J,KITCHEN EQUIPMENT; COFFEE MILLS; SPICE MILLS; APPA

2025-02-12 20:56:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:56:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:56:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:56:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 20:56:56 - snowflake.connector.connection - INFO - closed
2025-02-12 20:56:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:57:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:57:34 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        p."filing_date",
        f.value::VARIANT:"code"::STRING AS "first_cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p
        LEFT JOIN LATERAL FLATTEN(input => p."cpc") f ON TRUE
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND p."filing_date" IS NOT NULL
)
,
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date",
        "first_cpc_code"
    FROM
        first_cpc_codes
    WHERE
        rn = 1
        AND "first_cpc_code" IS NOT NULL
)
,
patent_filings AS (
    SELECT
        fc."first_cpc_code" AS "cpc_code",
        CAST(LEFT(fc."filing_date"::VARCHAR(8), 4) AS INTEGER) AS "filing_year"
    FROM
        first_cpc_per_patent fc
    WHERE
        fc."filing_date"::VARCHAR(8) NOT LIKE '0%'
)
,
yearly_filings AS (
    SELECT
        pf."cpc_code",
        pf."filing_year",
        COUNT(*) AS "filing_count"
    FROM
        patent_filings pf
    GROUP BY
        pf."cpc_code",
        pf."filing_year"
),
best_years AS (
    SELECT
        yf."cpc_code",
        yf."filing_year" AS "best_year",
        yf."filing_count"
    FROM (
        SELECT
            cpc_code,
            MAX(filing_count) AS max_filing_count
        FROM
            yearly_filings
        GROUP BY
            cpc_code
    ) mf
    JOIN yearly_filings yf ON
        yf.cpc_code = mf.cpc_code AND yf.filing_count = mf.max_filing_count
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT
    ct."titleFull" AS "CPC_Title",
    by."best_year" AS "Best_Year"
FROM
    best_years by
    JOIN cpc_titles ct ON by."cpc_code" = ct."symbol"
LIMIT 100;
```
2025-02-12 20:57:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:57:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:57:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:57:35 - snowflake.connector.connection - INFO - closed
2025-02-12 20:57:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:58:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:58:08 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        p."filing_date",
        f.value::VARIANT:"code"::STRING AS "first_cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p
        LEFT JOIN LATERAL FLATTEN(input => p."cpc") f ON TRUE
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND p."filing_date" IS NOT NULL
)
,
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date",
        "first_cpc_code"
    FROM
        first_cpc_codes
    WHERE
        rn = 1
        AND "first_cpc_code" IS NOT NULL
)
,
patent_filings AS (
    SELECT
        fc."first_cpc_code" AS "cpc_code",
        CAST(LEFT(fc."filing_date"::VARCHAR(8), 4) AS INTEGER) AS "filing_year"
    FROM
        first_cpc_per_patent fc
    WHERE
        fc."filing_date"::VARCHAR(8) NOT LIKE '0%'
)
,
yearly_filings AS (
    SELECT
        pf."cpc_code",
        pf."filing_year",
        COUNT(*) AS "filing_count"
    FROM
        patent_filings pf
    GROUP BY
        pf."cpc_code",
        pf."filing_year"
),
best_years AS (
    SELECT
        yf."cpc_code",
        yf."filing_year" AS "best_year",
        yf."filing_count"
    FROM (
        SELECT
            cpc_code,
            MAX(filing_count) AS max_filing_count
        FROM
            yearly_filings
        GROUP BY
            cpc_code
    ) mf
    JOIN yearly_filings yf ON
        yf."cpc_code" = mf."cpc_code" AND yf."filing_count" = mf."max_filing_count"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    -- Removed the level filter to simplify and ensure output
)
SELECT
    ct."titleFull" AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct ON bys."cpc_code" = ct."symbol"
LIMIT 100;
```
2025-02-12 20:58:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:58:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:58:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:58:09 - snowflake.connector.connection - INFO - closed
2025-02-12 20:58:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:58:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:58:58 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        p."filing_date",
        f.value::VARIANT:"code"::STRING AS "first_cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p
        LEFT JOIN LATERAL FLATTEN(input => p."cpc") f ON TRUE
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND p."filing_date" IS NOT NULL
)
,
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date",
        "first_cpc_code"
    FROM
        first_cpc_codes
    WHERE
        rn = 1
        AND "first_cpc_code" IS NOT NULL
)
,
patent_filings AS (
    SELECT
        fc."first_cpc_code" AS "cpc_code",
        CAST(SUBSTRING(fc."filing_date"::VARCHAR(8), 1, 4) AS INTEGER) AS "filing_year"
    FROM
        first_cpc_per_patent fc
    WHERE
        fc."filing_date"::VARCHAR(8) NOT LIKE '0%'
)
,
yearly_filings AS (
    SELECT
        pf."cpc_code",
        pf."filing_year",
        COUNT(*) AS "filing_count"
    FROM
        patent_filings pf
    GROUP BY
        pf."cpc_code",
        pf."filing_year"
),
best_years AS (
    SELECT
        yf."cpc_code",
        yf."filing_year" AS "best_year",
        yf."filing_count"
    FROM (
        SELECT
            "cpc_code",
            MAX("filing_count") AS "max_filing_count"
        FROM
            yearly_filings
        GROUP BY
            "cpc_code"
    ) mf
    JOIN yearly_filings yf ON
        yf."cpc_code" = mf."cpc_code" AND yf."filing_count" = mf."max_filing_count"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT
    ct."titleFull" AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years AS bys
    JOIN cpc_titles ct ON bys."cpc_code" = ct."symbol"
LIMIT 100;
```
2025-02-12 20:58:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:58:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:58:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:58:59 - snowflake.connector.connection - INFO - closed
2025-02-12 20:58:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:59:00 - root - INFO - SQL:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        p."filing_date",
        f.value::VARIANT:"code"::STRING AS "first_cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p
        LEFT JOIN LATERAL FLATTEN(input => p."cpc") f ON TRUE
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND p."filing_date" IS NOT NULL
)
,
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date",
        "first_cpc_code"
    FROM
        first_cpc_codes
    WHERE
        rn = 1
        AND "first_cpc_code" IS NOT NULL
)
,
patent_filings AS (
    SELECT
        fc."first_cpc_code" AS "cpc_code",
        CAST(SUBSTRING(fc."filing_date"::VARCHAR(8), 1, 4) AS INTEGER) AS "filing_year"
    FROM
        first_cpc_per_patent fc
    WHERE
        fc."filing_date"::VARCHAR(8) NOT LIKE '0%'
)
,
yearly_filings AS (
    SELECT
        pf."cpc_code",
        pf."filing_year",
        COUNT(*) AS "filing_count"
    FROM
        patent_filings pf
    GROUP BY
        pf."cpc_code",
        pf."filing_year"
),
best_years AS (
    SELECT
        yf."cpc_code",
        yf."filing_year" AS "best_year",
        yf."filing_count"
    FROM (
        SELECT
            "cpc_code",
            MAX("filing_count") AS "max_filing_count"
        FROM
            yearly_filings
        GROUP BY
            "cpc_code"
    ) mf
    JOIN yearly_filings yf ON
        yf."cpc_code" = mf."cpc_code" AND yf."filing_count" = mf."max_filing_count"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT
    ct."titleFull" AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years AS bys
    JOIN cpc_titles ct ON bys."cpc_code" = ct."symbol"
LIMIT 100;
Results:
000002 (0A000): 01ba59ca-0004-9c12-0001-11c301137f8e: Unsupported feature 'lateral table function called with OUTER JOIN syntax or a join predicate (ON clause)'.
2025-02-12 20:59:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:59:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:59:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:59:02 - snowflake.connector.connection - INFO - closed
2025-02-12 20:59:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:59:14 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:59:14 - root - INFO - ```sql
SELECT YEAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "filing_year", COUNT(*) AS "patent_count"
FROM "PATENTS"."PATENTS"."PUBLICATIONS"
WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
GROUP BY "filing_year"
ORDER BY "filing_year"
LIMIT 100;
```
2025-02-12 20:59:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:59:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:59:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:59:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:59:16 - snowflake.connector.connection - INFO - closed
2025-02-12 20:59:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:59:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:59:44 - root - INFO - SQL:
SELECT YEAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "filing_year", COUNT(*) AS "patent_count"
FROM "PATENTS"."PATENTS"."PUBLICATIONS"
WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
GROUP BY "filing_year"
ORDER BY "filing_year"
LIMIT 100;
Results:
filing_year,patent_count
1846,1
1853,1
1860,1
1867,1
1877,4
1880,1
1881,2
1882,3
1883,2
1885,4
1886,3
1887,3
1888,3
1889,10
1890,4
1891,9
1892,10
1893,18
1894,34
1895,28
1896,44
1897,44
1898,51
1899,110
1900,81
1901,91
1902,100
1903,111
1904,136
1905,149
1906,189
1907,197
1908,160
1909,155
1910,164
1911,228
1912,276
1913,275
1914,197
1915,171
1916,173
1917,143
1918,111
1919,149
1920,173
1921,208
1922,159
1923,166
1924,174
1925,203
1926,214
1927,211
1928,243
1929,264
1930,272
1931,263
1932,219
1933,236
1934,298
1935,314
1936,335
1937,295
1938,346
1939,309
1940,289
1941,288
1942,211
1943,270
1944,248
1945,256
1946,302
1947,327
1948,300
1949,329
1950,357
1951,354
1952,382
1953,387
1954,478
1955,472
1956,519
1957,493
1958,514
1959,575
1960,552
1961,566
1962,573
1963,544
1964,857
1965,942
1966,1036
1967,1011
1968,1085
1969,1427
1970,1478
1971,2192
1972,2741
1973,3017
1974,3091
1975,3236

2025-02-12 20:59:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:59:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:59:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:59:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:59:45 - snowflake.connector.connection - INFO - closed
2025-02-12 20:59:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:59:45 - root - INFO - SQL:
SELECT "publication_number", "application_number", "filing_date"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "application_number" IS NOT NULL AND "application_number" <> ''
   AND "filing_date" IS NOT NULL
   LIMIT 100;
Results:
publication_number,application_number,filing_date
CR-5634-A,CR-5634-A,19971015
CR-5990-A,CR-5990-A,19990322
FI-429-A,FI-429D-A,0
HK-6083-A,HK-6083-A,19830217
HU-T52763-A,HU-7590-A,19900109
JP-H03206829-A,JP-4890-A,19900101
JP-S62159089-A,JP-6286-A,19860106
US-416-A,US-416D-A,0
US-2528225-A,US-9948-A,19480102
AT-A41580-A,AT-41580-A,19800125
AT-A47682-A,AT-47682-A,19820209
AT-A63682-A,AT-63682-A,19820219
CA-920790-A,CA-72337-A,19700116
CA-950907-A,CA-75688-A,19700224
CA-920830-A,CA-81627-A,19700501
CA-9086-A,CA-9086D-A,0
CH-3256-A,CH-3256D-A,18901220
CH-540255-A,CH-32972-A,19690318
CH-433637-A,CH-59566-A,19660117
CH-8494-A,CH-8494D-A,18940609
CH-9587-A,CH-9587D-A,18941217
CH-9968-A,CH-9968D-A,18950125
DD-8297-A,DD-8297D-A,0
FR-1334211-A,FR-19873-A,19620924
FR-1444995-A,FR-20966-A,19650616
FR-1474468-A,FR-56170-A,19660402
FR-1478988-A,FR-60658-A,19660506
FR-1485992-A,FR-68041-A,19660704
FR-1487706-A,FR-70755-A,19660725
FR-1508237-A,FR-84394-A,19661121
GB-893001-A,GB-15660-A,19600102
GB-873984-A,GB-50958-A,19580106
GB-307790-A,GB-54729-A,19290107
GB-534192-A,GB-93140-A,19400116
HK-39487-A,HK-39487-A,19870521
HK-52284-A,HK-52284-A,19840705
HK-55992-A,HK-55992-A,19920730
HK-60178-A,HK-60178-A,19781012
HK-82486-A,HK-82486-A,19861030
HU-T58725-A,HU-62391-A,19910225
JP-S62157892-A,JP-42386-A,19860106
JP-H06198910-A,JP-67093-A,19930106
MA-42286-A,MA-42286-A,20150702
OA-07542-A,OA-58112-A,19830922
OA-08399-A,OA-58887-A,19860626
PH-11723-A,PH-14999-A,19730907
PH-15213-A,PH-21568-A,19780905
PH-17928-A,PH-27280-A,19820512
PH-23905-A,PH-36517-A,19880217
TR-26506-A,TR-25990-A,19900307
US-4613-A,US-4613D-A,0
US-4234270-A,US-59779-A,19790102
US-6310-A,US-6310D-A,0
US-8947-A,US-8947D-A,0
YU-24971-A,YU-24971-A,19710204
YU-51397-A,YU-51397-A,19971230
YU-53588-A,YU-53588-A,19880317
YU-94082-A,YU-94082-A,19820430
AT-A134275-A,AT-134275-A,19750221
AT-A160683-A,AT-160683-A,19830503
AT-A168281-A,AT-168281-A,19810413
AT-A179178-A,AT-179178-A,19780313
AT-A196182-A,AT-196182-A,19820518
AT-A202882-A,AT-202882-A,19820524
AT-A205780-A,AT-205780-A,19800416
AT-A245590-A,AT-245590-A,19901205
AT-A250686-A,AT-250686-A,19860918
AT-A269985-A,AT-269985-A,19850916
AT-A272073-A,AT-272073-A,19730328
AT-A312885-A,AT-312885-A,19851029
AT-A404675-A,AT-404675-A,19750527
AT-A482077-A,AT-482077-A,19770706
AT-A519575-A,AT-519575-A,19750707
AT-A710279-A,AT-710279-A,19791105
AT-A735378-A,AT-735378-A,19781012
AT-A876472-A,AT-876472-A,19721012
AT-A906278-A,AT-906278-A,19781219
BE-804534-A,BE-135378-A,19730906
BE-806687-A,BE-137212-A,19731029
BE-813367-A,BE-142905-A,19740405
BE-823416-A,BE-151562-A,19741216
BE-825816-A,BE-153592-A,19750221
BE-833811-A,BE-160369-A,19750925
BE-837312-A,BE-163314-A,19760105
BE-837857-A,BE-163757-A,19760123
BE-840231-A,BE-165719-A,19760331
BE-848755-A,BE-172709-A,19761125
BE-852837-A,BE-176081-A,19770324
BE-853553-A,BE-176682-A,19770413
BE-857395-A,BE-179841-A,19770802
BE-861199-A,BE-182921-A,19771125
BE-866723-A,BE-187407-A,19780505
BE-868080-A,BE-188538-A,19780613
BE-868938-A,BE-189232-A,19780712
BE-869056-A,BE-189327-A,19780717
BE-871421-A,BE-191250-A,19781020
BE-873394-A,BE-192832-A,19790110
BE-877768-A,BE-196360-A,19790718
BE-885287-A,BE-202146-A,19800918
BE-509322-A,BE-509322-A,19520218

2025-02-12 20:59:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:59:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:59:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:59:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:59:47 - snowflake.connector.connection - INFO - closed
2025-02-12 20:59:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:59:48 - root - INFO - SQL:
SELECT p."publication_number", t.value::VARIANT::STRING AS "title", f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."title_localized") t,
    LATERAL FLATTEN(input => p."cpc") f
    LIMIT 100;
Results:
Too long, hard cut:
publication_number,title,first_cpc_code
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/06"",""first"":false,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/235"",""first"":true,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/285"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/98"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/213"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q16/102"",""first"":true,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q2210/004"",""first"":false,""inventive"":false,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q1/70"",""first"":false,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""Y10T409/309296"",""first"":false,""inventive"":false,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""Y10T409/307672"",""first"":false,""inventive"":false,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q1/70"",""first"":true,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q3/00"",

2025-02-12 20:59:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:59:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:59:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:59:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:59:49 - snowflake.connector.connection - INFO - closed
2025-02-12 20:59:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:59:49 - root - INFO - SQL:
SELECT "symbol", "titleFull"
    FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE "level" = 5
    LIMIT 100;
Results:
Too long, hard cut:
symbol,titleFull
A01H,NEW PLANTS OR NON-TRANSGENIC PROCESSES FOR OBTAINING THEM; PLANT REPRODUCTION BY TISSUE CULTURE TECHNIQUES
A01F,PROCESSING OF HARVESTED PRODUCE; HAY OR STRAW PRESSES; DEVICES FOR STORING AGRICULTURAL OR HORTICULTURAL PRODUCE
A01C,PLANTING; SOWING; FERTILISING
A01G,"HORTICULTURE; CULTIVATION OF VEGETABLES, FLOWERS, RICE, FRUIT, VINES, HOPS OR SEAWEED; FORESTRY; WATERING"
A01N,"PRESERVATION OF BODIES OF HUMANS OR ANIMALS OR PLANTS OR PARTS THEREOF; BIOCIDES, e.g. AS DISINFECTANTS, AS PESTICIDES OR AS HERBICIDES; PEST REPELLANTS OR ATTRACTANTS; PLANT GROWTH REGULATORS"
A01P,"BIOCIDAL, PEST REPELLANT, PEST ATTRACTANT OR PLANT GROWTH REGULATORY ACTIVITY OF CHEMICAL COMPOUNDS OR PREPARATIONS"
A01D,HARVESTING; MOWING
A01L,SHOEING OF ANIMALS
A01K,"ANIMAL HUSBANDRY; AVICULTURE; APICULTURE; PISCICULTURE; FISHING; REARING OR BREEDING ANIMALS, NOT OTHERWISE PROVIDED FOR; NEW BREEDS OF ANIMALS"
A01M,"CATCHING, TRAPPING OR SCARING OF ANIMALS; APPARATUS FOR THE DESTRUCTION OF NOXIOUS ANIMALS OR NOXIOUS PLANTS"
A01J,MANUFACTURE OF DAIRY PRODUCTS
A01B,"SOIL WORKING IN AGRICULTURE OR FORESTRY; PARTS, DETAILS, OR ACCESSORIES OF AGRICULTURAL MACHINES OR IMPLEMENTS, IN GENERAL"
A21D,"TREATMENT, e.g. PRESERVATION, OF FLOUR OR DOUGH, e.g. BY ADDITION OF MATERIALS; BAKING; BAKERY PRODUCTS; PRESERVATION THEREOF"
A21C,MACHINES OR EQUIPMENT FOR MAKING OR PROCESSING DOUGHS; HANDLING BAKED ARTICLES MADE FROM DOUGH
A21B,BAKERS' OVENS; MACHINES OR EQUIPMENT FOR BAKING
A22B,SLAUGHTERING
A22C,"PROCESSING MEAT, POULTRY, OR FISH"
A23P,"SHAPING OR WORKING OF FOODSTUFFS, NOT FULLY COVERED BY A SINGLE OTHER SUBCLASS"
A23C,"DAIRY PRODUCTS, e.g. MILK, BUTTER OR CHEESE; MILK OR CHEESE SUBSTITUTES; MAKING THEREOF"
A23J,PROTEIN COMPOSITIONS FOR FOODSTUFFS; WORKING-UP PROTEINS FOR FOODSTUFFS; PHOSPHATIDE COMPOSITIONS FOR FOODSTUFFS
A23K,FODDER
A23L,"FOODS, FOODSTUFFS, OR NON-ALCOHOLIC BEVERAGES, NOT COVERED BY SUBCLASSES A21D OR A23B-A23J; THEIR PREPARATION OR TREATMENT, e.g. COOKING, MODIFICATION OF NUTRITIVE QUALITIES, PHYSICAL TREATMENT; PRESERVATION OF FOODS OR FOODSTUFFS, IN GENERAL"
A23N,"MACHINES OR APPARATUS FOR TREATING HARVESTED FRUIT, VEGETABLES OR FLOWER BULBS IN BULK, NOT OTHERWISE PROVIDED FOR; PEELING VEGETABLES OR FRUIT IN BULK; APPARATUS FOR PREPARING ANIMAL FEEDING- STUFFS"
A23V,"INDEXING SCHEME RELATING TO FOODS, FOODSTUFFS OR NON-ALCOHOLIC BEVERAGES AND LACTIC OR PROPIONIC ACID BACTERIA USED IN FOODSTUFFS OR FOOD PREPARATION"
A23F,"COFFEE; TEA; THEIR SUBSTITUTES; MANUFACTURE, PREPARATION, OR INFUSION THEREOF"
A23G,"COCOA; COCOA PRODUCTS, e.g. CHOCOLATE; SUBSTITUTES FOR COCOA OR COCOA PRODUCTS; CONFECTIONERY; CHEWING GUM; ICE-CREAM; PREPARATION THEREOF"
A23B,"PRESERVING, e.g. BY CANNING, MEAT, FISH, EGGS, FRUIT, VEGETABLES, EDIBLE SEEDS; CHEMICAL RIPENING OF FRUIT OR VEGETABLES; THE PRESERVED, RIPENED, OR CANNED PRODUCTS"
A23D,"EDIBLE OILS OR FATS, e.g. MARGARINES, SHORTENINGS, COOKING OILS"
A24C,MACHINES FOR MAKING CIGARS OR CIGARETTES
A24D,CIGARS; CIGARETTES; TOBACCO SMOKE FILTERS; MOUTHPIECES FOR CIGARS OR CIGARETTES; MANUFACTURE OF TOBACCO SMOKE FILTERS OR MOUTHPIECES
A24F,SMOKERS' REQUISITES; MATCH BOXES; SIMULATED SMOKING DEVICES
A24B,MANUFACTURE OR PREPARATION OF TOBACCO FOR SMOKING OR CHEWING; TOBACCO; SNUFF
A41F,GARMENT FASTENINGS; SUSPENDERS
A41G,ARTIFICIAL FLOWERS; WIGS; MASKS; FEATHERS
A41B,SHIRTS; UNDERWEAR; BABY LINEN; HANDKERCHIEFS
A41D,OUTERWEAR; PROTECTIVE GARMENTS; ACCESSORIES
A41C,CORSETS; BRASSIERES
A41H,"APPLIANCES OR METHODS FOR MAKING CLOTHES, e.g. FOR DRESS-MAKING OR FOR TAILORING, NOT OTHERWISE PROVIDED FOR"
A42B,HATS; HEAD COVERINGS
A42C,"MANUFACTURING OR TRIMMING HEAD COVERINGS, e.g. HATS"
A43B,CHARACTERISTIC FEATURES OF FOOTWEAR; PARTS OF FOOTWEAR
A43C,FASTENINGS OR ATTACHMENTS OF FOOTWEAR; LACES IN GENERAL
A43D,"MACHINES, TOOLS, EQUIPMENT OR METHODS FOR MANUFACTURING OR REPAIRING FOOTWEAR"
A44D,"INDEXING SCHEME RELATING TO BUTTONS, PINS, BUCKLES OR SLIDE FASTENERS, AND TO JEWELLERY, BRACELETS OR OTHER PERSONAL ADORNMENTS"
A44B,"BUTTONS, PINS, BUCKLES, SLIDE FASTENERS, OR THE LIKE"
A44C,"PERSONAL ADORNMENTS, e.g. JEWELLERY; COINS"
A45F,TRAVELLING OR CAMP EQUIPMENT: SACKS OR PACKS CARRIED ON THE BODY
A45C,PURSES; LUGGAGE; HAND CARRIED BAGS
A45D,"HAIRDRESSING OR SHAVING EQUIPMENT; EQUIPMENT FOR COSMETICS OR COSMETIC TREATMENTS, e.g. FOR MANICURING OR PEDICURING"
A45B,WALKING STICKS; UMBRELLAS; LADIES' OR LIKE FANS
A46D,MANUFACTURE OF BRUSHES
A46B,BRUSHES
A47L,DOMESTIC WASHING OR CLEANING; SUCTION CLEANERS IN GENERAL
A47F,"SPECIAL FURNITURE, FITTINGS, OR ACCESSORIES FOR SHOPS, STOREHOUSES, BARS, RESTAURANTS OR THE LIKE; PAYING COUNTERS"
A47D,FURNITURE SPECIALLY ADAPTED FOR CHILDREN
A47G,HOUSEHOLD OR TABLE EQUIPMENT
A47K,SANITARY EQUIPMENT NOT OTHERWISE PROVIDED FOR; TOILET ACCESSORIES
A47H,FURNISHINGS FOR WINDOWS OR DOORS
A47B,TABLES; DESKS; OFFICE FURNITURE; CABINETS; DRAWERS; GENERAL DETAILS OF FURNITURE
A47C,CHAIRS; SOFAS; BEDS
A47J,KITCHEN EQUIPMENT; COFFEE MILLS; SPICE MILLS; APPA

2025-02-12 20:59:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:59:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:59:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:59:51 - snowflake.connector.connection - INFO - closed
2025-02-12 20:59:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:00:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:00:12 - root - INFO - ```sql
SELECT TO_VARCHAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'YYYY') AS "filing_year", COUNT(*) AS "patent_count"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS"
    WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
    GROUP BY "filing_year"
    ORDER BY "filing_year"
    LIMIT 100;
```
2025-02-12 21:00:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:00:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:00:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:00:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:00:15 - snowflake.connector.connection - INFO - closed
2025-02-12 21:00:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:00:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:00:34 - root - INFO - SQL:
SELECT TO_VARCHAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'YYYY') AS "filing_year", COUNT(*) AS "patent_count"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS"
    WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
    GROUP BY "filing_year"
    ORDER BY "filing_year"
    LIMIT 100;
Results:
filing_year,patent_count
1846,1
1853,1
1860,1
1867,1
1877,4
1880,1
1881,2
1882,3
1883,2
1885,4
1886,3
1887,3
1888,3
1889,10
1890,4
1891,9
1892,10
1893,18
1894,34
1895,28
1896,44
1897,44
1898,51
1899,110
1900,81
1901,91
1902,100
1903,111
1904,136
1905,149
1906,189
1907,197
1908,160
1909,155
1910,164
1911,228
1912,276
1913,275
1914,197
1915,171
1916,173
1917,143
1918,111
1919,149
1920,173
1921,208
1922,159
1923,166
1924,174
1925,203
1926,214
1927,211
1928,243
1929,264
1930,272
1931,263
1932,219
1933,236
1934,298
1935,314
1936,335
1937,295
1938,346
1939,309
1940,289
1941,288
1942,211
1943,270
1944,248
1945,256
1946,302
1947,327
1948,300
1949,329
1950,357
1951,354
1952,382
1953,387
1954,478
1955,472
1956,519
1957,493
1958,514
1959,575
1960,552
1961,566
1962,573
1963,544
1964,857
1965,942
1966,1036
1967,1011
1968,1085
1969,1427
1970,1478
1971,2192
1972,2741
1973,3017
1974,3091
1975,3236

2025-02-12 21:00:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:00:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:00:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:00:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:00:38 - snowflake.connector.connection - INFO - closed
2025-02-12 21:00:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:00:38 - root - INFO - SQL:
SELECT DISTINCT f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."cpc", outer => FALSE, mode => 'array') f
    LIMIT 100;
Results:
Too long, hard cut:
first_cpc_code
"{""code"":""Y02W30/80"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G06F1/1624"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""F01L2800/03"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""D05B87/00"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""G01N21/8507"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""F01D5/087"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""A61P9/04"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01H13/10"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04N21/234363"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H01M4/38"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04N13/161"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04L1/1621"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G01S13/06"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01Q1/27"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04W36/0077"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""E21B43/263"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C07K14/47"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""A61B2090/08021"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""C07K2317/75"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""A61M5/31511"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H03F3/45618"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B23K26/38"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C02F1/44"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B23K26/064"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G02B26/101"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""A61B5/0022"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04L67/75"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G05D1/024"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C07C2521/12"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G08G1/14"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G06V10/143"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B21B37/16"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""B32B2457/14"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G09G3/20"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G07D11/50"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01M6/5044"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C07K14/54"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G02B5/289"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""C07D307/84"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H05K1/16"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""A61K31/66"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""D06L4/70"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B21D39/021"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""B62B5/0404"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""Y10S29/104"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""Y10T428/2835"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G06K9/00442"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""A61M5/2033"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H05K1/117"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""H01L51/441"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C08B37/14"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G01K15/007"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01L29/1045"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""H04L67/63"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G03G2215/0145"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""H04L65/102"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C08J9/0014"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C08K3/22"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B65H2515/12"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""F16J1/22"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""B41F13/025"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H01M4/382"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""F28C1/00"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04N9/455"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H04N5/91"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G06Q20/325"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G01J1/32"",""first"":false,""inventive""

2025-02-12 21:00:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:00:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:00:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:00:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:00:40 - snowflake.connector.connection - INFO - closed
2025-02-12 21:00:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:00:40 - root - INFO - SQL:
SELECT p."application_number", p."filing_date", f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."cpc", outer => FALSE, mode => 'array') f
    WHERE p."application_number" IS NOT NULL AND p."application_number" <> ''
    AND p."filing_date" IS NOT NULL
    LIMIT 100;
Results:
Too long, hard cut:
application_number,filing_date,first_cpc_code
US-56520309-A,20090923,"{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/06"",""first"":false,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/235"",""first"":true,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/285"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/98"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/213"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q16/102"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q2210/004"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/70"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""Y10T409/309296"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""Y10T409/307672"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/70"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q3/00"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/52"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/0009"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""Y10T409/309352"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q16/102"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/70"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/0009"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q2210/004"",""first"":false,""inventive"":false,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/144"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/2283"",""first"":true,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/145"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/144"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C25/00"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""A01G3/002"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C25/00"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""A01G3/002"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/2283"",""first"":true,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/145"",""first"":false,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""Y10S315/05"",""first"":false,""inventive"":false,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/2887"",""first"":true,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/3928"",""first"":false,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/2887"",""first"":true,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/3928"",""first"":false,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""

2025-02-12 21:00:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:00:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:00:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:00:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:00:43 - snowflake.connector.connection - INFO - closed
2025-02-12 21:00:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:00:43 - root - INFO - SQL:
SELECT t.value
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."title_localized") t
    LIMIT 100;
Results:
Too long, hard cut:
VALUE
"{
  ""language"": ""de"",
  ""text"": ""Luftbefeuchtungsapparat mit Zentraldüse"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Perfectionnements à un élément électrique chauffant amovible formant accumulateur de chaleur, utilisable en particulier dans des bigoudis chauffants ou analogues"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Heart pacers"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Vorrichtung zum herstellen eines garnes"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Katalytische brenneranordnung"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Plattenspieler"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Art of clarifying and settling varnishes and oils"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Art de clarifier les vernis et les huiles"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""A metallic blind"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Une persienne en metal"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Regulateur de vapeur"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Steam governor"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Circuit to analyze a signal amplitude range through frequency discrimination techniques"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Derives de l&#39;acide 5-thiazol carboxylique et procede de preparation"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Method for the attenuation of sound"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Charrue rotatoire a socs multiples"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Rotary gang plough"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""System for controlling vertical flight of aircraft"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Vorrichtung zur niveauregelung eines fahrzeuges."",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Absperrventil für ein- und doppelseitigen Winddruck (Saug- und Druckluft)"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Rundlaufendes Werkzeug"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Procédé pour obtenir une vis taraudeuse à pointe en foret et moyen pour la mise en oeuvre du procédé"",
  ""truncated"": false
}"
"{
  ""language"": ""da"",
  ""text"": ""Pelsdyrplejebørste med integreret loppe/loppeæg sugningsanlæg"",
  ""truncated"": false
}"
"{
  ""language"": ""fi"",
  ""text"": ""Sätt att behandla aluminiumhaltiga resp. alkalialuminiumhaltiga ämnen"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Jeu de société"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Procédé et appareil pour injecter des fluides dans des formations souterraines"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Perfectionnements aux comparateurs électroniques de signaux"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Porte et système de manoeuvre pour armoire suspendue"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Procédé de préparation de copolymères améliorés et produits obtenus"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Matières pour emballage scellables à chaud"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Dispositif de revêtement mural, plus particulièrement destiné à l&#39;isolation thermique ou acoustique, ou bien à des fins décoratives et procédé pour la mise en place de ce dispositif"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Improvements in or relating to the separation of solid materials of different specific gravities"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Audio/video quality monitoring system"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Mirror finish polisher"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Flavouring compositions"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Aqueous liquid composition for external use"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Catenated phosphorus material,production and use thereof and devices employing same"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Noncorruptible read-writer and method"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Apparatus for matching the dc volume control characteristics of two audio channels"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Process for the preparation of 2-(5,5-disubstituted-4-oxo-2-imidazolin-2-yl)-nicotinic acids,quinoline-3-carboxylic acids,and benzoic acids"

2025-02-12 21:00:43 - root - INFO - itercount: 0
2025-02-12 21:00:43 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

Database Name: PATENTS
Schema Name: PATENTS
,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

Database Name: PATENTS
Schema Name: PATENTS
,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
### Document: Sliding Window Calculation for Weighted Moving Average

#### 1. **Overview**
In the SQL query, the **Weighted Moving Average (WMA)** method is applied to smooth the annual patent filing counts for each CPC technology area and identify the "best year" for each CPC group. This sliding window calculation is used to highlight years with significant patent filing activity by giving more weight to recent years while considering past data.

The goal of this method is to reduce the impact of short-term fluctuations and better capture long-term trends in patent filing activities, particularly in fast-evolving technology areas.

#### 2. **Weighted Moving Average (WMA) Calculation**

##### 2.1 **Definition**
Weighted Moving Average (WMA) is a method where each data point is given a different weight, with more recent data points typically receiving higher weights. This approach is useful for identifying trends over time while minimizing the effect of older data that might not be as relevant.

##### 2.2 **Formula**
The formula for calculating the Weighted Moving Average is as follows:

\[
WMA_t = \alpha \cdot x_t + (1 - \alpha) \cdot WMA_{t-1}
\]

Where:
- \(WMA_t\): The weighted moving average for the current year (t).
- \(x_t\): The patent filing count for the current year.
- \(WMA_{t-1}\): The weighted moving average for the previous year.
- \(\alpha\): The smoothing factor (in this case, 0.1).

##### 2.3 **Explanation**
- **Smoothing Factor (\(\alpha\))**: The smoothing factor determines how much weight is given to the most recent data point. In this case, the smoothing factor is 0.1, meaning 10% of the weight is assigned to the current year's filing count, and the remaining 90% is based on the previous year’s moving average.
- **Sliding Window**: As we move through the years, the weighted average continuously updates using the most recent filing count and the previous year's weighted average. This creates a "sliding window" where each year's filing count is incorporated into the calculation.

The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **PUBLICATIONS Table:**
  - **"application_number"**: Used to filter patents with non-empty application numbers.
  - **"filing_date"**: Used to extract the filing year and ensure the filing date is valid.
  - **"cpc"**: Contains CPC codes (as VARIANT), from which we can extract the first CPC code for each patent.

- **CPC_DEFINITION Table:**
  - **"symbol"**: Represents the CPC code, used to join with the CPC code from the PUBLICATIONS table.
  - **"level"**: Used to filter CPC codes at level 5.
  - **"titleFull"**: Provides the full title of the CPC code, which we need to report.

**Conditions to Use:**

- **Non-empty Application Number**: `"application_number" IS NOT NULL AND "application_number" <> ''`
- **Valid Filing Date**: `"filing_date" IS NOT NULL` (assuming valid dates are non-null)
- **First CPC Code Only**: Extract the first element from the `"cpc"` array.
- **CPC Level 5 Codes**: Filter `"level" = 5` in the CPC_DEFINITION table.

**Sample SQL Queries:**

1. **View the First 100 Non-empty Application Numbers:**
   ```sql
   SELECT DISTINCT "application_number"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "application_number" IS NOT NULL AND "application_number" <> ''
   LIMIT 100;
   ```

2. **View the Filing Dates for the First 100 Records with Valid Filing Dates:**
   ```sql
   SELECT "filing_date"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "filing_date" IS NOT NULL
   LIMIT 100;
   ```

3. **Extract the First CPC Code from the "cpc" Column:**
   ```sql
   SELECT p."publication_number", f.value::VARIANT::STRING AS "first_cpc_code"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
   LATERAL FLATTEN(input => p."cpc") f
   LIMIT 100;
   ```

4. **View the Structure of the "cpc" Column for 100 Records:**
   ```sql
   SELECT f.value
   FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
   LATERAL FLATTEN(input => p."cpc") f
   LIMIT 100;
   ```

5. **Get CPC Codes and Their Levels from the CPC_DEFINITION Table:**
   ```sql
   SELECT DISTINCT "symbol", "level"
   FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
   LIMIT 100;
   ```

6. **Get CPC Codes at Level 5 from the CPC_DEFINITION Table:**
   ```sql
   SELECT "symbol", "titleFull"
   FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
   WHERE "level" = 5
   LIMIT 100;
   ```

7. **Join First CPC Codes with CPC Definitions at Level 5:**
   ```sql
   SELECT c."symbol", c."titleFull"
   FROM (
     SELECT f.value::VARIANT::STRING AS "first_cpc_code"
     FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
     LATERAL FLATTEN(input => p."cpc") f
     LIMIT 100
   ) AS pc
   JOIN "PATENTS"."PATENTS"."CPC_DEFINITION" c
   ON pc."first_cpc_code" = c."symbol"
   WHERE c."level" = 5
   LIMIT 100;
   ```

8. **Count the Number of Patents per Filing Year:**
   ```sql
   SELECT YEAR(TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "filing_year", COUNT(*) AS "patent_count"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "filing_date" IS NOT NULL
   GROUP BY "filing_year"
   ORDER BY "filing_year"
   LIMIT 100;
   ```

9. **List Patents with Non-empty Application Numbers and Valid Filing Dates:**
   ```sql
   SELECT "publication_number", "application_number", "filing_date"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "application_number" IS NOT NULL AND "application_number" <> ''
   AND "filing_date" IS NOT NULL
   LIMIT 100;
   ```

10. **Extract Patent Titles Along with First CPC Code:**
    ```sql
    SELECT p."publication_number", t.value::VARIANT::STRING AS "title", f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."title_localized") t,
    LATERAL FLATTEN(input => p."cpc") f
    LIMIT 100;
    ```

11. **View the Titles of Level 5 CPC Codes from CPC_DEFINITION:**
    ```sql
    SELECT "symbol", "titleFull"
    FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE "level" = 5
    LIMIT 100;
    ```

12. **Find the Filing Years and Corresponding Patent Counts for Each Year:**
    ```sql
    SELECT TO_VARCHAR(TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'YYYY') AS "filing_year", COUNT(*) AS "patent_count"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS"
    WHERE "filing_date" IS NOT NULL
    GROUP BY "filing_year"
    ORDER BY "filing_year"
    LIMIT 100;
    ```

13. **List Distinct First CPC Codes from Publications:**
    ```sql
    SELECT DISTINCT f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."cpc", outer => FALSE, mode => 'array') f
    LIMIT 100;
    ```

14. **Combine Application Number, Filing Date, and First CPC Code:**
    ```sql
    SELECT p."application_number", p."filing_date", f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."cpc", outer => FALSE, mode => 'array') f
    WHERE p."application_number" IS NOT NULL AND p."application_number" <> ''
    AND p."filing_date" IS NOT NULL
    LIMIT 100;
    ```

15. **Check the Structure of the "title_localized" Column:**
    ```sql
    SELECT t.value
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."title_localized") t
    LIMIT 100;
    ```

**Note:** In the above queries, we're using `LATERAL FLATTEN` to extract elements from VARIANT columns like `"cpc"` and `"title_localized"`. We ensure all column names are enclosed in double quotations, and we use `LIMIT 100` to restrict the result set to 100 rows as per the instructions.Query:
SELECT DISTINCT "application_number"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "application_number" IS NOT NULL AND "application_number" <> ''
   LIMIT 100;
Answer:
application_number
US-201213474229-A
US-201515301591-A
US-201213727956-A
US-201314037090-A
US-201615779282-A
US-201815940360-A
LU-41565D-A
AR-P130104719-A
US-201917259556-A
US-202117488151-A
US-202217847521-A
US-202318100229-A
US-202318118483-A
US-202318196781-A
US-202117904682-A
US-202218059574-A
EP-01130275-A
US-202118004159-A
US-2017038259-W
US-2017049272-W
US-2022029510-W
US-2022043079-W
DE-102012020674-A
DE-102016125191-A
DE-102021214720-A
DE-102019125712-A
CN-202220391266-U
CN-202123435349-U
CN-202220573254-U
CN-202220442667-U
CN-202220692784-U
US-202218571558-A
DD-22909681-A
US-71411646-A
US-46044554-A
US-46584754-A
US-13679550-A
CA-689064D-A
US-564845D-A
DD-14671D-A
DE-102008034854-A
US-201514731709-A
US-201514803565-A
US-201515516995-A
US-89612504-A
US-85277104-A
US-17118605-A
DE-8129640-U
PL-20708216-T
DE-20010922-U
AU-2012213056-A
AU-2019213327-A
AU-2021461372-A
CL-2009001242-A
CN-2014082524-W
CN-2020089189-W
US-202117403089-A
US-202017593160-A
US-202017755631-A
US-202217979376-A
CA-423429-A
BE-618741-A
CH-34785D-A
CH-66089D-A
US-201715638684-A
US-201414908160-A
US-201715626091-A
US-201214363900-A
US-201715746292-A
US-12717608-A
US-201615295135-A
US-201715646111-A
US-201816188377-A
US-62378956-A
US-46345742-A
US-16605450-A
US-67491533-A
US-1912721891-A
CA-30631D-A
KR-19940700442-A
KR-20020030070-A
KR-19990065717-A
KR-19997009558-A
KR-20030095701-A
KR-19970708040-A
KR-20050125950-A
CN-202120446528-U
CN-202120518914-U
JP-2010027766-A
JP-2010123823-A
JP-2014164235-A
JP-2011164779-A
JP-2013259713-A
JP-2014503291-A
US-201715467252-A
US-201615771734-A
US-201915733842-A
US-201815938146-A
US-201916382278-A
US-201816112905-A
Query:
SELECT "filing_date"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "filing_date" IS NOT NULL
   LIMIT 100;
Answer:
filing_date
19971015
19990322
0
19830217
19900109
19900101
19860106
0
19480102
19800125
19820209
19820219
19700116
19700224
19700501
0
18901220
19690318
19660117
18940609
18941217
18950125
0
19620924
19650616
19660402
19660506
19660704
19660725
19661121
19600102
19580106
19290107
19400116
19870521
19840705
19920730
19781012
19861030
19910225
19860106
19930106
20150702
19830922
19860626
19730907
19780905
19820512
19880217
19900307
0
19790102
0
0
19710204
19971230
19880317
19820430
19750221
19830503
19810413
19780313
19820518
19820524
19800416
19901205
19860918
19850916
19730328
19851029
19750527
19770706
19750707
19791105
19781012
19721012
19781219
19730906
19731029
19740405
19741216
19750221
19750925
19760105
19760123
19760331
19761125
19770324
19770413
19770802
19771125
19780505
19780613
19780712
19780717
19781020
19790110
19790718
19800918
19520218
Query:
SELECT p."publication_number", f.value::VARIANT::STRING AS "first_cpc_code"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
   LATERAL FLATTEN(input => p."cpc") f
   LIMIT 100;
Answer:
Too long, hard cut:
publication_number,first_cpc_code
DE-69427315-T2,"{""code"":""C08L83/00"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L25/06"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J5/18"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2367/03"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J3/24"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29C55/12"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L67/03"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2425/06"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29K2995/0072"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29K2995/0072"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2425/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L67/02"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2367/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J5/18"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J5/18"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69427315-T2,"{""code"":""B29K2995/0072"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2425/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""Y10T428/254"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08J2367/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""Y10T428/254"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69427315-T2,"{""code"":""C08L67/02"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69611147-T2,"{""code"":""E05B77/00"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69611147-T2,"{""code"":""E05B17/0058"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69614271-T2,"{""code"":""C07K14/705"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69614271-T2,"{""code"":""A61K48/00"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69630331-T2,"{""code"":""G06F7/725"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69630331-T2,"{""code"":""H04L9/0844"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69630331-T2,"{""code"":""H04L9/0838"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69630331-T2,"{""code"":""H04L9/0844"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69630331-T2,"{""code"":""G06F7/725"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2503/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N5/0621"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2503/02"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2510/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N5/0621"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69636755-T2,"{""code"":""C12N2510/04"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/04"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12674"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/20"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/31678"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12458"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/31678"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12458"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/20"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/31504"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B41N1/00"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/09"",""first"":true,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B2367/00"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/20"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12493"",""first"":false,""inventive"":false,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/043"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/36"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B27/08"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""B32B15/04"",""first"":false,""inventive"":true,""tree"":[]}"
DE-69728658-T2,"{""code"":""Y10T428/12493"",""first"":false,""inventive"":f
Query:
SELECT f.value
   FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
   LATERAL FLATTEN(input => p."cpc") f
   LIMIT 100;
Answer:
Too long, hard cut:
VALUE
"{
  ""code"": ""Y02P70/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E10/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/7072"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T90/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/70"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""E04B2/967"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02E20/16"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J2250/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J2240/90"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J2235/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04836"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/0483"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04593"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04575"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F25J3/04545"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02P60/21"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02W30/40"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E50/30"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02A20/108"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02B20/40"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E10/20"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F16K15/026"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K2200/303"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F16K1/54"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K15/063"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K15/025"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K1/38"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K1/46"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K27/029"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F16K17/04"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02P70/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""A47J43/24"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B07B1/46"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""A23N12/02"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B01D35/02"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02W30/40"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02P70/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F24F1/48"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F24F1/38"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02P70/10"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""B65D41/485"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""B65D2401/35"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""B65D2401/20"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""B65D2401/25"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H02J7/1492"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H02P9/48"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/92"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/70"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F02P1/086"",
 
Query:
SELECT DISTINCT "symbol", "level"
   FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
   LIMIT 100;
Answer:
symbol,level
B,2.0
Y,2.0
E,2.0
C,2.0
G,2.0
A42,4.0
A47,4.0
A46,4.0
A21,4.0
A41,4.0
B21,4.0
B31,4.0
B63,4.0
B07,4.0
C06,4.0
C07,4.0
C11,4.0
C14,4.0
F22,4.0
F21,4.0
G10,4.0
G01,4.0
A01B,5.0
A61B,5.0
A61P,5.0
B66,4.0
B61,4.0
B24,4.0
B05,4.0
C02,4.0
C25,4.0
C03,4.0
D04,4.0
D10,4.0
D05,4.0
F41,4.0
F04,4.0
F99,4.0
G05,4.0
G03,4.0
H99,4.0
A23P,5.0
A23J,5.0
A44D,5.0
A45F,5.0
A45B,5.0
E02,4.0
F01,4.0
F26,4.0
F25,4.0
Y10,4.0
A44C,5.0
A61D,5.0
A62B,5.0
B01D,5.0
B04C,5.0
B01,4.0
F03,4.0
A21D,5.0
A99,4.0
B30,4.0
B43,4.0
C40,4.0
D07,4.0
E05,4.0
E01,4.0
E03,4.0
F24,4.0
F28,4.0
G21,4.0
G11,4.0
A01K,5.0
A01J,5.0
A23L,5.0
A61M,5.0
A61J,5.0
A63J,5.0
C23,4.0
C04,4.0
E04,4.0
H10,4.0
A01M,5.0
A24D,5.0
A41H,5.0
A42B,5.0
A43C,5.0
A44B,5.0
A47F,5.0
A47G,5.0
A47K,5.0
A61F,5.0
A61L,5.0
A63G,5.0
A63K,5.0
B01B,5.0
B01F,5.0
B09C,5.0
B21L,5.0
A01P,5.0
A46D,5.0
Query:
SELECT "symbol", "titleFull"
   FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
   WHERE "level" = 5
   LIMIT 100;
Answer:
Too long, hard cut:
symbol,titleFull
A01H,NEW PLANTS OR NON-TRANSGENIC PROCESSES FOR OBTAINING THEM; PLANT REPRODUCTION BY TISSUE CULTURE TECHNIQUES
A01F,PROCESSING OF HARVESTED PRODUCE; HAY OR STRAW PRESSES; DEVICES FOR STORING AGRICULTURAL OR HORTICULTURAL PRODUCE
A01C,PLANTING; SOWING; FERTILISING
A01G,"HORTICULTURE; CULTIVATION OF VEGETABLES, FLOWERS, RICE, FRUIT, VINES, HOPS OR SEAWEED; FORESTRY; WATERING"
A01N,"PRESERVATION OF BODIES OF HUMANS OR ANIMALS OR PLANTS OR PARTS THEREOF; BIOCIDES, e.g. AS DISINFECTANTS, AS PESTICIDES OR AS HERBICIDES; PEST REPELLANTS OR ATTRACTANTS; PLANT GROWTH REGULATORS"
A01P,"BIOCIDAL, PEST REPELLANT, PEST ATTRACTANT OR PLANT GROWTH REGULATORY ACTIVITY OF CHEMICAL COMPOUNDS OR PREPARATIONS"
A01D,HARVESTING; MOWING
A01L,SHOEING OF ANIMALS
A01K,"ANIMAL HUSBANDRY; AVICULTURE; APICULTURE; PISCICULTURE; FISHING; REARING OR BREEDING ANIMALS, NOT OTHERWISE PROVIDED FOR; NEW BREEDS OF ANIMALS"
A01M,"CATCHING, TRAPPING OR SCARING OF ANIMALS; APPARATUS FOR THE DESTRUCTION OF NOXIOUS ANIMALS OR NOXIOUS PLANTS"
A01J,MANUFACTURE OF DAIRY PRODUCTS
A01B,"SOIL WORKING IN AGRICULTURE OR FORESTRY; PARTS, DETAILS, OR ACCESSORIES OF AGRICULTURAL MACHINES OR IMPLEMENTS, IN GENERAL"
A21D,"TREATMENT, e.g. PRESERVATION, OF FLOUR OR DOUGH, e.g. BY ADDITION OF MATERIALS; BAKING; BAKERY PRODUCTS; PRESERVATION THEREOF"
A21C,MACHINES OR EQUIPMENT FOR MAKING OR PROCESSING DOUGHS; HANDLING BAKED ARTICLES MADE FROM DOUGH
A21B,BAKERS' OVENS; MACHINES OR EQUIPMENT FOR BAKING
A22B,SLAUGHTERING
A22C,"PROCESSING MEAT, POULTRY, OR FISH"
A23P,"SHAPING OR WORKING OF FOODSTUFFS, NOT FULLY COVERED BY A SINGLE OTHER SUBCLASS"
A23C,"DAIRY PRODUCTS, e.g. MILK, BUTTER OR CHEESE; MILK OR CHEESE SUBSTITUTES; MAKING THEREOF"
A23J,PROTEIN COMPOSITIONS FOR FOODSTUFFS; WORKING-UP PROTEINS FOR FOODSTUFFS; PHOSPHATIDE COMPOSITIONS FOR FOODSTUFFS
A23K,FODDER
A23L,"FOODS, FOODSTUFFS, OR NON-ALCOHOLIC BEVERAGES, NOT COVERED BY SUBCLASSES A21D OR A23B-A23J; THEIR PREPARATION OR TREATMENT, e.g. COOKING, MODIFICATION OF NUTRITIVE QUALITIES, PHYSICAL TREATMENT; PRESERVATION OF FOODS OR FOODSTUFFS, IN GENERAL"
A23N,"MACHINES OR APPARATUS FOR TREATING HARVESTED FRUIT, VEGETABLES OR FLOWER BULBS IN BULK, NOT OTHERWISE PROVIDED FOR; PEELING VEGETABLES OR FRUIT IN BULK; APPARATUS FOR PREPARING ANIMAL FEEDING- STUFFS"
A23V,"INDEXING SCHEME RELATING TO FOODS, FOODSTUFFS OR NON-ALCOHOLIC BEVERAGES AND LACTIC OR PROPIONIC ACID BACTERIA USED IN FOODSTUFFS OR FOOD PREPARATION"
A23F,"COFFEE; TEA; THEIR SUBSTITUTES; MANUFACTURE, PREPARATION, OR INFUSION THEREOF"
A23G,"COCOA; COCOA PRODUCTS, e.g. CHOCOLATE; SUBSTITUTES FOR COCOA OR COCOA PRODUCTS; CONFECTIONERY; CHEWING GUM; ICE-CREAM; PREPARATION THEREOF"
A23B,"PRESERVING, e.g. BY CANNING, MEAT, FISH, EGGS, FRUIT, VEGETABLES, EDIBLE SEEDS; CHEMICAL RIPENING OF FRUIT OR VEGETABLES; THE PRESERVED, RIPENED, OR CANNED PRODUCTS"
A23D,"EDIBLE OILS OR FATS, e.g. MARGARINES, SHORTENINGS, COOKING OILS"
A24C,MACHINES FOR MAKING CIGARS OR CIGARETTES
A24D,CIGARS; CIGARETTES; TOBACCO SMOKE FILTERS; MOUTHPIECES FOR CIGARS OR CIGARETTES; MANUFACTURE OF TOBACCO SMOKE FILTERS OR MOUTHPIECES
A24F,SMOKERS' REQUISITES; MATCH BOXES; SIMULATED SMOKING DEVICES
A24B,MANUFACTURE OR PREPARATION OF TOBACCO FOR SMOKING OR CHEWING; TOBACCO; SNUFF
A41F,GARMENT FASTENINGS; SUSPENDERS
A41G,ARTIFICIAL FLOWERS; WIGS; MASKS; FEATHERS
A41B,SHIRTS; UNDERWEAR; BABY LINEN; HANDKERCHIEFS
A41D,OUTERWEAR; PROTECTIVE GARMENTS; ACCESSORIES
A41C,CORSETS; BRASSIERES
A41H,"APPLIANCES OR METHODS FOR MAKING CLOTHES, e.g. FOR DRESS-MAKING OR FOR TAILORING, NOT OTHERWISE PROVIDED FOR"
A42B,HATS; HEAD COVERINGS
A42C,"MANUFACTURING OR TRIMMING HEAD COVERINGS, e.g. HATS"
A43B,CHARACTERISTIC FEATURES OF FOOTWEAR; PARTS OF FOOTWEAR
A43C,FASTENINGS OR ATTACHMENTS OF FOOTWEAR; LACES IN GENERAL
A43D,"MACHINES, TOOLS, EQUIPMENT OR METHODS FOR MANUFACTURING OR REPAIRING FOOTWEAR"
A44D,"INDEXING SCHEME RELATING TO BUTTONS, PINS, BUCKLES OR SLIDE FASTENERS, AND TO JEWELLERY, BRACELETS OR OTHER PERSONAL ADORNMENTS"
A44B,"BUTTONS, PINS, BUCKLES, SLIDE FASTENERS, OR THE LIKE"
A44C,"PERSONAL ADORNMENTS, e.g. JEWELLERY; COINS"
A45F,TRAVELLING OR CAMP EQUIPMENT: SACKS OR PACKS CARRIED ON THE BODY
A45C,PURSES; LUGGAGE; HAND CARRIED BAGS
A45D,"HAIRDRESSING OR SHAVING EQUIPMENT; EQUIPMENT FOR COSMETICS OR COSMETIC TREATMENTS, e.g. FOR MANICURING OR PEDICURING"
A45B,WALKING STICKS; UMBRELLAS; LADIES' OR LIKE FANS
A46D,MANUFACTURE OF BRUSHES
A46B,BRUSHES
A47L,DOMESTIC WASHING OR CLEANING; SUCTION CLEANERS IN GENERAL
A47F,"SPECIAL FURNITURE, FITTINGS, OR ACCESSORIES FOR SHOPS, STOREHOUSES, BARS, RESTAURANTS OR THE LIKE; PAYING COUNTERS"
A47D,FURNITURE SPECIALLY ADAPTED FOR CHILDREN
A47G,HOUSEHOLD OR TABLE EQUIPMENT
A47K,SANITARY EQUIPMENT NOT OTHERWISE PROVIDED FOR; TOILET ACCESSORIES
A47H,FURNISHINGS FOR WINDOWS OR DOORS
A47B,TABLES; DESKS; OFFICE FURNITURE; CABINETS; DRAWERS; GENERAL DETAILS OF FURNITURE
A47C,CHAIRS; SOFAS; BEDS
A47J,KITCHEN EQUIPMENT; COFFEE MILLS; SPICE MILLS; APPA
Query:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        p."filing_date",
        f.value::VARIANT:"code"::STRING AS "first_cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p
        LEFT JOIN LATERAL FLATTEN(input => p."cpc") f ON TRUE
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND p."filing_date" IS NOT NULL
)
,
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date",
        "first_cpc_code"
    FROM
        first_cpc_codes
    WHERE
        rn = 1
        AND "first_cpc_code" IS NOT NULL
)
,
patent_filings AS (
    SELECT
        fc."first_cpc_code" AS "cpc_code",
        CAST(SUBSTRING(fc."filing_date"::VARCHAR(8), 1, 4) AS INTEGER) AS "filing_year"
    FROM
        first_cpc_per_patent fc
    WHERE
        fc."filing_date"::VARCHAR(8) NOT LIKE '0%'
)
,
yearly_filings AS (
    SELECT
        pf."cpc_code",
        pf."filing_year",
        COUNT(*) AS "filing_count"
    FROM
        patent_filings pf
    GROUP BY
        pf."cpc_code",
        pf."filing_year"
),
best_years AS (
    SELECT
        yf."cpc_code",
        yf."filing_year" AS "best_year",
        yf."filing_count"
    FROM (
        SELECT
            "cpc_code",
            MAX("filing_count") AS "max_filing_count"
        FROM
            yearly_filings
        GROUP BY
            "cpc_code"
    ) mf
    JOIN yearly_filings yf ON
        yf."cpc_code" = mf."cpc_code" AND yf."filing_count" = mf."max_filing_count"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT
    ct."titleFull" AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years AS bys
    JOIN cpc_titles ct ON bys."cpc_code" = ct."symbol"
LIMIT 100;
Answer:
000002 (0A000): 01ba59ca-0004-9c12-0001-11c301137f8e: Unsupported feature 'lateral table function called with OUTER JOIN syntax or a join predicate (ON clause)'.Query:
SELECT YEAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "filing_year", COUNT(*) AS "patent_count"
FROM "PATENTS"."PATENTS"."PUBLICATIONS"
WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
GROUP BY "filing_year"
ORDER BY "filing_year"
LIMIT 100;
Answer:
filing_year,patent_count
1846,1
1853,1
1860,1
1867,1
1877,4
1880,1
1881,2
1882,3
1883,2
1885,4
1886,3
1887,3
1888,3
1889,10
1890,4
1891,9
1892,10
1893,18
1894,34
1895,28
1896,44
1897,44
1898,51
1899,110
1900,81
1901,91
1902,100
1903,111
1904,136
1905,149
1906,189
1907,197
1908,160
1909,155
1910,164
1911,228
1912,276
1913,275
1914,197
1915,171
1916,173
1917,143
1918,111
1919,149
1920,173
1921,208
1922,159
1923,166
1924,174
1925,203
1926,214
1927,211
1928,243
1929,264
1930,272
1931,263
1932,219
1933,236
1934,298
1935,314
1936,335
1937,295
1938,346
1939,309
1940,289
1941,288
1942,211
1943,270
1944,248
1945,256
1946,302
1947,327
1948,300
1949,329
1950,357
1951,354
1952,382
1953,387
1954,478
1955,472
1956,519
1957,493
1958,514
1959,575
1960,552
1961,566
1962,573
1963,544
1964,857
1965,942
1966,1036
1967,1011
1968,1085
1969,1427
1970,1478
1971,2192
1972,2741
1973,3017
1974,3091
1975,3236
Query:
SELECT "publication_number", "application_number", "filing_date"
   FROM "PATENTS"."PATENTS"."PUBLICATIONS"
   WHERE "application_number" IS NOT NULL AND "application_number" <> ''
   AND "filing_date" IS NOT NULL
   LIMIT 100;
Answer:
publication_number,application_number,filing_date
CR-5634-A,CR-5634-A,19971015
CR-5990-A,CR-5990-A,19990322
FI-429-A,FI-429D-A,0
HK-6083-A,HK-6083-A,19830217
HU-T52763-A,HU-7590-A,19900109
JP-H03206829-A,JP-4890-A,19900101
JP-S62159089-A,JP-6286-A,19860106
US-416-A,US-416D-A,0
US-2528225-A,US-9948-A,19480102
AT-A41580-A,AT-41580-A,19800125
AT-A47682-A,AT-47682-A,19820209
AT-A63682-A,AT-63682-A,19820219
CA-920790-A,CA-72337-A,19700116
CA-950907-A,CA-75688-A,19700224
CA-920830-A,CA-81627-A,19700501
CA-9086-A,CA-9086D-A,0
CH-3256-A,CH-3256D-A,18901220
CH-540255-A,CH-32972-A,19690318
CH-433637-A,CH-59566-A,19660117
CH-8494-A,CH-8494D-A,18940609
CH-9587-A,CH-9587D-A,18941217
CH-9968-A,CH-9968D-A,18950125
DD-8297-A,DD-8297D-A,0
FR-1334211-A,FR-19873-A,19620924
FR-1444995-A,FR-20966-A,19650616
FR-1474468-A,FR-56170-A,19660402
FR-1478988-A,FR-60658-A,19660506
FR-1485992-A,FR-68041-A,19660704
FR-1487706-A,FR-70755-A,19660725
FR-1508237-A,FR-84394-A,19661121
GB-893001-A,GB-15660-A,19600102
GB-873984-A,GB-50958-A,19580106
GB-307790-A,GB-54729-A,19290107
GB-534192-A,GB-93140-A,19400116
HK-39487-A,HK-39487-A,19870521
HK-52284-A,HK-52284-A,19840705
HK-55992-A,HK-55992-A,19920730
HK-60178-A,HK-60178-A,19781012
HK-82486-A,HK-82486-A,19861030
HU-T58725-A,HU-62391-A,19910225
JP-S62157892-A,JP-42386-A,19860106
JP-H06198910-A,JP-67093-A,19930106
MA-42286-A,MA-42286-A,20150702
OA-07542-A,OA-58112-A,19830922
OA-08399-A,OA-58887-A,19860626
PH-11723-A,PH-14999-A,19730907
PH-15213-A,PH-21568-A,19780905
PH-17928-A,PH-27280-A,19820512
PH-23905-A,PH-36517-A,19880217
TR-26506-A,TR-25990-A,19900307
US-4613-A,US-4613D-A,0
US-4234270-A,US-59779-A,19790102
US-6310-A,US-6310D-A,0
US-8947-A,US-8947D-A,0
YU-24971-A,YU-24971-A,19710204
YU-51397-A,YU-51397-A,19971230
YU-53588-A,YU-53588-A,19880317
YU-94082-A,YU-94082-A,19820430
AT-A134275-A,AT-134275-A,19750221
AT-A160683-A,AT-160683-A,19830503
AT-A168281-A,AT-168281-A,19810413
AT-A179178-A,AT-179178-A,19780313
AT-A196182-A,AT-196182-A,19820518
AT-A202882-A,AT-202882-A,19820524
AT-A205780-A,AT-205780-A,19800416
AT-A245590-A,AT-245590-A,19901205
AT-A250686-A,AT-250686-A,19860918
AT-A269985-A,AT-269985-A,19850916
AT-A272073-A,AT-272073-A,19730328
AT-A312885-A,AT-312885-A,19851029
AT-A404675-A,AT-404675-A,19750527
AT-A482077-A,AT-482077-A,19770706
AT-A519575-A,AT-519575-A,19750707
AT-A710279-A,AT-710279-A,19791105
AT-A735378-A,AT-735378-A,19781012
AT-A876472-A,AT-876472-A,19721012
AT-A906278-A,AT-906278-A,19781219
BE-804534-A,BE-135378-A,19730906
BE-806687-A,BE-137212-A,19731029
BE-813367-A,BE-142905-A,19740405
BE-823416-A,BE-151562-A,19741216
BE-825816-A,BE-153592-A,19750221
BE-833811-A,BE-160369-A,19750925
BE-837312-A,BE-163314-A,19760105
BE-837857-A,BE-163757-A,19760123
BE-840231-A,BE-165719-A,19760331
BE-848755-A,BE-172709-A,19761125
BE-852837-A,BE-176081-A,19770324
BE-853553-A,BE-176682-A,19770413
BE-857395-A,BE-179841-A,19770802
BE-861199-A,BE-182921-A,19771125
BE-866723-A,BE-187407-A,19780505
BE-868080-A,BE-188538-A,19780613
BE-868938-A,BE-189232-A,19780712
BE-869056-A,BE-189327-A,19780717
BE-871421-A,BE-191250-A,19781020
BE-873394-A,BE-192832-A,19790110
BE-877768-A,BE-196360-A,19790718
BE-885287-A,BE-202146-A,19800918
BE-509322-A,BE-509322-A,19520218
Query:
SELECT p."publication_number", t.value::VARIANT::STRING AS "title", f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."title_localized") t,
    LATERAL FLATTEN(input => p."cpc") f
    LIMIT 100;
Answer:
Too long, hard cut:
publication_number,title,first_cpc_code
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/06"",""first"":false,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/235"",""first"":true,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/285"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/98"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/213"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-10220314-B2,"{""language"":""en"",""text"":""Game system and controller"",""truncated"":false}","{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q16/102"",""first"":true,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q2210/004"",""first"":false,""inventive"":false,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q1/70"",""first"":false,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""Y10T409/309296"",""first"":false,""inventive"":false,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""Y10T409/307672"",""first"":false,""inventive"":false,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q1/70"",""first"":true,""inventive"":true,""tree"":[]}"
US-8519587-B2,"{""language"":""en"",""text"":""Angular indexing apparatus for machine tool"",""truncated"":false}","{""code"":""B23Q3/00"",
Query:
SELECT "symbol", "titleFull"
    FROM "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE "level" = 5
    LIMIT 100;
Answer:
Too long, hard cut:
symbol,titleFull
A01H,NEW PLANTS OR NON-TRANSGENIC PROCESSES FOR OBTAINING THEM; PLANT REPRODUCTION BY TISSUE CULTURE TECHNIQUES
A01F,PROCESSING OF HARVESTED PRODUCE; HAY OR STRAW PRESSES; DEVICES FOR STORING AGRICULTURAL OR HORTICULTURAL PRODUCE
A01C,PLANTING; SOWING; FERTILISING
A01G,"HORTICULTURE; CULTIVATION OF VEGETABLES, FLOWERS, RICE, FRUIT, VINES, HOPS OR SEAWEED; FORESTRY; WATERING"
A01N,"PRESERVATION OF BODIES OF HUMANS OR ANIMALS OR PLANTS OR PARTS THEREOF; BIOCIDES, e.g. AS DISINFECTANTS, AS PESTICIDES OR AS HERBICIDES; PEST REPELLANTS OR ATTRACTANTS; PLANT GROWTH REGULATORS"
A01P,"BIOCIDAL, PEST REPELLANT, PEST ATTRACTANT OR PLANT GROWTH REGULATORY ACTIVITY OF CHEMICAL COMPOUNDS OR PREPARATIONS"
A01D,HARVESTING; MOWING
A01L,SHOEING OF ANIMALS
A01K,"ANIMAL HUSBANDRY; AVICULTURE; APICULTURE; PISCICULTURE; FISHING; REARING OR BREEDING ANIMALS, NOT OTHERWISE PROVIDED FOR; NEW BREEDS OF ANIMALS"
A01M,"CATCHING, TRAPPING OR SCARING OF ANIMALS; APPARATUS FOR THE DESTRUCTION OF NOXIOUS ANIMALS OR NOXIOUS PLANTS"
A01J,MANUFACTURE OF DAIRY PRODUCTS
A01B,"SOIL WORKING IN AGRICULTURE OR FORESTRY; PARTS, DETAILS, OR ACCESSORIES OF AGRICULTURAL MACHINES OR IMPLEMENTS, IN GENERAL"
A21D,"TREATMENT, e.g. PRESERVATION, OF FLOUR OR DOUGH, e.g. BY ADDITION OF MATERIALS; BAKING; BAKERY PRODUCTS; PRESERVATION THEREOF"
A21C,MACHINES OR EQUIPMENT FOR MAKING OR PROCESSING DOUGHS; HANDLING BAKED ARTICLES MADE FROM DOUGH
A21B,BAKERS' OVENS; MACHINES OR EQUIPMENT FOR BAKING
A22B,SLAUGHTERING
A22C,"PROCESSING MEAT, POULTRY, OR FISH"
A23P,"SHAPING OR WORKING OF FOODSTUFFS, NOT FULLY COVERED BY A SINGLE OTHER SUBCLASS"
A23C,"DAIRY PRODUCTS, e.g. MILK, BUTTER OR CHEESE; MILK OR CHEESE SUBSTITUTES; MAKING THEREOF"
A23J,PROTEIN COMPOSITIONS FOR FOODSTUFFS; WORKING-UP PROTEINS FOR FOODSTUFFS; PHOSPHATIDE COMPOSITIONS FOR FOODSTUFFS
A23K,FODDER
A23L,"FOODS, FOODSTUFFS, OR NON-ALCOHOLIC BEVERAGES, NOT COVERED BY SUBCLASSES A21D OR A23B-A23J; THEIR PREPARATION OR TREATMENT, e.g. COOKING, MODIFICATION OF NUTRITIVE QUALITIES, PHYSICAL TREATMENT; PRESERVATION OF FOODS OR FOODSTUFFS, IN GENERAL"
A23N,"MACHINES OR APPARATUS FOR TREATING HARVESTED FRUIT, VEGETABLES OR FLOWER BULBS IN BULK, NOT OTHERWISE PROVIDED FOR; PEELING VEGETABLES OR FRUIT IN BULK; APPARATUS FOR PREPARING ANIMAL FEEDING- STUFFS"
A23V,"INDEXING SCHEME RELATING TO FOODS, FOODSTUFFS OR NON-ALCOHOLIC BEVERAGES AND LACTIC OR PROPIONIC ACID BACTERIA USED IN FOODSTUFFS OR FOOD PREPARATION"
A23F,"COFFEE; TEA; THEIR SUBSTITUTES; MANUFACTURE, PREPARATION, OR INFUSION THEREOF"
A23G,"COCOA; COCOA PRODUCTS, e.g. CHOCOLATE; SUBSTITUTES FOR COCOA OR COCOA PRODUCTS; CONFECTIONERY; CHEWING GUM; ICE-CREAM; PREPARATION THEREOF"
A23B,"PRESERVING, e.g. BY CANNING, MEAT, FISH, EGGS, FRUIT, VEGETABLES, EDIBLE SEEDS; CHEMICAL RIPENING OF FRUIT OR VEGETABLES; THE PRESERVED, RIPENED, OR CANNED PRODUCTS"
A23D,"EDIBLE OILS OR FATS, e.g. MARGARINES, SHORTENINGS, COOKING OILS"
A24C,MACHINES FOR MAKING CIGARS OR CIGARETTES
A24D,CIGARS; CIGARETTES; TOBACCO SMOKE FILTERS; MOUTHPIECES FOR CIGARS OR CIGARETTES; MANUFACTURE OF TOBACCO SMOKE FILTERS OR MOUTHPIECES
A24F,SMOKERS' REQUISITES; MATCH BOXES; SIMULATED SMOKING DEVICES
A24B,MANUFACTURE OR PREPARATION OF TOBACCO FOR SMOKING OR CHEWING; TOBACCO; SNUFF
A41F,GARMENT FASTENINGS; SUSPENDERS
A41G,ARTIFICIAL FLOWERS; WIGS; MASKS; FEATHERS
A41B,SHIRTS; UNDERWEAR; BABY LINEN; HANDKERCHIEFS
A41D,OUTERWEAR; PROTECTIVE GARMENTS; ACCESSORIES
A41C,CORSETS; BRASSIERES
A41H,"APPLIANCES OR METHODS FOR MAKING CLOTHES, e.g. FOR DRESS-MAKING OR FOR TAILORING, NOT OTHERWISE PROVIDED FOR"
A42B,HATS; HEAD COVERINGS
A42C,"MANUFACTURING OR TRIMMING HEAD COVERINGS, e.g. HATS"
A43B,CHARACTERISTIC FEATURES OF FOOTWEAR; PARTS OF FOOTWEAR
A43C,FASTENINGS OR ATTACHMENTS OF FOOTWEAR; LACES IN GENERAL
A43D,"MACHINES, TOOLS, EQUIPMENT OR METHODS FOR MANUFACTURING OR REPAIRING FOOTWEAR"
A44D,"INDEXING SCHEME RELATING TO BUTTONS, PINS, BUCKLES OR SLIDE FASTENERS, AND TO JEWELLERY, BRACELETS OR OTHER PERSONAL ADORNMENTS"
A44B,"BUTTONS, PINS, BUCKLES, SLIDE FASTENERS, OR THE LIKE"
A44C,"PERSONAL ADORNMENTS, e.g. JEWELLERY; COINS"
A45F,TRAVELLING OR CAMP EQUIPMENT: SACKS OR PACKS CARRIED ON THE BODY
A45C,PURSES; LUGGAGE; HAND CARRIED BAGS
A45D,"HAIRDRESSING OR SHAVING EQUIPMENT; EQUIPMENT FOR COSMETICS OR COSMETIC TREATMENTS, e.g. FOR MANICURING OR PEDICURING"
A45B,WALKING STICKS; UMBRELLAS; LADIES' OR LIKE FANS
A46D,MANUFACTURE OF BRUSHES
A46B,BRUSHES
A47L,DOMESTIC WASHING OR CLEANING; SUCTION CLEANERS IN GENERAL
A47F,"SPECIAL FURNITURE, FITTINGS, OR ACCESSORIES FOR SHOPS, STOREHOUSES, BARS, RESTAURANTS OR THE LIKE; PAYING COUNTERS"
A47D,FURNITURE SPECIALLY ADAPTED FOR CHILDREN
A47G,HOUSEHOLD OR TABLE EQUIPMENT
A47K,SANITARY EQUIPMENT NOT OTHERWISE PROVIDED FOR; TOILET ACCESSORIES
A47H,FURNISHINGS FOR WINDOWS OR DOORS
A47B,TABLES; DESKS; OFFICE FURNITURE; CABINETS; DRAWERS; GENERAL DETAILS OF FURNITURE
A47C,CHAIRS; SOFAS; BEDS
A47J,KITCHEN EQUIPMENT; COFFEE MILLS; SPICE MILLS; APPA
Query:
SELECT TO_VARCHAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'YYYY') AS "filing_year", COUNT(*) AS "patent_count"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS"
    WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
    GROUP BY "filing_year"
    ORDER BY "filing_year"
    LIMIT 100;
Answer:
filing_year,patent_count
1846,1
1853,1
1860,1
1867,1
1877,4
1880,1
1881,2
1882,3
1883,2
1885,4
1886,3
1887,3
1888,3
1889,10
1890,4
1891,9
1892,10
1893,18
1894,34
1895,28
1896,44
1897,44
1898,51
1899,110
1900,81
1901,91
1902,100
1903,111
1904,136
1905,149
1906,189
1907,197
1908,160
1909,155
1910,164
1911,228
1912,276
1913,275
1914,197
1915,171
1916,173
1917,143
1918,111
1919,149
1920,173
1921,208
1922,159
1923,166
1924,174
1925,203
1926,214
1927,211
1928,243
1929,264
1930,272
1931,263
1932,219
1933,236
1934,298
1935,314
1936,335
1937,295
1938,346
1939,309
1940,289
1941,288
1942,211
1943,270
1944,248
1945,256
1946,302
1947,327
1948,300
1949,329
1950,357
1951,354
1952,382
1953,387
1954,478
1955,472
1956,519
1957,493
1958,514
1959,575
1960,552
1961,566
1962,573
1963,544
1964,857
1965,942
1966,1036
1967,1011
1968,1085
1969,1427
1970,1478
1971,2192
1972,2741
1973,3017
1974,3091
1975,3236
Query:
SELECT DISTINCT f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."cpc", outer => FALSE, mode => 'array') f
    LIMIT 100;
Answer:
Too long, hard cut:
first_cpc_code
"{""code"":""Y02W30/80"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G06F1/1624"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""F01L2800/03"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""D05B87/00"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""G01N21/8507"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""F01D5/087"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""A61P9/04"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01H13/10"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04N21/234363"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H01M4/38"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04N13/161"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04L1/1621"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G01S13/06"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01Q1/27"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04W36/0077"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""E21B43/263"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C07K14/47"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""A61B2090/08021"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""C07K2317/75"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""A61M5/31511"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H03F3/45618"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B23K26/38"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C02F1/44"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B23K26/064"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G02B26/101"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""A61B5/0022"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04L67/75"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G05D1/024"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C07C2521/12"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G08G1/14"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G06V10/143"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B21B37/16"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""B32B2457/14"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G09G3/20"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G07D11/50"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01M6/5044"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C07K14/54"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G02B5/289"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""C07D307/84"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H05K1/16"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""A61K31/66"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""D06L4/70"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B21D39/021"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""B62B5/0404"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""Y10S29/104"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""Y10T428/2835"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""G06K9/00442"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""A61M5/2033"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H05K1/117"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""H01L51/441"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C08B37/14"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G01K15/007"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H01L29/1045"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""H04L67/63"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G03G2215/0145"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""H04L65/102"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C08J9/0014"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""C08K3/22"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""B65H2515/12"",""first"":false,""inventive"":false,""tree"":[]}"
"{""code"":""F16J1/22"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""B41F13/025"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H01M4/382"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""F28C1/00"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""H04N9/455"",""first"":true,""inventive"":true,""tree"":[]}"
"{""code"":""H04N5/91"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G06Q20/325"",""first"":false,""inventive"":true,""tree"":[]}"
"{""code"":""G01J1/32"",""first"":false,""inventive""
Query:
SELECT p."application_number", p."filing_date", f.value::VARIANT::STRING AS "first_cpc_code"
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."cpc", outer => FALSE, mode => 'array') f
    WHERE p."application_number" IS NOT NULL AND p."application_number" <> ''
    AND p."filing_date" IS NOT NULL
    LIMIT 100;
Answer:
Too long, hard cut:
application_number,filing_date,first_cpc_code
US-56520309-A,20090923,"{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/06"",""first"":false,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/235"",""first"":true,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/285"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/98"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/213"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1031"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F2300/1037"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/28"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/24"",""first"":false,""inventive"":false,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/235"",""first"":false,""inventive"":true,""tree"":[]}"
US-56520309-A,20090923,"{""code"":""A63F13/42"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q16/102"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q2210/004"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/70"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""Y10T409/309296"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""Y10T409/307672"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/70"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q3/00"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/52"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/0009"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""Y10T409/309352"",""first"":false,""inventive"":false,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q16/102"",""first"":true,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/70"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q1/0009"",""first"":false,""inventive"":true,""tree"":[]}"
US-59897808-A,20080513,"{""code"":""B23Q2210/004"",""first"":false,""inventive"":false,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/144"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/2283"",""first"":true,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/145"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/144"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C25/00"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""A01G3/002"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C25/00"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""A01G3/002"",""first"":false,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/2283"",""first"":true,""inventive"":true,""tree"":[]}"
US-59967208-A,20080501,"{""code"":""B02C18/145"",""first"":false,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""Y10S315/05"",""first"":false,""inventive"":false,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/2887"",""first"":true,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/3928"",""first"":false,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/2887"",""first"":true,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""code"":""H05B41/3928"",""first"":false,""inventive"":true,""tree"":[]}"
US-60663109-A,20091027,"{""
Query:
SELECT t.value
    FROM "PATENTS"."PATENTS"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."title_localized") t
    LIMIT 100;
Answer:
Too long, hard cut:
VALUE
"{
  ""language"": ""de"",
  ""text"": ""Luftbefeuchtungsapparat mit Zentraldüse"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Perfectionnements à un élément électrique chauffant amovible formant accumulateur de chaleur, utilisable en particulier dans des bigoudis chauffants ou analogues"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Heart pacers"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Vorrichtung zum herstellen eines garnes"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Katalytische brenneranordnung"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Plattenspieler"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Art of clarifying and settling varnishes and oils"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Art de clarifier les vernis et les huiles"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""A metallic blind"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Une persienne en metal"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Regulateur de vapeur"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Steam governor"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Circuit to analyze a signal amplitude range through frequency discrimination techniques"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Derives de l&#39;acide 5-thiazol carboxylique et procede de preparation"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Method for the attenuation of sound"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Charrue rotatoire a socs multiples"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Rotary gang plough"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""System for controlling vertical flight of aircraft"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Vorrichtung zur niveauregelung eines fahrzeuges."",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Absperrventil für ein- und doppelseitigen Winddruck (Saug- und Druckluft)"",
  ""truncated"": false
}"
"{
  ""language"": ""de"",
  ""text"": ""Rundlaufendes Werkzeug"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Procédé pour obtenir une vis taraudeuse à pointe en foret et moyen pour la mise en oeuvre du procédé"",
  ""truncated"": false
}"
"{
  ""language"": ""da"",
  ""text"": ""Pelsdyrplejebørste med integreret loppe/loppeæg sugningsanlæg"",
  ""truncated"": false
}"
"{
  ""language"": ""fi"",
  ""text"": ""Sätt att behandla aluminiumhaltiga resp. alkalialuminiumhaltiga ämnen"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Jeu de société"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Procédé et appareil pour injecter des fluides dans des formations souterraines"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Perfectionnements aux comparateurs électroniques de signaux"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Porte et système de manoeuvre pour armoire suspendue"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Procédé de préparation de copolymères améliorés et produits obtenus"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Matières pour emballage scellables à chaud"",
  ""truncated"": false
}"
"{
  ""language"": ""fr"",
  ""text"": ""Dispositif de revêtement mural, plus particulièrement destiné à l&#39;isolation thermique ou acoustique, ou bien à des fins décoratives et procédé pour la mise en place de ce dispositif"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Improvements in or relating to the separation of solid materials of different specific gravities"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Audio/video quality monitoring system"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Mirror finish polisher"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Flavouring compositions"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Aqueous liquid composition for external use"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Catenated phosphorus material,production and use thereof and devices employing same"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Noncorruptible read-writer and method"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Apparatus for matching the dc volume control characteristics of two audio channels"",
  ""truncated"": false
}"
"{
  ""language"": ""en"",
  ""text"": ""Process for the preparation of 2-(5,5-disubstituted-4-oxo-2-imidazolin-2-yl)-nicotinic acids,quinoline-3-carboxylic acids,and benzoic acids"
End Exploring Related Columns
Task: Identify the CPC technology areas with the highest exponential moving average of patent filings each year (with a smoothing factor of 0.2), considering only the first CPC code for each patent that has a valid filing date and a non-empty application number, and report the full CPC title along with the best year associated with the highest exponential moving average for each CPC group at level 5.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
CPC_Title,Best_Year
cpc_title:str,best_year:int
(Attention: answer in one row)
```

**Explanation:**

- **CPC_Title**: The full title of the CPC technology area at level 5 with the highest exponential moving average of patent filings.
- **Best_Year**: The year in which this CPC group had its highest exponential moving average, calculated using a smoothing factor of 0.2..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'PATENTS': {'PATENTS': ['DISCLOSURES_13', 'PUBLICATIONS', 'CPC_DEFINITION']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 21:01:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:01:28 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        f.value::VARIANT:"code"::STRING AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1 AND "cpc_code" IS NOT NULL
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ordered_filings AS (
    SELECT
        "cpc_code",
        "filing_year",
        "filing_count",
        ROW_NUMBER() OVER (PARTITION BY "cpc_code" ORDER BY "filing_year") AS rn
    FROM
        yearly_filings
),
emavg AS (
    SELECT
        o."cpc_code",
        o."filing_year",
        o."filing_count",
        CAST(o."filing_count" AS FLOAT) AS "ema",
        o.rn
    FROM ordered_filings o
    WHERE o.rn = 1
    UNION ALL
    SELECT
        o."cpc_code",
        o."filing_year",
        o."filing_count",
        0.2 * o."filing_count" + 0.8 * e."ema" AS "ema",
        o.rn
    FROM ordered_filings o
    INNER JOIN emavg e
    ON o."cpc_code" = e."cpc_code" AND o.rn = e.rn + 1
),
best_years AS (
    SELECT
        e1."cpc_code",
        e1."filing_year" AS "best_year",
        e1."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM emavg
        GROUP BY "cpc_code"
    ) e_max
    INNER JOIN emavg e1
    ON e1."cpc_code" = e_max."cpc_code" AND e1."ema" = e_max."max_ema"
)
SELECT
    cd."titleFull" AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    INNER JOIN "PATENTS"."PATENTS"."CPC_DEFINITION" cd
    ON bys."cpc_code" = cd."symbol"
WHERE
    cd."level" = 5
LIMIT 100;
```
2025-02-12 21:01:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:01:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:01:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:01:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 21:01:35 - snowflake.connector.connection - INFO - closed
2025-02-12 21:01:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:01:35 - root - INFO - itercount: 1
2025-02-12 21:01:35 - root - INFO - No data found for the specified query.

2025-02-12 21:01:35 - root - INFO - Input sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        f.value::VARIANT:"code"::STRING AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1 AND "cpc_code" IS NOT NULL
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ordered_filings AS (
    SELECT
        "cpc_code",
        "filing_year",
        "filing_count",
        ROW_NUMBER() OVER (PARTITION BY "cpc_code" ORDER BY "filing_year") AS rn
    FROM
        yearly_filings
),
emavg AS (
    SELECT
        o."cpc_code",
        o."filing_year",
        o."filing_count",
        CAST(o."filing_count" AS FLOAT) AS "ema",
        o.rn
    FROM ordered_filings o
    WHERE o.rn = 1
    UNION ALL
    SELECT
        o."cpc_code",
        o."filing_year",
        o."filing_count",
        0.2 * o."filing_count" + 0.8 * e."ema" AS "ema",
        o.rn
    FROM ordered_filings o
    INNER JOIN emavg e
    ON o."cpc_code" = e."cpc_code" AND o.rn = e.rn + 1
),
best_years AS (
    SELECT
        e1."cpc_code",
        e1."filing_year" AS "best_year",
        e1."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM emavg
        GROUP BY "cpc_code"
    ) e_max
    INNER JOIN emavg e1
    ON e1."cpc_code" = e_max."cpc_code" AND e1."ema" = e_max."max_ema"
)
SELECT
    cd."titleFull" AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    INNER JOIN "PATENTS"."PATENTS"."CPC_DEFINITION" cd
    ON bys."cpc_code" = cd."symbol"
WHERE
    cd."level" = 5
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-02-12 21:02:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:02:32 - root - INFO - It appears that the query is returning no data because recursive CTEs are not supported in Snowflake, and as a result, the Exponential Moving Average (EMA) calculation using recursion is not functioning as intended. To resolve this, we can calculate the EMA without recursion by leveraging window functions.

Here’s how we can adjust the query:

1. **Calculate the Exponential Weights:**
   For each CPC code and filing year, we calculate the weights based on the smoothing factor (α = 0.2). The weight for each prior year is calculated using the formula `(1 - α)^(years_since)`.

2. **Compute the EMA Using Window Functions:**
   We can compute the EMA by performing a weighted sum over the filing counts of previous years for each CPC code.

Below is the revised query that calculates the EMA without recursion:

```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        f.value:"code"::STRING AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1 AND "cpc_code" IS NOT NULL
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        -- Calculate EMA using window functions
        SUM(
            yf."filing_count" * POWER(0.8, DATEDIFF('year', yf."filing_year", yf2."filing_year"))
        ) OVER (
            PARTITION BY yf."cpc_code"
            ORDER BY yf."filing_year" ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        ) * 0.2 AS "ema"
    FROM
        yearly_filings yf
    JOIN yearly_filings yf2
        ON yf."cpc_code" = yf2."cpc_code" AND yf."filing_year" >= yf2."filing_year"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."symbol"
LIMIT 100;
```

**Explanation:**

- **first_cpc_codes:** Extracts the first CPC code for each patent.
- **first_cpc_per_patent:** Filters to keep only the first CPC code per patent with valid application numbers and filing dates.
- **yearly_filings:** Counts the number of filings per CPC code and filing year.
- **ema_calculations:**

  - **Calculates the EMA using window functions:**
    - We use the formula for EMA without recursion:  
      \[
      EMA_t = \alpha \times y_t + \alpha \times (1 - \alpha) \times y_{t-1} + \alpha \times (1 - \alpha)^2 \times y_{t-2} + \dots
      \]
    - In SQL, we perform a weighted sum over all previous years using the `SUM` window function and calculate the weights using `POWER(0.8, DATEDIFF('year', yf."filing_year", yf2."filing_year"))`.
    - The smoothing factor is 0.2, so `(1 - α)` is 0.8.

- **best_years:** Identifies the year with the highest EMA for each CPC code.
- **cpc_titles:** Retrieves the CPC titles for CPC codes at level 5.
- **Final SELECT:** Joins the best years with the CPC titles and selects the desired columns.

**Note:**

- **Adjustments Made:**
  - Changed the method of calculating EMA to avoid recursion.
  - Corrected the syntax for accessing JSON data using `f.value:"code"::STRING`.
  - Ensured that CPC codes match the symbols in the `CPC_DEFINITION` table.

- **Data Validation:**
  - If the query still returns no data, please check the following:
    - **CPC Codes Matching:** Verify that the CPC codes from the `PUBLICATIONS` table match the symbols in the `CPC_DEFINITION` table at level 5.
    - **Data Availability:** Ensure that there is data available after each step by running intermediate queries.

**Example Intermediate Query to Check Data:**

```sql
-- Check data in first_cpc_per_patent
SELECT COUNT(*) FROM first_cpc_per_patent;

-- Check data in yearly_filings
SELECT COUNT(*) FROM yearly_filings;

-- Check data in ema_calculations
SELECT COUNT(*) FROM ema_calculations;

-- Check data in best_years
SELECT COUNT(*) FROM best_years;

-- View sample data
SELECT * FROM ema_calculations LIMIT 10;
```

**Understanding the EMA Calculation:**

- **Weights:** The weights decrease exponentially for past years.
- **Window Function:** By using a `JOIN` on the same table (`yearly_filings`) and summing over the appropriate window, we effectively simulate the EMA calculation.

**Please Note:**

- The EMA calculation in SQL can be complex due to limitations in handling recursive calculations. The above method provides an approximation using available SQL functions.
- Ensure that your database permissions allow the execution of window functions and that the data types align correctly.
2025-02-12 21:02:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:02:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:02:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:02:34 - snowflake.connector.connection - INFO - closed
2025-02-12 21:02:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:02:34 - root - INFO - itercount: 2
2025-02-12 21:02:34 - root - INFO - 001044 (42P13): 01ba59ce-0004-9c22-0001-11c301139002: SQL compilation error: error line 43 at position 43
Invalid argument types for function 'DATE_DIFFTIMESTAMPINYEARS': (NUMBER(4,0), NUMBER(4,0))
2025-02-12 21:02:34 - root - INFO - Input sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        f.value:"code"::STRING AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1 AND "cpc_code" IS NOT NULL
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        -- Calculate EMA using window functions
        SUM(
            yf."filing_count" * POWER(0.8, DATEDIFF('year', yf."filing_year", yf2."filing_year"))
        ) OVER (
            PARTITION BY yf."cpc_code"
            ORDER BY yf."filing_year" ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        ) * 0.2 AS "ema"
    FROM
        yearly_filings yf
    JOIN yearly_filings yf2
        ON yf."cpc_code" = yf2."cpc_code" AND yf."filing_year" >= yf2."filing_year"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."symbol"
LIMIT 100;
The error information is:
001044 (42P13): 01ba59ce-0004-9c22-0001-11c301139002: SQL compilation error: error line 43 at position 43
Invalid argument types for function 'DATE_DIFFTIMESTAMPINYEARS': (NUMBER(4,0), NUMBER(4,0))
Please correct it and output only 1 complete SQL query.
2025-02-12 21:03:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:03:15 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        f.value:"code"::STRING AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1 AND "cpc_code" IS NOT NULL
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."symbol"
WHERE
    ct."CPC_Title" IS NOT NULL
ORDER BY
    ct."CPC_Title"
LIMIT 100;
```
2025-02-12 21:03:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:03:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:03:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:03:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 21:03:17 - snowflake.connector.connection - INFO - closed
2025-02-12 21:03:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:03:18 - root - INFO - itercount: 3
2025-02-12 21:03:18 - root - INFO - No data found for the specified query.

2025-02-12 21:03:18 - root - INFO - Input sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        f.value:"code"::STRING AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1 AND "cpc_code" IS NOT NULL
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT
        "symbol",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."symbol"
WHERE
    ct."CPC_Title" IS NOT NULL
ORDER BY
    ct."CPC_Title"
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-02-12 21:04:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:04:10 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "titleFull" IS NOT NULL
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."cpc_code"
ORDER BY
    ct."CPC_Title"
LIMIT 100;
```
2025-02-12 21:04:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:04:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:04:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:04:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:04:12 - snowflake.connector.connection - INFO - closed
2025-02-12 21:04:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:04:12 - root - INFO - itercount: 4
2025-02-12 21:04:12 - root - INFO - 0
2025-02-12 21:04:12 - root - INFO - results: 
CPC_Title,Best_Year
"""Compact""-lamps, i.e. lamps having a folded discharge path",2008
"""Composite"" pole pieces, i.e. poles composed in some parts of magnetic particles and in some other parts of magnetic metal layers including at least one magnetic thin film disposed immediately adjacent to the transducing gap, e.g. ""Metal-In-Gap"" structure",1984
"""Dewar"" vessels",2021
"""Iron-lungs"", i.e. involving chest expansion by applying underpressure thereon, whether or not combined with gas breathing means",2010
"""J-slot"" systems, i.e. lug and slot indexing mechanisms",1995
"""Over-the-needle"" catheter assemblies, e.g. I.V. catheters",2014
"""Seek"" control and circuits therefor",2023
"""Two-way"" or ""double-acting"" separable slide fasteners",1997
"""Venturi"" aeration means",1976
"(Co)polymerised carboxylic acids, -anhydrides, -esters in solid and liquid compositions",2017
"(Co)polymerised carboxylic acids, -anhydrides, -esters in solid and liquid compositions in liquid compositions",1992
"(Co)polymerised carboxylic acids, -anhydrides, -esters in solid and liquid compositions in solid compositions",1988
"(Co)polymerised monomers containing nitrogen, e.g. carbonamides, nitriles or amines",2003
"(Co)polymerised monomers containing nitrogen, e.g. carbonamides, nitriles or amines in liquid compositions",2004
(Co)polymerised monomers containing phosphorus,2022
"(Co)polymerised monomers containing sulfur, e.g. sulfonate",2020
(I) or (II) containing nitrogen,2016
"(I) or (II) containing nitrogen in ring structure, e.g. pyridine group",1971
"(I) or (II) containing oxygen other than as phenol or carbonyl group in ring structure, e.g. phenolphtalein",2021
(I) or (II) containing sulfur,2006
(S)-2-Hydroxy-acid oxidase (1.1.3.15),2022
"(bio)absorbable, (bio)resorbable, resorptive",2015
(cyclo)aliphatic amines; polyamines (no macromolecular substituent 30C); quaternair ammonium compounds; carbamates,1956
(cyclo)aliphatic amines; polyamines (no macromolecular substituent 30C); quaternair ammonium compounds; carbamates hydroxy containing,2018
1 mil or less,1986
"1, 3-Butadiene",2010
"1,2 azoles of the anthracene series",1967
"1,2,3- or 1,2,4-triazines; Hydrogenated 1,2,3- or 1,2,4-triazines",1993
"1,2,3-Thiadiazoles; Hydrogenated 1,2,3-thiadiazoles",1974
"1,2,3-Triazoles; Hydrogenated 1,2,3-triazoles",2014
"1,2,3-Triazoles; Hydrogenated 1,2,3-triazoles with aryl radicals directly attached to ring atoms",2022
"1,2,4-Oxadiazoles; Hydrogenated 1,2,4-oxadiazoles",2022
"1,2,4-Oxadiazoles; Hydrogenated 1,2,4-oxadiazoles with oxygen, sulfur or nitrogen atoms, directly attached to ring carbon atoms, the nitrogen atoms not forming part of a nitro radical",1976
"1,2,4-Thiadiazines; Hydrogenated 1,2,4-thiadiazines",1984
"1,2,4-Thiadiazines; Hydrogenated 1,2,4-thiadiazines condensed with carbocyclic rings or ring systems condensed with one six-membered ring with oxygen atoms directly attached to the ring sulfur atom substituted in position 6 or 7 by sulfamoyl or substituted sulfamoyl radicals with only hydrogen atoms or radicals containing only hydrogen and carbon atoms, directly attached in position 3",1960
"1,2,4-Thiadiazoles; Hydrogenated 1,2,4-thiadiazoles",1990
"1,2,4-Triazines having three double bonds between ring members or between ring members and non-ring members with hetero atoms, or with carbon atoms having three bonds to hetero atoms with at the most one bond to halogen, e.g. ester or nitrile radicals, directly attached to ring carbon atoms",2017
"1,2,4-Triazoles",2020
"1,2,4-Triazoles; Hydrogenated 1,2,4-triazoles",1980
"1,2,4-Triazoles; Hydrogenated 1,2,4-triazoles",2018
"1,2,4-Triazoles; Hydrogenated 1,2,4-triazoles with hetero atoms or with carbon atoms having three bonds to hetero atoms with at the most one bond to halogen, e.g. ester or nitrile radicals, directly attached to ring carbon atoms",2022
"1,2,5-Oxadiazoles; Hydrogenated 1,2,5-oxadiazoles",1981
"1,2,5-Thiadiazoles; Hydrogenated 1,2,5-thiadiazoles",1986
"1,2-Alpha-L-fucosidase (3.2.1.63)",2022
"1,2-Diazines; Hydrogenated 1,2-diazines",2000
"1,2-Diazoles",2018
"1,2-Diazoles condensed with carbocyclic ring systems, e.g. indazole",2022
"1,2-Diazoles condensed with heterocyclic ring systems",2021
"1,2-Diazoles non condensed and containing further heterocyclic rings",2018
"1,2-Diazoles or hydrogenated 1,2-diazoles ; Pyrazolium; Indazolium",1999
"1,2-Diazoles; Hydrogenated 1,2-diazoles",2018
"1,2-Thiazines; Hydrogenated 1,2-thiazines",1981
"1,2-additions, e.g. aldol or Knoevenagel condensations",1965
"1,3,4-Oxadiazoles; Hydrogenated 1,3,4-oxadiazoles",1992
"1,3,4-Oxadiazoles; Hydrogenated 1,3,4-oxadiazoles with oxygen, sulfur or nitrogen atoms, directly attached to ring carbon atoms, the nitrogen atoms not forming part of a nitro radical",1969
"1,3,4-Thiadiazoles; Hydrogenated 1,3,4-thiadiazoles",1982
"1,3,4-Thiadiazoles; Hydrogenated 1,3,4-thiadiazoles with oxygen, sulfur or nitrogen atoms, directly attached to ring carbon atoms, the nitrogen atoms not forming part of a nitro radical",2016
"1,3,5-Triazines, not hydrogenated and not substituted at the ring nitrogen atoms",2016
"1,3,5-Triazines, not hydrogenated and not substituted at the ring nitrogen atoms with two or three nitrogen atoms directly attached to ring carbon atoms",2022
"1,3-Diazines; Hydrogenated 1,3-diazines",1991
"1,3-Diazoles",2010
"1,3-Diazoles condensed with carbocyclic rings, e.g. benzimidazoles",2020
"1,3-Diazoles condensed with other heterocyclic ring systems, e.g. biotin, sorbinil",2021
"1,3-Diazoles not condensed 1,3-diazoles and containing further heterocyclic rings, e.g. pilocarpine, nitrofurantoin",2022
"1,3-Diazoles; Hydrogenated 1,3-diazoles",2012
"1,3-Diazoles; Hydrogenated 1,3-diazoles condensed with carbocyclic rings, e.g. benzimidazoles",1987
"1,3-Dioxanes; Hydrogenated 1,3-dioxanes condensed with carbocyclic rings or ring systems",1976
"1,3-Dioxanes; Hydrogenated 1,3-dioxanes not condensed with other rings",1988
"1,3-Oxazines; Hydrogenated 1,3-oxazines condensed with carbocyclic rings or ring systems",1969
"1,3-Oxazines; Hydrogenated 1,3-oxazines condensed with carbocyclic rings or ring systems condensed with one six-membered ring with hetero atoms directly attached in position 2",2016
"1,3-Oxazines; Hydrogenated 1,3-oxazines not condensed with other rings having one double bond between ring members or between a ring member and a non-ring member with oxygen atoms directly attached to ring carbon atoms",1990
"1,3-Oxazoles; Hydrogenated 1,3-oxazoles",1988
"1,3-Thiazines; Hydrogenated 1,3-thiazines not condensed with other rings",1985
"1,3-Thiazoles",2017
"1,3-Thiazoles; Hydrogenated 1,3-thiazoles",1988
"1,4-Alpha-glucan branching enzyme (2.4.1.18)",2015
"1,4-Benzodiazepines, e.g. diazepam or clozapine",2022
"1,4-Benzodiazepines, e.g. diazepam or clozapine condensed with five-membered rings having nitrogen as a ring hetero atom, e.g. imidazobenzodiazepines, triazolam",2021
"1,4-Benzodiazepines; Hydrogenated 1,4-benzodiazepines substituted in position 5 by aryl radicals",1971
"1,4-Diazines; Hydrogenated 1,4-diazines",2018
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes condensed with carbocyclic rings or ring systems condensed with one naphthalene or hydrogenated naphthalene ring system",1992
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes condensed with carbocyclic rings or ring systems condensed with one six-membered ring",2014
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes condensed with carbocyclic rings or ring systems condensed with one six-membered ring with substituents attached to the hetero ring",1973
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes not condensed with other rings",1993
"1,4-Oxazines, e.g. morpholine",2023
"1,4-Oxazines, e.g. morpholine not condensed and containing further heterocyclic rings, e.g. timolol",2019
"1,4-Oxazines, e.g. morpholine ortho- or peri-condensed with carbocyclic ring systems",2022
"1,4-Oxazines, e.g. morpholine spiro-condensed or forming part of bridged ring systems",2020
"1,4-Oxazines; Hydrogenated 1,4-oxazines condensed with carbocyclic rings condensed with one six-membered ring",2007
"1,4-Oxazines; Hydrogenated 1,4-oxazines not condensed with other rings",1991
"1,4-Thiazines; Hydrogenated 1,4-thiazines",1956
"1,4-Thiazines; Hydrogenated 1,4-thiazines condensed with carbocyclic rings or ring systems condensed with one six-membered ring",1988
"1,4-Thiazines; Hydrogenated 1,4-thiazines not condensed with other rings",2016
"1,4-additions, e.g. conjugate additions",1998
"1,5-Benzodiazepines; Hydrogenated 1,5-benzodiazepines",1971
"1-(4-Chlorobenzoyl)-2-methyl-indolyl-3-acetic acid, substituted in position 5 by an oxygen or nitrogen atom; Esters thereof",1967
"1-aryl substituted, e.g. piretanide",2016
100-500 m2/g,2024
180°,2009
1D SLM,2007


2025-02-12 21:04:12 - root - INFO - Please check the answer again by reviewing Identify the CPC technology areas with the highest exponential moving average of patent filings each year (with a smoothing factor of 0.2), considering only the first CPC code for each patent that has a valid filing date and a non-empty application number, and report the full CPC title along with the best year associated with the highest exponential moving average for each CPC group at level 5., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
CPC_Title,Best_Year
cpc_title:str,best_year:int
(Attention: answer in one row)
```

**Explanation:**

- **CPC_Title**: The full title of the CPC technology area at level 5 with the highest exponential moving average of patent filings.
- **Best_Year**: The year in which this CPC group had its highest exponential moving average, calculated using a smoothing factor of 0.2. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
CPC_Title,Best_Year
"""Compact""-lamps, i.e. lamps having a folded discharge path",2008
"""Composite"" pole pieces, i.e. poles composed in some parts of magnetic particles and in some other parts of magnetic metal layers including at least one magnetic thin film disposed immediately adjacent to the transducing gap, e.g. ""Metal-In-Gap"" structure",1984
"""Dewar"" vessels",2021
"""Iron-lungs"", i.e. involving chest expansion by applying underpressure thereon, whether or not combined with gas breathing means",2010
"""J-slot"" systems, i.e. lug and slot indexing mechanisms",1995
"""Over-the-needle"" catheter assemblies, e.g. I.V. catheters",2014
"""Seek"" control and circuits therefor",2023
"""Two-way"" or ""double-acting"" separable slide fasteners",1997
"""Venturi"" aeration means",1976
"(Co)polymerised carboxylic acids, -anhydrides, -esters in solid and liquid compositions",2017
"(Co)polymerised carboxylic acids, -anhydrides, -esters in solid and liquid compositions in liquid compositions",1992
"(Co)polymerised carboxylic acids, -anhydrides, -esters in solid and liquid compositions in solid compositions",1988
"(Co)polymerised monomers containing nitrogen, e.g. carbonamides, nitriles or amines",2003
"(Co)polymerised monomers containing nitrogen, e.g. carbonamides, nitriles or amines in liquid compositions",2004
(Co)polymerised monomers containing phosphorus,2022
"(Co)polymerised monomers containing sulfur, e.g. sulfonate",2020
(I) or (II) containing nitrogen,2016
"(I) or (II) containing nitrogen in ring structure, e.g. pyridine group",1971
"(I) or (II) containing oxygen other than as phenol or carbonyl group in ring structure, e.g. phenolphtalein",2021
(I) or (II) containing sulfur,2006
(S)-2-Hydroxy-acid oxidase (1.1.3.15),2022
"(bio)absorbable, (bio)resorbable, resorptive",2015
(cyclo)aliphatic amines; polyamines (no macromolecular substituent 30C); quaternair ammonium compounds; carbamates,1956
(cyclo)aliphatic amines; polyamines (no macromolecular substituent 30C); quaternair ammonium compounds; carbamates hydroxy containing,2018
1 mil or less,1986
"1, 3-Butadiene",2010
"1,2 azoles of the anthracene series",1967
"1,2,3- or 1,2,4-triazines; Hydrogenated 1,2,3- or 1,2,4-triazines",1993
"1,2,3-Thiadiazoles; Hydrogenated 1,2,3-thiadiazoles",1974
"1,2,3-Triazoles; Hydrogenated 1,2,3-triazoles",2014
"1,2,3-Triazoles; Hydrogenated 1,2,3-triazoles with aryl radicals directly attached to ring atoms",2022
"1,2,4-Oxadiazoles; Hydrogenated 1,2,4-oxadiazoles",2022
"1,2,4-Oxadiazoles; Hydrogenated 1,2,4-oxadiazoles with oxygen, sulfur or nitrogen atoms, directly attached to ring carbon atoms, the nitrogen atoms not forming part of a nitro radical",1976
"1,2,4-Thiadiazines; Hydrogenated 1,2,4-thiadiazines",1984
"1,2,4-Thiadiazines; Hydrogenated 1,2,4-thiadiazines condensed with carbocyclic rings or ring systems condensed with one six-membered ring with oxygen atoms directly attached to the ring sulfur atom substituted in position 6 or 7 by sulfamoyl or substituted sulfamoyl radicals with only hydrogen atoms or radicals containing only hydrogen and carbon atoms, directly attached in position 3",1960
"1,2,4-Thiadiazoles; Hydrogenated 1,2,4-thiadiazoles",1990
"1,2,4-Triazines having three double bonds between ring members or between ring members and non-ring members with hetero atoms, or with carbon atoms having three bonds to hetero atoms with at the most one bond to halogen, e.g. ester or nitrile radicals, directly attached to ring carbon atoms",2017
"1,2,4-Triazoles",2020
"1,2,4-Triazoles; Hydrogenated 1,2,4-triazoles",1980
"1,2,4-Triazoles; Hydrogenated 1,2,4-triazoles",2018
"1,2,4-Triazoles; Hydrogenated 1,2,4-triazoles with hetero atoms or with carbon atoms having three bonds to hetero atoms with at the most one bond to halogen, e.g. ester or nitrile radicals, directly attached to ring carbon atoms",2022
"1,2,5-Oxadiazoles; Hydrogenated 1,2,5-oxadiazoles",1981
"1,2,5-Thiadiazoles; Hydrogenated 1,2,5-thiadiazoles",1986
"1,2-Alpha-L-fucosidase (3.2.1.63)",2022
"1,2-Diazines; Hydrogenated 1,2-diazines",2000
"1,2-Diazoles",2018
"1,2-Diazoles condensed with carbocyclic ring systems, e.g. indazole",2022
"1,2-Diazoles condensed with heterocyclic ring systems",2021
"1,2-Diazoles non condensed and containing further heterocyclic rings",2018
"1,2-Diazoles or hydrogenated 1,2-diazoles ; Pyrazolium; Indazolium",1999
"1,2-Diazoles; Hydrogenated 1,2-diazoles",2018
"1,2-Thiazines; Hydrogenated 1,2-thiazines",1981
"1,2-additions, e.g. aldol or Knoevenagel condensations",1965
"1,3,4-Oxadiazoles; Hydrogenated 1,3,4-oxadiazoles",1992
"1,3,4-Oxadiazoles; Hydrogenated 1,3,4-oxadiazoles with oxygen, sulfur or nitrogen atoms, directly attached to ring carbon atoms, the nitrogen atoms not forming part of a nitro radical",1969
"1,3,4-Thiadiazoles; Hydrogenated 1,3,4-thiadiazoles",1982
"1,3,4-Thiadiazoles; Hydrogenated 1,3,4-thiadiazoles with oxygen, sulfur or nitrogen atoms, directly attached to ring carbon atoms, the nitrogen atoms not forming part of a nitro radical",2016
"1,3,5-Triazines, not hydrogenated and not substituted at the ring nitrogen atoms",2016
"1,3,5-Triazines, not hydrogenated and not substituted at the ring nitrogen atoms with two or three nitrogen atoms directly attached to ring carbon atoms",2022
"1,3-Diazines; Hydrogenated 1,3-diazines",1991
"1,3-Diazoles",2010
"1,3-Diazoles condensed with carbocyclic rings, e.g. benzimidazoles",2020
"1,3-Diazoles condensed with other heterocyclic ring systems, e.g. biotin, sorbinil",2021
"1,3-Diazoles not condensed 1,3-diazoles and containing further heterocyclic rings, e.g. pilocarpine, nitrofurantoin",2022
"1,3-Diazoles; Hydrogenated 1,3-diazoles",2012
"1,3-Diazoles; Hydrogenated 1,3-diazoles condensed with carbocyclic rings, e.g. benzimidazoles",1987
"1,3-Dioxanes; Hydrogenated 1,3-dioxanes condensed with carbocyclic rings or ring systems",1976
"1,3-Dioxanes; Hydrogenated 1,3-dioxanes not condensed with other rings",1988
"1,3-Oxazines; Hydrogenated 1,3-oxazines condensed with carbocyclic rings or ring systems",1969
"1,3-Oxazines; Hydrogenated 1,3-oxazines condensed with carbocyclic rings or ring systems condensed with one six-membered ring with hetero atoms directly attached in position 2",2016
"1,3-Oxazines; Hydrogenated 1,3-oxazines not condensed with other rings having one double bond between ring members or between a ring member and a non-ring member with oxygen atoms directly attached to ring carbon atoms",1990
"1,3-Oxazoles; Hydrogenated 1,3-oxazoles",1988
"1,3-Thiazines; Hydrogenated 1,3-thiazines not condensed with other rings",1985
"1,3-Thiazoles",2017
"1,3-Thiazoles; Hydrogenated 1,3-thiazoles",1988
"1,4-Alpha-glucan branching enzyme (2.4.1.18)",2015
"1,4-Benzodiazepines, e.g. diazepam or clozapine",2022
"1,4-Benzodiazepines, e.g. diazepam or clozapine condensed with five-membered rings having nitrogen as a ring hetero atom, e.g. imidazobenzodiazepines, triazolam",2021
"1,4-Benzodiazepines; Hydrogenated 1,4-benzodiazepines substituted in position 5 by aryl radicals",1971
"1,4-Diazines; Hydrogenated 1,4-diazines",2018
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes condensed with carbocyclic rings or ring systems condensed with one naphthalene or hydrogenated naphthalene ring system",1992
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes condensed with carbocyclic rings or ring systems condensed with one six-membered ring",2014
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes condensed with carbocyclic rings or ring systems condensed with one six-membered ring with substituents attached to the hetero ring",1973
"1,4-Dioxanes; Hydrogenated 1,4-dioxanes not condensed with other rings",1993
"1,4-Oxazines, e.g. morpholine",2023
"1,4-Oxazines, e.g. morpholine not condensed and containing further heterocyclic rings, e.g. timolol",2019
"1,4-Oxazines, e.g. morpholine ortho- or peri-condensed with carbocyclic ring systems",2022
"1,4-Oxazines, e.g. morpholine spiro-condensed or forming part of bridged ring systems",2020
"1,4-Oxazines; Hydrogenated 1,4-oxazines condensed with carbocyclic rings condensed with one six-membered ring",2007
"1,4-Oxazines; Hydrogenated 1,4-oxazines not condensed with other rings",1991
"1,4-Thiazines; Hydrogenated 1,4-thiazines",1956
"1,4-Thiazines; Hydrogenated 1,4-thiazines condensed with carbocyclic rings or ring systems condensed with one six-membered ring",1988
"1,4-Thiazines; Hydrogenated 1,4-thiazines not condensed with other rings",2016
"1,4-additions, e.g. conjugate additions",1998
"1,5-Benzodiazepines; Hydrogenated 1,5-benzodiazepines",1971
"1-(4-Chlorobenzoyl)-2-methyl-indolyl-3-acetic acid, substituted in position 5 by an oxygen or nitrogen atom; Esters thereof",1967
"1-aryl substituted, e.g. piretanide",2016
100-500 m2/g,2024
180°,2009
1D SLM,2007
Current sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "titleFull" IS NOT NULL
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."cpc_code"
ORDER BY
    ct."CPC_Title"
LIMIT 100;Please remove """ in results. Use CAST: CAST(column_name AS STRING).

2025-02-12 21:04:46 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:04:46 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    REPLACE(ct."CPC_Title", '"', '') AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."cpc_code"
ORDER BY
    ct."CPC_Title"
LIMIT 100;
```
2025-02-12 21:04:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:04:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:04:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:04:47 - snowflake.connector.connection - INFO - closed
2025-02-12 21:04:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:04:48 - root - INFO - itercount: 5
2025-02-12 21:04:48 - root - INFO - 002024 (42601): 01ba59d0-0004-9c22-0001-11c30113a70a: SQL compilation error:
[CT."CPC_Title"] is not a valid order by expression
2025-02-12 21:04:48 - root - INFO - Input sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    REPLACE(ct."CPC_Title", '"', '') AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."cpc_code"
ORDER BY
    ct."CPC_Title"
LIMIT 100;
The error information is:
002024 (42601): 01ba59d0-0004-9c22-0001-11c30113a70a: SQL compilation error:
[CT."CPC_Title"] is not a valid order by expression
Please correct it and output only 1 complete SQL query.
2025-02-12 21:05:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:05:15 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    REPLACE(ct."CPC_Title", '"', '') AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."cpc_code"
ORDER BY
    "CPC_Title"
LIMIT 100;
```
2025-02-12 21:05:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:05:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:05:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:05:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 21:05:19 - snowflake.connector.connection - INFO - closed
2025-02-12 21:05:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:05:20 - root - INFO - itercount: 6
2025-02-12 21:05:20 - root - INFO - No data found for the specified query.

2025-02-12 21:05:20 - root - INFO - Input sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    REPLACE(ct."CPC_Title", '"', '') AS "CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" = ct."cpc_code"
ORDER BY
    "CPC_Title"
LIMIT 100;
The error information is:
 No data found for the specified query.

2025-02-12 21:06:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:06:30 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        LEFT(UPPER(TRIM(f.value:"code"::STRING)), 8) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON ct."cpc_code" = LEFT(bys."cpc_code", LENGTH(ct."cpc_code"))
ORDER BY
    ct."CPC_Title"
LIMIT 100;
```
2025-02-12 21:06:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:06:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:06:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:06:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:06:36 - snowflake.connector.connection - INFO - closed
2025-02-12 21:06:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:06:36 - root - INFO - itercount: 7
2025-02-12 21:06:36 - root - INFO - 0
2025-02-12 21:06:36 - root - INFO - results: 
CPC_Title,Best_Year
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1998
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2006
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2007
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2012
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1984
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1992
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2018
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1975
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2010
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2015
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1980
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2002
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1950
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2022
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2011
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2017
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1932
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1967
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2000
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2006
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1996
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1954
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1981
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1973
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2022
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2019
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2010
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2015
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2013
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1974
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2016
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2005
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1996
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1975
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1968
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2020
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2002
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1957
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1943
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1989
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1973
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1962
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1994
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2021
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1971
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1948
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1985
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1965
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1990
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1977
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2001
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1969
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1987
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1960
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1972
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1949
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2014
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1954
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2018
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1981
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2012
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1979
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1999
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1992
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2023
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2019
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1986
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2011
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1997
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1939
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1953
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1984
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1964
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1966
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2009
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2008
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1991
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1993
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2007
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1988
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1982
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1945
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1935
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2004
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1942
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1970
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1967
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1995
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2022
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2000
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1980
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1936
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1959
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1983
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1978
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1998
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2017
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2003
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2006
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1952


2025-02-12 21:06:36 - root - INFO - Please check the answer again by reviewing Identify the CPC technology areas with the highest exponential moving average of patent filings each year (with a smoothing factor of 0.2), considering only the first CPC code for each patent that has a valid filing date and a non-empty application number, and report the full CPC title along with the best year associated with the highest exponential moving average for each CPC group at level 5., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
CPC_Title,Best_Year
cpc_title:str,best_year:int
(Attention: answer in one row)
```

**Explanation:**

- **CPC_Title**: The full title of the CPC technology area at level 5 with the highest exponential moving average of patent filings.
- **Best_Year**: The year in which this CPC group had its highest exponential moving average, calculated using a smoothing factor of 0.2. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
CPC_Title,Best_Year
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1998
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2006
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2007
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2012
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1984
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1992
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2018
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1975
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2010
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2015
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1980
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2002
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1950
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2022
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2011
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2017
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1932
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1967
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2000
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2006
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1996
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1954
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1981
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1973
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2022
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2019
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2010
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2015
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2013
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1974
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2016
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2005
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1996
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1975
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1968
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2020
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2002
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1957
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1943
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1989
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1973
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1962
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1994
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2021
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1971
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1948
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1985
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1965
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1990
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1977
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2001
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1969
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1987
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1960
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1972
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1949
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2014
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1954
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2018
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1981
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2012
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1979
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1999
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1992
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2023
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2019
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1986
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2011
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1997
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1939
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1953
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1984
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1964
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1966
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2009
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2008
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1991
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1993
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2007
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1988
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1982
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1945
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1935
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2004
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1942
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1970
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1967
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1995
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2022
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2000
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1980
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1936
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1959
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1983
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1978
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1998
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2017
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2003
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2006
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1952
Current sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        LEFT(UPPER(TRIM(f.value:"code"::STRING)), 8) AS "cpc_code",
        ROW_NUMBER() OVER (PARTITION BY p."publication_number" ORDER BY f.index) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf."cpc_code",
        yf."filing_year",
        yf."filing_count",
        SUM(
            0.2 * POWER(0.8, yf."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf
    JOIN
        yearly_filings yf2
            ON yf."cpc_code" = yf2."cpc_code" AND yf2."filing_year" <= yf."filing_year"
    GROUP BY
        yf."cpc_code", yf."filing_year", yf."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "best_year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."best_year" AS "Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON ct."cpc_code" = LEFT(bys."cpc_code", LENGTH(ct."cpc_code"))
ORDER BY
    ct."CPC_Title"
LIMIT 100;
2025-02-12 21:07:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:07:40 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (
            PARTITION BY p."publication_number" 
            ORDER BY f.index
        ) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL 
        AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf1."cpc_code",
        yf1."filing_year",
        yf1."filing_count",
        SUM(
            0.2 * POWER(0.8, yf1."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf1
    JOIN
        yearly_filings yf2
            ON yf1."cpc_code" = yf2."cpc_code" 
            AND yf2."filing_year" <= yf1."filing_year"
    GROUP BY
        yf1."cpc_code", yf1."filing_year", yf1."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "Best_Year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" 
        AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" LIKE ct."cpc_code" || '%'
ORDER BY
    ct."CPC_Title"
LIMIT 100;
```
2025-02-12 21:07:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:07:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:07:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:07:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:07:48 - snowflake.connector.connection - INFO - closed
2025-02-12 21:07:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:07:48 - root - INFO - itercount: 8
2025-02-12 21:07:48 - root - INFO - 0
2025-02-12 21:07:48 - root - INFO - results: 
CPC_Title,Best_Year
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2022
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2006
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1997
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1995
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2009
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2012
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2018
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2020
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2015
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1980
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2013
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1975
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1981
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1956
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2004
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1987
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1983
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2017
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2007
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1950
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2010
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1998
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2011
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1992
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2002
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2021
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2015
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2000
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1926
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1973
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1950
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1954
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1996
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2017
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1967
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1932
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2002
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1921
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2022
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2019
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1981
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1964
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2001
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1961
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1937
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1967
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2022
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2005
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1978
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1940
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1934
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2000
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1955
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1991
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1943
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1977
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1983
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1926
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1968
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1982
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1979
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1930
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1996
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1987
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2015
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1946
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2016
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1984
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2020
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1975
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1993
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1998
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1988
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1992
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2018
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2006
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1959
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1980
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1938
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1950
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2007
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1969
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1966
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1945
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1948
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2008
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1931
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2014
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2010
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2021
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2017
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1960
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1970
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1963
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2012
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2013
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2003
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2002
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1939
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1944


2025-02-12 21:07:48 - root - INFO - Please check the answer again by reviewing Identify the CPC technology areas with the highest exponential moving average of patent filings each year (with a smoothing factor of 0.2), considering only the first CPC code for each patent that has a valid filing date and a non-empty application number, and report the full CPC title along with the best year associated with the highest exponential moving average for each CPC group at level 5., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
CPC_Title,Best_Year
cpc_title:str,best_year:int
(Attention: answer in one row)
```

**Explanation:**

- **CPC_Title**: The full title of the CPC technology area at level 5 with the highest exponential moving average of patent filings.
- **Best_Year**: The year in which this CPC group had its highest exponential moving average, calculated using a smoothing factor of 0.2. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
CPC_Title,Best_Year
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2022
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2006
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1997
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1995
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2009
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2012
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2018
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2020
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2015
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1980
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2013
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1975
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1981
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1956
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2004
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1987
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1983
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2017
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2007
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1950
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2010
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1998
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2011
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,1992
ABRASIVE OR RELATED BLASTING WITH PARTICULATE MATERIAL,2002
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2021
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2015
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2000
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1926
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1973
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1950
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1954
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1996
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2017
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1967
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1932
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2002
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1921
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2022
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,2019
ACCESSORY MACHINES OR APPARATUS FOR WORKING WOOD OR SIMILAR MATERIALS; TOOLS FOR WORKING WOOD OR SIMILAR MATERIALS; SAFETY DEVICES FOR WOOD WORKING MACHINES OR TOOLS,1981
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1964
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2001
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1961
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1937
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1967
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2022
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2005
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1978
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1940
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1934
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2000
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1955
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1991
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1943
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1977
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1983
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1926
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1968
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1982
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1979
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1930
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1996
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1987
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2015
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1946
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2016
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1984
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2020
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1975
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1993
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1998
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1988
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1992
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2018
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2006
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1959
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1980
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1938
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1950
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2007
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1969
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1966
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1945
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1948
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2008
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1931
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2014
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2010
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2021
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2017
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1960
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1970
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1963
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2012
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2013
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2003
ACYCLIC OR CARBOCYCLIC COMPOUNDS,2002
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1939
ACYCLIC OR CARBOCYCLIC COMPOUNDS,1944
Current sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (
            PARTITION BY p."publication_number" 
            ORDER BY f.index
        ) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL 
        AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf1."cpc_code",
        yf1."filing_year",
        yf1."filing_count",
        SUM(
            0.2 * POWER(0.8, yf1."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf1
    JOIN
        yearly_filings yf2
            ON yf1."cpc_code" = yf2."cpc_code" 
            AND yf2."filing_year" <= yf1."filing_year"
    GROUP BY
        yf1."cpc_code", yf1."filing_year", yf1."filing_count"
),
best_years AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "Best_Year",
        e."ema" AS "max_ema"
    FROM (
        SELECT
            "cpc_code",
            MAX("ema") AS "max_ema"
        FROM ema_calculations
        GROUP BY "cpc_code"
    ) e_max
    JOIN ema_calculations e
        ON e."cpc_code" = e_max."cpc_code" 
        AND e."ema" = e_max."max_ema"
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT DISTINCT
    ct."CPC_Title",
    bys."Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
        ON bys."cpc_code" LIKE ct."cpc_code" || '%'
ORDER BY
    ct."CPC_Title"
LIMIT 100;
2025-02-12 21:08:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:08:31 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (
            PARTITION BY p."publication_number" 
            ORDER BY f.index
        ) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL 
        AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf1."cpc_code",
        yf1."filing_year",
        yf1."filing_count",
        SUM(
            0.2 * POWER(0.8, yf1."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf1
    JOIN
        yearly_filings yf2
            ON yf1."cpc_code" = yf2."cpc_code" 
            AND yf2."filing_year" <= yf1."filing_year"
    GROUP BY
        yf1."cpc_code", yf1."filing_year", yf1."filing_count"
),
best_overall AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "Best_Year",
        e."ema" AS "max_ema"
    FROM ema_calculations e
    ORDER BY e."ema" DESC
    LIMIT 1
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT
    ct."CPC_Title",
    bo."Best_Year"
FROM
    best_overall bo
    JOIN cpc_titles ct
        ON bo."cpc_code" LIKE ct."cpc_code" || '%'
LIMIT 1;
```
2025-02-12 21:08:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:08:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:08:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:08:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 21:08:33 - snowflake.connector.connection - INFO - closed
2025-02-12 21:08:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:08:33 - root - INFO - itercount: 9
2025-02-12 21:08:33 - root - INFO - 0
2025-02-12 21:08:33 - root - INFO - results: 
CPC_Title,Best_Year
"REDUCTION OF GREENHOUSE GAS [GHG] EMISSIONS, RELATED TO ENERGY GENERATION, TRANSMISSION OR DISTRIBUTION",2023


2025-02-12 21:08:33 - root - INFO - Please check the answer again by reviewing Identify the CPC technology areas with the highest exponential moving average of patent filings each year (with a smoothing factor of 0.2), considering only the first CPC code for each patent that has a valid filing date and a non-empty application number, and report the full CPC title along with the best year associated with the highest exponential moving average for each CPC group at level 5., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
CPC_Title,Best_Year
cpc_title:str,best_year:int
(Attention: answer in one row)
```

**Explanation:**

- **CPC_Title**: The full title of the CPC technology area at level 5 with the highest exponential moving average of patent filings.
- **Best_Year**: The year in which this CPC group had its highest exponential moving average, calculated using a smoothing factor of 0.2. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
CPC_Title,Best_Year
"REDUCTION OF GREENHOUSE GAS [GHG] EMISSIONS, RELATED TO ENERGY GENERATION, TRANSMISSION OR DISTRIBUTION",2023
Current sql:
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (
            PARTITION BY p."publication_number" 
            ORDER BY f.index
        ) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL 
        AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_code",
        EXTRACT(YEAR FROM "filing_date_parsed")
),
ema_calculations AS (
    SELECT
        yf1."cpc_code",
        yf1."filing_year",
        yf1."filing_count",
        SUM(
            0.2 * POWER(0.8, yf1."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf1
    JOIN
        yearly_filings yf2
            ON yf1."cpc_code" = yf2."cpc_code" 
            AND yf2."filing_year" <= yf1."filing_year"
    GROUP BY
        yf1."cpc_code", yf1."filing_year", yf1."filing_count"
),
best_overall AS (
    SELECT
        e."cpc_code",
        e."filing_year" AS "Best_Year",
        e."ema" AS "max_ema"
    FROM ema_calculations e
    ORDER BY e."ema" DESC
    LIMIT 1
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT
    ct."CPC_Title",
    bo."Best_Year"
FROM
    best_overall bo
    JOIN cpc_titles ct
        ON bo."cpc_code" LIKE ct."cpc_code" || '%'
LIMIT 1;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-02-12 21:09:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 21:09:47 - root - INFO - ```sql
WITH first_cpc_codes AS (
    SELECT
        p."publication_number",
        p."application_number",
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_parsed",
        UPPER(TRIM(f.value:"code"::STRING)) AS "cpc_code",
        ROW_NUMBER() OVER (
            PARTITION BY p."publication_number" 
            ORDER BY f.index
        ) AS rn
    FROM
        "PATENTS"."PATENTS"."PUBLICATIONS" p,
        LATERAL FLATTEN(input => p."cpc") f
    WHERE
        p."application_number" IS NOT NULL 
        AND p."application_number" <> ''
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND f.value:"code" IS NOT NULL
),
first_cpc_per_patent AS (
    SELECT
        "publication_number",
        "application_number",
        "filing_date_parsed",
        "cpc_code",
        REGEXP_REPLACE("cpc_code", '^([A-Z]\\d{2}[A-Z]).*$', '\\1') AS "cpc_group_code"
    FROM
        first_cpc_codes
    WHERE rn = 1
),
yearly_filings AS (
    SELECT
        "cpc_group_code",
        EXTRACT(YEAR FROM "filing_date_parsed") AS "filing_year",
        COUNT(*) AS "filing_count"
    FROM
        first_cpc_per_patent
    GROUP BY
        "cpc_group_code",
        "filing_year"
),
ema_calculations AS (
    SELECT
        yf1."cpc_group_code",
        yf1."filing_year",
        yf1."filing_count",
        SUM(
            0.2 * POWER(0.8, yf1."filing_year" - yf2."filing_year") * yf2."filing_count"
        ) AS "ema"
    FROM
        yearly_filings yf1
    JOIN
        yearly_filings yf2
        ON yf1."cpc_group_code" = yf2."cpc_group_code"
        AND yf2."filing_year" <= yf1."filing_year"
    GROUP BY
        yf1."cpc_group_code", yf1."filing_year", yf1."filing_count"
),
best_years AS (
    SELECT
        e."cpc_group_code",
        e."filing_year" AS "Best_Year",
        e."ema" AS "max_ema",
        ROW_NUMBER() OVER(
            PARTITION BY e."cpc_group_code" 
            ORDER BY e."ema" DESC NULLS LAST, e."filing_year" DESC
        ) AS rn
    FROM
        ema_calculations e
    WHERE e."ema" IS NOT NULL
),
cpc_titles AS (
    SELECT DISTINCT
        UPPER(TRIM("symbol")) AS "cpc_code",
        "titleFull" AS "CPC_Title"
    FROM
        "PATENTS"."PATENTS"."CPC_DEFINITION"
    WHERE
        "level" = 5
        AND "titleFull" IS NOT NULL
)
SELECT
    ct."CPC_Title",
    bys."Best_Year"
FROM
    best_years bys
    JOIN cpc_titles ct
    ON bys."cpc_group_code" = ct."cpc_code"
WHERE
    bys.rn = 1
ORDER BY
    ct."CPC_Title"
LIMIT 100;
```
2025-02-12 21:09:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 21:09:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 21:09:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 21:09:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 21:09:49 - snowflake.connector.connection - INFO - closed
2025-02-12 21:09:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 21:09:49 - root - INFO - Total iteration counts: 10
