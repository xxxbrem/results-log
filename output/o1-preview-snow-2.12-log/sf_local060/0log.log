2025-02-10 14:45:53 - openai._base_client - INFO - Retrying request to /chat/completions in 0.423567 seconds
2025-02-10 14:47:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:47:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:47:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:47:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:47:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 35
2025-02-10 14:47:39 - snowflake.connector.connection - INFO - closed
2025-02-10 14:47:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:47:39 - root - INFO - SQL:
SELECT DISTINCT "country_name"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES"
   LIMIT 100;
Results:
country_name
Singapore
Italy
China
Canada
Argentina
Germany
Denmark
Spain
Ireland
Japan
Malaysia
Netherlands
Poland
United Kingdom
United States of America
South Africa
Mexico
Sweden
Switzerland
Egypt
Zimbabwe
Kuwait
Romania
Hungary
Saudi Arabia
Turkey
Chile
Australia
New Zealand
Thailand
Nigeria
Israel
Brazil
India
France

2025-02-10 14:47:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:47:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:47:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:47:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-02-10 14:47:40 - snowflake.connector.connection - INFO - closed
2025-02-10 14:47:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:47:41 - root - INFO - SQL:
SELECT DISTINCT "calendar_quarter_number", "calendar_year"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES"
   ORDER BY "calendar_year", "calendar_quarter_number"
   LIMIT 100;
Results:
calendar_quarter_number,calendar_year
1,2019
2,2019
3,2019
4,2019
1,2020
2,2020
3,2020
4,2020
1,2021
2,2021
3,2021
4,2021
1,2022
2,2022
3,2022
4,2022
1,2023
2,2023
3,2023
4,2023

2025-02-10 14:47:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:47:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:47:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:47:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-10 14:47:42 - snowflake.connector.connection - INFO - closed
2025-02-10 14:47:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:48:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:48:30 - root - INFO - ```sql
SELECT c."cust_city",
       SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
       SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
       ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
  ON s."time_id" = t."time_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
  ON s."cust_id" = c."cust_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
  ON c."country_id" = cnt."country_id"
WHERE t."calendar_quarter_number" = 4
  AND t."calendar_year" IN (2019, 2020)
  AND cnt."country_name" = 'United States of America'
GROUP BY c."cust_city"
HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
   AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
LIMIT 100;
```
2025-02-10 14:48:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:48:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:48:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:48:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:48:31 - snowflake.connector.connection - INFO - closed
2025-02-10 14:48:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:49:53 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:49:53 - root - INFO - SQL:
SELECT c."cust_city",
       SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
       SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
       ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
  ON s."time_id" = t."time_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
  ON s."cust_id" = c."cust_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
  ON c."country_id" = cnt."country_id"
WHERE t."calendar_quarter_number" = 4
  AND t."calendar_year" IN (2019, 2020)
  AND cnt."country_name" = 'United States of America'
GROUP BY c."cust_city"
HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
   AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
LIMIT 100;
Results:
cust_city,sales_2019,sales_2020,percentage_increase
Syracuse,6097.51,27881.08,357.25353463954957
Tucumcari,20440.96,24654.51,20.613268652744292
Rhineland,8273.54,34977.65,322.76522504272657
Sykesville,27524.21,37438.46,36.02010738909491
Blountstown,40170.83,52892.54,31.669024513558714
Pala,16678.56,34493.58,106.81389760267072
Plains,5536.58,12094.82,118.45290775171675
Candler,5551.95,8735.47,57.34057403254712
Springhill,19989.42,31566.68,57.91693806023388
Fort Klamath,6854.62,9722.6,41.840102004195714
Trafford,16234.35,41899.520000000004,158.09176222023058
Ryder,6373.71,23481.33,268.4091369077037
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Otway,3326.76,4787.5,43.90878813019273
Vidalia,964.52,17779.32,1743.3334715713513
Gays,6597.650000000001,16280.7,146.76513607117684
Knowles,3327.58,5472.69,64.46456584064094
Maumelle,811.55,5164.0,536.3132277740127
North Hills,784.07,4363.16,456.47582486257596
Corwith,162.14,1823.25,1024.4911804613298
Earl,7067.320000000001,35661.6,404.5986314472812
New Market,2006.4,3268.69,62.91317783094098
Chesterfield,592.48,4776.2300000000005,706.1419794761005
St Charles,418.79,19848.69,4639.532940137061
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Selmer,3974.27,7414.67,86.56684120605796
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Buckley,8953.6,18039.7,101.47985167977127
Forest City,11533.210000000001,23193.83,101.10472279616862
Eunice,3115.82,5283.26,69.56242658433413
Berkley,4294.19,5738.99,33.64546049429579
Mc Kean,4227.55,5268.85,24.631287625220285
Legrand,877.6800000000001,3420.79,289.75366876310267
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Barre,941.0500000000001,4988.3,430.0781042452579
Locust Valley,847.87,7519.620000000001,786.8836024390532
Attica,1758.8000000000002,4735.63,169.25346827382305
Damascus,290.22,3514.97,1111.1398249603749
Cranford,2144.13,14287.37,566.3481225485395
Lakeside,383.0,6204.62,1520.0052219321149
Aline,853.64,2971.96,248.1514455742468
Birchwood,4161.51,14166.78,240.42402877801567
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Belmont,526.23,3224.25,512.7073713015221
Mount Morris,253.53,2027.24,699.6055693606279
Midland,308.8,3418.57,1007.0498704663212
Pescadero,4428.44,6577.2,48.52182709938489
Aneta,1019.71,3861.7799999999997,278.7135558148885
Vass,148.97,552.21,270.68537289387126
Holyrood,5289.37,10732.96,102.91565914277126
Marshal,911.98,6132.41,572.4281234237593
Bridgman,635.53,4447.66,599.8347835664721
Haswell,18268.53,33495.17,83.34901604015211
San Francisco,31794.72,51019.450000000004,60.46516528530525
Ortley,12921.460000000001,15619.71,20.88192820315969
Wadsworth,12961.0,15583.77,20.235861430445183
Thayer,11125.29,15929.800000000001,43.185481007686086
Shoreview,3916.35,10573.5,169.98353058332376
Allport,6360.36,10934.12,71.91039500908755
Quartzhill,5133.96,12927.95,151.81244107862156
El Sobrante,27912.11,55631.97,99.31123086001023
West Wood,2908.52,6519.05,124.13633050486159
Alma,10602.75,28650.59,170.21848105444343
Cloverdale,4981.18,9706.35,94.86045475168534
Bolivar,2110.9700000000003,8645.14,309.5340056940648
Bethel Acres,4546.0199999999995,6146.48,35.20574040589351
Elba,9871.84,21155.73,114.30381772800206
Lowndesville,6897.79,9435.87,36.795553358394514
Bryant,1020.64,6635.96,550.1763599310236
Lamar,4946.81,13232.49,167.4954162379392
Aladdin,5632.360000000001,22300.77,295.9400677513511
Atalissa,462.32,3630.19,685.2115417892369
Lavallette,403.92,3238.66,701.8072885719944
Waycross,1326.78,7026.26,429.5723480908666
Thomasville,3276.86,9418.45,187.4230208187106
Ocala,7560.2300000000005,13936.82,84.34386255444608
White Plains,4784.8,9480.390000000001,98.1355542551413
Severy,7744.68,14008.77,80.88248965741644
Alsen,8089.63,14073.32,73.96741260107075
Laluz,12454.65,17692.690000000002,42.056902442059815
North Branch,6187.47,21751.43,251.53996706246656
Mendham,3357.45,7868.2699999999995,134.35255923394243
New Auburn,3773.4500000000003,6007.11,59.19410618929625
Union City,1017.63,12513.43,1129.6640232697544
Bay City,927.59,5102.59,450.0910962817624
Guiderock,2270.6,6644.83,192.64643706509293
Opp,1006.38,1939.53,92.72342455136231
Mosquitolake,209.79000000000002,1981.36,844.4492111158777
Chieflake,2049.74,6411.15,212.77869388312664
Shipman,228.58,686.25,200.2231166331262
Stamford,859.37,5027.7300000000005,485.04834937221466
Vanderbilt,1533.06,4002.32,161.0674076683235
Atkinson,560.83,5128.45,814.4393131608508
Southaven,241.57999999999998,6051.75,2405.0707840052987
Blackduck,991.86,10490.91,957.7006835642126
Norman,3531.2,4777.76,35.30131400090622
Fromberg,556.94,6651.23,1094.2453406111965
Rock Creek,1343.42,4775.98,255.5090738562772

2025-02-10 14:49:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:49:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:49:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:49:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:49:54 - snowflake.connector.connection - INFO - closed
2025-02-10 14:49:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:49:54 - root - INFO - SQL:
SELECT DISTINCT c."cust_id", c."cust_city", c."country_id"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   LIMIT 100
Results:
cust_id,cust_city,country_id
7,Haiku-Pauwela,52790
8,Dolores,52790
10,Blountstown,52790
13,Albion,52790
18,Allport,52790
19,Atalissa,52790
20,Bethelpark,52790
22,Aline,52790
33,Bolivar,52790
40,Chimney Rock,52790
53,Lancaster,52790
57,Blountstown,52790
61,"Belmont, MI",52790
63,Forest Heights,52790
65,Eunice,52790
66,Cranford,52790
77,Atkinson,52790
82,Little Port,52790
95,Buckley,52790
124,Franklin,52790
126,Atalissa,52790
174,Chimney Rock,52790
217,North Carrollton,52790
34,Fort Klamath,52790
72,Dolores,52790
142,Mosquitolake,52790
243,Accomac,52790
192,Chimney Rock,52790
276,Holden,52790
286,Atalissa,52790
302,Arbuckle,52790
309,Barre,52790
312,Accomac,52790
361,Alsen,52790
378,Buckley,52790
424,Wadsworth,52790
482,Duncan,52790
735,Danville,52790
419,Alsen,52790
32,Fromberg,52790
38,Evinston,52790
87,Bowen,52790
92,Aline,52790
135,Dolores,52790
106,Bolivar,52790
152,Alsen,52790
248,Lancaster,52790
255,"Bristol, VT",52790
280,Bolivar,52790
296,"Belmont, MI",52790
382,Sheldon,52790
440,Aladdin,52790
501,Atalissa,52790
513,Blackduck,52790
538,Aline,52790
553,Haiku-Pauwela,52790
699,Alsen,52790
734,Barre,52790
724,Bay City,52790
1063,Arbuckle,52790
1892,Dillsboro,52790
680,Forestville,52790
739,Duncan,52790
1218,Kent,52790
26,Forestville,52790
48,Artas,52790
73,Accomac,52790
83,Atalissa,52790
114,Atalissa,52790
118,Farmington,52790
163,Cranford,52790
98,Holden,52790
133,Aline,52790
177,Blountstown,52790
184,Holden,52790
209,Henagar,52790
228,Duncan,52790
261,"Belmont, MI",52790
284,Barre,52790
487,Arbuckle,52790
740,Barre,52790
522,Forestville,52790
839,Accomac,52790
1178,Blountstown,52790
97,Lancaster,52790
127,New Castle,52790
68,Atkinson,52790
76,Haiku-Pauwela,52790
94,Farmington,52790
134,Berea,52790
162,"Bristol, VT",52790
206,Atkinson,52790
229,Forest Heights,52790
166,Atkinson,52790
231,Danville,52790
257,Aladdin,52790
290,Kent,52790
292,Barre,52790
295,Eunice,52790
297,North Carrollton,52790

2025-02-10 14:49:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:49:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:49:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:49:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:49:55 - snowflake.connector.connection - INFO - closed
2025-02-10 14:49:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:49:56 - root - INFO - SQL:
SELECT s.*
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2019
   LIMIT 100
Results:
prod_id,cust_id,time_id,channel_id,promo_id,quantity_sold,amount_sold
13,2994,2019-10-05,2,999,1,1210.81
13,4759,2019-10-05,2,999,1,1210.81
13,4942,2019-10-05,2,999,1,1210.81
13,6279,2019-10-05,2,999,1,1210.81
13,6913,2019-10-05,2,999,1,1210.81
13,7873,2019-10-05,2,999,1,1210.81
13,7902,2019-10-05,2,999,1,1210.81
13,8935,2019-10-05,2,999,1,1210.81
13,9038,2019-10-05,2,999,1,1210.81
13,9317,2019-10-05,2,999,1,1210.81
13,2,2019-10-05,3,999,1,1205.99
13,1089,2019-10-05,3,999,1,1205.99
13,2819,2019-10-05,3,999,1,1205.99
13,2953,2019-10-05,3,999,1,1205.99
13,7902,2019-10-05,3,999,1,1205.99
13,8236,2019-10-05,3,999,1,1205.99
13,8935,2019-10-05,3,999,1,1205.99
13,2,2019-10-05,4,999,1,1205.99
13,429,2019-10-05,4,999,1,1205.99
13,1089,2019-10-05,4,999,1,1205.99
13,1297,2019-10-05,4,999,1,1205.99
13,1849,2019-10-05,4,999,1,1205.99
13,2914,2019-10-05,4,999,1,1205.99
13,4759,2019-10-05,4,999,1,1205.99
13,5733,2019-10-05,4,999,1,1205.99
13,7086,2019-10-05,4,999,1,1205.99
13,8935,2019-10-05,4,999,1,1205.99
13,9038,2019-10-05,4,999,1,1205.99
13,9317,2019-10-05,4,999,1,1205.99
13,12783,2019-10-05,4,999,1,1205.99
13,15826,2019-10-05,4,999,1,1205.99
13,26634,2019-10-05,4,999,1,1205.99
13,1844,2019-10-10,3,999,1,1205.99
13,3015,2019-10-10,3,999,1,1205.99
13,4463,2019-10-10,3,999,1,1205.99
13,6777,2019-10-10,3,999,1,1205.99
13,9316,2019-10-10,3,999,1,1205.99
13,13869,2019-10-10,3,999,1,1205.99
13,164,2019-10-20,2,999,1,1205.99
13,462,2019-10-20,2,999,1,1205.99
13,1258,2019-10-20,2,999,1,1205.99
13,2761,2019-10-20,2,999,1,1205.99
13,4974,2019-10-20,2,999,1,1205.99
13,7301,2019-10-20,2,999,1,1205.99
13,8937,2019-10-20,2,999,1,1205.99
13,10747,2019-10-20,2,999,1,1205.99
13,11407,2019-10-20,2,999,1,1205.99
13,25251,2019-10-20,2,999,1,1205.99
13,164,2019-10-20,3,999,1,1205.99
13,288,2019-10-20,3,999,1,1205.99
13,299,2019-10-20,3,999,1,1205.99
13,314,2019-10-20,3,999,1,1205.99
13,324,2019-10-20,3,999,1,1205.99
13,462,2019-10-20,3,999,1,1205.99
13,533,2019-10-20,3,999,1,1205.99
13,1155,2019-10-20,3,999,1,1205.99
13,1258,2019-10-20,3,999,1,1205.99
13,1743,2019-10-20,3,999,1,1205.99
13,1998,2019-10-20,3,999,1,1205.99
13,2324,2019-10-20,3,999,1,1205.99
13,2857,2019-10-20,3,999,1,1205.99
13,3087,2019-10-20,3,999,1,1205.99
13,3089,2019-10-20,3,999,1,1205.99
13,3318,2019-10-20,3,999,1,1205.99
13,3984,2019-10-20,3,999,1,1205.99
13,4040,2019-10-20,3,999,1,1205.99
13,4231,2019-10-20,3,999,1,1205.99
13,4410,2019-10-20,3,999,1,1205.99
13,4624,2019-10-20,3,999,1,1205.99
13,4974,2019-10-20,3,999,1,1205.99
13,5574,2019-10-20,3,999,1,1205.99
13,5701,2019-10-20,3,999,1,1205.99
13,6465,2019-10-20,3,999,1,1205.99
13,7301,2019-10-20,3,999,1,1205.99
13,7606,2019-10-20,3,999,1,1205.99
13,8345,2019-10-20,3,999,1,1205.99
13,10279,2019-10-20,3,999,1,1205.99
13,10747,2019-10-20,3,999,1,1205.99
13,11381,2019-10-20,3,999,1,1205.99
13,11407,2019-10-20,3,999,1,1205.99
13,11702,2019-10-20,3,999,1,1205.99
13,13232,2019-10-20,3,999,1,1205.99
13,20973,2019-10-20,3,999,1,1205.99
13,25251,2019-10-20,3,999,1,1205.99
13,27184,2019-10-20,3,999,1,1205.99
13,1297,2019-12-05,2,999,1,1205.99
13,3960,2019-12-05,2,999,1,1205.99
13,7086,2019-12-05,2,999,1,1205.99
13,7873,2019-12-05,2,999,1,1205.99
13,8686,2019-12-05,2,999,1,1205.99
13,254,2019-12-05,4,999,1,1205.99
13,1297,2019-12-05,4,999,1,1205.99
13,2310,2019-12-05,4,999,1,1205.99
13,2994,2019-12-05,4,999,1,1205.99
13,3215,2019-12-05,4,999,1,1205.99
13,8686,2019-12-05,4,999,1,1205.99
13,9038,2019-12-05,4,999,1,1205.99
13,9234,2019-12-05,4,999,1,1205.99
13,9317,2019-12-05,4,999,1,1205.99
13,12783,2019-12-05,4,999,1,1205.99

2025-02-10 14:49:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:49:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:49:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:49:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:49:57 - snowflake.connector.connection - INFO - closed
2025-02-10 14:49:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:49:57 - root - INFO - SQL:
SELECT s.*
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2020
   LIMIT 100
Results:
prod_id,cust_id,time_id,channel_id,promo_id,quantity_sold,amount_sold
13,1909,2020-10-10,2,999,1,914.34
13,2122,2020-10-10,2,999,1,914.34
13,3326,2020-10-10,2,999,1,914.34
13,3826,2020-10-10,2,999,1,914.34
13,5579,2020-10-10,2,999,1,914.34
13,6228,2020-10-10,2,999,1,914.34
13,10768,2020-10-10,2,999,1,914.34
13,11084,2020-10-10,2,999,1,914.34
13,11574,2020-10-10,2,999,1,914.34
13,12979,2020-10-10,2,999,1,914.34
13,13125,2020-10-10,2,999,1,914.34
13,14962,2020-10-10,2,999,1,914.34
13,19527,2020-10-10,2,999,1,914.34
13,1909,2020-10-10,3,999,1,1169.03
13,7300,2020-10-10,3,999,1,1169.03
13,7834,2020-10-10,3,999,1,1169.03
13,11954,2020-10-10,3,999,1,1169.03
13,13125,2020-10-10,3,999,1,1169.03
13,14275,2020-10-10,3,999,1,1169.03
13,22354,2020-10-10,3,999,1,1169.03
13,818,2020-10-20,2,999,1,914.34
13,1394,2020-10-20,2,999,1,914.34
13,1698,2020-10-20,2,999,1,914.34
13,2572,2020-10-20,2,999,1,914.34
13,2606,2020-10-20,2,999,1,914.34
13,2793,2020-10-20,2,999,1,914.34
13,5046,2020-10-20,2,999,1,914.34
13,5403,2020-10-20,2,999,1,914.34
13,5478,2020-10-20,2,999,1,914.34
13,6039,2020-10-20,2,999,1,914.34
13,7603,2020-10-20,2,999,1,914.34
13,8090,2020-10-20,2,999,1,914.34
13,8312,2020-10-20,2,999,1,914.34
13,9189,2020-10-20,2,999,1,914.34
13,11815,2020-10-20,2,999,1,914.34
13,20966,2020-10-20,2,999,1,914.34
13,31478,2020-10-20,2,999,1,914.34
13,1736,2020-12-10,2,999,1,914.34
13,3326,2020-12-10,2,999,1,914.34
13,23856,2020-12-10,2,999,1,914.34
13,1736,2020-12-10,3,999,1,1152.89
13,7926,2020-12-10,3,999,1,1152.89
13,11956,2020-12-10,3,999,1,1152.89
13,366,2020-12-14,2,999,1,914.34
13,11073,2020-12-14,2,999,1,914.34
13,12526,2020-12-14,2,999,1,914.34
13,2073,2020-12-16,2,999,1,914.34
13,2606,2020-12-20,2,999,1,914.34
13,8090,2020-12-20,2,999,1,914.34
13,20966,2020-12-20,2,999,1,914.34
13,2606,2020-12-22,2,999,1,914.34
13,8090,2020-12-22,2,999,1,914.34
13,20966,2020-12-22,2,999,1,914.34
13,1193,2020-12-22,3,999,1,1169.03
13,2606,2020-12-22,3,999,1,1169.03
13,5403,2020-12-22,3,999,1,1169.03
13,7603,2020-12-22,3,999,1,1169.03
13,8090,2020-12-22,3,999,1,1169.03
13,9710,2020-12-22,3,999,1,1169.03
13,10530,2020-12-22,3,999,1,1169.03
13,14980,2020-12-22,3,999,1,1169.03
13,20966,2020-12-22,3,999,1,1169.03
13,3670,2020-12-23,2,999,1,914.34
13,806,2020-12-23,4,999,1,842.21
13,1250,2020-12-26,4,999,1,842.21
13,4430,2020-12-26,4,999,1,842.21
13,8390,2020-12-26,4,999,1,842.21
13,5766,2020-12-30,2,999,1,927.14
13,6316,2020-12-30,2,999,1,927.14
13,4053,2020-12-30,4,999,1,842.21
13,6316,2020-12-30,4,999,1,842.21
13,390,2020-12-31,3,999,1,1169.03
13,2263,2020-12-31,3,999,1,1169.03
13,4950,2020-12-31,3,999,1,1169.03
13,5860,2020-12-31,3,999,1,1169.03
13,6180,2020-12-31,3,999,1,1169.03
13,8303,2020-12-31,3,999,1,1169.03
13,9483,2020-12-31,3,999,1,1169.03
13,17803,2020-12-31,3,999,1,1169.03
14,562,2020-10-10,2,999,1,1015.94
14,1337,2020-10-10,2,999,1,1015.94
14,2352,2020-10-10,2,999,1,1015.94
14,3184,2020-10-10,2,999,1,1015.94
14,4204,2020-10-10,2,999,1,1015.94
14,4356,2020-10-10,2,999,1,1015.94
14,9739,2020-10-10,2,999,1,1015.94
14,10698,2020-10-10,2,999,1,1015.94
14,25003,2020-10-10,2,999,1,1015.94
14,562,2020-10-10,3,999,1,1296.74
14,1274,2020-10-10,3,999,1,1296.74
14,1337,2020-10-10,3,999,1,1296.74
14,2308,2020-10-10,3,999,1,1296.74
14,2352,2020-10-10,3,999,1,1296.74
14,2617,2020-10-10,3,999,1,1296.74
14,3184,2020-10-10,3,999,1,1296.74
14,3314,2020-10-10,3,999,1,1296.74
14,4204,2020-10-10,3,999,1,1296.74
14,4356,2020-10-10,3,999,1,1296.74
14,5917,2020-10-10,3,999,1,1296.74
14,9739,2020-10-10,3,999,1,1296.74

2025-02-10 14:49:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:49:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:49:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:49:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-10 14:49:58 - snowflake.connector.connection - INFO - closed
2025-02-10 14:49:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:51:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:51:08 - root - INFO - ```sql
SELECT c."cust_city",
       SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019_Q4",
       SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020_Q4",
       ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
  ON s."cust_id" = c."cust_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
  ON c."country_id" = cnt."country_id"
WHERE cnt."country_name" = 'United States of America'
GROUP BY c."cust_city"
HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   AND ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
LIMIT 100;
```
2025-02-10 14:51:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:51:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:51:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:51:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:51:09 - snowflake.connector.connection - INFO - closed
2025-02-10 14:51:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:52:19 - root - INFO - SQL:
SELECT c."cust_city",
       SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019_Q4",
       SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020_Q4",
       ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
  ON s."cust_id" = c."cust_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
  ON c."country_id" = cnt."country_id"
WHERE cnt."country_name" = 'United States of America'
GROUP BY c."cust_city"
HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   AND ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
LIMIT 100;
Results:
cust_city,sales_2019_Q4,sales_2020_Q4,percentage_increase
Springhill,19989.42,31566.68,57.91693806023388
Forest City,11533.210000000001,23193.83,101.10472279616862
Buckley,8953.6,18039.7,101.47985167977127
Trafford,16234.35,41899.520000000004,158.09176222023058
Blountstown,40170.83,52892.54,31.669024513558714
Lakeside,383.0,6204.62,1520.0052219321149
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Plains,5536.58,12094.82,118.45290775171675
Pala,16678.56,34493.58,106.81389760267072
Earl,7067.320000000001,35661.6,404.5986314472812
Cranford,2144.13,14287.37,566.3481225485395
Syracuse,6097.51,27881.08,357.25353463954957
Selmer,3974.27,7414.67,86.56684120605796
Sykesville,27524.21,37438.46,36.02010738909491
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Knowles,3327.58,5472.69,64.46456584064094
Fort Klamath,6854.62,9722.6,41.840102004195714
Corwith,162.14,1823.25,1024.4911804613298
Otway,3326.76,4787.5,43.90878813019273
Marshal,911.98,6132.41,572.4281234237593
Maumelle,811.55,5164.0,536.3132277740127
Attica,1758.8000000000002,4735.63,169.25346827382305
Birchwood,4161.51,14166.78,240.42402877801567
Tucumcari,20440.96,24654.51,20.613268652744292
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Aneta,1019.71,3861.7799999999997,278.7135558148885
Candler,5551.95,8735.47,57.34057403254712
Legrand,877.6800000000001,3420.79,289.75366876310267
St Charles,418.79,19848.69,4639.532940137061
Aline,853.64,2971.96,248.1514455742468
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Holyrood,5289.37,10732.96,102.91565914277126
Vidalia,964.52,17779.32,1743.3334715713513
Eunice,3115.82,5283.26,69.56242658433413
Gays,6597.650000000001,16280.7,146.76513607117684
Mc Kean,4227.55,5268.85,24.631287625220285
Berkley,4294.19,5738.99,33.64546049429579
Damascus,290.22,3514.97,1111.1398249603749
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Midland,308.8,3418.57,1007.0498704663212
Chesterfield,592.48,4776.2300000000005,706.1419794761005
Locust Valley,847.87,7519.620000000001,786.8836024390532
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Mount Morris,253.53,2027.24,699.6055693606279
Pescadero,4428.44,6577.2,48.52182709938489
Ryder,6373.71,23481.33,268.4091369077037
Barre,941.0500000000001,4988.3,430.0781042452579
Rhineland,8273.54,34977.65,322.76522504272657
New Market,2006.4,3268.69,62.91317783094098
Belmont,526.23,3224.25,512.7073713015221
Vass,148.97,552.21,270.68537289387126
Bridgman,635.53,4447.66,599.8347835664721
North Hills,784.07,4363.16,456.47582486257596
Lamar,4946.81,13232.49,167.4954162379392
Alsen,8089.63,14073.32,73.96741260107075
Cloverdale,4981.18,9706.35,94.86045475168534
El Sobrante,27912.11,55631.97,99.31123086001023
Wadsworth,12961.0,15583.77,20.235861430445183
Orlinda,100.84,5328.63,5184.242364141213
Blackduck,991.86,10490.91,957.7006835642126
Allport,6360.36,10934.12,71.91039500908755
Bolivar,2110.9700000000003,8645.14,309.5340056940648
White Plains,4784.8,9480.390000000001,98.1355542551413
Shipman,228.58,686.25,200.2231166331262
Quartzhill,5133.96,12927.95,151.81244107862156
Alma,10602.75,28650.59,170.21848105444343
Long Meadow,1711.56,3011.72,75.96344854986093
Decatur,5328.97,10774.85,102.19385734954409
Shoreview,3916.35,10573.5,169.98353058332376
Kent,17266.9,24162.36,39.93455686892261
Rockyhill,372.21,4484.17,1104.7419467504903
"Roseville, MN",245.91,7903.45,3113.960392013338
Bay City,927.59,5102.59,450.0910962817624
Fromberg,556.94,6651.23,1094.2453406111965
Glennie,5561.8,13121.85,135.92811679672047
North Branch,6187.47,21751.43,251.53996706246656
Waycross,1326.78,7026.26,429.5723480908666
Mendham,3357.45,7868.2699999999995,134.35255923394243
New Hartford,1208.92,3556.36,194.17662045462066
"Belmont, MI",4801.24,8249.27,71.81540602011148
Opp,1006.38,1939.53,92.72342455136231
Five Points,2008.48,13143.61,554.4058193260576
Chimney Rock,535.52,6070.84,1033.634598147595
San Francisco,31794.72,51019.450000000004,60.46516528530525
Haswell,18268.53,33495.17,83.34901604015211
Elba,9871.84,21155.73,114.30381772800206
Aladdin,5632.360000000001,22300.77,295.9400677513511
Rock Creek,1343.42,4775.98,255.5090738562772
Thomasville,3276.86,9418.45,187.4230208187106
Ortley,12921.460000000001,15619.71,20.88192820315969
Mineral,950.97,1532.36,61.13652375995036
Union City,1017.63,12513.43,1129.6640232697544
Laluz,12454.65,17692.690000000002,42.056902442059815
Chieflake,2049.74,6411.15,212.77869388312664
West Wood,2908.52,6519.05,124.13633050486159
Toxey,126.49,6619.04,5132.856352280814
Cleveland,73.97,1594.04,2054.9817493578475
Atkinson,560.83,5128.45,814.4393131608508
Stamford,859.37,5027.7300000000005,485.04834937221466

2025-02-10 14:52:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:52:20 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:21 - root - INFO - SQL:
SELECT c."cust_city", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2020-10-01' AND '2020-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   ORDER BY "total_sales" DESC
   LIMIT 100
Results:
cust_city,total_sales
Hiseville,117380.17
Edgewood,112431.2
San Mateo,102527.1
Evinston,84002.13
Dolores,64008.58
Palmdale,62829.19
Los Angeles,55932.29
El Sobrante,55631.97
Noma,53262.53
Blountstown,52892.54
San Francisco,51019.450000000004
Saint Marks,50939.3
Mackville,47413.28
Trafford,41899.520000000004
Foxborough,40816.8
Frederick,38338.4
Sykesville,37438.46
Earl,35661.6
Rhineland,34977.65
Pala,34493.58
Sanibel,33590.51
Haswell,33495.17
Oran,32864.0
"Oxford, NJ",31942.97
Springhill,31566.68
Montara,30702.65
Alma,28650.59
Syracuse,27881.08
Tucumcari,24654.51
Kent,24162.36
Ryder,23481.33
Forest City,23193.83
Hatfield,22692.82
North Utica,22544.25
Aladdin,22300.77
Sugarloaf Key,22008.11
North Branch,21751.43
Elba,21155.73
Sheldon,20452.32
Molino,20396.58
St Charles,19848.69
Arbuckle,18347.24
Buckley,18039.7
Vidalia,17779.32
Laluz,17692.690000000002
Gays,16280.7
Hillcrest Heights,16099.779999999999
Thayer,15929.800000000001
Elm Hall,15727.89
Ortley,15619.71
Wadsworth,15583.77
Forest Heights,14697.72
Cranford,14287.37
Birchwood,14166.78
Alsen,14073.32
Sully,14017.91
Severy,14008.77
Ocala,13936.82
Lamar,13232.49
Five Points,13143.61
Glennie,13121.85
Quartzhill,12927.95
Gaastra,12712.66
Union City,12513.43
Union Springs,12228.970000000001
Plains,12094.82
Stockdale,11938.23
Housatonic,11927.03
Weissport,11446.63
North Druid Hills,11251.41
Allport,10934.12
Decatur,10774.85
Holyrood,10732.96
Shoreview,10573.5
Blackduck,10490.91
Oilton,10446.89
Puako,10090.54
Fords Prairie,10005.789999999999
Fort Klamath,9722.6
Cloverdale,9706.35
Goodhope,9700.55
White Plains,9480.390000000001
Lowndesville,9435.87
Thomasville,9418.45
Perry,9093.3
Skagway,8799.75
Candler,8735.47
Ozan,8666.38
Bolivar,8645.14
"Belmont, MI",8249.27
"Roseville, MN",7903.45
Mendham,7868.2699999999995
Locust Valley,7519.620000000001
Selmer,7414.67
Forestville,7334.18
Victoria,7328.42
Tioga,7179.47
Waycross,7026.26
Myrtle Grove,7025.45
Franklin,6899.08

2025-02-10 14:52:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-02-10 14:52:22 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:22 - root - INFO - SQL:
SELECT DISTINCT "prod_id", "prod_name"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."PRODUCTS"
   LIMIT 100
Results:
prod_id,prod_name
14,Pitching Machine and Batting Cage Combo
19,Cricket Bat Bag
21,Speed Trainer Bats and Training Program
22,MLB Official Game Baseball w/ Display Case
23,Plastic Cricket Bat
28,English Willow Cricket Bat
30,Linseed Oil
40,Team shirt
41,Team shirt
42,Team shirt
43,Team shirt
44,Team shirt
46,2 Competition Grade NFHS Baseballs
47,6 Gallon Empty Ball Bucket
49,Outdoor Cricket Ball
51,Cricket Bat Pad
128,Slugger Youth Series Maple Bat
130,Pro Maple Youth Bat
50,Cricket Gloves
129,Pro Maple Bat
31,Fiber Tape
45,Team shirt
48,Indoor Cricket Ball
127,Genuine Series MIX Wood Bat

2025-02-10 14:52:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 58
2025-02-10 14:52:23 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:24 - root - INFO - SQL:
SELECT s."prod_id", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2019-10-01' AND '2019-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY s."prod_id"
   ORDER BY "total_sales" DESC
   LIMIT 100
Results:
prod_id,total_sales
18,516004.49
14,345563.33999999997
15,338771.13
17,277886.11
21,243816.98
13,124417.09
20,115580.58
28,97388.26999999999
127,97070.31
130,92420.82
26,88879.09000000001
118,71888.06
25,71232.81999999999
40,60413.5
129,52807.57
29,51273.04
37,45470.07
35,42444.020000000004
128,30307.58
33,26470.0
126,24644.37
123,24242.26
19,23390.77
36,23147.7
39,23012.7
24,21211.37
45,20546.72
113,19885.07
133,19166.35
34,18671.41
27,18388.72
125,16879.81
41,16213.33
32,15073.92
42,14419.86
140,14306.84
114,13620.26
23,12808.119999999999
46,12169.21
116,11801.67
132,11743.52
38,10745.31
148,10660.140000000001
131,10041.82
43,9765.39
31,9672.87
48,9434.39
47,9201.64
30,8691.859999999999
44,8212.01
119,7909.5
117,7717.67
146,5538.29
115,4348.55
120,4248.22
22,3569.93
147,806.99
124,264.36

2025-02-10 14:52:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-02-10 14:52:25 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:25 - root - INFO - SQL:
SELECT s."prod_id", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2020-10-01' AND '2020-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY s."prod_id"
   ORDER BY "total_sales" DESC
   LIMIT 100
Results:
prod_id,total_sales
20,329647.45
18,263392.87
14,204057.21000000002
17,171160.63
21,131209.07
28,110583.09
15,110229.36
13,91683.57
25,82112.29
26,78933.08
130,77439.0
37,76644.70999999999
35,64586.96
40,52525.02
29,51132.33
39,48944.42
34,43740.77
24,42423.54
36,41195.25
41,36298.6
32,34507.729999999996
33,33687.99
42,28750.71
16,27717.46
137,26073.65
118,25081.12
135,24652.43
123,23773.12
19,22652.46
129,21380.27
127,19767.829999999998
27,19598.03
140,18747.8
133,18495.84
44,18264.45
43,17736.6
132,16642.43
128,16626.16
47,16026.31
114,15779.82
124,15239.08
138,14662.06
38,14253.51
23,14141.8
131,13970.82
139,13853.61
113,13409.45
141,13059.12
30,12542.44
134,10754.85
48,10492.49
148,10253.37
126,9651.14
31,9052.13
119,8331.78
121,8132.9
120,7773.92
125,7188.29
142,7026.06
116,7004.87
46,6906.23
122,5431.53
117,5381.01
146,4639.99
143,4418.67
115,4240.26
144,1813.25
136,1725.52
45,1392.92
147,398.25
22,244.48999999999998
145,236.91

2025-02-10 14:52:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:52:26 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:27 - root - INFO - SQL:
SELECT c."cust_city",
          SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
          SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   LIMIT 100
Results:
cust_city,sales_2019,sales_2020
Orangeville,42884.88,1553.17
Palmdale,80652.32,62829.19
Tioga,108592.76,7179.47
Strang,24568.02,6082.740000000001
Foxborough,53195.13,40816.8
Hillcrest Heights,15641.33,16099.779999999999
Hiseville,106071.73,117380.17
Molino,27073.96,20396.58
Roseville,10756.25,479.79
Vanleer,103981.36,5463.71
Little Port,49624.2,2574.58
Skagway,9596.6,8799.75
Puako,53206.47,10090.54
Lamar,4946.81,13232.49
Frederick,101516.27,38338.4
"Bradford, IL",23823.24,0.0
Alsen,8089.63,14073.32
Forrestcity,95747.13,6405.86
Cloverdale,4981.18,9706.35
Edgewood,126918.62,112431.2
El Sobrante,27912.11,55631.97
Wadsworth,12961.0,15583.77
Honomu,7374.95,2397.56
Orlinda,100.84,5328.63
Blackduck,991.86,10490.91
Allport,6360.36,10934.12
Bolivar,2110.9700000000003,8645.14
Forestville,12095.78,7334.18
Forest Heights,25774.89,14697.72
White Plains,4784.8,9480.390000000001
Albion,6049.72,3239.68
Shipman,228.58,686.25
Quartzhill,5133.96,12927.95
Alma,10602.75,28650.59
Long Meadow,1711.56,3011.72
Decatur,5328.97,10774.85
Shoreview,3916.35,10573.5
Kent,17266.9,24162.36
Perry,10216.12,9093.3
Rockyhill,372.21,4484.17
"Roseville, MN",245.91,7903.45
Bay City,927.59,5102.59
Fromberg,556.94,6651.23
Mackville,41895.31,47413.28
Glennie,5561.8,13121.85
North Branch,6187.47,21751.43
Waycross,1326.78,7026.26
Mendham,3357.45,7868.2699999999995
Goodhope,8363.09,9700.55
Tonkawa,1354.52,716.22
New Hartford,1208.92,3556.36
"Belmont, MI",4801.24,8249.27
North Bellmore,1406.23,1266.65
Opp,1006.38,1939.53
Madison,2367.33,1159.48
Five Points,2008.48,13143.61
Chimney Rock,535.52,6070.84
San Francisco,31794.72,51019.450000000004
Holland,25370.72,0.0
Los Angeles,68608.1,55932.29
Haswell,18268.53,33495.17
Elba,9871.84,21155.73
Aladdin,5632.360000000001,22300.77
Rock Creek,1343.42,4775.98
Thomasville,3276.86,9418.45
Franklin,9312.85,6899.08
Pageland,4642.86,1887.48
Ortley,12921.460000000001,15619.71
Mineral,950.97,1532.36
Union City,1017.63,12513.43
Laluz,12454.65,17692.690000000002
Chieflake,2049.74,6411.15
West Wood,2908.52,6519.05
Toxey,126.49,6619.04
Artas,2042.73,259.65
Smyrna,6582.92,5471.97
Hitchita,10151.17,3486.49
East Hazelcrest,14521.36,3656.7
Carrier,16249.72,0.0
Lake City,2668.31,892.3
Cleveland,73.97,1594.04
Atkinson,560.83,5128.45
Stamford,859.37,5027.7300000000005
Flint,4094.59,3591.08
Bethel Acres,4546.0199999999995,6146.48
North Druid Hills,25773.93,11251.41
Montreal,3040.12,0.0
Myrtle Grove,6714.400000000001,7025.45
Lowndesville,6897.79,9435.87
Black River,1188.73,3587.81
Norman,3531.2,4777.76
Washington,4014.92,4774.17
Bethelpark,1014.42,5419.68
Atalissa,462.32,3630.19
Golden's Bridge,3641.7200000000003,493.90999999999997
Central City,46.84,1573.37
Southaven,241.57999999999998,6051.75
Batesland,1004.72,107.44
Lancaster,1867.17,2243.06
Bryant,1020.64,6635.96

2025-02-10 14:52:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:52:28 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:28 - root - INFO - SQL:
SELECT c."cust_city",
          SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
          SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
          ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
            SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
            NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   LIMIT 100
Results:
cust_city,sales_2019,sales_2020,percentage_increase
Dolores,62878.29,64008.58,1.7975838719532622
Cayuga,10244.92,0.0,-100.0
Duncan,55016.28,6181.96,-88.7633987612394
Montara,42237.05,30702.65,-27.308725396304904
Springhill,19989.42,31566.68,57.91693806023388
San Mateo,175595.81,102527.1,-41.61187559088112
Forest City,11533.210000000001,23193.83,101.10472279616862
Buckley,8953.6,18039.7,101.47985167977127
Trafford,16234.35,41899.520000000004,158.09176222023058
Ozan,24385.02,8666.38,-64.46023009208113
North Utica,29001.06,22544.25,-22.26404827961461
Duson,21623.74,3913.91,-81.89993960341737
Atwood,20519.07,5329.35,-74.02733164807177
Fisher,48466.08,0.0,-100.0
Oran,57583.51,32864.0,-42.9281056330189
Timken,13712.95,1072.71,-92.17739436080494
Saint Marks,60693.43,50939.3,-16.07114641568288
Evinston,76481.23,84002.13,9.833654610418803
Sully,17494.52,14017.91,-19.872565809179104
Arbuckle,70705.36,18347.24,-74.05113275712053
Stockdale,14314.76,11938.23,-16.601954905286576
Sanibel,86872.68000000001,33590.51,-61.33363216145743
Blountstown,40170.83,52892.54,31.669024513558714
Sugarloaf Key,19805.33,22008.11,11.122157520223084
Lakeside,383.0,6204.62,1520.0052219321149
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Plains,5536.58,12094.82,118.45290775171675
Pala,16678.56,34493.58,106.81389760267072
Earl,7067.320000000001,35661.6,404.5986314472812
Cranford,2144.13,14287.37,566.3481225485395
Winter Springs,4299.3,2522.75,-41.321843090735705
Syracuse,6097.51,27881.08,357.25353463954957
Selmer,3974.27,7414.67,86.56684120605796
West Milford,8086.56,0.0,-100.0
Wrightsboro,12945.95,0.0,-100.0
Sykesville,27524.21,37438.46,36.02010738909491
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Knowles,3327.58,5472.69,64.46456584064094
Danville,6268.88,6091.55,-2.8287349574405622
Fort Klamath,6854.62,9722.6,41.840102004195714
Lewisville,300.22,353.39,17.710345746452585
Churchville,3214.52,124.62,-96.12321590781828
Corwith,162.14,1823.25,1024.4911804613298
Elm Hall,13207.68,15727.89,19.08139809565343
Otway,3326.76,4787.5,43.90878813019273
Glasco,3906.78,4230.23,8.279196678594632
Marshal,911.98,6132.41,572.4281234237593
Maumelle,811.55,5164.0,536.3132277740127
North Enid,11256.82,0.0,-100.0
Birch Run,2467.7799999999997,1678.61,-31.978944638501
Whalepass,175.95,126.97,-27.83745382210855
Attica,1758.8000000000002,4735.63,169.25346827382305
Birchwood,4161.51,14166.78,240.42402877801567
Farmington,59071.04,950.56,-98.39081891905069
Henagar,8613.61,2242.33,-73.96759314619538
Cypress Gardens,9342.07,2819.23,-69.82221285004287
Holden,14696.9,3443.35,-76.57090951152963
Bridgeport,16154.7,629.99,-96.10026803345157
Tucumcari,20440.96,24654.51,20.613268652744292
Weissport,12410.69,11446.63,-7.767980668278727
Tijeras,2357.46,1343.95,-42.99160961373682
Oilton,8910.56,10446.89,17.241677290765114
Dillsboro,18434.74,3837.96,-79.1808292387091
Union Springs,13347.57,12228.970000000001,-8.380551665958661
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Aneta,1019.71,3861.7799999999997,278.7135558148885
Candler,5551.95,8735.47,57.34057403254712
Legrand,877.6800000000001,3420.79,289.75366876310267
St Charles,418.79,19848.69,4639.532940137061
Aline,853.64,2971.96,248.1514455742468
Shevlin,4630.59,1556.43,-66.38808445576049
Crownpoint,3715.64,864.9,-76.72271802435112
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Victoria,10279.49,7328.42,-28.708330860772275
Hatfield,34022.82,22692.82,-33.30117844435
Holyrood,5289.37,10732.96,102.91565914277126
"Bristol, VT",2953.91,934.93,-68.3494080726901
Smithville,4596.34,4033.4,-12.247570893362981
Vidalia,964.52,17779.32,1743.3334715713513
Eunice,3115.82,5283.26,69.56242658433413
Godwin,4791.2,3491.16,-27.13391217231591
Gays,6597.650000000001,16280.7,146.76513607117684
Noma,52315.57,53262.53,1.8100921006881872
North Carrollton,9041.64,6850.98,-24.228569153383678
Morris,3221.04,0.0,-100.0
Mc Kean,4227.55,5268.85,24.631287625220285
Bloomingdale,4519.85,1973.17,-56.34434771065412
Berkley,4294.19,5738.99,33.64546049429579
Damascus,290.22,3514.97,1111.1398249603749
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Mullins,276.38,187.42000000000002,-32.187567841377806
Midland,308.8,3418.57,1007.0498704663212
Chesterfield,592.48,4776.2300000000005,706.1419794761005
Locust Valley,847.87,7519.620000000001,786.8836024390532
Bowen,728.52,544.53,-25.255312139680452
Bedford,3890.09,3891.99,0.04884205763875993
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Buffalo,415.89,348.6,-16.179759070908165
Mount Morris,253.53,2027.24,699.6055693606279

2025-02-10 14:52:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-10 14:52:29 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:30 - root - INFO - SQL:
SELECT c."cust_city",
          SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
          SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
          ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
            SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
            NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
      AND ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
            SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
            NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
   LIMIT 100
Results:
cust_city,sales_2019,sales_2020,percentage_increase
Springhill,19989.42,31566.68,57.91693806023388
Forest City,11533.210000000001,23193.83,101.10472279616862
Buckley,8953.6,18039.7,101.47985167977127
Trafford,16234.35,41899.520000000004,158.09176222023058
Blountstown,40170.83,52892.54,31.669024513558714
Lakeside,383.0,6204.62,1520.0052219321149
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Plains,5536.58,12094.82,118.45290775171675
Pala,16678.56,34493.58,106.81389760267072
Earl,7067.320000000001,35661.6,404.5986314472812
Cranford,2144.13,14287.37,566.3481225485395
Syracuse,6097.51,27881.08,357.25353463954957
Selmer,3974.27,7414.67,86.56684120605796
Sykesville,27524.21,37438.46,36.02010738909491
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Knowles,3327.58,5472.69,64.46456584064094
Fort Klamath,6854.62,9722.6,41.840102004195714
Corwith,162.14,1823.25,1024.4911804613298
Otway,3326.76,4787.5,43.90878813019273
Marshal,911.98,6132.41,572.4281234237593
Maumelle,811.55,5164.0,536.3132277740127
Attica,1758.8000000000002,4735.63,169.25346827382305
Birchwood,4161.51,14166.78,240.42402877801567
Tucumcari,20440.96,24654.51,20.613268652744292
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Aneta,1019.71,3861.7799999999997,278.7135558148885
Candler,5551.95,8735.47,57.34057403254712
Legrand,877.6800000000001,3420.79,289.75366876310267
St Charles,418.79,19848.69,4639.532940137061
Aline,853.64,2971.96,248.1514455742468
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Holyrood,5289.37,10732.96,102.91565914277126
Vidalia,964.52,17779.32,1743.3334715713513
Eunice,3115.82,5283.26,69.56242658433413
Gays,6597.650000000001,16280.7,146.76513607117684
Mc Kean,4227.55,5268.85,24.631287625220285
Berkley,4294.19,5738.99,33.64546049429579
Damascus,290.22,3514.97,1111.1398249603749
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Midland,308.8,3418.57,1007.0498704663212
Chesterfield,592.48,4776.2300000000005,706.1419794761005
Locust Valley,847.87,7519.620000000001,786.8836024390532
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Mount Morris,253.53,2027.24,699.6055693606279
Pescadero,4428.44,6577.2,48.52182709938489
Ryder,6373.71,23481.33,268.4091369077037
Barre,941.0500000000001,4988.3,430.0781042452579
Rhineland,8273.54,34977.65,322.76522504272657
New Market,2006.4,3268.69,62.91317783094098
Belmont,526.23,3224.25,512.7073713015221
Vass,148.97,552.21,270.68537289387126
Bridgman,635.53,4447.66,599.8347835664721
North Hills,784.07,4363.16,456.47582486257596
Lamar,4946.81,13232.49,167.4954162379392
Alsen,8089.63,14073.32,73.96741260107075
Cloverdale,4981.18,9706.35,94.86045475168534
El Sobrante,27912.11,55631.97,99.31123086001023
Wadsworth,12961.0,15583.77,20.235861430445183
Orlinda,100.84,5328.63,5184.242364141213
Blackduck,991.86,10490.91,957.7006835642126
Allport,6360.36,10934.12,71.91039500908755
Bolivar,2110.9700000000003,8645.14,309.5340056940648
White Plains,4784.8,9480.390000000001,98.1355542551413
Shipman,228.58,686.25,200.2231166331262
Quartzhill,5133.96,12927.95,151.81244107862156
Alma,10602.75,28650.59,170.21848105444343
Long Meadow,1711.56,3011.72,75.96344854986093
Decatur,5328.97,10774.85,102.19385734954409
Shoreview,3916.35,10573.5,169.98353058332376
Kent,17266.9,24162.36,39.93455686892261
Rockyhill,372.21,4484.17,1104.7419467504903
"Roseville, MN",245.91,7903.45,3113.960392013338
Bay City,927.59,5102.59,450.0910962817624
Fromberg,556.94,6651.23,1094.2453406111965
Glennie,5561.8,13121.85,135.92811679672047
North Branch,6187.47,21751.43,251.53996706246656
Waycross,1326.78,7026.26,429.5723480908666
Mendham,3357.45,7868.2699999999995,134.35255923394243
New Hartford,1208.92,3556.36,194.17662045462066
"Belmont, MI",4801.24,8249.27,71.81540602011148
Opp,1006.38,1939.53,92.72342455136231
Five Points,2008.48,13143.61,554.4058193260576
Chimney Rock,535.52,6070.84,1033.634598147595
San Francisco,31794.72,51019.450000000004,60.46516528530525
Haswell,18268.53,33495.17,83.34901604015211
Elba,9871.84,21155.73,114.30381772800206
Aladdin,5632.360000000001,22300.77,295.9400677513511
Rock Creek,1343.42,4775.98,255.5090738562772
Thomasville,3276.86,9418.45,187.4230208187106
Ortley,12921.460000000001,15619.71,20.88192820315969
Mineral,950.97,1532.36,61.13652375995036
Union City,1017.63,12513.43,1129.6640232697544
Laluz,12454.65,17692.690000000002,42.056902442059815
Chieflake,2049.74,6411.15,212.77869388312664
West Wood,2908.52,6519.05,124.13633050486159
Toxey,126.49,6619.04,5132.856352280814
Cleveland,73.97,1594.04,2054.9817493578475
Atkinson,560.83,5128.45,814.4393131608508
Stamford,859.37,5027.7300000000005,485.04834937221466

2025-02-10 14:52:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:52:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:52:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:52:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 58
2025-02-10 14:52:31 - snowflake.connector.connection - INFO - closed
2025-02-10 14:52:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:52:32 - root - INFO - SQL:
SELECT s."prod_id",
          SUM(s."amount_sold") AS "product_sales",
          (SUM(s."amount_sold") / (SELECT SUM(s2."amount_sold")
                                   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s2
                                   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c2
                                     ON s2."cust_id" = c2."cust_id"
                                   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt2
                                     ON c2."country_id" = cnt2."country_id"
                                   WHERE s2."time_id" BETWEEN '2019-10-01' AND '2019-12-31'
                                     AND cnt2."country_name" = 'United States of America')) * 100 AS "share_2019"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2019-10-01' AND '2019-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY s."prod_id"
   ORDER BY "share_2019" DESC
   LIMIT 100
Results:
prod_id,product_sales,share_2019
18,516004.49,15.701791600520782
14,345563.33999999997,10.515341735611461
15,338771.13,10.30865774740242
17,277886.11,8.45595314083293
21,243816.98,7.419244372521533
13,124417.09,3.785957790257287
20,115580.58,3.517066644569935
28,97388.26999999999,2.9634825849582236
127,97070.31,2.953807200820963
130,92420.82,2.8123252477691487
26,88879.09000000001,2.704551948421865
118,71888.06,2.1875223153305003
25,71232.81999999999,2.167583647881453
40,60413.5,1.8383564585999286
129,52807.57,1.606911325655157
29,51273.04,1.5602162469655374
37,45470.07,1.3836344005477395
35,42444.020000000004,1.2915530187117872
128,30307.58,0.92224644222788
33,26470.0,0.8054705564011373
126,24644.37,0.7499174316605779
123,24242.26,0.7376813997212328
19,23390.77,0.7117709303570469
36,23147.7,0.7043744162601665
39,23012.7,0.700266425133829
24,21211.37,0.6454527387960102
45,20546.72,0.6252277291506754
113,19885.07,0.6050940081970368
133,19166.35,0.5832236720316939
34,18671.41,0.5681628636756237
27,18388.72,0.5595607302570731
125,16879.81,0.5136452569945404
41,16213.33,0.49336456124727057
32,15073.92,0.45869281184534305
42,14419.86,0.43879005128169646
140,14306.84,0.4353509019698545
114,13620.26,0.41445857198821895
23,12808.119999999999,0.3897455059634505
46,12169.21,0.3703037532928706
116,11801.67,0.359119671377507
132,11743.52,0.357350192236792
38,10745.31,0.32697509725737456
148,10660.140000000001,0.32438341130011417
131,10041.82,0.3055682033502104
43,9765.39,0.2971565590016661
31,9672.87,0.29434121574974953
48,9434.39,0.28708437335116455
47,9201.64,0.28000189235371975
30,8691.859999999999,0.26448950926939135
44,8212.01,0.249887883032554
119,7909.5,0.24068263565752915
117,7717.67,0.23484533241482303
146,5538.29,0.1685277494450644
115,4348.55,0.13232448009211054
120,4248.22,0.1292714819461443
22,3569.93,0.10863141304922977
147,806.99,0.024556353770689605
124,264.36,0.008044359512285782

2025-02-10 14:52:32 - root - INFO - itercount: 0
2025-02-10 14:52:32 - root - INFO - Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,0
table_name,COUNTRIES
description,
DDL,"create or replace TABLE COUNTRIES (
	""country_id"" NUMBER(38,0),
	""country_iso_code"" VARCHAR(16777216),
	""country_name"" VARCHAR(16777216),
	""country_subregion"" VARCHAR(16777216),
	""country_subregion_id"" NUMBER(38,0),
	""country_region"" VARCHAR(16777216),
	""country_region_id"" NUMBER(38,0),
	""country_total"" VARCHAR(16777216),
	""country_total_id"" NUMBER(38,0)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,1
table_name,SUPPLEMENTARY_DEMOGRAPHICS
description,
DDL,"create or replace TABLE SUPPLEMENTARY_DEMOGRAPHICS (
	""cust_id"" NUMBER(38,0),
	""education"" VARCHAR(16777216),
	""occupation"" VARCHAR(16777216),
	""household_size"" VARCHAR(16777216),
	""yrs_residence"" NUMBER(38,0),
	""affinity_card"" NUMBER(38,0),
	""cricket"" NUMBER(38,0),
	""baseball"" NUMBER(38,0),
	""tennis"" NUMBER(38,0),
	""soccer"" NUMBER(38,0),
	""golf"" NUMBER(38,0),
	""unknown"" NUMBER(38,0),
	""misc"" NUMBER(38,0),
	""comments"" VARCHAR(16777216)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,2
table_name,COSTS
description,
DDL,"create or replace TABLE COSTS (
	""prod_id"" NUMBER(38,0),
	""time_id"" VARCHAR(16777216),
	""promo_id"" NUMBER(38,0),
	""channel_id"" NUMBER(38,0),
	""unit_cost"" FLOAT,
	""unit_price"" FLOAT
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,3
table_name,CURRENCY
description,
DDL,"create or replace TABLE CURRENCY (
	""country"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""month"" NUMBER(38,0),
	""to_us"" FLOAT
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,4
table_name,CUSTOMERS
description,
DDL,"create or replace TABLE CUSTOMERS (
	""cust_id"" NUMBER(38,0),
	""cust_first_name"" VARCHAR(16777216),
	""cust_last_name"" VARCHAR(16777216),
	""cust_gender"" VARCHAR(16777216),
	""cust_year_of_birth"" NUMBER(38,0),
	""cust_marital_status"" VARCHAR(16777216),
	""cust_street_address"" VARCHAR(16777216),
	""cust_postal_code"" VARCHAR(16777216),
	""cust_city"" VARCHAR(16777216),
	""cust_city_id"" NUMBER(38,0),
	""cust_state_province"" VARCHAR(16777216),
	""cust_state_province_id"" NUMBER(38,0),
	""country_id"" NUMBER(38,0),
	""cust_main_phone_number"" VARCHAR(16777216),
	""cust_income_level"" VARCHAR(16777216),
	""cust_credit_limit"" FLOAT,
	""cust_email"" VARCHAR(16777216),
	""cust_total"" VARCHAR(16777216),
	""cust_total_id"" NUMBER(38,0),
	""cust_src_id"" VARCHAR(16777216),
	""cust_eff_from"" VARCHAR(16777216),
	""cust_eff_to"" VARCHAR(16777216),
	""cust_valid"" VARCHAR(16777216)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,5
table_name,PRODUCTS
description,
DDL,"create or replace TABLE PRODUCTS (
	""prod_id"" NUMBER(38,0),
	""prod_name"" VARCHAR(16777216),
	""prod_desc"" VARCHAR(16777216),
	""prod_subcategory"" VARCHAR(16777216),
	""prod_subcategory_id"" NUMBER(38,0),
	""prod_subcategory_desc"" VARCHAR(16777216),
	""prod_category"" VARCHAR(16777216),
	""prod_category_id"" NUMBER(38,0),
	""prod_category_desc"" VARCHAR(16777216),
	""prod_weight_class"" NUMBER(38,0),
	""prod_unit_of_measure"" VARCHAR(16777216),
	""prod_pack_size"" VARCHAR(16777216),
	""supplier_id"" NUMBER(38,0),
	""prod_status"" VARCHAR(16777216),
	""prod_list_price"" FLOAT,
	""prod_min_price"" FLOAT,
	""prod_total"" VARCHAR(16777216),
	""prod_total_id"" NUMBER(38,0),
	""prod_src_id"" VARCHAR(16777216),
	""prod_eff_from"" VARCHAR(16777216),
	""prod_eff_to"" VARCHAR(16777216),
	""prod_valid"" VARCHAR(16777216)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,6
table_name,TIMES
description,
DDL,"create or replace TABLE TIMES (
	""time_id"" VARCHAR(16777216),
	""day_name"" VARCHAR(16777216),
	""day_number_in_week"" NUMBER(38,0),
	""day_number_in_month"" NUMBER(38,0),
	""calendar_week_number"" NUMBER(38,0),
	""fiscal_week_number"" NUMBER(38,0),
	""week_ending_day"" VARCHAR(16777216),
	""week_ending_day_id"" NUMBER(38,0),
	""calendar_month_number"" NUMBER(38,0),
	""fiscal_month_number"" NUMBER(38,0),
	""calendar_month_desc"" VARCHAR(16777216),
	""calendar_month_id"" NUMBER(38,0),
	""fiscal_month_desc"" VARCHAR(16777216),
	""fiscal_month_id"" NUMBER(38,0),
	""days_in_cal_month"" NUMBER(38,0),
	""days_in_fis_month"" NUMBER(38,0),
	""end_of_cal_month"" VARCHAR(16777216),
	""end_of_fis_month"" VARCHAR(16777216),
	""calendar_month_name"" VARCHAR(16777216),
	""fiscal_month_name"" VARCHAR(16777216),
	""calendar_quarter_desc"" VARCHAR(16777216),
	""calendar_quarter_id"" NUMBER(38,0),
	""fiscal_quarter_desc"" VARCHAR(16777216),
	""fiscal_quarter_id"" NUMBER(38,0),
	""days_in_cal_quarter"" NUMBER(38,0),
	""days_in_fis_quarter"" NUMBER(38,0),
	""end_of_cal_quarter"" VARCHAR(16777216),
	""end_of_fis_quarter"" VARCHAR(16777216),
	""calendar_quarter_number"" NUMBER(38,0),
	""fiscal_quarter_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""calendar_year_id"" NUMBER(38,0),
	""fiscal_year"" NUMBER(38,0),
	""fiscal_year_id"" NUMBER(38,0),
	""days_in_cal_year"" NUMBER(38,0),
	""days_in_fis_year"" NUMBER(38,0),
	""end_of_cal_year"" VARCHAR(16777216),
	""end_of_fis_year"" VARCHAR(16777216)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,7
table_name,CHANNELS
description,
DDL,"create or replace TABLE CHANNELS (
	""channel_id"" NUMBER(38,0),
	""channel_desc"" VARCHAR(16777216),
	""channel_class"" VARCHAR(16777216),
	""channel_class_id"" NUMBER(38,0),
	""channel_total"" VARCHAR(16777216),
	""channel_total_id"" NUMBER(38,0)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,8
table_name,PROMOTIONS
description,
DDL,"create or replace TABLE PROMOTIONS (
	""promo_id"" NUMBER(38,0),
	""promo_name"" VARCHAR(16777216),
	""promo_subcategory"" VARCHAR(16777216),
	""promo_subcategory_id"" NUMBER(38,0),
	""promo_category"" VARCHAR(16777216),
	""promo_category_id"" NUMBER(38,0),
	""promo_cost"" FLOAT,
	""promo_begin_date"" VARCHAR(16777216),
	""promo_end_date"" VARCHAR(16777216),
	""promo_total"" VARCHAR(16777216),
	""promo_total_id"" NUMBER(38,0)
);"

Database Name: COMPLEX_ORACLE
Schema Name: COMPLEX_ORACLE
,9
table_name,SALES
description,
DDL,"create or replace TABLE SALES (
	""prod_id"" NUMBER(38,0),
	""cust_id"" NUMBER(38,0),
	""time_id"" VARCHAR(16777216),
	""channel_id"" NUMBER(38,0),
	""promo_id"" NUMBER(38,0),
	""quantity_sold"" NUMBER(38,0),
	""amount_sold"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'COMPLEX_ORACLE': {'COMPLEX_ORACLE': ['COUNTRIES', 'SUPPLEMENTARY_DEMOGRAPHICS', 'COSTS', 'CURRENCY', 'CUSTOMERS', 'PRODUCTS', 'TIMES', 'CHANNELS', 'PROMOTIONS', 'SALES']}}
Begin Exploring Related Columns
Relevant tables and columns:

**From `SALES` table:**

- `"prod_id"`: Used to identify products.
- `"cust_id"`: Used to link sales to customers.
- `"time_id"`: Used to link sales to time periods.
- `"promo_id"`: Used to filter out promotional sales (exclude promotions).
- `"quantity_sold"`: Quantity of products sold.
- `"amount_sold"`: Total amount sold.

**From `CUSTOMERS` table:**

- `"cust_id"`: Used to link customers to sales.
- `"cust_city"`: Used to identify customer's city.
- `"country_id"`: Used to link to countries.

**From `COUNTRIES` table:**

- `"country_id"`: Used to link to customers.
- `"country_name"`: Used to filter for the United States.

**From `TIMES` table:**

- `"time_id"`: Used to link times to sales.
- `"calendar_quarter_number"`: Used to filter for Q4.
- `"calendar_year"`: Used to filter for 2019 and 2020.

**From `PRODUCTS` table:**

- `"prod_id"`: Used to identify products.
- `"prod_name"`: Used to get product names.

**Possible conditions:**

- Exclude promotional sales: `"promo_id"` is `NULL` or equals `0`.
- Filter for Q4 2019 and Q4 2020: `"calendar_quarter_number"` = 4 and `"calendar_year"` IN (2019, 2020).
- Filter for United States: `"country_name"` = 'United States'.
- Calculate percentage increase: Sales increase by at least 20% from Q4 2019 to Q4 2020.

---

**SQL Queries:**

1. **List distinct country names from the `COUNTRIES` table:**

   ```sql
   SELECT DISTINCT "country_name"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES"
   LIMIT 100;
   ```

2. **List distinct calendar quarters and years from the `TIMES` table:**

   ```sql
   SELECT DISTINCT "calendar_quarter_number", "calendar_year"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES"
   ORDER BY "calendar_year", "calendar_quarter_number"
   LIMIT 100;
   ```

3. **Retrieve sales records excluding promotions:**

   ```sql
   SELECT *
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES"
   WHERE "promo_id" IS NULL OR "promo_id" = 0
   LIMIT 100;
   ```

4. **List customers located in the United States:**

   ```sql
   SELECT DISTINCT c."cust_id", c."cust_city", c."country_id"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States'
   LIMIT 100;
   ```

5. **Retrieve sales data for Q4 2019:**

   ```sql
   SELECT s.*
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2019
   LIMIT 100;
   ```

6. **Retrieve sales data for Q4 2020:**

   ```sql
   SELECT s.*
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2020
   LIMIT 100;
   ```

7. **Calculate total sales per city in Q4 2019 (excluding promotions):**

   ```sql
   SELECT c."cust_city", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2019
     AND (s."promo_id" IS NULL OR s."promo_id" = 0)
     AND cnt."country_name" = 'United States'
   GROUP BY c."cust_city"
   ORDER BY "total_sales" DESC
   LIMIT 100;
   ```

8. **Calculate total sales per city in Q4 2020 (excluding promotions):**

   ```sql
   SELECT c."cust_city", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2020
     AND (s."promo_id" IS NULL OR s."promo_id" = 0)
     AND cnt."country_name" = 'United States'
   GROUP BY c."cust_city"
   ORDER BY "total_sales" DESC
   LIMIT 100;
   ```

9. **List product IDs and names from the `PRODUCTS` table:**

   ```sql
   SELECT DISTINCT "prod_id", "prod_name"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."PRODUCTS"
   LIMIT 100;
   ```

10. **Calculate total sales per product in Q4 2019 (excluding promotions):**

    ```sql
    SELECT s."prod_id", SUM(s."amount_sold") AS "total_sales"
    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
      ON s."time_id" = t."time_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
      ON s."cust_id" = c."cust_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
      ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" = 2019
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States'
    GROUP BY s."prod_id"
    ORDER BY "total_sales" DESC
    LIMIT 100;
    ```

11. **Calculate total sales per product in Q4 2020 (excluding promotions):**

    ```sql
    SELECT s."prod_id", SUM(s."amount_sold") AS "total_sales"
    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
      ON s."time_id" = t."time_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
      ON s."cust_id" = c."cust_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
      ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" = 2020
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States'
    GROUP BY s."prod_id"
    ORDER BY "total_sales" DESC
    LIMIT 100;
    ```

12. **List total sales per city for both Q4 2019 and Q4 2020:**

    ```sql
    SELECT c."cust_city",
           SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
           SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
      ON s."time_id" = t."time_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
      ON s."cust_id" = c."cust_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
      ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
    LIMIT 100;
    ```

13. **Calculate percentage sales increase per city from Q4 2019 to Q4 2020:**

    ```sql
    SELECT c."cust_city",
           SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
           SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
           ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) * 100) AS "percentage_increase"
    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
      ON s."time_id" = t."time_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
      ON s."cust_id" = c."cust_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
      ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
    LIMIT 100;
    ```

14. **Identify cities with at least a 20% sales increase from Q4 2019 to Q4 2020:**

    ```sql
    SELECT c."cust_city",
           SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
           SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
           ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) * 100) AS "percentage_increase"
    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
      ON s."time_id" = t."time_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
      ON s."cust_id" = c."cust_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
      ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) * 100) >= 20
    LIMIT 100;
    ```

15. **Calculate each product's share of total sales in Q4 2019 (excluding promotions):**

    ```sql
    SELECT s."prod_id",
           SUM(s."amount_sold") AS "product_sales",
           (SUM(s."amount_sold") / (SELECT SUM(s2."amount_sold")
                                    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s2
                                    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t2
                                      ON s2."time_id" = t2."time_id"
                                    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c2
                                      ON s2."cust_id" = c2."cust_id"
                                    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt2
                                      ON c2."country_id" = cnt2."country_id"
                                    WHERE t2."calendar_quarter_number" = 4
                                      AND t2."calendar_year" = 2019
                                      AND (s2."promo_id" IS NULL OR s2."promo_id" = 0)
                                      AND cnt2."country_name" = 'United States')) * 100 AS "share_2019"
    FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
      ON s."time_id" = t."time_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
      ON s."cust_id" = c."cust_id"
    JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
      ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" = 2019
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States'
    GROUP BY s."prod_id"
    ORDER BY "share_2019" DESC
    LIMIT 100;
    ```

---

These queries help in understanding the data related to the task by exploring relevant tables, columns, and conditions. Each query is designed to retrieve specific information that can be used to perform calculations or analyses required by the task.Query:
SELECT DISTINCT "country_name"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES"
   LIMIT 100;
Answer:
country_name
Singapore
Italy
China
Canada
Argentina
Germany
Denmark
Spain
Ireland
Japan
Malaysia
Netherlands
Poland
United Kingdom
United States of America
South Africa
Mexico
Sweden
Switzerland
Egypt
Zimbabwe
Kuwait
Romania
Hungary
Saudi Arabia
Turkey
Chile
Australia
New Zealand
Thailand
Nigeria
Israel
Brazil
India
France
Query:
SELECT DISTINCT "calendar_quarter_number", "calendar_year"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES"
   ORDER BY "calendar_year", "calendar_quarter_number"
   LIMIT 100;
Answer:
calendar_quarter_number,calendar_year
1,2019
2,2019
3,2019
4,2019
1,2020
2,2020
3,2020
4,2020
1,2021
2,2021
3,2021
4,2021
1,2022
2,2022
3,2022
4,2022
1,2023
2,2023
3,2023
4,2023
Query:
SELECT c."cust_city",
       SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
       SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
       ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
  ON s."time_id" = t."time_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
  ON s."cust_id" = c."cust_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
  ON c."country_id" = cnt."country_id"
WHERE t."calendar_quarter_number" = 4
  AND t."calendar_year" IN (2019, 2020)
  AND cnt."country_name" = 'United States of America'
GROUP BY c."cust_city"
HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
   AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
LIMIT 100;
Answer:
cust_city,sales_2019,sales_2020,percentage_increase
Syracuse,6097.51,27881.08,357.25353463954957
Tucumcari,20440.96,24654.51,20.613268652744292
Rhineland,8273.54,34977.65,322.76522504272657
Sykesville,27524.21,37438.46,36.02010738909491
Blountstown,40170.83,52892.54,31.669024513558714
Pala,16678.56,34493.58,106.81389760267072
Plains,5536.58,12094.82,118.45290775171675
Candler,5551.95,8735.47,57.34057403254712
Springhill,19989.42,31566.68,57.91693806023388
Fort Klamath,6854.62,9722.6,41.840102004195714
Trafford,16234.35,41899.520000000004,158.09176222023058
Ryder,6373.71,23481.33,268.4091369077037
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Otway,3326.76,4787.5,43.90878813019273
Vidalia,964.52,17779.32,1743.3334715713513
Gays,6597.650000000001,16280.7,146.76513607117684
Knowles,3327.58,5472.69,64.46456584064094
Maumelle,811.55,5164.0,536.3132277740127
North Hills,784.07,4363.16,456.47582486257596
Corwith,162.14,1823.25,1024.4911804613298
Earl,7067.320000000001,35661.6,404.5986314472812
New Market,2006.4,3268.69,62.91317783094098
Chesterfield,592.48,4776.2300000000005,706.1419794761005
St Charles,418.79,19848.69,4639.532940137061
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Selmer,3974.27,7414.67,86.56684120605796
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Buckley,8953.6,18039.7,101.47985167977127
Forest City,11533.210000000001,23193.83,101.10472279616862
Eunice,3115.82,5283.26,69.56242658433413
Berkley,4294.19,5738.99,33.64546049429579
Mc Kean,4227.55,5268.85,24.631287625220285
Legrand,877.6800000000001,3420.79,289.75366876310267
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Barre,941.0500000000001,4988.3,430.0781042452579
Locust Valley,847.87,7519.620000000001,786.8836024390532
Attica,1758.8000000000002,4735.63,169.25346827382305
Damascus,290.22,3514.97,1111.1398249603749
Cranford,2144.13,14287.37,566.3481225485395
Lakeside,383.0,6204.62,1520.0052219321149
Aline,853.64,2971.96,248.1514455742468
Birchwood,4161.51,14166.78,240.42402877801567
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Belmont,526.23,3224.25,512.7073713015221
Mount Morris,253.53,2027.24,699.6055693606279
Midland,308.8,3418.57,1007.0498704663212
Pescadero,4428.44,6577.2,48.52182709938489
Aneta,1019.71,3861.7799999999997,278.7135558148885
Vass,148.97,552.21,270.68537289387126
Holyrood,5289.37,10732.96,102.91565914277126
Marshal,911.98,6132.41,572.4281234237593
Bridgman,635.53,4447.66,599.8347835664721
Haswell,18268.53,33495.17,83.34901604015211
San Francisco,31794.72,51019.450000000004,60.46516528530525
Ortley,12921.460000000001,15619.71,20.88192820315969
Wadsworth,12961.0,15583.77,20.235861430445183
Thayer,11125.29,15929.800000000001,43.185481007686086
Shoreview,3916.35,10573.5,169.98353058332376
Allport,6360.36,10934.12,71.91039500908755
Quartzhill,5133.96,12927.95,151.81244107862156
El Sobrante,27912.11,55631.97,99.31123086001023
West Wood,2908.52,6519.05,124.13633050486159
Alma,10602.75,28650.59,170.21848105444343
Cloverdale,4981.18,9706.35,94.86045475168534
Bolivar,2110.9700000000003,8645.14,309.5340056940648
Bethel Acres,4546.0199999999995,6146.48,35.20574040589351
Elba,9871.84,21155.73,114.30381772800206
Lowndesville,6897.79,9435.87,36.795553358394514
Bryant,1020.64,6635.96,550.1763599310236
Lamar,4946.81,13232.49,167.4954162379392
Aladdin,5632.360000000001,22300.77,295.9400677513511
Atalissa,462.32,3630.19,685.2115417892369
Lavallette,403.92,3238.66,701.8072885719944
Waycross,1326.78,7026.26,429.5723480908666
Thomasville,3276.86,9418.45,187.4230208187106
Ocala,7560.2300000000005,13936.82,84.34386255444608
White Plains,4784.8,9480.390000000001,98.1355542551413
Severy,7744.68,14008.77,80.88248965741644
Alsen,8089.63,14073.32,73.96741260107075
Laluz,12454.65,17692.690000000002,42.056902442059815
North Branch,6187.47,21751.43,251.53996706246656
Mendham,3357.45,7868.2699999999995,134.35255923394243
New Auburn,3773.4500000000003,6007.11,59.19410618929625
Union City,1017.63,12513.43,1129.6640232697544
Bay City,927.59,5102.59,450.0910962817624
Guiderock,2270.6,6644.83,192.64643706509293
Opp,1006.38,1939.53,92.72342455136231
Mosquitolake,209.79000000000002,1981.36,844.4492111158777
Chieflake,2049.74,6411.15,212.77869388312664
Shipman,228.58,686.25,200.2231166331262
Stamford,859.37,5027.7300000000005,485.04834937221466
Vanderbilt,1533.06,4002.32,161.0674076683235
Atkinson,560.83,5128.45,814.4393131608508
Southaven,241.57999999999998,6051.75,2405.0707840052987
Blackduck,991.86,10490.91,957.7006835642126
Norman,3531.2,4777.76,35.30131400090622
Fromberg,556.94,6651.23,1094.2453406111965
Rock Creek,1343.42,4775.98,255.5090738562772
Query:
SELECT DISTINCT c."cust_id", c."cust_city", c."country_id"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   LIMIT 100
Answer:
cust_id,cust_city,country_id
7,Haiku-Pauwela,52790
8,Dolores,52790
10,Blountstown,52790
13,Albion,52790
18,Allport,52790
19,Atalissa,52790
20,Bethelpark,52790
22,Aline,52790
33,Bolivar,52790
40,Chimney Rock,52790
53,Lancaster,52790
57,Blountstown,52790
61,"Belmont, MI",52790
63,Forest Heights,52790
65,Eunice,52790
66,Cranford,52790
77,Atkinson,52790
82,Little Port,52790
95,Buckley,52790
124,Franklin,52790
126,Atalissa,52790
174,Chimney Rock,52790
217,North Carrollton,52790
34,Fort Klamath,52790
72,Dolores,52790
142,Mosquitolake,52790
243,Accomac,52790
192,Chimney Rock,52790
276,Holden,52790
286,Atalissa,52790
302,Arbuckle,52790
309,Barre,52790
312,Accomac,52790
361,Alsen,52790
378,Buckley,52790
424,Wadsworth,52790
482,Duncan,52790
735,Danville,52790
419,Alsen,52790
32,Fromberg,52790
38,Evinston,52790
87,Bowen,52790
92,Aline,52790
135,Dolores,52790
106,Bolivar,52790
152,Alsen,52790
248,Lancaster,52790
255,"Bristol, VT",52790
280,Bolivar,52790
296,"Belmont, MI",52790
382,Sheldon,52790
440,Aladdin,52790
501,Atalissa,52790
513,Blackduck,52790
538,Aline,52790
553,Haiku-Pauwela,52790
699,Alsen,52790
734,Barre,52790
724,Bay City,52790
1063,Arbuckle,52790
1892,Dillsboro,52790
680,Forestville,52790
739,Duncan,52790
1218,Kent,52790
26,Forestville,52790
48,Artas,52790
73,Accomac,52790
83,Atalissa,52790
114,Atalissa,52790
118,Farmington,52790
163,Cranford,52790
98,Holden,52790
133,Aline,52790
177,Blountstown,52790
184,Holden,52790
209,Henagar,52790
228,Duncan,52790
261,"Belmont, MI",52790
284,Barre,52790
487,Arbuckle,52790
740,Barre,52790
522,Forestville,52790
839,Accomac,52790
1178,Blountstown,52790
97,Lancaster,52790
127,New Castle,52790
68,Atkinson,52790
76,Haiku-Pauwela,52790
94,Farmington,52790
134,Berea,52790
162,"Bristol, VT",52790
206,Atkinson,52790
229,Forest Heights,52790
166,Atkinson,52790
231,Danville,52790
257,Aladdin,52790
290,Kent,52790
292,Barre,52790
295,Eunice,52790
297,North Carrollton,52790
Query:
SELECT s.*
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2019
   LIMIT 100
Answer:
prod_id,cust_id,time_id,channel_id,promo_id,quantity_sold,amount_sold
13,2994,2019-10-05,2,999,1,1210.81
13,4759,2019-10-05,2,999,1,1210.81
13,4942,2019-10-05,2,999,1,1210.81
13,6279,2019-10-05,2,999,1,1210.81
13,6913,2019-10-05,2,999,1,1210.81
13,7873,2019-10-05,2,999,1,1210.81
13,7902,2019-10-05,2,999,1,1210.81
13,8935,2019-10-05,2,999,1,1210.81
13,9038,2019-10-05,2,999,1,1210.81
13,9317,2019-10-05,2,999,1,1210.81
13,2,2019-10-05,3,999,1,1205.99
13,1089,2019-10-05,3,999,1,1205.99
13,2819,2019-10-05,3,999,1,1205.99
13,2953,2019-10-05,3,999,1,1205.99
13,7902,2019-10-05,3,999,1,1205.99
13,8236,2019-10-05,3,999,1,1205.99
13,8935,2019-10-05,3,999,1,1205.99
13,2,2019-10-05,4,999,1,1205.99
13,429,2019-10-05,4,999,1,1205.99
13,1089,2019-10-05,4,999,1,1205.99
13,1297,2019-10-05,4,999,1,1205.99
13,1849,2019-10-05,4,999,1,1205.99
13,2914,2019-10-05,4,999,1,1205.99
13,4759,2019-10-05,4,999,1,1205.99
13,5733,2019-10-05,4,999,1,1205.99
13,7086,2019-10-05,4,999,1,1205.99
13,8935,2019-10-05,4,999,1,1205.99
13,9038,2019-10-05,4,999,1,1205.99
13,9317,2019-10-05,4,999,1,1205.99
13,12783,2019-10-05,4,999,1,1205.99
13,15826,2019-10-05,4,999,1,1205.99
13,26634,2019-10-05,4,999,1,1205.99
13,1844,2019-10-10,3,999,1,1205.99
13,3015,2019-10-10,3,999,1,1205.99
13,4463,2019-10-10,3,999,1,1205.99
13,6777,2019-10-10,3,999,1,1205.99
13,9316,2019-10-10,3,999,1,1205.99
13,13869,2019-10-10,3,999,1,1205.99
13,164,2019-10-20,2,999,1,1205.99
13,462,2019-10-20,2,999,1,1205.99
13,1258,2019-10-20,2,999,1,1205.99
13,2761,2019-10-20,2,999,1,1205.99
13,4974,2019-10-20,2,999,1,1205.99
13,7301,2019-10-20,2,999,1,1205.99
13,8937,2019-10-20,2,999,1,1205.99
13,10747,2019-10-20,2,999,1,1205.99
13,11407,2019-10-20,2,999,1,1205.99
13,25251,2019-10-20,2,999,1,1205.99
13,164,2019-10-20,3,999,1,1205.99
13,288,2019-10-20,3,999,1,1205.99
13,299,2019-10-20,3,999,1,1205.99
13,314,2019-10-20,3,999,1,1205.99
13,324,2019-10-20,3,999,1,1205.99
13,462,2019-10-20,3,999,1,1205.99
13,533,2019-10-20,3,999,1,1205.99
13,1155,2019-10-20,3,999,1,1205.99
13,1258,2019-10-20,3,999,1,1205.99
13,1743,2019-10-20,3,999,1,1205.99
13,1998,2019-10-20,3,999,1,1205.99
13,2324,2019-10-20,3,999,1,1205.99
13,2857,2019-10-20,3,999,1,1205.99
13,3087,2019-10-20,3,999,1,1205.99
13,3089,2019-10-20,3,999,1,1205.99
13,3318,2019-10-20,3,999,1,1205.99
13,3984,2019-10-20,3,999,1,1205.99
13,4040,2019-10-20,3,999,1,1205.99
13,4231,2019-10-20,3,999,1,1205.99
13,4410,2019-10-20,3,999,1,1205.99
13,4624,2019-10-20,3,999,1,1205.99
13,4974,2019-10-20,3,999,1,1205.99
13,5574,2019-10-20,3,999,1,1205.99
13,5701,2019-10-20,3,999,1,1205.99
13,6465,2019-10-20,3,999,1,1205.99
13,7301,2019-10-20,3,999,1,1205.99
13,7606,2019-10-20,3,999,1,1205.99
13,8345,2019-10-20,3,999,1,1205.99
13,10279,2019-10-20,3,999,1,1205.99
13,10747,2019-10-20,3,999,1,1205.99
13,11381,2019-10-20,3,999,1,1205.99
13,11407,2019-10-20,3,999,1,1205.99
13,11702,2019-10-20,3,999,1,1205.99
13,13232,2019-10-20,3,999,1,1205.99
13,20973,2019-10-20,3,999,1,1205.99
13,25251,2019-10-20,3,999,1,1205.99
13,27184,2019-10-20,3,999,1,1205.99
13,1297,2019-12-05,2,999,1,1205.99
13,3960,2019-12-05,2,999,1,1205.99
13,7086,2019-12-05,2,999,1,1205.99
13,7873,2019-12-05,2,999,1,1205.99
13,8686,2019-12-05,2,999,1,1205.99
13,254,2019-12-05,4,999,1,1205.99
13,1297,2019-12-05,4,999,1,1205.99
13,2310,2019-12-05,4,999,1,1205.99
13,2994,2019-12-05,4,999,1,1205.99
13,3215,2019-12-05,4,999,1,1205.99
13,8686,2019-12-05,4,999,1,1205.99
13,9038,2019-12-05,4,999,1,1205.99
13,9234,2019-12-05,4,999,1,1205.99
13,9317,2019-12-05,4,999,1,1205.99
13,12783,2019-12-05,4,999,1,1205.99
Query:
SELECT s.*
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."TIMES" t
     ON s."time_id" = t."time_id"
   WHERE t."calendar_quarter_number" = 4
     AND t."calendar_year" = 2020
   LIMIT 100
Answer:
prod_id,cust_id,time_id,channel_id,promo_id,quantity_sold,amount_sold
13,1909,2020-10-10,2,999,1,914.34
13,2122,2020-10-10,2,999,1,914.34
13,3326,2020-10-10,2,999,1,914.34
13,3826,2020-10-10,2,999,1,914.34
13,5579,2020-10-10,2,999,1,914.34
13,6228,2020-10-10,2,999,1,914.34
13,10768,2020-10-10,2,999,1,914.34
13,11084,2020-10-10,2,999,1,914.34
13,11574,2020-10-10,2,999,1,914.34
13,12979,2020-10-10,2,999,1,914.34
13,13125,2020-10-10,2,999,1,914.34
13,14962,2020-10-10,2,999,1,914.34
13,19527,2020-10-10,2,999,1,914.34
13,1909,2020-10-10,3,999,1,1169.03
13,7300,2020-10-10,3,999,1,1169.03
13,7834,2020-10-10,3,999,1,1169.03
13,11954,2020-10-10,3,999,1,1169.03
13,13125,2020-10-10,3,999,1,1169.03
13,14275,2020-10-10,3,999,1,1169.03
13,22354,2020-10-10,3,999,1,1169.03
13,818,2020-10-20,2,999,1,914.34
13,1394,2020-10-20,2,999,1,914.34
13,1698,2020-10-20,2,999,1,914.34
13,2572,2020-10-20,2,999,1,914.34
13,2606,2020-10-20,2,999,1,914.34
13,2793,2020-10-20,2,999,1,914.34
13,5046,2020-10-20,2,999,1,914.34
13,5403,2020-10-20,2,999,1,914.34
13,5478,2020-10-20,2,999,1,914.34
13,6039,2020-10-20,2,999,1,914.34
13,7603,2020-10-20,2,999,1,914.34
13,8090,2020-10-20,2,999,1,914.34
13,8312,2020-10-20,2,999,1,914.34
13,9189,2020-10-20,2,999,1,914.34
13,11815,2020-10-20,2,999,1,914.34
13,20966,2020-10-20,2,999,1,914.34
13,31478,2020-10-20,2,999,1,914.34
13,1736,2020-12-10,2,999,1,914.34
13,3326,2020-12-10,2,999,1,914.34
13,23856,2020-12-10,2,999,1,914.34
13,1736,2020-12-10,3,999,1,1152.89
13,7926,2020-12-10,3,999,1,1152.89
13,11956,2020-12-10,3,999,1,1152.89
13,366,2020-12-14,2,999,1,914.34
13,11073,2020-12-14,2,999,1,914.34
13,12526,2020-12-14,2,999,1,914.34
13,2073,2020-12-16,2,999,1,914.34
13,2606,2020-12-20,2,999,1,914.34
13,8090,2020-12-20,2,999,1,914.34
13,20966,2020-12-20,2,999,1,914.34
13,2606,2020-12-22,2,999,1,914.34
13,8090,2020-12-22,2,999,1,914.34
13,20966,2020-12-22,2,999,1,914.34
13,1193,2020-12-22,3,999,1,1169.03
13,2606,2020-12-22,3,999,1,1169.03
13,5403,2020-12-22,3,999,1,1169.03
13,7603,2020-12-22,3,999,1,1169.03
13,8090,2020-12-22,3,999,1,1169.03
13,9710,2020-12-22,3,999,1,1169.03
13,10530,2020-12-22,3,999,1,1169.03
13,14980,2020-12-22,3,999,1,1169.03
13,20966,2020-12-22,3,999,1,1169.03
13,3670,2020-12-23,2,999,1,914.34
13,806,2020-12-23,4,999,1,842.21
13,1250,2020-12-26,4,999,1,842.21
13,4430,2020-12-26,4,999,1,842.21
13,8390,2020-12-26,4,999,1,842.21
13,5766,2020-12-30,2,999,1,927.14
13,6316,2020-12-30,2,999,1,927.14
13,4053,2020-12-30,4,999,1,842.21
13,6316,2020-12-30,4,999,1,842.21
13,390,2020-12-31,3,999,1,1169.03
13,2263,2020-12-31,3,999,1,1169.03
13,4950,2020-12-31,3,999,1,1169.03
13,5860,2020-12-31,3,999,1,1169.03
13,6180,2020-12-31,3,999,1,1169.03
13,8303,2020-12-31,3,999,1,1169.03
13,9483,2020-12-31,3,999,1,1169.03
13,17803,2020-12-31,3,999,1,1169.03
14,562,2020-10-10,2,999,1,1015.94
14,1337,2020-10-10,2,999,1,1015.94
14,2352,2020-10-10,2,999,1,1015.94
14,3184,2020-10-10,2,999,1,1015.94
14,4204,2020-10-10,2,999,1,1015.94
14,4356,2020-10-10,2,999,1,1015.94
14,9739,2020-10-10,2,999,1,1015.94
14,10698,2020-10-10,2,999,1,1015.94
14,25003,2020-10-10,2,999,1,1015.94
14,562,2020-10-10,3,999,1,1296.74
14,1274,2020-10-10,3,999,1,1296.74
14,1337,2020-10-10,3,999,1,1296.74
14,2308,2020-10-10,3,999,1,1296.74
14,2352,2020-10-10,3,999,1,1296.74
14,2617,2020-10-10,3,999,1,1296.74
14,3184,2020-10-10,3,999,1,1296.74
14,3314,2020-10-10,3,999,1,1296.74
14,4204,2020-10-10,3,999,1,1296.74
14,4356,2020-10-10,3,999,1,1296.74
14,5917,2020-10-10,3,999,1,1296.74
14,9739,2020-10-10,3,999,1,1296.74
Query:
SELECT c."cust_city",
       SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019_Q4",
       SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020_Q4",
       ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
  ON s."cust_id" = c."cust_id"
JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
  ON c."country_id" = cnt."country_id"
WHERE cnt."country_name" = 'United States of America'
GROUP BY c."cust_city"
HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   AND ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
         SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
         NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
LIMIT 100;
Answer:
cust_city,sales_2019_Q4,sales_2020_Q4,percentage_increase
Springhill,19989.42,31566.68,57.91693806023388
Forest City,11533.210000000001,23193.83,101.10472279616862
Buckley,8953.6,18039.7,101.47985167977127
Trafford,16234.35,41899.520000000004,158.09176222023058
Blountstown,40170.83,52892.54,31.669024513558714
Lakeside,383.0,6204.62,1520.0052219321149
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Plains,5536.58,12094.82,118.45290775171675
Pala,16678.56,34493.58,106.81389760267072
Earl,7067.320000000001,35661.6,404.5986314472812
Cranford,2144.13,14287.37,566.3481225485395
Syracuse,6097.51,27881.08,357.25353463954957
Selmer,3974.27,7414.67,86.56684120605796
Sykesville,27524.21,37438.46,36.02010738909491
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Knowles,3327.58,5472.69,64.46456584064094
Fort Klamath,6854.62,9722.6,41.840102004195714
Corwith,162.14,1823.25,1024.4911804613298
Otway,3326.76,4787.5,43.90878813019273
Marshal,911.98,6132.41,572.4281234237593
Maumelle,811.55,5164.0,536.3132277740127
Attica,1758.8000000000002,4735.63,169.25346827382305
Birchwood,4161.51,14166.78,240.42402877801567
Tucumcari,20440.96,24654.51,20.613268652744292
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Aneta,1019.71,3861.7799999999997,278.7135558148885
Candler,5551.95,8735.47,57.34057403254712
Legrand,877.6800000000001,3420.79,289.75366876310267
St Charles,418.79,19848.69,4639.532940137061
Aline,853.64,2971.96,248.1514455742468
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Holyrood,5289.37,10732.96,102.91565914277126
Vidalia,964.52,17779.32,1743.3334715713513
Eunice,3115.82,5283.26,69.56242658433413
Gays,6597.650000000001,16280.7,146.76513607117684
Mc Kean,4227.55,5268.85,24.631287625220285
Berkley,4294.19,5738.99,33.64546049429579
Damascus,290.22,3514.97,1111.1398249603749
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Midland,308.8,3418.57,1007.0498704663212
Chesterfield,592.48,4776.2300000000005,706.1419794761005
Locust Valley,847.87,7519.620000000001,786.8836024390532
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Mount Morris,253.53,2027.24,699.6055693606279
Pescadero,4428.44,6577.2,48.52182709938489
Ryder,6373.71,23481.33,268.4091369077037
Barre,941.0500000000001,4988.3,430.0781042452579
Rhineland,8273.54,34977.65,322.76522504272657
New Market,2006.4,3268.69,62.91317783094098
Belmont,526.23,3224.25,512.7073713015221
Vass,148.97,552.21,270.68537289387126
Bridgman,635.53,4447.66,599.8347835664721
North Hills,784.07,4363.16,456.47582486257596
Lamar,4946.81,13232.49,167.4954162379392
Alsen,8089.63,14073.32,73.96741260107075
Cloverdale,4981.18,9706.35,94.86045475168534
El Sobrante,27912.11,55631.97,99.31123086001023
Wadsworth,12961.0,15583.77,20.235861430445183
Orlinda,100.84,5328.63,5184.242364141213
Blackduck,991.86,10490.91,957.7006835642126
Allport,6360.36,10934.12,71.91039500908755
Bolivar,2110.9700000000003,8645.14,309.5340056940648
White Plains,4784.8,9480.390000000001,98.1355542551413
Shipman,228.58,686.25,200.2231166331262
Quartzhill,5133.96,12927.95,151.81244107862156
Alma,10602.75,28650.59,170.21848105444343
Long Meadow,1711.56,3011.72,75.96344854986093
Decatur,5328.97,10774.85,102.19385734954409
Shoreview,3916.35,10573.5,169.98353058332376
Kent,17266.9,24162.36,39.93455686892261
Rockyhill,372.21,4484.17,1104.7419467504903
"Roseville, MN",245.91,7903.45,3113.960392013338
Bay City,927.59,5102.59,450.0910962817624
Fromberg,556.94,6651.23,1094.2453406111965
Glennie,5561.8,13121.85,135.92811679672047
North Branch,6187.47,21751.43,251.53996706246656
Waycross,1326.78,7026.26,429.5723480908666
Mendham,3357.45,7868.2699999999995,134.35255923394243
New Hartford,1208.92,3556.36,194.17662045462066
"Belmont, MI",4801.24,8249.27,71.81540602011148
Opp,1006.38,1939.53,92.72342455136231
Five Points,2008.48,13143.61,554.4058193260576
Chimney Rock,535.52,6070.84,1033.634598147595
San Francisco,31794.72,51019.450000000004,60.46516528530525
Haswell,18268.53,33495.17,83.34901604015211
Elba,9871.84,21155.73,114.30381772800206
Aladdin,5632.360000000001,22300.77,295.9400677513511
Rock Creek,1343.42,4775.98,255.5090738562772
Thomasville,3276.86,9418.45,187.4230208187106
Ortley,12921.460000000001,15619.71,20.88192820315969
Mineral,950.97,1532.36,61.13652375995036
Union City,1017.63,12513.43,1129.6640232697544
Laluz,12454.65,17692.690000000002,42.056902442059815
Chieflake,2049.74,6411.15,212.77869388312664
West Wood,2908.52,6519.05,124.13633050486159
Toxey,126.49,6619.04,5132.856352280814
Cleveland,73.97,1594.04,2054.9817493578475
Atkinson,560.83,5128.45,814.4393131608508
Stamford,859.37,5027.7300000000005,485.04834937221466
Query:
SELECT c."cust_city", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2020-10-01' AND '2020-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   ORDER BY "total_sales" DESC
   LIMIT 100
Answer:
cust_city,total_sales
Hiseville,117380.17
Edgewood,112431.2
San Mateo,102527.1
Evinston,84002.13
Dolores,64008.58
Palmdale,62829.19
Los Angeles,55932.29
El Sobrante,55631.97
Noma,53262.53
Blountstown,52892.54
San Francisco,51019.450000000004
Saint Marks,50939.3
Mackville,47413.28
Trafford,41899.520000000004
Foxborough,40816.8
Frederick,38338.4
Sykesville,37438.46
Earl,35661.6
Rhineland,34977.65
Pala,34493.58
Sanibel,33590.51
Haswell,33495.17
Oran,32864.0
"Oxford, NJ",31942.97
Springhill,31566.68
Montara,30702.65
Alma,28650.59
Syracuse,27881.08
Tucumcari,24654.51
Kent,24162.36
Ryder,23481.33
Forest City,23193.83
Hatfield,22692.82
North Utica,22544.25
Aladdin,22300.77
Sugarloaf Key,22008.11
North Branch,21751.43
Elba,21155.73
Sheldon,20452.32
Molino,20396.58
St Charles,19848.69
Arbuckle,18347.24
Buckley,18039.7
Vidalia,17779.32
Laluz,17692.690000000002
Gays,16280.7
Hillcrest Heights,16099.779999999999
Thayer,15929.800000000001
Elm Hall,15727.89
Ortley,15619.71
Wadsworth,15583.77
Forest Heights,14697.72
Cranford,14287.37
Birchwood,14166.78
Alsen,14073.32
Sully,14017.91
Severy,14008.77
Ocala,13936.82
Lamar,13232.49
Five Points,13143.61
Glennie,13121.85
Quartzhill,12927.95
Gaastra,12712.66
Union City,12513.43
Union Springs,12228.970000000001
Plains,12094.82
Stockdale,11938.23
Housatonic,11927.03
Weissport,11446.63
North Druid Hills,11251.41
Allport,10934.12
Decatur,10774.85
Holyrood,10732.96
Shoreview,10573.5
Blackduck,10490.91
Oilton,10446.89
Puako,10090.54
Fords Prairie,10005.789999999999
Fort Klamath,9722.6
Cloverdale,9706.35
Goodhope,9700.55
White Plains,9480.390000000001
Lowndesville,9435.87
Thomasville,9418.45
Perry,9093.3
Skagway,8799.75
Candler,8735.47
Ozan,8666.38
Bolivar,8645.14
"Belmont, MI",8249.27
"Roseville, MN",7903.45
Mendham,7868.2699999999995
Locust Valley,7519.620000000001
Selmer,7414.67
Forestville,7334.18
Victoria,7328.42
Tioga,7179.47
Waycross,7026.26
Myrtle Grove,7025.45
Franklin,6899.08
Query:
SELECT DISTINCT "prod_id", "prod_name"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."PRODUCTS"
   LIMIT 100
Answer:
prod_id,prod_name
14,Pitching Machine and Batting Cage Combo
19,Cricket Bat Bag
21,Speed Trainer Bats and Training Program
22,MLB Official Game Baseball w/ Display Case
23,Plastic Cricket Bat
28,English Willow Cricket Bat
30,Linseed Oil
40,Team shirt
41,Team shirt
42,Team shirt
43,Team shirt
44,Team shirt
46,2 Competition Grade NFHS Baseballs
47,6 Gallon Empty Ball Bucket
49,Outdoor Cricket Ball
51,Cricket Bat Pad
128,Slugger Youth Series Maple Bat
130,Pro Maple Youth Bat
50,Cricket Gloves
129,Pro Maple Bat
31,Fiber Tape
45,Team shirt
48,Indoor Cricket Ball
127,Genuine Series MIX Wood Bat
Query:
SELECT s."prod_id", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2019-10-01' AND '2019-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY s."prod_id"
   ORDER BY "total_sales" DESC
   LIMIT 100
Answer:
prod_id,total_sales
18,516004.49
14,345563.33999999997
15,338771.13
17,277886.11
21,243816.98
13,124417.09
20,115580.58
28,97388.26999999999
127,97070.31
130,92420.82
26,88879.09000000001
118,71888.06
25,71232.81999999999
40,60413.5
129,52807.57
29,51273.04
37,45470.07
35,42444.020000000004
128,30307.58
33,26470.0
126,24644.37
123,24242.26
19,23390.77
36,23147.7
39,23012.7
24,21211.37
45,20546.72
113,19885.07
133,19166.35
34,18671.41
27,18388.72
125,16879.81
41,16213.33
32,15073.92
42,14419.86
140,14306.84
114,13620.26
23,12808.119999999999
46,12169.21
116,11801.67
132,11743.52
38,10745.31
148,10660.140000000001
131,10041.82
43,9765.39
31,9672.87
48,9434.39
47,9201.64
30,8691.859999999999
44,8212.01
119,7909.5
117,7717.67
146,5538.29
115,4348.55
120,4248.22
22,3569.93
147,806.99
124,264.36
Query:
SELECT s."prod_id", SUM(s."amount_sold") AS "total_sales"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2020-10-01' AND '2020-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY s."prod_id"
   ORDER BY "total_sales" DESC
   LIMIT 100
Answer:
prod_id,total_sales
20,329647.45
18,263392.87
14,204057.21000000002
17,171160.63
21,131209.07
28,110583.09
15,110229.36
13,91683.57
25,82112.29
26,78933.08
130,77439.0
37,76644.70999999999
35,64586.96
40,52525.02
29,51132.33
39,48944.42
34,43740.77
24,42423.54
36,41195.25
41,36298.6
32,34507.729999999996
33,33687.99
42,28750.71
16,27717.46
137,26073.65
118,25081.12
135,24652.43
123,23773.12
19,22652.46
129,21380.27
127,19767.829999999998
27,19598.03
140,18747.8
133,18495.84
44,18264.45
43,17736.6
132,16642.43
128,16626.16
47,16026.31
114,15779.82
124,15239.08
138,14662.06
38,14253.51
23,14141.8
131,13970.82
139,13853.61
113,13409.45
141,13059.12
30,12542.44
134,10754.85
48,10492.49
148,10253.37
126,9651.14
31,9052.13
119,8331.78
121,8132.9
120,7773.92
125,7188.29
142,7026.06
116,7004.87
46,6906.23
122,5431.53
117,5381.01
146,4639.99
143,4418.67
115,4240.26
144,1813.25
136,1725.52
45,1392.92
147,398.25
22,244.48999999999998
145,236.91
Query:
SELECT c."cust_city",
          SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
          SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   LIMIT 100
Answer:
cust_city,sales_2019,sales_2020
Orangeville,42884.88,1553.17
Palmdale,80652.32,62829.19
Tioga,108592.76,7179.47
Strang,24568.02,6082.740000000001
Foxborough,53195.13,40816.8
Hillcrest Heights,15641.33,16099.779999999999
Hiseville,106071.73,117380.17
Molino,27073.96,20396.58
Roseville,10756.25,479.79
Vanleer,103981.36,5463.71
Little Port,49624.2,2574.58
Skagway,9596.6,8799.75
Puako,53206.47,10090.54
Lamar,4946.81,13232.49
Frederick,101516.27,38338.4
"Bradford, IL",23823.24,0.0
Alsen,8089.63,14073.32
Forrestcity,95747.13,6405.86
Cloverdale,4981.18,9706.35
Edgewood,126918.62,112431.2
El Sobrante,27912.11,55631.97
Wadsworth,12961.0,15583.77
Honomu,7374.95,2397.56
Orlinda,100.84,5328.63
Blackduck,991.86,10490.91
Allport,6360.36,10934.12
Bolivar,2110.9700000000003,8645.14
Forestville,12095.78,7334.18
Forest Heights,25774.89,14697.72
White Plains,4784.8,9480.390000000001
Albion,6049.72,3239.68
Shipman,228.58,686.25
Quartzhill,5133.96,12927.95
Alma,10602.75,28650.59
Long Meadow,1711.56,3011.72
Decatur,5328.97,10774.85
Shoreview,3916.35,10573.5
Kent,17266.9,24162.36
Perry,10216.12,9093.3
Rockyhill,372.21,4484.17
"Roseville, MN",245.91,7903.45
Bay City,927.59,5102.59
Fromberg,556.94,6651.23
Mackville,41895.31,47413.28
Glennie,5561.8,13121.85
North Branch,6187.47,21751.43
Waycross,1326.78,7026.26
Mendham,3357.45,7868.2699999999995
Goodhope,8363.09,9700.55
Tonkawa,1354.52,716.22
New Hartford,1208.92,3556.36
"Belmont, MI",4801.24,8249.27
North Bellmore,1406.23,1266.65
Opp,1006.38,1939.53
Madison,2367.33,1159.48
Five Points,2008.48,13143.61
Chimney Rock,535.52,6070.84
San Francisco,31794.72,51019.450000000004
Holland,25370.72,0.0
Los Angeles,68608.1,55932.29
Haswell,18268.53,33495.17
Elba,9871.84,21155.73
Aladdin,5632.360000000001,22300.77
Rock Creek,1343.42,4775.98
Thomasville,3276.86,9418.45
Franklin,9312.85,6899.08
Pageland,4642.86,1887.48
Ortley,12921.460000000001,15619.71
Mineral,950.97,1532.36
Union City,1017.63,12513.43
Laluz,12454.65,17692.690000000002
Chieflake,2049.74,6411.15
West Wood,2908.52,6519.05
Toxey,126.49,6619.04
Artas,2042.73,259.65
Smyrna,6582.92,5471.97
Hitchita,10151.17,3486.49
East Hazelcrest,14521.36,3656.7
Carrier,16249.72,0.0
Lake City,2668.31,892.3
Cleveland,73.97,1594.04
Atkinson,560.83,5128.45
Stamford,859.37,5027.7300000000005
Flint,4094.59,3591.08
Bethel Acres,4546.0199999999995,6146.48
North Druid Hills,25773.93,11251.41
Montreal,3040.12,0.0
Myrtle Grove,6714.400000000001,7025.45
Lowndesville,6897.79,9435.87
Black River,1188.73,3587.81
Norman,3531.2,4777.76
Washington,4014.92,4774.17
Bethelpark,1014.42,5419.68
Atalissa,462.32,3630.19
Golden's Bridge,3641.7200000000003,493.90999999999997
Central City,46.84,1573.37
Southaven,241.57999999999998,6051.75
Batesland,1004.72,107.44
Lancaster,1867.17,2243.06
Bryant,1020.64,6635.96
Query:
SELECT c."cust_city",
          SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
          SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
          ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
            SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
            NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
   LIMIT 100
Answer:
cust_city,sales_2019,sales_2020,percentage_increase
Dolores,62878.29,64008.58,1.7975838719532622
Cayuga,10244.92,0.0,-100.0
Duncan,55016.28,6181.96,-88.7633987612394
Montara,42237.05,30702.65,-27.308725396304904
Springhill,19989.42,31566.68,57.91693806023388
San Mateo,175595.81,102527.1,-41.61187559088112
Forest City,11533.210000000001,23193.83,101.10472279616862
Buckley,8953.6,18039.7,101.47985167977127
Trafford,16234.35,41899.520000000004,158.09176222023058
Ozan,24385.02,8666.38,-64.46023009208113
North Utica,29001.06,22544.25,-22.26404827961461
Duson,21623.74,3913.91,-81.89993960341737
Atwood,20519.07,5329.35,-74.02733164807177
Fisher,48466.08,0.0,-100.0
Oran,57583.51,32864.0,-42.9281056330189
Timken,13712.95,1072.71,-92.17739436080494
Saint Marks,60693.43,50939.3,-16.07114641568288
Evinston,76481.23,84002.13,9.833654610418803
Sully,17494.52,14017.91,-19.872565809179104
Arbuckle,70705.36,18347.24,-74.05113275712053
Stockdale,14314.76,11938.23,-16.601954905286576
Sanibel,86872.68000000001,33590.51,-61.33363216145743
Blountstown,40170.83,52892.54,31.669024513558714
Sugarloaf Key,19805.33,22008.11,11.122157520223084
Lakeside,383.0,6204.62,1520.0052219321149
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Plains,5536.58,12094.82,118.45290775171675
Pala,16678.56,34493.58,106.81389760267072
Earl,7067.320000000001,35661.6,404.5986314472812
Cranford,2144.13,14287.37,566.3481225485395
Winter Springs,4299.3,2522.75,-41.321843090735705
Syracuse,6097.51,27881.08,357.25353463954957
Selmer,3974.27,7414.67,86.56684120605796
West Milford,8086.56,0.0,-100.0
Wrightsboro,12945.95,0.0,-100.0
Sykesville,27524.21,37438.46,36.02010738909491
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Knowles,3327.58,5472.69,64.46456584064094
Danville,6268.88,6091.55,-2.8287349574405622
Fort Klamath,6854.62,9722.6,41.840102004195714
Lewisville,300.22,353.39,17.710345746452585
Churchville,3214.52,124.62,-96.12321590781828
Corwith,162.14,1823.25,1024.4911804613298
Elm Hall,13207.68,15727.89,19.08139809565343
Otway,3326.76,4787.5,43.90878813019273
Glasco,3906.78,4230.23,8.279196678594632
Marshal,911.98,6132.41,572.4281234237593
Maumelle,811.55,5164.0,536.3132277740127
North Enid,11256.82,0.0,-100.0
Birch Run,2467.7799999999997,1678.61,-31.978944638501
Whalepass,175.95,126.97,-27.83745382210855
Attica,1758.8000000000002,4735.63,169.25346827382305
Birchwood,4161.51,14166.78,240.42402877801567
Farmington,59071.04,950.56,-98.39081891905069
Henagar,8613.61,2242.33,-73.96759314619538
Cypress Gardens,9342.07,2819.23,-69.82221285004287
Holden,14696.9,3443.35,-76.57090951152963
Bridgeport,16154.7,629.99,-96.10026803345157
Tucumcari,20440.96,24654.51,20.613268652744292
Weissport,12410.69,11446.63,-7.767980668278727
Tijeras,2357.46,1343.95,-42.99160961373682
Oilton,8910.56,10446.89,17.241677290765114
Dillsboro,18434.74,3837.96,-79.1808292387091
Union Springs,13347.57,12228.970000000001,-8.380551665958661
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Aneta,1019.71,3861.7799999999997,278.7135558148885
Candler,5551.95,8735.47,57.34057403254712
Legrand,877.6800000000001,3420.79,289.75366876310267
St Charles,418.79,19848.69,4639.532940137061
Aline,853.64,2971.96,248.1514455742468
Shevlin,4630.59,1556.43,-66.38808445576049
Crownpoint,3715.64,864.9,-76.72271802435112
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Victoria,10279.49,7328.42,-28.708330860772275
Hatfield,34022.82,22692.82,-33.30117844435
Holyrood,5289.37,10732.96,102.91565914277126
"Bristol, VT",2953.91,934.93,-68.3494080726901
Smithville,4596.34,4033.4,-12.247570893362981
Vidalia,964.52,17779.32,1743.3334715713513
Eunice,3115.82,5283.26,69.56242658433413
Godwin,4791.2,3491.16,-27.13391217231591
Gays,6597.650000000001,16280.7,146.76513607117684
Noma,52315.57,53262.53,1.8100921006881872
North Carrollton,9041.64,6850.98,-24.228569153383678
Morris,3221.04,0.0,-100.0
Mc Kean,4227.55,5268.85,24.631287625220285
Bloomingdale,4519.85,1973.17,-56.34434771065412
Berkley,4294.19,5738.99,33.64546049429579
Damascus,290.22,3514.97,1111.1398249603749
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Mullins,276.38,187.42000000000002,-32.187567841377806
Midland,308.8,3418.57,1007.0498704663212
Chesterfield,592.48,4776.2300000000005,706.1419794761005
Locust Valley,847.87,7519.620000000001,786.8836024390532
Bowen,728.52,544.53,-25.255312139680452
Bedford,3890.09,3891.99,0.04884205763875993
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Buffalo,415.89,348.6,-16.179759070908165
Mount Morris,253.53,2027.24,699.6055693606279
Query:
SELECT c."cust_city",
          SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
          SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) AS "sales_2020",
          ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
            SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
            NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) AS "percentage_increase"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE cnt."country_name" = 'United States of America'
   GROUP BY c."cust_city"
   HAVING SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END) > 0
      AND ((SUM(CASE WHEN s."time_id" BETWEEN '2020-10-01' AND '2020-12-31' THEN s."amount_sold" ELSE 0 END) -
            SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END)) /
            NULLIF(SUM(CASE WHEN s."time_id" BETWEEN '2019-10-01' AND '2019-12-31' THEN s."amount_sold" ELSE 0 END), 0) * 100) >= 20
   LIMIT 100
Answer:
cust_city,sales_2019,sales_2020,percentage_increase
Springhill,19989.42,31566.68,57.91693806023388
Forest City,11533.210000000001,23193.83,101.10472279616862
Buckley,8953.6,18039.7,101.47985167977127
Trafford,16234.35,41899.520000000004,158.09176222023058
Blountstown,40170.83,52892.54,31.669024513558714
Lakeside,383.0,6204.62,1520.0052219321149
Minnetonka Beach,1221.71,1698.1100000000001,38.99452406872335
Plains,5536.58,12094.82,118.45290775171675
Pala,16678.56,34493.58,106.81389760267072
Earl,7067.320000000001,35661.6,404.5986314472812
Cranford,2144.13,14287.37,566.3481225485395
Syracuse,6097.51,27881.08,357.25353463954957
Selmer,3974.27,7414.67,86.56684120605796
Sykesville,27524.21,37438.46,36.02010738909491
"Oxford, NJ",10016.89,31942.97,218.89109294401757
Knowles,3327.58,5472.69,64.46456584064094
Fort Klamath,6854.62,9722.6,41.840102004195714
Corwith,162.14,1823.25,1024.4911804613298
Otway,3326.76,4787.5,43.90878813019273
Marshal,911.98,6132.41,572.4281234237593
Maumelle,811.55,5164.0,536.3132277740127
Attica,1758.8000000000002,4735.63,169.25346827382305
Birchwood,4161.51,14166.78,240.42402877801567
Tucumcari,20440.96,24654.51,20.613268652744292
Sheldon,5070.4800000000005,20452.32,303.3606285795428
Aneta,1019.71,3861.7799999999997,278.7135558148885
Candler,5551.95,8735.47,57.34057403254712
Legrand,877.6800000000001,3420.79,289.75366876310267
St Charles,418.79,19848.69,4639.532940137061
Aline,853.64,2971.96,248.1514455742468
Fords Prairie,7623.650000000001,10005.789999999999,31.246712532710685
Gaastra,1165.6100000000001,12712.66,990.6443836274567
Holyrood,5289.37,10732.96,102.91565914277126
Vidalia,964.52,17779.32,1743.3334715713513
Eunice,3115.82,5283.26,69.56242658433413
Gays,6597.650000000001,16280.7,146.76513607117684
Mc Kean,4227.55,5268.85,24.631287625220285
Berkley,4294.19,5738.99,33.64546049429579
Damascus,290.22,3514.97,1111.1398249603749
Haiku-Pauwela,448.18,5301.62,1082.9220402516844
Midland,308.8,3418.57,1007.0498704663212
Chesterfield,592.48,4776.2300000000005,706.1419794761005
Locust Valley,847.87,7519.620000000001,786.8836024390532
Navy Yard City,256.94,3415.7799999999997,1229.4076438078928
Mount Morris,253.53,2027.24,699.6055693606279
Pescadero,4428.44,6577.2,48.52182709938489
Ryder,6373.71,23481.33,268.4091369077037
Barre,941.0500000000001,4988.3,430.0781042452579
Rhineland,8273.54,34977.65,322.76522504272657
New Market,2006.4,3268.69,62.91317783094098
Belmont,526.23,3224.25,512.7073713015221
Vass,148.97,552.21,270.68537289387126
Bridgman,635.53,4447.66,599.8347835664721
North Hills,784.07,4363.16,456.47582486257596
Lamar,4946.81,13232.49,167.4954162379392
Alsen,8089.63,14073.32,73.96741260107075
Cloverdale,4981.18,9706.35,94.86045475168534
El Sobrante,27912.11,55631.97,99.31123086001023
Wadsworth,12961.0,15583.77,20.235861430445183
Orlinda,100.84,5328.63,5184.242364141213
Blackduck,991.86,10490.91,957.7006835642126
Allport,6360.36,10934.12,71.91039500908755
Bolivar,2110.9700000000003,8645.14,309.5340056940648
White Plains,4784.8,9480.390000000001,98.1355542551413
Shipman,228.58,686.25,200.2231166331262
Quartzhill,5133.96,12927.95,151.81244107862156
Alma,10602.75,28650.59,170.21848105444343
Long Meadow,1711.56,3011.72,75.96344854986093
Decatur,5328.97,10774.85,102.19385734954409
Shoreview,3916.35,10573.5,169.98353058332376
Kent,17266.9,24162.36,39.93455686892261
Rockyhill,372.21,4484.17,1104.7419467504903
"Roseville, MN",245.91,7903.45,3113.960392013338
Bay City,927.59,5102.59,450.0910962817624
Fromberg,556.94,6651.23,1094.2453406111965
Glennie,5561.8,13121.85,135.92811679672047
North Branch,6187.47,21751.43,251.53996706246656
Waycross,1326.78,7026.26,429.5723480908666
Mendham,3357.45,7868.2699999999995,134.35255923394243
New Hartford,1208.92,3556.36,194.17662045462066
"Belmont, MI",4801.24,8249.27,71.81540602011148
Opp,1006.38,1939.53,92.72342455136231
Five Points,2008.48,13143.61,554.4058193260576
Chimney Rock,535.52,6070.84,1033.634598147595
San Francisco,31794.72,51019.450000000004,60.46516528530525
Haswell,18268.53,33495.17,83.34901604015211
Elba,9871.84,21155.73,114.30381772800206
Aladdin,5632.360000000001,22300.77,295.9400677513511
Rock Creek,1343.42,4775.98,255.5090738562772
Thomasville,3276.86,9418.45,187.4230208187106
Ortley,12921.460000000001,15619.71,20.88192820315969
Mineral,950.97,1532.36,61.13652375995036
Union City,1017.63,12513.43,1129.6640232697544
Laluz,12454.65,17692.690000000002,42.056902442059815
Chieflake,2049.74,6411.15,212.77869388312664
West Wood,2908.52,6519.05,124.13633050486159
Toxey,126.49,6619.04,5132.856352280814
Cleveland,73.97,1594.04,2054.9817493578475
Atkinson,560.83,5128.45,814.4393131608508
Stamford,859.37,5027.7300000000005,485.04834937221466
Query:
SELECT s."prod_id",
          SUM(s."amount_sold") AS "product_sales",
          (SUM(s."amount_sold") / (SELECT SUM(s2."amount_sold")
                                   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s2
                                   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c2
                                     ON s2."cust_id" = c2."cust_id"
                                   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt2
                                     ON c2."country_id" = cnt2."country_id"
                                   WHERE s2."time_id" BETWEEN '2019-10-01' AND '2019-12-31'
                                     AND cnt2."country_name" = 'United States of America')) * 100 AS "share_2019"
   FROM COMPLEX_ORACLE.COMPLEX_ORACLE."SALES" s
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."CUSTOMERS" c
     ON s."cust_id" = c."cust_id"
   JOIN COMPLEX_ORACLE.COMPLEX_ORACLE."COUNTRIES" cnt
     ON c."country_id" = cnt."country_id"
   WHERE s."time_id" BETWEEN '2019-10-01' AND '2019-12-31'
     AND cnt."country_name" = 'United States of America'
   GROUP BY s."prod_id"
   ORDER BY "share_2019" DESC
   LIMIT 100
Answer:
prod_id,product_sales,share_2019
18,516004.49,15.701791600520782
14,345563.33999999997,10.515341735611461
15,338771.13,10.30865774740242
17,277886.11,8.45595314083293
21,243816.98,7.419244372521533
13,124417.09,3.785957790257287
20,115580.58,3.517066644569935
28,97388.26999999999,2.9634825849582236
127,97070.31,2.953807200820963
130,92420.82,2.8123252477691487
26,88879.09000000001,2.704551948421865
118,71888.06,2.1875223153305003
25,71232.81999999999,2.167583647881453
40,60413.5,1.8383564585999286
129,52807.57,1.606911325655157
29,51273.04,1.5602162469655374
37,45470.07,1.3836344005477395
35,42444.020000000004,1.2915530187117872
128,30307.58,0.92224644222788
33,26470.0,0.8054705564011373
126,24644.37,0.7499174316605779
123,24242.26,0.7376813997212328
19,23390.77,0.7117709303570469
36,23147.7,0.7043744162601665
39,23012.7,0.700266425133829
24,21211.37,0.6454527387960102
45,20546.72,0.6252277291506754
113,19885.07,0.6050940081970368
133,19166.35,0.5832236720316939
34,18671.41,0.5681628636756237
27,18388.72,0.5595607302570731
125,16879.81,0.5136452569945404
41,16213.33,0.49336456124727057
32,15073.92,0.45869281184534305
42,14419.86,0.43879005128169646
140,14306.84,0.4353509019698545
114,13620.26,0.41445857198821895
23,12808.119999999999,0.3897455059634505
46,12169.21,0.3703037532928706
116,11801.67,0.359119671377507
132,11743.52,0.357350192236792
38,10745.31,0.32697509725737456
148,10660.140000000001,0.32438341130011417
131,10041.82,0.3055682033502104
43,9765.39,0.2971565590016661
31,9672.87,0.29434121574974953
48,9434.39,0.28708437335116455
47,9201.64,0.28000189235371975
30,8691.859999999999,0.26448950926939135
44,8212.01,0.249887883032554
119,7909.5,0.24068263565752915
117,7717.67,0.23484533241482303
146,5538.29,0.1685277494450644
115,4348.55,0.13232448009211054
120,4248.22,0.1292714819461443
22,3569.93,0.10863141304922977
147,806.99,0.024556353770689605
124,264.36,0.008044359512285782
End Exploring Related Columns
Task: In the United States, for Q4 2019 and Q4 2020, first select only those cities where total sales (with no promotions) rose by at least 20% from Q4 2019 to Q4 2020. Among these cities, rank products by their overall sales (still excluding promotions) in those quarters and take the top 20%. Then compute each top product’s share of total sales in Q4 2019 and Q4 2020 and calculate the difference in share from Q4 2019 to Q4 2020, returning the results in descending order of that share change.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
product_id1:int,product_name1:str,share_2019_1:float,share_2020_1:float,share_change_1:float
product_id2:int,product_name2:str,share_2019_2:float,share_2020_2:float,share_change_2:float
...
```
(Results are ordered in descending order of **Share_Change**)

**Explanation:**

The table above lists the top 20% of products (excluding promotions) sold in cities across the United States where total sales increased by at least 20% from Q4 2019 to Q4 2020. For each product, it shows:

- **Product_ID**: The unique identifier of the product.
- **Product_Name**: The name of the product.
- **Share_Q4_2019**: The product's share of total sales in Q4 2019 (as a percentage).
- **Share_Q4_2020**: The product's share of total sales in Q4 2020 (as a percentage).
- **Share_Change**: The difference in share from Q4 2019 to Q4 2020 (Share_Q4_2020 minus Share_Q4_2019).

The results are sorted in descending order based on **Share_Change**, highlighting the products with the most significant increase in market share over the specified period..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'COMPLEX_ORACLE': {'COMPLEX_ORACLE': ['COUNTRIES', 'SUPPLEMENTARY_DEMOGRAPHICS', 'COSTS', 'CURRENCY', 'CUSTOMERS', 'PRODUCTS', 'TIMES', 'CHANNELS', 'PROMOTIONS', 'SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-10 14:54:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:54:57 - root - INFO - ```sql
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       (ps."sales_2019" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2019)) * 100 AS "Share_Q4_2019",
       (ps."sales_2020" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2020)) * 100 AS "Share_Q4_2020",
       ((ps."sales_2020" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2019))) * 100 AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC
```
2025-02-10 14:54:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:54:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:54:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:54:58 - snowflake.connector.connection - INFO - closed
2025-02-10 14:54:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:54:58 - root - INFO - itercount: 1
2025-02-10 14:54:58 - root - INFO - 000904 (42000): 01ba4d1e-0004-96e7-0001-11c3010c7ce2: SQL compilation error: error line 72 at position 34
invalid identifier 'TOTAL_SALES'
2025-02-10 14:54:58 - root - INFO - Input sql:
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       (ps."sales_2019" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2019)) * 100 AS "Share_Q4_2019",
       (ps."sales_2020" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2020)) * 100 AS "Share_Q4_2020",
       ((ps."sales_2020" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT total_sales FROM total_sales_per_year WHERE "year" = 2019))) * 100 AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC
The error information is:
000904 (42000): 01ba4d1e-0004-96e7-0001-11c3010c7ce2: SQL compilation error: error line 72 at position 34
invalid identifier 'TOTAL_SALES'
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-02-10 14:56:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:56:28 - root - INFO - ```sql
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100 AS "Share_Q4_2019",
       (ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100 AS "Share_Q4_2020",
       ((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100 AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
```
2025-02-10 14:56:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:56:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:56:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:56:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-10 14:56:29 - snowflake.connector.connection - INFO - closed
2025-02-10 14:56:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:56:30 - root - INFO - itercount: 2
2025-02-10 14:56:30 - root - INFO - No data found for the specified query.

2025-02-10 14:56:30 - root - INFO - Input sql:
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND (s."promo_id" IS NULL OR s."promo_id" = 0)
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND (s."promo_id" IS NULL OR s."promo_id" = 0)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100 AS "Share_Q4_2019",
       (ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100 AS "Share_Q4_2020",
       ((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100 AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
The error information is:
 No data found for the specified query.

2025-02-10 14:57:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 14:57:58 - root - INFO - ```sql
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND s."promo_id" = 999
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100 AS "Share_Q4_2019",
       (ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100 AS "Share_Q4_2020",
       ((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100 AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
```
2025-02-10 14:57:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 14:57:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 14:57:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 14:58:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-10 14:58:00 - snowflake.connector.connection - INFO - closed
2025-02-10 14:58:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 14:58:01 - root - INFO - itercount: 3
2025-02-10 14:58:01 - root - INFO - 0
2025-02-10 14:58:01 - root - INFO - results: 
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
28,English Willow Cricket Bat,0.9944944176339932,3.544821461745,2.5503270441110066
130,Pro Maple Youth Bat,3.5097654753151306,2.5552768706100455,-0.9544886047050848
14,Pitching Machine and Batting Cage Combo,9.521898126402403,7.796884753939409,-1.725013372462994
21,Speed Trainer Bats and Training Program,9.02632594891847,5.155203462607132,-3.871122486311338


2025-02-10 14:58:01 - root - INFO - Please check the answer again by reviewing In the United States, for Q4 2019 and Q4 2020, first select only those cities where total sales (with no promotions) rose by at least 20% from Q4 2019 to Q4 2020. Among these cities, rank products by their overall sales (still excluding promotions) in those quarters and take the top 20%. Then compute each top product’s share of total sales in Q4 2019 and Q4 2020 and calculate the difference in share from Q4 2019 to Q4 2020, returning the results in descending order of that share change., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
product_id1:int,product_name1:str,share_2019_1:float,share_2020_1:float,share_change_1:float
product_id2:int,product_name2:str,share_2019_2:float,share_2020_2:float,share_change_2:float
...
```
(Results are ordered in descending order of **Share_Change**)

**Explanation:**

The table above lists the top 20% of products (excluding promotions) sold in cities across the United States where total sales increased by at least 20% from Q4 2019 to Q4 2020. For each product, it shows:

- **Product_ID**: The unique identifier of the product.
- **Product_Name**: The name of the product.
- **Share_Q4_2019**: The product's share of total sales in Q4 2019 (as a percentage).
- **Share_Q4_2020**: The product's share of total sales in Q4 2020 (as a percentage).
- **Share_Change**: The difference in share from Q4 2019 to Q4 2020 (Share_Q4_2020 minus Share_Q4_2019).

The results are sorted in descending order based on **Share_Change**, highlighting the products with the most significant increase in market share over the specified period. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
28,English Willow Cricket Bat,0.9944944176339932,3.544821461745,2.5503270441110066
130,Pro Maple Youth Bat,3.5097654753151306,2.5552768706100455,-0.9544886047050848
14,Pitching Machine and Batting Cage Combo,9.521898126402403,7.796884753939409,-1.725013372462994
21,Speed Trainer Bats and Training Program,9.02632594891847,5.155203462607132,-3.871122486311338
Current sql:
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND s."promo_id" = 999
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100 AS "Share_Q4_2019",
       (ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100 AS "Share_Q4_2020",
       ((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100 AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
2025-02-10 15:00:14 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 15:00:14 - root - INFO - ```sql
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND cnt."country_name" = 'United States of America'
      AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
    AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       ROUND((ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100,4) AS "Share_Q4_2019",
       ROUND((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100,4) AS "Share_Q4_2020",
       ROUND(((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100,4) AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
```
2025-02-10 15:00:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 15:00:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 15:00:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 15:00:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-10 15:00:16 - snowflake.connector.connection - INFO - closed
2025-02-10 15:00:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 15:00:17 - root - INFO - itercount: 4
2025-02-10 15:00:17 - root - INFO - No data found for the specified query.

2025-02-10 15:00:17 - root - INFO - Input sql:
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND cnt."country_name" = 'United States of America'
      AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
    AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND (s."promo_id" IS NULL OR s."promo_id" NOT IN (SELECT "promo_id" FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PROMOTIONS"))
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       ROUND((ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100,4) AS "Share_Q4_2019",
       ROUND((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100,4) AS "Share_Q4_2020",
       ROUND(((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100,4) AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
The error information is:
 No data found for the specified query.

2025-02-10 15:03:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 15:03:03 - root - INFO - ```sql
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND s."promo_id" = 999
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       ROUND((ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100, 4) AS "Share_Q4_2019",
       ROUND((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100, 4) AS "Share_Q4_2020",
       ROUND(((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100, 4) AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
```
2025-02-10 15:03:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 15:03:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 15:03:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 15:03:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-10 15:03:06 - snowflake.connector.connection - INFO - closed
2025-02-10 15:03:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 15:03:06 - root - INFO - itercount: 5
2025-02-10 15:03:06 - root - INFO - 0
2025-02-10 15:03:06 - root - INFO - results: 
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
28,English Willow Cricket Bat,0.9945,3.5448,2.5503
130,Pro Maple Youth Bat,3.5098,2.5553,-0.9545
14,Pitching Machine and Batting Cage Combo,9.5219,7.7969,-1.725
21,Speed Trainer Bats and Training Program,9.0263,5.1552,-3.8711


2025-02-10 15:03:06 - root - INFO - Please check the answer again by reviewing In the United States, for Q4 2019 and Q4 2020, first select only those cities where total sales (with no promotions) rose by at least 20% from Q4 2019 to Q4 2020. Among these cities, rank products by their overall sales (still excluding promotions) in those quarters and take the top 20%. Then compute each top product’s share of total sales in Q4 2019 and Q4 2020 and calculate the difference in share from Q4 2019 to Q4 2020, returning the results in descending order of that share change., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
product_id1:int,product_name1:str,share_2019_1:float,share_2020_1:float,share_change_1:float
product_id2:int,product_name2:str,share_2019_2:float,share_2020_2:float,share_change_2:float
...
```
(Results are ordered in descending order of **Share_Change**)

**Explanation:**

The table above lists the top 20% of products (excluding promotions) sold in cities across the United States where total sales increased by at least 20% from Q4 2019 to Q4 2020. For each product, it shows:

- **Product_ID**: The unique identifier of the product.
- **Product_Name**: The name of the product.
- **Share_Q4_2019**: The product's share of total sales in Q4 2019 (as a percentage).
- **Share_Q4_2020**: The product's share of total sales in Q4 2020 (as a percentage).
- **Share_Change**: The difference in share from Q4 2019 to Q4 2020 (Share_Q4_2020 minus Share_Q4_2019).

The results are sorted in descending order based on **Share_Change**, highlighting the products with the most significant increase in market share over the specified period. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Product_ID,Product_Name,Share_Q4_2019,Share_Q4_2020,Share_Change
28,English Willow Cricket Bat,0.9945,3.5448,2.5503
130,Pro Maple Youth Bat,3.5098,2.5553,-0.9545
14,Pitching Machine and Batting Cage Combo,9.5219,7.7969,-1.725
21,Speed Trainer Bats and Training Program,9.0263,5.1552,-3.8711
Current sql:
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND s."promo_id" = 999
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       ROUND((ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100, 4) AS "Share_Q4_2019",
       ROUND((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100, 4) AS "Share_Q4_2020",
       ROUND(((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100, 4) AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
2025-02-10 15:05:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-10 15:05:25 - root - INFO - ```sql
WITH cities_with_20pc_increase AS (
    SELECT c."cust_city"
    FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
    JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."COUNTRIES" cnt ON c."country_id" = cnt."country_id"
    WHERE t."calendar_quarter_number" = 4
      AND t."calendar_year" IN (2019, 2020)
      AND s."promo_id" = 999
      AND cnt."country_name" = 'United States of America'
    GROUP BY c."cust_city"
    HAVING SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) > 0
       AND ((SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) -
             SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END)) /
             NULLIF(SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END),0) * 100) >= 20
),
product_sales AS (
  SELECT s."prod_id",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY s."prod_id"
),
product_sales_ranked AS (
  SELECT p.*,
         RANK() OVER (ORDER BY "total_sales" DESC) AS "sales_rank"
  FROM product_sales p
),
product_counts AS (
  SELECT COUNT(*) AS total_products, CEIL(COUNT(*) * 0.2) AS top_20_percent_count
  FROM product_sales
),
top_products AS (
  SELECT psr."prod_id"
  FROM product_sales_ranked psr
  CROSS JOIN product_counts pc
  WHERE psr."sales_rank" <= pc.top_20_percent_count
),
product_sales_by_year AS (
  SELECT s."prod_id",
         SUM(CASE WHEN t."calendar_year" = 2019 THEN s."amount_sold" ELSE 0 END) AS "sales_2019",
         SUM(CASE WHEN t."calendar_year" = 2020 THEN s."amount_sold" ELSE 0 END) AS "sales_2020"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019, 2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
    AND s."prod_id" IN (SELECT "prod_id" FROM top_products)
  GROUP BY s."prod_id"
),
total_sales_per_year AS (
  SELECT t."calendar_year" AS "year",
         SUM(s."amount_sold") AS "total_sales"
  FROM "COMPLEX_ORACLE"."COMPLEX_ORACLE"."SALES" s
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."TIMES" t ON s."time_id" = t."time_id"
  JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."CUSTOMERS" c ON s."cust_id" = c."cust_id"
  WHERE t."calendar_quarter_number" = 4
    AND t."calendar_year" IN (2019,2020)
    AND s."promo_id" = 999
    AND c."cust_city" IN (SELECT "cust_city" FROM cities_with_20pc_increase)
  GROUP BY t."calendar_year"
)
SELECT ps."prod_id" AS "Product_ID",
       pr."prod_name" AS "Product_Name",
       ROUND((ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019)) * 100, 4) AS "Share_Q4_2019",
       ROUND((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) * 100, 4) AS "Share_Q4_2020",
       ROUND(((ps."sales_2020" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2020)) -
        (ps."sales_2019" / (SELECT "total_sales" FROM total_sales_per_year WHERE "year" = 2019))) * 100, 4) AS "Share_Change"
FROM product_sales_by_year ps
JOIN "COMPLEX_ORACLE"."COMPLEX_ORACLE"."PRODUCTS" pr ON ps."prod_id" = pr."prod_id"
ORDER BY "Share_Change" DESC NULLS LAST
```
2025-02-10 15:05:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-10 15:05:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-10 15:05:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-10 15:05:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-10 15:05:26 - snowflake.connector.connection - INFO - closed
2025-02-10 15:05:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-10 15:05:27 - root - INFO - itercount: 6
2025-02-10 15:05:27 - root - INFO - 0
2025-02-10 15:05:27 - root - INFO - Total iteration counts: 6
