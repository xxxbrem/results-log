2025-02-12 02:59:26 - openai._base_client - INFO - Retrying request to /chat/completions in 0.468429 seconds
2025-02-12 03:00:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:00:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:00:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:00:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:00:31 - snowflake.connector.connection - INFO - closed
2025-02-12 03:00:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:00:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:00:49 - root - INFO - **Explanation:**

The error message you received indicates that the column `"symptom_Anosmia"` is not recognized in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is likely due to a mismatch in the column name's capitalization.

In the provided DDLs, it appears that in the weekly tables, symptom column names are in **lowercase**. For example, in the `SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY` table, the columns are declared as:

```sql
"symptom_anosmia" VARCHAR(16777216),
```

To fix the error, please adjust the column name in your query to use lowercase letters:

```sql
SELECT "date", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
LIMIT 100;
```

**Revised Query:**

```sql
SELECT "date", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
LIMIT 100;
```

This should resolve the error, allowing you to retrieve the data for the `"symptom_anosmia"` column.
2025-02-12 03:00:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:00:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:00:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:00:51 - snowflake.connector.connection - INFO - closed
2025-02-12 03:00:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:01:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:01:48 - root - INFO - **Explanation:**

The error you're encountering indicates a syntax issue with your SQL query, specifically related to the column names and how they are referenced in the query.

Here's the error message you provided:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected '"symptom_anosmia"'.
```

**Possible Causes and Solutions:**

1. **Column Name Case Sensitivity and Quoting:**

   In Snowflake, unquoted identifiers (like table names and column names) are **case-insensitive** and are converted to **uppercase** internally. However, when you enclose identifiers in double quotes `"`, they become **case-sensitive** and must match the case exactly as defined in the schema.

   In the DDL you provided, for the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`, the symptom columns are defined in **lowercase** and enclosed in double quotes:

   ```sql
   "symptom_abdominal_obesity" VARCHAR(16777216),
   "symptom_abdominal_pain" VARCHAR(16777216),
   ...
   "symptom_anosmia" VARCHAR(16777216),
   ```
   
   **Therefore, you need to:**
   
   - Use **lowercase** column names exactly as they appear in the table schema.
   - Enclose the column names in double quotes to preserve their case sensitivity.

2. **Correcting the Syntax:**

   The error message points to a syntax error at position 0, which suggests there might be an issue with the query structure or misplaced quotation marks.

   Here's how you can adjust your query:

   ```sql
   SELECT "date", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
   ```
   
   **Key Points:**

   - Ensure that both the `"date"` and `"symptom_anosmia"` columns are enclosed in double quotes.
   - Use the exact lowercase spelling of `"symptom_anosmia"` as defined in the table.

3. **If the Issue Persists:**

   If you continue to receive the error after making these adjustments, it's possible that:

   - The column `"symptom_anosmia"` might not exist in the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table.
   - There might be a mismatch in the table you're querying.

   **Alternative Solution:**

   Based on the DDLs you provided, the **daily tables** (`SYMPTOM_SEARCH_SUB_REGION_2_DAILY`) have symptom column names with capitalized words, such as `"symptom_Anosmia"`, and the `"date"` column is of type `DATE`.

   **Try querying the daily table instead:**

   ```sql
   SELECT "date", "symptom_Anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_DAILY
   LIMIT 100;
   ```

   **Why This Might Work:**

   - In the daily tables, symptom columns are defined with capitalized names, matching `"symptom_Anosmia"`.
   - The `"date"` column is a `DATE` type, which may be more appropriate for date range filtering.

4. **Sample Queries for Verification:**

   To ensure that you're referencing the correct columns, you can run the following queries:

   - **List Columns in the Weekly Table (if allowed):**

     *Note:* Since you mentioned not to write queries checking data types or schemas, this is just for your information. If permitted, you could list the columns to verify their names.

     ```sql
     -- This is for schema verification purposes
     SELECT "COLUMN_NAME" 
     FROM "INFORMATION_SCHEMA"."COLUMNS"
     WHERE "TABLE_CATALOG" = 'COVID19_SYMPTOM_SEARCH'
       AND "TABLE_SCHEMA" = 'COVID19_SYMPTOM_SEARCH'
       AND "TABLE_NAME" = 'SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY';
     ```

   - **Select All Columns to View Available Data:**

     ```sql
     SELECT *
     FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
     LIMIT 10;
     ```

     This will help you see the exact column names in the table.

5. **Ensure Correct Table and Column References:**

   Be certain that:

   - You're querying the correct table (`SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` or `SYMPTOM_SEARCH_SUB_REGION_2_DAILY`) as per the column definitions.
   - The database and schema names (`COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH`) are correct.
   - All identifiers are properly enclosed in double quotes if they are case-sensitive or contain special characters.

**Final Recommendation:**

Given the above, I recommend using the daily table with the following query:

```sql
SELECT "date", "symptom_Anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_DAILY
LIMIT 100;
```

This should resolve the error and allow you to proceed with your analysis.

**Additional Note:**

For your task of calculating the overall percentage change in the average weekly search frequency for 'Anosmia' across the specified counties, you may need to:

- Use the daily table if it contains the correct data and column names.
- Aggregate the data to a weekly level if necessary, using `GROUP BY` clauses.
- Ensure that date filtering is correctly applied to the date ranges for 2019 and 2020.

**Example Query for Aggregation:**

```sql
-- Calculate average weekly search frequency for 2019
WITH weekly_data_2019 AS (
  SELECT 
    DATE_TRUNC('week', "date") AS "week_start",
    AVG("symptom_Anosmia") AS "avg_anosmia"
  FROM 
    COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_DAILY
  WHERE 
    "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
  GROUP BY 
    "week_start"
),
-- Calculate average weekly search frequency for 2020
weekly_data_2020 AS (
  SELECT 
    DATE_TRUNC('week', "date") AS "week_start",
    AVG("symptom_Anosmia") AS "avg_anosmia"
  FROM 
    COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_DAILY
  WHERE 
    "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
  GROUP BY 
    "week_start"
)
-- Calculate the overall average for each year
SELECT 
  AVG(weekly_data_2019."avg_anosmia") AS "overall_avg_2019",
  AVG(weekly_data_2020."avg_anosmia") AS "overall_avg_2020"
FROM 
  weekly_data_2019, weekly_data_2020;
```

This query:

- Uses the daily table with the correct column names.
- Aggregates the data to a weekly level.
- Calculates the overall average for each year.

**Summary:**

- Use the daily table if the weekly table is causing issues.
- Ensure column names match exactly in case and spelling.
- Properly enclose identifiers in double quotes if they are case-sensitive.
- Verify that you're querying the correct database, schema, and table names.

Feel free to let me know if you have any further questions or need additional assistance!
2025-02-12 03:01:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:01:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:01:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:01:49 - snowflake.connector.connection - INFO - closed
2025-02-12 03:01:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:02:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:02:35 - root - INFO - **Explanation:**

The error you're encountering:

```
SQL compilation error:
syntax error line 1 at position 0 unexpected '"symptom_abdominal_obesity"'.
```

indicates that the SQL parser is unexpectedly encountering `"symptom_abdominal_obesity"` at the very beginning of your query (position 0). This suggests that there's a syntax issue, possibly due to extra characters or incorrect structure in the query.

**Possible Causes and Solutions:**

1. **Check for Hidden or Extra Characters:**

   There might be hidden or extra characters (such as control characters, invisible spaces, or newlines) at the beginning of your query, causing the parser to misinterpret it.

   **Action:** Delete the entire query and retype it manually to ensure there are no hidden characters.

2. **Ensure the Query Starts with the `SELECT` Keyword:**

   The error suggests that the parser is not seeing the `SELECT` keyword where it expects it.

   **Action:** Make sure your query begins exactly with `SELECT`, with no preceding spaces or characters.

3. **Verify Column Names and Case Sensitivity:**

   In the DDL provided, the weekly tables (`SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`) have symptom column names in **lowercase** and the `"date"` column as `VARCHAR`. Specifically, the symptom column is `"symptom_anosmia"` (all lowercase).

   **Action:** Use lowercase column names enclosed in double quotes:

   ```sql
   SELECT "date", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
   ```

4. **Check for Quotation Marks:**

   Mismatched or misplaced quotation marks can cause syntax errors.

   **Action:** Ensure all identifiers are correctly enclosed:

   - Column names and identifiers that are case-sensitive or contain special characters should be enclosed in double quotes `"`.
   - Verify that all opening quotes have corresponding closing quotes.

5. **Remove Unnecessary Quotes:**

   If your identifiers don't require case sensitivity or special characters, you can remove the quotes.

   **Action:** Try the query without quotes:

   ```sql
   SELECT date, symptom_anosmia
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
   ```

6. **Simplify the Query:**

   Test with a minimal query to see if the issue persists.

   **Action:** Try selecting only one column:

   ```sql
   SELECT "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
   ```

7. **Verify Table and Schema Names:**

   Confirm that the table and schema names are correct and match exactly as defined.

   **Action:** Ensure you're referencing the correct database, schema, and table.

8. **Test the Table with `SELECT *`:**

   To check if the table is accessible and contains the expected columns.

   **Action:**

   ```sql
   SELECT *
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 5;
   ```

   This can help you see all available columns and verify their names.

9. **Use Table Aliases:**

   Assigning an alias can sometimes resolve referencing issues.

   **Action:**

   ```sql
   SELECT t."date", t."symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY AS t
   LIMIT 100;
   ```

10. **Check for Client-Specific Issues:**

    If you're using a SQL client or interface, there might be default behaviors or settings affecting your query.

    **Action:** Try running the query in a different client or environment to see if the issue persists.

**Additional Notes:**

- **Column Naming Conventions:** In your DDL, the symptom columns in weekly tables are defined in lowercase (e.g., `"symptom_anosmia"`). In contrast, the daily tables use capitalized symptom names (e.g., `"symptom_Anosmia"`). Ensure you're using the correct table corresponding to the column naming.

- **Data Types:** The `"date"` column in the weekly tables is a `VARCHAR`, not a `DATE`. Be cautious when applying date filters.

**Summary:**

- **Use Correct Column Names:** Use `"symptom_anosmia"` in lowercase when querying the weekly tables.

- **Ensure Proper Syntax:** Make sure your query starts with `SELECT` and that all syntax is correct.

- **Check for Hidden Characters:** Retype your query to eliminate any hidden or special characters that might cause parsing issues.

- **Verify Table Structure:** If possible, inspect the table structure to confirm the presence and exact names of the columns.

**Example of a Corrected Query:**

```sql
SELECT "date", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
LIMIT 100;
```

This should resolve the syntax error and allow you to retrieve the data. If you continue to experience issues, consider checking for client-specific quirks or reaching out to your database administrator for further assistance.

Feel free to let me know if you need any more help!
2025-02-12 03:02:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:02:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:02:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:02:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:02:36 - snowflake.connector.connection - INFO - closed
2025-02-12 03:02:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:04:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:04:32 - root - INFO - SQL:
SELECT "date", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
Results:
date,symptom_anosmia
2022-01-17,
2022-02-07,
2022-03-07,
2022-03-21,
2022-08-22,
2023-08-07,
2023-02-06,
2023-09-04,
2023-07-10,
2023-07-31,
2023-04-03,
2023-01-23,
2023-01-16,
2023-06-05,
2023-03-27,
2023-02-13,
2023-04-17,
2023-02-27,
2023-03-06,
2023-09-04,
2023-10-30,
2023-06-05,
2023-04-03,
2024-02-12,
2024-04-15,
2024-04-08,
2024-01-15,
2024-06-17,
2024-08-05,
2024-01-01,
2024-07-01,
2024-03-04,
2024-09-09,
2024-03-25,
2023-07-24,
2023-01-16,
2023-11-06,
2023-10-09,
2023-08-28,
2023-06-26,
2023-10-30,
2023-03-20,
2024-08-05,
2023-08-07,
2023-06-26,
2023-10-09,
2023-08-28,
2023-05-29,
2023-06-26,
2023-05-08,
2023-01-09,
2023-12-04,
2023-03-27,
2023-08-07,
2023-04-03,
2023-06-05,
2023-12-25,
2024-01-15,
2024-08-05,
2024-04-01,
2024-09-02,
2024-01-01,
2024-06-10,
2024-03-18,
2023-05-22,
2023-04-03,
2024-07-22,
2024-03-25,
2024-03-18,
2024-01-01,
2024-08-19,
2024-06-24,
2024-09-30,
2023-01-23,
2023-01-23,
2023-11-06,
2023-10-30,
2023-07-17,
2023-03-06,
2024-01-15,
2024-08-12,
2024-01-08,
2024-09-09,
2024-07-01,
2024-06-10,
2023-01-23,
2023-03-27,
2023-12-18,
2023-08-14,
2023-05-01,
2023-10-09,
2023-07-24,
2023-04-24,
2024-05-27,
2024-09-02,
2024-03-11,
2024-03-04,
2024-08-26,
2024-02-19,
2024-03-18,

2025-02-12 03:04:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:04:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:04:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:04:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:04:34 - snowflake.connector.connection - INFO - closed
2025-02-12 03:04:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:04:34 - root - INFO - SQL:
SELECT DISTINCT "sub_region_2"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
Results:
sub_region_2
Mole Valley District
Washington County
Story County
Chichester District
Epsom and Ewell District
Waverley Council
Grady County
Stewart County
Fentress County
Tippah County
Cootamundra-Gundagai Regional Council
Cochran County
Arenac County
Brule County
St. Joseph County
Wichita County
Tenterfield Shire Council
Wilbarger County
Camden County
Nillumbik Shire
District Council of Robe
Eurobodalla Shire Council
Roosevelt County
Hocking County
Otoe County
Shire of Mundaring
Jackson County
Rushmoor District
Dare County
Hawkins County
Caldwell County
Furnas County
Galax
Oxford
Imperial County
Havant
Dickinson County
Richmond Valley Council
San Jacinto County
Tamworth Regional Council
Port Augusta City Council
Southern Midlands Council
Ransom County
Ritchie County
Avery County
Copiah County
Ware County
Sharp County
Juneau
Hamlin County
Georgetown County
Torridge District
Menard County
El Dorado County
Pulaski County
Essex County
Livingston County
New York County
Brunswick County
Snohomish County
Greater Geelong City
Cape Girardeau County
Del Norte County
Owsley County
Los Alamos County
Camp County
Gwinnett County
Strafford County
Stark County
Giles County
Gonzales County
Town of Port Hedland
Shire of Narrogin
Corson County
Marquette County
Oscoda County
Caddo County
Avoyelles Parish
Labette County
Shire of Augusta-Margaret River
St. Charles Parish
Ballard County
Zapata County
Garrard County
Roscommon County
Alcona County
Orange County
London Borough of Lambeth
London Borough of Camden
Kenton County
Monroe County
Hardeman County
Vermillion County
Bear Lake County
Antelope County
Wellington Shire
Southeast Fairbanks
Lanier County
Charles Mix County
Hinckley and Bosworth District

2025-02-12 03:04:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:04:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:04:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:04:35 - snowflake.connector.connection - INFO - closed
2025-02-12 03:04:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:05:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:05:02 - root - INFO - **Explanation:**

The error message indicates that the column `"symptom_Anosmia"` is invalid in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is likely due to the column name's case sensitivity or spelling in the table schema.

**Correction Steps:**

1. **Column Name Case Sensitivity:**

   In the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, symptom columns are defined in **lowercase** letters. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

2. **Date Column Data Type:**

   The `"date"` column in the weekly tables is of type `VARCHAR`, so when performing date comparisons, you need to convert it to `DATE` using the `TO_DATE` function.

**Corrected SQL Query:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
LIMIT 100;
```

**Explanation:**

- Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table.
- Used `TO_DATE("date", 'YYYY-MM-DD')` to convert the `"date"` column from `VARCHAR` to `DATE` for accurate date filtering.

Please try running this corrected query. If you encounter any further errors or need additional assistance, feel free to ask!
2025-02-12 03:05:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:05:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:05:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:05:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:05:03 - snowflake.connector.connection - INFO - closed
2025-02-12 03:05:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:05:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:05:40 - root - INFO - SQL:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
LIMIT 100;
Results:
date,sub_region_2,symptom_anosmia
2019-03-11,Kings County,
2019-09-23,Kings County,
2019-05-06,Richmond County,
2019-01-07,Richmond County,
2019-02-18,Richmond County,
2019-01-28,Richmond County,
2019-09-16,Richmond County,
2019-05-27,Kings County,
2019-10-14,Kings County,
2019-02-11,Kings County,
2019-05-06,Kings County,
2019-06-24,Richmond County,0.13
2019-04-01,Richmond County,
2019-04-08,Richmond County,
2019-12-09,Richmond County,
2019-09-30,Kings County,
2019-03-18,Kings County,
2019-01-21,Kings County,
2019-07-08,Kings County,
2019-12-30,New York County,0.06
2019-11-25,Kings County,0.07
2019-05-06,New York County,0.05
2019-06-24,Queens County,0.05
2019-06-03,Kings County,0.07
2019-02-04,Kings County,0.05
2019-03-25,Kings County,0.06
2019-12-16,Queens County,0.06
2019-06-10,Richmond County,
2019-12-02,Bronx County,0.05
2019-03-11,Kings County,0.06
2019-02-11,Queens County,0.04
2019-06-10,Queens County,0.05
2019-02-25,Bronx County,0.04
2019-07-08,Kings County,0.05
2019-05-13,Kings County,0.07
2019-11-18,Queens County,0.06
2019-11-18,Bronx County,0.04
2019-09-30,Queens County,0.06
2019-09-02,Kings County,0.05
2019-04-29,Kings County,0.06
2019-02-04,Richmond County,0.05
2019-03-18,Bronx County,0.05
2019-12-02,Richmond County,0.04
2019-01-28,Richmond County,0.04
2019-10-07,Bronx County,0.06
2019-06-17,Richmond County,0.05
2019-10-21,Bronx County,0.03
2019-08-12,Bronx County,0.04
2019-09-09,Richmond County,0.06
2019-03-25,Richmond County,0.07
2019-09-16,Richmond County,0.07
2019-02-04,Richmond County,
2019-02-25,Kings County,0.06
2019-01-14,Kings County,0.07
2019-07-01,Kings County,0.05
2019-02-04,Bronx County,0.07
2019-02-25,Queens County,0.06
2019-12-02,Kings County,0.06
2019-03-04,Kings County,0.04
2019-03-04,Queens County,0.05
2019-06-10,Kings County,0.06
2019-11-11,Bronx County,0.06
2019-01-07,Bronx County,0.05
2019-09-23,Kings County,0.05
2019-12-30,Kings County,0.07
2019-02-18,Queens County,0.05
2019-07-22,Kings County,0.05
2019-10-21,Kings County,0.06
2019-07-15,Queens County,0.05
2019-07-29,Bronx County,0.06
2019-08-26,Kings County,0.04
2019-11-04,Bronx County,0.06
2019-10-07,Richmond County,0.04
2019-05-06,Kings County,0.05
2019-10-14,Bronx County,0.07
2019-08-05,Richmond County,0.13
2019-03-25,Richmond County,
2019-06-10,Richmond County,
2019-10-21,Kings County,
2019-01-14,Kings County,
2019-05-06,Richmond County,0.1
2019-09-02,Richmond County,
2019-07-22,Richmond County,
2019-06-03,Richmond County,0.1
2019-11-18,Richmond County,0.04
2019-04-29,Richmond County,0.06
2019-07-22,Richmond County,0.06
2019-10-14,Richmond County,0.04
2019-07-08,Richmond County,
2019-02-25,Richmond County,0.12
2019-11-18,Richmond County,0.13
2019-01-21,Queens County,0.05
2019-11-18,Kings County,0.04
2019-12-23,Queens County,0.05
2019-03-11,Queens County,0.04
2019-01-14,Bronx County,0.07
2019-04-15,Kings County,0.07
2019-07-08,Bronx County,0.06
2019-01-28,Bronx County,0.04
2019-04-01,Bronx County,0.04

2025-02-12 03:05:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:05:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:05:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:05:41 - snowflake.connector.connection - INFO - closed
2025-02-12 03:05:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:06:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:06:36 - root - INFO - **Explanation:**

The error message you're encountering:

```
SQL compilation error: error line 1 at position 31
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` does not exist in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is likely due to a mismatch in the column name's casing or spelling.

**Correction Steps:**

1. **Column Name Case Sensitivity:**

   In the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, the symptom columns are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

2. **Date Column Data Type:**

   The `"date"` column in the weekly tables is of type `VARCHAR`. To perform date comparisons, you need to convert it to `DATE` using the `TO_DATE` function.

**Corrected SQL Query:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
```

---

**Correcting Other SQL Queries with Similar Errors:**

Below are the corrected versions of the SQL queries you provided. I've adjusted the column names and date handling to resolve the errors.

---

1. **Original Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

---

2. **Original Query:**

   ```sql
   SELECT "sub_region_2", AVG("symptom_Anosmia") AS "avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

---

3. **Original Query:**

   ```sql
   SELECT "sub_region_2", AVG("symptom_Anosmia") AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

---

4. **Original Query:**

   ```sql
   SELECT AVG("symptom_Anosmia") AS "overall_avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
   LIMIT 100;
   ```

---

5. **Original Query:**

   ```sql
   SELECT AVG("symptom_Anosmia") AS "overall_avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

---

6. **Original Query:**

   ```sql
   SELECT "sub_region_2",
     AVG(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "avg_anosmia_2019",
     AVG(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "sub_region_2",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2019",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

---

7. **Original Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    ORDER BY "symptom_Anosmia" DESC
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
   LIMIT 100;
   ```

---

8. **Original Query:**

   ```sql
   SELECT EXTRACT(YEAR FROM "date") AS "year", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND "date" BETWEEN '2019-01-01' AND '2020-12-31'
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

---

9. **Original Query:**

   ```sql
   SELECT DISTINCT "date"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "symptom_Anosmia" IS NOT NULL
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT DISTINCT "date"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "symptom_anosmia" IS NOT NULL
     AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   LIMIT 100;
   ```

---

10. **Original Query:**

    ```sql
    SELECT "sub_region_2", COUNT(*) AS "record_count"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    GROUP BY "sub_region_2"
    LIMIT 100;
    ```

    **Corrected Query:**

    ```sql
    SELECT "sub_region_2", COUNT(*) AS "record_count"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    GROUP BY "sub_region_2"
    LIMIT 100;
    ```

---

11. **Original Query:**

    ```sql
    SELECT "date", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2020-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND "symptom_Anosmia" > 0.5
    LIMIT 100;
    ```

    **Corrected Query:**

    ```sql
    SELECT "date", "sub_region_2", "symptom_anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND CAST("symptom_anosmia" AS FLOAT) > 0.5
    LIMIT 100;
    ```

---

12. **Original Query:**

    ```sql
    SELECT
      MIN(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2019",
      MAX(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2019",
      MIN(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2020",
      MAX(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2020"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    LIMIT 100;
    ```

    **Corrected Query:**

    ```sql
    SELECT
      MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
      MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
      MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
      MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    LIMIT 100;
    ```

---

**Summary of Corrections:**

- **Column Names:** Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table, which is in lowercase.

- **Date Handling:** Converted the `"date"` column from `VARCHAR` to `DATE` using `TO_DATE("date", 'YYYY-MM-DD')` to perform date comparisons.

- **Data Type Casting:** Cast `"symptom_anosmia"` to `FLOAT` when performing numerical operations such as `AVG`, `MIN`, `MAX`, or when using it in numerical comparisons, because it is stored as `VARCHAR`.

---

Please use these corrected queries for your analysis. Let me know if you need any further assistance!
2025-02-12 03:06:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:06:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:06:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:06:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:06:37 - snowflake.connector.connection - INFO - closed
2025-02-12 03:06:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:07:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:07:47 - root - INFO - SQL:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
Results:
date,sub_region_2,symptom_anosmia
2020-11-02,Richmond County,0.25
2020-06-22,Richmond County,0.29
2020-08-24,Richmond County,
2020-12-28,Richmond County,0.93
2020-02-03,Richmond County,
2020-04-06,Richmond County,
2020-11-16,Richmond County,
2020-01-06,Richmond County,
2020-09-21,Richmond County,0.28
2020-03-16,Richmond County,0.19
2020-10-26,New York County,0.14
2020-12-14,Queens County,0.34
2020-01-20,Queens County,0.07
2020-05-04,Bronx County,0.26
2020-11-23,Bronx County,0.27
2020-06-08,Queens County,0.16
2020-05-04,Richmond County,0.17
2020-10-05,Richmond County,0.16
2020-04-13,Bronx County,1.1
2020-01-27,Bronx County,0.04
2020-12-07,Queens County,0.29
2020-06-15,Queens County,0.15
2020-07-20,Bronx County,0.2
2020-12-28,Queens County,0.43
2020-10-26,Richmond County,0.18
2020-08-31,Kings County,0.13
2020-01-13,Richmond County,0.05
2020-08-17,Richmond County,
2020-06-08,Richmond County,
2020-07-13,Richmond County,0.17
2020-04-13,Kings County,
2020-05-25,Kings County,0.19
2020-12-07,Kings County,0.58
2020-08-03,Richmond County,
2020-03-30,Kings County,2.62
2020-06-01,New York County,0.15
2020-03-23,Bronx County,4.65
2020-07-13,Kings County,0.19
2020-09-21,Kings County,0.16
2020-08-03,New York County,0.14
2020-12-07,Kings County,0.28
2020-01-20,Kings County,0.06
2020-10-19,New York County,0.14
2020-11-23,Kings County,0.26
2020-04-20,Bronx County,0.65
2020-09-14,Bronx County,0.15
2020-04-13,Richmond County,0.59
2020-03-23,Richmond County,2.73
2020-11-30,Richmond County,0.35
2020-07-06,Richmond County,0.74
2020-09-21,Kings County,0.13
2020-04-06,Kings County,0.22
2020-05-11,Kings County,
2020-04-13,Richmond County,
2020-10-19,Kings County,0.25
2020-03-30,Kings County,0.19
2020-02-03,Kings County,
2020-06-22,Kings County,0.43
2020-06-22,Richmond County,
2020-12-14,Kings County,0.73
2020-02-10,Richmond County,
2020-08-10,Richmond County,
2020-01-20,Richmond County,
2020-09-07,New York County,0.14
2020-08-17,Richmond County,0.15
2020-02-24,Queens County,0.07
2020-02-03,Bronx County,0.05
2020-12-07,Richmond County,0.69
2020-11-30,New York County,0.23
2020-11-23,Queens County,0.24
2020-04-27,New York County,0.31
2020-09-28,Queens County,0.15
2020-10-12,Queens County,0.13
2020-09-07,Kings County,0.12
2020-10-12,Richmond County,0.15
2020-08-31,Bronx County,0.13
2020-05-18,Queens County,0.22
2020-12-14,Richmond County,0.65
2020-03-09,Richmond County,
2020-03-30,Richmond County,
2020-06-29,Richmond County,
2020-06-15,New York County,0.18
2020-04-06,New York County,1.16
2020-05-11,Kings County,0.21
2020-04-20,Queens County,0.48
2020-12-21,Bronx County,0.4
2020-07-27,New York County,0.19
2020-08-10,New York County,0.13
2020-09-14,New York County,0.14
2020-10-26,Queens County,0.14
2020-01-27,Queens County,0.06
2020-10-19,Queens County,0.13
2020-12-14,Bronx County,0.33
2020-03-16,Richmond County,0.79
2020-11-30,Bronx County,0.28
2020-04-06,Richmond County,1.07
2020-08-31,Richmond County,0.26
2020-08-31,Richmond County,0.13
2020-08-10,Richmond County,
2020-03-16,New York County,1.79

2025-02-12 03:07:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:07:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:07:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:07:48 - snowflake.connector.connection - INFO - closed
2025-02-12 03:07:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:08:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:08:16 - root - INFO - **Explanation:**

The error message indicates that the column `"symptom_Anosmia"` is invalid. This occurs because, in the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, all symptom column names are in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

Additionally:

- The `"date"` column is of type `VARCHAR`. To perform date comparisons, you need to convert it to `DATE` using the `TO_DATE` function.
- The `"symptom_anosmia"` column is stored as `VARCHAR`. When performing numerical operations like `AVG`, you should cast it to a numeric type such as `FLOAT`.

**Corrected SQL Query:**

```sql
SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2019"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
GROUP BY "sub_region_2"
LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Correction:**
  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table.
- **Data Type Casting:**
  - Used `CAST("symptom_anosmia" AS FLOAT)` to convert the `VARCHAR` values to `FLOAT` for the `AVG` function.
- **Date Conversion:**
  - Applied `TO_DATE("date", 'YYYY-MM-DD')` to convert the `VARCHAR` `"date"` column to a `DATE` type for accurate filtering.

Please use this corrected query to retrieve the average search frequency for 'Anosmia' in 2019 for the specified New York City counties.
2025-02-12 03:08:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:08:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:08:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:08:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 03:08:17 - snowflake.connector.connection - INFO - closed
2025-02-12 03:08:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:09:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:09:55 - root - INFO - SQL:
SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2019"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
GROUP BY "sub_region_2"
LIMIT 100;
Results:
sub_region_2,avg_anosmia_2019
New York County,0.05884615384615385
Bronx County,0.04788461538461538
Kings County,0.05849056603773585
Richmond County,0.08865671641791044
Queens County,0.051153846153846154

2025-02-12 03:09:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:09:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:09:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:09:56 - snowflake.connector.connection - INFO - closed
2025-02-12 03:09:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:11:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:11:23 - root - INFO - **Explanation:**

The error message indicates that the column `"symptom_Anosmia"` is invalid. This occurs because, in the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, symptom column names are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

Additionally:

- The `"date"` column is of type `VARCHAR`. To perform date comparisons, you need to convert it to `DATE` using the `TO_DATE` function.
- The `"symptom_anosmia"` column is stored as `VARCHAR`. To perform numerical operations like `AVG`, you need to cast it to a numerical data type such as `FLOAT`.

**Corrected SQL Query:**

```sql
SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
GROUP BY "sub_region_2"
LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Correction:**
  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table.
- **Data Type Casting:**
  - Used `CAST("symptom_anosmia" AS FLOAT)` to convert the `VARCHAR` values to `FLOAT` for the `AVG` function.
- **Date Conversion:**
  - Applied `TO_DATE("date", 'YYYY-MM-DD')` to convert the `VARCHAR` `"date"` column to a `DATE` type for accurate filtering.

---

**Please correct other SQLs if they have similar errors:**

1. **Original Query:**

   ```sql
   SELECT AVG("symptom_Anosmia") AS "overall_avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
   LIMIT 100;
   ```

2. **Original Query:**

   ```sql
   SELECT AVG("symptom_Anosmia") AS "overall_avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

3. **Original Query:**

   ```sql
   SELECT "sub_region_2",
     AVG(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "avg_anosmia_2019",
     AVG(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "sub_region_2",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2019",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

4. **Original Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    ORDER BY "symptom_Anosmia" DESC
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
   LIMIT 100;
   ```

5. **Original Query:**

   ```sql
   SELECT EXTRACT(YEAR FROM "date") AS "year", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND "date" BETWEEN '2019-01-01' AND '2020-12-31'
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

6. **Original Query:**

   ```sql
   SELECT DISTINCT "date"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "symptom_Anosmia" IS NOT NULL
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT DISTINCT "date"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "symptom_anosmia" IS NOT NULL
     AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   LIMIT 100;
   ```

7. **Original Query:**

   ```sql
   SELECT "sub_region_2", COUNT(*) AS "record_count"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    GROUP BY "sub_region_2"
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "sub_region_2", COUNT(*) AS "record_count"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
     AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

8. **Original Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2020-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND "symptom_Anosmia" > 0.5
    LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
     AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND CAST("symptom_anosmia" AS FLOAT) > 0.5
   LIMIT 100;
   ```

9. **Original Query:**

   ```sql
   SELECT
     MIN(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2019",
     MAX(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2019",
     MIN(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2020",
     MAX(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT
     MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
     MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
     MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
     MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   LIMIT 100;
   ```

**Summary of Corrections:**

- **Column Names:**
  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table (case-sensitive).
- **Data Type Casting:**
  - Cast `"symptom_anosmia"` to `FLOAT` when performing numerical operations, as it's stored as `VARCHAR`.
- **Date Conversion:**
  - Used `TO_DATE("date", 'YYYY-MM-DD')` to convert the `VARCHAR` `"date"` column to `DATE` type for accurate filtering and date functions.

---

Please use these corrected queries for your analysis. If you have any further questions or need additional assistance, feel free to ask!
2025-02-12 03:11:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:11:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:11:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:11:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 03:11:24 - snowflake.connector.connection - INFO - closed
2025-02-12 03:11:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:12:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:12:29 - root - INFO - SQL:
SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
GROUP BY "sub_region_2"
LIMIT 100;
Results:
sub_region_2,avg_anosmia_2020
New York County,0.3538461538461538
Bronx County,0.4115384615384615
Kings County,0.34511111111111115
Richmond County,0.3457281553398058
Queens County,0.3586538461538462

2025-02-12 03:12:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:12:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:12:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:12:30 - snowflake.connector.connection - INFO - closed
2025-02-12 03:12:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:13:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:13:02 - root - INFO - **Explanation:**

The error message you're encountering:

```
SQL compilation error: error line 1 at position 11
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` does not exist in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is likely due to the column name's case sensitivity and spelling.

**Correction Steps:**

1. **Column Name Case Sensitivity:**

   In the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, symptom column names are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

2. **Data Type Casting:**

   The column `"symptom_anosmia"` is stored as a `VARCHAR`. Since you are calculating the average value using `AVG`, you need to cast this column to a numeric type like `FLOAT`.

3. **Date Conversion:**

   The `"date"` column is of type `VARCHAR`. To perform date comparisons, you need to convert it to a `DATE` using the `TO_DATE` function.

**Corrected SQL Query:**

```sql
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2019"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Correction:**

  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name as defined in the table.
  - Snowflake SQL is case-sensitive when identifiers are enclosed in double quotes. Therefore, it's crucial to match the exact case of the column names.

- **Data Type Casting:**

  - Used `CAST("symptom_anosmia" AS FLOAT)` to convert the `VARCHAR` values to `FLOAT` for the `AVG` function.
  - Without casting, the `AVG` function cannot perform numerical calculations on `VARCHAR` data.

- **Date Conversion:**

  - Applied `TO_DATE("date", 'YYYY-MM-DD')` to convert the `VARCHAR` `"date"` column to a `DATE` type for accurate date filtering.
  - This ensures that the date comparison in the `WHERE` clause works correctly.

**Usage:**

- Running this corrected query will calculate the overall average weekly search frequency for the symptom 'Anosmia' across the specified counties for the year 2019.
- Replace the date range `'2019-01-01'` to `'2019-12-31'` with `'2020-01-01'` to `'2020-12-31'` to calculate the average for the year 2020.

**Example for 2020:**

```sql
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
```

**Final Note:**

Ensure that all column names and data types are correctly referenced in your queries. If you encounter similar errors in other queries, apply the same corrections:

- Verify the exact spelling and case of column names.
- Cast data types appropriately for calculations.
- Convert date strings to `DATE` types when performing date comparisons.

Feel free to let me know if you need any more help!
2025-02-12 03:13:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:13:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:13:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:13:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 03:13:03 - snowflake.connector.connection - INFO - closed
2025-02-12 03:13:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:14:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:14:36 - root - INFO - SQL:
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2019"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
LIMIT 100;
Results:
overall_avg_anosmia_2019
0.0625

2025-02-12 03:14:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:14:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:14:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:14:37 - snowflake.connector.connection - INFO - closed
2025-02-12 03:14:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:16:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:16:28 - root - INFO - **Explanation:**

The error message you received:

```
SQL compilation error: error line 1 at position 11
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` is not recognized in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is because, in the table, the symptom column names are in **lowercase letters**. Therefore, you need to replace `"symptom_Anosmia"` with `"symptom_anosmia"` in your query.

Additionally, since the `"symptom_anosmia"` column is of type `VARCHAR`, and you are calculating the average, you need to **cast it to `FLOAT`** for numerical operations. Also, the `"date"` column is of type `VARCHAR`, so you'll need to **convert it to `DATE`** using the `TO_DATE` function for date comparisons.

**Corrected SQL Query:**

```sql
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
```

---

**Please correct other SQLs if they have similar errors:**

1. **Query 1:**

```sql
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
```

2. **Query 2:**

```sql
SELECT "sub_region_2",
  AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2019",
  AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
GROUP BY "sub_region_2"
LIMIT 100;
```

3. **Query 3:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
LIMIT 100;
```

4. **Query 4:**

```sql
SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
LIMIT 100;
```

5. **Query 5:**

```sql
SELECT DISTINCT "date"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "symptom_anosmia" IS NOT NULL
  AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
LIMIT 100;
```

6. **Query 6:**

```sql
SELECT "sub_region_2", COUNT(*) AS "record_count"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
  AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
GROUP BY "sub_region_2"
LIMIT 100;
```

7. **Query 7:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
  AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND CAST("symptom_anosmia" AS FLOAT) > 0.5
LIMIT 100;
```

8. **Query 8:**

```sql
SELECT
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
LIMIT 100;
```

---

By making these corrections, you should be able to execute your queries without encountering the `"invalid identifier"` error. Remember to:

- Use the exact column names as they exist in your database (in this case, `"symptom_anosmia"`).
- Cast `VARCHAR` columns to `FLOAT` when performing numerical operations.
- Convert `VARCHAR` date columns to `DATE` using `TO_DATE` for date comparisons.

If you have any further questions or need additional assistance, feel free to ask!
2025-02-12 03:16:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:16:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:16:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:16:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 03:16:29 - snowflake.connector.connection - INFO - closed
2025-02-12 03:16:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:17:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:17:59 - root - INFO - SQL:
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
Results:
overall_avg_anosmia_2020
0.35851002865329507

2025-02-12 03:17:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:17:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:17:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:18:00 - snowflake.connector.connection - INFO - closed
2025-02-12 03:18:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:18:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:18:25 - root - INFO - **Explanation:**

The error message you're encountering:

```
SQL compilation error: error line 2 at position 69
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` does not exist in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is due to case sensitivity in Snowflake when using quoted identifiers. In the table, symptom columns are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

Additionally:

- The `"symptom_anosmia"` column is of type `VARCHAR`. When performing numerical operations like `AVG`, you need to **cast it to `FLOAT`**.
- The `"date"` column is also of type `VARCHAR`. To perform date comparisons, you should **convert it to `DATE`** using the `TO_DATE` function.

**Corrected SQL Query:**

```sql
SELECT "sub_region_2",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2019",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Correction:**
  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table.
  
- **Data Type Casting:**
  - Used `CAST("symptom_anosmia" AS FLOAT)` to convert the `VARCHAR` values to `FLOAT` for the `AVG` function.
  
- **Date Conversion:**
  - Applied `TO_DATE("date", 'YYYY-MM-DD')` to convert the `VARCHAR` `"date"` column to a `DATE` type for accurate date filtering.

Please use this corrected query in your analysis. If you encounter any further issues or have additional questions, feel free to ask!
2025-02-12 03:18:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:18:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:18:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:18:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 03:18:26 - snowflake.connector.connection - INFO - closed
2025-02-12 03:18:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:19:48 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:19:48 - root - INFO - SQL:
SELECT "sub_region_2",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2019",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
Results:
sub_region_2,avg_anosmia_2019,avg_anosmia_2020
New York County,0.058846153846153854,0.3538461538461538
Bronx County,0.04788461538461539,0.4115384615384615
Kings County,0.05849056603773584,0.34511111111111115
Richmond County,0.08865671641791044,0.34572815533980583
Queens County,0.051153846153846154,0.3586538461538462

2025-02-12 03:19:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:19:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:19:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:19:49 - snowflake.connector.connection - INFO - closed
2025-02-12 03:19:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:20:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:20:18 - root - INFO - **Explanation:**

The error message you're encountering:

```
SQL compilation error: error line 1 at position 31
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` does not exist in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is due to case sensitivity in Snowflake when using quoted identifiers. In your table, all symptom column names are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

Additionally, since the `"symptom_anosmia"` column is stored as `VARCHAR`, and you want to order the results numerically, you should **cast it to `FLOAT`** in the `ORDER BY` clause.

**Corrected SQL Query:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Correction:**
  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact lowercase column name in the table.
  - Snowflake is case-sensitive when using double-quoted identifiers, so the case must match exactly.

- **Data Type Casting:**
  - Used `CAST("symptom_anosmia" AS FLOAT)` in the `ORDER BY` clause to ensure numerical sorting.
  - Since `"symptom_anosmia"` is stored as `VARCHAR`, casting it to `FLOAT` allows correct numerical ordering.

**Additional Notes:**

- **Date Column Type:**
  - The `"date"` column in your table is of type `VARCHAR`.
  - If you need to filter by date ranges, convert it to `DATE` using `TO_DATE("date", 'YYYY-MM-DD')`.

**Example with Date Filtering:**

If you want to filter the data for specific dates, you can modify the `WHERE` clause:

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE
  "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
LIMIT 100;
```

**Reminder:**

- Always ensure that column names match exactly, including case sensitivity, when enclosed in double quotes.
- When performing numerical operations or comparisons on `VARCHAR` columns, cast them to appropriate numeric types like `FLOAT` or `INTEGER`.
- Convert `VARCHAR` date columns to `DATE` using `TO_DATE` for accurate date comparisons.

**Let me know if you need further assistance or have any other questions!**
2025-02-12 03:20:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:20:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:20:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:20:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:20:19 - snowflake.connector.connection - INFO - closed
2025-02-12 03:20:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:21:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:21:18 - root - INFO - SQL:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
LIMIT 100;
Results:
date,sub_region_2,symptom_anosmia
2018-05-28,Richmond County,
2018-08-06,Kings County,
2020-04-13,Kings County,
2018-02-19,Richmond County,
2018-08-27,Richmond County,
2022-11-21,Richmond County,
2017-12-11,Richmond County,
2019-12-16,Richmond County,
2019-03-18,Richmond County,
2020-08-24,Richmond County,
2021-10-18,Richmond County,
2018-04-23,Richmond County,
2019-10-07,Richmond County,
2019-11-04,Richmond County,
2019-06-17,Richmond County,
2018-01-15,Richmond County,
2018-04-02,Kings County,
2020-02-10,Kings County,
2019-08-12,Richmond County,
2017-12-25,Richmond County,
2019-12-09,Richmond County,
2017-10-16,Kings County,
2017-10-02,Richmond County,
2018-09-24,Richmond County,
2019-11-18,Richmond County,
2019-09-23,Kings County,
2018-04-23,Kings County,
2017-10-16,Richmond County,
2019-06-10,Richmond County,
2021-02-22,Richmond County,
2017-11-20,Richmond County,
2019-01-21,Richmond County,
2018-01-08,Bronx County,
2022-09-12,Richmond County,
2019-08-12,Richmond County,
2019-03-25,Kings County,
2020-01-13,Kings County,
2017-10-23,Richmond County,
2019-03-04,Kings County,
2019-07-15,Kings County,
2019-04-22,Richmond County,
2018-04-16,Richmond County,
2019-07-29,Richmond County,
2019-02-18,Kings County,
2022-04-11,Richmond County,
2018-04-09,Richmond County,
2018-01-29,Kings County,
2018-11-26,Richmond County,
2018-06-25,Richmond County,
2017-09-18,Kings County,
2017-09-11,Richmond County,
2018-07-30,Richmond County,
2019-12-16,Richmond County,
2019-11-25,Richmond County,
2019-10-07,Richmond County,
2018-08-20,Richmond County,
2018-08-27,Kings County,
2018-03-12,Richmond County,
2018-04-30,Kings County,
2018-02-26,Richmond County,
2019-06-03,Richmond County,
2017-12-18,Richmond County,
2019-02-18,Richmond County,
2018-07-02,Kings County,
2017-12-18,Richmond County,
2018-08-20,Richmond County,
2017-10-30,Richmond County,
2020-02-03,Kings County,
2022-07-04,Richmond County,
2018-04-02,Richmond County,
2018-06-18,Richmond County,
2017-10-23,Kings County,
2024-05-27,Richmond County,
2019-07-15,Richmond County,
2019-07-29,Richmond County,
2018-04-30,Richmond County,
2018-12-24,Kings County,
2020-09-07,Kings County,
2020-05-11,Kings County,
2019-12-23,Kings County,
2024-03-25,Richmond County,
2018-07-16,Richmond County,
2019-09-09,Richmond County,
2019-10-21,Kings County,
2017-09-11,Richmond County,
2019-03-25,Richmond County,
2018-10-29,Kings County,
2018-03-19,Kings County,
2018-02-05,Kings County,
2018-09-10,Kings County,
2019-11-25,Kings County,
2019-03-11,Kings County,
2020-02-03,Richmond County,
2024-01-08,Kings County,
2017-12-18,Kings County,
2020-03-16,Kings County,
2017-09-18,Richmond County,
2020-11-16,Richmond County,
2020-04-06,Richmond County,
2018-06-25,Richmond County,

2025-02-12 03:21:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:21:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:21:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:21:19 - snowflake.connector.connection - INFO - closed
2025-02-12 03:21:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:21:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:21:54 - root - INFO - **Explanation:**

The error you're encountering:

```
SQL compilation error: error line 1 at position 60
invalid identifier '"symptom_Anosmia"'
```

occurs because the column `"symptom_Anosmia"` does not exist in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. In this table, all symptom column names are in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead.

Additionally, since the `"date"` column is of type `VARCHAR`, you need to convert it to `DATE` when using the `EXTRACT` function and when performing date comparisons.

**Corrected SQL Query:**

```sql
SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Correction:**
  - Changed `"symptom_Anosmia"` to `"symptom_anosmia"` to match the exact column name in the table.
  - In Snowflake, identifiers enclosed in double quotes are case-sensitive, so it's crucial to match the case exactly as defined in the schema.

- **Date Conversion:**
  - Used `TO_DATE("date", 'YYYY-MM-DD')` to convert the `"date"` column from `VARCHAR` to `DATE`.
  - This ensures that the `EXTRACT` function can operate correctly and that date comparisons in the `WHERE` clause are accurate.

**Additional Notes:**

- **Data Type Casting (if needed):**
  - If you plan to perform numerical operations on the `"symptom_anosmia"` column (e.g., sorting numerically, filtering based on numeric conditions), you may need to cast it to a numeric type like `FLOAT`.
  - Example with casting:
    ```sql
    SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2",
           CAST("symptom_anosmia" AS FLOAT) AS "symptom_anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN (
      'Bronx County',
      'Queens County',
      'Kings County',
      'New York County',
      'Richmond County'
    )
      AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
    LIMIT 100;
    ```
- **Consistency in `WHERE` Clause:**
  - Ensure that any date comparisons use the converted `DATE` type with `TO_DATE("date", 'YYYY-MM-DD')`.

**Summary:**

- Replace `"symptom_Anosmia"` with `"symptom_anosmia"`.
- Convert the `"date"` column from `VARCHAR` to `DATE` using `TO_DATE` when using `EXTRACT` or performing date comparisons.

**Feel free to run the corrected query, and let me know if you need further assistance!**
2025-02-12 03:21:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:21:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:21:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:21:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:21:55 - snowflake.connector.connection - INFO - closed
2025-02-12 03:21:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:22:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:22:40 - root - INFO - SQL:
SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
LIMIT 100;
Results:
year,sub_region_2,symptom_anosmia
2020,Richmond County,
2020,Richmond County,0.93
2020,Richmond County,
2020,Richmond County,
2020,Richmond County,
2020,Richmond County,0.25
2020,Richmond County,0.29
2020,New York County,0.14
2020,Queens County,0.34
2020,Queens County,0.07
2020,Bronx County,0.26
2020,Bronx County,0.27
2020,Queens County,0.16
2020,Richmond County,0.17
2020,Richmond County,0.16
2020,Bronx County,1.1
2020,Bronx County,0.04
2020,Queens County,0.29
2020,Queens County,0.15
2020,Bronx County,0.2
2020,Queens County,0.43
2020,Richmond County,0.18
2020,Kings County,0.13
2020,Richmond County,0.05
2020,Richmond County,
2020,Richmond County,0.28
2020,Richmond County,0.19
2019,Richmond County,
2020,Richmond County,
2019,Kings County,
2019,Richmond County,
2019,Kings County,
2019,Richmond County,
2019,Richmond County,
2019,Richmond County,
2020,Richmond County,
2020,Richmond County,
2019,Richmond County,
2020,Kings County,0.39
2019,Richmond County,
2019,Bronx County,0.06
2019,Bronx County,0.05
2019,Richmond County,0.05
2019,Bronx County,0.04
2019,Richmond County,
2019,Kings County,0.05
2019,Queens County,0.05
2019,Kings County,0.05
2019,Bronx County,0.04
2019,Queens County,0.05
2019,Kings County,0.06
2019,Queens County,0.04
2019,Bronx County,0.05
2019,Bronx County,0.04
2019,Bronx County,0.05
2019,Queens County,0.06
2019,Queens County,0.06
2019,Richmond County,0.05
2019,Richmond County,0.04
2019,Bronx County,0.04
2019,Kings County,0.06
2019,Bronx County,0.04
2019,Kings County,0.07
2019,Queens County,0.06
2019,Bronx County,0.04
2019,Kings County,0.06
2019,Bronx County,0.03
2019,Kings County,0.05
2019,Queens County,0.05
2019,Queens County,0.06
2019,Queens County,0.04
2019,Kings County,0.06
2019,Kings County,0.06
2019,Bronx County,0.07
2019,Kings County,0.04
2019,Queens County,0.04
2019,Kings County,0.04
2019,Bronx County,0.03
2019,Richmond County,0.05
2020,Kings County,0.58
2020,Richmond County,
2020,Queens County,0.16
2020,New York County,0.25
2020,New York County,0.07
2020,Kings County,0.17
2020,New York County,0.12
2020,Queens County,0.06
2020,Richmond County,
2020,Richmond County,0.17
2019,Richmond County,
2020,Richmond County,
2019,Richmond County,
2020,Kings County,
2019,Kings County,
2019,Kings County,
2019,Kings County,
2019,Kings County,
2020,Kings County,
2019,New York County,0.07
2019,New York County,0.06

2025-02-12 03:22:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:22:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:22:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:22:41 - snowflake.connector.connection - INFO - closed
2025-02-12 03:22:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:23:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:23:41 - root - INFO - **Explanation:**

The error message:

```
SQL compilation error: error line 3 at position 10
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` is invalid. This occurs because, in the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, symptom columns are named in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

Here's the **corrected SQL query**:

```sql
SELECT DISTINCT "date"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "symptom_anosmia" IS NOT NULL
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
LIMIT 100;
```

---

**Please correct other SQLs if they have similar errors:**

1. **Original Query:**

   ```sql
   SELECT "sub_region_2", COUNT(*) AS "record_count"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
     AND "sub_region_2" IN (
       'Bronx County',
       'Queens County',
       'Kings County',
       'New York County',
       'Richmond County'
     )
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "sub_region_2", COUNT(*) AS "record_count"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
     AND "sub_region_2" IN (
       'Bronx County',
       'Queens County',
       'Kings County',
       'New York County',
       'Richmond County'
     )
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

   **Explanation:**

   - Converted the `"date"` column from `VARCHAR` to `DATE` using `TO_DATE("date", 'YYYY-MM-DD')` for accurate date filtering.
   - No issue with `"symptom_Anosmia"` in this query since it's not referenced.

2. **Original Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "date" BETWEEN '2020-01-01' AND '2020-12-31'
     AND "sub_region_2" IN (
       'Bronx County',
       'Queens County',
       'Kings County',
       'New York County',
       'Richmond County'
     )
     AND "symptom_Anosmia" > 0.5
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
     AND "sub_region_2" IN (
       'Bronx County',
       'Queens County',
       'Kings County',
       'New York County',
       'Richmond County'
     )
     AND CAST("symptom_anosmia" AS FLOAT) > 0.5
   LIMIT 100;
   ```

   **Explanation:**

   - Replaced `"symptom_Anosmia"` with `"symptom_anosmia"` to match the column name.
   - Converted `"date"` from `VARCHAR` to `DATE` using `TO_DATE`.
   - Cast `"symptom_anosmia"` to `FLOAT` for numerical comparison.

3. **Original Query:**

   ```sql
   SELECT
     MIN(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2019",
     MAX(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2019",
     MIN(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2020",
     MAX(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN (
     'Bronx County',
     'Queens County',
     'Kings County',
     'New York County',
     'Richmond County'
   )
   LIMIT 100;
   ```

   **Corrected Query:**

   ```sql
   SELECT
     MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
     MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
     MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
     MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN (
     'Bronx County',
     'Queens County',
     'Kings County',
     'New York County',
     'Richmond County'
   )
   LIMIT 100;
   ```

   **Explanation:**

   - Replaced `"symptom_Anosmia"` with `"symptom_anosmia"`.
   - Used `TO_DATE` to convert `"date"` to `DATE`.
   - Cast `"symptom_anosmia"` to `FLOAT` for numerical calculations.

---

**Summary:**

- **Column Names:**
  - Ensure all symptom column names are in **lowercase** to match the table schema.
  - Replace `"symptom_Anosmia"` with `"symptom_anosmia"`.

- **Date Conversion:**
  - Convert `"date"` from `VARCHAR` to `DATE` using `TO_DATE("date", 'YYYY-MM-DD')` for date comparisons and functions.

- **Data Type Casting:**
  - Cast `"symptom_anosmia"` to `FLOAT` when performing numerical operations or comparisons, as it is stored as `VARCHAR`.

Feel free to run these corrected queries for your analysis. If you have any further questions or need additional assistance, please let me know!
2025-02-12 03:23:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:23:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:23:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:23:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 03:23:42 - snowflake.connector.connection - INFO - closed
2025-02-12 03:23:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:24:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:24:19 - root - INFO - SQL:
SELECT DISTINCT "date"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "symptom_anosmia" IS NOT NULL
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
LIMIT 100;
Results:
date
2017-11-06
2023-08-28
2023-03-20
2018-06-25
2019-12-02
2020-10-12
2023-07-31
2023-10-30
2024-04-01
2021-04-12
2019-01-14
2020-03-23
2018-12-17
2022-02-28
2022-09-12
2024-02-19
2022-04-18
2020-06-15
2019-07-08
2024-01-08
2018-04-23
2019-04-29
2018-04-09
2023-01-16
2020-05-04
2019-11-11
2023-07-24
2020-04-20
2019-09-30
2020-12-28
2020-11-02
2018-10-01
2023-07-10
2024-02-26
2020-02-24
2022-01-10
2019-06-17
2019-10-28
2019-03-04
2023-05-22
2019-01-21
2022-02-14
2018-04-30
2023-02-27
2024-07-01
2024-04-15
2021-10-11
2019-08-26
2021-01-18
2018-10-29
2019-03-11
2022-08-29
2018-03-19
2018-09-10
2019-07-22
2021-10-18
2023-12-11
2018-11-12
2019-05-20
2021-07-05
2019-08-12
2020-04-27
2019-09-16
2017-10-23
2023-12-25
2024-07-08
2023-03-13
2018-07-09
2021-10-25
2021-01-04
2020-06-01
2022-06-27
2024-05-06
2019-06-03
2021-11-22
2017-10-30
2018-06-18
2022-09-05
2019-03-18
2019-05-06
2019-03-25
2022-09-26
2019-04-01
2018-06-04
2024-04-29
2021-08-23
2024-05-20
2018-09-24
2021-04-05
2018-02-12
2021-08-02
2021-03-15
2017-12-11
2020-12-07
2019-10-14
2023-06-26
2023-09-04
2023-01-09
2024-08-19
2024-05-27

2025-02-12 03:24:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:24:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:24:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:24:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-02-12 03:24:21 - snowflake.connector.connection - INFO - closed
2025-02-12 03:24:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:24:21 - root - INFO - SQL:
SELECT "sub_region_2", COUNT(*) AS "record_count"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    GROUP BY "sub_region_2"
    LIMIT 100;
Results:
sub_region_2,record_count
New York County,104
Bronx County,104
Kings County,208
Richmond County,416
Queens County,104

2025-02-12 03:24:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:24:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:24:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:24:22 - snowflake.connector.connection - INFO - closed
2025-02-12 03:24:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:25:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:25:26 - root - INFO - **Explanation:**

The error message indicates that the column `"symptom_Anosmia"` is invalid. This occurs because, in the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, symptom column names are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.

Additionally:

- The `"date"` column is of type `VARCHAR`, so when performing date comparisons, you need to convert it to `DATE` using the `TO_DATE` function.
- The `"symptom_anosmia"` column is stored as `VARCHAR`. When performing numerical comparisons (such as `> 0.5`), you need to cast it to a numeric type, such as `FLOAT`.

**Corrected SQL Query:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
  AND CAST("symptom_anosmia" AS FLOAT) > 0.5
LIMIT 100;
```

---

**Please correct other SQLs if they have similar errors:**

1. **Original Query:**

```sql
SELECT "sub_region_2", COUNT(*) AS "record_count"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
GROUP BY "sub_region_2"
LIMIT 100;
```

**Corrected Query:**

```sql
SELECT "sub_region_2", COUNT(*) AS "record_count"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
GROUP BY "sub_region_2"
LIMIT 100;
```

---

2. **Original Query:**

```sql
SELECT "date", "sub_region_2", "symptom_Anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "date" BETWEEN '2020-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
  AND "symptom_Anosmia" > 0.5
LIMIT 100;
```

**Corrected Query:**

```sql
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
  AND CAST("symptom_anosmia" AS FLOAT) > 0.5
LIMIT 100;
```

---

3. **Original Query:**

```sql
SELECT
  MIN(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2019",
  MAX(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2019",
  MIN(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2020",
  MAX(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
LIMIT 100;
```

**Corrected Query:**

```sql
SELECT
  MIN(
    CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
    THEN CAST("symptom_anosmia" AS FLOAT) END
  ) AS "min_anosmia_2019",
  MAX(
    CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
    THEN CAST("symptom_anosmia" AS FLOAT) END
  ) AS "max_anosmia_2019",
  MIN(
    CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
    THEN CAST("symptom_anosmia" AS FLOAT) END
  ) AS "min_anosmia_2020",
  MAX(
    CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
    THEN CAST("symptom_anosmia" AS FLOAT) END
  ) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
LIMIT 100;
```

---

These corrections address the issues by:

- Replacing `"symptom_Anosmia"` with `"symptom_anosmia"` to match the exact column name (case-sensitive).
- Converting `"date"` from `VARCHAR` to `DATE` using `TO_DATE("date", 'YYYY-MM-DD')` for accurate date comparisons.
- Casting `"symptom_anosmia"` to `FLOAT` when performing numerical operations or comparisons.

Feel free to run these corrected queries. Let me know if you need any further assistance!
2025-02-12 03:25:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:25:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:25:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:25:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 46
2025-02-12 03:25:27 - snowflake.connector.connection - INFO - closed
2025-02-12 03:25:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:25:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:25:59 - root - INFO - SQL:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
  AND CAST("symptom_anosmia" AS FLOAT) > 0.5
LIMIT 100;
Results:
date,sub_region_2,symptom_anosmia
2020-12-14,Kings County,0.73
2020-12-28,Richmond County,0.93
2020-04-13,Bronx County,1.1
2020-12-14,Richmond County,0.73
2020-07-27,Richmond County,0.6
2020-12-07,Kings County,0.58
2020-12-07,Richmond County,0.69
2020-04-13,New York County,0.72
2020-03-23,Kings County,4.44
2020-03-30,Queens County,2.75
2020-03-23,New York County,4.35
2020-12-28,Kings County,0.89
2020-03-16,New York County,1.79
2020-03-30,Kings County,2.62
2020-03-23,Bronx County,4.65
2020-04-20,Bronx County,0.65
2020-04-13,Richmond County,0.59
2020-03-23,Richmond County,2.73
2020-07-06,Richmond County,0.74
2020-12-14,Richmond County,0.65
2020-04-06,New York County,1.16
2020-03-16,Richmond County,0.79
2020-04-06,Richmond County,1.07
2020-12-21,Richmond County,0.86
2020-04-13,Queens County,0.8
2020-03-23,Queens County,4.2
2020-03-30,Bronx County,3.65
2020-03-16,Bronx County,1.15
2020-08-03,Richmond County,0.57
2020-12-21,Kings County,0.87
2020-03-16,Kings County,1.78
2020-04-06,Kings County,1.46
2020-03-30,Richmond County,1.81
2020-04-06,Queens County,1.58
2020-12-28,Richmond County,1.19
2020-07-13,Richmond County,0.92
2020-11-23,Richmond County,0.53
2020-03-30,New York County,2.05
2020-04-06,Bronx County,2.22
2020-03-16,Queens County,1.31
2020-07-20,Richmond County,0.72
2020-12-28,Richmond County,0.56
2020-04-13,Kings County,0.84
2020-12-07,Richmond County,0.87
2020-12-21,Richmond County,0.77
2020-03-23,Richmond County,0.6

2025-02-12 03:25:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:25:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:25:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:26:00 - snowflake.connector.connection - INFO - closed
2025-02-12 03:26:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:27:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:27:02 - root - INFO - **Explanation:**

The error message you're encountering:

```
SQL compilation error: error line 2 at position 70
invalid identifier '"symptom_Anosmia"'
```

indicates that the column `"symptom_Anosmia"` is not recognized in the table `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY`. This is likely because:

1. **Column Name Case Sensitivity:**
   - In the `SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY` table, symptom columns are defined in **lowercase letters**. Therefore, you should use `"symptom_anosmia"` instead of `"symptom_Anosmia"`.
   - Snowflake is case-sensitive when identifiers are enclosed in double quotes. It's essential to match the exact case of the column names.

2. **Data Type Considerations:**
   - The `"symptom_anosmia"` column is of type `VARCHAR`.
   - Aggregate functions like `MIN` and `MAX` require numeric data types when operating on numeric values.
   - You need to **cast** `"symptom_anosmia"` to a numeric type, such as `FLOAT`, to perform these operations.

3. **Date Column Data Type:**
   - The `"date"` column is of type `VARCHAR`.
   - When performing date comparisons, you should **convert** it to `DATE` using the `TO_DATE` function.

**Corrected SQL Query:**

```sql
SELECT
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
LIMIT 100;
```

**Explanation of Corrections:**

- **Column Name Corrections:**
  - Replaced `"symptom_Anosmia"` with `"symptom_anosmia"` to match the exact column name in the table.

- **Data Type Casting:**
  - Used `CAST("symptom_anosmia" AS FLOAT)` to convert the `VARCHAR` values to `FLOAT` for numerical operations.

- **Date Conversion:**
  - Applied `TO_DATE("date", 'YYYY-MM-DD')` to convert the `VARCHAR` `"date"` column to a `DATE` type for accurate date comparisons.

**Summary:**

- **Purpose of the Query:**
  - The query calculates the minimum and maximum weekly search frequencies for the symptom 'Anosmia' across the specified New York City counties for the years 2019 and 2020.

- **Why Casting is Necessary:**
  - Since `"symptom_anosmia"` is stored as `VARCHAR`, casting it to `FLOAT` is necessary for numerical aggregation functions like `MIN` and `MAX`.

- **Ensuring Accurate Date Filtering:**
  - Converting the `"date"` column to `DATE` ensures that the date comparisons in the `BETWEEN` clauses function correctly.

**Note:**

- **Limit Clause:**
  - The `LIMIT 100;` clause is optional in this context. If you expect only one row as the result (since you're aggregating over the entire dataset for the specified conditions), you can remove the `LIMIT` clause.

**Example Without LIMIT:**

```sql
SELECT
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
);
```

**Executing the Corrected Query:**

- Running this query should provide you with four values:
  - **`min_anosmia_2019`:** The minimum search frequency for 'Anosmia' in 2019.
  - **`max_anosmia_2019`:** The maximum search frequency for 'Anosmia' in 2019.
  - **`min_anosmia_2020`:** The minimum search frequency for 'Anosmia' in 2020.
  - **`max_anosmia_2020`:** The maximum search frequency for 'Anosmia' in 2020.

**Additional Considerations:**

- **Handling Null Values:**
  - If there are null or non-numeric values in `"symptom_anosmia"`, casting to `FLOAT` may result in errors. Ensure that the data is clean or handle exceptions as needed.

- **Data Validation:**
  - Before running aggregate functions, you may want to filter out records where `"symptom_anosmia"` cannot be converted to a numeric value.

**Final Thoughts:**

- Always ensure that column names and data types match exactly as defined in your database schema.
- Use appropriate casting and data type conversions to avoid runtime errors and ensure accurate results.
- If you encounter further issues, feel free to ask for additional assistance!
2025-02-12 03:27:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:27:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:27:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:27:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 03:27:04 - snowflake.connector.connection - INFO - closed
2025-02-12 03:27:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:27:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:27:50 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:27:50 - root - INFO - SQL:
SELECT
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
LIMIT 100;
Results:
min_anosmia_2019,max_anosmia_2019,min_anosmia_2020,max_anosmia_2020
0.02,0.66,0.04,4.65

2025-02-12 03:27:50 - root - INFO - itercount: 0
2025-02-12 03:27:50 - root - INFO - Database Name: COVID19_SYMPTOM_SEARCH
Schema Name: COVID19_SYMPTOM_SEARCH
,0
table_name,SYMPTOM_SEARCH_SUB_REGION_2_DAILY
description,
DDL,"create or replace TABLE SYMPTOM_SEARCH_SUB_REGION_2_DAILY (
	""country_region_code"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""sub_region_1"" VARCHAR(16777216),
	""sub_region_1_code"" VARCHAR(16777216),
	""sub_region_2"" VARCHAR(16777216),
	""sub_region_2_code"" VARCHAR(16777216),
	""place_id"" VARCHAR(16777216),
	""date"" DATE,
	""symptom_Abdominal_obesity"" FLOAT,
	""symptom_Abdominal_pain"" FLOAT,
	""symptom_Acne"" FLOAT,
	""symptom_Actinic_keratosis"" FLOAT,
	""symptom_Acute_bronchitis"" FLOAT,
	""symptom_Adrenal_crisis"" FLOAT,
	""symptom_Ageusia"" FLOAT,
	""symptom_Alcoholism"" FLOAT,
	""symptom_Allergic_conjunctivitis"" FLOAT,
	""symptom_Allergy"" FLOAT,
	""symptom_Amblyopia"" FLOAT,
	""symptom_Amenorrhea"" FLOAT,
	""symptom_Amnesia"" FLOAT,
	""symptom_Anal_fissure"" FLOAT,
	""symptom_Anaphylaxis"" FLOAT,
	""symptom_Anemia"" FLOAT,
	""symptom_Angina_pectoris"" FLOAT,
	""symptom_Angioedema"" FLOAT,
	""symptom_Angular_cheilitis"" FLOAT,
	""symptom_Anosmia"" FLOAT,
	""symptom_Anxiety"" FLOAT,
	""symptom_Aphasia"" FLOAT,
	""symptom_Aphonia"" FLOAT,
	""symptom_Apnea"" FLOAT,
	""symptom_Arthralgia"" FLOAT,
	""symptom_Arthritis"" FLOAT,
	""symptom_Ascites"" FLOAT,
	""symptom_Asperger_syndrome"" FLOAT,
	""symptom_Asphyxia"" FLOAT,
	""symptom_Asthma"" FLOAT,
	""symptom_Astigmatism"" FLOAT,
	""symptom_Ataxia"" FLOAT,
	""symptom_Atheroma"" FLOAT,
	""symptom_Attention_deficit_hyperactivity_disorder"" FLOAT,
	""symptom_Auditory_hallucination"" FLOAT,
	""symptom_Autoimmune_disease"" FLOAT,
	""symptom_Avoidant_personality_disorder"" FLOAT,
	""symptom_Back_pain"" FLOAT,
	""symptom_Bacterial_vaginosis"" FLOAT,
	""symptom_Balance_disorder"" FLOAT,
	""symptom_Beaus_lines"" FLOAT,
	""symptom_Bells_palsy"" FLOAT,
	""symptom_Biliary_colic"" FLOAT,
	""symptom_Binge_eating"" FLOAT,
	""symptom_Bleeding"" FLOAT,
	""symptom_Bleeding_on_probing"" FLOAT,
	""symptom_Blepharospasm"" FLOAT,
	""symptom_Bloating"" FLOAT,
	""symptom_Blood_in_stool"" FLOAT,
	""symptom_Blurred_vision"" FLOAT,
	""symptom_Blushing"" FLOAT,
	""symptom_Boil"" FLOAT,
	""symptom_Bone_fracture"" FLOAT,
	""symptom_Bone_tumor"" FLOAT,
	""symptom_Bowel_obstruction"" FLOAT,
	""symptom_Bradycardia"" FLOAT,
	""symptom_Braxton_Hicks_contractions"" FLOAT,
	""symptom_Breakthrough_bleeding"" FLOAT,
	""symptom_Breast_pain"" FLOAT,
	""symptom_Bronchitis"" FLOAT,
	""symptom_Bruise"" FLOAT,
	""symptom_Bruxism"" FLOAT,
	""symptom_Bunion"" FLOAT,
	""symptom_Burn"" FLOAT,
	""symptom_Burning_Chest_Pain"" FLOAT,
	""symptom_Burning_mouth_syndrome"" FLOAT,
	""symptom_Candidiasis"" FLOAT,
	""symptom_Canker_sore"" FLOAT,
	""symptom_Cardiac_arrest"" FLOAT,
	""symptom_Carpal_tunnel_syndrome"" FLOAT,
	""symptom_Cataplexy"" FLOAT,
	""symptom_Cataract"" FLOAT,
	""symptom_Chancre"" FLOAT,
	""symptom_Cheilitis"" FLOAT,
	""symptom_Chest_pain"" FLOAT,
	""symptom_Chills"" FLOAT,
	""symptom_Chorea"" FLOAT,
	""symptom_Chronic_pain"" FLOAT,
	""symptom_Cirrhosis"" FLOAT,
	""symptom_Cleft_lip_and_cleft_palate"" FLOAT,
	""symptom_Clouding_of_consciousness"" FLOAT,
	""symptom_Cluster_headache"" FLOAT,
	""symptom_Colitis"" FLOAT,
	""symptom_Coma"" FLOAT,
	""symptom_Common_cold"" FLOAT,
	""symptom_Compulsive_behavior"" FLOAT,
	""symptom_Compulsive_hoarding"" FLOAT,
	""symptom_Confusion"" FLOAT,
	""symptom_Congenital_heart_defect"" FLOAT,
	""symptom_Conjunctivitis"" FLOAT,
	""symptom_Constipation"" FLOAT,
	""symptom_Convulsion"" FLOAT,
	""symptom_Cough"" FLOAT,
	""symptom_Crackles"" FLOAT,
	""symptom_Cramp"" FLOAT,
	""symptom_Crepitus"" FLOAT,
	""symptom_Croup"" FLOAT,
	""symptom_Cyanosis"" FLOAT,
	""symptom_Dandruff"" FLOAT,
	""symptom_Delayed_onset_muscle_soreness"" FLOAT,
	""symptom_Dementia"" FLOAT,
	""symptom_Dentin_hypersensitivity"" FLOAT,
	""symptom_Depersonalization"" FLOAT,
	""symptom_Depression"" FLOAT,
	""symptom_Dermatitis"" FLOAT,
	""symptom_Desquamation"" FLOAT,
	""symptom_Developmental_disability"" FLOAT,
	""symptom_Diabetes"" FLOAT,
	""symptom_Diabetic_ketoacidosis"" FLOAT,
	""symptom_Diarrhea"" FLOAT,
	""symptom_Dizziness"" FLOAT,
	""symptom_Dry_eye_syndrome"" FLOAT,
	""symptom_Dysautonomia"" FLOAT,
	""symptom_Dysgeusia"" FLOAT,
	""symptom_Dysmenorrhea"" FLOAT,
	""symptom_Dyspareunia"" FLOAT,
	""symptom_Dysphagia"" FLOAT,
	""symptom_Dysphoria"" FLOAT,
	""symptom_Dystonia"" FLOAT,
	""symptom_Dysuria"" FLOAT,
	""symptom_Ear_pain"" FLOAT,
	""symptom_Eczema"" FLOAT,
	""symptom_Edema"" FLOAT,
	""symptom_Encephalitis"" FLOAT,
	""symptom_Encephalopathy"" FLOAT,
	""symptom_Epidermoid_cyst"" FLOAT,
	""symptom_Epilepsy"" FLOAT,
	""symptom_Epiphora"" FLOAT,
	""symptom_Erectile_dysfunction"" FLOAT,
	""symptom_Erythema"" FLOAT,
	""symptom_Erythema_chronicum_migrans"" FLOAT,
	""symptom_Esophagitis"" FLOAT,
	""symptom_Excessive_daytime_sleepiness"" FLOAT,
	""symptom_Eye_pain"" FLOAT,
	""symptom_Eye_strain"" FLOAT,
	""symptom_Facial_nerve_paralysis"" FLOAT,
	""symptom_Facial_swelling"" FLOAT,
	""symptom_Fasciculation"" FLOAT,
	""symptom_Fatigue"" FLOAT,
	""symptom_Fatty_liver_disease"" FLOAT,
	""symptom_Fecal_incontinence"" FLOAT,
	""symptom_Fever"" FLOAT,
	""symptom_Fibrillation"" FLOAT,
	""symptom_Fibrocystic_breast_changes"" FLOAT,
	""symptom_Fibromyalgia"" FLOAT,
	""symptom_Flatulence"" FLOAT,
	""symptom_Floater"" FLOAT,
	""symptom_Focal_seizure"" FLOAT,
	""symptom_Folate_deficiency"" FLOAT,
	""symptom_Food_craving"" FLOAT,
	""symptom_Food_intolerance"" FLOAT,
	""symptom_Frequent_urination"" FLOAT,
	""symptom_Gastroesophageal_reflux_disease"" FLOAT,
	""symptom_Gastroparesis"" FLOAT,
	""symptom_Generalized_anxiety_disorder"" FLOAT,
	""symptom_Generalized_tonic_clonic_seizure"" FLOAT,
	""symptom_Genital_wart"" FLOAT,
	""symptom_Gingival_recession"" FLOAT,
	""symptom_Gingivitis"" FLOAT,
	""symptom_Globus_pharyngis"" FLOAT,
	""symptom_Goitre"" FLOAT,
	""symptom_Gout"" FLOAT,
	""symptom_Grandiosity"" FLOAT,
	""symptom_Granuloma"" FLOAT,
	""symptom_Guilt"" FLOAT,
	""symptom_Hair_loss"" FLOAT,
	""symptom_Halitosis"" FLOAT,
	""symptom_Hay_fever"" FLOAT,
	""symptom_Headache"" FLOAT,
	""symptom_Heart_arrhythmia"" FLOAT,
	""symptom_Heart_murmur"" FLOAT,
	""symptom_Heartburn"" FLOAT,
	""symptom_Hematochezia"" FLOAT,
	""symptom_Hematoma"" FLOAT,
	""symptom_Hematuria"" FLOAT,
	""symptom_Hemolysis"" FLOAT,
	""symptom_Hemoptysis"" FLOAT,
	""symptom_Hemorrhoids"" FLOAT,
	""symptom_Hepatic_encephalopathy"" FLOAT,
	""symptom_Hepatitis"" FLOAT,
	""symptom_Hepatotoxicity"" FLOAT,
	""symptom_Hiccup"" FLOAT,
	""symptom_Hip_pain"" FLOAT,
	""symptom_Hives"" FLOAT,
	""symptom_Hot_flash"" FLOAT,
	""symptom_Hydrocephalus"" FLOAT,
	""symptom_Hypercalcaemia"" FLOAT,
	""symptom_Hypercapnia"" FLOAT,
	""symptom_Hypercholesterolemia"" FLOAT,
	""symptom_Hyperemesis_gravidarum"" FLOAT,
	""symptom_Hyperglycemia"" FLOAT,
	""symptom_Hyperkalemia"" FLOAT,
	""symptom_Hyperlipidemia"" FLOAT,
	""symptom_Hypermobility"" FLOAT,
	""symptom_Hyperpigmentation"" FLOAT,
	""symptom_Hypersomnia"" FLOAT,
	""symptom_Hypertension"" FLOAT,
	""symptom_Hyperthermia"" FLOAT,
	""symptom_Hyperthyroidism"" FLOAT,
	""symptom_Hypertriglyceridemia"" FLOAT,
	""symptom_Hypertrophy"" FLOAT,
	""symptom_Hyperventilation"" FLOAT,
	""symptom_Hypocalcaemia"" FLOAT,
	""symptom_Hypochondriasis"" FLOAT,
	""symptom_Hypoglycemia"" FLOAT,
	""symptom_Hypogonadism"" FLOAT,
	""symptom_Hypokalemia"" FLOAT,
	""symptom_Hypomania"" FLOAT,
	""symptom_Hyponatremia"" FLOAT,
	""symptom_Hypotension"" FLOAT,
	""symptom_Hypothyroidism"" FLOAT,
	""symptom_Hypoxemia"" FLOAT,
	""symptom_Hypoxia"" FLOAT,
	""symptom_Impetigo"" FLOAT,
	""symptom_Implantation_bleeding"" FLOAT,
	""symptom_Impulsivity"" FLOAT,
	""symptom_Indigestion"" FLOAT,
	""symptom_Infection"" FLOAT,
	""symptom_Inflammation"" FLOAT,
	""symptom_Inflammatory_bowel_disease"" FLOAT,
	""symptom_Ingrown_hair"" FLOAT,
	""symptom_Insomnia"" FLOAT,
	""symptom_Insulin_resistance"" FLOAT,
	""symptom_Intermenstrual_bleeding"" FLOAT,
	""symptom_Intracranial_pressure"" FLOAT,
	""symptom_Iron_deficiency"" FLOAT,
	""symptom_Irregular_menstruation"" FLOAT,
	""symptom_Itch"" FLOAT,
	""symptom_Jaundice"" FLOAT,
	""symptom_Kidney_failure"" FLOAT,
	""symptom_Kidney_stone"" FLOAT,
	""symptom_Knee_Pain"" FLOAT,
	""symptom_Kyphosis"" FLOAT,
	""symptom_Lactose_intolerance"" FLOAT,
	""symptom_Laryngitis"" FLOAT,
	""symptom_Leg_cramps"" FLOAT,
	""symptom_Lesion"" FLOAT,
	""symptom_Leukorrhea"" FLOAT,
	""symptom_Lightheadedness"" FLOAT,
	""symptom_Low_back_pain"" FLOAT,
	""symptom_Low_grade_fever"" FLOAT,
	""symptom_Lymphedema"" FLOAT,
	""symptom_Major_depressive_disorder"" FLOAT,
	""symptom_Malabsorption"" FLOAT,
	""symptom_Male_infertility"" FLOAT,
	""symptom_Manic_Disorder"" FLOAT,
	""symptom_Melasma"" FLOAT,
	""symptom_Melena"" FLOAT,
	""symptom_Meningitis"" FLOAT,
	""symptom_Menorrhagia"" FLOAT,
	""symptom_Middle_back_pain"" FLOAT,
	""symptom_Migraine"" FLOAT,
	""symptom_Milium"" FLOAT,
	""symptom_Mitral_insufficiency"" FLOAT,
	""symptom_Mood_disorder"" FLOAT,
	""symptom_Mood_swing"" FLOAT,
	""symptom_Morning_sickness"" FLOAT,
	""symptom_Motion_sickness"" FLOAT,
	""symptom_Mouth_ulcer"" FLOAT,
	""symptom_Muscle_atrophy"" FLOAT,
	""symptom_Muscle_weakness"" FLOAT,
	""symptom_Myalgia"" FLOAT,
	""symptom_Mydriasis"" FLOAT,
	""symptom_Myocardial_infarction"" FLOAT,
	""symptom_Myoclonus"" FLOAT,
	""symptom_Nasal_congestion"" FLOAT,
	""symptom_Nasal_polyp"" FLOAT,
	""symptom_Nausea"" FLOAT,
	""symptom_Neck_mass"" FLOAT,
	""symptom_Neck_pain"" FLOAT,
	""symptom_Neonatal_jaundice"" FLOAT,
	""symptom_Nerve_injury"" FLOAT,
	""symptom_Neuralgia"" FLOAT,
	""symptom_Neutropenia"" FLOAT,
	""symptom_Night_sweats"" FLOAT,
	""symptom_Night_terror"" FLOAT,
	""symptom_Nocturnal_enuresis"" FLOAT,
	""symptom_Nodule"" FLOAT,
	""symptom_Nosebleed"" FLOAT,
	""symptom_Nystagmus"" FLOAT,
	""symptom_Obesity"" FLOAT,
	""symptom_Onychorrhexis"" FLOAT,
	""symptom_Oral_candidiasis"" FLOAT,
	""symptom_Orthostatic_hypotension"" FLOAT,
	""symptom_Osteopenia"" FLOAT,
	""symptom_Osteophyte"" FLOAT,
	""symptom_Osteoporosis"" FLOAT,
	""symptom_Otitis"" FLOAT,
	""symptom_Otitis_externa"" FLOAT,
	""symptom_Otitis_media"" FLOAT,
	""symptom_Pain"" FLOAT,
	""symptom_Palpitations"" FLOAT,
	""symptom_Panic_attack"" FLOAT,
	""symptom_Papule"" FLOAT,
	""symptom_Paranoia"" FLOAT,
	""symptom_Paresthesia"" FLOAT,
	""symptom_Pelvic_inflammatory_disease"" FLOAT,
	""symptom_Pericarditis"" FLOAT,
	""symptom_Periodontal_disease"" FLOAT,
	""symptom_Periorbital_puffiness"" FLOAT,
	""symptom_Peripheral_neuropathy"" FLOAT,
	""symptom_Perspiration"" FLOAT,
	""symptom_Petechia"" FLOAT,
	""symptom_Phlegm"" FLOAT,
	""symptom_Photodermatitis"" FLOAT,
	""symptom_Photophobia"" FLOAT,
	""symptom_Photopsia"" FLOAT,
	""symptom_Pleural_effusion"" FLOAT,
	""symptom_Pleurisy"" FLOAT,
	""symptom_Pneumonia"" FLOAT,
	""symptom_Podalgia"" FLOAT,
	""symptom_Polycythemia"" FLOAT,
	""symptom_Polydipsia"" FLOAT,
	""symptom_Polyneuropathy"" FLOAT,
	""symptom_Polyuria"" FLOAT,
	""symptom_Poor_posture"" FLOAT,
	""symptom_Post_nasal_drip"" FLOAT,
	""symptom_Postural_orthostatic_tachycardia_syndrome"" FLOAT,
	""symptom_Prediabetes"" FLOAT,
	""symptom_Proteinuria"" FLOAT,
	""symptom_Pruritus_ani"" FLOAT,
	""symptom_Psychosis"" FLOAT,
	""symptom_Ptosis"" FLOAT,
	""symptom_Pulmonary_edema"" FLOAT,
	""symptom_Pulmonary_hypertension"" FLOAT,
	""symptom_Purpura"" FLOAT,
	""symptom_Pus"" FLOAT,
	""symptom_Pyelonephritis"" FLOAT,
	""symptom_Radiculopathy"" FLOAT,
	""symptom_Rectal_pain"" FLOAT,
	""symptom_Rectal_prolapse"" FLOAT,
	""symptom_Red_eye"" FLOAT,
	""symptom_Renal_colic"" FLOAT,
	""symptom_Restless_legs_syndrome"" FLOAT,
	""symptom_Rheum"" FLOAT,
	""symptom_Rhinitis"" FLOAT,
	""symptom_Rhinorrhea"" FLOAT,
	""symptom_Rosacea"" FLOAT,
	""symptom_Round_ligament_pain"" FLOAT,
	""symptom_Rumination"" FLOAT,
	""symptom_Scar"" FLOAT,
	""symptom_Sciatica"" FLOAT,
	""symptom_Scoliosis"" FLOAT,
	""symptom_Seborrheic_dermatitis"" FLOAT,
	""symptom_Self_harm"" FLOAT,
	""symptom_Sensitivity_to_sound"" FLOAT,
	""symptom_Sexual_dysfunction"" FLOAT,
	""symptom_Shallow_breathing"" FLOAT,
	""symptom_Sharp_pain"" FLOAT,
	""symptom_Shivering"" FLOAT,
	""symptom_Shortness_of_breath"" FLOAT,
	""symptom_Shyness"" FLOAT,
	""symptom_Sinusitis"" FLOAT,
	""symptom_Skin_condition"" FLOAT,
	""symptom_Skin_rash"" FLOAT,
	""symptom_Skin_tag"" FLOAT,
	""symptom_Skin_ulcer"" FLOAT,
	""symptom_Sleep_apnea"" FLOAT,
	""symptom_Sleep_deprivation"" FLOAT,
	""symptom_Sleep_disorder"" FLOAT,
	""symptom_Snoring"" FLOAT,
	""symptom_Sore_throat"" FLOAT,
	""symptom_Spasticity"" FLOAT,
	""symptom_Splenomegaly"" FLOAT,
	""symptom_Sputum"" FLOAT,
	""symptom_Stomach_rumble"" FLOAT,
	""symptom_Strabismus"" FLOAT,
	""symptom_Stretch_marks"" FLOAT,
	""symptom_Stridor"" FLOAT,
	""symptom_Stroke"" FLOAT,
	""symptom_Stuttering"" FLOAT,
	""symptom_Subdural_hematoma"" FLOAT,
	""symptom_Suicidal_ideation"" FLOAT,
	""symptom_Swelling"" FLOAT,
	""symptom_Swollen_feet"" FLOAT,
	""symptom_Swollen_lymph_nodes"" FLOAT,
	""symptom_Syncope"" FLOAT,
	""symptom_Tachycardia"" FLOAT,
	""symptom_Tachypnea"" FLOAT,
	""symptom_Telangiectasia"" FLOAT,
	""symptom_Tenderness"" FLOAT,
	""symptom_Testicular_pain"" FLOAT,
	""symptom_Throat_irritation"" FLOAT,
	""symptom_Thrombocytopenia"" FLOAT,
	""symptom_Thyroid_nodule"" FLOAT,
	""symptom_Tic"" FLOAT,
	""symptom_Tinnitus"" FLOAT,
	""symptom_Tonsillitis"" FLOAT,
	""symptom_Toothache"" FLOAT,
	""symptom_Tremor"" FLOAT,
	""symptom_Trichoptilosis"" FLOAT,
	""symptom_Tumor"" FLOAT,
	""symptom_Type_2_diabetes"" FLOAT,
	""symptom_Unconsciousness"" FLOAT,
	""symptom_Underweight"" FLOAT,
	""symptom_Upper_respiratory_tract_infection"" FLOAT,
	""symptom_Urethritis"" FLOAT,
	""symptom_Urinary_incontinence"" FLOAT,
	""symptom_Urinary_tract_infection"" FLOAT,
	""symptom_Urinary_urgency"" FLOAT,
	""symptom_Uterine_contraction"" FLOAT,
	""symptom_Vaginal_bleeding"" FLOAT,
	""symptom_Vaginal_discharge"" FLOAT,
	""symptom_Vaginitis"" FLOAT,
	""symptom_Varicose_veins"" FLOAT,
	""symptom_Vasculitis"" FLOAT,
	""symptom_Ventricular_fibrillation"" FLOAT,
	""symptom_Ventricular_tachycardia"" FLOAT,
	""symptom_Vertigo"" FLOAT,
	""symptom_Viral_pneumonia"" FLOAT,
	""symptom_Visual_acuity"" FLOAT,
	""symptom_Vomiting"" FLOAT,
	""symptom_Wart"" FLOAT,
	""symptom_Water_retention"" FLOAT,
	""symptom_Weakness"" FLOAT,
	""symptom_Weight_gain"" FLOAT,
	""symptom_Wheeze"" FLOAT,
	""symptom_Xeroderma"" FLOAT,
	""symptom_Xerostomia"" FLOAT,
	""symptom_Yawn"" FLOAT,
	""symptom_hyperhidrosis"" FLOAT,
	""symptom_pancreatitis"" FLOAT
);"

Some other tables have the similar structure: ['SYMPTOM_SEARCH_SUB_REGION_2_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_1_DAILY']
Database Name: COVID19_SYMPTOM_SEARCH
Schema Name: COVID19_SYMPTOM_SEARCH
,1
table_name,SYMPTOM_SEARCH_COUNTRY_DAILY
description,
DDL,"create or replace TABLE SYMPTOM_SEARCH_COUNTRY_DAILY (
	""country_region_code"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""sub_region_1"" VARCHAR(16777216),
	""sub_region_1_code"" VARCHAR(16777216),
	""sub_region_2"" VARCHAR(16777216),
	""sub_region_2_code"" VARCHAR(16777216),
	""place_id"" VARCHAR(16777216),
	""date"" VARCHAR(16777216),
	""symptom_abdominal_obesity"" VARCHAR(16777216),
	""symptom_abdominal_pain"" VARCHAR(16777216),
	""symptom_acne"" VARCHAR(16777216),
	""symptom_actinic_keratosis"" VARCHAR(16777216),
	""symptom_acute_bronchitis"" VARCHAR(16777216),
	""symptom_adrenal_crisis"" VARCHAR(16777216),
	""symptom_ageusia"" VARCHAR(16777216),
	""symptom_alcoholism"" VARCHAR(16777216),
	""symptom_allergic_conjunctivitis"" VARCHAR(16777216),
	""symptom_allergy"" VARCHAR(16777216),
	""symptom_amblyopia"" VARCHAR(16777216),
	""symptom_amenorrhea"" VARCHAR(16777216),
	""symptom_amnesia"" VARCHAR(16777216),
	""symptom_anal_fissure"" VARCHAR(16777216),
	""symptom_anaphylaxis"" VARCHAR(16777216),
	""symptom_anemia"" VARCHAR(16777216),
	""symptom_angina_pectoris"" VARCHAR(16777216),
	""symptom_angioedema"" VARCHAR(16777216),
	""symptom_angular_cheilitis"" VARCHAR(16777216),
	""symptom_anosmia"" VARCHAR(16777216),
	""symptom_anxiety"" VARCHAR(16777216),
	""symptom_aphasia"" VARCHAR(16777216),
	""symptom_aphonia"" VARCHAR(16777216),
	""symptom_apnea"" VARCHAR(16777216),
	""symptom_arthralgia"" VARCHAR(16777216),
	""symptom_arthritis"" VARCHAR(16777216),
	""symptom_ascites"" VARCHAR(16777216),
	""symptom_asperger_syndrome"" VARCHAR(16777216),
	""symptom_asphyxia"" VARCHAR(16777216),
	""symptom_asthma"" VARCHAR(16777216),
	""symptom_astigmatism"" VARCHAR(16777216),
	""symptom_ataxia"" VARCHAR(16777216),
	""symptom_atheroma"" VARCHAR(16777216),
	""symptom_attention_deficit_hyperactivity_disorder"" VARCHAR(16777216),
	""symptom_auditory_hallucination"" VARCHAR(16777216),
	""symptom_autoimmune_disease"" VARCHAR(16777216),
	""symptom_avoidant_personality_disorder"" VARCHAR(16777216),
	""symptom_back_pain"" VARCHAR(16777216),
	""symptom_bacterial_vaginosis"" VARCHAR(16777216),
	""symptom_balance_disorder"" VARCHAR(16777216),
	""symptom_beau_s_lines"" VARCHAR(16777216),
	""symptom_bell_s_palsy"" VARCHAR(16777216),
	""symptom_biliary_colic"" VARCHAR(16777216),
	""symptom_binge_eating"" VARCHAR(16777216),
	""symptom_bleeding"" VARCHAR(16777216),
	""symptom_bleeding_on_probing"" VARCHAR(16777216),
	""symptom_blepharospasm"" VARCHAR(16777216),
	""symptom_bloating"" VARCHAR(16777216),
	""symptom_blood_in_stool"" VARCHAR(16777216),
	""symptom_blurred_vision"" VARCHAR(16777216),
	""symptom_blushing"" VARCHAR(16777216),
	""symptom_boil"" VARCHAR(16777216),
	""symptom_bone_fracture"" VARCHAR(16777216),
	""symptom_bone_tumor"" VARCHAR(16777216),
	""symptom_bowel_obstruction"" VARCHAR(16777216),
	""symptom_bradycardia"" VARCHAR(16777216),
	""symptom_braxton_hicks_contractions"" VARCHAR(16777216),
	""symptom_breakthrough_bleeding"" VARCHAR(16777216),
	""symptom_breast_pain"" VARCHAR(16777216),
	""symptom_bronchitis"" VARCHAR(16777216),
	""symptom_bruise"" VARCHAR(16777216),
	""symptom_bruxism"" VARCHAR(16777216),
	""symptom_bunion"" VARCHAR(16777216),
	""symptom_burn"" VARCHAR(16777216),
	""symptom_burning_chest_pain"" VARCHAR(16777216),
	""symptom_burning_mouth_syndrome"" VARCHAR(16777216),
	""symptom_candidiasis"" VARCHAR(16777216),
	""symptom_canker_sore"" VARCHAR(16777216),
	""symptom_cardiac_arrest"" VARCHAR(16777216),
	""symptom_carpal_tunnel_syndrome"" VARCHAR(16777216),
	""symptom_cataplexy"" VARCHAR(16777216),
	""symptom_cataract"" VARCHAR(16777216),
	""symptom_chancre"" VARCHAR(16777216),
	""symptom_cheilitis"" VARCHAR(16777216),
	""symptom_chest_pain"" VARCHAR(16777216),
	""symptom_chills"" VARCHAR(16777216),
	""symptom_chorea"" VARCHAR(16777216),
	""symptom_chronic_pain"" VARCHAR(16777216),
	""symptom_cirrhosis"" VARCHAR(16777216),
	""symptom_cleft_lip_and_cleft_palate"" VARCHAR(16777216),
	""symptom_clouding_of_consciousness"" VARCHAR(16777216),
	""symptom_cluster_headache"" VARCHAR(16777216),
	""symptom_colitis"" VARCHAR(16777216),
	""symptom_coma"" VARCHAR(16777216),
	""symptom_common_cold"" VARCHAR(16777216),
	""symptom_compulsive_behavior"" VARCHAR(16777216),
	""symptom_compulsive_hoarding"" VARCHAR(16777216),
	""symptom_confusion"" VARCHAR(16777216),
	""symptom_congenital_heart_defect"" VARCHAR(16777216),
	""symptom_conjunctivitis"" VARCHAR(16777216),
	""symptom_constipation"" VARCHAR(16777216),
	""symptom_convulsion"" VARCHAR(16777216),
	""symptom_cough"" VARCHAR(16777216),
	""symptom_crackles"" VARCHAR(16777216),
	""symptom_cramp"" VARCHAR(16777216),
	""symptom_crepitus"" VARCHAR(16777216),
	""symptom_croup"" VARCHAR(16777216),
	""symptom_cyanosis"" VARCHAR(16777216),
	""symptom_dandruff"" VARCHAR(16777216),
	""symptom_delayed_onset_muscle_soreness"" VARCHAR(16777216),
	""symptom_dementia"" VARCHAR(16777216),
	""symptom_dentin_hypersensitivity"" VARCHAR(16777216),
	""symptom_depersonalization"" VARCHAR(16777216),
	""symptom_depression"" VARCHAR(16777216),
	""symptom_dermatitis"" VARCHAR(16777216),
	""symptom_desquamation"" VARCHAR(16777216),
	""symptom_developmental_disability"" VARCHAR(16777216),
	""symptom_diabetes"" VARCHAR(16777216),
	""symptom_diabetic_ketoacidosis"" VARCHAR(16777216),
	""symptom_diarrhea"" VARCHAR(16777216),
	""symptom_dizziness"" VARCHAR(16777216),
	""symptom_dry_eye_syndrome"" VARCHAR(16777216),
	""symptom_dysautonomia"" VARCHAR(16777216),
	""symptom_dysgeusia"" VARCHAR(16777216),
	""symptom_dysmenorrhea"" VARCHAR(16777216),
	""symptom_dyspareunia"" VARCHAR(16777216),
	""symptom_dysphagia"" VARCHAR(16777216),
	""symptom_dysphoria"" VARCHAR(16777216),
	""symptom_dystonia"" VARCHAR(16777216),
	""symptom_dysuria"" VARCHAR(16777216),
	""symptom_ear_pain"" VARCHAR(16777216),
	""symptom_eczema"" VARCHAR(16777216),
	""symptom_edema"" VARCHAR(16777216),
	""symptom_encephalitis"" VARCHAR(16777216),
	""symptom_encephalopathy"" VARCHAR(16777216),
	""symptom_epidermoid_cyst"" VARCHAR(16777216),
	""symptom_epilepsy"" VARCHAR(16777216),
	""symptom_epiphora"" VARCHAR(16777216),
	""symptom_erectile_dysfunction"" VARCHAR(16777216),
	""symptom_erythema"" VARCHAR(16777216),
	""symptom_erythema_chronicum_migrans"" VARCHAR(16777216),
	""symptom_esophagitis"" VARCHAR(16777216),
	""symptom_excessive_daytime_sleepiness"" VARCHAR(16777216),
	""symptom_eye_pain"" VARCHAR(16777216),
	""symptom_eye_strain"" VARCHAR(16777216),
	""symptom_facial_nerve_paralysis"" VARCHAR(16777216),
	""symptom_facial_swelling"" VARCHAR(16777216),
	""symptom_fasciculation"" VARCHAR(16777216),
	""symptom_fatigue"" VARCHAR(16777216),
	""symptom_fatty_liver_disease"" VARCHAR(16777216),
	""symptom_fecal_incontinence"" VARCHAR(16777216),
	""symptom_fever"" VARCHAR(16777216),
	""symptom_fibrillation"" VARCHAR(16777216),
	""symptom_fibrocystic_breast_changes"" VARCHAR(16777216),
	""symptom_fibromyalgia"" VARCHAR(16777216),
	""symptom_flatulence"" VARCHAR(16777216),
	""symptom_floater"" VARCHAR(16777216),
	""symptom_focal_seizure"" VARCHAR(16777216),
	""symptom_folate_deficiency"" VARCHAR(16777216),
	""symptom_food_craving"" VARCHAR(16777216),
	""symptom_food_intolerance"" VARCHAR(16777216),
	""symptom_frequent_urination"" VARCHAR(16777216),
	""symptom_gastroesophageal_reflux_disease"" VARCHAR(16777216),
	""symptom_gastroparesis"" VARCHAR(16777216),
	""symptom_generalized_anxiety_disorder"" VARCHAR(16777216),
	""symptom_generalized_tonic_clonic_seizure"" VARCHAR(16777216),
	""symptom_genital_wart"" VARCHAR(16777216),
	""symptom_gingival_recession"" VARCHAR(16777216),
	""symptom_gingivitis"" VARCHAR(16777216),
	""symptom_globus_pharyngis"" VARCHAR(16777216),
	""symptom_goitre"" VARCHAR(16777216),
	""symptom_gout"" VARCHAR(16777216),
	""symptom_grandiosity"" VARCHAR(16777216),
	""symptom_granuloma"" VARCHAR(16777216),
	""symptom_guilt"" VARCHAR(16777216),
	""symptom_hair_loss"" VARCHAR(16777216),
	""symptom_halitosis"" VARCHAR(16777216),
	""symptom_hay_fever"" VARCHAR(16777216),
	""symptom_headache"" VARCHAR(16777216),
	""symptom_heart_arrhythmia"" VARCHAR(16777216),
	""symptom_heart_murmur"" VARCHAR(16777216),
	""symptom_heartburn"" VARCHAR(16777216),
	""symptom_hematochezia"" VARCHAR(16777216),
	""symptom_hematoma"" VARCHAR(16777216),
	""symptom_hematuria"" VARCHAR(16777216),
	""symptom_hemolysis"" VARCHAR(16777216),
	""symptom_hemoptysis"" VARCHAR(16777216),
	""symptom_hemorrhoids"" VARCHAR(16777216),
	""symptom_hepatic_encephalopathy"" VARCHAR(16777216),
	""symptom_hepatitis"" VARCHAR(16777216),
	""symptom_hepatotoxicity"" VARCHAR(16777216),
	""symptom_hiccup"" VARCHAR(16777216),
	""symptom_hip_pain"" VARCHAR(16777216),
	""symptom_hives"" VARCHAR(16777216),
	""symptom_hot_flash"" VARCHAR(16777216),
	""symptom_hydrocephalus"" VARCHAR(16777216),
	""symptom_hypercalcaemia"" VARCHAR(16777216),
	""symptom_hypercapnia"" VARCHAR(16777216),
	""symptom_hypercholesterolemia"" VARCHAR(16777216),
	""symptom_hyperemesis_gravidarum"" VARCHAR(16777216),
	""symptom_hyperglycemia"" VARCHAR(16777216),
	""symptom_hyperkalemia"" VARCHAR(16777216),
	""symptom_hyperlipidemia"" VARCHAR(16777216),
	""symptom_hypermobility"" VARCHAR(16777216),
	""symptom_hyperpigmentation"" VARCHAR(16777216),
	""symptom_hypersomnia"" VARCHAR(16777216),
	""symptom_hypertension"" VARCHAR(16777216),
	""symptom_hyperthermia"" VARCHAR(16777216),
	""symptom_hyperthyroidism"" VARCHAR(16777216),
	""symptom_hypertriglyceridemia"" VARCHAR(16777216),
	""symptom_hypertrophy"" VARCHAR(16777216),
	""symptom_hyperventilation"" VARCHAR(16777216),
	""symptom_hypocalcaemia"" VARCHAR(16777216),
	""symptom_hypochondriasis"" VARCHAR(16777216),
	""symptom_hypoglycemia"" VARCHAR(16777216),
	""symptom_hypogonadism"" VARCHAR(16777216),
	""symptom_hypokalemia"" VARCHAR(16777216),
	""symptom_hypomania"" VARCHAR(16777216),
	""symptom_hyponatremia"" VARCHAR(16777216),
	""symptom_hypotension"" VARCHAR(16777216),
	""symptom_hypothyroidism"" VARCHAR(16777216),
	""symptom_hypoxemia"" VARCHAR(16777216),
	""symptom_hypoxia"" VARCHAR(16777216),
	""symptom_impetigo"" VARCHAR(16777216),
	""symptom_implantation_bleeding"" VARCHAR(16777216),
	""symptom_impulsivity"" VARCHAR(16777216),
	""symptom_indigestion"" VARCHAR(16777216),
	""symptom_infection"" VARCHAR(16777216),
	""symptom_inflammation"" VARCHAR(16777216),
	""symptom_inflammatory_bowel_disease"" VARCHAR(16777216),
	""symptom_ingrown_hair"" VARCHAR(16777216),
	""symptom_insomnia"" VARCHAR(16777216),
	""symptom_insulin_resistance"" VARCHAR(16777216),
	""symptom_intermenstrual_bleeding"" VARCHAR(16777216),
	""symptom_intracranial_pressure"" VARCHAR(16777216),
	""symptom_iron_deficiency"" VARCHAR(16777216),
	""symptom_irregular_menstruation"" VARCHAR(16777216),
	""symptom_itch"" VARCHAR(16777216),
	""symptom_jaundice"" VARCHAR(16777216),
	""symptom_kidney_failure"" VARCHAR(16777216),
	""symptom_kidney_stone"" VARCHAR(16777216),
	""symptom_knee_pain"" VARCHAR(16777216),
	""symptom_kyphosis"" VARCHAR(16777216),
	""symptom_lactose_intolerance"" VARCHAR(16777216),
	""symptom_laryngitis"" VARCHAR(16777216),
	""symptom_leg_cramps"" VARCHAR(16777216),
	""symptom_lesion"" VARCHAR(16777216),
	""symptom_leukorrhea"" VARCHAR(16777216),
	""symptom_lightheadedness"" VARCHAR(16777216),
	""symptom_low_back_pain"" VARCHAR(16777216),
	""symptom_low_grade_fever"" VARCHAR(16777216),
	""symptom_lymphedema"" VARCHAR(16777216),
	""symptom_major_depressive_disorder"" VARCHAR(16777216),
	""symptom_malabsorption"" VARCHAR(16777216),
	""symptom_male_infertility"" VARCHAR(16777216),
	""symptom_manic_disorder"" VARCHAR(16777216),
	""symptom_melasma"" VARCHAR(16777216),
	""symptom_melena"" VARCHAR(16777216),
	""symptom_meningitis"" VARCHAR(16777216),
	""symptom_menorrhagia"" VARCHAR(16777216),
	""symptom_middle_back_pain"" VARCHAR(16777216),
	""symptom_migraine"" VARCHAR(16777216),
	""symptom_milium"" VARCHAR(16777216),
	""symptom_mitral_insufficiency"" VARCHAR(16777216),
	""symptom_mood_disorder"" VARCHAR(16777216),
	""symptom_mood_swing"" VARCHAR(16777216),
	""symptom_morning_sickness"" VARCHAR(16777216),
	""symptom_motion_sickness"" VARCHAR(16777216),
	""symptom_mouth_ulcer"" VARCHAR(16777216),
	""symptom_muscle_atrophy"" VARCHAR(16777216),
	""symptom_muscle_weakness"" VARCHAR(16777216),
	""symptom_myalgia"" VARCHAR(16777216),
	""symptom_mydriasis"" VARCHAR(16777216),
	""symptom_myocardial_infarction"" VARCHAR(16777216),
	""symptom_myoclonus"" VARCHAR(16777216),
	""symptom_nasal_congestion"" VARCHAR(16777216),
	""symptom_nasal_polyp"" VARCHAR(16777216),
	""symptom_nausea"" VARCHAR(16777216),
	""symptom_neck_mass"" VARCHAR(16777216),
	""symptom_neck_pain"" VARCHAR(16777216),
	""symptom_neonatal_jaundice"" VARCHAR(16777216),
	""symptom_nerve_injury"" VARCHAR(16777216),
	""symptom_neuralgia"" VARCHAR(16777216),
	""symptom_neutropenia"" VARCHAR(16777216),
	""symptom_night_sweats"" VARCHAR(16777216),
	""symptom_night_terror"" VARCHAR(16777216),
	""symptom_nocturnal_enuresis"" VARCHAR(16777216),
	""symptom_nodule"" VARCHAR(16777216),
	""symptom_nosebleed"" VARCHAR(16777216),
	""symptom_nystagmus"" VARCHAR(16777216),
	""symptom_obesity"" VARCHAR(16777216),
	""symptom_onychorrhexis"" VARCHAR(16777216),
	""symptom_oral_candidiasis"" VARCHAR(16777216),
	""symptom_orthostatic_hypotension"" VARCHAR(16777216),
	""symptom_osteopenia"" VARCHAR(16777216),
	""symptom_osteophyte"" VARCHAR(16777216),
	""symptom_osteoporosis"" VARCHAR(16777216),
	""symptom_otitis"" VARCHAR(16777216),
	""symptom_otitis_externa"" VARCHAR(16777216),
	""symptom_otitis_media"" VARCHAR(16777216),
	""symptom_pain"" VARCHAR(16777216),
	""symptom_palpitations"" VARCHAR(16777216),
	""symptom_panic_attack"" VARCHAR(16777216),
	""symptom_papule"" VARCHAR(16777216),
	""symptom_paranoia"" VARCHAR(16777216),
	""symptom_paresthesia"" VARCHAR(16777216),
	""symptom_pelvic_inflammatory_disease"" VARCHAR(16777216),
	""symptom_pericarditis"" VARCHAR(16777216),
	""symptom_periodontal_disease"" VARCHAR(16777216),
	""symptom_periorbital_puffiness"" VARCHAR(16777216),
	""symptom_peripheral_neuropathy"" VARCHAR(16777216),
	""symptom_perspiration"" VARCHAR(16777216),
	""symptom_petechia"" VARCHAR(16777216),
	""symptom_phlegm"" VARCHAR(16777216),
	""symptom_photodermatitis"" VARCHAR(16777216),
	""symptom_photophobia"" VARCHAR(16777216),
	""symptom_photopsia"" VARCHAR(16777216),
	""symptom_pleural_effusion"" VARCHAR(16777216),
	""symptom_pleurisy"" VARCHAR(16777216),
	""symptom_pneumonia"" VARCHAR(16777216),
	""symptom_podalgia"" VARCHAR(16777216),
	""symptom_polycythemia"" VARCHAR(16777216),
	""symptom_polydipsia"" VARCHAR(16777216),
	""symptom_polyneuropathy"" VARCHAR(16777216),
	""symptom_polyuria"" VARCHAR(16777216),
	""symptom_poor_posture"" VARCHAR(16777216),
	""symptom_post_nasal_drip"" VARCHAR(16777216),
	""symptom_postural_orthostatic_tachycardia_syndrome"" VARCHAR(16777216),
	""symptom_prediabetes"" VARCHAR(16777216),
	""symptom_proteinuria"" VARCHAR(16777216),
	""symptom_pruritus_ani"" VARCHAR(16777216),
	""symptom_psychosis"" VARCHAR(16777216),
	""symptom_ptosis"" VARCHAR(16777216),
	""symptom_pulmonary_edema"" VARCHAR(16777216),
	""symptom_pulmonary_hypertension"" VARCHAR(16777216),
	""symptom_purpura"" VARCHAR(16777216),
	""symptom_pus"" VARCHAR(16777216),
	""symptom_pyelonephritis"" VARCHAR(16777216),
	""symptom_radiculopathy"" VARCHAR(16777216),
	""symptom_rectal_pain"" VARCHAR(16777216),
	""symptom_rectal_prolapse"" VARCHAR(16777216),
	""symptom_red_eye"" VARCHAR(16777216),
	""symptom_renal_colic"" VARCHAR(16777216),
	""symptom_restless_legs_syndrome"" VARCHAR(16777216),
	""symptom_rheum"" VARCHAR(16777216),
	""symptom_rhinitis"" VARCHAR(16777216),
	""symptom_rhinorrhea"" VARCHAR(16777216),
	""symptom_rosacea"" VARCHAR(16777216),
	""symptom_round_ligament_pain"" VARCHAR(16777216),
	""symptom_rumination"" VARCHAR(16777216),
	""symptom_scar"" VARCHAR(16777216),
	""symptom_sciatica"" VARCHAR(16777216),
	""symptom_scoliosis"" VARCHAR(16777216),
	""symptom_seborrheic_dermatitis"" VARCHAR(16777216),
	""symptom_self_harm"" VARCHAR(16777216),
	""symptom_sensitivity_to_sound"" VARCHAR(16777216),
	""symptom_sexual_dysfunction"" VARCHAR(16777216),
	""symptom_shallow_breathing"" VARCHAR(16777216),
	""symptom_sharp_pain"" VARCHAR(16777216),
	""symptom_shivering"" VARCHAR(16777216),
	""symptom_shortness_of_breath"" VARCHAR(16777216),
	""symptom_shyness"" VARCHAR(16777216),
	""symptom_sinusitis"" VARCHAR(16777216),
	""symptom_skin_condition"" VARCHAR(16777216),
	""symptom_skin_rash"" VARCHAR(16777216),
	""symptom_skin_tag"" VARCHAR(16777216),
	""symptom_skin_ulcer"" VARCHAR(16777216),
	""symptom_sleep_apnea"" VARCHAR(16777216),
	""symptom_sleep_deprivation"" VARCHAR(16777216),
	""symptom_sleep_disorder"" VARCHAR(16777216),
	""symptom_snoring"" VARCHAR(16777216),
	""symptom_sore_throat"" VARCHAR(16777216),
	""symptom_spasticity"" VARCHAR(16777216),
	""symptom_splenomegaly"" VARCHAR(16777216),
	""symptom_sputum"" VARCHAR(16777216),
	""symptom_stomach_rumble"" VARCHAR(16777216),
	""symptom_strabismus"" VARCHAR(16777216),
	""symptom_stretch_marks"" VARCHAR(16777216),
	""symptom_stridor"" VARCHAR(16777216),
	""symptom_stroke"" VARCHAR(16777216),
	""symptom_stuttering"" VARCHAR(16777216),
	""symptom_subdural_hematoma"" VARCHAR(16777216),
	""symptom_suicidal_ideation"" VARCHAR(16777216),
	""symptom_swelling"" VARCHAR(16777216),
	""symptom_swollen_feet"" VARCHAR(16777216),
	""symptom_swollen_lymph_nodes"" VARCHAR(16777216),
	""symptom_syncope"" VARCHAR(16777216),
	""symptom_tachycardia"" VARCHAR(16777216),
	""symptom_tachypnea"" VARCHAR(16777216),
	""symptom_telangiectasia"" VARCHAR(16777216),
	""symptom_tenderness"" VARCHAR(16777216),
	""symptom_testicular_pain"" VARCHAR(16777216),
	""symptom_throat_irritation"" VARCHAR(16777216),
	""symptom_thrombocytopenia"" VARCHAR(16777216),
	""symptom_thyroid_nodule"" VARCHAR(16777216),
	""symptom_tic"" VARCHAR(16777216),
	""symptom_tinnitus"" VARCHAR(16777216),
	""symptom_tonsillitis"" VARCHAR(16777216),
	""symptom_toothache"" VARCHAR(16777216),
	""symptom_tremor"" VARCHAR(16777216),
	""symptom_trichoptilosis"" VARCHAR(16777216),
	""symptom_tumor"" VARCHAR(16777216),
	""symptom_type_2_diabetes"" VARCHAR(16777216),
	""symptom_unconsciousness"" VARCHAR(16777216),
	""symptom_underweight"" VARCHAR(16777216),
	""symptom_upper_respiratory_tract_infection"" VARCHAR(16777216),
	""symptom_urethritis"" VARCHAR(16777216),
	""symptom_urinary_incontinence"" VARCHAR(16777216),
	""symptom_urinary_tract_infection"" VARCHAR(16777216),
	""symptom_urinary_urgency"" VARCHAR(16777216),
	""symptom_uterine_contraction"" VARCHAR(16777216),
	""symptom_vaginal_bleeding"" VARCHAR(16777216),
	""symptom_vaginal_discharge"" VARCHAR(16777216),
	""symptom_vaginitis"" VARCHAR(16777216),
	""symptom_varicose_veins"" VARCHAR(16777216),
	""symptom_vasculitis"" VARCHAR(16777216),
	""symptom_ventricular_fibrillation"" VARCHAR(16777216),
	""symptom_ventricular_tachycardia"" VARCHAR(16777216),
	""symptom_vertigo"" VARCHAR(16777216),
	""symptom_viral_pneumonia"" VARCHAR(16777216),
	""symptom_visual_acuity"" VARCHAR(16777216),
	""symptom_vomiting"" VARCHAR(16777216),
	""symptom_wart"" VARCHAR(16777216),
	""symptom_water_retention"" VARCHAR(16777216),
	""symptom_weakness"" VARCHAR(16777216),
	""symptom_weight_gain"" VARCHAR(16777216),
	""symptom_wheeze"" VARCHAR(16777216),
	""symptom_xeroderma"" VARCHAR(16777216),
	""symptom_xerostomia"" VARCHAR(16777216),
	""symptom_yawn"" VARCHAR(16777216),
	""symptom_hyperhidrosis"" VARCHAR(16777216),
	""symptom_pancreatitis"" VARCHAR(16777216)
);"

Database Name: COVID19_SYMPTOM_SEARCH
Schema Name: COVID19_SYMPTOM_SEARCH
,2
table_name,SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY
description,
DDL,"create or replace TABLE SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY (
	""country_region_code"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""sub_region_1"" VARCHAR(16777216),
	""sub_region_1_code"" VARCHAR(16777216),
	""sub_region_2"" VARCHAR(16777216),
	""sub_region_2_code"" VARCHAR(16777216),
	""place_id"" VARCHAR(16777216),
	""date"" VARCHAR(16777216),
	""symptom_abdominal_obesity"" VARCHAR(16777216),
	""symptom_abdominal_pain"" VARCHAR(16777216),
	""symptom_acne"" VARCHAR(16777216),
	""symptom_actinic_keratosis"" VARCHAR(16777216),
	""symptom_acute_bronchitis"" VARCHAR(16777216),
	""symptom_adrenal_crisis"" VARCHAR(16777216),
	""symptom_ageusia"" VARCHAR(16777216),
	""symptom_alcoholism"" VARCHAR(16777216),
	""symptom_allergic_conjunctivitis"" VARCHAR(16777216),
	""symptom_allergy"" VARCHAR(16777216),
	""symptom_amblyopia"" VARCHAR(16777216),
	""symptom_amenorrhea"" VARCHAR(16777216),
	""symptom_amnesia"" VARCHAR(16777216),
	""symptom_anal_fissure"" VARCHAR(16777216),
	""symptom_anaphylaxis"" VARCHAR(16777216),
	""symptom_anemia"" VARCHAR(16777216),
	""symptom_angina_pectoris"" VARCHAR(16777216),
	""symptom_angioedema"" VARCHAR(16777216),
	""symptom_angular_cheilitis"" VARCHAR(16777216),
	""symptom_anosmia"" VARCHAR(16777216),
	""symptom_anxiety"" VARCHAR(16777216),
	""symptom_aphasia"" VARCHAR(16777216),
	""symptom_aphonia"" VARCHAR(16777216),
	""symptom_apnea"" VARCHAR(16777216),
	""symptom_arthralgia"" VARCHAR(16777216),
	""symptom_arthritis"" VARCHAR(16777216),
	""symptom_ascites"" VARCHAR(16777216),
	""symptom_asperger_syndrome"" VARCHAR(16777216),
	""symptom_asphyxia"" VARCHAR(16777216),
	""symptom_asthma"" VARCHAR(16777216),
	""symptom_astigmatism"" VARCHAR(16777216),
	""symptom_ataxia"" VARCHAR(16777216),
	""symptom_atheroma"" VARCHAR(16777216),
	""symptom_attention_deficit_hyperactivity_disorder"" VARCHAR(16777216),
	""symptom_auditory_hallucination"" VARCHAR(16777216),
	""symptom_autoimmune_disease"" VARCHAR(16777216),
	""symptom_avoidant_personality_disorder"" VARCHAR(16777216),
	""symptom_back_pain"" VARCHAR(16777216),
	""symptom_bacterial_vaginosis"" VARCHAR(16777216),
	""symptom_balance_disorder"" VARCHAR(16777216),
	""symptom_beau_s_lines"" VARCHAR(16777216),
	""symptom_bell_s_palsy"" VARCHAR(16777216),
	""symptom_biliary_colic"" VARCHAR(16777216),
	""symptom_binge_eating"" VARCHAR(16777216),
	""symptom_bleeding"" VARCHAR(16777216),
	""symptom_bleeding_on_probing"" VARCHAR(16777216),
	""symptom_blepharospasm"" VARCHAR(16777216),
	""symptom_bloating"" VARCHAR(16777216),
	""symptom_blood_in_stool"" VARCHAR(16777216),
	""symptom_blurred_vision"" VARCHAR(16777216),
	""symptom_blushing"" VARCHAR(16777216),
	""symptom_boil"" VARCHAR(16777216),
	""symptom_bone_fracture"" VARCHAR(16777216),
	""symptom_bone_tumor"" VARCHAR(16777216),
	""symptom_bowel_obstruction"" VARCHAR(16777216),
	""symptom_bradycardia"" VARCHAR(16777216),
	""symptom_braxton_hicks_contractions"" VARCHAR(16777216),
	""symptom_breakthrough_bleeding"" VARCHAR(16777216),
	""symptom_breast_pain"" VARCHAR(16777216),
	""symptom_bronchitis"" VARCHAR(16777216),
	""symptom_bruise"" VARCHAR(16777216),
	""symptom_bruxism"" VARCHAR(16777216),
	""symptom_bunion"" VARCHAR(16777216),
	""symptom_burn"" VARCHAR(16777216),
	""symptom_burning_chest_pain"" VARCHAR(16777216),
	""symptom_burning_mouth_syndrome"" VARCHAR(16777216),
	""symptom_candidiasis"" VARCHAR(16777216),
	""symptom_canker_sore"" VARCHAR(16777216),
	""symptom_cardiac_arrest"" VARCHAR(16777216),
	""symptom_carpal_tunnel_syndrome"" VARCHAR(16777216),
	""symptom_cataplexy"" VARCHAR(16777216),
	""symptom_cataract"" VARCHAR(16777216),
	""symptom_chancre"" VARCHAR(16777216),
	""symptom_cheilitis"" VARCHAR(16777216),
	""symptom_chest_pain"" VARCHAR(16777216),
	""symptom_chills"" VARCHAR(16777216),
	""symptom_chorea"" VARCHAR(16777216),
	""symptom_chronic_pain"" VARCHAR(16777216),
	""symptom_cirrhosis"" VARCHAR(16777216),
	""symptom_cleft_lip_and_cleft_palate"" VARCHAR(16777216),
	""symptom_clouding_of_consciousness"" VARCHAR(16777216),
	""symptom_cluster_headache"" VARCHAR(16777216),
	""symptom_colitis"" VARCHAR(16777216),
	""symptom_coma"" VARCHAR(16777216),
	""symptom_common_cold"" VARCHAR(16777216),
	""symptom_compulsive_behavior"" VARCHAR(16777216),
	""symptom_compulsive_hoarding"" VARCHAR(16777216),
	""symptom_confusion"" VARCHAR(16777216),
	""symptom_congenital_heart_defect"" VARCHAR(16777216),
	""symptom_conjunctivitis"" VARCHAR(16777216),
	""symptom_constipation"" VARCHAR(16777216),
	""symptom_convulsion"" VARCHAR(16777216),
	""symptom_cough"" VARCHAR(16777216),
	""symptom_crackles"" VARCHAR(16777216),
	""symptom_cramp"" VARCHAR(16777216),
	""symptom_crepitus"" VARCHAR(16777216),
	""symptom_croup"" VARCHAR(16777216),
	""symptom_cyanosis"" VARCHAR(16777216),
	""symptom_dandruff"" VARCHAR(16777216),
	""symptom_delayed_onset_muscle_soreness"" VARCHAR(16777216),
	""symptom_dementia"" VARCHAR(16777216),
	""symptom_dentin_hypersensitivity"" VARCHAR(16777216),
	""symptom_depersonalization"" VARCHAR(16777216),
	""symptom_depression"" VARCHAR(16777216),
	""symptom_dermatitis"" VARCHAR(16777216),
	""symptom_desquamation"" VARCHAR(16777216),
	""symptom_developmental_disability"" VARCHAR(16777216),
	""symptom_diabetes"" VARCHAR(16777216),
	""symptom_diabetic_ketoacidosis"" VARCHAR(16777216),
	""symptom_diarrhea"" VARCHAR(16777216),
	""symptom_dizziness"" VARCHAR(16777216),
	""symptom_dry_eye_syndrome"" VARCHAR(16777216),
	""symptom_dysautonomia"" VARCHAR(16777216),
	""symptom_dysgeusia"" VARCHAR(16777216),
	""symptom_dysmenorrhea"" VARCHAR(16777216),
	""symptom_dyspareunia"" VARCHAR(16777216),
	""symptom_dysphagia"" VARCHAR(16777216),
	""symptom_dysphoria"" VARCHAR(16777216),
	""symptom_dystonia"" VARCHAR(16777216),
	""symptom_dysuria"" VARCHAR(16777216),
	""symptom_ear_pain"" VARCHAR(16777216),
	""symptom_eczema"" VARCHAR(16777216),
	""symptom_edema"" VARCHAR(16777216),
	""symptom_encephalitis"" VARCHAR(16777216),
	""symptom_encephalopathy"" VARCHAR(16777216),
	""symptom_epidermoid_cyst"" VARCHAR(16777216),
	""symptom_epilepsy"" VARCHAR(16777216),
	""symptom_epiphora"" VARCHAR(16777216),
	""symptom_erectile_dysfunction"" VARCHAR(16777216),
	""symptom_erythema"" VARCHAR(16777216),
	""symptom_erythema_chronicum_migrans"" VARCHAR(16777216),
	""symptom_esophagitis"" VARCHAR(16777216),
	""symptom_excessive_daytime_sleepiness"" VARCHAR(16777216),
	""symptom_eye_pain"" VARCHAR(16777216),
	""symptom_eye_strain"" VARCHAR(16777216),
	""symptom_facial_nerve_paralysis"" VARCHAR(16777216),
	""symptom_facial_swelling"" VARCHAR(16777216),
	""symptom_fasciculation"" VARCHAR(16777216),
	""symptom_fatigue"" VARCHAR(16777216),
	""symptom_fatty_liver_disease"" VARCHAR(16777216),
	""symptom_fecal_incontinence"" VARCHAR(16777216),
	""symptom_fever"" VARCHAR(16777216),
	""symptom_fibrillation"" VARCHAR(16777216),
	""symptom_fibrocystic_breast_changes"" VARCHAR(16777216),
	""symptom_fibromyalgia"" VARCHAR(16777216),
	""symptom_flatulence"" VARCHAR(16777216),
	""symptom_floater"" VARCHAR(16777216),
	""symptom_focal_seizure"" VARCHAR(16777216),
	""symptom_folate_deficiency"" VARCHAR(16777216),
	""symptom_food_craving"" VARCHAR(16777216),
	""symptom_food_intolerance"" VARCHAR(16777216),
	""symptom_frequent_urination"" VARCHAR(16777216),
	""symptom_gastroesophageal_reflux_disease"" VARCHAR(16777216),
	""symptom_gastroparesis"" VARCHAR(16777216),
	""symptom_generalized_anxiety_disorder"" VARCHAR(16777216),
	""symptom_generalized_tonic_clonic_seizure"" VARCHAR(16777216),
	""symptom_genital_wart"" VARCHAR(16777216),
	""symptom_gingival_recession"" VARCHAR(16777216),
	""symptom_gingivitis"" VARCHAR(16777216),
	""symptom_globus_pharyngis"" VARCHAR(16777216),
	""symptom_goitre"" VARCHAR(16777216),
	""symptom_gout"" VARCHAR(16777216),
	""symptom_grandiosity"" VARCHAR(16777216),
	""symptom_granuloma"" VARCHAR(16777216),
	""symptom_guilt"" VARCHAR(16777216),
	""symptom_hair_loss"" VARCHAR(16777216),
	""symptom_halitosis"" VARCHAR(16777216),
	""symptom_hay_fever"" VARCHAR(16777216),
	""symptom_headache"" VARCHAR(16777216),
	""symptom_heart_arrhythmia"" VARCHAR(16777216),
	""symptom_heart_murmur"" VARCHAR(16777216),
	""symptom_heartburn"" VARCHAR(16777216),
	""symptom_hematochezia"" VARCHAR(16777216),
	""symptom_hematoma"" VARCHAR(16777216),
	""symptom_hematuria"" VARCHAR(16777216),
	""symptom_hemolysis"" VARCHAR(16777216),
	""symptom_hemoptysis"" VARCHAR(16777216),
	""symptom_hemorrhoids"" VARCHAR(16777216),
	""symptom_hepatic_encephalopathy"" VARCHAR(16777216),
	""symptom_hepatitis"" VARCHAR(16777216),
	""symptom_hepatotoxicity"" VARCHAR(16777216),
	""symptom_hiccup"" VARCHAR(16777216),
	""symptom_hip_pain"" VARCHAR(16777216),
	""symptom_hives"" VARCHAR(16777216),
	""symptom_hot_flash"" VARCHAR(16777216),
	""symptom_hydrocephalus"" VARCHAR(16777216),
	""symptom_hypercalcaemia"" VARCHAR(16777216),
	""symptom_hypercapnia"" VARCHAR(16777216),
	""symptom_hypercholesterolemia"" VARCHAR(16777216),
	""symptom_hyperemesis_gravidarum"" VARCHAR(16777216),
	""symptom_hyperglycemia"" VARCHAR(16777216),
	""symptom_hyperkalemia"" VARCHAR(16777216),
	""symptom_hyperlipidemia"" VARCHAR(16777216),
	""symptom_hypermobility"" VARCHAR(16777216),
	""symptom_hyperpigmentation"" VARCHAR(16777216),
	""symptom_hypersomnia"" VARCHAR(16777216),
	""symptom_hypertension"" VARCHAR(16777216),
	""symptom_hyperthermia"" VARCHAR(16777216),
	""symptom_hyperthyroidism"" VARCHAR(16777216),
	""symptom_hypertriglyceridemia"" VARCHAR(16777216),
	""symptom_hypertrophy"" VARCHAR(16777216),
	""symptom_hyperventilation"" VARCHAR(16777216),
	""symptom_hypocalcaemia"" VARCHAR(16777216),
	""symptom_hypochondriasis"" VARCHAR(16777216),
	""symptom_hypoglycemia"" VARCHAR(16777216),
	""symptom_hypogonadism"" VARCHAR(16777216),
	""symptom_hypokalemia"" VARCHAR(16777216),
	""symptom_hypomania"" VARCHAR(16777216),
	""symptom_hyponatremia"" VARCHAR(16777216),
	""symptom_hypotension"" VARCHAR(16777216),
	""symptom_hypothyroidism"" VARCHAR(16777216),
	""symptom_hypoxemia"" VARCHAR(16777216),
	""symptom_hypoxia"" VARCHAR(16777216),
	""symptom_impetigo"" VARCHAR(16777216),
	""symptom_implantation_bleeding"" VARCHAR(16777216),
	""symptom_impulsivity"" VARCHAR(16777216),
	""symptom_indigestion"" VARCHAR(16777216),
	""symptom_infection"" VARCHAR(16777216),
	""symptom_inflammation"" VARCHAR(16777216),
	""symptom_inflammatory_bowel_disease"" VARCHAR(16777216),
	""symptom_ingrown_hair"" VARCHAR(16777216),
	""symptom_insomnia"" VARCHAR(16777216),
	""symptom_insulin_resistance"" VARCHAR(16777216),
	""symptom_intermenstrual_bleeding"" VARCHAR(16777216),
	""symptom_intracranial_pressure"" VARCHAR(16777216),
	""symptom_iron_deficiency"" VARCHAR(16777216),
	""symptom_irregular_menstruation"" VARCHAR(16777216),
	""symptom_itch"" VARCHAR(16777216),
	""symptom_jaundice"" VARCHAR(16777216),
	""symptom_kidney_failure"" VARCHAR(16777216),
	""symptom_kidney_stone"" VARCHAR(16777216),
	""symptom_knee_pain"" VARCHAR(16777216),
	""symptom_kyphosis"" VARCHAR(16777216),
	""symptom_lactose_intolerance"" VARCHAR(16777216),
	""symptom_laryngitis"" VARCHAR(16777216),
	""symptom_leg_cramps"" VARCHAR(16777216),
	""symptom_lesion"" VARCHAR(16777216),
	""symptom_leukorrhea"" VARCHAR(16777216),
	""symptom_lightheadedness"" VARCHAR(16777216),
	""symptom_low_back_pain"" VARCHAR(16777216),
	""symptom_low_grade_fever"" VARCHAR(16777216),
	""symptom_lymphedema"" VARCHAR(16777216),
	""symptom_major_depressive_disorder"" VARCHAR(16777216),
	""symptom_malabsorption"" VARCHAR(16777216),
	""symptom_male_infertility"" VARCHAR(16777216),
	""symptom_manic_disorder"" VARCHAR(16777216),
	""symptom_melasma"" VARCHAR(16777216),
	""symptom_melena"" VARCHAR(16777216),
	""symptom_meningitis"" VARCHAR(16777216),
	""symptom_menorrhagia"" VARCHAR(16777216),
	""symptom_middle_back_pain"" VARCHAR(16777216),
	""symptom_migraine"" VARCHAR(16777216),
	""symptom_milium"" VARCHAR(16777216),
	""symptom_mitral_insufficiency"" VARCHAR(16777216),
	""symptom_mood_disorder"" VARCHAR(16777216),
	""symptom_mood_swing"" VARCHAR(16777216),
	""symptom_morning_sickness"" VARCHAR(16777216),
	""symptom_motion_sickness"" VARCHAR(16777216),
	""symptom_mouth_ulcer"" VARCHAR(16777216),
	""symptom_muscle_atrophy"" VARCHAR(16777216),
	""symptom_muscle_weakness"" VARCHAR(16777216),
	""symptom_myalgia"" VARCHAR(16777216),
	""symptom_mydriasis"" VARCHAR(16777216),
	""symptom_myocardial_infarction"" VARCHAR(16777216),
	""symptom_myoclonus"" VARCHAR(16777216),
	""symptom_nasal_congestion"" VARCHAR(16777216),
	""symptom_nasal_polyp"" VARCHAR(16777216),
	""symptom_nausea"" VARCHAR(16777216),
	""symptom_neck_mass"" VARCHAR(16777216),
	""symptom_neck_pain"" VARCHAR(16777216),
	""symptom_neonatal_jaundice"" VARCHAR(16777216),
	""symptom_nerve_injury"" VARCHAR(16777216),
	""symptom_neuralgia"" VARCHAR(16777216),
	""symptom_neutropenia"" VARCHAR(16777216),
	""symptom_night_sweats"" VARCHAR(16777216),
	""symptom_night_terror"" VARCHAR(16777216),
	""symptom_nocturnal_enuresis"" VARCHAR(16777216),
	""symptom_nodule"" VARCHAR(16777216),
	""symptom_nosebleed"" VARCHAR(16777216),
	""symptom_nystagmus"" VARCHAR(16777216),
	""symptom_obesity"" VARCHAR(16777216),
	""symptom_onychorrhexis"" VARCHAR(16777216),
	""symptom_oral_candidiasis"" VARCHAR(16777216),
	""symptom_orthostatic_hypotension"" VARCHAR(16777216),
	""symptom_osteopenia"" VARCHAR(16777216),
	""symptom_osteophyte"" VARCHAR(16777216),
	""symptom_osteoporosis"" VARCHAR(16777216),
	""symptom_otitis"" VARCHAR(16777216),
	""symptom_otitis_externa"" VARCHAR(16777216),
	""symptom_otitis_media"" VARCHAR(16777216),
	""symptom_pain"" VARCHAR(16777216),
	""symptom_palpitations"" VARCHAR(16777216),
	""symptom_panic_attack"" VARCHAR(16777216),
	""symptom_papule"" VARCHAR(16777216),
	""symptom_paranoia"" VARCHAR(16777216),
	""symptom_paresthesia"" VARCHAR(16777216),
	""symptom_pelvic_inflammatory_disease"" VARCHAR(16777216),
	""symptom_pericarditis"" VARCHAR(16777216),
	""symptom_periodontal_disease"" VARCHAR(16777216),
	""symptom_periorbital_puffiness"" VARCHAR(16777216),
	""symptom_peripheral_neuropathy"" VARCHAR(16777216),
	""symptom_perspiration"" VARCHAR(16777216),
	""symptom_petechia"" VARCHAR(16777216),
	""symptom_phlegm"" VARCHAR(16777216),
	""symptom_photodermatitis"" VARCHAR(16777216),
	""symptom_photophobia"" VARCHAR(16777216),
	""symptom_photopsia"" VARCHAR(16777216),
	""symptom_pleural_effusion"" VARCHAR(16777216),
	""symptom_pleurisy"" VARCHAR(16777216),
	""symptom_pneumonia"" VARCHAR(16777216),
	""symptom_podalgia"" VARCHAR(16777216),
	""symptom_polycythemia"" VARCHAR(16777216),
	""symptom_polydipsia"" VARCHAR(16777216),
	""symptom_polyneuropathy"" VARCHAR(16777216),
	""symptom_polyuria"" VARCHAR(16777216),
	""symptom_poor_posture"" VARCHAR(16777216),
	""symptom_post_nasal_drip"" VARCHAR(16777216),
	""symptom_postural_orthostatic_tachycardia_syndrome"" VARCHAR(16777216),
	""symptom_prediabetes"" VARCHAR(16777216),
	""symptom_proteinuria"" VARCHAR(16777216),
	""symptom_pruritus_ani"" VARCHAR(16777216),
	""symptom_psychosis"" VARCHAR(16777216),
	""symptom_ptosis"" VARCHAR(16777216),
	""symptom_pulmonary_edema"" VARCHAR(16777216),
	""symptom_pulmonary_hypertension"" VARCHAR(16777216),
	""symptom_purpura"" VARCHAR(16777216),
	""symptom_pus"" VARCHAR(16777216),
	""symptom_pyelonephritis"" VARCHAR(16777216),
	""symptom_radiculopathy"" VARCHAR(16777216),
	""symptom_rectal_pain"" VARCHAR(16777216),
	""symptom_rectal_prolapse"" VARCHAR(16777216),
	""symptom_red_eye"" VARCHAR(16777216),
	""symptom_renal_colic"" VARCHAR(16777216),
	""symptom_restless_legs_syndrome"" VARCHAR(16777216),
	""symptom_rheum"" VARCHAR(16777216),
	""symptom_rhinitis"" VARCHAR(16777216),
	""symptom_rhinorrhea"" VARCHAR(16777216),
	""symptom_rosacea"" VARCHAR(16777216),
	""symptom_round_ligament_pain"" VARCHAR(16777216),
	""symptom_rumination"" VARCHAR(16777216),
	""symptom_scar"" VARCHAR(16777216),
	""symptom_sciatica"" VARCHAR(16777216),
	""symptom_scoliosis"" VARCHAR(16777216),
	""symptom_seborrheic_dermatitis"" VARCHAR(16777216),
	""symptom_self_harm"" VARCHAR(16777216),
	""symptom_sensitivity_to_sound"" VARCHAR(16777216),
	""symptom_sexual_dysfunction"" VARCHAR(16777216),
	""symptom_shallow_breathing"" VARCHAR(16777216),
	""symptom_sharp_pain"" VARCHAR(16777216),
	""symptom_shivering"" VARCHAR(16777216),
	""symptom_shortness_of_breath"" VARCHAR(16777216),
	""symptom_shyness"" VARCHAR(16777216),
	""symptom_sinusitis"" VARCHAR(16777216),
	""symptom_skin_condition"" VARCHAR(16777216),
	""symptom_skin_rash"" VARCHAR(16777216),
	""symptom_skin_tag"" VARCHAR(16777216),
	""symptom_skin_ulcer"" VARCHAR(16777216),
	""symptom_sleep_apnea"" VARCHAR(16777216),
	""symptom_sleep_deprivation"" VARCHAR(16777216),
	""symptom_sleep_disorder"" VARCHAR(16777216),
	""symptom_snoring"" VARCHAR(16777216),
	""symptom_sore_throat"" VARCHAR(16777216),
	""symptom_spasticity"" VARCHAR(16777216),
	""symptom_splenomegaly"" VARCHAR(16777216),
	""symptom_sputum"" VARCHAR(16777216),
	""symptom_stomach_rumble"" VARCHAR(16777216),
	""symptom_strabismus"" VARCHAR(16777216),
	""symptom_stretch_marks"" VARCHAR(16777216),
	""symptom_stridor"" VARCHAR(16777216),
	""symptom_stroke"" VARCHAR(16777216),
	""symptom_stuttering"" VARCHAR(16777216),
	""symptom_subdural_hematoma"" VARCHAR(16777216),
	""symptom_suicidal_ideation"" VARCHAR(16777216),
	""symptom_swelling"" VARCHAR(16777216),
	""symptom_swollen_feet"" VARCHAR(16777216),
	""symptom_swollen_lymph_nodes"" VARCHAR(16777216),
	""symptom_syncope"" VARCHAR(16777216),
	""symptom_tachycardia"" VARCHAR(16777216),
	""symptom_tachypnea"" VARCHAR(16777216),
	""symptom_telangiectasia"" VARCHAR(16777216),
	""symptom_tenderness"" VARCHAR(16777216),
	""symptom_testicular_pain"" VARCHAR(16777216),
	""symptom_throat_irritation"" VARCHAR(16777216),
	""symptom_thrombocytopenia"" VARCHAR(16777216),
	""symptom_thyroid_nodule"" VARCHAR(16777216),
	""symptom_tic"" VARCHAR(16777216),
	""symptom_tinnitus"" VARCHAR(16777216),
	""symptom_tonsillitis"" VARCHAR(16777216),
	""symptom_toothache"" VARCHAR(16777216),
	""symptom_tremor"" VARCHAR(16777216),
	""symptom_trichoptilosis"" VARCHAR(16777216),
	""symptom_tumor"" VARCHAR(16777216),
	""symptom_type_2_diabetes"" VARCHAR(16777216),
	""symptom_unconsciousness"" VARCHAR(16777216),
	""symptom_underweight"" VARCHAR(16777216),
	""symptom_upper_respiratory_tract_infection"" VARCHAR(16777216),
	""symptom_urethritis"" VARCHAR(16777216),
	""symptom_urinary_incontinence"" VARCHAR(16777216),
	""symptom_urinary_tract_infection"" VARCHAR(16777216),
	""symptom_urinary_urgency"" VARCHAR(16777216),
	""symptom_uterine_contraction"" VARCHAR(16777216),
	""symptom_vaginal_bleeding"" VARCHAR(16777216),
	""symptom_vaginal_discharge"" VARCHAR(16777216),
	""symptom_vaginitis"" VARCHAR(16777216),
	""symptom_varicose_veins"" VARCHAR(16777216),
	""symptom_vasculitis"" VARCHAR(16777216),
	""symptom_ventricular_fibrillation"" VARCHAR(16777216),
	""symptom_ventricular_tachycardia"" VARCHAR(16777216),
	""symptom_vertigo"" VARCHAR(16777216),
	""symptom_viral_pneumonia"" VARCHAR(16777216),
	""symptom_visual_acuity"" VARCHAR(16777216),
	""symptom_vomiting"" VARCHAR(16777216),
	""symptom_wart"" VARCHAR(16777216),
	""symptom_water_retention"" VARCHAR(16777216),
	""symptom_weakness"" VARCHAR(16777216),
	""symptom_weight_gain"" VARCHAR(16777216),
	""symptom_wheeze"" VARCHAR(16777216),
	""symptom_xeroderma"" VARCHAR(16777216),
	""symptom_xerostomia"" VARCHAR(16777216),
	""symptom_yawn"" VARCHAR(16777216),
	""symptom_hyperhidrosis"" VARCHAR(16777216),
	""symptom_pancreatitis"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY', 'SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY']
Database Name: COVID19_SYMPTOM_SEARCH
Schema Name: COVID19_SYMPTOM_SEARCH
,3
table_name,SYMPTOM_SEARCH_COUNTRY_WEEKLY
description,
DDL,"create or replace TABLE SYMPTOM_SEARCH_COUNTRY_WEEKLY (
	""country_region_code"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""sub_region_1"" VARCHAR(16777216),
	""sub_region_1_code"" VARCHAR(16777216),
	""sub_region_2"" VARCHAR(16777216),
	""sub_region_2_code"" VARCHAR(16777216),
	""place_id"" VARCHAR(16777216),
	""date"" VARCHAR(16777216),
	""symptom_abdominal_obesity"" VARCHAR(16777216),
	""symptom_abdominal_pain"" VARCHAR(16777216),
	""symptom_acne"" VARCHAR(16777216),
	""symptom_actinic_keratosis"" VARCHAR(16777216),
	""symptom_acute_bronchitis"" VARCHAR(16777216),
	""symptom_adrenal_crisis"" VARCHAR(16777216),
	""symptom_ageusia"" VARCHAR(16777216),
	""symptom_alcoholism"" VARCHAR(16777216),
	""symptom_allergic_conjunctivitis"" VARCHAR(16777216),
	""symptom_allergy"" VARCHAR(16777216),
	""symptom_amblyopia"" VARCHAR(16777216),
	""symptom_amenorrhea"" VARCHAR(16777216),
	""symptom_amnesia"" VARCHAR(16777216),
	""symptom_anal_fissure"" VARCHAR(16777216),
	""symptom_anaphylaxis"" VARCHAR(16777216),
	""symptom_anemia"" VARCHAR(16777216),
	""symptom_angina_pectoris"" VARCHAR(16777216),
	""symptom_angioedema"" VARCHAR(16777216),
	""symptom_angular_cheilitis"" VARCHAR(16777216),
	""symptom_anosmia"" VARCHAR(16777216),
	""symptom_anxiety"" VARCHAR(16777216),
	""symptom_aphasia"" VARCHAR(16777216),
	""symptom_aphonia"" VARCHAR(16777216),
	""symptom_apnea"" VARCHAR(16777216),
	""symptom_arthralgia"" VARCHAR(16777216),
	""symptom_arthritis"" VARCHAR(16777216),
	""symptom_ascites"" VARCHAR(16777216),
	""symptom_asperger_syndrome"" VARCHAR(16777216),
	""symptom_asphyxia"" VARCHAR(16777216),
	""symptom_asthma"" VARCHAR(16777216),
	""symptom_astigmatism"" VARCHAR(16777216),
	""symptom_ataxia"" VARCHAR(16777216),
	""symptom_atheroma"" VARCHAR(16777216),
	""symptom_attention_deficit_hyperactivity_disorder"" VARCHAR(16777216),
	""symptom_auditory_hallucination"" VARCHAR(16777216),
	""symptom_autoimmune_disease"" VARCHAR(16777216),
	""symptom_avoidant_personality_disorder"" VARCHAR(16777216),
	""symptom_back_pain"" VARCHAR(16777216),
	""symptom_bacterial_vaginosis"" VARCHAR(16777216),
	""symptom_balance_disorder"" VARCHAR(16777216),
	""symptom_beau_s_lines"" VARCHAR(16777216),
	""symptom_bell_s_palsy"" VARCHAR(16777216),
	""symptom_biliary_colic"" VARCHAR(16777216),
	""symptom_binge_eating"" VARCHAR(16777216),
	""symptom_bleeding"" VARCHAR(16777216),
	""symptom_bleeding_on_probing"" VARCHAR(16777216),
	""symptom_blepharospasm"" VARCHAR(16777216),
	""symptom_bloating"" VARCHAR(16777216),
	""symptom_blood_in_stool"" VARCHAR(16777216),
	""symptom_blurred_vision"" VARCHAR(16777216),
	""symptom_blushing"" VARCHAR(16777216),
	""symptom_boil"" VARCHAR(16777216),
	""symptom_bone_fracture"" VARCHAR(16777216),
	""symptom_bone_tumor"" VARCHAR(16777216),
	""symptom_bowel_obstruction"" VARCHAR(16777216),
	""symptom_bradycardia"" VARCHAR(16777216),
	""symptom_braxton_hicks_contractions"" VARCHAR(16777216),
	""symptom_breakthrough_bleeding"" VARCHAR(16777216),
	""symptom_breast_pain"" VARCHAR(16777216),
	""symptom_bronchitis"" VARCHAR(16777216),
	""symptom_bruise"" VARCHAR(16777216),
	""symptom_bruxism"" VARCHAR(16777216),
	""symptom_bunion"" VARCHAR(16777216),
	""symptom_burn"" VARCHAR(16777216),
	""symptom_burning_chest_pain"" VARCHAR(16777216),
	""symptom_burning_mouth_syndrome"" VARCHAR(16777216),
	""symptom_candidiasis"" VARCHAR(16777216),
	""symptom_canker_sore"" VARCHAR(16777216),
	""symptom_cardiac_arrest"" VARCHAR(16777216),
	""symptom_carpal_tunnel_syndrome"" VARCHAR(16777216),
	""symptom_cataplexy"" VARCHAR(16777216),
	""symptom_cataract"" VARCHAR(16777216),
	""symptom_chancre"" VARCHAR(16777216),
	""symptom_cheilitis"" VARCHAR(16777216),
	""symptom_chest_pain"" VARCHAR(16777216),
	""symptom_chills"" VARCHAR(16777216),
	""symptom_chorea"" VARCHAR(16777216),
	""symptom_chronic_pain"" VARCHAR(16777216),
	""symptom_cirrhosis"" VARCHAR(16777216),
	""symptom_cleft_lip_and_cleft_palate"" VARCHAR(16777216),
	""symptom_clouding_of_consciousness"" VARCHAR(16777216),
	""symptom_cluster_headache"" VARCHAR(16777216),
	""symptom_colitis"" VARCHAR(16777216),
	""symptom_coma"" VARCHAR(16777216),
	""symptom_common_cold"" VARCHAR(16777216),
	""symptom_compulsive_behavior"" VARCHAR(16777216),
	""symptom_compulsive_hoarding"" VARCHAR(16777216),
	""symptom_confusion"" VARCHAR(16777216),
	""symptom_congenital_heart_defect"" VARCHAR(16777216),
	""symptom_conjunctivitis"" VARCHAR(16777216),
	""symptom_constipation"" VARCHAR(16777216),
	""symptom_convulsion"" VARCHAR(16777216),
	""symptom_cough"" VARCHAR(16777216),
	""symptom_crackles"" VARCHAR(16777216),
	""symptom_cramp"" VARCHAR(16777216),
	""symptom_crepitus"" VARCHAR(16777216),
	""symptom_croup"" VARCHAR(16777216),
	""symptom_cyanosis"" VARCHAR(16777216),
	""symptom_dandruff"" VARCHAR(16777216),
	""symptom_delayed_onset_muscle_soreness"" VARCHAR(16777216),
	""symptom_dementia"" VARCHAR(16777216),
	""symptom_dentin_hypersensitivity"" VARCHAR(16777216),
	""symptom_depersonalization"" VARCHAR(16777216),
	""symptom_depression"" VARCHAR(16777216),
	""symptom_dermatitis"" VARCHAR(16777216),
	""symptom_desquamation"" VARCHAR(16777216),
	""symptom_developmental_disability"" VARCHAR(16777216),
	""symptom_diabetes"" VARCHAR(16777216),
	""symptom_diabetic_ketoacidosis"" VARCHAR(16777216),
	""symptom_diarrhea"" VARCHAR(16777216),
	""symptom_dizziness"" VARCHAR(16777216),
	""symptom_dry_eye_syndrome"" VARCHAR(16777216),
	""symptom_dysautonomia"" VARCHAR(16777216),
	""symptom_dysgeusia"" VARCHAR(16777216),
	""symptom_dysmenorrhea"" VARCHAR(16777216),
	""symptom_dyspareunia"" VARCHAR(16777216),
	""symptom_dysphagia"" VARCHAR(16777216),
	""symptom_dysphoria"" VARCHAR(16777216),
	""symptom_dystonia"" VARCHAR(16777216),
	""symptom_dysuria"" VARCHAR(16777216),
	""symptom_ear_pain"" VARCHAR(16777216),
	""symptom_eczema"" VARCHAR(16777216),
	""symptom_edema"" VARCHAR(16777216),
	""symptom_encephalitis"" VARCHAR(16777216),
	""symptom_encephalopathy"" VARCHAR(16777216),
	""symptom_epidermoid_cyst"" VARCHAR(16777216),
	""symptom_epilepsy"" VARCHAR(16777216),
	""symptom_epiphora"" VARCHAR(16777216),
	""symptom_erectile_dysfunction"" VARCHAR(16777216),
	""symptom_erythema"" VARCHAR(16777216),
	""symptom_erythema_chronicum_migrans"" VARCHAR(16777216),
	""symptom_esophagitis"" VARCHAR(16777216),
	""symptom_excessive_daytime_sleepiness"" VARCHAR(16777216),
	""symptom_eye_pain"" VARCHAR(16777216),
	""symptom_eye_strain"" VARCHAR(16777216),
	""symptom_facial_nerve_paralysis"" VARCHAR(16777216),
	""symptom_facial_swelling"" VARCHAR(16777216),
	""symptom_fasciculation"" VARCHAR(16777216),
	""symptom_fatigue"" VARCHAR(16777216),
	""symptom_fatty_liver_disease"" VARCHAR(16777216),
	""symptom_fecal_incontinence"" VARCHAR(16777216),
	""symptom_fever"" VARCHAR(16777216),
	""symptom_fibrillation"" VARCHAR(16777216),
	""symptom_fibrocystic_breast_changes"" VARCHAR(16777216),
	""symptom_fibromyalgia"" VARCHAR(16777216),
	""symptom_flatulence"" VARCHAR(16777216),
	""symptom_floater"" VARCHAR(16777216),
	""symptom_focal_seizure"" VARCHAR(16777216),
	""symptom_folate_deficiency"" VARCHAR(16777216),
	""symptom_food_craving"" VARCHAR(16777216),
	""symptom_food_intolerance"" VARCHAR(16777216),
	""symptom_frequent_urination"" VARCHAR(16777216),
	""symptom_gastroesophageal_reflux_disease"" VARCHAR(16777216),
	""symptom_gastroparesis"" VARCHAR(16777216),
	""symptom_generalized_anxiety_disorder"" VARCHAR(16777216),
	""symptom_generalized_tonic_clonic_seizure"" VARCHAR(16777216),
	""symptom_genital_wart"" VARCHAR(16777216),
	""symptom_gingival_recession"" VARCHAR(16777216),
	""symptom_gingivitis"" VARCHAR(16777216),
	""symptom_globus_pharyngis"" VARCHAR(16777216),
	""symptom_goitre"" VARCHAR(16777216),
	""symptom_gout"" VARCHAR(16777216),
	""symptom_grandiosity"" VARCHAR(16777216),
	""symptom_granuloma"" VARCHAR(16777216),
	""symptom_guilt"" VARCHAR(16777216),
	""symptom_hair_loss"" VARCHAR(16777216),
	""symptom_halitosis"" VARCHAR(16777216),
	""symptom_hay_fever"" VARCHAR(16777216),
	""symptom_headache"" VARCHAR(16777216),
	""symptom_heart_arrhythmia"" VARCHAR(16777216),
	""symptom_heart_murmur"" VARCHAR(16777216),
	""symptom_heartburn"" VARCHAR(16777216),
	""symptom_hematochezia"" VARCHAR(16777216),
	""symptom_hematoma"" VARCHAR(16777216),
	""symptom_hematuria"" VARCHAR(16777216),
	""symptom_hemolysis"" VARCHAR(16777216),
	""symptom_hemoptysis"" VARCHAR(16777216),
	""symptom_hemorrhoids"" VARCHAR(16777216),
	""symptom_hepatic_encephalopathy"" VARCHAR(16777216),
	""symptom_hepatitis"" VARCHAR(16777216),
	""symptom_hepatotoxicity"" VARCHAR(16777216),
	""symptom_hiccup"" VARCHAR(16777216),
	""symptom_hip_pain"" VARCHAR(16777216),
	""symptom_hives"" VARCHAR(16777216),
	""symptom_hot_flash"" VARCHAR(16777216),
	""symptom_hydrocephalus"" VARCHAR(16777216),
	""symptom_hypercalcaemia"" VARCHAR(16777216),
	""symptom_hypercapnia"" VARCHAR(16777216),
	""symptom_hypercholesterolemia"" VARCHAR(16777216),
	""symptom_hyperemesis_gravidarum"" VARCHAR(16777216),
	""symptom_hyperglycemia"" VARCHAR(16777216),
	""symptom_hyperkalemia"" VARCHAR(16777216),
	""symptom_hyperlipidemia"" VARCHAR(16777216),
	""symptom_hypermobility"" VARCHAR(16777216),
	""symptom_hyperpigmentation"" VARCHAR(16777216),
	""symptom_hypersomnia"" VARCHAR(16777216),
	""symptom_hypertension"" VARCHAR(16777216),
	""symptom_hyperthermia"" VARCHAR(16777216),
	""symptom_hyperthyroidism"" VARCHAR(16777216),
	""symptom_hypertriglyceridemia"" VARCHAR(16777216),
	""symptom_hypertrophy"" VARCHAR(16777216),
	""symptom_hyperventilation"" VARCHAR(16777216),
	""symptom_hypocalcaemia"" VARCHAR(16777216),
	""symptom_hypochondriasis"" VARCHAR(16777216),
	""symptom_hypoglycemia"" VARCHAR(16777216),
	""symptom_hypogonadism"" VARCHAR(16777216),
	""symptom_hypokalemia"" VARCHAR(16777216),
	""symptom_hypomania"" VARCHAR(16777216),
	""symptom_hyponatremia"" VARCHAR(16777216),
	""symptom_hypotension"" VARCHAR(16777216),
	""symptom_hypothyroidism"" VARCHAR(16777216),
	""symptom_hypoxemia"" VARCHAR(16777216),
	""symptom_hypoxia"" VARCHAR(16777216),
	""symptom_impetigo"" VARCHAR(16777216),
	""symptom_implantation_bleeding"" VARCHAR(16777216),
	""symptom_impulsivity"" VARCHAR(16777216),
	""symptom_indigestion"" VARCHAR(16777216),
	""symptom_infection"" VARCHAR(16777216),
	""symptom_inflammation"" VARCHAR(16777216),
	""symptom_inflammatory_bowel_disease"" VARCHAR(16777216),
	""symptom_ingrown_hair"" VARCHAR(16777216),
	""symptom_insomnia"" VARCHAR(16777216),
	""symptom_insulin_resistance"" VARCHAR(16777216),
	""symptom_intermenstrual_bleeding"" VARCHAR(16777216),
	""symptom_intracranial_pressure"" VARCHAR(16777216),
	""symptom_iron_deficiency"" VARCHAR(16777216),
	""symptom_irregular_menstruation"" VARCHAR(16777216),
	""symptom_itch"" VARCHAR(16777216),
	""symptom_jaundice"" VARCHAR(16777216),
	""symptom_kidney_failure"" VARCHAR(16777216),
	""symptom_kidney_stone"" VARCHAR(16777216),
	""symptom_knee_pain"" VARCHAR(16777216),
	""symptom_kyphosis"" VARCHAR(16777216),
	""symptom_lactose_intolerance"" VARCHAR(16777216),
	""symptom_laryngitis"" VARCHAR(16777216),
	""symptom_leg_cramps"" VARCHAR(16777216),
	""symptom_lesion"" VARCHAR(16777216),
	""symptom_leukorrhea"" VARCHAR(16777216),
	""symptom_lightheadedness"" VARCHAR(16777216),
	""symptom_low_back_pain"" VARCHAR(16777216),
	""symptom_low_grade_fever"" VARCHAR(16777216),
	""symptom_lymphedema"" VARCHAR(16777216),
	""symptom_major_depressive_disorder"" VARCHAR(16777216),
	""symptom_malabsorption"" VARCHAR(16777216),
	""symptom_male_infertility"" VARCHAR(16777216),
	""symptom_manic_disorder"" VARCHAR(16777216),
	""symptom_melasma"" VARCHAR(16777216),
	""symptom_melena"" VARCHAR(16777216),
	""symptom_meningitis"" VARCHAR(16777216),
	""symptom_menorrhagia"" VARCHAR(16777216),
	""symptom_middle_back_pain"" VARCHAR(16777216),
	""symptom_migraine"" VARCHAR(16777216),
	""symptom_milium"" VARCHAR(16777216),
	""symptom_mitral_insufficiency"" VARCHAR(16777216),
	""symptom_mood_disorder"" VARCHAR(16777216),
	""symptom_mood_swing"" VARCHAR(16777216),
	""symptom_morning_sickness"" VARCHAR(16777216),
	""symptom_motion_sickness"" VARCHAR(16777216),
	""symptom_mouth_ulcer"" VARCHAR(16777216),
	""symptom_muscle_atrophy"" VARCHAR(16777216),
	""symptom_muscle_weakness"" VARCHAR(16777216),
	""symptom_myalgia"" VARCHAR(16777216),
	""symptom_mydriasis"" VARCHAR(16777216),
	""symptom_myocardial_infarction"" VARCHAR(16777216),
	""symptom_myoclonus"" VARCHAR(16777216),
	""symptom_nasal_congestion"" VARCHAR(16777216),
	""symptom_nasal_polyp"" VARCHAR(16777216),
	""symptom_nausea"" VARCHAR(16777216),
	""symptom_neck_mass"" VARCHAR(16777216),
	""symptom_neck_pain"" VARCHAR(16777216),
	""symptom_neonatal_jaundice"" VARCHAR(16777216),
	""symptom_nerve_injury"" VARCHAR(16777216),
	""symptom_neuralgia"" VARCHAR(16777216),
	""symptom_neutropenia"" VARCHAR(16777216),
	""symptom_night_sweats"" VARCHAR(16777216),
	""symptom_night_terror"" VARCHAR(16777216),
	""symptom_nocturnal_enuresis"" VARCHAR(16777216),
	""symptom_nodule"" VARCHAR(16777216),
	""symptom_nosebleed"" VARCHAR(16777216),
	""symptom_nystagmus"" VARCHAR(16777216),
	""symptom_obesity"" VARCHAR(16777216),
	""symptom_onychorrhexis"" VARCHAR(16777216),
	""symptom_oral_candidiasis"" VARCHAR(16777216),
	""symptom_orthostatic_hypotension"" VARCHAR(16777216),
	""symptom_osteopenia"" VARCHAR(16777216),
	""symptom_osteophyte"" VARCHAR(16777216),
	""symptom_osteoporosis"" VARCHAR(16777216),
	""symptom_otitis"" VARCHAR(16777216),
	""symptom_otitis_externa"" VARCHAR(16777216),
	""symptom_otitis_media"" VARCHAR(16777216),
	""symptom_pain"" VARCHAR(16777216),
	""symptom_palpitations"" VARCHAR(16777216),
	""symptom_panic_attack"" VARCHAR(16777216),
	""symptom_papule"" VARCHAR(16777216),
	""symptom_paranoia"" VARCHAR(16777216),
	""symptom_paresthesia"" VARCHAR(16777216),
	""symptom_pelvic_inflammatory_disease"" VARCHAR(16777216),
	""symptom_pericarditis"" VARCHAR(16777216),
	""symptom_periodontal_disease"" VARCHAR(16777216),
	""symptom_periorbital_puffiness"" VARCHAR(16777216),
	""symptom_peripheral_neuropathy"" VARCHAR(16777216),
	""symptom_perspiration"" VARCHAR(16777216),
	""symptom_petechia"" VARCHAR(16777216),
	""symptom_phlegm"" VARCHAR(16777216),
	""symptom_photodermatitis"" VARCHAR(16777216),
	""symptom_photophobia"" VARCHAR(16777216),
	""symptom_photopsia"" VARCHAR(16777216),
	""symptom_pleural_effusion"" VARCHAR(16777216),
	""symptom_pleurisy"" VARCHAR(16777216),
	""symptom_pneumonia"" VARCHAR(16777216),
	""symptom_podalgia"" VARCHAR(16777216),
	""symptom_polycythemia"" VARCHAR(16777216),
	""symptom_polydipsia"" VARCHAR(16777216),
	""symptom_polyneuropathy"" VARCHAR(16777216),
	""symptom_polyuria"" VARCHAR(16777216),
	""symptom_poor_posture"" VARCHAR(16777216),
	""symptom_post_nasal_drip"" VARCHAR(16777216),
	""symptom_postural_orthostatic_tachycardia_syndrome"" VARCHAR(16777216),
	""symptom_prediabetes"" VARCHAR(16777216),
	""symptom_proteinuria"" VARCHAR(16777216),
	""symptom_pruritus_ani"" VARCHAR(16777216),
	""symptom_psychosis"" VARCHAR(16777216),
	""symptom_ptosis"" VARCHAR(16777216),
	""symptom_pulmonary_edema"" VARCHAR(16777216),
	""symptom_pulmonary_hypertension"" VARCHAR(16777216),
	""symptom_purpura"" VARCHAR(16777216),
	""symptom_pus"" VARCHAR(16777216),
	""symptom_pyelonephritis"" VARCHAR(16777216),
	""symptom_radiculopathy"" VARCHAR(16777216),
	""symptom_rectal_pain"" VARCHAR(16777216),
	""symptom_rectal_prolapse"" VARCHAR(16777216),
	""symptom_red_eye"" VARCHAR(16777216),
	""symptom_renal_colic"" VARCHAR(16777216),
	""symptom_restless_legs_syndrome"" VARCHAR(16777216),
	""symptom_rheum"" VARCHAR(16777216),
	""symptom_rhinitis"" VARCHAR(16777216),
	""symptom_rhinorrhea"" VARCHAR(16777216),
	""symptom_rosacea"" VARCHAR(16777216),
	""symptom_round_ligament_pain"" VARCHAR(16777216),
	""symptom_rumination"" VARCHAR(16777216),
	""symptom_scar"" VARCHAR(16777216),
	""symptom_sciatica"" VARCHAR(16777216),
	""symptom_scoliosis"" VARCHAR(16777216),
	""symptom_seborrheic_dermatitis"" VARCHAR(16777216),
	""symptom_self_harm"" VARCHAR(16777216),
	""symptom_sensitivity_to_sound"" VARCHAR(16777216),
	""symptom_sexual_dysfunction"" VARCHAR(16777216),
	""symptom_shallow_breathing"" VARCHAR(16777216),
	""symptom_sharp_pain"" VARCHAR(16777216),
	""symptom_shivering"" VARCHAR(16777216),
	""symptom_shortness_of_breath"" VARCHAR(16777216),
	""symptom_shyness"" VARCHAR(16777216),
	""symptom_sinusitis"" VARCHAR(16777216),
	""symptom_skin_condition"" VARCHAR(16777216),
	""symptom_skin_rash"" VARCHAR(16777216),
	""symptom_skin_tag"" VARCHAR(16777216),
	""symptom_skin_ulcer"" VARCHAR(16777216),
	""symptom_sleep_apnea"" VARCHAR(16777216),
	""symptom_sleep_deprivation"" VARCHAR(16777216),
	""symptom_sleep_disorder"" VARCHAR(16777216),
	""symptom_snoring"" VARCHAR(16777216),
	""symptom_sore_throat"" VARCHAR(16777216),
	""symptom_spasticity"" VARCHAR(16777216),
	""symptom_splenomegaly"" VARCHAR(16777216),
	""symptom_sputum"" VARCHAR(16777216),
	""symptom_stomach_rumble"" VARCHAR(16777216),
	""symptom_strabismus"" VARCHAR(16777216),
	""symptom_stretch_marks"" VARCHAR(16777216),
	""symptom_stridor"" VARCHAR(16777216),
	""symptom_stroke"" VARCHAR(16777216),
	""symptom_stuttering"" VARCHAR(16777216),
	""symptom_subdural_hematoma"" VARCHAR(16777216),
	""symptom_suicidal_ideation"" VARCHAR(16777216),
	""symptom_swelling"" VARCHAR(16777216),
	""symptom_swollen_feet"" VARCHAR(16777216),
	""symptom_swollen_lymph_nodes"" VARCHAR(16777216),
	""symptom_syncope"" VARCHAR(16777216),
	""symptom_tachycardia"" VARCHAR(16777216),
	""symptom_tachypnea"" VARCHAR(16777216),
	""symptom_telangiectasia"" VARCHAR(16777216),
	""symptom_tenderness"" VARCHAR(16777216),
	""symptom_testicular_pain"" VARCHAR(16777216),
	""symptom_throat_irritation"" VARCHAR(16777216),
	""symptom_thrombocytopenia"" VARCHAR(16777216),
	""symptom_thyroid_nodule"" VARCHAR(16777216),
	""symptom_tic"" VARCHAR(16777216),
	""symptom_tinnitus"" VARCHAR(16777216),
	""symptom_tonsillitis"" VARCHAR(16777216),
	""symptom_toothache"" VARCHAR(16777216),
	""symptom_tremor"" VARCHAR(16777216),
	""symptom_trichoptilosis"" VARCHAR(16777216),
	""symptom_tumor"" VARCHAR(16777216),
	""symptom_type_2_diabetes"" VARCHAR(16777216),
	""symptom_unconsciousness"" VARCHAR(16777216),
	""symptom_underweight"" VARCHAR(16777216),
	""symptom_upper_respiratory_tract_infection"" VARCHAR(16777216),
	""symptom_urethritis"" VARCHAR(16777216),
	""symptom_urinary_incontinence"" VARCHAR(16777216),
	""symptom_urinary_tract_infection"" VARCHAR(16777216),
	""symptom_urinary_urgency"" VARCHAR(16777216),
	""symptom_uterine_contraction"" VARCHAR(16777216),
	""symptom_vaginal_bleeding"" VARCHAR(16777216),
	""symptom_vaginal_discharge"" VARCHAR(16777216),
	""symptom_vaginitis"" VARCHAR(16777216),
	""symptom_varicose_veins"" VARCHAR(16777216),
	""symptom_vasculitis"" VARCHAR(16777216),
	""symptom_ventricular_fibrillation"" VARCHAR(16777216),
	""symptom_ventricular_tachycardia"" VARCHAR(16777216),
	""symptom_vertigo"" VARCHAR(16777216),
	""symptom_viral_pneumonia"" VARCHAR(16777216),
	""symptom_visual_acuity"" VARCHAR(16777216),
	""symptom_vomiting"" VARCHAR(16777216),
	""symptom_wart"" VARCHAR(16777216),
	""symptom_water_retention"" VARCHAR(16777216),
	""symptom_weakness"" VARCHAR(16777216),
	""symptom_weight_gain"" VARCHAR(16777216),
	""symptom_wheeze"" VARCHAR(16777216),
	""symptom_xeroderma"" VARCHAR(16777216),
	""symptom_xerostomia"" VARCHAR(16777216),
	""symptom_yawn"" VARCHAR(16777216),
	""symptom_hyperhidrosis"" VARCHAR(16777216),
	""symptom_pancreatitis"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'COVID19_SYMPTOM_SEARCH': {'COVID19_SYMPTOM_SEARCH': ['SYMPTOM_SEARCH_SUB_REGION_2_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_2_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_1_DAILY', 'SYMPTOM_SEARCH_COUNTRY_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY', 'SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY', 'SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY', 'SYMPTOM_SEARCH_COUNTRY_WEEKLY']}}
Begin Exploring Related Columns
**Relevant Columns and Their Potential Usage:**

- `"date"`: Used to filter data within the specified date ranges (2019 and 2020).
- `"sub_region_2"`: Used to filter records for the five New York City counties.
- `"symptom_Anosmia"`: Used to retrieve search frequency data for 'Anosmia'.
- `"country_region"`: Could be used to ensure data is from the United States.
- `"country_region_code"`: May be used to verify the country code (e.g., 'US').

**Conditions That May Be Used:**

- Filter by counties:
  - `"sub_region_2"` IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
- Filter by date ranges:
  - For 2019 data: `"date"` BETWEEN '2019-01-01' AND '2019-12-31'
  - For 2020 data: `"date"` BETWEEN '2020-01-01' AND '2020-12-31'
- Ensure non-null values for `"symptom_Anosmia"`
- Filter by country:
  - `"country_region_code"` = 'US' or `"country_region"` = 'United States'

**SQL Queries:**

1. **Retrieve all dates and 'Anosmia' search frequencies:**

   ```sql
   SELECT "date", "symptom_Anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
   ```

2. **Get a list of distinct counties (sub regions):**

   ```sql
   SELECT DISTINCT "sub_region_2"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
   ```

3. **Retrieve data for the five NYC counties in 2019:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
   LIMIT 100;
   ```

4. **Retrieve data for the five NYC counties in 2020:**

   ```sql
   SELECT "date", "sub_region_2", "symptom_Anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

5. **Calculate average 'Anosmia' search frequency for each county in 2019:**

   ```sql
   SELECT "sub_region_2", AVG("symptom_Anosmia") AS "avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

6. **Calculate average 'Anosmia' search frequency for each county in 2020:**

   ```sql
   SELECT "sub_region_2", AVG("symptom_Anosmia") AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

7. **Find the overall average 'Anosmia' search frequency for the five counties in 2019:**

   ```sql
   SELECT AVG("symptom_Anosmia") AS "overall_avg_anosmia_2019"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2019-01-01' AND '2019-12-31'
   LIMIT 100;
   ```

8. **Find the overall average 'Anosmia' search frequency for the five counties in 2020:**

   ```sql
   SELECT AVG("symptom_Anosmia") AS "overall_avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
     AND "date" BETWEEN '2020-01-01' AND '2020-12-31'
   LIMIT 100;
   ```

9. **Compare average search frequencies between 2019 and 2020 for each county:**

   ```sql
   SELECT "sub_region_2",
     AVG(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "avg_anosmia_2019",
     AVG(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
   ```

10. **Retrieve the highest 'Anosmia' search frequencies for the five counties:**

    ```sql
    SELECT "date", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    ORDER BY "symptom_Anosmia" DESC
    LIMIT 100;
    ```

11. **List all 'Anosmia' search frequencies along with the year for the five counties:**

    ```sql
    SELECT EXTRACT(YEAR FROM "date") AS "year", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND "date" BETWEEN '2019-01-01' AND '2020-12-31'
    LIMIT 100;
    ```

12. **Get distinct dates when 'Anosmia' search frequency was recorded for the five counties:**

    ```sql
    SELECT DISTINCT "date"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "symptom_Anosmia" IS NOT NULL
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    LIMIT 100;
    ```

13. **Find the number of records per county for 2019 and 2020:**

    ```sql
    SELECT "sub_region_2", COUNT(*) AS "record_count"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    GROUP BY "sub_region_2"
    LIMIT 100;
    ```

14. **List 'Anosmia' search frequencies above a certain threshold in 2020:**

    ```sql
    SELECT "date", "sub_region_2", "symptom_Anosmia"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2020-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
      AND "symptom_Anosmia" > 0.5
    LIMIT 100;
    ```

15. **Retrieve the minimum and maximum 'Anosmia' search frequencies for 2019 and 2020:**

    ```sql
    SELECT
      MIN(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2019",
      MAX(CASE WHEN "date" BETWEEN '2019-01-01' AND '2019-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2019",
      MIN(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "min_anosmia_2020",
      MAX(CASE WHEN "date" BETWEEN '2020-01-01' AND '2020-12-31' THEN "symptom_Anosmia" END) AS "max_anosmia_2020"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    LIMIT 100;
    ```

These queries help in understanding the data related to 'Anosmia' search frequencies in the specified counties and time periods, which is essential for calculating the overall percentage change requested in the task.Query:
SELECT "date", "symptom_anosmia"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
Answer:
date,symptom_anosmia
2022-01-17,
2022-02-07,
2022-03-07,
2022-03-21,
2022-08-22,
2023-08-07,
2023-02-06,
2023-09-04,
2023-07-10,
2023-07-31,
2023-04-03,
2023-01-23,
2023-01-16,
2023-06-05,
2023-03-27,
2023-02-13,
2023-04-17,
2023-02-27,
2023-03-06,
2023-09-04,
2023-10-30,
2023-06-05,
2023-04-03,
2024-02-12,
2024-04-15,
2024-04-08,
2024-01-15,
2024-06-17,
2024-08-05,
2024-01-01,
2024-07-01,
2024-03-04,
2024-09-09,
2024-03-25,
2023-07-24,
2023-01-16,
2023-11-06,
2023-10-09,
2023-08-28,
2023-06-26,
2023-10-30,
2023-03-20,
2024-08-05,
2023-08-07,
2023-06-26,
2023-10-09,
2023-08-28,
2023-05-29,
2023-06-26,
2023-05-08,
2023-01-09,
2023-12-04,
2023-03-27,
2023-08-07,
2023-04-03,
2023-06-05,
2023-12-25,
2024-01-15,
2024-08-05,
2024-04-01,
2024-09-02,
2024-01-01,
2024-06-10,
2024-03-18,
2023-05-22,
2023-04-03,
2024-07-22,
2024-03-25,
2024-03-18,
2024-01-01,
2024-08-19,
2024-06-24,
2024-09-30,
2023-01-23,
2023-01-23,
2023-11-06,
2023-10-30,
2023-07-17,
2023-03-06,
2024-01-15,
2024-08-12,
2024-01-08,
2024-09-09,
2024-07-01,
2024-06-10,
2023-01-23,
2023-03-27,
2023-12-18,
2023-08-14,
2023-05-01,
2023-10-09,
2023-07-24,
2023-04-24,
2024-05-27,
2024-09-02,
2024-03-11,
2024-03-04,
2024-08-26,
2024-02-19,
2024-03-18,
Query:
SELECT DISTINCT "sub_region_2"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   LIMIT 100;
Answer:
sub_region_2
Mole Valley District
Washington County
Story County
Chichester District
Epsom and Ewell District
Waverley Council
Grady County
Stewart County
Fentress County
Tippah County
Cootamundra-Gundagai Regional Council
Cochran County
Arenac County
Brule County
St. Joseph County
Wichita County
Tenterfield Shire Council
Wilbarger County
Camden County
Nillumbik Shire
District Council of Robe
Eurobodalla Shire Council
Roosevelt County
Hocking County
Otoe County
Shire of Mundaring
Jackson County
Rushmoor District
Dare County
Hawkins County
Caldwell County
Furnas County
Galax
Oxford
Imperial County
Havant
Dickinson County
Richmond Valley Council
San Jacinto County
Tamworth Regional Council
Port Augusta City Council
Southern Midlands Council
Ransom County
Ritchie County
Avery County
Copiah County
Ware County
Sharp County
Juneau
Hamlin County
Georgetown County
Torridge District
Menard County
El Dorado County
Pulaski County
Essex County
Livingston County
New York County
Brunswick County
Snohomish County
Greater Geelong City
Cape Girardeau County
Del Norte County
Owsley County
Los Alamos County
Camp County
Gwinnett County
Strafford County
Stark County
Giles County
Gonzales County
Town of Port Hedland
Shire of Narrogin
Corson County
Marquette County
Oscoda County
Caddo County
Avoyelles Parish
Labette County
Shire of Augusta-Margaret River
St. Charles Parish
Ballard County
Zapata County
Garrard County
Roscommon County
Alcona County
Orange County
London Borough of Lambeth
London Borough of Camden
Kenton County
Monroe County
Hardeman County
Vermillion County
Bear Lake County
Antelope County
Wellington Shire
Southeast Fairbanks
Lanier County
Charles Mix County
Hinckley and Bosworth District
Query:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
LIMIT 100;
Answer:
date,sub_region_2,symptom_anosmia
2019-03-11,Kings County,
2019-09-23,Kings County,
2019-05-06,Richmond County,
2019-01-07,Richmond County,
2019-02-18,Richmond County,
2019-01-28,Richmond County,
2019-09-16,Richmond County,
2019-05-27,Kings County,
2019-10-14,Kings County,
2019-02-11,Kings County,
2019-05-06,Kings County,
2019-06-24,Richmond County,0.13
2019-04-01,Richmond County,
2019-04-08,Richmond County,
2019-12-09,Richmond County,
2019-09-30,Kings County,
2019-03-18,Kings County,
2019-01-21,Kings County,
2019-07-08,Kings County,
2019-12-30,New York County,0.06
2019-11-25,Kings County,0.07
2019-05-06,New York County,0.05
2019-06-24,Queens County,0.05
2019-06-03,Kings County,0.07
2019-02-04,Kings County,0.05
2019-03-25,Kings County,0.06
2019-12-16,Queens County,0.06
2019-06-10,Richmond County,
2019-12-02,Bronx County,0.05
2019-03-11,Kings County,0.06
2019-02-11,Queens County,0.04
2019-06-10,Queens County,0.05
2019-02-25,Bronx County,0.04
2019-07-08,Kings County,0.05
2019-05-13,Kings County,0.07
2019-11-18,Queens County,0.06
2019-11-18,Bronx County,0.04
2019-09-30,Queens County,0.06
2019-09-02,Kings County,0.05
2019-04-29,Kings County,0.06
2019-02-04,Richmond County,0.05
2019-03-18,Bronx County,0.05
2019-12-02,Richmond County,0.04
2019-01-28,Richmond County,0.04
2019-10-07,Bronx County,0.06
2019-06-17,Richmond County,0.05
2019-10-21,Bronx County,0.03
2019-08-12,Bronx County,0.04
2019-09-09,Richmond County,0.06
2019-03-25,Richmond County,0.07
2019-09-16,Richmond County,0.07
2019-02-04,Richmond County,
2019-02-25,Kings County,0.06
2019-01-14,Kings County,0.07
2019-07-01,Kings County,0.05
2019-02-04,Bronx County,0.07
2019-02-25,Queens County,0.06
2019-12-02,Kings County,0.06
2019-03-04,Kings County,0.04
2019-03-04,Queens County,0.05
2019-06-10,Kings County,0.06
2019-11-11,Bronx County,0.06
2019-01-07,Bronx County,0.05
2019-09-23,Kings County,0.05
2019-12-30,Kings County,0.07
2019-02-18,Queens County,0.05
2019-07-22,Kings County,0.05
2019-10-21,Kings County,0.06
2019-07-15,Queens County,0.05
2019-07-29,Bronx County,0.06
2019-08-26,Kings County,0.04
2019-11-04,Bronx County,0.06
2019-10-07,Richmond County,0.04
2019-05-06,Kings County,0.05
2019-10-14,Bronx County,0.07
2019-08-05,Richmond County,0.13
2019-03-25,Richmond County,
2019-06-10,Richmond County,
2019-10-21,Kings County,
2019-01-14,Kings County,
2019-05-06,Richmond County,0.1
2019-09-02,Richmond County,
2019-07-22,Richmond County,
2019-06-03,Richmond County,0.1
2019-11-18,Richmond County,0.04
2019-04-29,Richmond County,0.06
2019-07-22,Richmond County,0.06
2019-10-14,Richmond County,0.04
2019-07-08,Richmond County,
2019-02-25,Richmond County,0.12
2019-11-18,Richmond County,0.13
2019-01-21,Queens County,0.05
2019-11-18,Kings County,0.04
2019-12-23,Queens County,0.05
2019-03-11,Queens County,0.04
2019-01-14,Bronx County,0.07
2019-04-15,Kings County,0.07
2019-07-08,Bronx County,0.06
2019-01-28,Bronx County,0.04
2019-04-01,Bronx County,0.04
Query:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
Answer:
date,sub_region_2,symptom_anosmia
2020-11-02,Richmond County,0.25
2020-06-22,Richmond County,0.29
2020-08-24,Richmond County,
2020-12-28,Richmond County,0.93
2020-02-03,Richmond County,
2020-04-06,Richmond County,
2020-11-16,Richmond County,
2020-01-06,Richmond County,
2020-09-21,Richmond County,0.28
2020-03-16,Richmond County,0.19
2020-10-26,New York County,0.14
2020-12-14,Queens County,0.34
2020-01-20,Queens County,0.07
2020-05-04,Bronx County,0.26
2020-11-23,Bronx County,0.27
2020-06-08,Queens County,0.16
2020-05-04,Richmond County,0.17
2020-10-05,Richmond County,0.16
2020-04-13,Bronx County,1.1
2020-01-27,Bronx County,0.04
2020-12-07,Queens County,0.29
2020-06-15,Queens County,0.15
2020-07-20,Bronx County,0.2
2020-12-28,Queens County,0.43
2020-10-26,Richmond County,0.18
2020-08-31,Kings County,0.13
2020-01-13,Richmond County,0.05
2020-08-17,Richmond County,
2020-06-08,Richmond County,
2020-07-13,Richmond County,0.17
2020-04-13,Kings County,
2020-05-25,Kings County,0.19
2020-12-07,Kings County,0.58
2020-08-03,Richmond County,
2020-03-30,Kings County,2.62
2020-06-01,New York County,0.15
2020-03-23,Bronx County,4.65
2020-07-13,Kings County,0.19
2020-09-21,Kings County,0.16
2020-08-03,New York County,0.14
2020-12-07,Kings County,0.28
2020-01-20,Kings County,0.06
2020-10-19,New York County,0.14
2020-11-23,Kings County,0.26
2020-04-20,Bronx County,0.65
2020-09-14,Bronx County,0.15
2020-04-13,Richmond County,0.59
2020-03-23,Richmond County,2.73
2020-11-30,Richmond County,0.35
2020-07-06,Richmond County,0.74
2020-09-21,Kings County,0.13
2020-04-06,Kings County,0.22
2020-05-11,Kings County,
2020-04-13,Richmond County,
2020-10-19,Kings County,0.25
2020-03-30,Kings County,0.19
2020-02-03,Kings County,
2020-06-22,Kings County,0.43
2020-06-22,Richmond County,
2020-12-14,Kings County,0.73
2020-02-10,Richmond County,
2020-08-10,Richmond County,
2020-01-20,Richmond County,
2020-09-07,New York County,0.14
2020-08-17,Richmond County,0.15
2020-02-24,Queens County,0.07
2020-02-03,Bronx County,0.05
2020-12-07,Richmond County,0.69
2020-11-30,New York County,0.23
2020-11-23,Queens County,0.24
2020-04-27,New York County,0.31
2020-09-28,Queens County,0.15
2020-10-12,Queens County,0.13
2020-09-07,Kings County,0.12
2020-10-12,Richmond County,0.15
2020-08-31,Bronx County,0.13
2020-05-18,Queens County,0.22
2020-12-14,Richmond County,0.65
2020-03-09,Richmond County,
2020-03-30,Richmond County,
2020-06-29,Richmond County,
2020-06-15,New York County,0.18
2020-04-06,New York County,1.16
2020-05-11,Kings County,0.21
2020-04-20,Queens County,0.48
2020-12-21,Bronx County,0.4
2020-07-27,New York County,0.19
2020-08-10,New York County,0.13
2020-09-14,New York County,0.14
2020-10-26,Queens County,0.14
2020-01-27,Queens County,0.06
2020-10-19,Queens County,0.13
2020-12-14,Bronx County,0.33
2020-03-16,Richmond County,0.79
2020-11-30,Bronx County,0.28
2020-04-06,Richmond County,1.07
2020-08-31,Richmond County,0.26
2020-08-31,Richmond County,0.13
2020-08-10,Richmond County,
2020-03-16,New York County,1.79
Query:
SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2019"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
GROUP BY "sub_region_2"
LIMIT 100;
Answer:
sub_region_2,avg_anosmia_2019
New York County,0.05884615384615385
Bronx County,0.04788461538461538
Kings County,0.05849056603773585
Richmond County,0.08865671641791044
Queens County,0.051153846153846154
Query:
SELECT "sub_region_2", AVG(CAST("symptom_anosmia" AS FLOAT)) AS "avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
GROUP BY "sub_region_2"
LIMIT 100;
Answer:
sub_region_2,avg_anosmia_2020
New York County,0.3538461538461538
Bronx County,0.4115384615384615
Kings County,0.34511111111111115
Richmond County,0.3457281553398058
Queens County,0.3586538461538462
Query:
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2019"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31'
LIMIT 100;
Answer:
overall_avg_anosmia_2019
0.0625
Query:
SELECT AVG(CAST("symptom_anosmia" AS FLOAT)) AS "overall_avg_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
LIMIT 100;
Answer:
overall_avg_anosmia_2020
0.35851002865329507
Query:
SELECT "sub_region_2",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2019",
     AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_anosmia_2020"
   FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
   WHERE "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
   GROUP BY "sub_region_2"
   LIMIT 100;
Answer:
sub_region_2,avg_anosmia_2019,avg_anosmia_2020
New York County,0.058846153846153854,0.3538461538461538
Bronx County,0.04788461538461539,0.4115384615384615
Kings County,0.05849056603773584,0.34511111111111115
Richmond County,0.08865671641791044,0.34572815533980583
Queens County,0.051153846153846154,0.3586538461538462
Query:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
ORDER BY CAST("symptom_anosmia" AS FLOAT) DESC
LIMIT 100;
Answer:
date,sub_region_2,symptom_anosmia
2018-05-28,Richmond County,
2018-08-06,Kings County,
2020-04-13,Kings County,
2018-02-19,Richmond County,
2018-08-27,Richmond County,
2022-11-21,Richmond County,
2017-12-11,Richmond County,
2019-12-16,Richmond County,
2019-03-18,Richmond County,
2020-08-24,Richmond County,
2021-10-18,Richmond County,
2018-04-23,Richmond County,
2019-10-07,Richmond County,
2019-11-04,Richmond County,
2019-06-17,Richmond County,
2018-01-15,Richmond County,
2018-04-02,Kings County,
2020-02-10,Kings County,
2019-08-12,Richmond County,
2017-12-25,Richmond County,
2019-12-09,Richmond County,
2017-10-16,Kings County,
2017-10-02,Richmond County,
2018-09-24,Richmond County,
2019-11-18,Richmond County,
2019-09-23,Kings County,
2018-04-23,Kings County,
2017-10-16,Richmond County,
2019-06-10,Richmond County,
2021-02-22,Richmond County,
2017-11-20,Richmond County,
2019-01-21,Richmond County,
2018-01-08,Bronx County,
2022-09-12,Richmond County,
2019-08-12,Richmond County,
2019-03-25,Kings County,
2020-01-13,Kings County,
2017-10-23,Richmond County,
2019-03-04,Kings County,
2019-07-15,Kings County,
2019-04-22,Richmond County,
2018-04-16,Richmond County,
2019-07-29,Richmond County,
2019-02-18,Kings County,
2022-04-11,Richmond County,
2018-04-09,Richmond County,
2018-01-29,Kings County,
2018-11-26,Richmond County,
2018-06-25,Richmond County,
2017-09-18,Kings County,
2017-09-11,Richmond County,
2018-07-30,Richmond County,
2019-12-16,Richmond County,
2019-11-25,Richmond County,
2019-10-07,Richmond County,
2018-08-20,Richmond County,
2018-08-27,Kings County,
2018-03-12,Richmond County,
2018-04-30,Kings County,
2018-02-26,Richmond County,
2019-06-03,Richmond County,
2017-12-18,Richmond County,
2019-02-18,Richmond County,
2018-07-02,Kings County,
2017-12-18,Richmond County,
2018-08-20,Richmond County,
2017-10-30,Richmond County,
2020-02-03,Kings County,
2022-07-04,Richmond County,
2018-04-02,Richmond County,
2018-06-18,Richmond County,
2017-10-23,Kings County,
2024-05-27,Richmond County,
2019-07-15,Richmond County,
2019-07-29,Richmond County,
2018-04-30,Richmond County,
2018-12-24,Kings County,
2020-09-07,Kings County,
2020-05-11,Kings County,
2019-12-23,Kings County,
2024-03-25,Richmond County,
2018-07-16,Richmond County,
2019-09-09,Richmond County,
2019-10-21,Kings County,
2017-09-11,Richmond County,
2019-03-25,Richmond County,
2018-10-29,Kings County,
2018-03-19,Kings County,
2018-02-05,Kings County,
2018-09-10,Kings County,
2019-11-25,Kings County,
2019-03-11,Kings County,
2020-02-03,Richmond County,
2024-01-08,Kings County,
2017-12-18,Kings County,
2020-03-16,Kings County,
2017-09-18,Richmond County,
2020-11-16,Richmond County,
2020-04-06,Richmond County,
2018-06-25,Richmond County,
Query:
SELECT EXTRACT(YEAR FROM TO_DATE("date", 'YYYY-MM-DD')) AS "year", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
  AND TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2020-12-31'
LIMIT 100;
Answer:
year,sub_region_2,symptom_anosmia
2020,Richmond County,
2020,Richmond County,0.93
2020,Richmond County,
2020,Richmond County,
2020,Richmond County,
2020,Richmond County,0.25
2020,Richmond County,0.29
2020,New York County,0.14
2020,Queens County,0.34
2020,Queens County,0.07
2020,Bronx County,0.26
2020,Bronx County,0.27
2020,Queens County,0.16
2020,Richmond County,0.17
2020,Richmond County,0.16
2020,Bronx County,1.1
2020,Bronx County,0.04
2020,Queens County,0.29
2020,Queens County,0.15
2020,Bronx County,0.2
2020,Queens County,0.43
2020,Richmond County,0.18
2020,Kings County,0.13
2020,Richmond County,0.05
2020,Richmond County,
2020,Richmond County,0.28
2020,Richmond County,0.19
2019,Richmond County,
2020,Richmond County,
2019,Kings County,
2019,Richmond County,
2019,Kings County,
2019,Richmond County,
2019,Richmond County,
2019,Richmond County,
2020,Richmond County,
2020,Richmond County,
2019,Richmond County,
2020,Kings County,0.39
2019,Richmond County,
2019,Bronx County,0.06
2019,Bronx County,0.05
2019,Richmond County,0.05
2019,Bronx County,0.04
2019,Richmond County,
2019,Kings County,0.05
2019,Queens County,0.05
2019,Kings County,0.05
2019,Bronx County,0.04
2019,Queens County,0.05
2019,Kings County,0.06
2019,Queens County,0.04
2019,Bronx County,0.05
2019,Bronx County,0.04
2019,Bronx County,0.05
2019,Queens County,0.06
2019,Queens County,0.06
2019,Richmond County,0.05
2019,Richmond County,0.04
2019,Bronx County,0.04
2019,Kings County,0.06
2019,Bronx County,0.04
2019,Kings County,0.07
2019,Queens County,0.06
2019,Bronx County,0.04
2019,Kings County,0.06
2019,Bronx County,0.03
2019,Kings County,0.05
2019,Queens County,0.05
2019,Queens County,0.06
2019,Queens County,0.04
2019,Kings County,0.06
2019,Kings County,0.06
2019,Bronx County,0.07
2019,Kings County,0.04
2019,Queens County,0.04
2019,Kings County,0.04
2019,Bronx County,0.03
2019,Richmond County,0.05
2020,Kings County,0.58
2020,Richmond County,
2020,Queens County,0.16
2020,New York County,0.25
2020,New York County,0.07
2020,Kings County,0.17
2020,New York County,0.12
2020,Queens County,0.06
2020,Richmond County,
2020,Richmond County,0.17
2019,Richmond County,
2020,Richmond County,
2019,Richmond County,
2020,Kings County,
2019,Kings County,
2019,Kings County,
2019,Kings County,
2019,Kings County,
2020,Kings County,
2019,New York County,0.07
2019,New York County,0.06
Query:
SELECT DISTINCT "date"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "symptom_anosmia" IS NOT NULL
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
LIMIT 100;
Answer:
date
2017-11-06
2023-08-28
2023-03-20
2018-06-25
2019-12-02
2020-10-12
2023-07-31
2023-10-30
2024-04-01
2021-04-12
2019-01-14
2020-03-23
2018-12-17
2022-02-28
2022-09-12
2024-02-19
2022-04-18
2020-06-15
2019-07-08
2024-01-08
2018-04-23
2019-04-29
2018-04-09
2023-01-16
2020-05-04
2019-11-11
2023-07-24
2020-04-20
2019-09-30
2020-12-28
2020-11-02
2018-10-01
2023-07-10
2024-02-26
2020-02-24
2022-01-10
2019-06-17
2019-10-28
2019-03-04
2023-05-22
2019-01-21
2022-02-14
2018-04-30
2023-02-27
2024-07-01
2024-04-15
2021-10-11
2019-08-26
2021-01-18
2018-10-29
2019-03-11
2022-08-29
2018-03-19
2018-09-10
2019-07-22
2021-10-18
2023-12-11
2018-11-12
2019-05-20
2021-07-05
2019-08-12
2020-04-27
2019-09-16
2017-10-23
2023-12-25
2024-07-08
2023-03-13
2018-07-09
2021-10-25
2021-01-04
2020-06-01
2022-06-27
2024-05-06
2019-06-03
2021-11-22
2017-10-30
2018-06-18
2022-09-05
2019-03-18
2019-05-06
2019-03-25
2022-09-26
2019-04-01
2018-06-04
2024-04-29
2021-08-23
2024-05-20
2018-09-24
2021-04-05
2018-02-12
2021-08-02
2021-03-15
2017-12-11
2020-12-07
2019-10-14
2023-06-26
2023-09-04
2023-01-09
2024-08-19
2024-05-27
Query:
SELECT "sub_region_2", COUNT(*) AS "record_count"
    FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE "date" BETWEEN '2019-01-01' AND '2020-12-31'
      AND "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
    GROUP BY "sub_region_2"
    LIMIT 100;
Answer:
sub_region_2,record_count
New York County,104
Bronx County,104
Kings County,208
Richmond County,416
Queens County,104
Query:
SELECT "date", "sub_region_2", "symptom_anosmia"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31'
  AND "sub_region_2" IN (
    'Bronx County',
    'Queens County',
    'Kings County',
    'New York County',
    'Richmond County'
  )
  AND CAST("symptom_anosmia" AS FLOAT) > 0.5
LIMIT 100;
Answer:
date,sub_region_2,symptom_anosmia
2020-12-14,Kings County,0.73
2020-12-28,Richmond County,0.93
2020-04-13,Bronx County,1.1
2020-12-14,Richmond County,0.73
2020-07-27,Richmond County,0.6
2020-12-07,Kings County,0.58
2020-12-07,Richmond County,0.69
2020-04-13,New York County,0.72
2020-03-23,Kings County,4.44
2020-03-30,Queens County,2.75
2020-03-23,New York County,4.35
2020-12-28,Kings County,0.89
2020-03-16,New York County,1.79
2020-03-30,Kings County,2.62
2020-03-23,Bronx County,4.65
2020-04-20,Bronx County,0.65
2020-04-13,Richmond County,0.59
2020-03-23,Richmond County,2.73
2020-07-06,Richmond County,0.74
2020-12-14,Richmond County,0.65
2020-04-06,New York County,1.16
2020-03-16,Richmond County,0.79
2020-04-06,Richmond County,1.07
2020-12-21,Richmond County,0.86
2020-04-13,Queens County,0.8
2020-03-23,Queens County,4.2
2020-03-30,Bronx County,3.65
2020-03-16,Bronx County,1.15
2020-08-03,Richmond County,0.57
2020-12-21,Kings County,0.87
2020-03-16,Kings County,1.78
2020-04-06,Kings County,1.46
2020-03-30,Richmond County,1.81
2020-04-06,Queens County,1.58
2020-12-28,Richmond County,1.19
2020-07-13,Richmond County,0.92
2020-11-23,Richmond County,0.53
2020-03-30,New York County,2.05
2020-04-06,Bronx County,2.22
2020-03-16,Queens County,1.31
2020-07-20,Richmond County,0.72
2020-12-28,Richmond County,0.56
2020-04-13,Kings County,0.84
2020-12-07,Richmond County,0.87
2020-12-21,Richmond County,0.77
2020-03-23,Richmond County,0.6
Query:
SELECT
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2019",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2019",
  MIN(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "min_anosmia_2020",
  MAX(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "max_anosmia_2020"
FROM COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
WHERE "sub_region_2" IN (
  'Bronx County',
  'Queens County',
  'Kings County',
  'New York County',
  'Richmond County'
)
LIMIT 100;
Answer:
min_anosmia_2019,max_anosmia_2019,min_anosmia_2020,max_anosmia_2020
0.02,0.66,0.04,4.65
End Exploring Related Columns
Task: Please calculate the overall percentage change in the average weekly search frequency for the symptom 'Anosmia' across the five New York City counties—Bronx County, Queens County, Kings County, New York County, and Richmond County—by comparing the combined data from January 1, 2019, through December 31, 2019, with the combined data from January 1, 2020, through December 31, 2020.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Percentage_change
percentage_change:float
(Attention: answer in one row)
```

**Explanation:**

The `percentage_change` value represents the overall percentage change in the average weekly search frequency for the symptom 'Anosmia' across the five New York City counties (Bronx County, Queens County, Kings County, New York County, and Richmond County) when comparing data from January 1, 2019, through December 31, 2019, to data from January 1, 2020, through December 31, 2020..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'COVID19_SYMPTOM_SEARCH': {'COVID19_SYMPTOM_SEARCH': ['SYMPTOM_SEARCH_SUB_REGION_2_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_2_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_1_DAILY', 'SYMPTOM_SEARCH_COUNTRY_DAILY', 'SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY', 'SYMPTOM_SEARCH_SUB_REGION_1_WEEKLY', 'SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY', 'SYMPTOM_SEARCH_COUNTRY_WEEKLY']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 03:28:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:28:16 - root - INFO - ```sql
WITH avg_anosmia AS (
    SELECT
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_2019",
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_2020"
    FROM
        COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE
        "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
)
SELECT
    (("avg_2020" - "avg_2019") / "avg_2019") * 100 AS "percentage_change"
FROM
    avg_anosmia;
```
2025-02-12 03:28:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:28:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:28:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:28:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 03:28:17 - snowflake.connector.connection - INFO - closed
2025-02-12 03:28:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:28:18 - root - INFO - itercount: 1
2025-02-12 03:28:18 - root - INFO - 0
2025-02-12 03:28:18 - root - INFO - results: 
percentage_change
473.6160458452721


2025-02-12 03:28:18 - root - INFO - Please check the answer again by reviewing Please calculate the overall percentage change in the average weekly search frequency for the symptom 'Anosmia' across the five New York City counties—Bronx County, Queens County, Kings County, New York County, and Richmond County—by comparing the combined data from January 1, 2019, through December 31, 2019, with the combined data from January 1, 2020, through December 31, 2020., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Percentage_change
percentage_change:float
(Attention: answer in one row)
```

**Explanation:**

The `percentage_change` value represents the overall percentage change in the average weekly search frequency for the symptom 'Anosmia' across the five New York City counties (Bronx County, Queens County, Kings County, New York County, and Richmond County) when comparing data from January 1, 2019, through December 31, 2019, to data from January 1, 2020, through December 31, 2020. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
percentage_change
473.6160458452721
Current sql:
WITH avg_anosmia AS (
    SELECT
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_2019",
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_2020"
    FROM
        COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE
        "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
)
SELECT
    (("avg_2020" - "avg_2019") / "avg_2019") * 100 AS "percentage_change"
FROM
    avg_anosmia;
2025-02-12 03:28:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:28:42 - root - INFO - ```sql
WITH avg_anosmia AS (
    SELECT
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_Anosmia" AS FLOAT) END) AS "avg_2019",
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_Anosmia" AS FLOAT) END) AS "avg_2020"
    FROM
        COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE
        "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
)
SELECT
    ROUND((("avg_2020" - "avg_2019") / "avg_2019") * 100, 4) AS "percentage_change"
FROM
    avg_anosmia;
```
2025-02-12 03:28:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:28:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:28:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:28:44 - snowflake.connector.connection - INFO - closed
2025-02-12 03:28:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:28:44 - root - INFO - itercount: 2
2025-02-12 03:28:44 - root - INFO - 000904 (42000): 01ba55b0-0004-9c22-0001-11c3010e9f52: SQL compilation error: error line 3 at position 100
invalid identifier '"symptom_Anosmia"'
2025-02-12 03:28:44 - root - INFO - Input sql:
WITH avg_anosmia AS (
    SELECT
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_Anosmia" AS FLOAT) END) AS "avg_2019",
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_Anosmia" AS FLOAT) END) AS "avg_2020"
    FROM
        COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE
        "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
)
SELECT
    ROUND((("avg_2020" - "avg_2019") / "avg_2019") * 100, 4) AS "percentage_change"
FROM
    avg_anosmia;
The error information is:
000904 (42000): 01ba55b0-0004-9c22-0001-11c3010e9f52: SQL compilation error: error line 3 at position 100
invalid identifier '"symptom_Anosmia"'
Please correct it and output only 1 complete SQL query.
2025-02-12 03:29:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 03:29:03 - root - INFO - ```sql
WITH avg_anosmia AS (
    SELECT
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2019-01-01' AND '2019-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_2019",
        AVG(CASE WHEN TO_DATE("date", 'YYYY-MM-DD') BETWEEN '2020-01-01' AND '2020-12-31' THEN CAST("symptom_anosmia" AS FLOAT) END) AS "avg_2020"
    FROM
        COVID19_SYMPTOM_SEARCH.COVID19_SYMPTOM_SEARCH.SYMPTOM_SEARCH_SUB_REGION_2_WEEKLY
    WHERE
        "sub_region_2" IN ('Bronx County', 'Queens County', 'Kings County', 'New York County', 'Richmond County')
)
SELECT
    ROUND((("avg_2020" - "avg_2019") / "avg_2019") * 100, 4) AS "percentage_change"
FROM
    avg_anosmia;
```
2025-02-12 03:29:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 03:29:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 03:29:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 03:29:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 03:29:04 - snowflake.connector.connection - INFO - closed
2025-02-12 03:29:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 03:29:05 - root - INFO - itercount: 3
2025-02-12 03:29:05 - root - INFO - 0
2025-02-12 03:29:05 - root - INFO - Total iteration counts: 3
