2025-02-12 18:29:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:29:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:27 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:27 - root - INFO - SQL:
SELECT DISTINCT "repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS
   LIMIT 100;
Results:
repo_name
kbandla/APTnotes
bigcompany/hook.io
H07000223/FlycoDialog_Master
veficos/reverse-engineering-for-beginners
oblac/jodd
leichunfeng/WXTabBarController
gavinbunney/Toucan
krisk/Fuse
brigade/react-waypoint
Quartz/mapquery
gephi/gephi
ant-design/ant-ux
CodelightStudios/Android-Smart-Login
onestraw/ebook
SwiftStudies/Duration
pgexperts/pgx_scripts
muaz-khan/WebRTC-Experiment
lovell/sharp
tombh/texttop
collinhundley/Swift-AI
laravel/homestead
raisemarketplace/ground-control
rstudio/shiny
FredKSchott/fflip
jakubpawlowicz/clean-css
tushar-rishav/code2pdf
NorthwoodsSoftware/GoJS
danikula/AndroidVideoCache
hmkcode/Android
ViccAlexander/Chameleon
0x5e/wechat-deleted-friends
ikCourage/LFS
hitsujiwool/timeline
EduMelo/jboss-ejb3-tutorial
northox/roundcube-yubikey-plugin
frc5687/pi-tracker
jaccarmac/dot-emacs-dot-d
indonesia/community
Muyangmin/AVLoadingIndicatorView
linkedin/gobblin
id-Software/DOOM-3-BFG
garnaat/kappa
evilsocket/bettercap
kevin0571/STPopup
marmelroy/PhoneNumberKit
assemble/assemble
erikflowers/weather-icons
xitu/gold-miner
densamoylov/protection_info
lixm/pybooklet
WithMeApp/LBStyle
lvogelzang/Blocky
Austin-Droids/GeoQuiz
johankson/flipper
uggla/alexandria
aaronjorbin/WordPress-Theme-Directory-Slurper
vladgolubev/mdlok
Novatics/visiteumaescola
DBTeam-ES/DBTeam-Bot
alexandramaster/bootstrap
xaviershay/kronic
coconetlero/Qt-ITK-VTK-Image-Viewer
macteo/Marklight
alioygur/godash
appbaseio/Docbase
realm/SwiftLint
isocpp/CppCoreGuidelines
google/protobuf
preciousforever/sketch-data-populator
GoogleCloudPlatform/DataflowJavaSDK
12207480/DOPDropDownMenu-Enhanced
toddmotto/echo
videojs/videojs-contrib-hls
wqi/votetube
i-make-robots/LEDWall
romka/lua-transliterator
achow101/achow101.github.io
bendycode/ruby-pivotal-tracker
sebastianomorando/OffPlyWebGLVisualizer
lenguyenthedat/dextra-mindef-2015
hackspark/SFPD-Loves-Spark
elgerlambert/redux-localstorage
rangle/batarangle
core-plot/core-plot
jakearchibald/es6-promise
WhisperSystems/Signal-Android
posva/vue-mdl
tc39/ecmascript-asyncawait
jxieeducation/DIY-Data-Science
snwh/paper-icon-theme
chrisaljoudi/uBlock
sandeepmistry/noble
objccn/articles
tealeg/xlsx
dotnet/coreclr
go-kit/kit
havthgem/quick-resize
unindented/grunt-electron-installer-debian
FrontEndHappyHour/website
brendt/Git-Alias-Pak-2.1

2025-02-12 18:29:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:28 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:29 - root - INFO - SQL:
SELECT "path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
   WHERE "path" ILIKE '%.py'
   LIMIT 100;
Results:
Too long, hard cut:
path
push_notifications/migrations/0002_auto_20160106_0850.py
Maximum_Subarray/Python/shivam5992/kadane.py
Caesar_Cipher/Python/kennyledet/caesar_cipher.py
setup.py
pgcrypto_expressions/test/settings.py
ec2_security_groups_dumper/__init__.py
dirigible/info_pages/__init__.py
tests/python/tests/test_updatecollection.py
tests/testproject/settings.py
yandex_money/api.py
google/cloud/dataflow/utils/__init__.py
examples/Rest/ex20_get_ilo_nic.py
try/for_now.py
node_modules/node-sass/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py
vendor/distribute-0.6.36/easy_install.py
vendor/pip-1.3.1/pip/vcs/subversion.py
vendor/distribute-0.6.36/tests/install_test.py
testing/testing/unit_tests/__init__.py
src/__init__.py
image_cropping/utils.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/GenFds/FfsInfStatement.py
src/VBox/Additions/common/crOpenGL/stub_common.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/Ecc/CodeFragmentCollector.py
project/admin/__init__.py
examples/backend/myproject/myproject/wsgi.py
tools/perf/tests/attr.py
health_check_celery/tasks.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/lib/user_array.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/core/tests/test_multiarray_assignment.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/distutils/command/sdist.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/traversal/tests/test_dfs.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/bipartite/tests/test_matching.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/core/cversions.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/doc/howtofind.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/lib/tests/test__datasource.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/f2py/f2py2e.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/polynomial/laguerre.py
osx_build/nefi2_osx_amd64_xcode_2015/bin/nefi2/model/algorithms/invert_color.py
path.py
lib/gdata/tlslite/utils/PyCrypto_AES.py
servers/youtube.py
cloudify/manager.py
misc/webdriver-w3c-tests/cookie/cookie_test.py
Lessons/lesson15.py
layout_scanner.py
networkapiclient/UsuarioGrupo.py
networkapiclient/EnvironmentVIP.py
thirdparty/future/src/libfuturize/fixes/fix_print.py
third_party/catapult/third_party/Paste/paste/util/ip4.py
third_party/catapult/third_party/webtest/webtest/forms.py
tools/gyp/test/make_global_settings/full-toolchain/gyptest-make_global_settings.py
third_party/jinja2/compiler.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/file/__init__.py
content/test/gpu/gpu_tests/trace_test_expectations.py
tools/telemetry/telemetry/value/value_unittest.py
tools/perf/page_sets/page_reload_cases.py
third_party/jinja2/_compat.py
third_party/chromite/cbuildbot/stages/build_stages.py
third_party/chromite/lib/terminal.py
tools/telemetry/telemetry/internal/backends/mandoline/config.py
third_party/cython/src/Cython/Plex/Lexicons.py
tools/gyp/test/sanitize-rule-names/gyptest-sanitize-rule-names.py
tools/grit/grit/format/policy_templates/writers/xml_writer_base_unittest.py
third_party/google_appengine_cloudstorage/cloudstorage/common.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/cloudfront/distribution.py
chrome/app/theme/PRESUBMIT.py
tools/gyp/test/ios/gyptest-per-config-settings.py
tools/telemetry/third_party/gsutilz/third_party/apitools/apitools/base/py/buffered_stream_test.py
third_party/catapult/tracing/tracing_build/__init__.py
tools/telemetry/telemetry/internal/backends/chrome_inspector/inspector_page_unittest.py
build/android/pylib/local/__init__.py
native_client/tools/scons_to_gn/print_data.py
tools/memory_inspector/memory_inspector/backends/memdump_parser.py
third_party/catapult/hooks/__init__.py
tools/cr/cr/actions/linux.py
tools/swarming_client/third_party/rsa/rsa/transform.py
third_party/catapult/perf_insights/perf_insights/corpus_driver.py
tools/gyp/test/win/gyptest-link-enable-winrt.py
third_party/chromite/scripts/dep_tracker_unittest.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/datapipeline/layer1.py
third_party/catapult/tracing/third_party/tvcm/third_party/rcssmin/_setup/py3/setup.py
third_party/chromite/lib/patch.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/mws/__init__.py
tools/telemetry/third_party/modulegraph/modulegraph_tests/testpkg-edgedata/pkg/toplevel_conditional_import_existing.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/gs/bucketlistresultset.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/sqs/test_queue.py
buildtools/clang_format/script/clang-format.py
third_party/catapult/third_party/oauth2client/oauth2client/crypt.py
third_party/tlslite/tlslite/utils/cryptomath.py
tools/telemetry/third_party/gsutilz/gslib/addlhelp/projects.py
tools/deep_memory_profiler/subcommands/buckets.py
tools/telemetry/third_party/webpagereplay/dnsproxy.py
tools/chrome_proxy/integration_tests/__init__.py
third_party/cython/src/Cython/Pl

2025-02-12 18:29:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:30 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:30 - root - INFO - SQL:
SELECT "id", "size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "size" < 15000
   LIMIT 100;
Results:
id,size
6ba8b7a1ad72449bed2c27c18dc09fdfdc902f4f,1455
2808cc7dad1e963456a33387816a60edcd14e3c2,2743
9ba1cd853975d7412462af7426bfff682bf12171,2526
b5d98c4d7b90b473fdf470a29b2562c7c6b70c67,636
feb55b7e02a74beed6b06ed165c8ba65cb76bd75,2954
f25ac53133823982d0d8449be27871abdbd4a494,865
814343a33660c53403791055ac5f502cee0644bd,4802
bb50f15deb162b39542ee69056036a8d659d5fc6,588
e8b52ec203d330ee3fbf0403a4dbe4383d14b450,3675
13e40b4143150944245cf5bd02600567905e77e5,336
e210013f3d2cf0decdd6aff2960e34194232b9bf,544
6555b1a2f3b5fa0064c6336fc878a7995bd4fe4c,397
da48d7c48ca7f6c4c734487af0f288a1bb9926a2,43
105b24078f81dbc0cc3fa255a83c2ec8789272d0,9000
0698e877472abb2aaa3a9896c05a1cdeca1747ea,979
6982ea63025c042ddf8c58eebb1add752e614761,2524
b09dfb007c3beec5ec0bcb2c113a826849a6d68b,3451
1409a2c49c7e19c876e0e3d4344652888a5702c5,247
6ada1bc42068cf8cde495b98de70a946b532dc38,2863
be12188de5dd2693801bbc0eb8b3590ea6e37c48,1364
d7b65155d6ef5bdfbdfee466ea9882d8c4043e1c,12204
e75b9a2309db2fc1ae2af0c0c690418923980ba0,1492
6584622e9d48f2cd6a3bf15f71fd05ba944a779f,7773
cea0b0ea2909f6391437a5d56222f63ff7e0d429,3556
659d4d87f91545bdb12b3006885b80e2b03019f4,1899
fa36881be7f48249872472742e9dd3b7c978dd6b,511
8bf775c4a0ea1d2638605d9895ed6061a4c7274c,2499
01c68339bb58e3a3ad2ae06ce287ee4ecee6dd6d,388
6c6c181ae1ef4dc8d4d28e37195ca655423fc491,5213
4ea1750cf1a83a33b2ab207d92c3b0a71dbffbc5,2206
67667768c0a3f7c53f81d539958ed74ef5ad6cf2,823
a4dbfefc7a0c6008ee7214acd91afa7dcddf5a22,10764
2c5018824ecdba5bfd51152eb64660fd279e2ea3,3365
393396c26a8eef3f07790ef9bfd0fba0beda5c94,2226
5c95d797d7027465da99ce3201d3bc2c2b522a06,1423
ab28cd93421f409a18f855de257dee2d98bbb515,7005
a44af71773f57e0d9ebb6be5fa557408a5aa3f96,598
d815cb6c681ed60033fd4ff946d272d3638c4f8f,1306
2fb24092643128e0ea2b86f931fa46c2d4be8a29,5121
7091eb08215c8441809949d82fe58c77c7982479,1262
02c3ff241535c9b7c007fa7291c2e722404199f8,5024
260a96fb1d7fd95106048af7aecaa43e8e0af98a,10589
9c4d522ac08d420a1dfe8fc4dc4572e152ffbff2,1811
19110dda80e5f8e620f366c8d168eb849c5fe113,466
88a18d4a8d4770b87f9391d7b2e13420780f7064,3335
5bc9de62db3f14a16d0391be9ff7a75998442bfa,229
05636012267d58df654e474cc4b1e3b4bffb2507,967
490346726ae4e652fb4f63784a5a5e3d0aa71774,579
82ee1954a597e44a337c68e50ae398b08acf889b,4394
69395bde0bed8bd93efd1742502350dce3ef852b,3276
002272f4fe68666c7fc4a308bc849ac1763eef3d,1599
a63fb573fec38da5b3003a14631bf3564eec775b,48
9c8783191106dca07a7206247dc05d20ca418c77,2737
d12178fa0a4544b8cd977da8fbf93a04f24d485e,1597
fc9f599c3bd2a5cf0a047f78ef746425313121fc,1719
e2a28a304a75ab5a71506c568c2632d091df6da8,251
82d2b784aeb8a4d227759c67432bcc2c76333120,681
ca517ba2656c2ff69fc92d18e759156a180a909f,2720
aee56a5244cdb5347ddaf6e5b9b5cb2b3b3413df,462
5b44552b01e50999628379b03a82016ffbd07593,245
7de639f8c0f7eea04cf4f28ba1f936448e382343,1402
c08d469ae5e9eece9a5a93d2fbe1c62e1e04074c,954
84dec33bfcfd3a3757e29e39e6ee3d52f793f635,5349
672f5a71a2b2ed49a2131398edd9dd90c4ccafa2,2743
7f47f629f1454ac2e74b186516a90de1b0956d1d,908
2616a27a5c0d15e31fbee4c4aa697612d8d83521,8457
3cef78ec093a2e5eed65b15bf47204232d94f261,2558
a9753c5115e98af376181d88ac517ec012762443,510
a5a83a8aa414fc687a514583ed0a24cb4fee5621,2776
3a23480c4e6763e385be3aa7988e52300756caa7,2680
c1faacf0d09863e3cb841f8408291fa07efdd920,5297
ad1b22a44cd42697373929fc40c1d081c048caeb,588
5a625b6c3a3aee5595a0cf5ab1ad080981ea948d,7163
71931c03db6f3c6bd79b4f155756ea6930fe9569,1099
9b04a3d91578c1ddd1c1e4d6a665b90b6ad59767,894
fa1a33a95800e6aa673e9d561d204471bac0f044,571
041e8c6a8324a1cc35c6ebed87681cd6e4d9fa16,1845
357b24302720af6b65f7b155ee4afc41618e6972,2266
bb15b0d4366a5efac6e5bcd788e29f304ba9e2c0,5642
f4848c4eec5816724f3a7396fd6488e311de193f,1122
b7c2707c285b8d15a7ee3ae31c51617ceab60e3d,421
d0e8af0d8562637415f1cada3ff9133d79e73c5e,622
09dd645d70120c5d7552303017325a7898bd48a1,1290
9298c9431a2bf563cfd6314385a80dcdbf3097f7,1476
e439364c40636355e662494a3187be65149a1991,593
262f173567a0b09e46e75e26347f3c61cb0dfec1,10089
9bbfff0efae7ae7c45f130a0f2eb9e702a4f69e5,75
8a760852374240ae1162b1dd517637d5b1094885,6880
dc2b3716a7faa5e363c7b8c206fe398c3fa692b4,8333
4cbfc3c007c0af97c13456ddfa19dfca52905110,483
7dded6e5c115c228e85da3099c466b0276d67b1e,1203
eea167a0dec0f8416308484cd6d1d54ce5ef41ce,3106
d1d56b099b4e504ef6bb8d30b795546b90c63ffe,13213
65c7e616c59cb411ac636757f67f47026b0eb2ab,1973
fc6a56a26091252340eb50a97be793bd4e8f7272,2247
06f2d29b24053ebe698558a1656f8acb004ccfe0,1081
bbb1d6be2174476ffbd9c59837d7748397e4a2b5,1897
ccf759678bf51d1d2d2912e3adac5a81cebcbe9f,1414
498e5c15497c365c42156c58138f618233a00f7e,5168
478202e6f40409f0f588373073108c7eb71f8cbe,870

2025-02-12 18:29:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-02-12 18:29:34 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:34 - root - INFO - SQL:
SELECT "id", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "content" ILIKE '%def %'
   LIMIT 100;
Results:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;

2025-02-12 18:29:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:35 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:36 - root - INFO - SQL:
SELECT "repo_name", "watch_count"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS
   ORDER BY "watch_count" DESC
   LIMIT 100;
Results:
repo_name,watch_count
FreeCodeCamp/FreeCodeCamp,90457
firehol/netdata,13208
joshbuchea/HEAD,13125
braydie/HowToBeAProgrammer,12019
sindresorhus/awesome,11063
tensorflow/tensorflow,10728
facebook/react,10458
ParsePlatform/parse-server,10339
loverajoel/jstips,9585
facebook/react-native,9437
vhf/free-programming-books,8862
vuejs/vue,8822
airbnb/javascript,8708
caesar0301/awesome-public-datasets,8653
twbs/bootstrap,8211
toddmotto/public-apis,8182
getlantern/lantern,8110
DrkSephy/es6-cheatsheet,7967
airbnb/caravel,7764
googlesamples/android-architecture,7713
getify/You-Dont-Know-JS,7650
allenwong/30DaysofSwift,7485
jgthms/bulma,7387
dthree/cash,7309
Rochester-NRT/AlphaGo,7200
apple/swift,7041
robbyrussell/oh-my-zsh,6983
github/gitignore,6898
facebook/draft-js,6715
matryer/bitbar,6384
Microsoft/vscode,6272
ptmt/react-native-desktop,6186
p-e-w/maybe,6127
parkjs814/AlgorithmVisualizer,6057
hollance/swift-algorithm-club,6012
alexjc/neural-doodle,6008
fbsamples/f8app,5987
nodejs/node,5954
jiahaog/nativefier,5836
Microsoft/CNTK,5833
atom/atom,5826
jcjohnson/neural-style,5768
tensorflow/models,5629
reactjs/redux,5622
jlevy/the-art-of-command-line,5603
mbostock/d3,5601
thejameskyle/the-super-tiny-compiler,5555
Microsoft/ChakraCore,5524
nylas/N1,5476
CRYTEK-CRYENGINE/CRYENGINE,5433
petehunt/react-howto,5428
VerbalExpressions/JSVerbalExpressions,5374
angular/angular.js,5347
torvalds/linux,5332
google/agera,5319
angular/angular,5318
atom/electron,5302
mxstbr/react-boilerplate,5163
kadirahq/react-storybook,5154
rg3/youtube-dl,5140
daneden/animate.css,5113
jbranchaud/til,5105
docker/docker,5052
shockone/black-screen,5028
google/xi-editor,5008
electron/electron,4995
CatchChat/Yep,4994
mhinz/vim-galore,4928
ReactiveX/RxJava,4926
josephmisiti/awesome-machine-learning,4917
weui/weui,4883
open-source-society/computer-science,4848
FortAwesome/Font-Awesome,4838
puikinsh/gentelella,4825
webpack/webpack,4812
soimort/you-get,4776
vinta/awesome-python,4734
CosmicMind/Material,4731
typicode/json-server,4720
aosabook/500lines,4659
golang/go,4620
0x5e/wechat-deleted-friends,4609
dear-github/dear-github,4604
nlp-compromise/nlp_compromise,4600
lodash/lodash,4596
santinic/how2,4582
google/material-design-lite,4571
callemall/material-ui,4455
nvbn/thefuck,4438
Dogfalo/materialize,4425
johnpapa/angular-styleguide,4403
JakeLin/IBAnimatable,4399
google/seesaw,4388
amzn/alexa-avs-raspberry-pi,4384
vsouza/awesome-ios,4346
letsencrypt/letsencrypt,4325
square/retrofit,4306
google/flexbox-layout,4306
Nickersoft/push.js,4284
vurtun/nuklear,4273

2025-02-12 18:29:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 18:29:37 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:37 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py'
   LIMIT 100;
Results:
repo_name,path,size
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,564
dieseldev/diesel,examples/zeromq_receiver.py,619
MAECProject/python-maec,maec/utils/merge.py,12077
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,2331

2025-02-12 18:29:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 18:29:39 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:39 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py' AND c."size" < 15000
   LIMIT 100;
Results:
repo_name,path,size
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,2331
dieseldev/diesel,examples/zeromq_receiver.py,619
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,564
MAECProject/python-maec,maec/utils/merge.py,12077

2025-02-12 18:29:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 84
2025-02-12 18:29:40 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:41 - root - INFO - SQL:
SELECT DISTINCT f."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE c."content" ILIKE '%def %'
   LIMIT 100;
Results:
repo_name
linuxppc/linux
CyanogenMod/android_kernel_htc_flounder
cmangos/cmangos-wod
MarekKowalski/LiveScan3D
Tkkg1994/SM-G930F
mitwo-dev/android_kernel_xiaomi_msm8960
DespairFactor/N6
alibaba/ali_kernel
SanDisk-Open-Source/SSD_Dashboard
fedya/aircam-openwrt
ptaoussanis/nippy
gripped/MK808-headless-nand-3.0.8-rk3066
stefan-kolb/nucleus
CyanogenMod/android_kernel_samsung_mondrianwifi
ioquake/jedi-academy
Tommy-Geenexus/android_kernel_sony_msm8994_suzuran_5.x
SoftRoCE/rxe-dev
ComputerHobbyist/cqa
amirrajan/Oak
Biktorgj/Android_b2_Kernel
Microsoft/WinObjC
CirrusLogic/linux-drivers
halx99/x-studio365-ldb
ceph/ceph-client
ycsoft/FatCat-Server
Myself5/android_kernel_sony_msm8974
pfactum/pf-kernel
wandboard-org/linux
ugur2323/Whispermehmet_VE
Rinnegatamante/easyrpg-player-3ds
sergeyreznik/et-engine
CyanogenMod/android_kernel_xiaomi_cancro
raspberrypi/quake3
Zenfone2-Dev/kernel-FlareM
lukier/linux-hi3518
coreboot/coreboot
OnePlusOSS/android_kernel_oneplus_one
scummvm/scummvm
javilonas/Lonas_KL-SM-G901F
jcmvbkbc/gcc-xtensa
vinriviere/m68k-atari-mint-gcc
CyanogenMod/android_kernel_oppo_msm8939
l1k/linux
iocellnetworks/ndas4windows
RT-Thread/rt-thread
Clouded/linux-rt-rpi2
jgallen23/jquery-builder
bright-things/ionic
CreativeCimmons/ORB-SLAM-Android-app
puppeh/gcc-6502
radxa/linux-rockchip
faux123/Nexus_5
Biktorgj/Gear_S_Kernel
Christopher83/samsung-kernel-msm7x30
jollaman999/jolla-kernel_bullhead
MAECProject/python-maec
dieseldev/diesel
ms-iot/python
Cl3Kener/HERC-KERNELS
andreamerello/linux-zynq-stable
friendlyarm/linux-3.4.y
google/rekall
ParrotSec/linux-parrot
wens/linux
ouya/ouya_1_1-kernel
justathoughtor2/atomicApe
xieyaxiongfly/Atheros-CSI-Tool
coreos/linux
jonjonarnearne/smi2021
ValveSoftware/steamos_kernel
glewarne/S6-UniKernel
CyanogenMod/android_kernel_sony_msm8x27
Asus-T100/kernel
GaloisInc/hacrypto
visi0nary/android_kernel_elephone_p8000
ARM-software/linux
kctan0805/vdpm
kularny/GeniSys.Kernel-old
dealii/dealii
tobiasjakobi/linux-odroid-public
roberttidey/userland
CyanogenMod/android_kernel_moto_shamu
franciscofranco/flo
afaerber/linux

2025-02-12 18:29:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:42 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:42 - root - INFO - SQL:
SELECT DISTINCT f."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
   LIMIT 100;
Results:
repo_name
dieseldev/diesel
google/rekall
MAECProject/python-maec

2025-02-12 18:29:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:44 - root - INFO - SQL:
SELECT r."repo_name", r."watch_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
    WHERE r."repo_name" IN (
      SELECT DISTINCT f."repo_name"
      FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
      JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
    )
    ORDER BY r."watch_count" DESC
    LIMIT 100;
Results:
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2

2025-02-12 18:29:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:45 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:46 - root - INFO - SQL:
SELECT f."path", c."size", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."content" ILIKE '%def %'
    LIMIT 100;
Results:
Too long, hard cut:
path,size,content
maec/utils/merge.py,12077,"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only MAEC Packages are supported'

    # Merge the MAEC packages
    merged_package = merge_packages(parsed_documents)
    # Write the merged package to the output file
    merged_package.to_xml_file(output_file, {""https://github.com/MAECProject/python-maec"":""merged""})

def merge_packages(package_list, namespace = None):
    '''Merge a list of input MAEC Packages and return a merged Package instance.'''
    malware_subjects = []
    # Instantiate the ID generator class (for automatic ID generation)
    if not namespace:
        NS = Namespace(""https://github.com/MAECProject/python-maec"", ""merged"")
    else:
        NS = namespace
    maec.utils.set_id_namespace(NS)
    # Build the list of Malware Subjects
    for package in package_list:
        for malware_subject in package.malware_subjects:
            malware_subjects.append(malware_subject)
    # Merge the Malware Subjects
    merged_subjects = merge_malware_subjects(malware_subjects)
    # Merge the input namespace/schemaLocation dictionaries
    merged_namespaces = {}
    merged_schemalocations = {}
    for package in package_list:
        merged_namespaces.update(package.__input_namespaces__)
        merged_schemalocations.update(package.__input_schemalocations__)
    # Create a new Package with the merged Malware Subjects
    merged_package = Package()
    merged_package.malware_subjects = MalwareSubjectList(merged_subjects)
    merged_package.__input_namespaces__ = merged_namespaces
    merged_package.__input_schemalocations__ = merged_schemalocations
    return merged_package

def bin_malware_subjects(malware_subject_list, default_hash_type='md5'):
    '''Bin a list of Malware Subjects by hash
       Default = MD5
    '''
    binned_subjects = {}
    for malware_subject in malware_subject_list:
        mal_inst_obj = malware_subject.malware_instance_object_attributes
        if mal_inst_obj:
            obj_properties = mal_inst_obj.properties
            if obj_properties and obj_properties.hashes:
                for hash in obj_properties.hashes:
                    if hash.type_ and hash.simple_hash_value:
                        hash_type = ''
                        hash_value = ''
                        # Get the hash type
                        hash_type = str(hash.type_).lower()
                        # Get the hash value
                        hash_value = str(hash.simple_hash_value).lower()
                            
                        # Check the hash type and bin accordingly
                        if hash_type == default_hash_type:
                            if hash_value in binned_subjects:
                                binned_subjects[hash_value].append(malware_subject)
                            else:
                                binned_subjects[hash_value] = [malware_subject]
    return binned_subjects

def merge_entities(entity_list):
    '''Merge a list of MAEC/CybOX entities'''
    dict_list = [x.to_dict() for x in entity_list]
    output_dict = dict_merge({}, *dict_list)
    return output_dict

def deduplicate_vocabulary_list(entity_list, value_name = ""value""): # TODO: 

2025-02-12 18:29:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:47 - root - INFO - SQL:
SELECT f."repo_name", COUNT(*) AS "py_file_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."path" ILIKE '%.py'
    GROUP BY f."repo_name"
    ORDER BY "py_file_count" DESC
    LIMIT 100;
Results:
repo_name,py_file_count
anhstudios/swganh,135
mollstam/UnrealPy,90
iridium-browser/iridium-browser-ubuntu,60
JetBrains/intellij-community,54
openhatch/oh-mainline,46
bugvm/bugvm-studio,46
hortonworks/hortonworks-sandbox,38
espadrine/opera,37
cgstudiomap/cgstudiomap,37
mirror/chromium,36
cloudera/hue,33
gabrielfalcao/lettuce,32
hynnet/hiwifi-openwrt-HC5661-HC5761,29
justathoughtor2/atomicApe,29
dstockwell/chromium,27
nwjs/chromium.src,25
Samsung/ChromiumGStreamerBackend,25
Moguri/BlenderPanda,24
neeker/chromium_extract,23
IONISx/edx-platform,23
kbengine/kbengine,22
krintoxi/NoobSecToolkit,22
Microvellum/Fluid-Designer,21
harmy/kbengine,21
cnsoft/kbengine-cocos2dx,20
OCA/OpenUpgrade,20
damonkohler/sl4a,20
acatadog/kbengine,19
openfun/edx-platform,18
pymo/pymo,18
qunaibit/zippy-mirror,18
Southpaw-TACTIC/TACTIC,17
crosswalk-project/chromium-crosswalk,17
scheib/chromium,16
dimagi/commcare-hq,16
catapult-project/catapult,16
fabioz/Pydev,16
Abjad/abjad,16
frappe/erpnext,16
django-nonrel/django,15
django/django,15
openstack/nova,15
OCA/OCB,15
openmv/micropython,15
tendenci/tendenci,14
ms-iot/python,14
redhat-openstack/nova,14
gameduell/duell,14
azatoth/scons,14
qpython-android/QPython3-core,14
OsirisSPS/osiris-sps,14
3dprinteros/3dprinteros-client,14
pelya/commandergenius,14
SickRage/SickRage,13
moesy/AWS-Lambda-ML-Microservice-Skeleton,13
LumPenPacK/NetworkExtractionFromImages,13
qgis/QGIS,13
burakbayramli/kod,13
getsentry/sentry,13
daoluan/decode-Django,13
edx/edx-platform,13
snakeleon/YouCompleteMe-x64,13
CivicTechTO/open-cabinet,12
drawquest/drawquest-web,12
vlegoff/tsunami,12
golismero/golismero,12
deanhiller/databus,12
twitter/pants,12
odoo/odoo,12
hlzz/dotfiles,12
orangeduck/PyAutoC,12
pyfa-org/Pyfa,12
FFMG/myoddweb.piger,12
Stanford-Online/edx-platform,11
VisTrails/VisTrails,11
XX-net/XX-Net,11
goldeneye-source/ges-code,11
SciTools/iris,11
Jenyay/outwiker,11
kuri65536/python-for-android,11
Azure/azure-sdk-for-python,11
duducosmos/pgs4a,11
kovidgoyal/calibre,11
DarkFenX/Pyfa,11
loopCM/chromium,11
bq/bitbloq-offline,10
ChromiumWebApps/chromium,10
NeuralEnsemble/neuroConstruct,10
googleads/googleads-python-lib,10
google/ggrc-core,10
divio/django,10
GoogleChrome/big-rig,10
aliyun/oss-ftp,10
CubicERP/odoo,10
sametmax/Django--an-app-at-a-time,10
pantsbuild/pants,10
luci/luci-py,10
bruderstein/PythonScript,10
openstack/heat,10
openstack/tempest,10

2025-02-12 18:29:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:49 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:49 - root - INFO - SQL:
SELECT f."repo_name", COUNT(*) AS "file_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
    GROUP BY f."repo_name"
    ORDER BY "file_count" DESC
    LIMIT 100;
Results:
repo_name,file_count
dieseldev/diesel,1
google/rekall,1
MAECProject/python-maec,1

2025-02-12 18:29:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 18:29:51 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:51 - root - INFO - SQL:
SELECT f."repo_name", AVG(c."size") AS "average_size"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py'
    GROUP BY f."repo_name"
    LIMIT 100;
Results:
repo_name,average_size
google/rekall,2331.000000
dimagi/commcare-hq,564.000000
dieseldev/diesel,619.000000
MAECProject/python-maec,12077.000000

2025-02-12 18:29:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:52 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:53 - root - INFO - SQL:
SELECT r."repo_name", r."watch_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
    WHERE r."repo_name" IN (
      SELECT DISTINCT f."repo_name"
      FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
      JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%.py' AND c."content" ILIKE '%def %'
    )
    ORDER BY r."watch_count" DESC
    LIMIT 100;
Results:
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2

2025-02-12 18:29:53 - root - INFO - itercount: 0
2025-02-12 18:29:53 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **SAMPLE_FILES**
  - `"repo_name"`: Identifies the repository each file belongs to.
  - `"path"`: Contains the file path, used to find files with a `.py` extension.
  - `"id"`: Unique identifier for each file, used to join with `SAMPLE_CONTENTS`.

- **SAMPLE_CONTENTS**
  - `"id"`: Matches the file `"id"` from `SAMPLE_FILES`.
  - `"size"`: Size of the file in bytes, used to filter files smaller than 15,000 bytes.
  - `"content"`: Contains the file content, used to search for the substring `"def "`.

- **SAMPLE_REPOS**
  - `"repo_name"`: Repository name, used to get the watch counts.
  - `"watch_count"`: Total number of watch events for the repository.

**Conditions that may be used:**

- Files with a `.py` extension: `"path" ILIKE '%.py'`
- Files smaller than 15,000 bytes: `"size" < 15000`
- Files containing the substring `"def "`: `"content" ILIKE '%def %'`

---

**SQL Queries:**

1. **List distinct repository names from `SAMPLE_REPOS`:**

   ```sql
   SELECT DISTINCT "repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS
   LIMIT 100;
   ```

2. **Retrieve file paths ending with `.py` from `SAMPLE_FILES`:**

   ```sql
   SELECT "path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
   WHERE "path" ILIKE '%.py'
   LIMIT 100;
   ```

3. **Get file IDs and sizes for files smaller than 15,000 bytes from `SAMPLE_CONTENTS`:**

   ```sql
   SELECT "id", "size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "size" < 15000
   LIMIT 100;
   ```

4. **Find contents containing `"def "` in `SAMPLE_CONTENTS`:**

   ```sql
   SELECT "id", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "content" ILIKE '%def %'
   LIMIT 100;
   ```

5. **List repository names and watch counts from `SAMPLE_REPOS`:**

   ```sql
   SELECT "repo_name", "watch_count"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS
   ORDER BY "watch_count" DESC
   LIMIT 100;
   ```

6. **Join `SAMPLE_FILES` and `SAMPLE_CONTENTS` on `"id"` and filter for `.py` files:**

   ```sql
   SELECT f."repo_name", f."path", c."size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py'
   LIMIT 100;
   ```

7. **Find files that are `.py` files smaller than 15,000 bytes:**

   ```sql
   SELECT f."repo_name", f."path", c."size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py' AND c."size" < 15000
   LIMIT 100;
   ```

8. **Get repositories with files containing `"def "` in their content:**

   ```sql
   SELECT DISTINCT f."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE c."content" ILIKE '%def %'
   LIMIT 100;
   ```

9. **Find repositories with `.py` files containing `"def "` and size less than 15,000 bytes:**

   ```sql
   SELECT DISTINCT f."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
   LIMIT 100;
   ```

10. **Retrieve the watch counts for repositories meeting all criteria:**

    ```sql
    SELECT r."repo_name", r."watch_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
    WHERE r."repo_name" IN (
      SELECT DISTINCT f."repo_name"
      FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
      JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
    )
    ORDER BY r."watch_count" DESC
    LIMIT 100;
    ```

11. **List all Python files with their content sizes, filtering files containing `"def "`:**

    ```sql
    SELECT f."path", c."size", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."content" ILIKE '%def %'
    LIMIT 100;
    ```

12. **Count the number of `.py` files per repository:**

    ```sql
    SELECT f."repo_name", COUNT(*) AS "py_file_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."path" ILIKE '%.py'
    GROUP BY f."repo_name"
    ORDER BY "py_file_count" DESC
    LIMIT 100;
    ```

13. **Find repositories with the highest number of small `.py` files containing `"def "`:**

    ```sql
    SELECT f."repo_name", COUNT(*) AS "file_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
    GROUP BY f."repo_name"
    ORDER BY "file_count" DESC
    LIMIT 100;
    ```

14. **Get the average size of `.py` files per repository:**

    ```sql
    SELECT f."repo_name", AVG(c."size") AS "average_size"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py'
    GROUP BY f."repo_name"
    LIMIT 100;
    ```

15. **List repositories and their total watch counts where `.py` files contain `"def "`:**

    ```sql
    SELECT r."repo_name", r."watch_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
    WHERE r."repo_name" IN (
      SELECT DISTINCT f."repo_name"
      FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
      JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%.py' AND c."content" ILIKE '%def %'
    )
    ORDER BY r."watch_count" DESC
    LIMIT 100;
    ```

These queries help explore the relevant data and understand how to retrieve repositories with the specified criteria using the available tables and columns.Query:
SELECT DISTINCT "repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS
   LIMIT 100;
Answer:
repo_name
kbandla/APTnotes
bigcompany/hook.io
H07000223/FlycoDialog_Master
veficos/reverse-engineering-for-beginners
oblac/jodd
leichunfeng/WXTabBarController
gavinbunney/Toucan
krisk/Fuse
brigade/react-waypoint
Quartz/mapquery
gephi/gephi
ant-design/ant-ux
CodelightStudios/Android-Smart-Login
onestraw/ebook
SwiftStudies/Duration
pgexperts/pgx_scripts
muaz-khan/WebRTC-Experiment
lovell/sharp
tombh/texttop
collinhundley/Swift-AI
laravel/homestead
raisemarketplace/ground-control
rstudio/shiny
FredKSchott/fflip
jakubpawlowicz/clean-css
tushar-rishav/code2pdf
NorthwoodsSoftware/GoJS
danikula/AndroidVideoCache
hmkcode/Android
ViccAlexander/Chameleon
0x5e/wechat-deleted-friends
ikCourage/LFS
hitsujiwool/timeline
EduMelo/jboss-ejb3-tutorial
northox/roundcube-yubikey-plugin
frc5687/pi-tracker
jaccarmac/dot-emacs-dot-d
indonesia/community
Muyangmin/AVLoadingIndicatorView
linkedin/gobblin
id-Software/DOOM-3-BFG
garnaat/kappa
evilsocket/bettercap
kevin0571/STPopup
marmelroy/PhoneNumberKit
assemble/assemble
erikflowers/weather-icons
xitu/gold-miner
densamoylov/protection_info
lixm/pybooklet
WithMeApp/LBStyle
lvogelzang/Blocky
Austin-Droids/GeoQuiz
johankson/flipper
uggla/alexandria
aaronjorbin/WordPress-Theme-Directory-Slurper
vladgolubev/mdlok
Novatics/visiteumaescola
DBTeam-ES/DBTeam-Bot
alexandramaster/bootstrap
xaviershay/kronic
coconetlero/Qt-ITK-VTK-Image-Viewer
macteo/Marklight
alioygur/godash
appbaseio/Docbase
realm/SwiftLint
isocpp/CppCoreGuidelines
google/protobuf
preciousforever/sketch-data-populator
GoogleCloudPlatform/DataflowJavaSDK
12207480/DOPDropDownMenu-Enhanced
toddmotto/echo
videojs/videojs-contrib-hls
wqi/votetube
i-make-robots/LEDWall
romka/lua-transliterator
achow101/achow101.github.io
bendycode/ruby-pivotal-tracker
sebastianomorando/OffPlyWebGLVisualizer
lenguyenthedat/dextra-mindef-2015
hackspark/SFPD-Loves-Spark
elgerlambert/redux-localstorage
rangle/batarangle
core-plot/core-plot
jakearchibald/es6-promise
WhisperSystems/Signal-Android
posva/vue-mdl
tc39/ecmascript-asyncawait
jxieeducation/DIY-Data-Science
snwh/paper-icon-theme
chrisaljoudi/uBlock
sandeepmistry/noble
objccn/articles
tealeg/xlsx
dotnet/coreclr
go-kit/kit
havthgem/quick-resize
unindented/grunt-electron-installer-debian
FrontEndHappyHour/website
brendt/Git-Alias-Pak-2.1
Query:
SELECT "path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES
   WHERE "path" ILIKE '%.py'
   LIMIT 100;
Answer:
Too long, hard cut:
path
push_notifications/migrations/0002_auto_20160106_0850.py
Maximum_Subarray/Python/shivam5992/kadane.py
Caesar_Cipher/Python/kennyledet/caesar_cipher.py
setup.py
pgcrypto_expressions/test/settings.py
ec2_security_groups_dumper/__init__.py
dirigible/info_pages/__init__.py
tests/python/tests/test_updatecollection.py
tests/testproject/settings.py
yandex_money/api.py
google/cloud/dataflow/utils/__init__.py
examples/Rest/ex20_get_ilo_nic.py
try/for_now.py
node_modules/node-sass/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py
vendor/distribute-0.6.36/easy_install.py
vendor/pip-1.3.1/pip/vcs/subversion.py
vendor/distribute-0.6.36/tests/install_test.py
testing/testing/unit_tests/__init__.py
src/__init__.py
image_cropping/utils.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/GenFds/FfsInfStatement.py
src/VBox/Additions/common/crOpenGL/stub_common.py
src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/Ecc/CodeFragmentCollector.py
project/admin/__init__.py
examples/backend/myproject/myproject/wsgi.py
tools/perf/tests/attr.py
health_check_celery/tasks.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/lib/user_array.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/core/tests/test_multiarray_assignment.py
osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/distutils/command/sdist.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/traversal/tests/test_dfs.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/bipartite/tests/test_matching.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/core/cversions.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/doc/howtofind.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/lib/tests/test__datasource.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/f2py/f2py2e.py
win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/polynomial/laguerre.py
osx_build/nefi2_osx_amd64_xcode_2015/bin/nefi2/model/algorithms/invert_color.py
path.py
lib/gdata/tlslite/utils/PyCrypto_AES.py
servers/youtube.py
cloudify/manager.py
misc/webdriver-w3c-tests/cookie/cookie_test.py
Lessons/lesson15.py
layout_scanner.py
networkapiclient/UsuarioGrupo.py
networkapiclient/EnvironmentVIP.py
thirdparty/future/src/libfuturize/fixes/fix_print.py
third_party/catapult/third_party/Paste/paste/util/ip4.py
third_party/catapult/third_party/webtest/webtest/forms.py
tools/gyp/test/make_global_settings/full-toolchain/gyptest-make_global_settings.py
third_party/jinja2/compiler.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/file/__init__.py
content/test/gpu/gpu_tests/trace_test_expectations.py
tools/telemetry/telemetry/value/value_unittest.py
tools/perf/page_sets/page_reload_cases.py
third_party/jinja2/_compat.py
third_party/chromite/cbuildbot/stages/build_stages.py
third_party/chromite/lib/terminal.py
tools/telemetry/telemetry/internal/backends/mandoline/config.py
third_party/cython/src/Cython/Plex/Lexicons.py
tools/gyp/test/sanitize-rule-names/gyptest-sanitize-rule-names.py
tools/grit/grit/format/policy_templates/writers/xml_writer_base_unittest.py
third_party/google_appengine_cloudstorage/cloudstorage/common.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/cloudfront/distribution.py
chrome/app/theme/PRESUBMIT.py
tools/gyp/test/ios/gyptest-per-config-settings.py
tools/telemetry/third_party/gsutilz/third_party/apitools/apitools/base/py/buffered_stream_test.py
third_party/catapult/tracing/tracing_build/__init__.py
tools/telemetry/telemetry/internal/backends/chrome_inspector/inspector_page_unittest.py
build/android/pylib/local/__init__.py
native_client/tools/scons_to_gn/print_data.py
tools/memory_inspector/memory_inspector/backends/memdump_parser.py
third_party/catapult/hooks/__init__.py
tools/cr/cr/actions/linux.py
tools/swarming_client/third_party/rsa/rsa/transform.py
third_party/catapult/perf_insights/perf_insights/corpus_driver.py
tools/gyp/test/win/gyptest-link-enable-winrt.py
third_party/chromite/scripts/dep_tracker_unittest.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/datapipeline/layer1.py
third_party/catapult/tracing/third_party/tvcm/third_party/rcssmin/_setup/py3/setup.py
third_party/chromite/lib/patch.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/mws/__init__.py
tools/telemetry/third_party/modulegraph/modulegraph_tests/testpkg-edgedata/pkg/toplevel_conditional_import_existing.py
tools/telemetry/third_party/gsutilz/third_party/boto/boto/gs/bucketlistresultset.py
tools/telemetry/third_party/gsutilz/third_party/boto/tests/unit/sqs/test_queue.py
buildtools/clang_format/script/clang-format.py
third_party/catapult/third_party/oauth2client/oauth2client/crypt.py
third_party/tlslite/tlslite/utils/cryptomath.py
tools/telemetry/third_party/gsutilz/gslib/addlhelp/projects.py
tools/deep_memory_profiler/subcommands/buckets.py
tools/telemetry/third_party/webpagereplay/dnsproxy.py
tools/chrome_proxy/integration_tests/__init__.py
third_party/cython/src/Cython/Pl
Query:
SELECT "id", "size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "size" < 15000
   LIMIT 100;
Answer:
id,size
6ba8b7a1ad72449bed2c27c18dc09fdfdc902f4f,1455
2808cc7dad1e963456a33387816a60edcd14e3c2,2743
9ba1cd853975d7412462af7426bfff682bf12171,2526
b5d98c4d7b90b473fdf470a29b2562c7c6b70c67,636
feb55b7e02a74beed6b06ed165c8ba65cb76bd75,2954
f25ac53133823982d0d8449be27871abdbd4a494,865
814343a33660c53403791055ac5f502cee0644bd,4802
bb50f15deb162b39542ee69056036a8d659d5fc6,588
e8b52ec203d330ee3fbf0403a4dbe4383d14b450,3675
13e40b4143150944245cf5bd02600567905e77e5,336
e210013f3d2cf0decdd6aff2960e34194232b9bf,544
6555b1a2f3b5fa0064c6336fc878a7995bd4fe4c,397
da48d7c48ca7f6c4c734487af0f288a1bb9926a2,43
105b24078f81dbc0cc3fa255a83c2ec8789272d0,9000
0698e877472abb2aaa3a9896c05a1cdeca1747ea,979
6982ea63025c042ddf8c58eebb1add752e614761,2524
b09dfb007c3beec5ec0bcb2c113a826849a6d68b,3451
1409a2c49c7e19c876e0e3d4344652888a5702c5,247
6ada1bc42068cf8cde495b98de70a946b532dc38,2863
be12188de5dd2693801bbc0eb8b3590ea6e37c48,1364
d7b65155d6ef5bdfbdfee466ea9882d8c4043e1c,12204
e75b9a2309db2fc1ae2af0c0c690418923980ba0,1492
6584622e9d48f2cd6a3bf15f71fd05ba944a779f,7773
cea0b0ea2909f6391437a5d56222f63ff7e0d429,3556
659d4d87f91545bdb12b3006885b80e2b03019f4,1899
fa36881be7f48249872472742e9dd3b7c978dd6b,511
8bf775c4a0ea1d2638605d9895ed6061a4c7274c,2499
01c68339bb58e3a3ad2ae06ce287ee4ecee6dd6d,388
6c6c181ae1ef4dc8d4d28e37195ca655423fc491,5213
4ea1750cf1a83a33b2ab207d92c3b0a71dbffbc5,2206
67667768c0a3f7c53f81d539958ed74ef5ad6cf2,823
a4dbfefc7a0c6008ee7214acd91afa7dcddf5a22,10764
2c5018824ecdba5bfd51152eb64660fd279e2ea3,3365
393396c26a8eef3f07790ef9bfd0fba0beda5c94,2226
5c95d797d7027465da99ce3201d3bc2c2b522a06,1423
ab28cd93421f409a18f855de257dee2d98bbb515,7005
a44af71773f57e0d9ebb6be5fa557408a5aa3f96,598
d815cb6c681ed60033fd4ff946d272d3638c4f8f,1306
2fb24092643128e0ea2b86f931fa46c2d4be8a29,5121
7091eb08215c8441809949d82fe58c77c7982479,1262
02c3ff241535c9b7c007fa7291c2e722404199f8,5024
260a96fb1d7fd95106048af7aecaa43e8e0af98a,10589
9c4d522ac08d420a1dfe8fc4dc4572e152ffbff2,1811
19110dda80e5f8e620f366c8d168eb849c5fe113,466
88a18d4a8d4770b87f9391d7b2e13420780f7064,3335
5bc9de62db3f14a16d0391be9ff7a75998442bfa,229
05636012267d58df654e474cc4b1e3b4bffb2507,967
490346726ae4e652fb4f63784a5a5e3d0aa71774,579
82ee1954a597e44a337c68e50ae398b08acf889b,4394
69395bde0bed8bd93efd1742502350dce3ef852b,3276
002272f4fe68666c7fc4a308bc849ac1763eef3d,1599
a63fb573fec38da5b3003a14631bf3564eec775b,48
9c8783191106dca07a7206247dc05d20ca418c77,2737
d12178fa0a4544b8cd977da8fbf93a04f24d485e,1597
fc9f599c3bd2a5cf0a047f78ef746425313121fc,1719
e2a28a304a75ab5a71506c568c2632d091df6da8,251
82d2b784aeb8a4d227759c67432bcc2c76333120,681
ca517ba2656c2ff69fc92d18e759156a180a909f,2720
aee56a5244cdb5347ddaf6e5b9b5cb2b3b3413df,462
5b44552b01e50999628379b03a82016ffbd07593,245
7de639f8c0f7eea04cf4f28ba1f936448e382343,1402
c08d469ae5e9eece9a5a93d2fbe1c62e1e04074c,954
84dec33bfcfd3a3757e29e39e6ee3d52f793f635,5349
672f5a71a2b2ed49a2131398edd9dd90c4ccafa2,2743
7f47f629f1454ac2e74b186516a90de1b0956d1d,908
2616a27a5c0d15e31fbee4c4aa697612d8d83521,8457
3cef78ec093a2e5eed65b15bf47204232d94f261,2558
a9753c5115e98af376181d88ac517ec012762443,510
a5a83a8aa414fc687a514583ed0a24cb4fee5621,2776
3a23480c4e6763e385be3aa7988e52300756caa7,2680
c1faacf0d09863e3cb841f8408291fa07efdd920,5297
ad1b22a44cd42697373929fc40c1d081c048caeb,588
5a625b6c3a3aee5595a0cf5ab1ad080981ea948d,7163
71931c03db6f3c6bd79b4f155756ea6930fe9569,1099
9b04a3d91578c1ddd1c1e4d6a665b90b6ad59767,894
fa1a33a95800e6aa673e9d561d204471bac0f044,571
041e8c6a8324a1cc35c6ebed87681cd6e4d9fa16,1845
357b24302720af6b65f7b155ee4afc41618e6972,2266
bb15b0d4366a5efac6e5bcd788e29f304ba9e2c0,5642
f4848c4eec5816724f3a7396fd6488e311de193f,1122
b7c2707c285b8d15a7ee3ae31c51617ceab60e3d,421
d0e8af0d8562637415f1cada3ff9133d79e73c5e,622
09dd645d70120c5d7552303017325a7898bd48a1,1290
9298c9431a2bf563cfd6314385a80dcdbf3097f7,1476
e439364c40636355e662494a3187be65149a1991,593
262f173567a0b09e46e75e26347f3c61cb0dfec1,10089
9bbfff0efae7ae7c45f130a0f2eb9e702a4f69e5,75
8a760852374240ae1162b1dd517637d5b1094885,6880
dc2b3716a7faa5e363c7b8c206fe398c3fa692b4,8333
4cbfc3c007c0af97c13456ddfa19dfca52905110,483
7dded6e5c115c228e85da3099c466b0276d67b1e,1203
eea167a0dec0f8416308484cd6d1d54ce5ef41ce,3106
d1d56b099b4e504ef6bb8d30b795546b90c63ffe,13213
65c7e616c59cb411ac636757f67f47026b0eb2ab,1973
fc6a56a26091252340eb50a97be793bd4e8f7272,2247
06f2d29b24053ebe698558a1656f8acb004ccfe0,1081
bbb1d6be2174476ffbd9c59837d7748397e4a2b5,1897
ccf759678bf51d1d2d2912e3adac5a81cebcbe9f,1414
498e5c15497c365c42156c58138f618233a00f7e,5168
478202e6f40409f0f588373073108c7eb71f8cbe,870
Query:
SELECT "id", "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "content" ILIKE '%def %'
   LIMIT 100;
Answer:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;
Query:
SELECT "repo_name", "watch_count"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS
   ORDER BY "watch_count" DESC
   LIMIT 100;
Answer:
repo_name,watch_count
FreeCodeCamp/FreeCodeCamp,90457
firehol/netdata,13208
joshbuchea/HEAD,13125
braydie/HowToBeAProgrammer,12019
sindresorhus/awesome,11063
tensorflow/tensorflow,10728
facebook/react,10458
ParsePlatform/parse-server,10339
loverajoel/jstips,9585
facebook/react-native,9437
vhf/free-programming-books,8862
vuejs/vue,8822
airbnb/javascript,8708
caesar0301/awesome-public-datasets,8653
twbs/bootstrap,8211
toddmotto/public-apis,8182
getlantern/lantern,8110
DrkSephy/es6-cheatsheet,7967
airbnb/caravel,7764
googlesamples/android-architecture,7713
getify/You-Dont-Know-JS,7650
allenwong/30DaysofSwift,7485
jgthms/bulma,7387
dthree/cash,7309
Rochester-NRT/AlphaGo,7200
apple/swift,7041
robbyrussell/oh-my-zsh,6983
github/gitignore,6898
facebook/draft-js,6715
matryer/bitbar,6384
Microsoft/vscode,6272
ptmt/react-native-desktop,6186
p-e-w/maybe,6127
parkjs814/AlgorithmVisualizer,6057
hollance/swift-algorithm-club,6012
alexjc/neural-doodle,6008
fbsamples/f8app,5987
nodejs/node,5954
jiahaog/nativefier,5836
Microsoft/CNTK,5833
atom/atom,5826
jcjohnson/neural-style,5768
tensorflow/models,5629
reactjs/redux,5622
jlevy/the-art-of-command-line,5603
mbostock/d3,5601
thejameskyle/the-super-tiny-compiler,5555
Microsoft/ChakraCore,5524
nylas/N1,5476
CRYTEK-CRYENGINE/CRYENGINE,5433
petehunt/react-howto,5428
VerbalExpressions/JSVerbalExpressions,5374
angular/angular.js,5347
torvalds/linux,5332
google/agera,5319
angular/angular,5318
atom/electron,5302
mxstbr/react-boilerplate,5163
kadirahq/react-storybook,5154
rg3/youtube-dl,5140
daneden/animate.css,5113
jbranchaud/til,5105
docker/docker,5052
shockone/black-screen,5028
google/xi-editor,5008
electron/electron,4995
CatchChat/Yep,4994
mhinz/vim-galore,4928
ReactiveX/RxJava,4926
josephmisiti/awesome-machine-learning,4917
weui/weui,4883
open-source-society/computer-science,4848
FortAwesome/Font-Awesome,4838
puikinsh/gentelella,4825
webpack/webpack,4812
soimort/you-get,4776
vinta/awesome-python,4734
CosmicMind/Material,4731
typicode/json-server,4720
aosabook/500lines,4659
golang/go,4620
0x5e/wechat-deleted-friends,4609
dear-github/dear-github,4604
nlp-compromise/nlp_compromise,4600
lodash/lodash,4596
santinic/how2,4582
google/material-design-lite,4571
callemall/material-ui,4455
nvbn/thefuck,4438
Dogfalo/materialize,4425
johnpapa/angular-styleguide,4403
JakeLin/IBAnimatable,4399
google/seesaw,4388
amzn/alexa-avs-raspberry-pi,4384
vsouza/awesome-ios,4346
letsencrypt/letsencrypt,4325
square/retrofit,4306
google/flexbox-layout,4306
Nickersoft/push.js,4284
vurtun/nuklear,4273
Query:
SELECT f."repo_name", f."path", c."size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py'
   LIMIT 100;
Answer:
repo_name,path,size
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,564
dieseldev/diesel,examples/zeromq_receiver.py,619
MAECProject/python-maec,maec/utils/merge.py,12077
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,2331
Query:
SELECT f."repo_name", f."path", c."size"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py' AND c."size" < 15000
   LIMIT 100;
Answer:
repo_name,path,size
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,2331
dieseldev/diesel,examples/zeromq_receiver.py,619
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,564
MAECProject/python-maec,maec/utils/merge.py,12077
Query:
SELECT DISTINCT f."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE c."content" ILIKE '%def %'
   LIMIT 100;
Answer:
repo_name
linuxppc/linux
CyanogenMod/android_kernel_htc_flounder
cmangos/cmangos-wod
MarekKowalski/LiveScan3D
Tkkg1994/SM-G930F
mitwo-dev/android_kernel_xiaomi_msm8960
DespairFactor/N6
alibaba/ali_kernel
SanDisk-Open-Source/SSD_Dashboard
fedya/aircam-openwrt
ptaoussanis/nippy
gripped/MK808-headless-nand-3.0.8-rk3066
stefan-kolb/nucleus
CyanogenMod/android_kernel_samsung_mondrianwifi
ioquake/jedi-academy
Tommy-Geenexus/android_kernel_sony_msm8994_suzuran_5.x
SoftRoCE/rxe-dev
ComputerHobbyist/cqa
amirrajan/Oak
Biktorgj/Android_b2_Kernel
Microsoft/WinObjC
CirrusLogic/linux-drivers
halx99/x-studio365-ldb
ceph/ceph-client
ycsoft/FatCat-Server
Myself5/android_kernel_sony_msm8974
pfactum/pf-kernel
wandboard-org/linux
ugur2323/Whispermehmet_VE
Rinnegatamante/easyrpg-player-3ds
sergeyreznik/et-engine
CyanogenMod/android_kernel_xiaomi_cancro
raspberrypi/quake3
Zenfone2-Dev/kernel-FlareM
lukier/linux-hi3518
coreboot/coreboot
OnePlusOSS/android_kernel_oneplus_one
scummvm/scummvm
javilonas/Lonas_KL-SM-G901F
jcmvbkbc/gcc-xtensa
vinriviere/m68k-atari-mint-gcc
CyanogenMod/android_kernel_oppo_msm8939
l1k/linux
iocellnetworks/ndas4windows
RT-Thread/rt-thread
Clouded/linux-rt-rpi2
jgallen23/jquery-builder
bright-things/ionic
CreativeCimmons/ORB-SLAM-Android-app
puppeh/gcc-6502
radxa/linux-rockchip
faux123/Nexus_5
Biktorgj/Gear_S_Kernel
Christopher83/samsung-kernel-msm7x30
jollaman999/jolla-kernel_bullhead
MAECProject/python-maec
dieseldev/diesel
ms-iot/python
Cl3Kener/HERC-KERNELS
andreamerello/linux-zynq-stable
friendlyarm/linux-3.4.y
google/rekall
ParrotSec/linux-parrot
wens/linux
ouya/ouya_1_1-kernel
justathoughtor2/atomicApe
xieyaxiongfly/Atheros-CSI-Tool
coreos/linux
jonjonarnearne/smi2021
ValveSoftware/steamos_kernel
glewarne/S6-UniKernel
CyanogenMod/android_kernel_sony_msm8x27
Asus-T100/kernel
GaloisInc/hacrypto
visi0nary/android_kernel_elephone_p8000
ARM-software/linux
kctan0805/vdpm
kularny/GeniSys.Kernel-old
dealii/dealii
tobiasjakobi/linux-odroid-public
roberttidey/userland
CyanogenMod/android_kernel_moto_shamu
franciscofranco/flo
afaerber/linux
Query:
SELECT DISTINCT f."repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
   JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
     ON f."id" = c."id"
   WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
   LIMIT 100;
Answer:
repo_name
dieseldev/diesel
google/rekall
MAECProject/python-maec
Query:
SELECT r."repo_name", r."watch_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
    WHERE r."repo_name" IN (
      SELECT DISTINCT f."repo_name"
      FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
      JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
    )
    ORDER BY r."watch_count" DESC
    LIMIT 100;
Answer:
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2
Query:
SELECT f."path", c."size", c."content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."content" ILIKE '%def %'
    LIMIT 100;
Answer:
Too long, hard cut:
path,size,content
maec/utils/merge.py,12077,"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only MAEC Packages are supported'

    # Merge the MAEC packages
    merged_package = merge_packages(parsed_documents)
    # Write the merged package to the output file
    merged_package.to_xml_file(output_file, {""https://github.com/MAECProject/python-maec"":""merged""})

def merge_packages(package_list, namespace = None):
    '''Merge a list of input MAEC Packages and return a merged Package instance.'''
    malware_subjects = []
    # Instantiate the ID generator class (for automatic ID generation)
    if not namespace:
        NS = Namespace(""https://github.com/MAECProject/python-maec"", ""merged"")
    else:
        NS = namespace
    maec.utils.set_id_namespace(NS)
    # Build the list of Malware Subjects
    for package in package_list:
        for malware_subject in package.malware_subjects:
            malware_subjects.append(malware_subject)
    # Merge the Malware Subjects
    merged_subjects = merge_malware_subjects(malware_subjects)
    # Merge the input namespace/schemaLocation dictionaries
    merged_namespaces = {}
    merged_schemalocations = {}
    for package in package_list:
        merged_namespaces.update(package.__input_namespaces__)
        merged_schemalocations.update(package.__input_schemalocations__)
    # Create a new Package with the merged Malware Subjects
    merged_package = Package()
    merged_package.malware_subjects = MalwareSubjectList(merged_subjects)
    merged_package.__input_namespaces__ = merged_namespaces
    merged_package.__input_schemalocations__ = merged_schemalocations
    return merged_package

def bin_malware_subjects(malware_subject_list, default_hash_type='md5'):
    '''Bin a list of Malware Subjects by hash
       Default = MD5
    '''
    binned_subjects = {}
    for malware_subject in malware_subject_list:
        mal_inst_obj = malware_subject.malware_instance_object_attributes
        if mal_inst_obj:
            obj_properties = mal_inst_obj.properties
            if obj_properties and obj_properties.hashes:
                for hash in obj_properties.hashes:
                    if hash.type_ and hash.simple_hash_value:
                        hash_type = ''
                        hash_value = ''
                        # Get the hash type
                        hash_type = str(hash.type_).lower()
                        # Get the hash value
                        hash_value = str(hash.simple_hash_value).lower()
                            
                        # Check the hash type and bin accordingly
                        if hash_type == default_hash_type:
                            if hash_value in binned_subjects:
                                binned_subjects[hash_value].append(malware_subject)
                            else:
                                binned_subjects[hash_value] = [malware_subject]
    return binned_subjects

def merge_entities(entity_list):
    '''Merge a list of MAEC/CybOX entities'''
    dict_list = [x.to_dict() for x in entity_list]
    output_dict = dict_merge({}, *dict_list)
    return output_dict

def deduplicate_vocabulary_list(entity_list, value_name = ""value""): # TODO: 
Query:
SELECT f."repo_name", COUNT(*) AS "py_file_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    WHERE f."path" ILIKE '%.py'
    GROUP BY f."repo_name"
    ORDER BY "py_file_count" DESC
    LIMIT 100;
Answer:
repo_name,py_file_count
anhstudios/swganh,135
mollstam/UnrealPy,90
iridium-browser/iridium-browser-ubuntu,60
JetBrains/intellij-community,54
openhatch/oh-mainline,46
bugvm/bugvm-studio,46
hortonworks/hortonworks-sandbox,38
espadrine/opera,37
cgstudiomap/cgstudiomap,37
mirror/chromium,36
cloudera/hue,33
gabrielfalcao/lettuce,32
hynnet/hiwifi-openwrt-HC5661-HC5761,29
justathoughtor2/atomicApe,29
dstockwell/chromium,27
nwjs/chromium.src,25
Samsung/ChromiumGStreamerBackend,25
Moguri/BlenderPanda,24
neeker/chromium_extract,23
IONISx/edx-platform,23
kbengine/kbengine,22
krintoxi/NoobSecToolkit,22
Microvellum/Fluid-Designer,21
harmy/kbengine,21
cnsoft/kbengine-cocos2dx,20
OCA/OpenUpgrade,20
damonkohler/sl4a,20
acatadog/kbengine,19
openfun/edx-platform,18
pymo/pymo,18
qunaibit/zippy-mirror,18
Southpaw-TACTIC/TACTIC,17
crosswalk-project/chromium-crosswalk,17
scheib/chromium,16
dimagi/commcare-hq,16
catapult-project/catapult,16
fabioz/Pydev,16
Abjad/abjad,16
frappe/erpnext,16
django-nonrel/django,15
django/django,15
openstack/nova,15
OCA/OCB,15
openmv/micropython,15
tendenci/tendenci,14
ms-iot/python,14
redhat-openstack/nova,14
gameduell/duell,14
azatoth/scons,14
qpython-android/QPython3-core,14
OsirisSPS/osiris-sps,14
3dprinteros/3dprinteros-client,14
pelya/commandergenius,14
SickRage/SickRage,13
moesy/AWS-Lambda-ML-Microservice-Skeleton,13
LumPenPacK/NetworkExtractionFromImages,13
qgis/QGIS,13
burakbayramli/kod,13
getsentry/sentry,13
daoluan/decode-Django,13
edx/edx-platform,13
snakeleon/YouCompleteMe-x64,13
CivicTechTO/open-cabinet,12
drawquest/drawquest-web,12
vlegoff/tsunami,12
golismero/golismero,12
deanhiller/databus,12
twitter/pants,12
odoo/odoo,12
hlzz/dotfiles,12
orangeduck/PyAutoC,12
pyfa-org/Pyfa,12
FFMG/myoddweb.piger,12
Stanford-Online/edx-platform,11
VisTrails/VisTrails,11
XX-net/XX-Net,11
goldeneye-source/ges-code,11
SciTools/iris,11
Jenyay/outwiker,11
kuri65536/python-for-android,11
Azure/azure-sdk-for-python,11
duducosmos/pgs4a,11
kovidgoyal/calibre,11
DarkFenX/Pyfa,11
loopCM/chromium,11
bq/bitbloq-offline,10
ChromiumWebApps/chromium,10
NeuralEnsemble/neuroConstruct,10
googleads/googleads-python-lib,10
google/ggrc-core,10
divio/django,10
GoogleChrome/big-rig,10
aliyun/oss-ftp,10
CubicERP/odoo,10
sametmax/Django--an-app-at-a-time,10
pantsbuild/pants,10
luci/luci-py,10
bruderstein/PythonScript,10
openstack/heat,10
openstack/tempest,10
Query:
SELECT f."repo_name", COUNT(*) AS "file_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
    GROUP BY f."repo_name"
    ORDER BY "file_count" DESC
    LIMIT 100;
Answer:
repo_name,file_count
dieseldev/diesel,1
google/rekall,1
MAECProject/python-maec,1
Query:
SELECT f."repo_name", AVG(c."size") AS "average_size"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py'
    GROUP BY f."repo_name"
    LIMIT 100;
Answer:
repo_name,average_size
google/rekall,2331.000000
dimagi/commcare-hq,564.000000
dieseldev/diesel,619.000000
MAECProject/python-maec,12077.000000
Query:
SELECT r."repo_name", r."watch_count"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
    WHERE r."repo_name" IN (
      SELECT DISTINCT f."repo_name"
      FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
      JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
        ON f."id" = c."id"
      WHERE f."path" ILIKE '%.py' AND c."content" ILIKE '%def %'
    )
    ORDER BY r."watch_count" DESC
    LIMIT 100;
Answer:
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2
End Exploring Related Columns
Task: Using the 2017 GitHub Archive data for watch events, which three repositories that include at least one Python file (with a .py extension) smaller than 15,000 bytes and containing the substring "def " in its content have the highest total number of watch events for that year?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
repo_name,watch_count
repo_name1:str,watch_count1:int
repo_name2:str,watch_count2:int
repo_name3:str,watch_count3:int
(Attention: answer in three rows)
```

These are the top three repositories that include at least one Python file smaller than 15,000 bytes and containing 'def ' in its content, ranked by their total number of watch events in 2017..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 18:30:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:30:12 - root - INFO - ```sql
SELECT r."repo_name", r."watch_count"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
WHERE r."repo_name" IN (
    SELECT DISTINCT f."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
)
ORDER BY r."watch_count" DESC
LIMIT 3;
```
2025-02-12 18:30:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:30:14 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:14 - root - INFO - itercount: 1
2025-02-12 18:30:14 - root - INFO - 0
2025-02-12 18:30:14 - root - INFO - results: 
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2


2025-02-12 18:30:14 - root - INFO - Please check the answer again by reviewing Using the 2017 GitHub Archive data for watch events, which three repositories that include at least one Python file (with a .py extension) smaller than 15,000 bytes and containing the substring "def " in its content have the highest total number of watch events for that year?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
repo_name,watch_count
repo_name1:str,watch_count1:int
repo_name2:str,watch_count2:int
repo_name3:str,watch_count3:int
(Attention: answer in three rows)
```

These are the top three repositories that include at least one Python file smaller than 15,000 bytes and containing 'def ' in its content, ranked by their total number of watch events in 2017. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2
Current sql:
SELECT r."repo_name", r."watch_count"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
WHERE r."repo_name" IN (
    SELECT DISTINCT f."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
)
ORDER BY r."watch_count" DESC
LIMIT 3;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-02-12 18:30:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:30:34 - root - INFO - ```sql
SELECT r."repo_name", r."watch_count"
FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_REPOS AS r
WHERE r."repo_name" IN (
    SELECT DISTINCT f."repo_name"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_FILES AS f
    JOIN GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS AS c
      ON f."id" = c."id"
    WHERE f."path" ILIKE '%.py' AND c."size" < 15000 AND c."content" ILIKE '%def %'
)
ORDER BY r."watch_count" DESC NULLS LAST
LIMIT 3;
```
2025-02-12 18:30:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:30:35 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:36 - root - INFO - itercount: 2
2025-02-12 18:30:36 - root - INFO - 0
2025-02-12 18:30:36 - root - INFO - Total iteration counts: 2
