2025-02-12 18:28:51 - openai._base_client - INFO - Retrying request to /chat/completions in 0.464263 seconds
2025-02-12 18:29:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:29:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:42 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:43 - root - INFO - SQL:
SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
   LIMIT 100;
Results:
repo_name
kbandla/APTnotes
bigcompany/hook.io
H07000223/FlycoDialog_Master
veficos/reverse-engineering-for-beginners
oblac/jodd
leichunfeng/WXTabBarController
gavinbunney/Toucan
krisk/Fuse
brigade/react-waypoint
Quartz/mapquery
gephi/gephi
ant-design/ant-ux
CodelightStudios/Android-Smart-Login
onestraw/ebook
SwiftStudies/Duration
pgexperts/pgx_scripts
muaz-khan/WebRTC-Experiment
lovell/sharp
tombh/texttop
collinhundley/Swift-AI
laravel/homestead
raisemarketplace/ground-control
rstudio/shiny
FredKSchott/fflip
jakubpawlowicz/clean-css
tushar-rishav/code2pdf
NorthwoodsSoftware/GoJS
danikula/AndroidVideoCache
hmkcode/Android
ViccAlexander/Chameleon
0x5e/wechat-deleted-friends
ikCourage/LFS
hitsujiwool/timeline
EduMelo/jboss-ejb3-tutorial
northox/roundcube-yubikey-plugin
frc5687/pi-tracker
jaccarmac/dot-emacs-dot-d
indonesia/community
Muyangmin/AVLoadingIndicatorView
linkedin/gobblin
id-Software/DOOM-3-BFG
garnaat/kappa
evilsocket/bettercap
kevin0571/STPopup
marmelroy/PhoneNumberKit
assemble/assemble
erikflowers/weather-icons
xitu/gold-miner
densamoylov/protection_info
lixm/pybooklet
WithMeApp/LBStyle
lvogelzang/Blocky
Austin-Droids/GeoQuiz
johankson/flipper
uggla/alexandria
aaronjorbin/WordPress-Theme-Directory-Slurper
vladgolubev/mdlok
Novatics/visiteumaescola
DBTeam-ES/DBTeam-Bot
alexandramaster/bootstrap
xaviershay/kronic
coconetlero/Qt-ITK-VTK-Image-Viewer
macteo/Marklight
alioygur/godash
appbaseio/Docbase
realm/SwiftLint
isocpp/CppCoreGuidelines
google/protobuf
preciousforever/sketch-data-populator
GoogleCloudPlatform/DataflowJavaSDK
12207480/DOPDropDownMenu-Enhanced
toddmotto/echo
videojs/videojs-contrib-hls
wqi/votetube
i-make-robots/LEDWall
romka/lua-transliterator
achow101/achow101.github.io
bendycode/ruby-pivotal-tracker
sebastianomorando/OffPlyWebGLVisualizer
lenguyenthedat/dextra-mindef-2015
hackspark/SFPD-Loves-Spark
elgerlambert/redux-localstorage
rangle/batarangle
core-plot/core-plot
jakearchibald/es6-promise
WhisperSystems/Signal-Android
posva/vue-mdl
tc39/ecmascript-asyncawait
jxieeducation/DIY-Data-Science
snwh/paper-icon-theme
chrisaljoudi/uBlock
sandeepmistry/noble
objccn/articles
tealeg/xlsx
dotnet/coreclr
go-kit/kit
havthgem/quick-resize
unindented/grunt-electron-installer-debian
FrontEndHappyHour/website
brendt/Git-Alias-Pak-2.1

2025-02-12 18:29:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:44 - root - INFO - SQL:
SELECT "repo_name", "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py'
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,path
jleclanche/django-push-notifications,push_notifications/migrations/0002_auto_20160106_0850.py
kennyledet/Algorithm-Implementations,Maximum_Subarray/Python/shivam5992/kadane.py
kennyledet/Algorithm-Implementations,Caesar_Cipher/Python/kennyledet/caesar_cipher.py
orcasgit/django-pgcrypto-expressions,setup.py
orcasgit/django-pgcrypto-expressions,pgcrypto_expressions/test/settings.py
percolate/ec2-security-groups-dumper,ec2_security_groups_dumper/__init__.py
pythonanywhere/dirigible-spreadsheet,dirigible/info_pages/__init__.py
rpm-software-management/createrepo_c,tests/python/tests/test_updatecollection.py
sbaechler/django-multilingual-search,tests/testproject/settings.py
yandex-money/yandex-money-sdk-python,yandex_money/api.py
GoogleCloudPlatform/DataflowPythonSDK,google/cloud/dataflow/utils/__init__.py
HewlettPackard/python-ilorest-library,examples/Rest/ex20_get_ilo_nic.py
Sorosliu1029/Rule-based_Expert_System,try/for_now.py
daigofuji/jekyll-foundation-5-starter,node_modules/node-sass/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py
dbrgn/heroku-buildpack-python-sklearn,vendor/distribute-0.6.36/easy_install.py
dbrgn/heroku-buildpack-python-sklearn,vendor/pip-1.3.1/pip/vcs/subversion.py
dbrgn/heroku-buildpack-python-sklearn,vendor/distribute-0.6.36/tests/install_test.py
django-inplaceedit/django-inplaceedit,testing/testing/unit_tests/__init__.py
fracpete/python-weka-wrapper-examples,src/__init__.py
jonasundderwolf/django-image-cropping,image_cropping/utils.py
mdaniel/virtualbox-org-svn-vbox-trunk,src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/GenFds/FfsInfStatement.py
mdaniel/virtualbox-org-svn-vbox-trunk,src/VBox/Additions/common/crOpenGL/stub_common.py
mdaniel/virtualbox-org-svn-vbox-trunk,src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/Ecc/CodeFragmentCollector.py
michaelhelmick/django-bootstrap-admin,project/admin/__init__.py
mw-ferretti/angular-resource-tastypie,examples/backend/myproject/myproject/wsgi.py
Anonim47/android_kernel_lenovo_a7000-a,tools/perf/tests/attr.py
KristianOellegaard/django-health-check,health_check_celery/tasks.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/lib/user_array.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/core/tests/test_multiarray_assignment.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/distutils/command/sdist.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/traversal/tests/test_dfs.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/bipartite/tests/test_matching.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/core/cversions.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/doc/howtofind.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/lib/tests/test__datasource.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/f2py/f2py2e.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/polynomial/laguerre.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/bin/nefi2/model/algorithms/invert_color.py
NicoSantangelo/sublime-text-i18n-rails,path.py
Zanzibar82/plugin.video.streamondemand,lib/gdata/tlslite/utils/PyCrypto_AES.py
Zanzibar82/plugin.video.streamondemand,servers/youtube.py
cloudify-cosmo/cloudify-plugins-common,cloudify/manager.py
crosswalk-project/crosswalk-test-suite,misc/webdriver-w3c-tests/cookie/cookie_test.py
designalyze/python-tutorials-for-rhino,Lessons/lesson15.py
dpapathanasiou/pdfminer-layout-scanner,layout_scanner.py
globocom/GloboNetworkAPI-client-python,networkapiclient/UsuarioGrupo.py
globocom/GloboNetworkAPI-client-python,networkapiclient/EnvironmentVIP.py
hughperkins/kgsgo-dataset-preprocessor,thirdparty/future/src/libfuturize/fixes/fix_print.py
iridium-browser/iridium-browser-ubuntu,third_party/catapult/third_party/Paste/paste/util/ip4.py
iridium-browser/iridium-browser-ubuntu,third_party/catapult/third_party/webtest/webtest/forms.py
iridium-browser/iridium-browser-ubuntu,tools/gyp/test/make_global_settings/full-toolchain/gyptest-make_global_settings.py
iridium-browser/iridium-browser-ubuntu,third_party/jinja2/compiler.py
iridium-browser/iridium-browser-ubuntu,tools/telemetry/third_party/gsutilz/third_party/boto/boto/file/__init__.py
iridium-browser/iridium-browser-ubuntu,content/test/gpu/gpu_tests/trace_test_expectations.py
iridium-browser/iridium-browser-ubuntu,tools/telemetry/telemetry/value/value_unittest.py
iridium-browser/iridium-browser-ubuntu,tools/perf/page_sets/page_reload_cases.py
iridium-browser/iridium-browser-ubuntu,third_party/jinja2/_compat.py
iridium-browser/iridium-browser-ubu

2025-02-12 18:29:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:45 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:46 - root - INFO - SQL:
SELECT "id", "size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   LIMIT 100;
Results:
id,size
2dd586a19b594a73e9c6f7485d1e5da9203a4467,21447
7acfd43a7914620c9fef2196f9cac65d0f542d53,41645
9eb0c3299f21b4d86029ebbbf0b6ad8c0945b35d,3144
816b2d7412b432d86a4a36147255ec664f760193,3974
ca151cab87aa4ba9286dd5b3557fd75bb902c442,3025
21cab621a82b9e390ee6cfe409704954c4d90f4f,5244
66e2bf008bdb297f2af2125a7f59afb8f90ee107,887
026e9467f313c7776b144881ba161103119aa0a9,1506
f50a76cff9f42438026c7cf8bba687bcd2d491ea,7866
8e0ab7a402ed401e4a92a0933d211dada21b4508,903
9281ba3801cf1a02af6ea13bebdc19a41d48b463,1444
7ec9cbbbdc3ace14e655f751501f0b872930f34f,558
67c981b77bfe643e0a664f9179f84e28971e347e,6148
89b92f14f4b3832108de19ca964f73a1e5ab0133,3031
de1cba95dbe087f858735dc17e86f1a7f5d71af8,7261
6b3e05813c8df6e5fd24b2bb2abc0f765153cf76,10163
003fd53850a89b787395007d69e0fb6f189f922c,1221
7bc2fbeb883e739d41d2bc18bcd2f76bac62405f,2873
b7cde36092689db6dada97894e63992f577dc610,6438
efc4a4e7a2a4697d74b1f5a3696800a7289963f5,17470
0052de438fe69bac42ec3caf472988bcfea7641b,7032
630abd5ef1c4a032c64b076ef06e92dc30262880,4044
35ebf1c9779099f07d0906955485d6f15608504b,13138
4a6e3ef763ac4c820ac268053084dcf2d9a5c20f,6556
e4c56a64472e33c2ceff4248a70897e2364df3e4,1062
53d41edc180367174c94ecfc3ec615dca283472e,1143
02c9781faebbba633113adee71cb90230f6203d4,37888
bcaf713c6341dca3dc7506fdb71c943768248811,53
b39fb02fd35e99a9b9d7604b5a51bad331239d9f,26456
bd8ba51bb577cd64bbc2a2df43dd74bc78aadf1a,32982
73e022d17f9556754e9506bce20b79b9376ab059,1750
21c34c1c0aba3aac858c6c975f269f141ffd091b,160
ef9b8a5ff4f0f32508c7ae873fb3326a9d656bb8,1168
e1813d75df3e183766f07b062776b3897a2523a7,2872
f7ff75ea593f6300f4ba3d488f50b6c0dcbf5621,263
801612d3e022bef0512f1322806589e8824e34c9,63169
58409ad17b6f8bc2dc6d3c095a2ace8b38996bfc,163
5acbb02c0bd644561fecce1ba9b5ed3431c2c400,1474
803aef6c020618e8a2759138ba2f4992b10e377f,912
3dc7fe5332570c343998825d3e94475d4edcabf7,3444
e2521c113a74bb8250434b6efce725e1134a7003,6796
7122ce62f2d1bee4878c0593c244de80247fe88b,6444
6ef0115e036a78b7186aebf5aa390d15caeb78cd,47646
04aa747e26f22b5e6e5e33cd117d4a7adfba57f0,2427
761eaa5a1d29eee52ed9bb752756c453c8f24a2c,4665
2272ea8b5b1cbdc7b2578c6d0a8c5416c200dd57,21758
6db6b8f13a912023f4c8c889b75e7366cca6d221,12758
b2904db52dd0dce293619fc10106854823533867,5143
1cd9db02e03f907dd998722ec7c9674b6532250c,6429
51f5fb742136850f2ad2ebad70a3ef1748178b6f,1042
b4a319e43ad65d47a62c13cb8379699db645f95a,384
e30c39995034c6749d89ec2ea723d73c35869cf1,147456
98001653566ed4abf3b6980b59a53152fa8e6a24,2377
a2b13a6525699664774a1f68bdd9f271cd59198d,96596
9aa58406334a1f589e1f83c811d46fdf5f6120a1,244
2f678fd6a81b8653c17eaa1a5891d8ba2845b0bc,2189
f2871049dc62e26b4421e657389724706572bb26,1928
317c67b246df6fcb29d2e660159a291c4d9e1471,8402
8f7129cd125e0baf7b66a23c0548ca6c608fbacf,4471
cd625461c4640831a5f6a27c64865819addce368,842
e919d808a0495863c59c27e74e3bef40afcfcf58,3459
cf118b09856ceda177b1ff62d8662f9bc52c0cb3,42275
612de1db5cc35a0d852e260a543e686d42dfed62,1149
d2140a96a46b5196e5368ebe555bde477cf95a0d,26277
54a85e112740e947c4b982d69aea64bd360e0297,2259
0928a9c76e1926b295922413d39658e8f45ab452,1378
f0620274b417f4b11564e2e5f530139e0f06cdb8,9723
75c71cd4201fa47a234b7dcc2240a415dfa5610d,6445
970816f61ec689e35495f05345d26070b95450dc,1221
320dbc0d9d8a3f40c867a51bde847fc89be76f08,1445
a266b7b1edded4066a8541baa090ac49b5ab1a50,1128
ad37595cee87b33e089abe682bc38afafb038eb7,5069
dc50bbe6a5c76a22b6532722b31f50d2e058de67,3733
1784564068511de9c6d0a8ed7946836636ae6817,7459
70cf22b949b32adfc25dd9dff4131bf2e09198dd,26147
6ff7b25011e8d2310c7f73a1c4606750989e2022,945
0e1068c119973343a4230816dc1992e6b33bc318,18928
0ad8376107f9e0125c2b96cd29b8ecdd09dddeda,1166
92445a58f9282b454355a57706ff39a78e8dd468,20343
11b7430362f8ba83fe471bf6a641c9c9ac8725bc,36273
41347cdcf00b2fa6a5020d967b0f3d5dd2f29c53,1220
747f288e08d93ea8bea587f77121cb822f047791,5695
97af8908bb7689c60f48beff6ec538b0a3927622,1155
fe3b18fe0a8aae2c12bf47189b89feb807c6b8a8,564
95e160899c088cab1e41c90b8af1eb3b3adfa718,1919
aaa80219f1d33d142060ebd9aace5ced01ffc6b8,837
5c16fe4787609ce827ac4115819b4ca6623d94ad,4846
67c4aed4740fc59050486d5a2a43643b129e6c4b,1705
dc0f68d612e07adee3485ed0a1d0e25d46b71424,6006
84b1feb4e61c56ab8e2fa7bcb4ee6bf15421bd6f,492
6d83eaae13a37486983bb9f66e0c7d6525270cd2,16811
b97643460fb91c62286edcb18f2357a43fce90f0,184
370876ccf108f9d57baa192b0521b2ae4ec0cc22,1842
37362386720d22e764e4ba6bdc6f1a1cef4ceb30,32132
395a3deac906aea5858b298502a9866fc9620a12,173484
99ba4177c70da1c9a4c8fddb68d3343152b90780,16584
b7e06762acb43886348a9dbe715088497912f95b,13913
d1b09bb181570f981826d4444fd8c91675ad7466,11878
879e640a5f54ecb0fee4a03801266f25bef3d919,14389
70198e8f66cef395063610b666e7272f61858b78,7175

2025-02-12 18:29:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:47 - root - INFO - SQL:
SELECT "id", "size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   WHERE "size" < 15000
   LIMIT 100;
Results:
id,size
6ba8b7a1ad72449bed2c27c18dc09fdfdc902f4f,1455
2808cc7dad1e963456a33387816a60edcd14e3c2,2743
9ba1cd853975d7412462af7426bfff682bf12171,2526
b5d98c4d7b90b473fdf470a29b2562c7c6b70c67,636
feb55b7e02a74beed6b06ed165c8ba65cb76bd75,2954
f25ac53133823982d0d8449be27871abdbd4a494,865
814343a33660c53403791055ac5f502cee0644bd,4802
bb50f15deb162b39542ee69056036a8d659d5fc6,588
e8b52ec203d330ee3fbf0403a4dbe4383d14b450,3675
13e40b4143150944245cf5bd02600567905e77e5,336
e210013f3d2cf0decdd6aff2960e34194232b9bf,544
6555b1a2f3b5fa0064c6336fc878a7995bd4fe4c,397
da48d7c48ca7f6c4c734487af0f288a1bb9926a2,43
105b24078f81dbc0cc3fa255a83c2ec8789272d0,9000
0698e877472abb2aaa3a9896c05a1cdeca1747ea,979
6982ea63025c042ddf8c58eebb1add752e614761,2524
b09dfb007c3beec5ec0bcb2c113a826849a6d68b,3451
1409a2c49c7e19c876e0e3d4344652888a5702c5,247
6ada1bc42068cf8cde495b98de70a946b532dc38,2863
be12188de5dd2693801bbc0eb8b3590ea6e37c48,1364
d7b65155d6ef5bdfbdfee466ea9882d8c4043e1c,12204
e75b9a2309db2fc1ae2af0c0c690418923980ba0,1492
6584622e9d48f2cd6a3bf15f71fd05ba944a779f,7773
cea0b0ea2909f6391437a5d56222f63ff7e0d429,3556
659d4d87f91545bdb12b3006885b80e2b03019f4,1899
fa36881be7f48249872472742e9dd3b7c978dd6b,511
8bf775c4a0ea1d2638605d9895ed6061a4c7274c,2499
01c68339bb58e3a3ad2ae06ce287ee4ecee6dd6d,388
6c6c181ae1ef4dc8d4d28e37195ca655423fc491,5213
4ea1750cf1a83a33b2ab207d92c3b0a71dbffbc5,2206
67667768c0a3f7c53f81d539958ed74ef5ad6cf2,823
a4dbfefc7a0c6008ee7214acd91afa7dcddf5a22,10764
2c5018824ecdba5bfd51152eb64660fd279e2ea3,3365
393396c26a8eef3f07790ef9bfd0fba0beda5c94,2226
5c95d797d7027465da99ce3201d3bc2c2b522a06,1423
ab28cd93421f409a18f855de257dee2d98bbb515,7005
a44af71773f57e0d9ebb6be5fa557408a5aa3f96,598
d815cb6c681ed60033fd4ff946d272d3638c4f8f,1306
2fb24092643128e0ea2b86f931fa46c2d4be8a29,5121
7091eb08215c8441809949d82fe58c77c7982479,1262
02c3ff241535c9b7c007fa7291c2e722404199f8,5024
260a96fb1d7fd95106048af7aecaa43e8e0af98a,10589
9c4d522ac08d420a1dfe8fc4dc4572e152ffbff2,1811
19110dda80e5f8e620f366c8d168eb849c5fe113,466
88a18d4a8d4770b87f9391d7b2e13420780f7064,3335
5bc9de62db3f14a16d0391be9ff7a75998442bfa,229
05636012267d58df654e474cc4b1e3b4bffb2507,967
490346726ae4e652fb4f63784a5a5e3d0aa71774,579
82ee1954a597e44a337c68e50ae398b08acf889b,4394
69395bde0bed8bd93efd1742502350dce3ef852b,3276
002272f4fe68666c7fc4a308bc849ac1763eef3d,1599
a63fb573fec38da5b3003a14631bf3564eec775b,48
9c8783191106dca07a7206247dc05d20ca418c77,2737
d12178fa0a4544b8cd977da8fbf93a04f24d485e,1597
fc9f599c3bd2a5cf0a047f78ef746425313121fc,1719
e2a28a304a75ab5a71506c568c2632d091df6da8,251
82d2b784aeb8a4d227759c67432bcc2c76333120,681
ca517ba2656c2ff69fc92d18e759156a180a909f,2720
aee56a5244cdb5347ddaf6e5b9b5cb2b3b3413df,462
5b44552b01e50999628379b03a82016ffbd07593,245
7de639f8c0f7eea04cf4f28ba1f936448e382343,1402
c08d469ae5e9eece9a5a93d2fbe1c62e1e04074c,954
84dec33bfcfd3a3757e29e39e6ee3d52f793f635,5349
672f5a71a2b2ed49a2131398edd9dd90c4ccafa2,2743
7f47f629f1454ac2e74b186516a90de1b0956d1d,908
2616a27a5c0d15e31fbee4c4aa697612d8d83521,8457
3cef78ec093a2e5eed65b15bf47204232d94f261,2558
a9753c5115e98af376181d88ac517ec012762443,510
a5a83a8aa414fc687a514583ed0a24cb4fee5621,2776
3a23480c4e6763e385be3aa7988e52300756caa7,2680
c1faacf0d09863e3cb841f8408291fa07efdd920,5297
ad1b22a44cd42697373929fc40c1d081c048caeb,588
5a625b6c3a3aee5595a0cf5ab1ad080981ea948d,7163
71931c03db6f3c6bd79b4f155756ea6930fe9569,1099
9b04a3d91578c1ddd1c1e4d6a665b90b6ad59767,894
fa1a33a95800e6aa673e9d561d204471bac0f044,571
041e8c6a8324a1cc35c6ebed87681cd6e4d9fa16,1845
357b24302720af6b65f7b155ee4afc41618e6972,2266
bb15b0d4366a5efac6e5bcd788e29f304ba9e2c0,5642
f4848c4eec5816724f3a7396fd6488e311de193f,1122
b7c2707c285b8d15a7ee3ae31c51617ceab60e3d,421
d0e8af0d8562637415f1cada3ff9133d79e73c5e,622
09dd645d70120c5d7552303017325a7898bd48a1,1290
9298c9431a2bf563cfd6314385a80dcdbf3097f7,1476
e439364c40636355e662494a3187be65149a1991,593
262f173567a0b09e46e75e26347f3c61cb0dfec1,10089
9bbfff0efae7ae7c45f130a0f2eb9e702a4f69e5,75
8a760852374240ae1162b1dd517637d5b1094885,6880
dc2b3716a7faa5e363c7b8c206fe398c3fa692b4,8333
4cbfc3c007c0af97c13456ddfa19dfca52905110,483
7dded6e5c115c228e85da3099c466b0276d67b1e,1203
eea167a0dec0f8416308484cd6d1d54ce5ef41ce,3106
d1d56b099b4e504ef6bb8d30b795546b90c63ffe,13213
65c7e616c59cb411ac636757f67f47026b0eb2ab,1973
fc6a56a26091252340eb50a97be793bd4e8f7272,2247
06f2d29b24053ebe698558a1656f8acb004ccfe0,1081
bbb1d6be2174476ffbd9c59837d7748397e4a2b5,1897
ccf759678bf51d1d2d2912e3adac5a81cebcbe9f,1414
498e5c15497c365c42156c58138f618233a00f7e,5168
478202e6f40409f0f588373073108c7eb71f8cbe,870

2025-02-12 18:29:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-02-12 18:29:50 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:51 - root - INFO - SQL:
SELECT "id", "content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   WHERE "content" LIKE '%def %'
   LIMIT 100;
Results:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;

2025-02-12 18:29:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-02-12 18:29:53 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:54 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."size", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,size,content
AdrianDC/android_kernel_sony_msm8960t,fs/xfs/xfs_itable.c,20030,"/*
 * Copyright (c) 2000-2002,2005 Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it would be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write the Free Software Foundation,
 * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
#include ""xfs.h""
#include ""xfs_fs.h""
#include ""xfs_types.h""
#include ""xfs_bit.h""
#include ""xfs_log.h""
#include ""xfs_inum.h""
#include ""xfs_trans.h""
#include ""xfs_sb.h""
#include ""xfs_ag.h""
#include ""xfs_mount.h""
#include ""xfs_bmap_btree.h""
#include ""xfs_alloc_btree.h""
#include ""xfs_ialloc_btree.h""
#include ""xfs_dinode.h""
#include ""xfs_inode.h""
#include ""xfs_ialloc.h""
#include ""xfs_itable.h""
#include ""xfs_error.h""
#include ""xfs_btree.h""
#include ""xfs_trace.h""

STATIC int
xfs_internal_inum(
	xfs_mount_t	*mp,
	xfs_ino_t	ino)
{
	return (ino == mp->m_sb.sb_rbmino || ino == mp->m_sb.sb_rsumino ||
		(xfs_sb_version_hasquota(&mp->m_sb) &&
		 (ino == mp->m_sb.sb_uquotino || ino == mp->m_sb.sb_gquotino)));
}

/*
 * Return stat information for one inode.
 * Return 0 if ok, else errno.
 */
int
xfs_bulkstat_one_int(
	struct xfs_mount	*mp,		/* mount point for filesystem */
	xfs_ino_t		ino,		/* inode to get data for */
	void __user		*buffer,	/* buffer to place output in */
	int			ubsize,		/* size of buffer */
	bulkstat_one_fmt_pf	formatter,	/* formatter, copy to user */
	int			*ubused,	/* bytes used by me */
	int			*stat)		/* BULKSTAT_RV_... */
{
	struct xfs_icdinode	*dic;		/* dinode core info pointer */
	struct xfs_inode	*ip;		/* incore inode pointer */
	struct xfs_bstat	*buf;		/* return buffer */
	int			error = 0;	/* error value */

	*stat = BULKSTAT_RV_NOTHING;

	if (!buffer || xfs_internal_inum(mp, ino))
		return XFS_ERROR(EINVAL);

	buf = kmem_alloc(sizeof(*buf), KM_SLEEP | KM_MAYFAIL);
	if (!buf)
		return XFS_ERROR(ENOMEM);

	error = xfs_iget(mp, NULL, ino,
			 (XFS_IGET_DONTCACHE | XFS_IGET_UNTRUSTED),
			 XFS_ILOCK_SHARED, &ip);
	if (error) {
		*stat = BULKSTAT_RV_NOTHING;
		goto out_free;
	}

	ASSERT(ip != NULL);
	ASSERT(ip->i_imap.im_blkno != 0);

	dic = &ip->i_d;

	/* xfs_iget returns the following without needing
	 * further change.
	 */
	buf->bs_nlink = dic->di_nlink;
	buf->bs_projid_lo = dic->di_projid_lo;
	buf->bs_projid_hi = dic->di_projid_hi;
	buf->bs_ino = ino;
	buf->bs_mode = dic->di_mode;
	buf->bs_uid = dic->di_uid;
	buf->bs_gid = dic->di_gid;
	buf->bs_size = dic->di_size;
	buf->bs_atime.tv_sec = dic->di_atime.t_sec;
	buf->bs_atime.tv_nsec = dic->di_atime.t_nsec;
	buf->bs_mtime.tv_sec = dic->di_mtime.t_sec;
	buf->bs_mtime.tv_nsec = dic->di_mtime.t_nsec;
	buf->bs_ctime.tv_sec = dic->di_ctime.t_sec;
	buf->bs_ctime.tv_nsec = dic->di_ctime.t_nsec;
	buf->bs_xflags = xfs_ip2xflags(ip);
	buf->bs_extsize = dic->di_extsize << mp->m_sb.sb_blocklog;
	buf->bs_extents = dic->di_nextents;
	buf->bs_gen = dic->di_gen;
	memset(buf->bs_pad, 0, sizeof(buf->bs_pad));
	buf->bs_dmevmask = dic->di_dmevmask;
	buf->bs_dmstate = dic->di_dmstate;
	buf->bs_aextents = dic->di_anextents;
	buf->bs_forkoff = XFS_IFORK_BOFF(ip);

	switch (dic->di_format) {
	case XFS_DINODE_FMT_DEV:
		buf->bs_rdev = ip->i_df.if_u2.if_rdev;
		buf->bs_blksize = BLKDEV_IOSIZE;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_LOCAL:
	case XFS_DINODE_FMT_UUID:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_EXTENTS:
	case XFS_DINODE_FMT_BTREE:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = dic->di_nblocks + ip->i_delayed_blks;
		break;
	}
	xfs_iunlock(ip, XFS_ILOCK_SHARED);
	IRELE(ip);

	error = formatter(buffer, ubsize, ubused, buf);

	if (!error)
		*stat = BULKSTAT_RV_DIDONE;

 out_free:
	kmem_free(buf);
	return error;
}

/* Return 0 on success or positive error */
STATIC int
xfs_bulkstat_one_fmt(
	void			__user *ubuffer,
	int			ubsize,
	int			*ubused,
	const xfs_bstat_t	*buffer)
{
	if (ubsize < sizeof(*buffer))
		return XFS_ERROR(ENOMEM);
	if (copy_to_user(ubuffer, buffer, sizeof(*buffer)))
		return XFS_ERROR(EFAULT);
	if (ubused)
		*ubused = sizeof(*buffer);
	return 0;
}

int
xfs_bulkstat_one(
	xfs_mount_t	*mp,		/* mount point for filesystem */
	xfs_ino_t	ino,		/* inode number to get data for */
	void		__user *buffer,	/* buffer to place output in */
	int		ubsize,		/* size of buffer */
	int		*ubused,	/* bytes used by me */
	int		*stat)		/* BULKSTAT_RV_... */
{
	return xfs_bulkstat_one_int(mp, ino, buffer, ubsi

2025-02-12 18:29:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 18:29:55 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:56 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."size" < 15000
   LIMIT 100;
Results:
repo_name,path,size
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,2331
dieseldev/diesel,examples/zeromq_receiver.py,619
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,564
MAECProject/python-maec,maec/utils/merge.py,12077

2025-02-12 18:29:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:57 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:57 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."content" LIKE '%def %'
   LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,content
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,"# Rekall Memory Forensics
#
# Copyright Digital Forensics Solutions.
# Copyright 2013 Google Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

__author__ = (""Andrew Case <atcuno@gmail.com>"",
              ""Michael Cohen <scudette@google.com>"")


from rekall.plugins.linux import common


class IOmem(common.LinuxPlugin):
    '''mimics /proc/iomem.'''

    __name = ""iomem""

    table_header = [
        dict(name=""Resource"", cname=""resource"", style=""address""),
        dict(name=""Start"", cname=""start"", style=""address""),
        dict(name=""End"", cname=""end"", style=""address""),
        dict(name=""Name"", cname=""name"", type=""TreeNode""),
    ]

    def GetResources(self):
        # Resources are organized in a tree structure.
        resource_tree_root = self.profile.get_constant_object(
            ""iomem_resource"", target=""resource"")

        seen = set()

        return self._GetResources(resource_tree_root, seen)

    def _GetResources(self, node, seen, depth=0):
        """"""Traverse the resource tree depth first.""""""
        if not node or node in seen:
            return

        seen.add(node)

        yield node, depth

        if node.child:
            for x in self._GetResources(node.child.deref(), seen, depth+1):
                yield x

        for sibling in node.walk_list(""sibling""):
            for x in self._GetResources(sibling, seen, depth):
                yield x


    def collect(self):
        for node, depth in self.GetResources():
            yield dict(
                resource=node,
                start=node.start,
                end=node.end,
                name=node.name.deref(),
                depth=depth)
"
dieseldev/diesel,examples/zeromq_receiver.py,"from diesel import quickstart, quickstop, sleep
from diesel.protocols.zeromq import DieselZMQSocket, zctx, zmq
import time

def get_messages():
    outsock = DieselZMQSocket(zctx.socket(zmq.DEALER), bind=""tcp://127.0.0.1:5000"")

    t = time.time()
    for x in xrange(500000):
        msg = outsock.recv()
        assert msg == ""yo dawg %s"" % x
        if x % 1000 == 0:
            sleep()

    delt = time.time() - t
    print ""500000 messages in %ss (%.1f/s)"" % (delt, 500000.0 / delt)
    quickstop()

def tick():
    while True:
        print ""Other diesel stuff""
        sleep(1)

quickstart(get_messages, tick)
"
MAECProject/python-maec,maec/utils/merge.py,"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only M

2025-02-12 18:29:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:29:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:29:59 - snowflake.connector.connection - INFO - closed
2025-02-12 18:29:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:29:59 - root - INFO - SQL:
SELECT DISTINCT f."repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."size" < 15000 AND c."content" LIKE '%def %'
   LIMIT 100;
Results:
repo_name
MAECProject/python-maec
google/rekall
dieseldev/diesel

2025-02-12 18:29:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:29:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:29:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:00 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:01 - root - INFO - SQL:
SELECT "repo_name", "watch_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
    ORDER BY "watch_count" DESC
    LIMIT 100;
Results:
repo_name,watch_count
FreeCodeCamp/FreeCodeCamp,90457
firehol/netdata,13208
joshbuchea/HEAD,13125
braydie/HowToBeAProgrammer,12019
sindresorhus/awesome,11063
tensorflow/tensorflow,10728
facebook/react,10458
ParsePlatform/parse-server,10339
loverajoel/jstips,9585
facebook/react-native,9437
vhf/free-programming-books,8862
vuejs/vue,8822
airbnb/javascript,8708
caesar0301/awesome-public-datasets,8653
twbs/bootstrap,8211
toddmotto/public-apis,8182
getlantern/lantern,8110
DrkSephy/es6-cheatsheet,7967
airbnb/caravel,7764
googlesamples/android-architecture,7713
getify/You-Dont-Know-JS,7650
allenwong/30DaysofSwift,7485
jgthms/bulma,7387
dthree/cash,7309
Rochester-NRT/AlphaGo,7200
apple/swift,7041
robbyrussell/oh-my-zsh,6983
github/gitignore,6898
facebook/draft-js,6715
matryer/bitbar,6384
Microsoft/vscode,6272
ptmt/react-native-desktop,6186
p-e-w/maybe,6127
parkjs814/AlgorithmVisualizer,6057
hollance/swift-algorithm-club,6012
alexjc/neural-doodle,6008
fbsamples/f8app,5987
nodejs/node,5954
jiahaog/nativefier,5836
Microsoft/CNTK,5833
atom/atom,5826
jcjohnson/neural-style,5768
tensorflow/models,5629
reactjs/redux,5622
jlevy/the-art-of-command-line,5603
mbostock/d3,5601
thejameskyle/the-super-tiny-compiler,5555
Microsoft/ChakraCore,5524
nylas/N1,5476
CRYTEK-CRYENGINE/CRYENGINE,5433
petehunt/react-howto,5428
VerbalExpressions/JSVerbalExpressions,5374
angular/angular.js,5347
torvalds/linux,5332
google/agera,5319
angular/angular,5318
atom/electron,5302
mxstbr/react-boilerplate,5163
kadirahq/react-storybook,5154
rg3/youtube-dl,5140
daneden/animate.css,5113
jbranchaud/til,5105
docker/docker,5052
shockone/black-screen,5028
google/xi-editor,5008
electron/electron,4995
CatchChat/Yep,4994
mhinz/vim-galore,4928
ReactiveX/RxJava,4926
josephmisiti/awesome-machine-learning,4917
weui/weui,4883
open-source-society/computer-science,4848
FortAwesome/Font-Awesome,4838
puikinsh/gentelella,4825
webpack/webpack,4812
soimort/you-get,4776
vinta/awesome-python,4734
CosmicMind/Material,4731
typicode/json-server,4720
aosabook/500lines,4659
golang/go,4620
0x5e/wechat-deleted-friends,4609
dear-github/dear-github,4604
nlp-compromise/nlp_compromise,4600
lodash/lodash,4596
santinic/how2,4582
google/material-design-lite,4571
callemall/material-ui,4455
nvbn/thefuck,4438
Dogfalo/materialize,4425
johnpapa/angular-styleguide,4403
JakeLin/IBAnimatable,4399
google/seesaw,4388
amzn/alexa-avs-raspberry-pi,4384
vsouza/awesome-ios,4346
letsencrypt/letsencrypt,4325
square/retrofit,4306
google/flexbox-layout,4306
Nickersoft/push.js,4284
vurtun/nuklear,4273

2025-02-12 18:30:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-02-12 18:30:02 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:02 - root - INFO - SQL:
SELECT c."content", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f ON c."id" = f."id"
    WHERE f."path" LIKE '%.py' AND c."size" < 15000
    LIMIT 100;
Results:
Too long, hard cut:
content,size
"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only MAEC Packages are supported'

    # Merge the MAEC packages
    merged_package = merge_packages(parsed_documents)
    # Write the merged package to the output file
    merged_package.to_xml_file(output_file, {""https://github.com/MAECProject/python-maec"":""merged""})

def merge_packages(package_list, namespace = None):
    '''Merge a list of input MAEC Packages and return a merged Package instance.'''
    malware_subjects = []
    # Instantiate the ID generator class (for automatic ID generation)
    if not namespace:
        NS = Namespace(""https://github.com/MAECProject/python-maec"", ""merged"")
    else:
        NS = namespace
    maec.utils.set_id_namespace(NS)
    # Build the list of Malware Subjects
    for package in package_list:
        for malware_subject in package.malware_subjects:
            malware_subjects.append(malware_subject)
    # Merge the Malware Subjects
    merged_subjects = merge_malware_subjects(malware_subjects)
    # Merge the input namespace/schemaLocation dictionaries
    merged_namespaces = {}
    merged_schemalocations = {}
    for package in package_list:
        merged_namespaces.update(package.__input_namespaces__)
        merged_schemalocations.update(package.__input_schemalocations__)
    # Create a new Package with the merged Malware Subjects
    merged_package = Package()
    merged_package.malware_subjects = MalwareSubjectList(merged_subjects)
    merged_package.__input_namespaces__ = merged_namespaces
    merged_package.__input_schemalocations__ = merged_schemalocations
    return merged_package

def bin_malware_subjects(malware_subject_list, default_hash_type='md5'):
    '''Bin a list of Malware Subjects by hash
       Default = MD5
    '''
    binned_subjects = {}
    for malware_subject in malware_subject_list:
        mal_inst_obj = malware_subject.malware_instance_object_attributes
        if mal_inst_obj:
            obj_properties = mal_inst_obj.properties
            if obj_properties and obj_properties.hashes:
                for hash in obj_properties.hashes:
                    if hash.type_ and hash.simple_hash_value:
                        hash_type = ''
                        hash_value = ''
                        # Get the hash type
                        hash_type = str(hash.type_).lower()
                        # Get the hash value
                        hash_value = str(hash.simple_hash_value).lower()
                            
                        # Check the hash type and bin accordingly
                        if hash_type == default_hash_type:
                            if hash_value in binned_subjects:
                                binned_subjects[hash_value].append(malware_subject)
                            else:
                                binned_subjects[hash_value] = [malware_subject]
    return binned_subjects

def merge_entities(entity_list):
    '''Merge a list of MAEC/CybOX entities'''
    dict_list = [x.to_dict() for x in entity_list]
    output_dict = dict_merge({}, *dict_list)
    return output_dict

def deduplicate_vocabulary_list(entity_list, value_name = ""value""): # TODO: Move this to the deduplicator m

2025-02-12 18:30:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-02-12 18:30:05 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:05 - root - INFO - SQL:
SELECT "id", "content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    WHERE "content" LIKE '%def %'
    LIMIT 100;
Results:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;

2025-02-12 18:30:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:06 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:07 - root - INFO - SQL:
SELECT "repo_name", "watch_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
    ORDER BY "watch_count" DESC
    LIMIT 100;
Results:
repo_name,watch_count
FreeCodeCamp/FreeCodeCamp,90457
firehol/netdata,13208
joshbuchea/HEAD,13125
braydie/HowToBeAProgrammer,12019
sindresorhus/awesome,11063
tensorflow/tensorflow,10728
facebook/react,10458
ParsePlatform/parse-server,10339
loverajoel/jstips,9585
facebook/react-native,9437
vhf/free-programming-books,8862
vuejs/vue,8822
airbnb/javascript,8708
caesar0301/awesome-public-datasets,8653
twbs/bootstrap,8211
toddmotto/public-apis,8182
getlantern/lantern,8110
DrkSephy/es6-cheatsheet,7967
airbnb/caravel,7764
googlesamples/android-architecture,7713
getify/You-Dont-Know-JS,7650
allenwong/30DaysofSwift,7485
jgthms/bulma,7387
dthree/cash,7309
Rochester-NRT/AlphaGo,7200
apple/swift,7041
robbyrussell/oh-my-zsh,6983
github/gitignore,6898
facebook/draft-js,6715
matryer/bitbar,6384
Microsoft/vscode,6272
ptmt/react-native-desktop,6186
p-e-w/maybe,6127
parkjs814/AlgorithmVisualizer,6057
hollance/swift-algorithm-club,6012
alexjc/neural-doodle,6008
fbsamples/f8app,5987
nodejs/node,5954
jiahaog/nativefier,5836
Microsoft/CNTK,5833
atom/atom,5826
jcjohnson/neural-style,5768
tensorflow/models,5629
reactjs/redux,5622
jlevy/the-art-of-command-line,5603
mbostock/d3,5601
thejameskyle/the-super-tiny-compiler,5555
Microsoft/ChakraCore,5524
nylas/N1,5476
CRYTEK-CRYENGINE/CRYENGINE,5433
petehunt/react-howto,5428
VerbalExpressions/JSVerbalExpressions,5374
angular/angular.js,5347
torvalds/linux,5332
google/agera,5319
angular/angular,5318
atom/electron,5302
mxstbr/react-boilerplate,5163
kadirahq/react-storybook,5154
rg3/youtube-dl,5140
daneden/animate.css,5113
jbranchaud/til,5105
docker/docker,5052
shockone/black-screen,5028
google/xi-editor,5008
electron/electron,4995
CatchChat/Yep,4994
mhinz/vim-galore,4928
ReactiveX/RxJava,4926
josephmisiti/awesome-machine-learning,4917
weui/weui,4883
open-source-society/computer-science,4848
FortAwesome/Font-Awesome,4838
puikinsh/gentelella,4825
webpack/webpack,4812
soimort/you-get,4776
vinta/awesome-python,4734
CosmicMind/Material,4731
typicode/json-server,4720
aosabook/500lines,4659
golang/go,4620
0x5e/wechat-deleted-friends,4609
dear-github/dear-github,4604
nlp-compromise/nlp_compromise,4600
lodash/lodash,4596
santinic/how2,4582
google/material-design-lite,4571
callemall/material-ui,4455
nvbn/thefuck,4438
Dogfalo/materialize,4425
johnpapa/angular-styleguide,4403
JakeLin/IBAnimatable,4399
google/seesaw,4388
amzn/alexa-avs-raspberry-pi,4384
vsouza/awesome-ios,4346
letsencrypt/letsencrypt,4325
square/retrofit,4306
google/flexbox-layout,4306
Nickersoft/push.js,4284
vurtun/nuklear,4273

2025-02-12 18:30:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:08 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:08 - root - INFO - SQL:
SELECT "repo_name", COUNT(*) AS "file_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
    GROUP BY "repo_name"
    ORDER BY "file_count" DESC
    LIMIT 100;
Results:
repo_name,file_count
cdnjs/cdnjs,20579
Piicksarn/cdnjs,18716
bootcdn/cdnjs,15981
dstockwell/chromium,1698
crosswalk-project/chromium-crosswalk,1685
scheib/chromium,1681
Samsung/ChromiumGStreamerBackend,1679
mirror/chromium,1633
nwjs/chromium.src,1624
RMerl/asuswrt-merlin,1504
fedya/aircam-openwrt,1338
jsdelivr/jsdelivr,1067
crosswalk-project/blink-crosswalk,1055
funtoo/ports-2012,1047
SanDisk-Open-Source/SSD_Dashboard,1040
iridium-browser/iridium-browser-ubuntu,1031
nwjs/blink,999
staticfile/static,930
servo/servo,909
oferei/sublime-unity-completions,858
autc04/Retro68,787
iocellnetworks/ndas4windows,783
espadrine/opera,766
siranen/FreeIconsWebiOSAndroidWindows,763
rhuitl/uClinux,745
Sapphirine/Movie-Review-Sentiment-Analysis,737
gcc-mirror/gcc,708
vinriviere/m68k-atari-mint-gcc,689
thomaspark/glyphsearch,687
bugvm/bugvm-studio,667
justathoughtor2/atomicApe,666
cmoa/collection,648
alixaxel/dump.HN,643
artsmia/collection,641
puppeh/gcc-6502,637
GaloisInc/hacrypto,636
UBERTC/GCC-UBER,629
GreenRaccoon23/archdroid-icon-theme,614
rahulpnath/Blog,607
fnando/babel-schmooze-sprockets,600
JetBrains/intellij-community,587
LibreOffice/core,559
redbrain/gccpy,559
IMS-MAXIMS/openMAXIMS,557
parallaxinc/propgcc,556
jcmvbkbc/gcc-xtensa,549
ThaDafinser/UserAgentParserComparison,538
Ramshackle-Jamathon/Interactive-Experiments,537
KRMAssociatesInc/eHMP,535
tategallery/collection,534
vslavik/poedit,500
winterDroid/android-drawable-importer-intellij-plugin,473
DNAinfoData/Draw-Your-Neighborhood,449
sghiassy/react-native-sglistview,448
dvyukov/go-fuzz,446
ftCommunity/ft-TXT,439
AltraMayor/XIA-for-Linux,428
practicalswift/swift-compiler-crashes,427
Broadcom/arm64-linux,420
ChromiumWebApps/chromium,416
linusw/linux-bfq,415
Seagate/SMR_FS-EXT4,415
altera-opensource/linux-socfpga,413
mjg59/linux,411
jeffmerkey/linux,411
carlocaione/linux-meson,410
NigelCunningham/tuxonice-kernel,409
andreamerello/linux-zynq-stable,408
patrykk/linux-udoo,408
paul-chambers/netgear-r7800,408
RadeonOpenCompute/ROCK-Kernel-Driver,406
ljalves/linux_media,406
tobiasjakobi/linux-odroid-public,404
beagleboard/linux,404
libos-nuse/lkl-linux,403
google/kasan,402
Asus-T100/kernel,401
apritzel/linux,399
pali/linux-n900,399
tpaviot/oce,399
zen-kernel/zen-kernel,397
crazycat69/linux_media,396
davidker/unisys,394
torvalds/linux,393
linuxppc/linux,393
Taeung/tip,393
maurossi/linux,392
netroby/jdk9-dev,392
PredictionIO/open-academy,390
ParrotSec/linux-parrot,389
open-power/linux,389
neeker/chromium_extract,388
sfjro/aufs4-linux,388
01org/edison-linux,386
kvalo/ath,386
hlzz/dotfiles,386
Linutronix/ti-linux-kernel,385
elephone-dev/P8000-Kernel,384
lukier/linux-hi3518,384
svenkatr/linux,383

2025-02-12 18:30:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:09 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:10 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    ORDER BY c."size" DESC
    LIMIT 100;
Results:
Too long, hard cut:
repo_name,path,size
dmonakhov/linphone,share/rings/rock.wav,1298680
xuxueli/xxl-job,doc/XXL-JOB1.3.x架构图_20160528_1910.pptx,1092828
fedya/aircam-openwrt,build_dir/toolchain-arm_v5te_gcc-linaro_uClibc-0.9.32_eabi/gcc-linaro-4.5-2011.02-0-initial/gcc/libgcc.a,499142
binnng/time.js,test/bower_components/angular/angular.min.js.map,340629
jgallen23/jquery-builder,dist/1.10.2/jquery-ajax-deprecated-dimensions-effects-offset-wrap.js,212374
ComputerHobbyist/cqa,Training Data For Question Retrieval/Yahoo Data/yahoo_answer/C1883Question.dat,207063
nanowebcoder/NanoVeraHuesBridge,VeraHuesBridgeTester/bin/Debug/System.Net.Http.Formatting.dll,185544
Stoiss/Rend2,WARZONE_ASSETS/sound/weapons/bryar/hit_wall11.wav,77328
migumar2/uiHRDC,indexes/NOPOS/II_docs/ilists.imp/4.Repair/5.integradoSkippingBB.Sanders.2015[ver.leeme]/srcREPAIR/rebuildPost,76767
ugur2323/Whispermehmet_VE,drivers/mmc/host/vub300.c,74229
jgallen23/jquery-builder,dist/2.0.3/jquery-dimensions-sizzle.min.js,66557
crysalead/kahlan,docs/assets/verbose_reporter.png,62415
cdnjs/cdnjs,ajax/libs/medium-editor/4.4.0/js/medium-editor.min.js,59410
manjaro/artwork-menda,Menda-Dark/gnome-shell/gnome-shell-no-crash.css,57968
eunyoung14/mtcp,dpdk-16.04/drivers/net/e1000/base/e1000_82571.c,57311
imoseyon/leanKernel-note3,drivers/thermal/msm8974-tsens.c,52839
CyanogenMod/android_kernel_google_msm,drivers/target/iscsi/iscsi_target_parameters.c,52369
zeroblade1984/LG_MSM8974,drivers/target/iscsi/iscsi_target_parameters.c,52369
MotorolaMobilityLLC/kernel-msm,drivers/target/iscsi/iscsi_target_parameters.c,52369
GaloisInc/hacrypto,src/C/libressl/libressl-2.0.0/include/openssl/ec.h,46312
openembedded/openembedded,recipes/linux/linux-2.6.30/calamari/defconfig,45092
andip71/boeffla-kernel-cm-oneplusx,drivers/net/ethernet/intel/igb/e1000_mac.c,40883
CyanogenMod/android_kernel_samsung_jf,drivers/net/ethernet/intel/igb/e1000_mac.c,40883
PureNexusProject/android_kernel_lge_hammerhead,drivers/net/ethernet/intel/igb/e1000_mac.c,40883
XIMDEX/ximdex,extensions/bootstrap/docs/examples/screenshots/cover.jpg,36631
ms-iot/python,cpython/Doc/faq/design.rst,35823
cdnjs/cdnjs,ajax/libs/jqueryui/1.8.21/themes/vader/jquery-ui.css,33116
divio/django-filer,filer/locale/lt/LC_MESSAGES/django.po,32586
iocellnetworks/ndas4windows,mayfield/branches/ilguXifs/src/tools/frhed/FRHED/Afxres.h,32525
cltk/pali_text_ptr_tipitaka,js/loadxml.js,32258
cloud9ide/typescript,tests/Fidelity/test262/suite/ch07/7.6/7.6-17.js.expected,31357
conveyal/gtfs-editor,public/lib/pnotify-1.2.0/jquery.pnotify.js,31315
tapharmonic/Learning-AV-Foundation,Chapter 11/FifteenSeconds_Starter/FifteenSeconds/Images.xcassets/app_white_background.imageset/app_white_background@2x.png,29619
greghendershott/aws,aws/glacier.rkt,29045
ceph/ceph-client,drivers/i2c/busses/i2c-mv64xxx.c,27802
pokerth/pokerth,data/gfx/cards/default_800x480/0.png,27462
revdancatt/CAT422-glitch-location-viewer,locations-original-xml/GHFRK14DDU53RQQ.xml,26769
VectorBlox/risc-v,ice40ultra/hdl/top.vhd,26674
alibaba/ali_kernel,scripts/mod/mod-extract.c,25559
roberttidey/userland,interface/mmal/core/mmal_component.c,25544
ironbane/IronbaneServerLegacy,src/client/common/css/mixins.less,24469
mnagel/simple-scan,po/sd.po,21065
raspberrypi/quake3,code/server/sv_init.c,20707
MarekKowalski/LiveScan3D,include/opencv2/flann/autotuned_index.h,20607
sergeyreznik/et-engine,include/external/libpng/pngstruct.h,20408
CyanogenMod/android_kernel_motorola_msm8226,fs/xfs/xfs_itable.c,20030
AdrianDC/android_kernel_sony_msm8960t,fs/xfs/xfs_itable.c,20030
xenserver/xenadmin,XenAdmin/Dialogs/Network/CertificateChangedDialog.resx,19279
cdnjs/cdnjs,ajax/libs/browser-logos/4.0.1/archive/arora/arora_128x128.png,18623
nukeviet/nukeviet,vendor/endroid/qrcode/assets/data/qrvfr27.dat,15750
igemsoftware/SYSU-Software-2015,server/static/css/components/checkbox.css,15462
bright-things/ionic,tools/sstrip/src/sstrip.c,13963
Dolibarr/dolibarr,htdocs/societe/class/address.class.php,13870
CenterY/UIButtonEdgeInsets,images/image_bottom.png,13806
eadf/esp_mqtt_lcd,mqtt/mqtt/mqtt_msg.c,13613
richarddmorey/ConfidenceIntervalsFallacy,Rmd_files/sectionTexts/folkTheory.Rmd,12850
alesaiko/UK-PRO5,drivers/video/backlight/Kconfig,12532
vinriviere/m68k-atari-mint-gcc,libcilkrts/include/cilk/common.h,12478
luizbafilho/fusis,vendor/github.com/gin-gonic/gin/logo.jpg,12200
MAECProject/python-maec,maec/utils/merge.py,12077
28msec/zorba,src/compiler/expression/script_exprs.cpp,11322
javilonas/Lonas_KL-SM-G901F,arch/powerpc/platforms/cell/spider-pic.c,11093
qtproject/qtwebkit,Source/WebCore/platform/graphics/cairo/GraphicsContext3DCairo.cpp,10957
jonjonarnearne/smi2021,block/blk-mq-sysfs.c,10897
Piicksarn/cdnjs,ajax/libs/jquery.tablesorter/2.17.7/js/widgets/widget-columnSelector.js,10853
accord-net/accord-net.github.io,docs/html/M_Accord_Statistics_Distributions_Univariate_LognormalDistribution__ctor_2.htm,10815
infraredbg/Lenovo_A820_kernel_kk,kernel/drivers/scsi/aic7xxx/aic79xx_proc.c,10544
Sudokamikaze/XKernel-taoshan,drive

2025-02-12 18:30:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:11 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:11 - root - INFO - SQL:
SELECT RIGHT(f."path", LENGTH(f."path") - POSITION('.' IN f."path")) AS "extension", COUNT(*) AS "count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE POSITION('.' IN f."path") > 0
    GROUP BY "extension"
    ORDER BY "count" DESC
    LIMIT 100;
Results:
extension,count
c,60567
h,60390
png,27338
js,23158
java,19875
txt,13544
html,10637
php,9831
py,8262
json,7127
cpp,6951
xml,6350
md,5264
hpp,4812
rb,4138
svg,3987
S,3717
cs,3563
cc,3152
gif,2963
jpg,2800
m,2551
css,2443
go,1918
gitignore,1721
sh,1689
dts,1455
class,1370
csv,1288
dtsi,1197
swift,1177
po,1119
scss,1109
properties,984
scala,974
less,955
yml,953
test,925
rst,903
htm,733
ts,713
patch,684
bin,673
mp3,670
min.js,669
sublime-snippet,664
travis.yml,625
in,595
mk,570
hs,549
lua,544
sql,543
s,542
geojson,507
bmp,506
result,487
yaml,465
inc,464
conf,427
pdf,413
ll,411
9.png,400
d,394
plist,389
pm,388
dat,385
npmignore,382
ttf,376
xht,370
coffee,354
gradle,352
html.erb,346
cxx,341
pl,325
bat,321
pem,318
wav,318
am,304
groovy,302
ico,301
cfg,297
woff,283
mat,276
mo,268
min.css,264
rs,262
ini,261
as,260
mm,250
m4,245
config,243
C,230
class.php,226
csproj,224
out,218
log,214
pgm,214
eot,212
hxx,211
ppm,209

2025-02-12 18:30:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 18:30:13 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:13 - root - INFO - SQL:
SELECT f."repo_name", f."path", c."content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    WHERE f."path" LIKE '%.py' AND c."content" NOT LIKE '%def %'
    LIMIT 100;
Results:
repo_name,path,content
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations

from corehq.sql_db.operations import RawSQLMigration

migrator = RawSQLMigration(('corehq', 'sql_proxy_accessors', 'sql_templates'), {
    'PL_PROXY_CLUSTER_NAME': settings.PL_PROXY_CLUSTER_NAME
})


class Migration(migrations.Migration):

    dependencies = [
        ('sql_proxy_accessors', '0005_rename_get_case_attachment_by_name'),
    ]

    operations = [
        migrator.get_migration('get_case_by_external_id.sql'),
    ]
"

2025-02-12 18:30:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:14 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:14 - root - INFO - SQL:
SELECT f."repo_name", COUNT(*) AS "python_file_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" LIKE '%.py'
    GROUP BY f."repo_name"
    ORDER BY "python_file_count" DESC
    LIMIT 100;
Results:
repo_name,python_file_count
anhstudios/swganh,135
mollstam/UnrealPy,90
iridium-browser/iridium-browser-ubuntu,60
JetBrains/intellij-community,54
openhatch/oh-mainline,46
bugvm/bugvm-studio,46
hortonworks/hortonworks-sandbox,38
espadrine/opera,37
cgstudiomap/cgstudiomap,37
mirror/chromium,36
cloudera/hue,33
gabrielfalcao/lettuce,32
hynnet/hiwifi-openwrt-HC5661-HC5761,29
justathoughtor2/atomicApe,29
dstockwell/chromium,27
nwjs/chromium.src,25
Samsung/ChromiumGStreamerBackend,25
Moguri/BlenderPanda,24
neeker/chromium_extract,23
IONISx/edx-platform,23
kbengine/kbengine,22
krintoxi/NoobSecToolkit,22
Microvellum/Fluid-Designer,21
harmy/kbengine,21
cnsoft/kbengine-cocos2dx,20
OCA/OpenUpgrade,20
damonkohler/sl4a,20
acatadog/kbengine,19
openfun/edx-platform,18
pymo/pymo,18
qunaibit/zippy-mirror,18
Southpaw-TACTIC/TACTIC,17
crosswalk-project/chromium-crosswalk,17
scheib/chromium,16
dimagi/commcare-hq,16
catapult-project/catapult,16
fabioz/Pydev,16
Abjad/abjad,16
frappe/erpnext,16
django-nonrel/django,15
django/django,15
openstack/nova,15
OCA/OCB,15
openmv/micropython,15
tendenci/tendenci,14
ms-iot/python,14
redhat-openstack/nova,14
gameduell/duell,14
azatoth/scons,14
qpython-android/QPython3-core,14
OsirisSPS/osiris-sps,14
3dprinteros/3dprinteros-client,14
pelya/commandergenius,14
SickRage/SickRage,13
moesy/AWS-Lambda-ML-Microservice-Skeleton,13
LumPenPacK/NetworkExtractionFromImages,13
qgis/QGIS,13
burakbayramli/kod,13
getsentry/sentry,13
daoluan/decode-Django,13
edx/edx-platform,13
snakeleon/YouCompleteMe-x64,13
CivicTechTO/open-cabinet,12
drawquest/drawquest-web,12
vlegoff/tsunami,12
golismero/golismero,12
deanhiller/databus,12
twitter/pants,12
odoo/odoo,12
hlzz/dotfiles,12
orangeduck/PyAutoC,12
pyfa-org/Pyfa,12
FFMG/myoddweb.piger,12
Stanford-Online/edx-platform,11
VisTrails/VisTrails,11
XX-net/XX-Net,11
goldeneye-source/ges-code,11
SciTools/iris,11
Jenyay/outwiker,11
kuri65536/python-for-android,11
Azure/azure-sdk-for-python,11
duducosmos/pgs4a,11
kovidgoyal/calibre,11
DarkFenX/Pyfa,11
loopCM/chromium,11
bq/bitbloq-offline,10
ChromiumWebApps/chromium,10
NeuralEnsemble/neuroConstruct,10
googleads/googleads-python-lib,10
google/ggrc-core,10
divio/django,10
GoogleChrome/big-rig,10
aliyun/oss-ftp,10
CubicERP/odoo,10
sametmax/Django--an-app-at-a-time,10
pantsbuild/pants,10
luci/luci-py,10
bruderstein/PythonScript,10
openstack/heat,10
openstack/tempest,10

2025-02-12 18:30:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 15
2025-02-12 18:30:17 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:18 - root - INFO - SQL:
SELECT "content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    LIMIT 100;
Results:
Too long, hard cut:
content
"/*
 * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips
 *
 * Copyright (C) 2008 David Brownell
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/bcd.h>
#include <linux/slab.h>
#include <linux/rtc.h>
#include <linux/workqueue.h>

#include <linux/spi/spi.h>
#include <linux/spi/ds1305.h>
#include <linux/module.h>


/*
 * Registers ... mask DS1305_WRITE into register address to write,
 * otherwise you're reading it.  All non-bitmask values are BCD.
 */
#define DS1305_WRITE		0x80


/* RTC date/time ... the main special cases are that we:
 *  - Need fancy ""hours"" encoding in 12hour mode
 *  - Don't rely on the ""day-of-week"" field (or tm_wday)
 *  - Are a 21st-century clock (2000 <= year < 2100)
 */
#define DS1305_RTC_LEN		7		/* bytes for RTC regs */

#define DS1305_SEC		0x00		/* register addresses */
#define DS1305_MIN		0x01
#define DS1305_HOUR		0x02
#	define DS1305_HR_12		0x40	/* set == 12 hr mode */
#	define DS1305_HR_PM		0x20	/* set == PM (12hr mode) */
#define DS1305_WDAY		0x03
#define DS1305_MDAY		0x04
#define DS1305_MON		0x05
#define DS1305_YEAR		0x06


/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).
 * DS1305_ALM_DISABLE disables a match field (some combos are bad).
 *
 * NOTE that since we don't use WDAY, we limit ourselves to alarms
 * only one day into the future (vs potentially up to a week).
 *
 * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we
 * don't currently support them.  We'd either need to do it only when
 * no alarm is pending (not the standard model), or to use the second
 * alarm (implying that this is a DS1305 not DS1306, *and* that either
 * it's wired up a second IRQ we know, or that INTCN is set)
 */
#define DS1305_ALM_LEN		4		/* bytes for ALM regs */
#define DS1305_ALM_DISABLE	0x80

#define DS1305_ALM0(r)		(0x07 + (r))	/* register addresses */
#define DS1305_ALM1(r)		(0x0b + (r))


/* three control registers */
#define DS1305_CONTROL_LEN	3		/* bytes of control regs */

#define DS1305_CONTROL		0x0f		/* register addresses */
#	define DS1305_nEOSC		0x80	/* low enables oscillator */
#	define DS1305_WP		0x40	/* write protect */
#	define DS1305_INTCN		0x04	/* clear == only int0 used */
#	define DS1306_1HZ		0x04	/* enable 1Hz output */
#	define DS1305_AEI1		0x02	/* enable ALM1 IRQ */
#	define DS1305_AEI0		0x01	/* enable ALM0 IRQ */
#define DS1305_STATUS		0x10
/* status has just AEIx bits, mirrored as IRQFx */
#define DS1305_TRICKLE		0x11
/* trickle bits are defined in <linux/spi/ds1305.h> */

/* a bunch of NVRAM */
#define DS1305_NVRAM_LEN	96		/* bytes of NVRAM */

#define DS1305_NVRAM		0x20		/* register addresses */


struct ds1305 {
	struct spi_device	*spi;
	struct rtc_device	*rtc;

	struct work_struct	work;

	unsigned long		flags;
#define FLAG_EXITING	0

	bool			hr12;
	u8			ctrl[DS1305_CONTROL_LEN];
};


/*----------------------------------------------------------------------*/

/*
 * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux
 * software (like a bootloader) which may require it.
 */

static unsigned bcd2hour(u8 bcd)
{
	if (bcd & DS1305_HR_12) {
		unsigned	hour = 0;

		bcd &= ~DS1305_HR_12;
		if (bcd & DS1305_HR_PM) {
			hour = 12;
			bcd &= ~DS1305_HR_PM;
		}
		hour += bcd2bin(bcd);
		return hour - 1;
	}
	return bcd2bin(bcd);
}

static u8 hour2bcd(bool hr12, int hour)
{
	if (hr12) {
		hour++;
		if (hour <= 12)
			return DS1305_HR_12 | bin2bcd(hour);
		hour -= 12;
		return DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);
	}
	return bin2bcd(hour);
}

/*----------------------------------------------------------------------*/

/*
 * Interface to RTC framework
 */

static int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		buf[2];
	long		err = -EINVAL;

	buf[0] = DS1305_WRITE | DS1305_CONTROL;
	buf[1] = ds1305->ctrl[0];

	if (enabled) {
		if (ds1305->ctrl[0] & DS1305_AEI0)
			goto done;
		buf[1] |= DS1305_AEI0;
	} else {
		if (!(buf[1] & DS1305_AEI0))
			goto done;
		buf[1] &= ~DS1305_AEI0;
	}
	err = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);
	if (err >= 0)
		ds1305->ctrl[0] = buf[1];
done:
	return err;

}


/*
 * Get/set of date and time is pretty normal.
 */

static int ds1305_get_time(struct device *dev, struct rtc_time *time)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		addr = DS1305_SEC;
	u8		buf[DS1305_RTC_LEN];
	int		status;

	/* Use write-then-read to get all the date/time registers
	 * since dma from stack is nonportable
	 */
	status = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),
			buf, sizeof(buf));
	if (status < 0)
		return status;

	dev_vdbg(dev, ""%s: %02x %02x %02x, %02x %02x %02x %02x\n"",
		""read"", buf[0], buf[1], buf[2], buf[3],
		buf[4], buf[5], buf[6]);

	/* Decode the registers

2025-02-12 18:30:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:30:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:30:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:30:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 18:30:19 - snowflake.connector.connection - INFO - closed
2025-02-12 18:30:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:30:19 - root - INFO - SQL:
SELECT "id", "size", "binary"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    WHERE "binary" = TRUE
    LIMIT 100;
Results:
Too long, hard cut:
id,size,binary
b01f05a2533b4fbfc58b4f0987e99211afdc9678,26140,True
36c3cb88b2600d57a0484870c77c9a042fca65b6,60275,True
49e8b3cc4bbd045ece3be6a7a1a88ba2d3f98c25,375894,True
aee56a5244cdb5347ddaf6e5b9b5cb2b3b3413df,462,True
5b44552b01e50999628379b03a82016ffbd07593,245,True
e439364c40636355e662494a3187be65149a1991,593,True
5cc52e0c689de8276d764c4aa4d321fcc5259c58,103428,True
262f173567a0b09e46e75e26347f3c61cb0dfec1,10089,True
97056c8750012f2989fe08037cd5437f788addc2,63092,True
d1d56b099b4e504ef6bb8d30b795546b90c63ffe,13213,True
770ecc05b2cdb39424ab470124567df9f61bf538,32667,True
0c409302fd94bb0376d69514727d9f99a3d38308,456,True
782345c1f64b8eedb17819d50429b31d3f89683a,1016,True
63c7dc999c9f631e8816277d7a27da6830b018ea,43755,True
bcb5cebfe5449b1e9442195f4d156b435dd14393,596,True
f97c7deda2239fff5d64feca40b889aab42915ad,873,True
b724c1a08265b122ff801a32707471b97f3c6657,4769,True
92f08d759148cad3f2c9cad346243ad489df36ef,227073,True
c9ba5d1037faf5b70ed8762b9dcb963d98661c71,406,True
4ec22cd703c5d4c6dd89d5a1804bdf966ea7e9b4,31184,True
e808b62ba7e1c251d41b02d3c9d3a52b0fd5723b,8111,True
b3d7e24d2d9871a13d106034e10679406ddbceab,1187,True
73dc91593cd5f807c0b921f206da55f365ee21a6,32550,True
08772bde5ed1d54a7d6269a8620edb79b354c3ec,262,True
c4fdbce4cd89c91d0df6fc817d8ab68741ecf60d,658,True
a8b9bb351f90d94e8329c846e3d9485f370df8d6,49220,True
938b9ac556c2099e38f377e7c78d6525fb29d7bb,2840,True
9fa74a5a7a2a5c66a175c4a1d29c9316c6fd732f,16514,True
5e014d23a17ef00003e28d4012e4cc7b85f57f0a,491,True
5473b98409381d151816244260669f65c274ae5f,431486,True
9871d48c35b2a1e69cd6fbb6597d27c6a25006f8,363,True
3f943a2e7cf91acf55304e2ecfee103b8a6b6faa,2768,True
2be451caea976c5c74fc1bc4c8244fd27f8b1280,11227,True
24c4d3616024cb9074999b64fedfe426f84b8b50,1078,True
2c4f0ac6cb68ce726853f18d6bf664b6be3329a7,6852,True
45cce49927c9e03a2ce19f23b4195ec8614a7690,1486,True
2b77ae6c51afad92900d27e4fd6fe0be95b36664,689972,True
366dc692c6ad3800bcd211971482cd6b71f94d0e,996,True
aa7d471ab376f5ae1639955fe49d690021b39543,10089,True
3ee0aa7b92dab58a6efd536107e76e51647e72dd,272,True
2fb7b3eb70d73c2440c61d0fec12c37006ebfbe4,92,True
187e713d9fa9a1b3303e01f590632105afdd11e5,35461,True
8e7c8ed850befce4a258e8420a2914269bb95bdc,5773,True
97dfcecdcb31874021d9c00a14b2b8fbe6a00d42,1201,True
ee468e5498efde679dd2dc62ef3e4c25f77691e0,1017442,True
3dcbada06735951bc61989bc7464e19b698c4ab4,292,True
f89f21801f6ae9e2063dd4f7b458ea3fff41e74e,1998,True
a83e214c6fcb6315d27430de47bfac12b449d94a,1773,True
300de11ee27a54c5b7fa14873ce96b8cb774a1f6,317,True
9302fcf82a9aea24f5873964fcea5953ee34d3aa,1732,True
103d707d3c92a1a2b116552236bd862db1a1125a,3761,True
1dc52c86cdc1d3bf9aca59a94d05199da153935e,342,True
0eeb036a078ac4cd4ed1f02a81d6a6f02cf54df6,210,True
279240ff3b590f190cfc16549ea578971466f45d,481,True
6ce46658720ec3038fda15d787dff28c372909a0,469577,True
5bc002e5041a2b40cf8e20de5908770d7da662fb,973,True
b421d07a8055c27ffde4c0ac411e0179ff6871a6,1190,True
83860e150299b5d9db6b8c350a023424b0d755ba,3575,True
c02cc7ab6ba5d0ba8c04a4add242e74b98fd45a3,1481,True
f73ca1c65f38e0efe4cf12e1b25ea81ea483fac9,18564,True
18cc2a4e901630851138749984a2da9ea5e47e05,33575,True
13df1943443ec6b2f986fd20e9ed96b09dc4139c,24118,True
e6b98d5867c5edd8428e3101f3d9e1abd9401542,59392,True
d091e18c9d1d5c64d4d6977365abfa071a847f8c,72839,True
2fe1995880848ddb74560ddab1feae39bcec71e1,33482,True
43e85e02d19f2193d41fca745064fa4839dfa053,2731,True
d951b5b5b4b4cc9fdb24c36cae254f9fa0794631,878,True
0d89cf5245137ac430ef4a486065acc479e8be5d,466,True
c6ac8420b2d680932b48cdebebaaf55d89986735,823,True
b9e8b3e3054f815519b39fb4664c04adf8b50660,59727,True
56f62e3d89a6d5d8fc29a22e2ebf840687068fed,10689,True
d6276bfe2a54615fc06f25e84081b95b46d761ad,13492,True
2e2fee41a8cdeec637248ccf564409cadfb78c5f,1548,True
4b56ece499e3790e2e9278db9bfbd66abee1d552,45471,True
72ea52c5a5eeb1bbf056e65db3ba4fa12378d09f,33464,True
95350c7c4f96b5e6be9cdd06a2f681ea50f3a206,14605,True
356afb1e5074826ff92f8a5bb0c1d988ed823a31,4288,True
466dac0e1a70ebb37d5ae077d15a17a4ab85687a,16125,True
c101b84fc4bdf2b0f5d3dc257264cc4d3ff100d0,26778,True
39d325fd8e3ec36d67465df9bc06dc75665ec544,738,True
016a27cdb9794b2d14d19a3542983984d8af1a6c,36387,True
f514522dc193964bfb8faeb88c76e09b102ba41c,32496,True
99b320765b8059a94760131aa7fa1040ca65c461,58599,True
5fd5c1187d9b6b45eef388cfe562ebf512831a5d,1720,True
4fc34f17f1c8debb8d3d2f4bd47d4ac281e7159e,1448,True
ceed70cf9452c8301fb27611a05933a665b08a0e,1624,True
cd041d3243d20f3d4a8cdbef43e25f8222db615e,50388,True
c6be282464a890bd024289508ca457a809db5e81,23754,True
814ada1c1eda3bc490848a49f013759f48470f48,45754,True
d5c178be697a5dd8edfce96db4e0ff98a4ae2ee2,699192,True
67c981b77bfe643e0a664f9179f84e28971e347e,6148,True
f7ff75ea593f6300f4ba3d488f50b6c0dcbf5621,263,True
51f5fb742136850f2ad2ebad70a3ef1748178b6f,1042,True
e30c39995034c6749d89ec2ea723d73c35869cf1,147456,True
0928a9c76e1926b295922413d39658e8f45ab452,1378,True
f0620274b417f4b11564e2e5f530139e0f06cdb8,9723,True
0ad8376107f9e0125c2b96cd29b8ecdd09dddeda,1166,True
aaa80219f1d

2025-02-12 18:30:19 - root - INFO - itercount: 0
2025-02-12 18:30:19 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **SAMPLE_FILES**

   - `"repo_name"`: Identifies the repositories.
   - `"path"`: Contains the file paths; used to find files with a `.py` extension.
   - `"id"`: Unique identifier for files; used to join with `SAMPLE_CONTENTS` on `"id"`.

2. **SAMPLE_CONTENTS**

   - `"id"`: Unique identifier for files; used to join with `SAMPLE_FILES` on `"id"`.
   - `"size"`: Size of the file in bytes; used to filter files smaller than 15,000 bytes.
   - `"content"`: The content of the file; used to search for the substring `"def "`.

3. **SAMPLE_REPOS**

   - `"repo_name"`: Identifies the repositories.
   - `"watch_count"`: The total number of watch events for each repository in 2017.

**Conditions that may be used:**

- **File Extension Condition:** `"path"` LIKE '%.py' to find files with a `.py` extension.
- **File Size Condition:** `"size"` < 15000 to find files smaller than 15,000 bytes.
- **Content Condition:** `"content"` LIKE '%def %' to find files containing the substring `"def "`.
- **Joining Condition:** Use `"id"` to join `SAMPLE_FILES` and `SAMPLE_CONTENTS`.
- **Repository Watch Count:** Order by `"watch_count"` to find repositories with the highest number of watch events.

**SQL Queries:**

1. **List distinct repository names from `SAMPLE_REPOS`:**

   ```sql
   SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
   LIMIT 100;
   ```

2. **Retrieve file paths ending with `.py` from `SAMPLE_FILES`:**

   ```sql
   SELECT "repo_name", "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py'
   LIMIT 100;
   ```

3. **Get file sizes from `SAMPLE_CONTENTS`:**

   ```sql
   SELECT "id", "size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   LIMIT 100;
   ```

4. **Find files smaller than 15,000 bytes in `SAMPLE_CONTENTS`:**

   ```sql
   SELECT "id", "size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   WHERE "size" < 15000
   LIMIT 100;
   ```

5. **Select files containing 'def ' in their content from `SAMPLE_CONTENTS`:**

   ```sql
   SELECT "id", "content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   WHERE "content" LIKE '%def %'
   LIMIT 100;
   ```

6. **Join `SAMPLE_FILES` and `SAMPLE_CONTENTS` on `"id"` to view file details:**

   ```sql
   SELECT f."repo_name", f."path", c."size", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   LIMIT 100;
   ```

7. **Find `.py` files smaller than 15,000 bytes:**

   ```sql
   SELECT f."repo_name", f."path", c."size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."size" < 15000
   LIMIT 100;
   ```

8. **Find `.py` files containing 'def ' in their content:**

   ```sql
   SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."content" LIKE '%def %'
   LIMIT 100;
   ```

9. **List repositories that have `.py` files matching all conditions:**

   ```sql
   SELECT DISTINCT f."repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."size" < 15000 AND c."content" LIKE '%def %'
   LIMIT 100;
   ```

10. **Retrieve repositories with the highest watch counts in 2017:**

    ```sql
    SELECT "repo_name", "watch_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
    ORDER BY "watch_count" DESC
    LIMIT 100;
    ```

11. **View contents and sizes of `.py` files smaller than 15,000 bytes:**

    ```sql
    SELECT c."content", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f ON c."id" = f."id"
    WHERE f."path" LIKE '%.py' AND c."size" < 15000
    LIMIT 100;
    ```

12. **Select file contents that contain a specific substring:**

    ```sql
    SELECT "id", "content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    WHERE "content" LIKE '%def %'
    LIMIT 100;
    ```

13. **List repositories ordered by their watch counts:**

    ```sql
    SELECT "repo_name", "watch_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
    ORDER BY "watch_count" DESC
    LIMIT 100;
    ```

14. **Find repositories with the most files:**

    ```sql
    SELECT "repo_name", COUNT(*) AS "file_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
    GROUP BY "repo_name"
    ORDER BY "file_count" DESC
    LIMIT 100;
    ```

15. **Select the largest files from repositories:**

    ```sql
    SELECT f."repo_name", f."path", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    ORDER BY c."size" DESC
    LIMIT 100;
    ```

16. **Identify the most common file extensions:**

    ```sql
    SELECT RIGHT(f."path", LENGTH(f."path") - POSITION('.' IN f."path")) AS "extension", COUNT(*) AS "count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE POSITION('.' IN f."path") > 0
    GROUP BY "extension"
    ORDER BY "count" DESC
    LIMIT 100;
    ```

17. **Find `.py` files that do not contain 'def ' in their content:**

    ```sql
    SELECT f."repo_name", f."path", c."content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    WHERE f."path" LIKE '%.py' AND c."content" NOT LIKE '%def %'
    LIMIT 100;
    ```

18. **List repositories with the highest number of `.py` files:**

    ```sql
    SELECT f."repo_name", COUNT(*) AS "python_file_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" LIKE '%.py'
    GROUP BY f."repo_name"
    ORDER BY "python_file_count" DESC
    LIMIT 100;
    ```

19. **Inspect the contents of files in `SAMPLE_CONTENTS`:**

    ```sql
    SELECT "content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    LIMIT 100;
    ```

20. **Retrieve files and their sizes where the content is marked as binary:**

    ```sql
    SELECT "id", "size", "binary"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    WHERE "binary" = TRUE
    LIMIT 100;
    ```

These SQL queries help in understanding the data and identifying how to extract the necessary information to solve the task at hand: finding the top three repositories with the highest watch counts in 2017 that include at least one Python file smaller than 15,000 bytes and containing the substring `"def "` in its content.Query:
SELECT DISTINCT "repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
   LIMIT 100;
Answer:
repo_name
kbandla/APTnotes
bigcompany/hook.io
H07000223/FlycoDialog_Master
veficos/reverse-engineering-for-beginners
oblac/jodd
leichunfeng/WXTabBarController
gavinbunney/Toucan
krisk/Fuse
brigade/react-waypoint
Quartz/mapquery
gephi/gephi
ant-design/ant-ux
CodelightStudios/Android-Smart-Login
onestraw/ebook
SwiftStudies/Duration
pgexperts/pgx_scripts
muaz-khan/WebRTC-Experiment
lovell/sharp
tombh/texttop
collinhundley/Swift-AI
laravel/homestead
raisemarketplace/ground-control
rstudio/shiny
FredKSchott/fflip
jakubpawlowicz/clean-css
tushar-rishav/code2pdf
NorthwoodsSoftware/GoJS
danikula/AndroidVideoCache
hmkcode/Android
ViccAlexander/Chameleon
0x5e/wechat-deleted-friends
ikCourage/LFS
hitsujiwool/timeline
EduMelo/jboss-ejb3-tutorial
northox/roundcube-yubikey-plugin
frc5687/pi-tracker
jaccarmac/dot-emacs-dot-d
indonesia/community
Muyangmin/AVLoadingIndicatorView
linkedin/gobblin
id-Software/DOOM-3-BFG
garnaat/kappa
evilsocket/bettercap
kevin0571/STPopup
marmelroy/PhoneNumberKit
assemble/assemble
erikflowers/weather-icons
xitu/gold-miner
densamoylov/protection_info
lixm/pybooklet
WithMeApp/LBStyle
lvogelzang/Blocky
Austin-Droids/GeoQuiz
johankson/flipper
uggla/alexandria
aaronjorbin/WordPress-Theme-Directory-Slurper
vladgolubev/mdlok
Novatics/visiteumaescola
DBTeam-ES/DBTeam-Bot
alexandramaster/bootstrap
xaviershay/kronic
coconetlero/Qt-ITK-VTK-Image-Viewer
macteo/Marklight
alioygur/godash
appbaseio/Docbase
realm/SwiftLint
isocpp/CppCoreGuidelines
google/protobuf
preciousforever/sketch-data-populator
GoogleCloudPlatform/DataflowJavaSDK
12207480/DOPDropDownMenu-Enhanced
toddmotto/echo
videojs/videojs-contrib-hls
wqi/votetube
i-make-robots/LEDWall
romka/lua-transliterator
achow101/achow101.github.io
bendycode/ruby-pivotal-tracker
sebastianomorando/OffPlyWebGLVisualizer
lenguyenthedat/dextra-mindef-2015
hackspark/SFPD-Loves-Spark
elgerlambert/redux-localstorage
rangle/batarangle
core-plot/core-plot
jakearchibald/es6-promise
WhisperSystems/Signal-Android
posva/vue-mdl
tc39/ecmascript-asyncawait
jxieeducation/DIY-Data-Science
snwh/paper-icon-theme
chrisaljoudi/uBlock
sandeepmistry/noble
objccn/articles
tealeg/xlsx
dotnet/coreclr
go-kit/kit
havthgem/quick-resize
unindented/grunt-electron-installer-debian
FrontEndHappyHour/website
brendt/Git-Alias-Pak-2.1
Query:
SELECT "repo_name", "path"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
   WHERE "path" LIKE '%.py'
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path
jleclanche/django-push-notifications,push_notifications/migrations/0002_auto_20160106_0850.py
kennyledet/Algorithm-Implementations,Maximum_Subarray/Python/shivam5992/kadane.py
kennyledet/Algorithm-Implementations,Caesar_Cipher/Python/kennyledet/caesar_cipher.py
orcasgit/django-pgcrypto-expressions,setup.py
orcasgit/django-pgcrypto-expressions,pgcrypto_expressions/test/settings.py
percolate/ec2-security-groups-dumper,ec2_security_groups_dumper/__init__.py
pythonanywhere/dirigible-spreadsheet,dirigible/info_pages/__init__.py
rpm-software-management/createrepo_c,tests/python/tests/test_updatecollection.py
sbaechler/django-multilingual-search,tests/testproject/settings.py
yandex-money/yandex-money-sdk-python,yandex_money/api.py
GoogleCloudPlatform/DataflowPythonSDK,google/cloud/dataflow/utils/__init__.py
HewlettPackard/python-ilorest-library,examples/Rest/ex20_get_ilo_nic.py
Sorosliu1029/Rule-based_Expert_System,try/for_now.py
daigofuji/jekyll-foundation-5-starter,node_modules/node-sass/node_modules/node-gyp/gyp/pylib/gyp/easy_xml.py
dbrgn/heroku-buildpack-python-sklearn,vendor/distribute-0.6.36/easy_install.py
dbrgn/heroku-buildpack-python-sklearn,vendor/pip-1.3.1/pip/vcs/subversion.py
dbrgn/heroku-buildpack-python-sklearn,vendor/distribute-0.6.36/tests/install_test.py
django-inplaceedit/django-inplaceedit,testing/testing/unit_tests/__init__.py
fracpete/python-weka-wrapper-examples,src/__init__.py
jonasundderwolf/django-image-cropping,image_cropping/utils.py
mdaniel/virtualbox-org-svn-vbox-trunk,src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/GenFds/FfsInfStatement.py
mdaniel/virtualbox-org-svn-vbox-trunk,src/VBox/Additions/common/crOpenGL/stub_common.py
mdaniel/virtualbox-org-svn-vbox-trunk,src/VBox/Devices/EFI/Firmware/BaseTools/Source/Python/Ecc/CodeFragmentCollector.py
michaelhelmick/django-bootstrap-admin,project/admin/__init__.py
mw-ferretti/angular-resource-tastypie,examples/backend/myproject/myproject/wsgi.py
Anonim47/android_kernel_lenovo_a7000-a,tools/perf/tests/attr.py
KristianOellegaard/django-health-check,health_check_celery/tasks.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/lib/user_array.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/core/tests/test_multiarray_assignment.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/site-packages/numpy/distutils/command/sdist.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/traversal/tests/test_dfs.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/networkx/algorithms/bipartite/tests/test_matching.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/core/cversions.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/doc/howtofind.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/lib/tests/test__datasource.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/f2py/f2py2e.py
LumPenPacK/NetworkExtractionFromImages,win_build/nefi2_win_amd64_msvc_2015/site-packages/numpy/polynomial/laguerre.py
LumPenPacK/NetworkExtractionFromImages,osx_build/nefi2_osx_amd64_xcode_2015/bin/nefi2/model/algorithms/invert_color.py
NicoSantangelo/sublime-text-i18n-rails,path.py
Zanzibar82/plugin.video.streamondemand,lib/gdata/tlslite/utils/PyCrypto_AES.py
Zanzibar82/plugin.video.streamondemand,servers/youtube.py
cloudify-cosmo/cloudify-plugins-common,cloudify/manager.py
crosswalk-project/crosswalk-test-suite,misc/webdriver-w3c-tests/cookie/cookie_test.py
designalyze/python-tutorials-for-rhino,Lessons/lesson15.py
dpapathanasiou/pdfminer-layout-scanner,layout_scanner.py
globocom/GloboNetworkAPI-client-python,networkapiclient/UsuarioGrupo.py
globocom/GloboNetworkAPI-client-python,networkapiclient/EnvironmentVIP.py
hughperkins/kgsgo-dataset-preprocessor,thirdparty/future/src/libfuturize/fixes/fix_print.py
iridium-browser/iridium-browser-ubuntu,third_party/catapult/third_party/Paste/paste/util/ip4.py
iridium-browser/iridium-browser-ubuntu,third_party/catapult/third_party/webtest/webtest/forms.py
iridium-browser/iridium-browser-ubuntu,tools/gyp/test/make_global_settings/full-toolchain/gyptest-make_global_settings.py
iridium-browser/iridium-browser-ubuntu,third_party/jinja2/compiler.py
iridium-browser/iridium-browser-ubuntu,tools/telemetry/third_party/gsutilz/third_party/boto/boto/file/__init__.py
iridium-browser/iridium-browser-ubuntu,content/test/gpu/gpu_tests/trace_test_expectations.py
iridium-browser/iridium-browser-ubuntu,tools/telemetry/telemetry/value/value_unittest.py
iridium-browser/iridium-browser-ubuntu,tools/perf/page_sets/page_reload_cases.py
iridium-browser/iridium-browser-ubuntu,third_party/jinja2/_compat.py
iridium-browser/iridium-browser-ubu
Query:
SELECT "id", "size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   LIMIT 100;
Answer:
id,size
2dd586a19b594a73e9c6f7485d1e5da9203a4467,21447
7acfd43a7914620c9fef2196f9cac65d0f542d53,41645
9eb0c3299f21b4d86029ebbbf0b6ad8c0945b35d,3144
816b2d7412b432d86a4a36147255ec664f760193,3974
ca151cab87aa4ba9286dd5b3557fd75bb902c442,3025
21cab621a82b9e390ee6cfe409704954c4d90f4f,5244
66e2bf008bdb297f2af2125a7f59afb8f90ee107,887
026e9467f313c7776b144881ba161103119aa0a9,1506
f50a76cff9f42438026c7cf8bba687bcd2d491ea,7866
8e0ab7a402ed401e4a92a0933d211dada21b4508,903
9281ba3801cf1a02af6ea13bebdc19a41d48b463,1444
7ec9cbbbdc3ace14e655f751501f0b872930f34f,558
67c981b77bfe643e0a664f9179f84e28971e347e,6148
89b92f14f4b3832108de19ca964f73a1e5ab0133,3031
de1cba95dbe087f858735dc17e86f1a7f5d71af8,7261
6b3e05813c8df6e5fd24b2bb2abc0f765153cf76,10163
003fd53850a89b787395007d69e0fb6f189f922c,1221
7bc2fbeb883e739d41d2bc18bcd2f76bac62405f,2873
b7cde36092689db6dada97894e63992f577dc610,6438
efc4a4e7a2a4697d74b1f5a3696800a7289963f5,17470
0052de438fe69bac42ec3caf472988bcfea7641b,7032
630abd5ef1c4a032c64b076ef06e92dc30262880,4044
35ebf1c9779099f07d0906955485d6f15608504b,13138
4a6e3ef763ac4c820ac268053084dcf2d9a5c20f,6556
e4c56a64472e33c2ceff4248a70897e2364df3e4,1062
53d41edc180367174c94ecfc3ec615dca283472e,1143
02c9781faebbba633113adee71cb90230f6203d4,37888
bcaf713c6341dca3dc7506fdb71c943768248811,53
b39fb02fd35e99a9b9d7604b5a51bad331239d9f,26456
bd8ba51bb577cd64bbc2a2df43dd74bc78aadf1a,32982
73e022d17f9556754e9506bce20b79b9376ab059,1750
21c34c1c0aba3aac858c6c975f269f141ffd091b,160
ef9b8a5ff4f0f32508c7ae873fb3326a9d656bb8,1168
e1813d75df3e183766f07b062776b3897a2523a7,2872
f7ff75ea593f6300f4ba3d488f50b6c0dcbf5621,263
801612d3e022bef0512f1322806589e8824e34c9,63169
58409ad17b6f8bc2dc6d3c095a2ace8b38996bfc,163
5acbb02c0bd644561fecce1ba9b5ed3431c2c400,1474
803aef6c020618e8a2759138ba2f4992b10e377f,912
3dc7fe5332570c343998825d3e94475d4edcabf7,3444
e2521c113a74bb8250434b6efce725e1134a7003,6796
7122ce62f2d1bee4878c0593c244de80247fe88b,6444
6ef0115e036a78b7186aebf5aa390d15caeb78cd,47646
04aa747e26f22b5e6e5e33cd117d4a7adfba57f0,2427
761eaa5a1d29eee52ed9bb752756c453c8f24a2c,4665
2272ea8b5b1cbdc7b2578c6d0a8c5416c200dd57,21758
6db6b8f13a912023f4c8c889b75e7366cca6d221,12758
b2904db52dd0dce293619fc10106854823533867,5143
1cd9db02e03f907dd998722ec7c9674b6532250c,6429
51f5fb742136850f2ad2ebad70a3ef1748178b6f,1042
b4a319e43ad65d47a62c13cb8379699db645f95a,384
e30c39995034c6749d89ec2ea723d73c35869cf1,147456
98001653566ed4abf3b6980b59a53152fa8e6a24,2377
a2b13a6525699664774a1f68bdd9f271cd59198d,96596
9aa58406334a1f589e1f83c811d46fdf5f6120a1,244
2f678fd6a81b8653c17eaa1a5891d8ba2845b0bc,2189
f2871049dc62e26b4421e657389724706572bb26,1928
317c67b246df6fcb29d2e660159a291c4d9e1471,8402
8f7129cd125e0baf7b66a23c0548ca6c608fbacf,4471
cd625461c4640831a5f6a27c64865819addce368,842
e919d808a0495863c59c27e74e3bef40afcfcf58,3459
cf118b09856ceda177b1ff62d8662f9bc52c0cb3,42275
612de1db5cc35a0d852e260a543e686d42dfed62,1149
d2140a96a46b5196e5368ebe555bde477cf95a0d,26277
54a85e112740e947c4b982d69aea64bd360e0297,2259
0928a9c76e1926b295922413d39658e8f45ab452,1378
f0620274b417f4b11564e2e5f530139e0f06cdb8,9723
75c71cd4201fa47a234b7dcc2240a415dfa5610d,6445
970816f61ec689e35495f05345d26070b95450dc,1221
320dbc0d9d8a3f40c867a51bde847fc89be76f08,1445
a266b7b1edded4066a8541baa090ac49b5ab1a50,1128
ad37595cee87b33e089abe682bc38afafb038eb7,5069
dc50bbe6a5c76a22b6532722b31f50d2e058de67,3733
1784564068511de9c6d0a8ed7946836636ae6817,7459
70cf22b949b32adfc25dd9dff4131bf2e09198dd,26147
6ff7b25011e8d2310c7f73a1c4606750989e2022,945
0e1068c119973343a4230816dc1992e6b33bc318,18928
0ad8376107f9e0125c2b96cd29b8ecdd09dddeda,1166
92445a58f9282b454355a57706ff39a78e8dd468,20343
11b7430362f8ba83fe471bf6a641c9c9ac8725bc,36273
41347cdcf00b2fa6a5020d967b0f3d5dd2f29c53,1220
747f288e08d93ea8bea587f77121cb822f047791,5695
97af8908bb7689c60f48beff6ec538b0a3927622,1155
fe3b18fe0a8aae2c12bf47189b89feb807c6b8a8,564
95e160899c088cab1e41c90b8af1eb3b3adfa718,1919
aaa80219f1d33d142060ebd9aace5ced01ffc6b8,837
5c16fe4787609ce827ac4115819b4ca6623d94ad,4846
67c4aed4740fc59050486d5a2a43643b129e6c4b,1705
dc0f68d612e07adee3485ed0a1d0e25d46b71424,6006
84b1feb4e61c56ab8e2fa7bcb4ee6bf15421bd6f,492
6d83eaae13a37486983bb9f66e0c7d6525270cd2,16811
b97643460fb91c62286edcb18f2357a43fce90f0,184
370876ccf108f9d57baa192b0521b2ae4ec0cc22,1842
37362386720d22e764e4ba6bdc6f1a1cef4ceb30,32132
395a3deac906aea5858b298502a9866fc9620a12,173484
99ba4177c70da1c9a4c8fddb68d3343152b90780,16584
b7e06762acb43886348a9dbe715088497912f95b,13913
d1b09bb181570f981826d4444fd8c91675ad7466,11878
879e640a5f54ecb0fee4a03801266f25bef3d919,14389
70198e8f66cef395063610b666e7272f61858b78,7175
Query:
SELECT "id", "size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   WHERE "size" < 15000
   LIMIT 100;
Answer:
id,size
6ba8b7a1ad72449bed2c27c18dc09fdfdc902f4f,1455
2808cc7dad1e963456a33387816a60edcd14e3c2,2743
9ba1cd853975d7412462af7426bfff682bf12171,2526
b5d98c4d7b90b473fdf470a29b2562c7c6b70c67,636
feb55b7e02a74beed6b06ed165c8ba65cb76bd75,2954
f25ac53133823982d0d8449be27871abdbd4a494,865
814343a33660c53403791055ac5f502cee0644bd,4802
bb50f15deb162b39542ee69056036a8d659d5fc6,588
e8b52ec203d330ee3fbf0403a4dbe4383d14b450,3675
13e40b4143150944245cf5bd02600567905e77e5,336
e210013f3d2cf0decdd6aff2960e34194232b9bf,544
6555b1a2f3b5fa0064c6336fc878a7995bd4fe4c,397
da48d7c48ca7f6c4c734487af0f288a1bb9926a2,43
105b24078f81dbc0cc3fa255a83c2ec8789272d0,9000
0698e877472abb2aaa3a9896c05a1cdeca1747ea,979
6982ea63025c042ddf8c58eebb1add752e614761,2524
b09dfb007c3beec5ec0bcb2c113a826849a6d68b,3451
1409a2c49c7e19c876e0e3d4344652888a5702c5,247
6ada1bc42068cf8cde495b98de70a946b532dc38,2863
be12188de5dd2693801bbc0eb8b3590ea6e37c48,1364
d7b65155d6ef5bdfbdfee466ea9882d8c4043e1c,12204
e75b9a2309db2fc1ae2af0c0c690418923980ba0,1492
6584622e9d48f2cd6a3bf15f71fd05ba944a779f,7773
cea0b0ea2909f6391437a5d56222f63ff7e0d429,3556
659d4d87f91545bdb12b3006885b80e2b03019f4,1899
fa36881be7f48249872472742e9dd3b7c978dd6b,511
8bf775c4a0ea1d2638605d9895ed6061a4c7274c,2499
01c68339bb58e3a3ad2ae06ce287ee4ecee6dd6d,388
6c6c181ae1ef4dc8d4d28e37195ca655423fc491,5213
4ea1750cf1a83a33b2ab207d92c3b0a71dbffbc5,2206
67667768c0a3f7c53f81d539958ed74ef5ad6cf2,823
a4dbfefc7a0c6008ee7214acd91afa7dcddf5a22,10764
2c5018824ecdba5bfd51152eb64660fd279e2ea3,3365
393396c26a8eef3f07790ef9bfd0fba0beda5c94,2226
5c95d797d7027465da99ce3201d3bc2c2b522a06,1423
ab28cd93421f409a18f855de257dee2d98bbb515,7005
a44af71773f57e0d9ebb6be5fa557408a5aa3f96,598
d815cb6c681ed60033fd4ff946d272d3638c4f8f,1306
2fb24092643128e0ea2b86f931fa46c2d4be8a29,5121
7091eb08215c8441809949d82fe58c77c7982479,1262
02c3ff241535c9b7c007fa7291c2e722404199f8,5024
260a96fb1d7fd95106048af7aecaa43e8e0af98a,10589
9c4d522ac08d420a1dfe8fc4dc4572e152ffbff2,1811
19110dda80e5f8e620f366c8d168eb849c5fe113,466
88a18d4a8d4770b87f9391d7b2e13420780f7064,3335
5bc9de62db3f14a16d0391be9ff7a75998442bfa,229
05636012267d58df654e474cc4b1e3b4bffb2507,967
490346726ae4e652fb4f63784a5a5e3d0aa71774,579
82ee1954a597e44a337c68e50ae398b08acf889b,4394
69395bde0bed8bd93efd1742502350dce3ef852b,3276
002272f4fe68666c7fc4a308bc849ac1763eef3d,1599
a63fb573fec38da5b3003a14631bf3564eec775b,48
9c8783191106dca07a7206247dc05d20ca418c77,2737
d12178fa0a4544b8cd977da8fbf93a04f24d485e,1597
fc9f599c3bd2a5cf0a047f78ef746425313121fc,1719
e2a28a304a75ab5a71506c568c2632d091df6da8,251
82d2b784aeb8a4d227759c67432bcc2c76333120,681
ca517ba2656c2ff69fc92d18e759156a180a909f,2720
aee56a5244cdb5347ddaf6e5b9b5cb2b3b3413df,462
5b44552b01e50999628379b03a82016ffbd07593,245
7de639f8c0f7eea04cf4f28ba1f936448e382343,1402
c08d469ae5e9eece9a5a93d2fbe1c62e1e04074c,954
84dec33bfcfd3a3757e29e39e6ee3d52f793f635,5349
672f5a71a2b2ed49a2131398edd9dd90c4ccafa2,2743
7f47f629f1454ac2e74b186516a90de1b0956d1d,908
2616a27a5c0d15e31fbee4c4aa697612d8d83521,8457
3cef78ec093a2e5eed65b15bf47204232d94f261,2558
a9753c5115e98af376181d88ac517ec012762443,510
a5a83a8aa414fc687a514583ed0a24cb4fee5621,2776
3a23480c4e6763e385be3aa7988e52300756caa7,2680
c1faacf0d09863e3cb841f8408291fa07efdd920,5297
ad1b22a44cd42697373929fc40c1d081c048caeb,588
5a625b6c3a3aee5595a0cf5ab1ad080981ea948d,7163
71931c03db6f3c6bd79b4f155756ea6930fe9569,1099
9b04a3d91578c1ddd1c1e4d6a665b90b6ad59767,894
fa1a33a95800e6aa673e9d561d204471bac0f044,571
041e8c6a8324a1cc35c6ebed87681cd6e4d9fa16,1845
357b24302720af6b65f7b155ee4afc41618e6972,2266
bb15b0d4366a5efac6e5bcd788e29f304ba9e2c0,5642
f4848c4eec5816724f3a7396fd6488e311de193f,1122
b7c2707c285b8d15a7ee3ae31c51617ceab60e3d,421
d0e8af0d8562637415f1cada3ff9133d79e73c5e,622
09dd645d70120c5d7552303017325a7898bd48a1,1290
9298c9431a2bf563cfd6314385a80dcdbf3097f7,1476
e439364c40636355e662494a3187be65149a1991,593
262f173567a0b09e46e75e26347f3c61cb0dfec1,10089
9bbfff0efae7ae7c45f130a0f2eb9e702a4f69e5,75
8a760852374240ae1162b1dd517637d5b1094885,6880
dc2b3716a7faa5e363c7b8c206fe398c3fa692b4,8333
4cbfc3c007c0af97c13456ddfa19dfca52905110,483
7dded6e5c115c228e85da3099c466b0276d67b1e,1203
eea167a0dec0f8416308484cd6d1d54ce5ef41ce,3106
d1d56b099b4e504ef6bb8d30b795546b90c63ffe,13213
65c7e616c59cb411ac636757f67f47026b0eb2ab,1973
fc6a56a26091252340eb50a97be793bd4e8f7272,2247
06f2d29b24053ebe698558a1656f8acb004ccfe0,1081
bbb1d6be2174476ffbd9c59837d7748397e4a2b5,1897
ccf759678bf51d1d2d2912e3adac5a81cebcbe9f,1414
498e5c15497c365c42156c58138f618233a00f7e,5168
478202e6f40409f0f588373073108c7eb71f8cbe,870
Query:
SELECT "id", "content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
   WHERE "content" LIKE '%def %'
   LIMIT 100;
Answer:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;
Query:
SELECT f."repo_name", f."path", c."size", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,size,content
AdrianDC/android_kernel_sony_msm8960t,fs/xfs/xfs_itable.c,20030,"/*
 * Copyright (c) 2000-2002,2005 Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it would be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write the Free Software Foundation,
 * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
#include ""xfs.h""
#include ""xfs_fs.h""
#include ""xfs_types.h""
#include ""xfs_bit.h""
#include ""xfs_log.h""
#include ""xfs_inum.h""
#include ""xfs_trans.h""
#include ""xfs_sb.h""
#include ""xfs_ag.h""
#include ""xfs_mount.h""
#include ""xfs_bmap_btree.h""
#include ""xfs_alloc_btree.h""
#include ""xfs_ialloc_btree.h""
#include ""xfs_dinode.h""
#include ""xfs_inode.h""
#include ""xfs_ialloc.h""
#include ""xfs_itable.h""
#include ""xfs_error.h""
#include ""xfs_btree.h""
#include ""xfs_trace.h""

STATIC int
xfs_internal_inum(
	xfs_mount_t	*mp,
	xfs_ino_t	ino)
{
	return (ino == mp->m_sb.sb_rbmino || ino == mp->m_sb.sb_rsumino ||
		(xfs_sb_version_hasquota(&mp->m_sb) &&
		 (ino == mp->m_sb.sb_uquotino || ino == mp->m_sb.sb_gquotino)));
}

/*
 * Return stat information for one inode.
 * Return 0 if ok, else errno.
 */
int
xfs_bulkstat_one_int(
	struct xfs_mount	*mp,		/* mount point for filesystem */
	xfs_ino_t		ino,		/* inode to get data for */
	void __user		*buffer,	/* buffer to place output in */
	int			ubsize,		/* size of buffer */
	bulkstat_one_fmt_pf	formatter,	/* formatter, copy to user */
	int			*ubused,	/* bytes used by me */
	int			*stat)		/* BULKSTAT_RV_... */
{
	struct xfs_icdinode	*dic;		/* dinode core info pointer */
	struct xfs_inode	*ip;		/* incore inode pointer */
	struct xfs_bstat	*buf;		/* return buffer */
	int			error = 0;	/* error value */

	*stat = BULKSTAT_RV_NOTHING;

	if (!buffer || xfs_internal_inum(mp, ino))
		return XFS_ERROR(EINVAL);

	buf = kmem_alloc(sizeof(*buf), KM_SLEEP | KM_MAYFAIL);
	if (!buf)
		return XFS_ERROR(ENOMEM);

	error = xfs_iget(mp, NULL, ino,
			 (XFS_IGET_DONTCACHE | XFS_IGET_UNTRUSTED),
			 XFS_ILOCK_SHARED, &ip);
	if (error) {
		*stat = BULKSTAT_RV_NOTHING;
		goto out_free;
	}

	ASSERT(ip != NULL);
	ASSERT(ip->i_imap.im_blkno != 0);

	dic = &ip->i_d;

	/* xfs_iget returns the following without needing
	 * further change.
	 */
	buf->bs_nlink = dic->di_nlink;
	buf->bs_projid_lo = dic->di_projid_lo;
	buf->bs_projid_hi = dic->di_projid_hi;
	buf->bs_ino = ino;
	buf->bs_mode = dic->di_mode;
	buf->bs_uid = dic->di_uid;
	buf->bs_gid = dic->di_gid;
	buf->bs_size = dic->di_size;
	buf->bs_atime.tv_sec = dic->di_atime.t_sec;
	buf->bs_atime.tv_nsec = dic->di_atime.t_nsec;
	buf->bs_mtime.tv_sec = dic->di_mtime.t_sec;
	buf->bs_mtime.tv_nsec = dic->di_mtime.t_nsec;
	buf->bs_ctime.tv_sec = dic->di_ctime.t_sec;
	buf->bs_ctime.tv_nsec = dic->di_ctime.t_nsec;
	buf->bs_xflags = xfs_ip2xflags(ip);
	buf->bs_extsize = dic->di_extsize << mp->m_sb.sb_blocklog;
	buf->bs_extents = dic->di_nextents;
	buf->bs_gen = dic->di_gen;
	memset(buf->bs_pad, 0, sizeof(buf->bs_pad));
	buf->bs_dmevmask = dic->di_dmevmask;
	buf->bs_dmstate = dic->di_dmstate;
	buf->bs_aextents = dic->di_anextents;
	buf->bs_forkoff = XFS_IFORK_BOFF(ip);

	switch (dic->di_format) {
	case XFS_DINODE_FMT_DEV:
		buf->bs_rdev = ip->i_df.if_u2.if_rdev;
		buf->bs_blksize = BLKDEV_IOSIZE;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_LOCAL:
	case XFS_DINODE_FMT_UUID:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = 0;
		break;
	case XFS_DINODE_FMT_EXTENTS:
	case XFS_DINODE_FMT_BTREE:
		buf->bs_rdev = 0;
		buf->bs_blksize = mp->m_sb.sb_blocksize;
		buf->bs_blocks = dic->di_nblocks + ip->i_delayed_blks;
		break;
	}
	xfs_iunlock(ip, XFS_ILOCK_SHARED);
	IRELE(ip);

	error = formatter(buffer, ubsize, ubused, buf);

	if (!error)
		*stat = BULKSTAT_RV_DIDONE;

 out_free:
	kmem_free(buf);
	return error;
}

/* Return 0 on success or positive error */
STATIC int
xfs_bulkstat_one_fmt(
	void			__user *ubuffer,
	int			ubsize,
	int			*ubused,
	const xfs_bstat_t	*buffer)
{
	if (ubsize < sizeof(*buffer))
		return XFS_ERROR(ENOMEM);
	if (copy_to_user(ubuffer, buffer, sizeof(*buffer)))
		return XFS_ERROR(EFAULT);
	if (ubused)
		*ubused = sizeof(*buffer);
	return 0;
}

int
xfs_bulkstat_one(
	xfs_mount_t	*mp,		/* mount point for filesystem */
	xfs_ino_t	ino,		/* inode number to get data for */
	void		__user *buffer,	/* buffer to place output in */
	int		ubsize,		/* size of buffer */
	int		*ubused,	/* bytes used by me */
	int		*stat)		/* BULKSTAT_RV_... */
{
	return xfs_bulkstat_one_int(mp, ino, buffer, ubsi
Query:
SELECT f."repo_name", f."path", c."size"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."size" < 15000
   LIMIT 100;
Answer:
repo_name,path,size
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,2331
dieseldev/diesel,examples/zeromq_receiver.py,619
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,564
MAECProject/python-maec,maec/utils/merge.py,12077
Query:
SELECT f."repo_name", f."path", c."content"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."content" LIKE '%def %'
   LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,content
google/rekall,rekall-core/rekall/plugins/linux/iomem.py,"# Rekall Memory Forensics
#
# Copyright Digital Forensics Solutions.
# Copyright 2013 Google Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

__author__ = (""Andrew Case <atcuno@gmail.com>"",
              ""Michael Cohen <scudette@google.com>"")


from rekall.plugins.linux import common


class IOmem(common.LinuxPlugin):
    '''mimics /proc/iomem.'''

    __name = ""iomem""

    table_header = [
        dict(name=""Resource"", cname=""resource"", style=""address""),
        dict(name=""Start"", cname=""start"", style=""address""),
        dict(name=""End"", cname=""end"", style=""address""),
        dict(name=""Name"", cname=""name"", type=""TreeNode""),
    ]

    def GetResources(self):
        # Resources are organized in a tree structure.
        resource_tree_root = self.profile.get_constant_object(
            ""iomem_resource"", target=""resource"")

        seen = set()

        return self._GetResources(resource_tree_root, seen)

    def _GetResources(self, node, seen, depth=0):
        """"""Traverse the resource tree depth first.""""""
        if not node or node in seen:
            return

        seen.add(node)

        yield node, depth

        if node.child:
            for x in self._GetResources(node.child.deref(), seen, depth+1):
                yield x

        for sibling in node.walk_list(""sibling""):
            for x in self._GetResources(sibling, seen, depth):
                yield x


    def collect(self):
        for node, depth in self.GetResources():
            yield dict(
                resource=node,
                start=node.start,
                end=node.end,
                name=node.name.deref(),
                depth=depth)
"
dieseldev/diesel,examples/zeromq_receiver.py,"from diesel import quickstart, quickstop, sleep
from diesel.protocols.zeromq import DieselZMQSocket, zctx, zmq
import time

def get_messages():
    outsock = DieselZMQSocket(zctx.socket(zmq.DEALER), bind=""tcp://127.0.0.1:5000"")

    t = time.time()
    for x in xrange(500000):
        msg = outsock.recv()
        assert msg == ""yo dawg %s"" % x
        if x % 1000 == 0:
            sleep()

    delt = time.time() - t
    print ""500000 messages in %ss (%.1f/s)"" % (delt, 500000.0 / delt)
    quickstop()

def tick():
    while True:
        print ""Other diesel stuff""
        sleep(1)

quickstart(get_messages, tick)
"
MAECProject/python-maec,maec/utils/merge.py,"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only M
Query:
SELECT DISTINCT f."repo_name"
   FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
   JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
   WHERE f."path" LIKE '%.py' AND c."size" < 15000 AND c."content" LIKE '%def %'
   LIMIT 100;
Answer:
repo_name
MAECProject/python-maec
google/rekall
dieseldev/diesel
Query:
SELECT "repo_name", "watch_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS"
    ORDER BY "watch_count" DESC
    LIMIT 100;
Answer:
repo_name,watch_count
FreeCodeCamp/FreeCodeCamp,90457
firehol/netdata,13208
joshbuchea/HEAD,13125
braydie/HowToBeAProgrammer,12019
sindresorhus/awesome,11063
tensorflow/tensorflow,10728
facebook/react,10458
ParsePlatform/parse-server,10339
loverajoel/jstips,9585
facebook/react-native,9437
vhf/free-programming-books,8862
vuejs/vue,8822
airbnb/javascript,8708
caesar0301/awesome-public-datasets,8653
twbs/bootstrap,8211
toddmotto/public-apis,8182
getlantern/lantern,8110
DrkSephy/es6-cheatsheet,7967
airbnb/caravel,7764
googlesamples/android-architecture,7713
getify/You-Dont-Know-JS,7650
allenwong/30DaysofSwift,7485
jgthms/bulma,7387
dthree/cash,7309
Rochester-NRT/AlphaGo,7200
apple/swift,7041
robbyrussell/oh-my-zsh,6983
github/gitignore,6898
facebook/draft-js,6715
matryer/bitbar,6384
Microsoft/vscode,6272
ptmt/react-native-desktop,6186
p-e-w/maybe,6127
parkjs814/AlgorithmVisualizer,6057
hollance/swift-algorithm-club,6012
alexjc/neural-doodle,6008
fbsamples/f8app,5987
nodejs/node,5954
jiahaog/nativefier,5836
Microsoft/CNTK,5833
atom/atom,5826
jcjohnson/neural-style,5768
tensorflow/models,5629
reactjs/redux,5622
jlevy/the-art-of-command-line,5603
mbostock/d3,5601
thejameskyle/the-super-tiny-compiler,5555
Microsoft/ChakraCore,5524
nylas/N1,5476
CRYTEK-CRYENGINE/CRYENGINE,5433
petehunt/react-howto,5428
VerbalExpressions/JSVerbalExpressions,5374
angular/angular.js,5347
torvalds/linux,5332
google/agera,5319
angular/angular,5318
atom/electron,5302
mxstbr/react-boilerplate,5163
kadirahq/react-storybook,5154
rg3/youtube-dl,5140
daneden/animate.css,5113
jbranchaud/til,5105
docker/docker,5052
shockone/black-screen,5028
google/xi-editor,5008
electron/electron,4995
CatchChat/Yep,4994
mhinz/vim-galore,4928
ReactiveX/RxJava,4926
josephmisiti/awesome-machine-learning,4917
weui/weui,4883
open-source-society/computer-science,4848
FortAwesome/Font-Awesome,4838
puikinsh/gentelella,4825
webpack/webpack,4812
soimort/you-get,4776
vinta/awesome-python,4734
CosmicMind/Material,4731
typicode/json-server,4720
aosabook/500lines,4659
golang/go,4620
0x5e/wechat-deleted-friends,4609
dear-github/dear-github,4604
nlp-compromise/nlp_compromise,4600
lodash/lodash,4596
santinic/how2,4582
google/material-design-lite,4571
callemall/material-ui,4455
nvbn/thefuck,4438
Dogfalo/materialize,4425
johnpapa/angular-styleguide,4403
JakeLin/IBAnimatable,4399
google/seesaw,4388
amzn/alexa-avs-raspberry-pi,4384
vsouza/awesome-ios,4346
letsencrypt/letsencrypt,4325
square/retrofit,4306
google/flexbox-layout,4306
Nickersoft/push.js,4284
vurtun/nuklear,4273
Query:
SELECT c."content", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f ON c."id" = f."id"
    WHERE f."path" LIKE '%.py' AND c."size" < 15000
    LIMIT 100;
Answer:
Too long, hard cut:
content,size
"# Copyright (c) 2015, The MITRE Corporation. All rights reserved.
# See LICENSE.txt for complete terms.

""""""Methods for merging MAEC documents""""""

from copy import deepcopy
import itertools

from mixbox import idgen
from mixbox.namespaces import Namespace

from cybox.core import Object
from cybox.common import HashList

import maec
from maec.package import (Package, MalwareSubject, MalwareConfigurationDetails,
                          FindingsBundleList, MetaAnalysis, Analyses,
                          MinorVariants, MalwareSubjectRelationshipList,
                          MalwareSubjectList)

def dict_merge(target, *args):
    '''Merge multiple dictionaries into one'''
    if len(args) > 1:
        for obj in args:
            dict_merge(target, obj)
        return target
 
    # Recursively merge dicts and set non-dict values
    obj = args[0]
    if not isinstance(obj, dict):
        return obj
    for k, v in obj.iteritems():
        if k in target and isinstance(target[k], dict):
            dict_merge(target[k], v)
        elif k in target and isinstance(target[k], list):
                target[k] = (target[k] + v)
        else:
            target[k] = deepcopy(v)
    return target

def merge_documents(input_list, output_file):
    '''Merge a list of input MAEC documents and write them to an output file'''
    parsed_documents = []
    # Parse the documents and get their API representation
    for input_file in input_list:
        api_representation = maec.parse_xml_instance(input_file)['api']
        parsed_documents.append(api_representation)
    # Do a sanity check on the input list of documents
    for document in parsed_documents:
        if isinstance(document, Package):
            continue
        else:
            print 'Error: unsupported document type. Currently only MAEC Packages are supported'

    # Merge the MAEC packages
    merged_package = merge_packages(parsed_documents)
    # Write the merged package to the output file
    merged_package.to_xml_file(output_file, {""https://github.com/MAECProject/python-maec"":""merged""})

def merge_packages(package_list, namespace = None):
    '''Merge a list of input MAEC Packages and return a merged Package instance.'''
    malware_subjects = []
    # Instantiate the ID generator class (for automatic ID generation)
    if not namespace:
        NS = Namespace(""https://github.com/MAECProject/python-maec"", ""merged"")
    else:
        NS = namespace
    maec.utils.set_id_namespace(NS)
    # Build the list of Malware Subjects
    for package in package_list:
        for malware_subject in package.malware_subjects:
            malware_subjects.append(malware_subject)
    # Merge the Malware Subjects
    merged_subjects = merge_malware_subjects(malware_subjects)
    # Merge the input namespace/schemaLocation dictionaries
    merged_namespaces = {}
    merged_schemalocations = {}
    for package in package_list:
        merged_namespaces.update(package.__input_namespaces__)
        merged_schemalocations.update(package.__input_schemalocations__)
    # Create a new Package with the merged Malware Subjects
    merged_package = Package()
    merged_package.malware_subjects = MalwareSubjectList(merged_subjects)
    merged_package.__input_namespaces__ = merged_namespaces
    merged_package.__input_schemalocations__ = merged_schemalocations
    return merged_package

def bin_malware_subjects(malware_subject_list, default_hash_type='md5'):
    '''Bin a list of Malware Subjects by hash
       Default = MD5
    '''
    binned_subjects = {}
    for malware_subject in malware_subject_list:
        mal_inst_obj = malware_subject.malware_instance_object_attributes
        if mal_inst_obj:
            obj_properties = mal_inst_obj.properties
            if obj_properties and obj_properties.hashes:
                for hash in obj_properties.hashes:
                    if hash.type_ and hash.simple_hash_value:
                        hash_type = ''
                        hash_value = ''
                        # Get the hash type
                        hash_type = str(hash.type_).lower()
                        # Get the hash value
                        hash_value = str(hash.simple_hash_value).lower()
                            
                        # Check the hash type and bin accordingly
                        if hash_type == default_hash_type:
                            if hash_value in binned_subjects:
                                binned_subjects[hash_value].append(malware_subject)
                            else:
                                binned_subjects[hash_value] = [malware_subject]
    return binned_subjects

def merge_entities(entity_list):
    '''Merge a list of MAEC/CybOX entities'''
    dict_list = [x.to_dict() for x in entity_list]
    output_dict = dict_merge({}, *dict_list)
    return output_dict

def deduplicate_vocabulary_list(entity_list, value_name = ""value""): # TODO: Move this to the deduplicator m
Query:
SELECT "id", "content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    WHERE "content" LIKE '%def %'
    LIMIT 100;
Answer:
Too long, hard cut:
id,content
91807aef6df0374714e8779b7fa2b9643b73e13e,"#pragma once
/*
 *      Copyright (C) 2005-2012 Team XBMC
 *      http://xbmc.org
 *
 *  This Program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2, or (at your option)
 *  any later version.
 *
 *  This Program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with XBMC; see the file COPYING.  If not, see
 *  <http://www.gnu.org/licenses/>.
 *
 */

#include ""utils/StdString.h""
#include <vector>

#include ""pictures/PictureScalingAlgorithm.h""
#include ""utils/GlobalsHandling.h""

class TiXmlElement;

class DatabaseSettings
{
public:
  void Reset()
  {
    type.clear();
    host.clear();
    port.clear();
    user.clear();
    pass.clear();
    name.clear();
  };
  CStdString type;
  CStdString host;
  CStdString port;
  CStdString user;
  CStdString pass;
  CStdString name;
};

struct TVShowRegexp
{
  bool byDate;
  CStdString regexp;
  int defaultSeason;
  TVShowRegexp(bool d, const CStdString& r, int s = 1)
  {
    byDate = d;
    regexp = r;
    defaultSeason = s;
  }
};

struct RefreshOverride
{
  float fpsmin;
  float fpsmax;

  float refreshmin;
  float refreshmax;

  bool  fallback;
};


struct RefreshVideoLatency
{
  float refreshmin;
  float refreshmax;

  float delay;
};

typedef std::vector<TVShowRegexp> SETTINGS_TVSHOWLIST;

class CAdvancedSettings
{
  public:
    CAdvancedSettings();

    static CAdvancedSettings* getInstance();

    void Initialize();
    bool Initialized() { return m_initialized; };
    void AddSettingsFile(const CStdString &filename);
    bool Load();
    void Clear();

    static void GetCustomTVRegexps(TiXmlElement *pRootElement, SETTINGS_TVSHOWLIST& settings);
    static void GetCustomRegexps(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomRegexpReplacers(TiXmlElement *pRootElement, CStdStringArray& settings);
    static void GetCustomExtensions(TiXmlElement *pRootElement, CStdString& extensions);

    bool CanLogComponent(int component) const;

    int m_audioHeadRoom;
#ifdef TARGET_OPENELEC
    // OpenELEC workaround for minimum sample Rate
    int m_minimumSampleRate;
#endif
    float m_ac3Gain;
    int m_maxPllAdjust;
    CStdString m_audioDefaultPlayer;
    float m_audioPlayCountMinimumPercent;
    bool m_dvdplayerIgnoreDTSinWAV;
    float m_limiterHold;
    float m_limiterRelease;

    bool  m_omxHWAudioDecode;
    bool  m_omxDecodeStartWithValidFrame;

    float m_videoSubsDelayRange;
    float m_videoAudioDelayRange;
    int m_videoSmallStepBackSeconds;
    int m_videoSmallStepBackTries;
    int m_videoSmallStepBackDelay;
    bool m_videoUseTimeSeeking;
    int m_videoTimeSeekForward;
    int m_videoTimeSeekBackward;
    int m_videoTimeSeekForwardBig;
    int m_videoTimeSeekBackwardBig;
    int m_videoPercentSeekForward;
    int m_videoPercentSeekBackward;
    int m_videoPercentSeekForwardBig;
    int m_videoPercentSeekBackwardBig;
    CStdString m_videoPPFFmpegDeint;
    CStdString m_videoPPFFmpegPostProc;
    bool m_videoVDPAUtelecine;
    bool m_videoVDPAUdeintSkipChromaHD;
    bool m_musicUseTimeSeeking;
    int m_musicTimeSeekForward;
    int m_musicTimeSeekBackward;
    int m_musicTimeSeekForwardBig;
    int m_musicTimeSeekBackwardBig;
    int m_musicPercentSeekForward;
    int m_musicPercentSeekBackward;
    int m_musicPercentSeekForwardBig;
    int m_musicPercentSeekBackwardBig;
    int m_videoBlackBarColour;
    int m_videoIgnoreSecondsAtStart;
    float m_videoIgnorePercentAtEnd;
    float m_audioApplyDrc;
    bool m_useFfmpegVda;

    int   m_videoVDPAUScaling;
    bool  m_videoVAAPIforced;
    float m_videoNonLinStretchRatio;
    bool  m_videoEnableHighQualityHwScalers;
    float m_videoAutoScaleMaxFps;
    std::vector<RefreshOverride> m_videoAdjustRefreshOverrides;
    std::vector<RefreshVideoLatency> m_videoRefreshLatency;
    float m_videoDefaultLatency;
    bool m_videoDisableBackgroundDeinterlace;
    int  m_videoCaptureUseOcclusionQuery;
    bool m_DXVACheckCompatibility;
    bool m_DXVACheckCompatibilityPresent;
    bool m_DXVAForceProcessorRenderer;
    bool m_DXVANoDeintProcForProgressive;
    bool m_DXVAAllowHqScaling;
    int  m_videoFpsDetect;
    int  m_videoBusyDialogDelay_ms;

    CStdString m_videoDefaultPlayer;
    CStdString m_videoDefaultDVDPlayer;
    float m_videoPlayCountMinimumPercent;

    float m_slideshowBlackBarCompensation;
    float m_slideshowZoomAmount;
    float m_slideshowPanAmount;

    bool m_lcdHeartbeat;
    bool m_lcdDimOnScreenSave;
    int m_lcdScrolldelay;
    CStdString m_lcdHostName;

    int m_songInfoDuration;
    int m_logLevel;
Query:
SELECT "repo_name", COUNT(*) AS "file_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES"
    GROUP BY "repo_name"
    ORDER BY "file_count" DESC
    LIMIT 100;
Answer:
repo_name,file_count
cdnjs/cdnjs,20579
Piicksarn/cdnjs,18716
bootcdn/cdnjs,15981
dstockwell/chromium,1698
crosswalk-project/chromium-crosswalk,1685
scheib/chromium,1681
Samsung/ChromiumGStreamerBackend,1679
mirror/chromium,1633
nwjs/chromium.src,1624
RMerl/asuswrt-merlin,1504
fedya/aircam-openwrt,1338
jsdelivr/jsdelivr,1067
crosswalk-project/blink-crosswalk,1055
funtoo/ports-2012,1047
SanDisk-Open-Source/SSD_Dashboard,1040
iridium-browser/iridium-browser-ubuntu,1031
nwjs/blink,999
staticfile/static,930
servo/servo,909
oferei/sublime-unity-completions,858
autc04/Retro68,787
iocellnetworks/ndas4windows,783
espadrine/opera,766
siranen/FreeIconsWebiOSAndroidWindows,763
rhuitl/uClinux,745
Sapphirine/Movie-Review-Sentiment-Analysis,737
gcc-mirror/gcc,708
vinriviere/m68k-atari-mint-gcc,689
thomaspark/glyphsearch,687
bugvm/bugvm-studio,667
justathoughtor2/atomicApe,666
cmoa/collection,648
alixaxel/dump.HN,643
artsmia/collection,641
puppeh/gcc-6502,637
GaloisInc/hacrypto,636
UBERTC/GCC-UBER,629
GreenRaccoon23/archdroid-icon-theme,614
rahulpnath/Blog,607
fnando/babel-schmooze-sprockets,600
JetBrains/intellij-community,587
LibreOffice/core,559
redbrain/gccpy,559
IMS-MAXIMS/openMAXIMS,557
parallaxinc/propgcc,556
jcmvbkbc/gcc-xtensa,549
ThaDafinser/UserAgentParserComparison,538
Ramshackle-Jamathon/Interactive-Experiments,537
KRMAssociatesInc/eHMP,535
tategallery/collection,534
vslavik/poedit,500
winterDroid/android-drawable-importer-intellij-plugin,473
DNAinfoData/Draw-Your-Neighborhood,449
sghiassy/react-native-sglistview,448
dvyukov/go-fuzz,446
ftCommunity/ft-TXT,439
AltraMayor/XIA-for-Linux,428
practicalswift/swift-compiler-crashes,427
Broadcom/arm64-linux,420
ChromiumWebApps/chromium,416
linusw/linux-bfq,415
Seagate/SMR_FS-EXT4,415
altera-opensource/linux-socfpga,413
mjg59/linux,411
jeffmerkey/linux,411
carlocaione/linux-meson,410
NigelCunningham/tuxonice-kernel,409
andreamerello/linux-zynq-stable,408
patrykk/linux-udoo,408
paul-chambers/netgear-r7800,408
RadeonOpenCompute/ROCK-Kernel-Driver,406
ljalves/linux_media,406
tobiasjakobi/linux-odroid-public,404
beagleboard/linux,404
libos-nuse/lkl-linux,403
google/kasan,402
Asus-T100/kernel,401
apritzel/linux,399
pali/linux-n900,399
tpaviot/oce,399
zen-kernel/zen-kernel,397
crazycat69/linux_media,396
davidker/unisys,394
torvalds/linux,393
linuxppc/linux,393
Taeung/tip,393
maurossi/linux,392
netroby/jdk9-dev,392
PredictionIO/open-academy,390
ParrotSec/linux-parrot,389
open-power/linux,389
neeker/chromium_extract,388
sfjro/aufs4-linux,388
01org/edison-linux,386
kvalo/ath,386
hlzz/dotfiles,386
Linutronix/ti-linux-kernel,385
elephone-dev/P8000-Kernel,384
lukier/linux-hi3518,384
svenkatr/linux,383
Query:
SELECT f."repo_name", f."path", c."size"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    ORDER BY c."size" DESC
    LIMIT 100;
Answer:
Too long, hard cut:
repo_name,path,size
dmonakhov/linphone,share/rings/rock.wav,1298680
xuxueli/xxl-job,doc/XXL-JOB1.3.x架构图_20160528_1910.pptx,1092828
fedya/aircam-openwrt,build_dir/toolchain-arm_v5te_gcc-linaro_uClibc-0.9.32_eabi/gcc-linaro-4.5-2011.02-0-initial/gcc/libgcc.a,499142
binnng/time.js,test/bower_components/angular/angular.min.js.map,340629
jgallen23/jquery-builder,dist/1.10.2/jquery-ajax-deprecated-dimensions-effects-offset-wrap.js,212374
ComputerHobbyist/cqa,Training Data For Question Retrieval/Yahoo Data/yahoo_answer/C1883Question.dat,207063
nanowebcoder/NanoVeraHuesBridge,VeraHuesBridgeTester/bin/Debug/System.Net.Http.Formatting.dll,185544
Stoiss/Rend2,WARZONE_ASSETS/sound/weapons/bryar/hit_wall11.wav,77328
migumar2/uiHRDC,indexes/NOPOS/II_docs/ilists.imp/4.Repair/5.integradoSkippingBB.Sanders.2015[ver.leeme]/srcREPAIR/rebuildPost,76767
ugur2323/Whispermehmet_VE,drivers/mmc/host/vub300.c,74229
jgallen23/jquery-builder,dist/2.0.3/jquery-dimensions-sizzle.min.js,66557
crysalead/kahlan,docs/assets/verbose_reporter.png,62415
cdnjs/cdnjs,ajax/libs/medium-editor/4.4.0/js/medium-editor.min.js,59410
manjaro/artwork-menda,Menda-Dark/gnome-shell/gnome-shell-no-crash.css,57968
eunyoung14/mtcp,dpdk-16.04/drivers/net/e1000/base/e1000_82571.c,57311
imoseyon/leanKernel-note3,drivers/thermal/msm8974-tsens.c,52839
CyanogenMod/android_kernel_google_msm,drivers/target/iscsi/iscsi_target_parameters.c,52369
zeroblade1984/LG_MSM8974,drivers/target/iscsi/iscsi_target_parameters.c,52369
MotorolaMobilityLLC/kernel-msm,drivers/target/iscsi/iscsi_target_parameters.c,52369
GaloisInc/hacrypto,src/C/libressl/libressl-2.0.0/include/openssl/ec.h,46312
openembedded/openembedded,recipes/linux/linux-2.6.30/calamari/defconfig,45092
andip71/boeffla-kernel-cm-oneplusx,drivers/net/ethernet/intel/igb/e1000_mac.c,40883
CyanogenMod/android_kernel_samsung_jf,drivers/net/ethernet/intel/igb/e1000_mac.c,40883
PureNexusProject/android_kernel_lge_hammerhead,drivers/net/ethernet/intel/igb/e1000_mac.c,40883
XIMDEX/ximdex,extensions/bootstrap/docs/examples/screenshots/cover.jpg,36631
ms-iot/python,cpython/Doc/faq/design.rst,35823
cdnjs/cdnjs,ajax/libs/jqueryui/1.8.21/themes/vader/jquery-ui.css,33116
divio/django-filer,filer/locale/lt/LC_MESSAGES/django.po,32586
iocellnetworks/ndas4windows,mayfield/branches/ilguXifs/src/tools/frhed/FRHED/Afxres.h,32525
cltk/pali_text_ptr_tipitaka,js/loadxml.js,32258
cloud9ide/typescript,tests/Fidelity/test262/suite/ch07/7.6/7.6-17.js.expected,31357
conveyal/gtfs-editor,public/lib/pnotify-1.2.0/jquery.pnotify.js,31315
tapharmonic/Learning-AV-Foundation,Chapter 11/FifteenSeconds_Starter/FifteenSeconds/Images.xcassets/app_white_background.imageset/app_white_background@2x.png,29619
greghendershott/aws,aws/glacier.rkt,29045
ceph/ceph-client,drivers/i2c/busses/i2c-mv64xxx.c,27802
pokerth/pokerth,data/gfx/cards/default_800x480/0.png,27462
revdancatt/CAT422-glitch-location-viewer,locations-original-xml/GHFRK14DDU53RQQ.xml,26769
VectorBlox/risc-v,ice40ultra/hdl/top.vhd,26674
alibaba/ali_kernel,scripts/mod/mod-extract.c,25559
roberttidey/userland,interface/mmal/core/mmal_component.c,25544
ironbane/IronbaneServerLegacy,src/client/common/css/mixins.less,24469
mnagel/simple-scan,po/sd.po,21065
raspberrypi/quake3,code/server/sv_init.c,20707
MarekKowalski/LiveScan3D,include/opencv2/flann/autotuned_index.h,20607
sergeyreznik/et-engine,include/external/libpng/pngstruct.h,20408
CyanogenMod/android_kernel_motorola_msm8226,fs/xfs/xfs_itable.c,20030
AdrianDC/android_kernel_sony_msm8960t,fs/xfs/xfs_itable.c,20030
xenserver/xenadmin,XenAdmin/Dialogs/Network/CertificateChangedDialog.resx,19279
cdnjs/cdnjs,ajax/libs/browser-logos/4.0.1/archive/arora/arora_128x128.png,18623
nukeviet/nukeviet,vendor/endroid/qrcode/assets/data/qrvfr27.dat,15750
igemsoftware/SYSU-Software-2015,server/static/css/components/checkbox.css,15462
bright-things/ionic,tools/sstrip/src/sstrip.c,13963
Dolibarr/dolibarr,htdocs/societe/class/address.class.php,13870
CenterY/UIButtonEdgeInsets,images/image_bottom.png,13806
eadf/esp_mqtt_lcd,mqtt/mqtt/mqtt_msg.c,13613
richarddmorey/ConfidenceIntervalsFallacy,Rmd_files/sectionTexts/folkTheory.Rmd,12850
alesaiko/UK-PRO5,drivers/video/backlight/Kconfig,12532
vinriviere/m68k-atari-mint-gcc,libcilkrts/include/cilk/common.h,12478
luizbafilho/fusis,vendor/github.com/gin-gonic/gin/logo.jpg,12200
MAECProject/python-maec,maec/utils/merge.py,12077
28msec/zorba,src/compiler/expression/script_exprs.cpp,11322
javilonas/Lonas_KL-SM-G901F,arch/powerpc/platforms/cell/spider-pic.c,11093
qtproject/qtwebkit,Source/WebCore/platform/graphics/cairo/GraphicsContext3DCairo.cpp,10957
jonjonarnearne/smi2021,block/blk-mq-sysfs.c,10897
Piicksarn/cdnjs,ajax/libs/jquery.tablesorter/2.17.7/js/widgets/widget-columnSelector.js,10853
accord-net/accord-net.github.io,docs/html/M_Accord_Statistics_Distributions_Univariate_LognormalDistribution__ctor_2.htm,10815
infraredbg/Lenovo_A820_kernel_kk,kernel/drivers/scsi/aic7xxx/aic79xx_proc.c,10544
Sudokamikaze/XKernel-taoshan,drive
Query:
SELECT RIGHT(f."path", LENGTH(f."path") - POSITION('.' IN f."path")) AS "extension", COUNT(*) AS "count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE POSITION('.' IN f."path") > 0
    GROUP BY "extension"
    ORDER BY "count" DESC
    LIMIT 100;
Answer:
extension,count
c,60567
h,60390
png,27338
js,23158
java,19875
txt,13544
html,10637
php,9831
py,8262
json,7127
cpp,6951
xml,6350
md,5264
hpp,4812
rb,4138
svg,3987
S,3717
cs,3563
cc,3152
gif,2963
jpg,2800
m,2551
css,2443
go,1918
gitignore,1721
sh,1689
dts,1455
class,1370
csv,1288
dtsi,1197
swift,1177
po,1119
scss,1109
properties,984
scala,974
less,955
yml,953
test,925
rst,903
htm,733
ts,713
patch,684
bin,673
mp3,670
min.js,669
sublime-snippet,664
travis.yml,625
in,595
mk,570
hs,549
lua,544
sql,543
s,542
geojson,507
bmp,506
result,487
yaml,465
inc,464
conf,427
pdf,413
ll,411
9.png,400
d,394
plist,389
pm,388
dat,385
npmignore,382
ttf,376
xht,370
coffee,354
gradle,352
html.erb,346
cxx,341
pl,325
bat,321
pem,318
wav,318
am,304
groovy,302
ico,301
cfg,297
woff,283
mat,276
mo,268
min.css,264
rs,262
ini,261
as,260
mm,250
m4,245
config,243
C,230
class.php,226
csproj,224
out,218
log,214
pgm,214
eot,212
hxx,211
ppm,209
Query:
SELECT f."repo_name", f."path", c."content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    WHERE f."path" LIKE '%.py' AND c."content" NOT LIKE '%def %'
    LIMIT 100;
Answer:
repo_name,path,content
dimagi/commcare-hq,corehq/sql_proxy_accessors/migrations/0006_get_case_by_external_id.py,"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations

from corehq.sql_db.operations import RawSQLMigration

migrator = RawSQLMigration(('corehq', 'sql_proxy_accessors', 'sql_templates'), {
    'PL_PROXY_CLUSTER_NAME': settings.PL_PROXY_CLUSTER_NAME
})


class Migration(migrations.Migration):

    dependencies = [
        ('sql_proxy_accessors', '0005_rename_get_case_attachment_by_name'),
    ]

    operations = [
        migrator.get_migration('get_case_by_external_id.sql'),
    ]
"
Query:
SELECT f."repo_name", COUNT(*) AS "python_file_count"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    WHERE f."path" LIKE '%.py'
    GROUP BY f."repo_name"
    ORDER BY "python_file_count" DESC
    LIMIT 100;
Answer:
repo_name,python_file_count
anhstudios/swganh,135
mollstam/UnrealPy,90
iridium-browser/iridium-browser-ubuntu,60
JetBrains/intellij-community,54
openhatch/oh-mainline,46
bugvm/bugvm-studio,46
hortonworks/hortonworks-sandbox,38
espadrine/opera,37
cgstudiomap/cgstudiomap,37
mirror/chromium,36
cloudera/hue,33
gabrielfalcao/lettuce,32
hynnet/hiwifi-openwrt-HC5661-HC5761,29
justathoughtor2/atomicApe,29
dstockwell/chromium,27
nwjs/chromium.src,25
Samsung/ChromiumGStreamerBackend,25
Moguri/BlenderPanda,24
neeker/chromium_extract,23
IONISx/edx-platform,23
kbengine/kbengine,22
krintoxi/NoobSecToolkit,22
Microvellum/Fluid-Designer,21
harmy/kbengine,21
cnsoft/kbengine-cocos2dx,20
OCA/OpenUpgrade,20
damonkohler/sl4a,20
acatadog/kbengine,19
openfun/edx-platform,18
pymo/pymo,18
qunaibit/zippy-mirror,18
Southpaw-TACTIC/TACTIC,17
crosswalk-project/chromium-crosswalk,17
scheib/chromium,16
dimagi/commcare-hq,16
catapult-project/catapult,16
fabioz/Pydev,16
Abjad/abjad,16
frappe/erpnext,16
django-nonrel/django,15
django/django,15
openstack/nova,15
OCA/OCB,15
openmv/micropython,15
tendenci/tendenci,14
ms-iot/python,14
redhat-openstack/nova,14
gameduell/duell,14
azatoth/scons,14
qpython-android/QPython3-core,14
OsirisSPS/osiris-sps,14
3dprinteros/3dprinteros-client,14
pelya/commandergenius,14
SickRage/SickRage,13
moesy/AWS-Lambda-ML-Microservice-Skeleton,13
LumPenPacK/NetworkExtractionFromImages,13
qgis/QGIS,13
burakbayramli/kod,13
getsentry/sentry,13
daoluan/decode-Django,13
edx/edx-platform,13
snakeleon/YouCompleteMe-x64,13
CivicTechTO/open-cabinet,12
drawquest/drawquest-web,12
vlegoff/tsunami,12
golismero/golismero,12
deanhiller/databus,12
twitter/pants,12
odoo/odoo,12
hlzz/dotfiles,12
orangeduck/PyAutoC,12
pyfa-org/Pyfa,12
FFMG/myoddweb.piger,12
Stanford-Online/edx-platform,11
VisTrails/VisTrails,11
XX-net/XX-Net,11
goldeneye-source/ges-code,11
SciTools/iris,11
Jenyay/outwiker,11
kuri65536/python-for-android,11
Azure/azure-sdk-for-python,11
duducosmos/pgs4a,11
kovidgoyal/calibre,11
DarkFenX/Pyfa,11
loopCM/chromium,11
bq/bitbloq-offline,10
ChromiumWebApps/chromium,10
NeuralEnsemble/neuroConstruct,10
googleads/googleads-python-lib,10
google/ggrc-core,10
divio/django,10
GoogleChrome/big-rig,10
aliyun/oss-ftp,10
CubicERP/odoo,10
sametmax/Django--an-app-at-a-time,10
pantsbuild/pants,10
luci/luci-py,10
bruderstein/PythonScript,10
openstack/heat,10
openstack/tempest,10
Query:
SELECT "content"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    LIMIT 100;
Answer:
Too long, hard cut:
content
"/*
 * rtc-ds1305.c -- driver for DS1305 and DS1306 SPI RTC chips
 *
 * Copyright (C) 2008 David Brownell
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/bcd.h>
#include <linux/slab.h>
#include <linux/rtc.h>
#include <linux/workqueue.h>

#include <linux/spi/spi.h>
#include <linux/spi/ds1305.h>
#include <linux/module.h>


/*
 * Registers ... mask DS1305_WRITE into register address to write,
 * otherwise you're reading it.  All non-bitmask values are BCD.
 */
#define DS1305_WRITE		0x80


/* RTC date/time ... the main special cases are that we:
 *  - Need fancy ""hours"" encoding in 12hour mode
 *  - Don't rely on the ""day-of-week"" field (or tm_wday)
 *  - Are a 21st-century clock (2000 <= year < 2100)
 */
#define DS1305_RTC_LEN		7		/* bytes for RTC regs */

#define DS1305_SEC		0x00		/* register addresses */
#define DS1305_MIN		0x01
#define DS1305_HOUR		0x02
#	define DS1305_HR_12		0x40	/* set == 12 hr mode */
#	define DS1305_HR_PM		0x20	/* set == PM (12hr mode) */
#define DS1305_WDAY		0x03
#define DS1305_MDAY		0x04
#define DS1305_MON		0x05
#define DS1305_YEAR		0x06


/* The two alarms have only sec/min/hour/wday fields (ALM_LEN).
 * DS1305_ALM_DISABLE disables a match field (some combos are bad).
 *
 * NOTE that since we don't use WDAY, we limit ourselves to alarms
 * only one day into the future (vs potentially up to a week).
 *
 * NOTE ALSO that while we could generate once-a-second IRQs (UIE), we
 * don't currently support them.  We'd either need to do it only when
 * no alarm is pending (not the standard model), or to use the second
 * alarm (implying that this is a DS1305 not DS1306, *and* that either
 * it's wired up a second IRQ we know, or that INTCN is set)
 */
#define DS1305_ALM_LEN		4		/* bytes for ALM regs */
#define DS1305_ALM_DISABLE	0x80

#define DS1305_ALM0(r)		(0x07 + (r))	/* register addresses */
#define DS1305_ALM1(r)		(0x0b + (r))


/* three control registers */
#define DS1305_CONTROL_LEN	3		/* bytes of control regs */

#define DS1305_CONTROL		0x0f		/* register addresses */
#	define DS1305_nEOSC		0x80	/* low enables oscillator */
#	define DS1305_WP		0x40	/* write protect */
#	define DS1305_INTCN		0x04	/* clear == only int0 used */
#	define DS1306_1HZ		0x04	/* enable 1Hz output */
#	define DS1305_AEI1		0x02	/* enable ALM1 IRQ */
#	define DS1305_AEI0		0x01	/* enable ALM0 IRQ */
#define DS1305_STATUS		0x10
/* status has just AEIx bits, mirrored as IRQFx */
#define DS1305_TRICKLE		0x11
/* trickle bits are defined in <linux/spi/ds1305.h> */

/* a bunch of NVRAM */
#define DS1305_NVRAM_LEN	96		/* bytes of NVRAM */

#define DS1305_NVRAM		0x20		/* register addresses */


struct ds1305 {
	struct spi_device	*spi;
	struct rtc_device	*rtc;

	struct work_struct	work;

	unsigned long		flags;
#define FLAG_EXITING	0

	bool			hr12;
	u8			ctrl[DS1305_CONTROL_LEN];
};


/*----------------------------------------------------------------------*/

/*
 * Utilities ...  tolerate 12-hour AM/PM notation in case of non-Linux
 * software (like a bootloader) which may require it.
 */

static unsigned bcd2hour(u8 bcd)
{
	if (bcd & DS1305_HR_12) {
		unsigned	hour = 0;

		bcd &= ~DS1305_HR_12;
		if (bcd & DS1305_HR_PM) {
			hour = 12;
			bcd &= ~DS1305_HR_PM;
		}
		hour += bcd2bin(bcd);
		return hour - 1;
	}
	return bcd2bin(bcd);
}

static u8 hour2bcd(bool hr12, int hour)
{
	if (hr12) {
		hour++;
		if (hour <= 12)
			return DS1305_HR_12 | bin2bcd(hour);
		hour -= 12;
		return DS1305_HR_12 | DS1305_HR_PM | bin2bcd(hour);
	}
	return bin2bcd(hour);
}

/*----------------------------------------------------------------------*/

/*
 * Interface to RTC framework
 */

static int ds1305_alarm_irq_enable(struct device *dev, unsigned int enabled)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		buf[2];
	long		err = -EINVAL;

	buf[0] = DS1305_WRITE | DS1305_CONTROL;
	buf[1] = ds1305->ctrl[0];

	if (enabled) {
		if (ds1305->ctrl[0] & DS1305_AEI0)
			goto done;
		buf[1] |= DS1305_AEI0;
	} else {
		if (!(buf[1] & DS1305_AEI0))
			goto done;
		buf[1] &= ~DS1305_AEI0;
	}
	err = spi_write_then_read(ds1305->spi, buf, sizeof(buf), NULL, 0);
	if (err >= 0)
		ds1305->ctrl[0] = buf[1];
done:
	return err;

}


/*
 * Get/set of date and time is pretty normal.
 */

static int ds1305_get_time(struct device *dev, struct rtc_time *time)
{
	struct ds1305	*ds1305 = dev_get_drvdata(dev);
	u8		addr = DS1305_SEC;
	u8		buf[DS1305_RTC_LEN];
	int		status;

	/* Use write-then-read to get all the date/time registers
	 * since dma from stack is nonportable
	 */
	status = spi_write_then_read(ds1305->spi, &addr, sizeof(addr),
			buf, sizeof(buf));
	if (status < 0)
		return status;

	dev_vdbg(dev, ""%s: %02x %02x %02x, %02x %02x %02x %02x\n"",
		""read"", buf[0], buf[1], buf[2], buf[3],
		buf[4], buf[5], buf[6]);

	/* Decode the registers
Query:
SELECT "id", "size", "binary"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS"
    WHERE "binary" = TRUE
    LIMIT 100;
Answer:
Too long, hard cut:
id,size,binary
b01f05a2533b4fbfc58b4f0987e99211afdc9678,26140,True
36c3cb88b2600d57a0484870c77c9a042fca65b6,60275,True
49e8b3cc4bbd045ece3be6a7a1a88ba2d3f98c25,375894,True
aee56a5244cdb5347ddaf6e5b9b5cb2b3b3413df,462,True
5b44552b01e50999628379b03a82016ffbd07593,245,True
e439364c40636355e662494a3187be65149a1991,593,True
5cc52e0c689de8276d764c4aa4d321fcc5259c58,103428,True
262f173567a0b09e46e75e26347f3c61cb0dfec1,10089,True
97056c8750012f2989fe08037cd5437f788addc2,63092,True
d1d56b099b4e504ef6bb8d30b795546b90c63ffe,13213,True
770ecc05b2cdb39424ab470124567df9f61bf538,32667,True
0c409302fd94bb0376d69514727d9f99a3d38308,456,True
782345c1f64b8eedb17819d50429b31d3f89683a,1016,True
63c7dc999c9f631e8816277d7a27da6830b018ea,43755,True
bcb5cebfe5449b1e9442195f4d156b435dd14393,596,True
f97c7deda2239fff5d64feca40b889aab42915ad,873,True
b724c1a08265b122ff801a32707471b97f3c6657,4769,True
92f08d759148cad3f2c9cad346243ad489df36ef,227073,True
c9ba5d1037faf5b70ed8762b9dcb963d98661c71,406,True
4ec22cd703c5d4c6dd89d5a1804bdf966ea7e9b4,31184,True
e808b62ba7e1c251d41b02d3c9d3a52b0fd5723b,8111,True
b3d7e24d2d9871a13d106034e10679406ddbceab,1187,True
73dc91593cd5f807c0b921f206da55f365ee21a6,32550,True
08772bde5ed1d54a7d6269a8620edb79b354c3ec,262,True
c4fdbce4cd89c91d0df6fc817d8ab68741ecf60d,658,True
a8b9bb351f90d94e8329c846e3d9485f370df8d6,49220,True
938b9ac556c2099e38f377e7c78d6525fb29d7bb,2840,True
9fa74a5a7a2a5c66a175c4a1d29c9316c6fd732f,16514,True
5e014d23a17ef00003e28d4012e4cc7b85f57f0a,491,True
5473b98409381d151816244260669f65c274ae5f,431486,True
9871d48c35b2a1e69cd6fbb6597d27c6a25006f8,363,True
3f943a2e7cf91acf55304e2ecfee103b8a6b6faa,2768,True
2be451caea976c5c74fc1bc4c8244fd27f8b1280,11227,True
24c4d3616024cb9074999b64fedfe426f84b8b50,1078,True
2c4f0ac6cb68ce726853f18d6bf664b6be3329a7,6852,True
45cce49927c9e03a2ce19f23b4195ec8614a7690,1486,True
2b77ae6c51afad92900d27e4fd6fe0be95b36664,689972,True
366dc692c6ad3800bcd211971482cd6b71f94d0e,996,True
aa7d471ab376f5ae1639955fe49d690021b39543,10089,True
3ee0aa7b92dab58a6efd536107e76e51647e72dd,272,True
2fb7b3eb70d73c2440c61d0fec12c37006ebfbe4,92,True
187e713d9fa9a1b3303e01f590632105afdd11e5,35461,True
8e7c8ed850befce4a258e8420a2914269bb95bdc,5773,True
97dfcecdcb31874021d9c00a14b2b8fbe6a00d42,1201,True
ee468e5498efde679dd2dc62ef3e4c25f77691e0,1017442,True
3dcbada06735951bc61989bc7464e19b698c4ab4,292,True
f89f21801f6ae9e2063dd4f7b458ea3fff41e74e,1998,True
a83e214c6fcb6315d27430de47bfac12b449d94a,1773,True
300de11ee27a54c5b7fa14873ce96b8cb774a1f6,317,True
9302fcf82a9aea24f5873964fcea5953ee34d3aa,1732,True
103d707d3c92a1a2b116552236bd862db1a1125a,3761,True
1dc52c86cdc1d3bf9aca59a94d05199da153935e,342,True
0eeb036a078ac4cd4ed1f02a81d6a6f02cf54df6,210,True
279240ff3b590f190cfc16549ea578971466f45d,481,True
6ce46658720ec3038fda15d787dff28c372909a0,469577,True
5bc002e5041a2b40cf8e20de5908770d7da662fb,973,True
b421d07a8055c27ffde4c0ac411e0179ff6871a6,1190,True
83860e150299b5d9db6b8c350a023424b0d755ba,3575,True
c02cc7ab6ba5d0ba8c04a4add242e74b98fd45a3,1481,True
f73ca1c65f38e0efe4cf12e1b25ea81ea483fac9,18564,True
18cc2a4e901630851138749984a2da9ea5e47e05,33575,True
13df1943443ec6b2f986fd20e9ed96b09dc4139c,24118,True
e6b98d5867c5edd8428e3101f3d9e1abd9401542,59392,True
d091e18c9d1d5c64d4d6977365abfa071a847f8c,72839,True
2fe1995880848ddb74560ddab1feae39bcec71e1,33482,True
43e85e02d19f2193d41fca745064fa4839dfa053,2731,True
d951b5b5b4b4cc9fdb24c36cae254f9fa0794631,878,True
0d89cf5245137ac430ef4a486065acc479e8be5d,466,True
c6ac8420b2d680932b48cdebebaaf55d89986735,823,True
b9e8b3e3054f815519b39fb4664c04adf8b50660,59727,True
56f62e3d89a6d5d8fc29a22e2ebf840687068fed,10689,True
d6276bfe2a54615fc06f25e84081b95b46d761ad,13492,True
2e2fee41a8cdeec637248ccf564409cadfb78c5f,1548,True
4b56ece499e3790e2e9278db9bfbd66abee1d552,45471,True
72ea52c5a5eeb1bbf056e65db3ba4fa12378d09f,33464,True
95350c7c4f96b5e6be9cdd06a2f681ea50f3a206,14605,True
356afb1e5074826ff92f8a5bb0c1d988ed823a31,4288,True
466dac0e1a70ebb37d5ae077d15a17a4ab85687a,16125,True
c101b84fc4bdf2b0f5d3dc257264cc4d3ff100d0,26778,True
39d325fd8e3ec36d67465df9bc06dc75665ec544,738,True
016a27cdb9794b2d14d19a3542983984d8af1a6c,36387,True
f514522dc193964bfb8faeb88c76e09b102ba41c,32496,True
99b320765b8059a94760131aa7fa1040ca65c461,58599,True
5fd5c1187d9b6b45eef388cfe562ebf512831a5d,1720,True
4fc34f17f1c8debb8d3d2f4bd47d4ac281e7159e,1448,True
ceed70cf9452c8301fb27611a05933a665b08a0e,1624,True
cd041d3243d20f3d4a8cdbef43e25f8222db615e,50388,True
c6be282464a890bd024289508ca457a809db5e81,23754,True
814ada1c1eda3bc490848a49f013759f48470f48,45754,True
d5c178be697a5dd8edfce96db4e0ff98a4ae2ee2,699192,True
67c981b77bfe643e0a664f9179f84e28971e347e,6148,True
f7ff75ea593f6300f4ba3d488f50b6c0dcbf5621,263,True
51f5fb742136850f2ad2ebad70a3ef1748178b6f,1042,True
e30c39995034c6749d89ec2ea723d73c35869cf1,147456,True
0928a9c76e1926b295922413d39658e8f45ab452,1378,True
f0620274b417f4b11564e2e5f530139e0f06cdb8,9723,True
0ad8376107f9e0125c2b96cd29b8ecdd09dddeda,1166,True
aaa80219f1d
End Exploring Related Columns
Task: Using the 2017 GitHub Archive data for watch events, which three repositories that include at least one Python file (with a .py extension) smaller than 15,000 bytes and containing the substring "def " in its content have the highest total number of watch events for that year?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
repo_name,watch_count
repo_name1:str,watch_count1:int
repo_name2:str,watch_count2:int
repo_name3:str,watch_count3:int
(Attention: answer in three rows)
```

These are the top three repositories that include at least one Python file smaller than 15,000 bytes and containing 'def ' in its content, ranked by their total number of watch events in 2017..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 18:31:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:31:00 - root - INFO - ```sql
SELECT r."repo_name", r."watch_count"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS" r
WHERE r."repo_name" IN (
    SELECT DISTINCT f."repo_name"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    WHERE f."path" LIKE '%.py' AND c."size" < 15000 AND c."content" LIKE '%def %'
)
ORDER BY r."watch_count" DESC NULLS LAST
LIMIT 3;
```

```csv
repo_name,watch_count
google/rekall,watch_count1:int
MAECProject/python-maec,watch_count2:int
dieseldev/diesel,watch_count3:int
(Attention: answer in three rows)
```
2025-02-12 18:31:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:31:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:31:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:31:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:31:02 - snowflake.connector.connection - INFO - closed
2025-02-12 18:31:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:31:02 - root - INFO - itercount: 1
2025-02-12 18:31:02 - root - INFO - 0
2025-02-12 18:31:02 - root - INFO - results: 
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2


2025-02-12 18:31:02 - root - INFO - Please check the answer again by reviewing Using the 2017 GitHub Archive data for watch events, which three repositories that include at least one Python file (with a .py extension) smaller than 15,000 bytes and containing the substring "def " in its content have the highest total number of watch events for that year?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
repo_name,watch_count
repo_name1:str,watch_count1:int
repo_name2:str,watch_count2:int
repo_name3:str,watch_count3:int
(Attention: answer in three rows)
```

These are the top three repositories that include at least one Python file smaller than 15,000 bytes and containing 'def ' in its content, ranked by their total number of watch events in 2017. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2
Current sql:
SELECT r."repo_name", r."watch_count"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS" r
WHERE r."repo_name" IN (
    SELECT DISTINCT f."repo_name"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    WHERE f."path" LIKE '%.py' AND c."size" < 15000 AND c."content" LIKE '%def %'
)
ORDER BY r."watch_count" DESC NULLS LAST
LIMIT 3;
2025-02-12 18:31:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 18:31:25 - root - INFO - ```sql
SELECT r."repo_name", r."watch_count"
FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_REPOS" r
WHERE r."repo_name" IN (
    SELECT DISTINCT f."repo_name"
    FROM "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_FILES" f
    JOIN "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" c ON f."id" = c."id"
    WHERE f."path" LIKE '%.py' AND c."size" < 15000 AND c."content" LIKE '%def %'
)
ORDER BY r."watch_count" DESC NULLS LAST
LIMIT 3;
```

```csv
repo_name,watch_count
google/rekall,129
dieseldev/diesel,26
MAECProject/python-maec,2
```
2025-02-12 18:31:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 18:31:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 18:31:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 18:31:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-02-12 18:31:26 - snowflake.connector.connection - INFO - closed
2025-02-12 18:31:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 18:31:27 - root - INFO - itercount: 2
2025-02-12 18:31:27 - root - INFO - 0
2025-02-12 18:31:28 - root - INFO - Total iteration counts: 2
