2025-02-12 20:22:55 - openai._base_client - INFO - Retrying request to /chat/completions in 0.395555 seconds
2025-02-12 20:23:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:23:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:23:37 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:38 - root - INFO - SQL:
SELECT "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   LIMIT 100;
Results:
Too long, hard cut:
sample_path
drivers/rtc/rtc-ds1305.c
files/core-js/0.9.12/library.min.js
twmap_gen/lib/adodb5/perf/perf-db2.inc.php
drivers/devfreq/governor_simpleondemand.c
book/_themes/pydoctheme/static/pydoctheme.css
src/main/java/io/mycat/manager/response/ShowSQLSumUser.java
src/main/java/com/whammich/sstow/compat/hardmode/HandlerHardMode.java
src/main/java/flaxbeard/steamcraft/item/ItemSteamcraftNugget.java
src/router/tests/test_uri.cc
plugins/User/src/Notification/Message/PasswordRequestMessage.php
plugins/BackendTheme/src/Template/Element/settings.ctp
plg_midi_device/src/SConscript
vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/_files/.DS_Store
FAQ-USER
ProcessHacker/pcre/pcre2_config.c
document/static/js/es6_modules/exporter/epub.js
platform-api-client-gwt/che-core-client-gwt-runner/src/main/java/org/eclipse/che/api/runner/gwt/client/utils/RunnerUtils.java
framework/src/java/org/apache/tapestry/form/validator/MaxLength.java
framework/src/documentation/content/xdocs/tapestry/ComponentReference/ActionLink.xml
commonjs/google-map/map.js
tapestry-core/src/test/java/org/apache/tapestry5/internal/services/RequestPathOptimizerImplTest.java
tapestry-core/src/test/java/org/apache/tapestry5/ContentTypeTest.java
vio/vio.c
product_taxes_group/tests/test_product_taxes_group.py
mozaik_portal/static/src/js/portal.js
mozaik_email/wizard/allow_duplicate_view.xml
rtmpdump.c
tests/benchmarks/benchmarks.pro
src/webengine/api/qquickwebengineprofile.cpp
trunk/Documentation/KamanjaAPIDocs/com/ligadata/InputOutputAdapterInfo/CountersAdapter.html
src/backend/test/main.cpp
src/Ractive/prototype/fire.js
build/cmd/hilo/loader/ImageLoader.js
temp/com.tecnalia.ossmeter.model/src/com/tecnalia/ossmeter/model/eclipseproject/EclipseprojectFactory.java
assets/variants/light/buttons/button_reverse.png
docs/api-en/symbols/BitmapText.html
assets/css/sass/admin/_posts.scss
web/files/css/desktop/windows/inv_search_window.css
Server/src/org/openas2/message/DataHistory.java
Modules/BetterCms.Module.Root/Commands/Tag/SaveTag/SaveTagCommand.cs
test/less/stylesheet/compress.less3.selectors.part2.test24.c.json
README.md
arch/arm/mach-tegra/board-cardhu-panel.c
lib/entities/plants/peatbog.dart
src/filesystem/ZWorkerPool.h
userspace/libsinsp/filterchecks.h
third-party/org.carrot2.api/javadoc/org/carrot2/text/preprocessing/CaseNormalizerDescriptor.Keys.html
src/systeminfo/qnetworkinfo.h
docdoku-server/docdoku-server-web/src/main/java/com/docdoku/server/rest/AdminResource.java
icons/file_type_source@3x.png
sample/test-elements/callbacks.html
assets/apple-touch-icon.acorn
tests/quicktestbrowser/ApplicationRoot.qml
trunk/Documentation/KamanjaAPIDocs/com/ligadata/kamanja/metadata/ModelDef.html
build/changelog/entries/2015/10/10337.enhancement
newsfeed/migrations/0004_auto__chg_field_featuredsection_image.py
README.md
source/ed/ed_reader.h
samples/bunnymark/Main.hx
client/components/characters/charactersAdd.html
ulauncher/search/file_browser/FileBrowserMode.py
core/lib/dr_config.h
core/kernel_linux/clients/umbra/memcheck.h
src/server/game/DungeonFinding/LFGQueue.cpp
src/main/java/net/blay09/mods/cookingforblockheads/CookingConfig.java
symposion/static/img/stripe.png
ME3Explorer/Resources/property_database_64x64.png
src/administrator/components/com_kunena/controllers/plugins.php
View/Factory/Html/Objects/HtmlStrong.php
module/plugins/crypter/UploadableChFolder.py
src/3rdparty/Relinq-1.15.15.0/SharedSource/Core/ReSharperAnnotations/PublicAPIAttribute.cs
src/clustering/administration/main/directory_lock.cc
src/maidsafe/routing/async_queue.h
src/3rdparty/Relinq-1.15.15.0/Relinq/Core/Parsing/ExpressionTreeVisitors/TreeEvaluation/EvaluatableTreeFindingExpressionTreeVisitor.cs
mm/ktsan/ktsan.c
sbt/src/sbt-test/dependency-management/publish-local/changes/RetrieveTest.sbt
build.xml
src/main/resources/assets/titanite/textures/items/tansanitePearl.png
src/commands/CmdInfo.cpp
www/lib/HTML/QuickForm/date.php
doc/fr/installation/index.rst
doc/stdlibref/stable-partition.html
ModelItems/InstModelItem.cpp
Documentation/DocuBlocks/foxxQueuesPollInterval.md
module/EcampCore/src/EcampCore/Fieldset/User/UserCreateFieldset.php
resources/public/android-chrome-48x48.png
Documentation/Books/Manual/Administration/Upgrading/Upgrading30.mdpp
plugins/org.jkiss.dbeaver.ext.db2/src/org/jkiss/dbeaver/ext/db2/model/dict/DB2TablespaceType.java
examples/react-in-blaze/packages/npm-container/.npm/package/npm-shrinkwrap.json
src/github.com/getlantern/lantern-mobile/app/src/main/res/values-et/strings.xml
Documentation/Examples/generalGraphModulePaths2.generated
server/templates/emailTemplate.handlebars
Yupi.Messages/Handlers/Groups/RemoveGroupAdminMessageEvent.cs
server/src/main/java/com/vaadin/ui/Upload.java
WARZONE_ASSETS/models/Weapons/DC-15A_Rifle/model.glm
WARZONE_ASSETS/sound/tts/dimitrissad22k/A280 Clone Blaster.mp3
WARZONE_ASSETS/sound/tts/harry22k/E-11 Blaster Rifle.mp3
WARZONE_ASSETS/sound/tts/andreas22k/Westarm 5 Blaster.mp3
WARZONE_ASSETS/sound/tts/willbadguy22k/hmmm. 

2025-02-12 20:23:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:23:39 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:40 - root - INFO - SQL:
SELECT DISTINCT "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Results:
Too long, hard cut:
sample_path
libjava/javax/naming/spi/NamingManager.java
lionengine-network/src/main/java/com/b3dgs/lionengine/network/Networker.java
lionengine-core/src/main/java/com/b3dgs/lionengine/drawable/Image.java
Product/Production/Services/PatientDiscoveryCore/src/main/java/gov/hhs/fha/nhinc/patientdiscovery/model/builder/impl/PatientSearchResultsModelBuilderImpl.java
mapfishapp/src/main/java/org/georchestra/mapfishapp/ws/upload/FeatureGeoFileReader.java
src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java
core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/DefaultMetadataTest.java
whois-endtoend/src/test/java/net/ripe/db/whois/changedphase3/util/Scenario.java
xxl-job-admin/src/main/java/com/xxl/job/admin/core/jobbean/impl/DemoConcurrentJobBean.java
common/java/core/net/i2p/client/naming/ExecNamingService.java
clients/java/src/main/java/com/senseidb/search/client/req/SenseiClientRequest.java
dbunit/src/main/java/org/jboss/arquillian/persistence/dbunit/filter/OracleDatabaseSequenceFilter.java
app-starters-test-support/src/main/java/org/springframework/cloud/stream/app/test/sftp/SftpSinkTestConfiguration.java
src/com/vonglasow/michael/satstat/widgets/NetworkTypePreference.java
main/recognition/test/boofcv/alg/tracker/tld/TestTldFernDescription.java
brouter-routing-app/src/main/java/btools/routingapp/BRouterService.java
jtransc-asm/src/com/jtransc/org/objectweb/asm/util/CheckMethodAdapter.java
fuzzytesting/fuzzytestMixedJavaJess/QuitDialog.java
lib/server-core-ext/src/test/java/org/apache/olingo/server/core/ServiceDispatcherTest.java
Original Files/source/src/com/google/zxing/pdf417/decoder/b.java
redux-java-devtools-ui-android/src/main/java/com/redux/DevToolPresenter.java
org.eclipse.ice.io/src/org/eclipse/ice/io/serializable/IWriter.java
src/main/java/HelloWorldWindow.java
XACML/src/com/att/research/xacml/api/Advice.java
optaplanner-core/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java
modules/dfp_appengine/src/main/java/com/google/api/ads/dfp/jaxws/v201511/ServerError.java
projects/copper-coreengine/src/main/java/org/copperengine/core/tranzient/TransientProcessorPool.java
examples/Math-issue-309/src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java
hybrid/src/main/java/jetbrains/jetpad/hybrid/TokenCompletion.java
src/main/java/com/baidu/unbiz/common/apache/package-info.java
examples/java/ghost_imports/Main_missing_predicate_include.java
src/java/org/antlr/intellij/plugin/ANTLRv4ExternalAnnotator.java
source/src/com/espertech/esper/event/map/MapEntryPropertyGetter.java
commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/transform/requests/RegisterDocumentSetTransformer.java
TeaLeaf/src/com/tealeaf/event/OverlayEvent.java
newbee/src/androidTest/java/com/workingchat/newbee/ApplicationTest.java
kurento-jsonrpc/kurento-jsonrpc-server/src/main/java/org/kurento/jsonrpc/internal/server/NativeSessionHandler.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumerDescription.java
zanata-war/src/main/java/org/zanata/security/CheckPermissionDecisionVoter.java
src/java/javax/jain/ss7/inap/operation/HoldCallInNetwork.java
src/main/java/com/braintreegateway/exceptions/InvalidSignatureException.java
modules/dfp_appengine/src/main/java/com/google/api/ads/dfp/jaxws/v201602/ReconciliationReportServiceInterfaceupdateReconciliationReportsResponse.java
umlet-elements/src/main/java/com/baselet/control/basics/SortedMergedLine1DList.java
src/main/java/org/edumips64/core/is/ALUInstructions.java
src/cn/edu/gdut/zaoying/Option/series/bar/itemStyle/emphasis/ShadowOffsetXNumber.java
src/main/java/gg/uhc/uhc/modules/timer/messages/TimerMessage.java
hypersocket-core/src/main/java/com/hypersocket/transactions/TransactionService.java
main/source/org/apach3/commons/io/input/ClosedInputStream.java
graal/com.oracle.graal.phases/src/com/oracle/graal/phases/verify/VerifyVirtualizableUsage.java
hapi-fhir-base/src/main/java/ca/uhn/fhir/rest/param/UriOrListParam.java
ttt-ttv/src/main/java/com/skynav/ttv/verifier/ttml/style/RubyOffsetVerifier.java
kieker-tools/src/kieker/tools/traceAnalysis/TraceAnalysisGUI.java
spring-social-github/src/main/java/org/springframework/social/github/api/impl/json/package-info.java
wint-framework/src/main/java/wint/lang/exceptions/MagicException.java
library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerController.java
jbosen/src/main/java/org/petuum/jbosen/row/double_/SparseDoubleRowUpdate.java
src/main/java/org/threadly/concurrent/future/AbstractFutureCallbackFailureHandler.java
src/main/java/org/sigmah/offline/dao/CountryAsyncDAO.java
modules/dfp_appengine/src/main/java/com/google/api/ads/dfp/jaxws/v201511/PricingModel.java
jplag.webServiceClientTutorial/src/main/java/jplagTutorial/util/wscompileSSLLauncher.java
src/org/griphyn/vdl/compiler/intermediate/ISwitch.java
commands/src/main/java/org/wildfly/extras/creaper/commands/security/realms/AddLdapAuthentication.java
src/java/javax/ja

2025-02-12 20:23:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 16
2025-02-12 20:23:42 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:43 - root - INFO - SQL:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Results:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti

2025-02-12 20:23:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 16
2025-02-12 20:23:45 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:46 - root - INFO - SQL:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import %'
   LIMIT 100;
Results:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti

2025-02-12 20:23:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:23:47 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:47 - root - INFO - SQL:
SELECT DISTINCT "sample_repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Results:
sample_repo_name
BurstProject/burstcoin
DF1E/SimpleExplorer
apache/archiva
mplushnikov/lombok-intellij-plugin
l1j/en
biojava/biojava
bugvm/bugvm-studio
zogwei/zeus3
jboss-modules/jboss-modules
Pushjet/Pushjet-Android
apache/flex-sdk
apache/hadoop-mapreduce
nifty-gui/nifty-gui
DaiDongLiang/DSC
arcusys/Valamis
espadrine/opera
yescallop/Nukkit
cloudcoderdotorg/CloudCoder
tokee/lucene
consulo/consulo
hopshadoop/hops
LibreOffice/core
IntersectAustralia/faims-android
crate/crate
IDPF/epubcheck
openjdk-mirror/jdk7u-jdk
MailCore/mailcore2
spring-projects/spring-boot
caelum/mamute
box/box-android-sdk
lumifyio/lumify
openstack-infra/gerrit
facebook/pfff
aptana/studio3
bitstars/droidar
twitterdev/cannonball-android
apache/jackrabbit
hernad/easyrec
pentaho/big-data-plugin
checkstyle/checkstyle
couchbase/spymemcached
dotCMS/core
GoClipse/goclipse
bitstadium/HockeyKit
velo/flexmojos
SnappyDataInc/snappy-store
b3dgs/lionengine
CONNECT-Solution/CONNECT
apache/qpid-java
apache/uima-uimaj
apache/sis
pplante/droidtowers
oehf/ipf
JHUAPL/AccumuloGraph
apache/sqoop
ImmobilienScout24/yum-repo-server
bglimm/owlwg-test
mvglasow/satstat
joeywen/fudannlp
GoMint/GoMint
trylimits/Eclipse-Postfix-Code-Completion
zanata/zanata-server
abrensch/brouter
jtransc/jtransc
rorchard/FuzzyJ
jenkinsci/github-integration-plugin
michel-kraemer/citeproc-java
facebook/infer
eclipse/ice
stackmagic/bitly-api-client
umlet/umlet
droolsjbpm/optaplanner
rubenlagus/TelegramBots
SpoonLabs/astor
wikimedia/apps-android-wikipedia
amaembo/streamex
ezScrum/ezScrum
Eluinhost/UHC
ludup/hypersocket-framework
graphhopper/jsprit
unidal/cat2
jamesagnew/hapi-fhir
NTNAEEM/hottentot
wu560130911/MultimediaDesktop
spring-projects/spring-social-github
JetBrains/jetpad-projectional
MeasureAuthoringTool/MeasureAuthoringTool_LatestSprint
apache/olingo-odata4
neo4j-contrib/neo4j-mobile-android
glenrobson/SimpleAnnotationServer
att/XACML
copper-engine/copper-engine
aws/aws-sdk-java
mybatis/ibatis-2
petuum/jbosen
ClearTK/cleartk
cloudkeeper-project/cloudkeeper
itaipubinacional/geocab
msdx/androidkit
Esteemed-Innovation/Flaxbeards-Steam-Power

2025-02-12 20:23:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-02-12 20:23:48 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:49 - root - INFO - SQL:
SELECT COUNT(*) AS "JavaFileCount"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java';
Results:
JavaFileCount
2142

2025-02-12 20:23:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:23:50 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:51 - root - INFO - SQL:
SELECT "sample_repo_name", "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Results:
Too long, hard cut:
sample_repo_name,sample_path
velo/flexmojos,flexmojos-testing/flexmojos-test-harness/src/test/java/net/flexmojos/oss/tests/concept/AttachAsdocTest.java
SnappyDataInc/snappy-store,gemfirexd/client/src/main/java/io/snappydata/thrift/internal/ClientParameterMetaData.java
myri/lanai-gcc,libjava/javax/naming/spi/NamingManager.java
b3dgs/lionengine,lionengine-network/src/main/java/com/b3dgs/lionengine/network/Networker.java
b3dgs/lionengine,lionengine-core/src/main/java/com/b3dgs/lionengine/drawable/Image.java
tokee/lucene,src/test/org/apache/lucene/analysis/TestCachingTokenFilter.java
CONNECT-Solution/CONNECT,Product/Production/Common/CONNECTCoreLib/src/main/java/gov/hhs/fha/nhinc/orchestration/NhinAggregator.java
CONNECT-Solution/CONNECT,Product/Production/Services/PatientDiscoveryCore/src/main/java/gov/hhs/fha/nhinc/patientdiscovery/model/builder/impl/PatientSearchResultsModelBuilderImpl.java
CONNECT-Solution/CONNECT,Product/Production/Common/CONNECTCoreLib/src/main/java/gov/hhs/fha/nhinc/messaging/client/CONNECTCXFClientFactory.java
kaitoy/pcap4j,pcap4j-core/src/main/java/org/pcap4j/core/NativePacketDllMappings.java
apache/tapestry4,framework/src/java/org/apache/tapestry/coerce/BooleanArrayToIteratorConverter.java
georchestra/georchestra,mapfishapp/src/main/java/org/georchestra/mapfishapp/ws/upload/FeatureGeoFileReader.java
apache/sqoop,src/test/org/apache/sqoop/hcat/HCatalogImportTest.java
apache/velocity-tools,velocity-tools-generic/src/test/java/org/apache/velocity/tools/generic/DateToolTests.java
apache/qpid-java,jca/src/main/java/org/apache/qpid/ra/tm/WLSTransactionManagerLocator.java
Stratio/cassandra,src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java
apache/uima-uimaj,uimaj-json/src/main/java/org/apache/uima/json/impl/MetaDataObjectSerializer_json.java
apache/sis,core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/DefaultMetadataTest.java
apache/uima-uimaj,uimaj-core/src/main/java/org/apache/uima/collection/CasConsumerDescription.java
fjfd/microscope,microscope-collector/src/test/java/com/lmax/disruptor/sequenced/OneToThreePipelineSequencedThroughputTest.java
jenskastensson/openhab,bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveWakeUpCommandClass.java
senseidb/sensei,clients/java/src/main/java/com/senseidb/search/client/req/SenseiClientRequest.java
p455w0rd/WirelessCraftingTerminal,src/java/net/p455w0rd/wirelesscraftingterminal/core/sync/packets/PacketSetMagnet.java
ImmobilienScout24/yum-repo-server,src/test/java/de/is24/infrastructure/gridfs/http/web/controller/StatusControllerWithInactiveDatabaseIT.java
RIPE-NCC/whois,whois-endtoend/src/test/java/net/ripe/db/whois/changedphase3/util/Scenario.java
pplante/droidtowers,main/source/org/apach3/http/nio/NHttpServerEventHandler.java
oehf/ipf,commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/ebxml/EbXMLRetrieveDocumentSetRequest.java
xuxueli/xxl-job,xxl-job-admin/src/main/java/com/xxl/job/admin/core/jobbean/impl/DemoConcurrentJobBean.java
JHUAPL/AccumuloGraph,src/test/java/edu/jhuapl/tinkerpop/mapreduce/InputFormatsTest.java
JeffLi1993/java-core-learning-example,src/org/javacore/nio/FileChannelTransferTo.java
oakes/Nightweb,common/java/core/net/i2p/client/naming/ExecNamingService.java
airbnb/kafka-statsd-metrics2,src/main/java/com/airbnb/metrics/ParserForNoTag.java
apache/derby,java/engine/org/apache/derby/iapi/store/access/BinaryOrderable.java
baoti/Pioneer,app/src/main/java/com/github/baoti/pioneer/ui/news/list/INewsListView.java
BurstProject/burstcoin,src/java/nxt/http/GetDGSGood.java
forcedotcom/aura,aura/src/test/java/org/auraframework/test/util/AdaptiveWebElement.java
Netflix/astyanax,astyanax-core/src/main/java/com/netflix/astyanax/connectionpool/exceptions/InterruptedOperationException.java
netroby/jdk9-dev,langtools/test/tools/javac/processing/model/element/TestElement.java
ngallagher/simplexml,src/main/java/org/simpleframework/xml/Attribute.java
BowlerHatLLC/feathers-sdk,modules/swfutils/src/java/flash/swf/types/MorphLineStyle.java
netroby/jdk9-dev,langtools/test/tools/javac/api/file/SJFM_GetFileObjects.java
apache/incubator-asterixdb,asterixdb/asterix-om/src/main/java/org/apache/asterix/om/base/InMemUtils.java
DF1E/SimpleExplorer,explorer/src/main/java/com/dnielfe/manager/settings/SettingsActivity.java
JetBrains/intellij-community,plugins/ui-designer/src/com/intellij/uiDesigner/actions/PreviewFormAction.java
goldmansachs/gs-collections,unit-tests/src/test/java/com/gs/collections/impl/set/fixed/QuadrupletonSetTest.java
apache/archiva,archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RemoteRepositoriesServiceTest.java
JetBrains/intellij-community,plugins/ui-designer/src/com/intellij/uiDesigner/actions/CreateComponentAction.java
BowlerHatLLC/feathers-sdk,modules/compiler/src/java/flex2/compiler/i18n/ClassReference.java
killme2008/xmemcached,src/main/java/net/rubyeye/xmemcached/netw

2025-02-12 20:23:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 11
2025-02-12 20:23:53 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:54 - root - INFO - SQL:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import java.util.%'
   LIMIT 100;
Results:
Too long, hard cut:
content
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLException {
    return getDescriptor(param).getPrecision();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getScale(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetScale()) {
      return desc.getScale();
    }
    else {
      switch (desc.getType()) {
        case BOOLEAN:
        case TINYINT:
        case SMALLINT:
        case INTEGER:
        case BIGINT:
        case REAL:
        case DOUBLE:
        case FLOAT:
        case DATE:
        case TIME:
          return 0;
        case TIMESTAMP:
          return 6;
        default:
          return snappydataConstants.COLUMN_SCALE_UNKNOWN;
      }
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterType(int param) throws SQLException {
    return Converters.getJdbcType(getDescriptor(param).getType());
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String getParameterTypeName(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    String typeAndClassName = desc.getUdtTypeAndClassName();
    if (typeAndClassName != null) {
      int colonIndex = typeAndClassName.indexOf(':');
      if (colonIndex >= 0) {
        return typeAndClassName.substring(0, colonIndex);
      }
      else {
        return typeAndClassName;
      }
    }
    else {
      switch (desc.getType()) {
        case TINYINT:
          return ""TINYINT"";
        case SMALLINT:
          return ""S

2025-02-12 20:23:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 16
2025-02-12 20:23:56 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:57 - root - INFO - SQL:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%package %'
   LIMIT 100;
Results:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti

2025-02-12 20:23:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:23:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:23:58 - snowflake.connector.connection - INFO - closed
2025-02-12 20:23:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:23:59 - root - INFO - SQL:
SELECT "sample_repo_name", COUNT(*) AS "JavaFileCount"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    GROUP BY "sample_repo_name"
    ORDER BY "JavaFileCount" DESC
    LIMIT 100;
Results:
sample_repo_name,JavaFileCount
IMS-MAXIMS/openMAXIMS,49
bugvm/bugvm-studio,32
JetBrains/intellij-community,22
netroby/jdk9-dev,19
googleads/googleads-java-lib,19
eclipse/eclipselink.runtime,15
SpoonLabs/astor,12
aws/aws-sdk-java,11
gemxd/gemfirexd-oss,10
oopcell/AvoinApotti,10
droolsjbpm/drools,9
oVirt/ovirt-engine,9
apache/camel,9
apache/jena,9
apache/incubator-asterixdb,8
mobile-event-processing/Asper,8
openjdk-mirror/jdk7u-jdk,7
dmlloyd/openjdk,7
apache/ignite,7
SSEHUB/EASyProducer,6
gridgain/apache-ignite,6
espertechinc/esper,6
openmicroscopy/bioformats,6
undertow-io/undertow,6
mdaniel/svn-caucho-com-resin,6
dotCMS/core,5
opennetworkinglab/onos,5
apache/sling,5
isnuryusuf/ingress-indonesia-dev,5
Pushjet/Pushjet-Android,5
jitsi/jitsi,5
apache/isis,5
zstackorg/zstack,5
aptana/studio3,5
apache/jackrabbit,5
pplante/droidtowers,4
puppetlabs/aws-sdk-for-java,4
consulo/consulo,4
zaoying/EChartsAnnotation,4
OpenNTF/org.openntf.domino,4
cuba-platform/cuba,4
droolsjbpm/optaplanner,4
buschmais/jqassistant,4
eclipse/eclipse-collections,4
JetBrains/jdk8u_jdk,4
hernad/easyrec,4
apache/axis2-java,4
bozimmerman/CoffeeMud,4
apache/activemq-artemis,4
beast-dev/beast-mcmc,4
SerNet/verinice,4
impetus-opensource/Kundera,4
automenta/narchy,4
rhuitl/uClinux,4
CHINA-JD/presto,4
Silverpeas/Silverpeas-Core,4
bbossgroups/bboss,4
gnosygnu/xowa_android,4
joel-costigliola/assertj-core,4
knopflerfish/knopflerfish.org,4
trylimits/Eclipse-Postfix-Code-Completion,4
apache/olingo-odata4,4
dr-jts/jts,4
unktomi/form-follows-function,4
intermine/intermine,4
hopshadoop/hops,4
apache/cassandra,4
klemens/openolat,4
lucee/Lucee4,4
GoogleCloudPlatform/DataflowJavaSDK,4
apache/directory-server,4
spring-projects/spring-boot,4
dubenju/javay,4
majinkai/pinpoint,3
sakaiproject/sakai,3
computergeek1507/openhab,3
AcademicTorrents/AcademicTorrents-Downloader,3
jamesagnew/hapi-fhir,3
VoltDB/voltdb,3
apache/flex-falcon,3
SnappyDataInc/snappy-store,3
tokee/lucene,3
metteo/jts,3
nordpos/nordpos,3
magcode/openhab,3
graalvm/graal-core,3
checkstyle/checkstyle,3
codefollower/Open-Source-Research,3
apache/jackrabbit-oak,3
trol73/mucommander,3
voldemort/voldemort,3
apache/incubator-wave,3
MeasureAuthoringTool/MeasureAuthoringTool_LatestSprint,3
KRMAssociatesInc/eHMP,3
plum-umd/pasket,3
SanDisk-Open-Source/SSD_Dashboard,3
apache/kylin,3
OBHITA/Consent2Share,3
forge/core,3
opendaylight/controller,3

2025-02-12 20:23:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:23:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:23:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:24:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 13
2025-02-12 20:24:01 - snowflake.connector.connection - INFO - closed
2025-02-12 20:24:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:24:02 - root - INFO - SQL:
SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import org.%'
    LIMIT 100;
Results:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"package org.apache.lucene.analysis;

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import java.io.IOException;

import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
import org.apache.lucene.analysis.tokenattributes.TermAttribute;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.Field.TermVector;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.index.Term;
import org.apache.lucene.index.TermPositions;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.RAMDirectory;

public class TestCachingTokenFilter extends BaseTokenStreamTestCase {
  private String[] tokens = new String[] {""term1"", ""term2"", ""term3"", ""term2""};
  
  public void testCaching() throws IOException {
    Directory dir = new RAMDirectory();
    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(
        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));
    Document doc = new Document();
    TokenStream stream = new TokenStream() {
      private int index = 0;
      private TermAttribute termAtt = addAttribute(TermAttribute.class);
      private OffsetAttribute offsetAtt = addAttribute(OffsetAttribute.class);
      
      @Override
      public boolean incrementToken() throws IOException {
        if (index == tokens.length) {
          return false;
        } else {
          clearAttributes();
          termAtt.setTermBuffer(tokens[index++]);
          offsetAtt.setOffset(0,0);
          return true;
        }        
      }
      
    };
    
    stream = new CachingTokenFilter(stream);
    
    doc.add(new Field(""preanalyzed"", stream, TermVector.NO));
    
    // 1) we consume all tokens twice before we add the doc to the index
    checkTokens(stream);
    stream.reset();  
    checkTokens(stream);
    
    // 2) now add the document to the index and verify if all tokens are indexed
    //    don't reset the stream here, the DocumentWriter should do that implicitly
    writer.addDocument(doc);
    writer.close();
    
    IndexReader reader = IndexReader.open(dir, true);
    TermPositions termPositions = reader.termPositions(new Term(""preanalyzed"", ""term1""));
    assertTrue(termPositions.next());
    assertEquals(1, termPositions.freq());
    assertEquals(0, termPositions.nextPosition());

    termPositions.seek(new Term(""preanalyzed"", ""term2""));
    assertTrue(termPositions.next());
    assertEquals(2, termPositions.freq());
    assertEquals(1, termPositions.nextPosition());
    assertEquals(3, termPositions.nextPosition());
    
    termPositions.seek(new Term(""preanalyzed"", ""term3

2025-02-12 20:24:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:24:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:24:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:24:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-02-12 20:24:03 - snowflake.connector.connection - INFO - closed
2025-02-12 20:24:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:24:03 - root - INFO - SQL:
SELECT REGEXP_REPLACE("sample_path", '.*/', '') AS "FileName"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    LIMIT 100;
Results:
FileName
AttachAsdocTest.java
ClientParameterMetaData.java
NamingManager.java
Networker.java
Image.java
TestCachingTokenFilter.java
NhinAggregator.java
PatientSearchResultsModelBuilderImpl.java
CONNECTCXFClientFactory.java
NativePacketDllMappings.java
BooleanArrayToIteratorConverter.java
FeatureGeoFileReader.java
HCatalogImportTest.java
DateToolTests.java
WLSTransactionManagerLocator.java
ReplayPosition.java
MetaDataObjectSerializer_json.java
DefaultMetadataTest.java
CasConsumerDescription.java
OneToThreePipelineSequencedThroughputTest.java
ZWaveWakeUpCommandClass.java
SenseiClientRequest.java
PacketSetMagnet.java
StatusControllerWithInactiveDatabaseIT.java
Scenario.java
NHttpServerEventHandler.java
EbXMLRetrieveDocumentSetRequest.java
DemoConcurrentJobBean.java
InputFormatsTest.java
FileChannelTransferTo.java
ExecNamingService.java
ParserForNoTag.java
BinaryOrderable.java
INewsListView.java
GetDGSGood.java
AdaptiveWebElement.java
InterruptedOperationException.java
TestElement.java
Attribute.java
MorphLineStyle.java
SJFM_GetFileObjects.java
InMemUtils.java
SettingsActivity.java
PreviewFormAction.java
QuadrupletonSetTest.java
RemoteRepositoriesServiceTest.java
CreateComponentAction.java
ClassReference.java
Connector.java
LombokBundle.java
Deflate.java
SetLogPermission.java
L1Disease.java
AlignTools.java
package-info.java
JoinSchematicCursor.java
LoadJ3mdTest.java
LogStartProvider.java
GenericAttributeDetailPane.java
DomainList.java
_ListUserProvidedServiceInstancesResponse.java
MiniDFSTest.java
OracleDatabaseSequenceFilter.java
ModuleIdentiferNotationParser.java
ImageLoader.java
TQuotTranslation.java
TempestPanel.java
SyntaxConstraintRun.java
SftpSinkTestConfiguration.java
BlowFishKeygen.java
CsvToKeel.java
NetworkTypePreference.java
JsonPatchLoader.java
RealisticBiomeHLMesa.java
WaspCluster.java
SparseMatrixT.java
CheckMethodAdapter.java
FileMeta.java
Task.java
JavadocAllocationExpression.java
TestTldFernDescription.java
Maze2Wide.java
Ipv6ConstraintTest.java
CheckPermissionDecisionVoter.java
BuildStatusVisitor.java
IpRangesTest.java
CollectionMapEntryModel.java
QuitDialog.java
HoldCallInNetwork.java
GitHubPRNonMergeableEvent.java
BRouterService.java
TestJobRunner.java
SandBackgroundTaskByVfsChangeProvider.java
ElGamalPrivateKey.java
ServiceDispatcherTest.java
ValidateVariantsIntegrationTest.java
Advertiser.java
StringDictionaryAccessor.java
NameParser.java
Example9.java

2025-02-12 20:24:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:24:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:24:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:24:05 - snowflake.connector.cursor - INFO - Number of results in first chunk: 16
2025-02-12 20:24:06 - snowflake.connector.connection - INFO - closed
2025-02-12 20:24:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:24:06 - root - INFO - SQL:
SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND LENGTH("content") > 100
    LIMIT 100;
Results:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti

2025-02-12 20:24:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:24:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:24:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:24:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 8
2025-02-12 20:24:07 - snowflake.connector.connection - INFO - closed
2025-02-12 20:24:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:24:08 - root - INFO - SQL:
SELECT "sample_repo_name", COUNT(DISTINCT "sample_path") AS "JavaFileCount"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    GROUP BY "sample_repo_name"
    HAVING COUNT(DISTINCT "sample_path") > 10
    LIMIT 100;
Results:
sample_repo_name,JavaFileCount
SpoonLabs/astor,12
bugvm/bugvm-studio,32
aws/aws-sdk-java,11
netroby/jdk9-dev,19
googleads/googleads-java-lib,19
IMS-MAXIMS/openMAXIMS,49
JetBrains/intellij-community,22
eclipse/eclipselink.runtime,15

2025-02-12 20:24:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:24:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:24:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:24:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-02-12 20:24:10 - snowflake.connector.connection - INFO - closed
2025-02-12 20:24:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:24:11 - root - INFO - SQL:
SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%public class%'
    LIMIT 100;
Results:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti

2025-02-12 20:24:11 - root - INFO - itercount: 0
2025-02-12 20:24:11 - root - INFO - Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,0
table_name,SAMPLE_FILES
description,
DDL,"create or replace TABLE SAMPLE_FILES (
	""repo_name"" VARCHAR(16777216),
	""ref"" VARCHAR(16777216),
	""path"" VARCHAR(16777216),
	""mode"" NUMBER(38,0),
	""id"" VARCHAR(16777216),
	""symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,1
table_name,LANGUAGES
description,
DDL,"create or replace TABLE LANGUAGES (
	""repo_name"" VARCHAR(16777216),
	""language"" VARIANT
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,2
table_name,LICENSES
description,
DDL,"create or replace TABLE LICENSES (
	""repo_name"" VARCHAR(16777216),
	""license"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,3
table_name,SAMPLE_COMMITS
description,
DDL,"create or replace TABLE SAMPLE_COMMITS (
	""commit"" VARCHAR(16777216),
	""tree"" VARCHAR(16777216),
	""parent"" VARIANT,
	""author"" VARIANT,
	""committer"" VARIANT,
	""subject"" VARCHAR(16777216),
	""message"" VARCHAR(16777216),
	""trailer"" VARIANT,
	""difference"" VARIANT,
	""difference_truncated"" BOOLEAN,
	""repo_name"" VARCHAR(16777216),
	""encoding"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,4
table_name,SAMPLE_CONTENTS
description,
DDL,"create or replace TABLE SAMPLE_CONTENTS (
	""id"" VARCHAR(16777216),
	""size"" NUMBER(38,0),
	""content"" VARCHAR(16777216),
	""binary"" BOOLEAN,
	""copies"" NUMBER(38,0),
	""sample_repo_name"" VARCHAR(16777216),
	""sample_ref"" VARCHAR(16777216),
	""sample_path"" VARCHAR(16777216),
	""sample_mode"" NUMBER(38,0),
	""sample_symlink_target"" VARCHAR(16777216)
);"

Database Name: GITHUB_REPOS
Schema Name: GITHUB_REPOS
,5
table_name,SAMPLE_REPOS
description,
DDL,"create or replace TABLE SAMPLE_REPOS (
	""repo_name"" VARCHAR(16777216),
	""watch_count"" NUMBER(38,0)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}
Begin Exploring Related Columns
Relevant columns and their potential usage:

- `"sample_path"`: Used to filter for Java source files by selecting paths that end with `.java`.
- `"content"`: Contains the content of the files; used to extract import statements from Java source files.
- Conditions that may be used:
  - `WHERE "sample_path" LIKE '%.java'` to select only Java source files.
  - `WHERE "content" ILIKE '%import %'` to find files that contain import statements.

Below are the SQL queries to explore the data:

1. **List sample paths from `SAMPLE_CONTENTS` table:**

   ```sql
   SELECT "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   LIMIT 100;
   ```

2. **Get distinct Java file paths:**

   ```sql
   SELECT DISTINCT "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
   ```

3. **Retrieve content of Java source files:**

   ```sql
   SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
   ```

4. **Find Java files containing import statements:**

   ```sql
   SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import %'
   LIMIT 100;
   ```

5. **List distinct repository names containing Java files:**

   ```sql
   SELECT DISTINCT "sample_repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
   ```

6. **Count total number of Java files:**

   ```sql
   SELECT COUNT(*) AS "JavaFileCount"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java';
   ```

7. **Show Java file paths and their associated repositories:**

   ```sql
   SELECT "sample_repo_name", "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
   ```

8. **Extract Java files importing from the `java.util` package:**

   ```sql
   SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import java.util.%'
   LIMIT 100;
   ```

9. **Identify Java files with package declarations:**

   ```sql
   SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%package %'
   LIMIT 100;
   ```

10. **Count Java files per repository:**

    ```sql
    SELECT "sample_repo_name", COUNT(*) AS "JavaFileCount"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    GROUP BY "sample_repo_name"
    ORDER BY "JavaFileCount" DESC
    LIMIT 100;
    ```

11. **Get Java files importing from packages starting with `org.`:**

    ```sql
    SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import org.%'
    LIMIT 100;
    ```

12. **List Java file names without the full path:**

    ```sql
    SELECT REGEXP_REPLACE("sample_path", '.*/', '') AS "FileName"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    LIMIT 100;
    ```

13. **Retrieve content of Java files longer than 100 characters:**

    ```sql
    SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND LENGTH("content") > 100
    LIMIT 100;
    ```

14. **Find repositories with more than 10 Java files:**

    ```sql
    SELECT "sample_repo_name", COUNT(DISTINCT "sample_path") AS "JavaFileCount"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    GROUP BY "sample_repo_name"
    HAVING COUNT(DISTINCT "sample_path") > 10
    LIMIT 100;
    ```

15. **Show Java files that declare a public class:**

    ```sql
    SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%public class%'
    LIMIT 100;
    ```

These queries help in understanding the structure and content of the `SAMPLE_CONTENTS` table, specifically focusing on Java source files and their import statements. By analyzing the results of these queries, we can gain insights into how to extract the most frequently imported package names.Query:
SELECT "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   LIMIT 100;
Answer:
Too long, hard cut:
sample_path
drivers/rtc/rtc-ds1305.c
files/core-js/0.9.12/library.min.js
twmap_gen/lib/adodb5/perf/perf-db2.inc.php
drivers/devfreq/governor_simpleondemand.c
book/_themes/pydoctheme/static/pydoctheme.css
src/main/java/io/mycat/manager/response/ShowSQLSumUser.java
src/main/java/com/whammich/sstow/compat/hardmode/HandlerHardMode.java
src/main/java/flaxbeard/steamcraft/item/ItemSteamcraftNugget.java
src/router/tests/test_uri.cc
plugins/User/src/Notification/Message/PasswordRequestMessage.php
plugins/BackendTheme/src/Template/Element/settings.ctp
plg_midi_device/src/SConscript
vendor/doctrine/common/tests/Doctrine/Tests/Common/Persistence/Mapping/_files/.DS_Store
FAQ-USER
ProcessHacker/pcre/pcre2_config.c
document/static/js/es6_modules/exporter/epub.js
platform-api-client-gwt/che-core-client-gwt-runner/src/main/java/org/eclipse/che/api/runner/gwt/client/utils/RunnerUtils.java
framework/src/java/org/apache/tapestry/form/validator/MaxLength.java
framework/src/documentation/content/xdocs/tapestry/ComponentReference/ActionLink.xml
commonjs/google-map/map.js
tapestry-core/src/test/java/org/apache/tapestry5/internal/services/RequestPathOptimizerImplTest.java
tapestry-core/src/test/java/org/apache/tapestry5/ContentTypeTest.java
vio/vio.c
product_taxes_group/tests/test_product_taxes_group.py
mozaik_portal/static/src/js/portal.js
mozaik_email/wizard/allow_duplicate_view.xml
rtmpdump.c
tests/benchmarks/benchmarks.pro
src/webengine/api/qquickwebengineprofile.cpp
trunk/Documentation/KamanjaAPIDocs/com/ligadata/InputOutputAdapterInfo/CountersAdapter.html
src/backend/test/main.cpp
src/Ractive/prototype/fire.js
build/cmd/hilo/loader/ImageLoader.js
temp/com.tecnalia.ossmeter.model/src/com/tecnalia/ossmeter/model/eclipseproject/EclipseprojectFactory.java
assets/variants/light/buttons/button_reverse.png
docs/api-en/symbols/BitmapText.html
assets/css/sass/admin/_posts.scss
web/files/css/desktop/windows/inv_search_window.css
Server/src/org/openas2/message/DataHistory.java
Modules/BetterCms.Module.Root/Commands/Tag/SaveTag/SaveTagCommand.cs
test/less/stylesheet/compress.less3.selectors.part2.test24.c.json
README.md
arch/arm/mach-tegra/board-cardhu-panel.c
lib/entities/plants/peatbog.dart
src/filesystem/ZWorkerPool.h
userspace/libsinsp/filterchecks.h
third-party/org.carrot2.api/javadoc/org/carrot2/text/preprocessing/CaseNormalizerDescriptor.Keys.html
src/systeminfo/qnetworkinfo.h
docdoku-server/docdoku-server-web/src/main/java/com/docdoku/server/rest/AdminResource.java
icons/file_type_source@3x.png
sample/test-elements/callbacks.html
assets/apple-touch-icon.acorn
tests/quicktestbrowser/ApplicationRoot.qml
trunk/Documentation/KamanjaAPIDocs/com/ligadata/kamanja/metadata/ModelDef.html
build/changelog/entries/2015/10/10337.enhancement
newsfeed/migrations/0004_auto__chg_field_featuredsection_image.py
README.md
source/ed/ed_reader.h
samples/bunnymark/Main.hx
client/components/characters/charactersAdd.html
ulauncher/search/file_browser/FileBrowserMode.py
core/lib/dr_config.h
core/kernel_linux/clients/umbra/memcheck.h
src/server/game/DungeonFinding/LFGQueue.cpp
src/main/java/net/blay09/mods/cookingforblockheads/CookingConfig.java
symposion/static/img/stripe.png
ME3Explorer/Resources/property_database_64x64.png
src/administrator/components/com_kunena/controllers/plugins.php
View/Factory/Html/Objects/HtmlStrong.php
module/plugins/crypter/UploadableChFolder.py
src/3rdparty/Relinq-1.15.15.0/SharedSource/Core/ReSharperAnnotations/PublicAPIAttribute.cs
src/clustering/administration/main/directory_lock.cc
src/maidsafe/routing/async_queue.h
src/3rdparty/Relinq-1.15.15.0/Relinq/Core/Parsing/ExpressionTreeVisitors/TreeEvaluation/EvaluatableTreeFindingExpressionTreeVisitor.cs
mm/ktsan/ktsan.c
sbt/src/sbt-test/dependency-management/publish-local/changes/RetrieveTest.sbt
build.xml
src/main/resources/assets/titanite/textures/items/tansanitePearl.png
src/commands/CmdInfo.cpp
www/lib/HTML/QuickForm/date.php
doc/fr/installation/index.rst
doc/stdlibref/stable-partition.html
ModelItems/InstModelItem.cpp
Documentation/DocuBlocks/foxxQueuesPollInterval.md
module/EcampCore/src/EcampCore/Fieldset/User/UserCreateFieldset.php
resources/public/android-chrome-48x48.png
Documentation/Books/Manual/Administration/Upgrading/Upgrading30.mdpp
plugins/org.jkiss.dbeaver.ext.db2/src/org/jkiss/dbeaver/ext/db2/model/dict/DB2TablespaceType.java
examples/react-in-blaze/packages/npm-container/.npm/package/npm-shrinkwrap.json
src/github.com/getlantern/lantern-mobile/app/src/main/res/values-et/strings.xml
Documentation/Examples/generalGraphModulePaths2.generated
server/templates/emailTemplate.handlebars
Yupi.Messages/Handlers/Groups/RemoveGroupAdminMessageEvent.cs
server/src/main/java/com/vaadin/ui/Upload.java
WARZONE_ASSETS/models/Weapons/DC-15A_Rifle/model.glm
WARZONE_ASSETS/sound/tts/dimitrissad22k/A280 Clone Blaster.mp3
WARZONE_ASSETS/sound/tts/harry22k/E-11 Blaster Rifle.mp3
WARZONE_ASSETS/sound/tts/andreas22k/Westarm 5 Blaster.mp3
WARZONE_ASSETS/sound/tts/willbadguy22k/hmmm. 
Query:
SELECT DISTINCT "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Answer:
Too long, hard cut:
sample_path
libjava/javax/naming/spi/NamingManager.java
lionengine-network/src/main/java/com/b3dgs/lionengine/network/Networker.java
lionengine-core/src/main/java/com/b3dgs/lionengine/drawable/Image.java
Product/Production/Services/PatientDiscoveryCore/src/main/java/gov/hhs/fha/nhinc/patientdiscovery/model/builder/impl/PatientSearchResultsModelBuilderImpl.java
mapfishapp/src/main/java/org/georchestra/mapfishapp/ws/upload/FeatureGeoFileReader.java
src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java
core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/DefaultMetadataTest.java
whois-endtoend/src/test/java/net/ripe/db/whois/changedphase3/util/Scenario.java
xxl-job-admin/src/main/java/com/xxl/job/admin/core/jobbean/impl/DemoConcurrentJobBean.java
common/java/core/net/i2p/client/naming/ExecNamingService.java
clients/java/src/main/java/com/senseidb/search/client/req/SenseiClientRequest.java
dbunit/src/main/java/org/jboss/arquillian/persistence/dbunit/filter/OracleDatabaseSequenceFilter.java
app-starters-test-support/src/main/java/org/springframework/cloud/stream/app/test/sftp/SftpSinkTestConfiguration.java
src/com/vonglasow/michael/satstat/widgets/NetworkTypePreference.java
main/recognition/test/boofcv/alg/tracker/tld/TestTldFernDescription.java
brouter-routing-app/src/main/java/btools/routingapp/BRouterService.java
jtransc-asm/src/com/jtransc/org/objectweb/asm/util/CheckMethodAdapter.java
fuzzytesting/fuzzytestMixedJavaJess/QuitDialog.java
lib/server-core-ext/src/test/java/org/apache/olingo/server/core/ServiceDispatcherTest.java
Original Files/source/src/com/google/zxing/pdf417/decoder/b.java
redux-java-devtools-ui-android/src/main/java/com/redux/DevToolPresenter.java
org.eclipse.ice.io/src/org/eclipse/ice/io/serializable/IWriter.java
src/main/java/HelloWorldWindow.java
XACML/src/com/att/research/xacml/api/Advice.java
optaplanner-core/src/test/java/org/optaplanner/core/impl/heuristic/selector/move/generic/chained/SubChainChangeMoveTest.java
modules/dfp_appengine/src/main/java/com/google/api/ads/dfp/jaxws/v201511/ServerError.java
projects/copper-coreengine/src/main/java/org/copperengine/core/tranzient/TransientProcessorPool.java
examples/Math-issue-309/src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java
hybrid/src/main/java/jetbrains/jetpad/hybrid/TokenCompletion.java
src/main/java/com/baidu/unbiz/common/apache/package-info.java
examples/java/ghost_imports/Main_missing_predicate_include.java
src/java/org/antlr/intellij/plugin/ANTLRv4ExternalAnnotator.java
source/src/com/espertech/esper/event/map/MapEntryPropertyGetter.java
commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/transform/requests/RegisterDocumentSetTransformer.java
TeaLeaf/src/com/tealeaf/event/OverlayEvent.java
newbee/src/androidTest/java/com/workingchat/newbee/ApplicationTest.java
kurento-jsonrpc/kurento-jsonrpc-server/src/main/java/org/kurento/jsonrpc/internal/server/NativeSessionHandler.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumerDescription.java
zanata-war/src/main/java/org/zanata/security/CheckPermissionDecisionVoter.java
src/java/javax/jain/ss7/inap/operation/HoldCallInNetwork.java
src/main/java/com/braintreegateway/exceptions/InvalidSignatureException.java
modules/dfp_appengine/src/main/java/com/google/api/ads/dfp/jaxws/v201602/ReconciliationReportServiceInterfaceupdateReconciliationReportsResponse.java
umlet-elements/src/main/java/com/baselet/control/basics/SortedMergedLine1DList.java
src/main/java/org/edumips64/core/is/ALUInstructions.java
src/cn/edu/gdut/zaoying/Option/series/bar/itemStyle/emphasis/ShadowOffsetXNumber.java
src/main/java/gg/uhc/uhc/modules/timer/messages/TimerMessage.java
hypersocket-core/src/main/java/com/hypersocket/transactions/TransactionService.java
main/source/org/apach3/commons/io/input/ClosedInputStream.java
graal/com.oracle.graal.phases/src/com/oracle/graal/phases/verify/VerifyVirtualizableUsage.java
hapi-fhir-base/src/main/java/ca/uhn/fhir/rest/param/UriOrListParam.java
ttt-ttv/src/main/java/com/skynav/ttv/verifier/ttml/style/RubyOffsetVerifier.java
kieker-tools/src/kieker/tools/traceAnalysis/TraceAnalysisGUI.java
spring-social-github/src/main/java/org/springframework/social/github/api/impl/json/package-info.java
wint-framework/src/main/java/wint/lang/exceptions/MagicException.java
library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerController.java
jbosen/src/main/java/org/petuum/jbosen/row/double_/SparseDoubleRowUpdate.java
src/main/java/org/threadly/concurrent/future/AbstractFutureCallbackFailureHandler.java
src/main/java/org/sigmah/offline/dao/CountryAsyncDAO.java
modules/dfp_appengine/src/main/java/com/google/api/ads/dfp/jaxws/v201511/PricingModel.java
jplag.webServiceClientTutorial/src/main/java/jplagTutorial/util/wscompileSSLLauncher.java
src/org/griphyn/vdl/compiler/intermediate/ISwitch.java
commands/src/main/java/org/wildfly/extras/creaper/commands/security/realms/AddLdapAuthentication.java
src/java/javax/ja
Query:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Answer:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti
Query:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import %'
   LIMIT 100;
Answer:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti
Query:
SELECT DISTINCT "sample_repo_name"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Answer:
sample_repo_name
BurstProject/burstcoin
DF1E/SimpleExplorer
apache/archiva
mplushnikov/lombok-intellij-plugin
l1j/en
biojava/biojava
bugvm/bugvm-studio
zogwei/zeus3
jboss-modules/jboss-modules
Pushjet/Pushjet-Android
apache/flex-sdk
apache/hadoop-mapreduce
nifty-gui/nifty-gui
DaiDongLiang/DSC
arcusys/Valamis
espadrine/opera
yescallop/Nukkit
cloudcoderdotorg/CloudCoder
tokee/lucene
consulo/consulo
hopshadoop/hops
LibreOffice/core
IntersectAustralia/faims-android
crate/crate
IDPF/epubcheck
openjdk-mirror/jdk7u-jdk
MailCore/mailcore2
spring-projects/spring-boot
caelum/mamute
box/box-android-sdk
lumifyio/lumify
openstack-infra/gerrit
facebook/pfff
aptana/studio3
bitstars/droidar
twitterdev/cannonball-android
apache/jackrabbit
hernad/easyrec
pentaho/big-data-plugin
checkstyle/checkstyle
couchbase/spymemcached
dotCMS/core
GoClipse/goclipse
bitstadium/HockeyKit
velo/flexmojos
SnappyDataInc/snappy-store
b3dgs/lionengine
CONNECT-Solution/CONNECT
apache/qpid-java
apache/uima-uimaj
apache/sis
pplante/droidtowers
oehf/ipf
JHUAPL/AccumuloGraph
apache/sqoop
ImmobilienScout24/yum-repo-server
bglimm/owlwg-test
mvglasow/satstat
joeywen/fudannlp
GoMint/GoMint
trylimits/Eclipse-Postfix-Code-Completion
zanata/zanata-server
abrensch/brouter
jtransc/jtransc
rorchard/FuzzyJ
jenkinsci/github-integration-plugin
michel-kraemer/citeproc-java
facebook/infer
eclipse/ice
stackmagic/bitly-api-client
umlet/umlet
droolsjbpm/optaplanner
rubenlagus/TelegramBots
SpoonLabs/astor
wikimedia/apps-android-wikipedia
amaembo/streamex
ezScrum/ezScrum
Eluinhost/UHC
ludup/hypersocket-framework
graphhopper/jsprit
unidal/cat2
jamesagnew/hapi-fhir
NTNAEEM/hottentot
wu560130911/MultimediaDesktop
spring-projects/spring-social-github
JetBrains/jetpad-projectional
MeasureAuthoringTool/MeasureAuthoringTool_LatestSprint
apache/olingo-odata4
neo4j-contrib/neo4j-mobile-android
glenrobson/SimpleAnnotationServer
att/XACML
copper-engine/copper-engine
aws/aws-sdk-java
mybatis/ibatis-2
petuum/jbosen
ClearTK/cleartk
cloudkeeper-project/cloudkeeper
itaipubinacional/geocab
msdx/androidkit
Esteemed-Innovation/Flaxbeards-Steam-Power
Query:
SELECT COUNT(*) AS "JavaFileCount"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java';
Answer:
JavaFileCount
2142
Query:
SELECT "sample_repo_name", "sample_path"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java'
   LIMIT 100;
Answer:
Too long, hard cut:
sample_repo_name,sample_path
velo/flexmojos,flexmojos-testing/flexmojos-test-harness/src/test/java/net/flexmojos/oss/tests/concept/AttachAsdocTest.java
SnappyDataInc/snappy-store,gemfirexd/client/src/main/java/io/snappydata/thrift/internal/ClientParameterMetaData.java
myri/lanai-gcc,libjava/javax/naming/spi/NamingManager.java
b3dgs/lionengine,lionengine-network/src/main/java/com/b3dgs/lionengine/network/Networker.java
b3dgs/lionengine,lionengine-core/src/main/java/com/b3dgs/lionengine/drawable/Image.java
tokee/lucene,src/test/org/apache/lucene/analysis/TestCachingTokenFilter.java
CONNECT-Solution/CONNECT,Product/Production/Common/CONNECTCoreLib/src/main/java/gov/hhs/fha/nhinc/orchestration/NhinAggregator.java
CONNECT-Solution/CONNECT,Product/Production/Services/PatientDiscoveryCore/src/main/java/gov/hhs/fha/nhinc/patientdiscovery/model/builder/impl/PatientSearchResultsModelBuilderImpl.java
CONNECT-Solution/CONNECT,Product/Production/Common/CONNECTCoreLib/src/main/java/gov/hhs/fha/nhinc/messaging/client/CONNECTCXFClientFactory.java
kaitoy/pcap4j,pcap4j-core/src/main/java/org/pcap4j/core/NativePacketDllMappings.java
apache/tapestry4,framework/src/java/org/apache/tapestry/coerce/BooleanArrayToIteratorConverter.java
georchestra/georchestra,mapfishapp/src/main/java/org/georchestra/mapfishapp/ws/upload/FeatureGeoFileReader.java
apache/sqoop,src/test/org/apache/sqoop/hcat/HCatalogImportTest.java
apache/velocity-tools,velocity-tools-generic/src/test/java/org/apache/velocity/tools/generic/DateToolTests.java
apache/qpid-java,jca/src/main/java/org/apache/qpid/ra/tm/WLSTransactionManagerLocator.java
Stratio/cassandra,src/java/org/apache/cassandra/db/commitlog/ReplayPosition.java
apache/uima-uimaj,uimaj-json/src/main/java/org/apache/uima/json/impl/MetaDataObjectSerializer_json.java
apache/sis,core/sis-metadata/src/test/java/org/apache/sis/metadata/iso/DefaultMetadataTest.java
apache/uima-uimaj,uimaj-core/src/main/java/org/apache/uima/collection/CasConsumerDescription.java
fjfd/microscope,microscope-collector/src/test/java/com/lmax/disruptor/sequenced/OneToThreePipelineSequencedThroughputTest.java
jenskastensson/openhab,bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveWakeUpCommandClass.java
senseidb/sensei,clients/java/src/main/java/com/senseidb/search/client/req/SenseiClientRequest.java
p455w0rd/WirelessCraftingTerminal,src/java/net/p455w0rd/wirelesscraftingterminal/core/sync/packets/PacketSetMagnet.java
ImmobilienScout24/yum-repo-server,src/test/java/de/is24/infrastructure/gridfs/http/web/controller/StatusControllerWithInactiveDatabaseIT.java
RIPE-NCC/whois,whois-endtoend/src/test/java/net/ripe/db/whois/changedphase3/util/Scenario.java
pplante/droidtowers,main/source/org/apach3/http/nio/NHttpServerEventHandler.java
oehf/ipf,commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/ebxml/EbXMLRetrieveDocumentSetRequest.java
xuxueli/xxl-job,xxl-job-admin/src/main/java/com/xxl/job/admin/core/jobbean/impl/DemoConcurrentJobBean.java
JHUAPL/AccumuloGraph,src/test/java/edu/jhuapl/tinkerpop/mapreduce/InputFormatsTest.java
JeffLi1993/java-core-learning-example,src/org/javacore/nio/FileChannelTransferTo.java
oakes/Nightweb,common/java/core/net/i2p/client/naming/ExecNamingService.java
airbnb/kafka-statsd-metrics2,src/main/java/com/airbnb/metrics/ParserForNoTag.java
apache/derby,java/engine/org/apache/derby/iapi/store/access/BinaryOrderable.java
baoti/Pioneer,app/src/main/java/com/github/baoti/pioneer/ui/news/list/INewsListView.java
BurstProject/burstcoin,src/java/nxt/http/GetDGSGood.java
forcedotcom/aura,aura/src/test/java/org/auraframework/test/util/AdaptiveWebElement.java
Netflix/astyanax,astyanax-core/src/main/java/com/netflix/astyanax/connectionpool/exceptions/InterruptedOperationException.java
netroby/jdk9-dev,langtools/test/tools/javac/processing/model/element/TestElement.java
ngallagher/simplexml,src/main/java/org/simpleframework/xml/Attribute.java
BowlerHatLLC/feathers-sdk,modules/swfutils/src/java/flash/swf/types/MorphLineStyle.java
netroby/jdk9-dev,langtools/test/tools/javac/api/file/SJFM_GetFileObjects.java
apache/incubator-asterixdb,asterixdb/asterix-om/src/main/java/org/apache/asterix/om/base/InMemUtils.java
DF1E/SimpleExplorer,explorer/src/main/java/com/dnielfe/manager/settings/SettingsActivity.java
JetBrains/intellij-community,plugins/ui-designer/src/com/intellij/uiDesigner/actions/PreviewFormAction.java
goldmansachs/gs-collections,unit-tests/src/test/java/com/gs/collections/impl/set/fixed/QuadrupletonSetTest.java
apache/archiva,archiva-modules/archiva-web/archiva-rest/archiva-rest-services/src/test/java/org/apache/archiva/rest/services/RemoteRepositoriesServiceTest.java
JetBrains/intellij-community,plugins/ui-designer/src/com/intellij/uiDesigner/actions/CreateComponentAction.java
BowlerHatLLC/feathers-sdk,modules/compiler/src/java/flex2/compiler/i18n/ClassReference.java
killme2008/xmemcached,src/main/java/net/rubyeye/xmemcached/netw
Query:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import java.util.%'
   LIMIT 100;
Answer:
Too long, hard cut:
content
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLException {
    return getDescriptor(param).getPrecision();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getScale(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetScale()) {
      return desc.getScale();
    }
    else {
      switch (desc.getType()) {
        case BOOLEAN:
        case TINYINT:
        case SMALLINT:
        case INTEGER:
        case BIGINT:
        case REAL:
        case DOUBLE:
        case FLOAT:
        case DATE:
        case TIME:
          return 0;
        case TIMESTAMP:
          return 6;
        default:
          return snappydataConstants.COLUMN_SCALE_UNKNOWN;
      }
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterType(int param) throws SQLException {
    return Converters.getJdbcType(getDescriptor(param).getType());
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public String getParameterTypeName(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    String typeAndClassName = desc.getUdtTypeAndClassName();
    if (typeAndClassName != null) {
      int colonIndex = typeAndClassName.indexOf(':');
      if (colonIndex >= 0) {
        return typeAndClassName.substring(0, colonIndex);
      }
      else {
        return typeAndClassName;
      }
    }
    else {
      switch (desc.getType()) {
        case TINYINT:
          return ""TINYINT"";
        case SMALLINT:
          return ""S
Query:
SELECT "content"
   FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
   WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%package %'
   LIMIT 100;
Answer:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti
Query:
SELECT "sample_repo_name", COUNT(*) AS "JavaFileCount"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    GROUP BY "sample_repo_name"
    ORDER BY "JavaFileCount" DESC
    LIMIT 100;
Answer:
sample_repo_name,JavaFileCount
IMS-MAXIMS/openMAXIMS,49
bugvm/bugvm-studio,32
JetBrains/intellij-community,22
netroby/jdk9-dev,19
googleads/googleads-java-lib,19
eclipse/eclipselink.runtime,15
SpoonLabs/astor,12
aws/aws-sdk-java,11
gemxd/gemfirexd-oss,10
oopcell/AvoinApotti,10
droolsjbpm/drools,9
oVirt/ovirt-engine,9
apache/camel,9
apache/jena,9
apache/incubator-asterixdb,8
mobile-event-processing/Asper,8
openjdk-mirror/jdk7u-jdk,7
dmlloyd/openjdk,7
apache/ignite,7
SSEHUB/EASyProducer,6
gridgain/apache-ignite,6
espertechinc/esper,6
openmicroscopy/bioformats,6
undertow-io/undertow,6
mdaniel/svn-caucho-com-resin,6
dotCMS/core,5
opennetworkinglab/onos,5
apache/sling,5
isnuryusuf/ingress-indonesia-dev,5
Pushjet/Pushjet-Android,5
jitsi/jitsi,5
apache/isis,5
zstackorg/zstack,5
aptana/studio3,5
apache/jackrabbit,5
pplante/droidtowers,4
puppetlabs/aws-sdk-for-java,4
consulo/consulo,4
zaoying/EChartsAnnotation,4
OpenNTF/org.openntf.domino,4
cuba-platform/cuba,4
droolsjbpm/optaplanner,4
buschmais/jqassistant,4
eclipse/eclipse-collections,4
JetBrains/jdk8u_jdk,4
hernad/easyrec,4
apache/axis2-java,4
bozimmerman/CoffeeMud,4
apache/activemq-artemis,4
beast-dev/beast-mcmc,4
SerNet/verinice,4
impetus-opensource/Kundera,4
automenta/narchy,4
rhuitl/uClinux,4
CHINA-JD/presto,4
Silverpeas/Silverpeas-Core,4
bbossgroups/bboss,4
gnosygnu/xowa_android,4
joel-costigliola/assertj-core,4
knopflerfish/knopflerfish.org,4
trylimits/Eclipse-Postfix-Code-Completion,4
apache/olingo-odata4,4
dr-jts/jts,4
unktomi/form-follows-function,4
intermine/intermine,4
hopshadoop/hops,4
apache/cassandra,4
klemens/openolat,4
lucee/Lucee4,4
GoogleCloudPlatform/DataflowJavaSDK,4
apache/directory-server,4
spring-projects/spring-boot,4
dubenju/javay,4
majinkai/pinpoint,3
sakaiproject/sakai,3
computergeek1507/openhab,3
AcademicTorrents/AcademicTorrents-Downloader,3
jamesagnew/hapi-fhir,3
VoltDB/voltdb,3
apache/flex-falcon,3
SnappyDataInc/snappy-store,3
tokee/lucene,3
metteo/jts,3
nordpos/nordpos,3
magcode/openhab,3
graalvm/graal-core,3
checkstyle/checkstyle,3
codefollower/Open-Source-Research,3
apache/jackrabbit-oak,3
trol73/mucommander,3
voldemort/voldemort,3
apache/incubator-wave,3
MeasureAuthoringTool/MeasureAuthoringTool_LatestSprint,3
KRMAssociatesInc/eHMP,3
plum-umd/pasket,3
SanDisk-Open-Source/SSD_Dashboard,3
apache/kylin,3
OBHITA/Consent2Share,3
forge/core,3
opendaylight/controller,3
Query:
SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%import org.%'
    LIMIT 100;
Answer:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"package org.apache.lucene.analysis;

/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import java.io.IOException;

import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
import org.apache.lucene.analysis.tokenattributes.TermAttribute;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.Field.TermVector;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.index.Term;
import org.apache.lucene.index.TermPositions;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.RAMDirectory;

public class TestCachingTokenFilter extends BaseTokenStreamTestCase {
  private String[] tokens = new String[] {""term1"", ""term2"", ""term3"", ""term2""};
  
  public void testCaching() throws IOException {
    Directory dir = new RAMDirectory();
    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(
        TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));
    Document doc = new Document();
    TokenStream stream = new TokenStream() {
      private int index = 0;
      private TermAttribute termAtt = addAttribute(TermAttribute.class);
      private OffsetAttribute offsetAtt = addAttribute(OffsetAttribute.class);
      
      @Override
      public boolean incrementToken() throws IOException {
        if (index == tokens.length) {
          return false;
        } else {
          clearAttributes();
          termAtt.setTermBuffer(tokens[index++]);
          offsetAtt.setOffset(0,0);
          return true;
        }        
      }
      
    };
    
    stream = new CachingTokenFilter(stream);
    
    doc.add(new Field(""preanalyzed"", stream, TermVector.NO));
    
    // 1) we consume all tokens twice before we add the doc to the index
    checkTokens(stream);
    stream.reset();  
    checkTokens(stream);
    
    // 2) now add the document to the index and verify if all tokens are indexed
    //    don't reset the stream here, the DocumentWriter should do that implicitly
    writer.addDocument(doc);
    writer.close();
    
    IndexReader reader = IndexReader.open(dir, true);
    TermPositions termPositions = reader.termPositions(new Term(""preanalyzed"", ""term1""));
    assertTrue(termPositions.next());
    assertEquals(1, termPositions.freq());
    assertEquals(0, termPositions.nextPosition());

    termPositions.seek(new Term(""preanalyzed"", ""term2""));
    assertTrue(termPositions.next());
    assertEquals(2, termPositions.freq());
    assertEquals(1, termPositions.nextPosition());
    assertEquals(3, termPositions.nextPosition());
    
    termPositions.seek(new Term(""preanalyzed"", ""term3
Query:
SELECT REGEXP_REPLACE("sample_path", '.*/', '') AS "FileName"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    LIMIT 100;
Answer:
FileName
AttachAsdocTest.java
ClientParameterMetaData.java
NamingManager.java
Networker.java
Image.java
TestCachingTokenFilter.java
NhinAggregator.java
PatientSearchResultsModelBuilderImpl.java
CONNECTCXFClientFactory.java
NativePacketDllMappings.java
BooleanArrayToIteratorConverter.java
FeatureGeoFileReader.java
HCatalogImportTest.java
DateToolTests.java
WLSTransactionManagerLocator.java
ReplayPosition.java
MetaDataObjectSerializer_json.java
DefaultMetadataTest.java
CasConsumerDescription.java
OneToThreePipelineSequencedThroughputTest.java
ZWaveWakeUpCommandClass.java
SenseiClientRequest.java
PacketSetMagnet.java
StatusControllerWithInactiveDatabaseIT.java
Scenario.java
NHttpServerEventHandler.java
EbXMLRetrieveDocumentSetRequest.java
DemoConcurrentJobBean.java
InputFormatsTest.java
FileChannelTransferTo.java
ExecNamingService.java
ParserForNoTag.java
BinaryOrderable.java
INewsListView.java
GetDGSGood.java
AdaptiveWebElement.java
InterruptedOperationException.java
TestElement.java
Attribute.java
MorphLineStyle.java
SJFM_GetFileObjects.java
InMemUtils.java
SettingsActivity.java
PreviewFormAction.java
QuadrupletonSetTest.java
RemoteRepositoriesServiceTest.java
CreateComponentAction.java
ClassReference.java
Connector.java
LombokBundle.java
Deflate.java
SetLogPermission.java
L1Disease.java
AlignTools.java
package-info.java
JoinSchematicCursor.java
LoadJ3mdTest.java
LogStartProvider.java
GenericAttributeDetailPane.java
DomainList.java
_ListUserProvidedServiceInstancesResponse.java
MiniDFSTest.java
OracleDatabaseSequenceFilter.java
ModuleIdentiferNotationParser.java
ImageLoader.java
TQuotTranslation.java
TempestPanel.java
SyntaxConstraintRun.java
SftpSinkTestConfiguration.java
BlowFishKeygen.java
CsvToKeel.java
NetworkTypePreference.java
JsonPatchLoader.java
RealisticBiomeHLMesa.java
WaspCluster.java
SparseMatrixT.java
CheckMethodAdapter.java
FileMeta.java
Task.java
JavadocAllocationExpression.java
TestTldFernDescription.java
Maze2Wide.java
Ipv6ConstraintTest.java
CheckPermissionDecisionVoter.java
BuildStatusVisitor.java
IpRangesTest.java
CollectionMapEntryModel.java
QuitDialog.java
HoldCallInNetwork.java
GitHubPRNonMergeableEvent.java
BRouterService.java
TestJobRunner.java
SandBackgroundTaskByVfsChangeProvider.java
ElGamalPrivateKey.java
ServiceDispatcherTest.java
ValidateVariantsIntegrationTest.java
Advertiser.java
StringDictionaryAccessor.java
NameParser.java
Example9.java
Query:
SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND LENGTH("content") > 100
    LIMIT 100;
Answer:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti
Query:
SELECT "sample_repo_name", COUNT(DISTINCT "sample_path") AS "JavaFileCount"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java'
    GROUP BY "sample_repo_name"
    HAVING COUNT(DISTINCT "sample_path") > 10
    LIMIT 100;
Answer:
sample_repo_name,JavaFileCount
SpoonLabs/astor,12
bugvm/bugvm-studio,32
aws/aws-sdk-java,11
netroby/jdk9-dev,19
googleads/googleads-java-lib,19
IMS-MAXIMS/openMAXIMS,49
JetBrains/intellij-community,22
eclipse/eclipselink.runtime,15
Query:
SELECT "content"
    FROM GITHUB_REPOS.GITHUB_REPOS.SAMPLE_CONTENTS
    WHERE "sample_path" LIKE '%.java' AND "content" ILIKE '%public class%'
    LIMIT 100;
Answer:
Too long, hard cut:
content
"/**
 * Flexmojos is a set of maven goals to allow maven users to compile, optimize and test Flex SWF, Flex SWC, Air SWF and Air SWC.
 * Copyright (C) 2008-2012  Marvin Froeder <marvin@flexmojos.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.flexmojos.oss.tests.concept;

import java.io.File;

import net.flexmojos.oss.test.FMVerifier;
import org.testng.Assert;
import org.testng.annotations.Test;

public class AttachAsdocTest
    extends AbstractConceptTest
{

    @Test
    public void attachAsdoc()
        throws Exception
    {
        FMVerifier v = standardConceptTester( ""attach-asdoc"" );
        File target = new File( v.getBasedir(), ""target"" );

        Assert.assertTrue( target.exists() );

        File doc = new File( target, ""attach-asdoc-1.0-SNAPSHOT-asdoc.zip"" );
        Assert.assertTrue( doc.exists() );
    }
}
"
"/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
/*
 * Changes for SnappyData data platform.
 *
 * Portions Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License""); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

package io.snappydata.thrift.internal;

import java.sql.ParameterMetaData;
import java.sql.SQLException;
import java.util.List;

import com.pivotal.gemfirexd.internal.shared.common.reference.SQLState;
import io.snappydata.thrift.ColumnDescriptor;
import io.snappydata.thrift.common.Converters;
import io.snappydata.thrift.common.ThriftExceptionUtil;
import io.snappydata.thrift.snappydataConstants;

/**
 * Implementation of JDBC {@link ParameterMetaData} for the thrift JDBC driver.
 */
public class ClientParameterMetaData implements ParameterMetaData {

  private final List<ColumnDescriptor> descriptors;

  ClientParameterMetaData(List<ColumnDescriptor> metadata) {
    this.descriptors = metadata;
  }

  /** check if 1-based index of column is valid one */
  final void checkForValidColumn(int column) throws SQLException {
    final int numColumns = this.descriptors.size();
    if (column < 1 || column > numColumns) {
      throw ThriftExceptionUtil.newSQLException(
          SQLState.LANG_INVALID_PARAM_POSITION, null, column, numColumns);
    }
  }

  final ColumnDescriptor getDescriptor(int column) throws SQLException {
    checkForValidColumn(column);
    return this.descriptors.get(column - 1);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getParameterCount() throws SQLException {
    return this.descriptors.size();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int isNullable(int param) throws SQLException {
    ColumnDescriptor desc = getDescriptor(param);
    if (desc.isSetNullable()) {
      return desc.isNullable() ? parameterNullable : parameterNoNulls;
    } else {
      return parameterNullableUnknown;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public boolean isSigned(int param) throws SQLException {
    switch (getDescriptor(param).getType()) {
      case INTEGER:
      case REAL:
      case DECIMAL:
      case SMALLINT:
      case BIGINT:
      case TINYINT:
      case DOUBLE:
      case FLOAT:
        return true;
      default:
        return false;
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public int getPrecision(int param) throws SQLExcepti
End Exploring Related Columns
Task: From GitHub Repos contents, how can we identify the top 10 most frequently imported package names in Java source files by splitting each file's content into lines, filtering for valid import statements, extracting only the package portion using a suitable regex, grouping by these extracted package names, counting their occurrences, and finally returning the 10 packages that appear most often in descending order of frequency?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
PackageName,ImportCount
packageName1:str,importCount1:int
packageName2:str,importCount2:int
packageName3:str,importCount3:int
packageName4:str,importCount4:int
packageName5:str,importCount5:int
packageName6:str,importCount6:int
packageName7:str,importCount7:int
packageName8:str,importCount8:int
packageName9:str,importCount9:int
packageName10:str,importCount10:int
```

This table lists the top 10 most frequently imported Java package names from the GitHub repositories dataset. The `PackageName` column represents the name of the Java package, and the `ImportCount` column shows how many times each package was imported across all Java source files. The packages are ordered in descending order of their import counts..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: The table structure information is ({database name: {schema name: [table name]}}): 
{'GITHUB_REPOS': {'GITHUB_REPOS': ['SAMPLE_FILES', 'LANGUAGES', 'LICENSES', 'SAMPLE_COMMITS', 'SAMPLE_CONTENTS', 'SAMPLE_REPOS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-02-12 20:24:43 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:24:43 - root - INFO - ```sql
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            '^import\s+(?:static\s+)?([\w\.]+)\.(?:\w+|\*)\s*;',
            1,
            1,
            '',
            1
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
```
2025-02-12 20:24:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:24:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:24:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:24:49 - snowflake.connector.connection - INFO - closed
2025-02-12 20:24:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:24:49 - root - INFO - itercount: 1
2025-02-12 20:24:49 - root - INFO - 100048 (2201B): 01ba59a8-0004-9c22-0001-11c30112c132: Invalid regular expression: '^imports+(?:statics+)?([w.]+).(?:w+|*)s*;', no argument for repetition operator: ?
2025-02-12 20:24:49 - root - INFO - Input sql:
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            '^import\s+(?:static\s+)?([\w\.]+)\.(?:\w+|\*)\s*;',
            1,
            1,
            '',
            1
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
The error information is:
100048 (2201B): 01ba59a8-0004-9c22-0001-11c30112c132: Invalid regular expression: '^imports+(?:statics+)?([w.]+).(?:w+|*)s*;', no argument for repetition operator: ?
Please correct it and output only 1 complete SQL query.
2025-02-12 20:25:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:25:15 - root - INFO - ```sql
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            '^import\\s+(?:static\\s+)?([\\w\\.]+)\\.(?:\\w+|\\*)\\s*;',
            1,
            1,
            '',
            1
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
```
2025-02-12 20:25:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:25:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:25:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:25:22 - snowflake.connector.connection - INFO - closed
2025-02-12 20:25:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:25:22 - root - INFO - itercount: 2
2025-02-12 20:25:22 - root - INFO - 100048 (2201B): 01ba59a9-0004-9c12-0001-11c30112bc96: Invalid regular expression: '^import\s+(?:static\s+)?([\w\.]+)\.(?:\w+|\*)\s*;', no argument for repetition operator: ?
2025-02-12 20:25:22 - root - INFO - Input sql:
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            '^import\\s+(?:static\\s+)?([\\w\\.]+)\\.(?:\\w+|\\*)\\s*;',
            1,
            1,
            '',
            1
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
The error information is:
100048 (2201B): 01ba59a9-0004-9c12-0001-11c30112bc96: Invalid regular expression: '^import\s+(?:static\s+)?([\w\.]+)\.(?:\w+|\*)\s*;', no argument for repetition operator: ?
Please correct it and output only 1 complete SQL query.
2025-02-12 20:25:49 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:25:49 - root - INFO - ```sql
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            'import(\\s+static){0,1}\\s+([a-zA-Z0-9_\\.]+)\\.(\\w+|\\*)\\s*;',
            1,
            1,
            '',
            2
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
```
2025-02-12 20:25:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:25:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:25:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:25:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-02-12 20:25:51 - snowflake.connector.connection - INFO - closed
2025-02-12 20:25:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:25:51 - root - INFO - itercount: 3
2025-02-12 20:25:51 - root - INFO - 0
2025-02-12 20:25:51 - root - INFO - results: 
PackageName,ImportCount
java.util,1841
java.io,763
org.junit,321
org.junit.Assert,183
org.slf4j,157
android.view,144
javax.xml.bind.annotation,143
android.content,113
android.widget,112
java.util.concurrent,103


2025-02-12 20:25:51 - root - INFO - Please check the answer again by reviewing From GitHub Repos contents, how can we identify the top 10 most frequently imported package names in Java source files by splitting each file's content into lines, filtering for valid import statements, extracting only the package portion using a suitable regex, grouping by these extracted package names, counting their occurrences, and finally returning the 10 packages that appear most often in descending order of frequency?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
PackageName,ImportCount
packageName1:str,importCount1:int
packageName2:str,importCount2:int
packageName3:str,importCount3:int
packageName4:str,importCount4:int
packageName5:str,importCount5:int
packageName6:str,importCount6:int
packageName7:str,importCount7:int
packageName8:str,importCount8:int
packageName9:str,importCount9:int
packageName10:str,importCount10:int
```

This table lists the top 10 most frequently imported Java package names from the GitHub repositories dataset. The `PackageName` column represents the name of the Java package, and the `ImportCount` column shows how many times each package was imported across all Java source files. The packages are ordered in descending order of their import counts. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
PackageName,ImportCount
java.util,1841
java.io,763
org.junit,321
org.junit.Assert,183
org.slf4j,157
android.view,144
javax.xml.bind.annotation,143
android.content,113
android.widget,112
java.util.concurrent,103
Current sql:
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            'import(\\s+static){0,1}\\s+([a-zA-Z0-9_\\.]+)\\.(\\w+|\\*)\\s*;',
            1,
            1,
            '',
            2
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
2025-02-12 20:26:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com//openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-02-12 20:26:41 - root - INFO - ```sql
SELECT
    "PackageName",
    COUNT(*) AS "ImportCount"
FROM (
    SELECT
        REGEXP_SUBSTR(
            TRIM(f.VALUE),
            'import(\\s+static)?\\s+([a-zA-Z0-9_\\.]+)\\.(\\w+|\\*)\\s*;',
            1,
            1,
            '',
            2
        ) AS "PackageName"
    FROM
        "GITHUB_REPOS"."GITHUB_REPOS"."SAMPLE_CONTENTS" sc,
        LATERAL FLATTEN(INPUT => SPLIT(sc."content", '\n')) f
    WHERE
        sc."sample_path" LIKE '%.java'
        AND TRIM(f.VALUE) LIKE 'import %'
)
WHERE
    "PackageName" IS NOT NULL
GROUP BY
    "PackageName"
ORDER BY
    "ImportCount" DESC NULLS LAST
LIMIT 10;
```
2025-02-12 20:26:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.3, Python Version: 3.10.16, Platform: Linux-6.5.0-45-generic-x86_64-with-glibc2.35
2025-02-12 20:26:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-02-12 20:26:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-02-12 20:26:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-02-12 20:26:42 - snowflake.connector.connection - INFO - closed
2025-02-12 20:26:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-02-12 20:26:42 - root - INFO - itercount: 4
2025-02-12 20:26:42 - root - INFO - 0
2025-02-12 20:26:43 - root - INFO - Total iteration counts: 4
