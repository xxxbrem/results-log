2025-01-18 18:12:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:13:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:13:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:28 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:28 - root - INFO - SQL:
SELECT DISTINCT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   LIMIT 1000;
Results:
Too long, hard cut:
words
cannach
ouistitis
revacate
voivod
synkaryonic
nonornamentally
noncontaminable
cruth
arthrostomy
teparies
nonassister
redargue
thrivingness
nunting
callipygian
yuca
eucryphiaceous
robustiously
poliorcetics
exulceratory
sentimentalism
epiblastic
orthogneiss
reabbreviated
insubduable
boxwood
bufflehead
nobilitate
bestowing
undistinguishedness
carreton
oddities
superannuity
wingseed
bravadoing
boleite
unsewn
maxillas
lymphomata
linefeeds
unwithstood
moorpan
noncomicality
perturb
scrammed
septembral
greediness
polysomatous
paulinism
planeta
unsagging
ascaricide
gal
sunderable
fanneling
grapelet
enregistry
filches
mislin
commences
tetany
resider
requalified
scorser
anither
unhomelike
solemnifying
thewlike
gases
ftncmd
rizzar
iotized
mobilian
regardance
importuner
culicifuge
yeti
demantoid
parabranchial
goldenmouth
wapacut
subfrontally
oncologist
anoscopy
epichile
krater
maldistribute
platters
unsparse
urbana
conciliations
gyrovague
sermonesque
alvina
psellism
culpableness
trainsickness
summit
turbiths
aconin
recursing
pertinence
murph
archmarshal
panspermic
saeta
martineta
heterotype
jehovist
snapdragon
bravely
overwily
douses
diamegnetism
anemonal
preadmiring
babyhoods
psiloi
stabilization
motacillid
dhotee
mulattress
hebe
suspicable
nepit
disemploys
bedraggled
unblaming
foeniculum
entreasuring
bookholder
disrupt
lautitious
uncontributive
idolising
oscan
steamfitting
tacketed
carburetant
temptsome
electorship
unbrooded
sesquitertia
phyllosoma
unmolesting
bispinose
semibiological
superseded
intervaling
corrasive
inlooking
koso
archworker
lapactic
parodontium
santonine
executiveship
unmisgivingly
conspissate
impoundment
omnibuses
alvearies
paradrops
chrysididae
overseen
borofluoride
crapette
infiltering
defogged
idrialine
perspiratory
pradeep
percontation
serviteur
limuloidea
catpipe
psychorhythmic
yellowbark
cattails
catwood
waked
antibiotically
leucaemia
anacoluthia
explainer
ammoniating
ezod
tensileness
vocable
myeloencephalitis
explain
supersystem
interpolation
localisation
collegiugia
subducing
zingiest
enharden
unoratorically
prescriptively
phonomania
nonincandescence
diphosphate
singarip
pocul
peppercorns
epitomization
temporaries
knottier
vaginoplasty
coronillin
oedicnemus
supraspinous
sensitivist
macrobiote
baetylic
standings
derogated
japanophile
clovene
wm
contouring
monotrochian
predaylight
idololatrical
parmelioid
mindsight
nonintelligence
acquisitively
graphiter
chlamydosporic
paleozoic
nonrelation
nutmeats
quarreling
enfetters
undetractingly
hirudinea
saxophonists
tzardom
honourably
diaspine
cribrate
imbue
lineally
amiantuses
cannellated
mopstick
demonolater
spics
steamboatmen
nonsanction
interlobate
megalopidae
rejuvenated
ascendent
xanthione
pyraloid
vituperation
typifies
unresemblant
insinuativeness
monkly
blasties
navigableness
neurasthenics
expeding
parallelepiped
unsmothered
nitre
prexies
abdominocystic
limnobiological
coruscative
trebuchet
forebitt
exploded
reclassification
disseise
kohua
friskiest
seminifical
whizzers
fique
nonpredatory
spheroidicity
destinism
trisulphid
utricle
episiohematoma
madrilenian
prairies
deafnesses
spiralization
nondiplomatically
noncontentious
peyotes
pilaff
duckbills
notices
harangue
freddie
unrecognized
squids
egoistical
heliograph
cats
overoxidized
queues
recidivists
everyman
simblot
semiopal
deoxidate
repoint
disconanthous
gypsophilous
arborize
unpretty
churching
idolisers
resellers
wristwork
underscribe
impetulantly
imperii
succinite
poongee
narcos
mutuum
draconic
ethologically
prizers
praetextae
potboils
tannase
wooed
inca
descanted
bisubstitution
accel
dueller
fallowist
polyarthritic
spiritualistically
caryophyllous
moniker
antialcoholic
odorized
ruminate
insphering
pseudolegendary
basculation
slued
stoae
discourteousness
turwar
warcraft
venetes
oxgoad
missmark
sandiest
lind
discoplasm
orleanist
dyotheletism
worshipers
subcontinuous
rowelhead
nonadjudicated
aliphatic
partheniad
jokers
wineskins
stringent
slabber
aphrodisia
phantasms
kops
moneybags
nongraphitic
henhouse
grassie
trichonotid
glossoid
defilade
cockalorum
endovenous
subglenoid
gowdnie
laryngalgia
shuddered
chairmender
undeniable
plectrons
peristele
bronchiocele
grantia
seedness
tocharic
timider
fractionalize
numida
pinonic
citizenizing
gravitationally
rob
liltingly
paradisia
tentered
dehydrogeniser
runnel
whiteseam
gorbit
epicenity
asok
supergratified
intrenchment
hammochrysos
megatheriidae
taily
petto
waefu
earthgall
dreigh
anay
jinnywink
grouze
precondensing
contemplamen
knappy
familiarly
tarrish
thitherwards
tachiste
ghostified
cymoidium
swangy
phenyls
retrogress
suprastate
gabbled
irreductibility
renourishment
hypothermia
arsenicalism
wellbeing
crubeen
mesomorphy
feeding
symbols
distrustingly
preacquisitiveness
hutch
misentitle
illude
overswarth
betraying
veuve
nonpossible
unstrong
traily
enchasers
nonsyndicate
wodgy
planchets
quadrantly
garishly
asyngamy
fascia
vulturewise
aminobarbituric
satirised
manswear
malihinis
metamorphic
surbed
pluralised
mythologize
mahewu
bourasque
bringers


2025-01-18 18:13:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:29 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:30 - root - INFO - SQL:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%'
   LIMIT 1000;
Results:
Too long, hard cut:
words
revacate
redargue
robustiously
reabbreviated
rizzar
regardance
recursing
resider
rejuvenated
requalified
reclassification
relator
recrimination
reintroducing
recidivists
repoint
resellers
ruminate
revisualization
razzia
realia
rowelhead
retenant
rob
runnel
roose
readjuster
restrainable
retrocession
retrogress
rutilant
rhinosporidium
roosevelt
renourishment
ropeways
revetoed
replaceability
redheadedly
recopying
rcpt
remarkableness
rekey
radicalization
retrim
reyouth
rosetan
rodinal
recapitalize
reknead
reductio
rugs
reconduct
refragableness
rusticalness
reflow
repiqued
rollout
refuges
remeasure
refuted
radiolaria
retrospection
reaccents
revolutionarily
roystonea
rumorous
runneth
reconcilee
reformation
rework
riggers
reproductive
ranales
rebesiege
rainwater
reswearing
rhamnohexose
redecorated
reforestment
reworking
rostrulum
radiocinematograph
rehoboth
regimentation
ranseur
reobserved
referrible
recti
reducers
rufescence
rubellite
redondilla
roundhouses
reaspire
restrictively
roud
rescore
rejoicing
rerises
rabbinite
rolleywayman
rabbiteye
rubbernecker
rcd
rebreeding
reinsmen
respondencies
rechanging
riverscape
rason
reshipper
reclose
reimprint
refracture
reanalyze
readymade
rubberer
roentgenopaque
reconstructed
recataloguing
redrawing
retinoblastoma
refectory
riping
reformatted
rubbishly
reshaking
rifter
rampoling
resultlessness
rankness
resnatron
reelers
roily
ranselman
racket
rockroses
rikisha
rebudgeted
receptually
reattacking
recalescing
regive
renominating
repoll
reset
ridge
revest
recoil
romanticism
reaffirmance
rhynchocoela
relitigate
reheat
retitling
ranids
reedify
receiver
renversement
r
ra
raad
raadzaal
raanan
raasch
raash
rab
rabal
raband
rabanna
rabat
rabatine
rabato
rabatos
rabatte
rabatted
rabattement
rabatting
rabban
rabbanim
rabbanist
rabbanite
rabbet
rabbeted
rabbeting
rabbets
rabbi
rabbies
rabbin
rabbinate
rabbinates
rabbindom
rabbinic
rabbinica
rabbinical
rabbinically
rabbinism
rabbinist
rabbinistic
rabbinistical
rabbinite
rabbinitic
rabbinize
rabbins
rabbinship
rabbis
rabbish
rabbiship
rabbit
rabbitberry
rabbitberries
rabbited
rabbiteye
rabbiter
rabbiters
rabbitfish
rabbitfishes
rabbithearted
rabbity
rabbiting
rabbitlike
rabbitmouth
rabbitoh
rabbitproof
rabbitry
rabbitries
rabbitroot
rabbits
rabbitskin
rabbitweed
rabbitwise
rabbitwood
rabble
rabbled
rabblelike
rabblement
rabbleproof
rabbler
rabblers
rabbles
rabblesome
rabbling
rabboni
rabbonim
rabbonis
rabdomancy
rabelais
rabelaisian
rabelaisianism
rabelaism
rabfak
rabi
rabiator
rabic
rabid
rabidity
rabidities
rabidly
rabidness
rabies
rabietic
rabific
rabiform
rabigenic
rabin
rabinet
rabious
rabirubia
rabitic
rablin
rabot
rabulistic
rabulous
racahout
racallable
racche
raccoon
raccoonberry
raccoons
raccroc
race
raceabout
racebrood
racecard
racecourse
racecourses
raced
racegoer
racegoing
racehorse
racehorses
racelike
raceline
racemase
racemate
racemates
racemation
raceme
racemed
racemes
racemic
racemiferous
racemiform
racemism
racemisms
racemization
racemize
racemized
racemizes
racemizing
racemocarbonate
racemocarbonic
racemoid
racemomethylate
racemose
racemosely
racemous
racemously
racemule
racemulose
raceplate
racer
racers
racerunner
races
racetrack
racetracker
racetracks
racette
raceway
raceways
rach
rache
rachel
raches
rachet
rachets
rachial
rachialgia
rachialgic
rachianalgesia
rachianectes
rachianesthesia
rachicentesis
rachycentridae
rachycentron
rachides
rachidial
rachidian
rachiform
rachiglossa
rachiglossate
rachigraph
rachilla
rachillae
rachiocentesis
rachiocyphosis
rachiococainize
rachiodynia
rachiodont
rachiometer
rachiomyelitis
rachioparalysis
rachioplegia
rachioscoliosis
rachiotome
rachiotomy
rachipagus
rachis
rachischisis
rachises
rachitic
rachitides
rachitis
rachitism
rachitogenic
rachitome
rachitomy
rachitomous
racy
racial
racialism
racialist
racialistic
racialists
raciality
racialization
racialize
racially
racier
raciest
racily
racinage
raciness
racinesses
racing
racinglike
racings
racion
racism
racisms
racist
racists
rack
rackabones
rackan
rackapee
rackateer
rackateering
rackboard
rackbone
racked
racker
rackers
racket
racketed
racketeer
racketeering
racketeers
racketer
rackety
racketier
racketiest
racketiness
racketing
racketlike
racketproof
racketry
rackets
rackett
rackettail
rackful
racking
rackingly
rackle
rackless
rackman
rackmaster
racknumber
rackproof
rackrentable
racks
rackway
rackwork
rackworks
raclette
raclettes
racloir
racoyian
racon
racons
raconteur
raconteurs
raconteuses
racoon
racoons
racovian
racquet
racquetball
racquets
rad
rada
radar
radarman
radarmen
radars
radarscope
radarscopes
radded
radding
raddle
raddled
raddleman
raddlemen
raddles
raddling
raddlings
radeau
radeaux
radectomy
radectomieseph
radek
radeur
radevore
radford
radiability
radiable
radiably
radiac
radial
radiale
radialia
radialis
radiality
radialization
radialize
radially
radials
radian
radiance
radiances
radiancy
radiancies
radians
radiant
radiantly
radiantness
radiants
radiary
radiata
radiate
radiated
radiately
radiateness
radiates
radia

2025-01-18 18:13:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:31 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:32 - root - INFO - SQL:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE LENGTH("words") BETWEEN 4 AND 5
   LIMIT 1000;
Results:
Too long, hard cut:
words
cruth
yuca
gases
murph
oscan
saeta
yeti
pocul
ammu
hebe
imbue
nepit
spics
koso
nitre
kohua
fique
eking
fold
cats
hutch
wooed
inca
accel
vicar
slued
ccid
stoae
veuve
waked
lind
kops
laksa
wodgy
hatte
wilco
ezod
telos
surma
perf
betes
telei
asok
roose
cahuy
azoch
hest
taily
petto
waefu
anay
fiot
gipon
betel
buzzy
scog
liin
sofar
xeme
teer
betty
wains
bulge
lamb
eloah
pien
agade
bats
inia
vogt
soave
orbit
wiggy
cheer
rcpt
skids
jarry
dyne
rekey
haku
trust
azlon
cons
puka
alans
avile
etiam
trona
wryly
barie
holms
rugs
amal
yawny
agra
waive
ahush
nama
horae
hizz
vlach
feal
lutao
amids
boned
froom
sill
agone
natal
zincs
dagon
bunch
kiefs
clipt
stirk
donna
arias
pugh
pria
saudi
fohat
fuss
amit
iambe
larum
wraf
emyd
litre
caner
levo
penal
tyned
sero
maia
moism
jara
lyre
sink
duke
ketyl
eldin
dedd
washo
unist
julie
firs
recti
fief
abaue
maes
awide
nale
sanct
moya
cuifs
whute
snug
awest
omrah
roud
oots
glogg
plans
rason
fluor
left
welts
oyana
kerry
modoc
sodio
spit
chiot
macer
amowt
slipe
bogle
kazi
wacks
skewl
micky
gated
usque
agric
codol
yocks
oopod
lidos
camus
timbo
acana
loper
chris
crisp
lokao
blae
usara
vucom
kabel
palki
busto
kids
mikra
muggy
heave
roily
toss
lamna
eruct
celom
coble
undim
bosn
myron
delit
bossa
gursh
teel
moted
wizen
soggy
frape
reset
crest
puddy
ridge
poach
expdt
three
biffs
sari
cadet
areas
lases
scray
glar
pooch
huck
guns
boomy
thumb
susso
irena
butts
sorgo
teres
aahed
aahs
aalii
aals
aani
aargh
aaron
aaru
abac
abaca
abaci
aback
abada
abaff
abaft
abay
abaka
abama
abamp
aband
abas
abase
abash
abask
abate
abaue
abave
abaze
abba
abbas
abbe
abbey
abbes
abby
abbie
abbot
abbr
abdal
abdat
abdom
abeam
abear
abed
abede
abey
abel
abele
abend
aberr
abet
abets
abhor
abib
abide
abidi
abie
abye
abies
abyes
abilo
abime
abir
abys
abysm
abyss
abit
abkar
able
abler
ables
ablet
ably
ablow
abmho
abner
abnet
abode
abody
abohm
aboil
aboma
aboon
abord
abort
abos
abote
about
above
abow
abox
abray
abram
abret
abri
abrim
abrin
abris
abrus
absee
absey
absi
absis
absit
abuta
abstr
abuna
abune
abura
abuse
abush
abut
abuts
abuzz
abwab
acad
acale
acana
acapu
acara
acari
acast
acate
acca
acce
accel
accoy
accra
acct
accts
accum
accur
accus
aced
acedy
acer
acerb
aces
aceta
achar
ache
ached
achen
acher
aches
achy
achoo
achor
acid
acidy
acids
acier
acies
acyl
acyls
acing
acini
acis
ackee
ackey
acker
acle
aclys
aclu
acme
acmes
acmic
acne
acned
acnes
acock
acoin
acold
acoma
acone
acool
acop
acor
acorn
acost
acoup
acpt
acrab
acre
acred
acres
acrid
acryl
acroa
acron
acrux
acta
acted
actg
actin
acton
actor
actos
acts
actu
actus
acuan
acus
acute
adad
adage
adagy
adai
aday
adays
adam
adams
adapa
adapt
adar
adat
adati
adaty
adaw
adawe
adawn
adcon
adda
addax
addda
added
adder
addy
addie
addio
addis
addle
addn
addnl
addr
adds
addu
adead
adeem
adeep
adela
aden
adeps
adept
adet
adfix
adib
adiel
adieu
adin
adion
adios
adit
adyta
adits
adjag
adjt
adlai
adlay
adlet
adman
admen
admi
admin
admit
admix
admov
admrx
adnex
adobe
adobo
adod
adolf
adon
adopt
ador
adore
adorn
ados
adown
adoxa
adoxy
adoze
adpao
adrad
adret
adry
adrip
adrop
adrue
adsum
adult
adunc
adure
adusk
adust
advt
adze
adzer
adzes
aecia
aedes
aeger
aegir
aegis
aegle
aeon
aeons
aequi
aery
aeric
aerie
aero
aeron
aesc
aesir
aesop
aetat
aevia
aevum
aface
afar
afara
afars
afear
afer
affa
affy
affix
afft
afgod
afifi
afire
aflat
afley
aflow
afoam
afoot
afore
afoul
afray
afret
afric
afrit
afro
afros
after
agad
agada
agade
agag
again
agal
agama
agami
agamy
agao
agape
agar
agars
agas
agasp
agast
agata
agate
agaty
agau
agave
agaz
agaze
agba
agcy
aged
agee
agen
agena
agend
agene
agent
ayne
ager
agers
ages
aget
agete
agger
aggie
aggry
aggro
aggur
agha
aghan
aghas
agib
agiel
agile
agin
aging
agio
agios
agism
agist
agit
agla
aglee
agley
aglet
agly
aglow
agma
agmas
agnat
agnel
agnes
agnus
agog
agoge
agoho
agon
agone
agony
agons
agora
agos
agra
ainee
agrah
agral
agre
agree
agria
agric
agrin
agrom
agron
agsam
agst
agua
ague
aguey
agues
agura
agush
agust
ahab
ahead
aheap
ahey
ahem
ahems
ahet
ahind
ahint
ahir
ahmed
ahmet
ahoy
ahold
aholt
ahom
ahong
ahsan
ahull
ahum
ahunt
ahura
ahush
ahwal
ayah
ayahs
aias
aide
aided
aider
aides
aids
aiel
ayelp
ayen
ayens
aiery
ayes
aiger
aigre
ayin
ayins
aile
ailed
aylet
ailie
aillt
ayllu
ails
aimak
ayme
aimed
aimee
aimer
aims
aine
ainoi
ains
aint
ainu
ainus
aioli
aion
ayond
ayont
ayous
aira
airan
aire
ayre
aired
airer
airy
airn
airns
airs
airt
airth
airts
aisle
aitch
aith
aitis
aits
ayuyu
aiver
aivr
aiwan
aizle
ajaja
ajar
ajari
ajava
ajax
ajee
ajhar
ajiva
ajog
ajuga
akal
akala
akali
akan
akasa
akebi
aked
akee
akees
akey
akeki
akela
akene
aker
akha
akia
akim
akin
aking
akka
akkad
aknee
aknow
akov
akpek
akra
akre
akron
akule
akund
alack
alada
alae
alai
alay
alain
alaki
alala
alamo
alan
aland
alane
alang
alani
alans
alant
alap
alapa
alar
alary
alarm
alas
alate
alawi
alba
alban
albas
albe
albee
albi
albin
albyn
albs
album
albus
alca
alcae
alce
alces
alcid
alco
alcor
alday
aldea
alden
alder
aldim
aldm
aldol
aldus
alea
aleak
alec
aleck
alecs
alee
alef
alefs
aleft


2025-01-18 18:13:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 996
2025-01-18 18:13:33 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:33 - root - INFO - SQL:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
   LIMIT 1000;
Results:
Too long, hard cut:
words
roose
rcpt
rekey
rugs
recti
roud
rason
roily
reset
ridge
raad
raash
rabal
rabat
rabbi
rabi
rabic
rabid
rabin
rabot
race
raced
racer
races
rach
rache
racy
rack
racks
racon
rada
radar
radek
radii
radio
radix
radly
radon
rads
rafe
raff
raffe
raffs
rafik
raft
rafty
rafts
raga
ragas
rage
raged
ragee
rager
rages
raggy
raghu
ragi
ragis
rags
rahul
raia
raya
raiae
rayah
rayan
raias
rayas
rayat
raid
raids
rayed
raif
rail
rails
rain
rainy
rains
rayon
rais
rays
raise
raja
rajab
rajah
rajas
rajes
rajiv
rakan
rake
raked
rakee
raker
rakes
rakh
raki
rakis
rakit
raku
rale
rales
ralf
rall
rally
ralph
rals
rama
ramal
raman
rambo
rame
ramed
ramee
ramet
ramex
rami
ramie
rammi
rammy
ramon
ramp
ramps
rams
ramta
ramus
rana
ranal
rance
ranch
rand
randy
randn
rands
rane
ranee
rang
range
rangy
rani
ranid
ranis
rank
ranks
ranli
rann
ranny
rant
ranty
rants
raob
rape
raped
raper
rapes
raphe
rapic
rapid
rappe
raps
rapt
rara
rare
rarer
rasa
rase
rased
rasen
raser
rases
rash
rason
rasp
raspy
rasps
rasse
rasty
rata
ratal
ratan
ratch
rate
rated
ratel
rater
rates
rath
ratha
rathe
ratio
rato
ratos
rats
ratti
ratty
ratwa
rauk
raul
rauli
raun
raupo
rave
raved
ravel
raven
raver
raves
ravi
ravin
rawer
rawin
rawky
rawly
raws
raxed
raxes
raze
razed
razee
razer
razes
razoo
razor
razz
rcpt
rcvr
reaal
reach
react
read
readd
ready
readl
reads
reak
reaks
real
realm
reals
ream
reamy
reams
reap
reaps
rear
rearm
rears
reasy
reask
reast
reata
reave
rebab
rebag
reban
rebar
rebbe
rebec
rebed
rebeg
rebel
rebia
rebid
rebob
rebop
rebox
rebs
rebud
rebuy
rebus
rebut
recap
recce
reccy
recco
recd
recip
recit
reck
recks
recon
recpt
recs
rect
recta
recti
recto
recur
recut
redan
redd
reddy
redds
rede
reded
redes
redia
redid
redye
redig
redip
redly
redo
redos
redox
redry
reds
redub
redue
redug
redux
reed
reedy
reeds
reef
reefy
reefs
reek
reeky
reeks
reel
reels
reem
reen
rees
reese
reesk
reest
reet
reeve
refan
refed
refel
refer
reffo
refit
refix
refl
refly
refr
refry
refs
reft
regal
regd
regel
reges
reget
regga
regia
regie
regin
regle
regma
regna
rego
regr
regt
regur
rehem
rehid
rehoe
reice
reich
reid
reif
reify
reifs
reign
reim
rein
reina
reink
reins
reis
reist
reit
reive
rejig
rekey
reki
relay
relap
relax
reles
relet
rely
relic
relig
relit
relot
reman
remap
remen
remet
remex
remi
remit
remix
remop
rems
remue
remus
renay
renal
rend
rends
rendu
reneg
renes
renet
renew
renga
renig
renin
renk
renky
renn
renne
reno
rent
rente
rents
renu
reoil
reown
repad
repay
repas
repeg
repel
repen
repew
repic
repin
repl
reply
repot
repp
repps
repr
repry
repro
reps
rept
reqd
reran
reree
rerig
rerob
rerow
rerub
rerun
resay
resat
resaw
retro
resee
reset
resew
resex
resh
resid
resin
resit
resow
resp
rest
resty
restr
rests
resue
resun
resup
retag
retal
retan
retar
retax
retch
retd
rete
retem
rethe
retia
retie
retin
retip
retry
rets
reub
reuel
reune
reuse
revay
reve
revel
rever
revet
revie
revs
revue
rewan
rewax
rewed
rewet
rewin
rewon
rexen
rexes
rfree
rgen
rhamn
rhea
rheae
rheas
rheda
rheen
rheic
rhein
rhema
rheme
rheo
rhet
rheum
rhila
rhyme
rhymy
rhina
rhine
rhino
rhyta
rhoda
rhoeo
rhomb
rhos
rhumb
rhus
rial
ryal
rials
riant
ryas
riata
ribat
rybat
ribby
ribe
ribes
ribs
rice
riced
ricey
ricer
rices
rich
riche
richt
ricin
rick
ricky
ricks
ride
riden
rider
ryder
rides
ridge
ridgy
rids
riel
riels
riem
ryen
rier
ries
ryes
rife
rifer
riff
riffi
riffs
rifi
rifle
rift
rifty
rifts
riga
rigel
right
rigid
rigol
rigor
rigs
riyal
ryke
ryked
rykes
rikk
rile
riled
riley
riles
rill
rille
rilly
rills
rima
rimal
rimas
rime
ryme
rimed
rimer
rimes
rimy
rimpi
rims
rimu
rinch
rind
rynd
rinde
rindy
rinds
rynds
rine
ring
ringe
ringy
rings
rink
rinka
rinks
rins
rinse
rynt
riot
ryot
riots
ryots
ripa
ripal
ripe
rype
riped
ripen
riper
ripes
rips
ripup
rise
risen
riser
rises
rishi
risk
risky
risks
risp
risqu
riss
rist
risus
rita
rite
rites
rithe
ritsu
ritus
ritz
ritzy
riva
rival
rive
rived
rivel
riven
river
rives
rivet
rivo
rixy
rizar
roach
road
roads
roak
roam
roams
roan
roans
roar
roars
roast
robe
robed
rober
robes
robin
roble
robot
robs
robur
roche
rock
rocky
rocks
rocs
rocta
rodd
rode
rodeo
rodge
rods
roed
roey
roer
roes
rogan
roger
rogue
roguy
rohan
rohob
rohun
royal
roid
royet
roil
roily
roils
roin
royou
roist
roit
royt
rojak
roka
roke
rokee
rokey
roker
roky
role
roleo
roles
rolf
rolfe
roll
rollo
rolls
romal
roman
rome
romeo
romic
romp
rompy
romps
rompu
roms
ronco
rond
ronde
rondo
rone
rong
ronga
ronin
ronni
rood
roods
rooed
roof
roofy
roofs
rook
rooky
rooks
rool
room
roomy
rooms
roon
roop
roosa
roose
roost
root
rooti
rooty
roots
roove
rope
roped
ropey
roper
ropes
ropy
ropp
roque
roral
rori
rory
roric
rorid
rort
rorty
rosa
rosal
rose
rosed
rosel
roses
roset
roshi
rosy
rosin
ross
rota
rotal
rotan
rotas
rotch
rote
roter
rotes
rotge
roti
rotl
rotls
roto
rotor
rotos
rots
rotse
rotta
rotte
roub
roud
roue
rouen
roues
rouge
rough
rougy
rouky
roun
round
roup
roupy
roups
rous
rouse
roust
rout
route
routh
routs
roux
rove
roved
roven
rover
roves
rovet
rowan
rowdy
rowed
rowel
rowen
rower
rowet
rowy
rows
rowt
rowte
rowth

2025-01-18 18:13:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 30
2025-01-18 18:13:35 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:35 - root - INFO - SQL:
SELECT LENGTH("words") AS word_length, COUNT(*) AS frequency
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   GROUP BY LENGTH("words")
   ORDER BY word_length
   LIMIT 1000;
Results:
WORD_LENGTH,FREQUENCY
0,2
1,26
2,432
3,2153
4,7257
5,16092
6,30183
7,42385
8,52130
9,53940
10,46324
11,37916
12,29418
13,21142
14,14304
15,8935
16,5240
17,3002
18,1486
19,768
20,365
21,168
22,77
23,31
24,12
25,8
27,3
28,2
29,2
31,1

2025-01-18 18:13:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:37 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:37 - root - INFO - SQL:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE '%r%'
   LIMIT 1000;
Results:
Too long, hard cut:
words
revacate
synkaryonic
nonornamentally
cruth
arthrostomy
teparies
nonassister
redargue
thrivingness
platters
anither
eucryphiaceous
robustiously
unsparse
poliorcetics
parmelioid
exulceratory
orthogneiss
reabbreviated
urbana
moorpan
gyrovague
sermonesque
rizzar
enharden
disrupt
perturb
carreton
scrammed
septembral
trainsickness
unoratorically
uncontributive
greediness
prescriptively
superannuity
springer
regardance
turbiths
recursing
pertinence
murph
importuner
archmarshal
panspermic
bravadoing
martineta
graphiter
ascaricide
heterotype
parabranchial
chlamydosporic
snapdragon
singarip
bravely
carburetant
nonrelation
quarreling
overwily
enfetters
peppercorns
undetractingly
electorship
interpolation
temporaries
sunderable
preadmiring
softhearted
knottier
grapelet
hirudinea
coronillin
unbrooded
tzardom
sesquitertia
supraspinous
honourably
enregistry
prediphtheritic
macrobiote
subfrontally
mulattress
cribrate
superseded
intervaling
corrasive
resider
demonolater
derogated
interlobate
bedraggled
rejuvenated
alvearies
archworker
nonpartizan
pyraloid
krater
vituperation
unresemblant
paradrops
maldistribute
nonphilanthropic
coruscative
neurasthenics
chrysididae
parodontium
entreasuring
contouring
parallelepiped
monotrochian
predaylight
bookholder
sugarcoated
unsmothered
requalified
overseen
nitre
idololatrical
prexies
trebuchet
scorser
forebitt
reclassification
mixochromosome
friskiest
whizzers
nonpredatory
borofluoride
spheroidicity
crapette
trisulphid
relator
infiltering
utricle
madrilenian
prairies
idrialine
perspiratory
spiralization
teledendrite
pradeep
recrimination
percontation
organoscopy
serviteur
harangue
freddie
singulars
unrecognized
distrustingly
reintroducing
heliograph
overoxidized
psychorhythmic
recidivists
everyman
amphispermous
yellowbark
repoint
arborize
unpretty
churching
valetudinaries
idolisers
resellers
wristwork
underscribe
unresentfulness
imperii
preacquisitiveness
narcos
draconic
prizers
praetextae
dueller
prowfish
polyarthritic
spiritualistically
overswarth
proathletic
caryophyllous
moniker
betraying
odorized
ruminate
insphering
vicar
pseudolegendary
revisualization
discourteousness
turwar
razzia
warcraft
unstrong
missmark
realia
enarched
superinitiative
orleanist
worshipers
rowelhead
anaxagorean
traily
novemperfoliate
retenant
partheniad
somatotropism
jokers
enchasers
croupon
bestraddle
castorite
trinocular
erinys
stringent
slabber
aphrodisia
impostures
chagrinning
nongraphitic
grassie
philosophaster
trichonotid
sphenopetrosal
carrageenan
perries
cockalorum
undercap
quadrantly
garishly
troffer
explainer
laryngalgia
amphierotic
shuddered
chairmender
phosphoglycoprotein
vulturewise
aminobarbituric
plectrons
peristele
achromacyte
bronchiocele
satirised
grantia
overcommonly
manswear
imported
fearedly
tocharic
timider
metamorphic
anticonfederationism
neuronal
fractionalize
furbish
surbed
pluralised
forestery
gravitationally
rob
bourasque
commissionaire
intercommunication
bockeret
paradisia
bringers
surma
tentered
dehydrogeniser
perf
runnel
agglutinator
estramazone
gorbit
crankless
averia
roose
supergratified
banderma
intrenchment
garrigue
readjuster
sphere
smorgasbords
tubercularized
genitor
mahsur
adorableness
irreducibly
hammochrysos
megatheriidae
foreseeability
ungraceful
capriote
precompliance
moderation
unsecuredness
postdepressive
superguarantee
earthgall
dreigh
overplenteousness
pretarsi
grouze
precondensing
nonseraphically
luminaries
immatureness
familiarly
accouters
tarrish
presatisfaction
thitherwards
horouta
strategetical
prastha
porteress
endocrania
schnauzer
nookeries
parens
preinduce
crystal
decompressing
restrainable
constabulary
blunderbuss
marantaceous
crowhopper
retrocession
cosmotron
retrogress
rutilant
suprastate
microelectronic
hydroid
prides
rhinosporidium
prizes
propleural
birdie
infraprotein
roosevelt
irreductibility
unsepulchral
coarseness
mouchardism
humerals
unstarting
complexer
geniture
renourishment
ebricty
asternal
multinervate
husher
hypothermia
larceny
groset
willyer
supersystem
arsenicalism
germanious
carbureter
perulate
carbonylated
crubeen
mesomorphy
harrovian
sofar
sparkleberry
hederiform
overzeals
deciliter
thirsters
protectorial
nonvaporously
ropeways
irrespirable
unscarved
praezygapophysis
cartularies
hypochondriacism
forletting
teer
infrustrably
normalist
paracarmine
hacklers
tetramethylene
elrage
agronomies
frowned
elicitory
serrated
revetoed
akhara
interanimated
nonmicrobic
aerobacters
enterosepsis
chunner
peridermium
ozocerite
disrober
doctrix
cormorant
dactylographic
tiderips
replaceability
hemiapraxia
presumers
uncredibly
tradesmanlike
tinworking
confuter
trammelhead
gustier
unresourcefully
barrister
weatherhead
redheadedly
cardiotherapies
deprograms
albertype
perispherical
geomoroi
backfriend
disinherited
percompound
forget
maitrise
withertip
nonodoriferous
fibromyectomy
futharks
evaporating
outforth
orbit
vespiform
uncreatively
fibroses
pervigilium
nonloxodromic
speronares
gastroesophageal
increep
numerist
insuree
cheer
merging
hexagrammos
qurus

2025-01-18 18:13:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:38 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:39 - root - INFO - SQL:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   ORDER BY "words"
   LIMIT 1000;
Results:
Too long, hard cut:
words
""
""
FALSE
TRUE
a
aa
aaa
aah
aahed
aahing
aahs
aal
aalii
aaliis
aals
aam
aani
aardvark
aardvarks
aardwolf
aardwolves
aargh
aaron
aaronic
aaronical
aaronite
aaronitic
aarrgh
aarrghh
aaru
aas
aasvogel
aasvogels
ab
aba
ababdeh
ababua
abac
abaca
abacas
abacate
abacaxi
abacay
abaci
abacinate
abacination
abacisci
abaciscus
abacist
aback
abacli
abacot
abacterial
abactinal
abactinally
abaction
abactor
abaculi
abaculus
abacus
abacuses
abada
abaddon
abadejo
abadengo
abadia
abadite
abaff
abaft
abaisance
abaised
abaiser
abaiser
abaisse
abaissed
abaka
abakas
abalation
abalienate
abalienated
abalienating
abalienation
abalone
abalones
abama
abamp
abampere
abamperes
abamps
aband
abandon
abandonable
abandoned
abandonedly
abandonee
abandoner
abandoners
abandoning
abandonment
abandonments
abandons
abandum
abanet
abanga
abanic
abannition
abantes
abapical
abaptiston
abaptistum
abarambo
abaris
abarthrosis
abarticular
abarticulation
abas
abase
abased
abasedly
abasedness
abasement
abasements
abaser
abasers
abases
abasgi
abash
abashed
abashedly
abashedness
abashes
abashing
abashless
abashlessly
abashment
abashments
abasia
abasias
abasic
abasing
abasio
abask
abassi
abassin
abastard
abastardize
abastral
abatable
abatage
abate
abated
abatement
abatements
abater
abater
abaters
abates
abatic
abating
abatis
abatised
abatises
abatjour
abatjours
abaton
abator
abators
abattage
abattis
abattised
abattises
abattoir
abattoirs
abattu
abattue
abatua
abature
abaue
abaue
abave
abaxial
abaxile
abay
abayah
abaze
abb
abba
abbacies
abbacomes
abbacy
abbadide
abbandono
abbas
abbasi
abbasid
abbassi
abbasside
abbate
abbatial
abbatical
abbatie
abbaye
abbe
abbes
abbess
abbesses
abbest
abbevillian
abbey
abbeys
abbeystead
abbeystede
abbie
abboccato
abbogada
abbot
abbotcies
abbotcy
abbotnullius
abbotric
abbots
abbotship
abbotships
abbott
abbozzo
abbr
abbrev
abbreviatable
abbreviate
abbreviated
abbreviately
abbreviates
abbreviating
abbreviation
abbreviations
abbreviator
abbreviators
abbreviatory
abbreviature
abbroachment
abby
abc
abcess
abcissa
abcoulomb
abd
abdal
abdali
abdaria
abdat
abderian
abderite
abdest
abdicable
abdicant
abdicate
abdicated
abdicates
abdicating
abdication
abdications
abdicative
abdicator
abdiel
abditive
abditory
abdom
abdomen
abdomens
abdomina
abdominal
abdominales
abdominalia
abdominalian
abdominally
abdominals
abdominoanterior
abdominocardiac
abdominocentesis
abdominocystic
abdominocystic
abdominogenital
abdominohysterectomy
abdominohysterotomy
abdominoposterior
abdominoscope
abdominoscopy
abdominothoracic
abdominous
abdominovaginal
abdominovesical
abduce
abduced
abducens
abducent
abducentes
abduces
abducing
abduct
abducted
abducting
abduction
abductions
abductor
abductores
abductors
abducts
abe
abeam
abear
abearance
abecedaire
abecedaria
abecedarian
abecedarians
abecedaries
abecedarium
abecedarius
abecedary
abed
abede
abedge
abegge
abeigh
abel
abele
abeles
abelia
abelian
abelicea
abelite
abelmoschus
abelmosk
abelmosks
abelmusk
abelonian
abeltree
abencerrages
abend
abends
abenteric
abepithymia
aberdavine
aberdeen
aberdevine
aberdonian
aberduvine
aberia
abernethy
aberr
aberrance
aberrancies
aberrancy
aberrant
aberrantly
aberrants
aberrate
aberrated
aberrating
aberration
aberrational
aberrations
aberrative
aberrator
aberrometer
aberroscope
aberuncate
aberuncator
abesse
abessive
abet
abetment
abetments
abets
abettal
abettals
abetted
abetter
abetters
abetting
abettor
abettors
abevacuation
abey
abeyance
abeyances
abeyancies
abeyancy
abeyant
abfarad
abfarads
abhenries
abhenry
abhenrys
abhinaya
abhiseka
abhominable
abhor
abhorred
abhorrence
abhorrences
abhorrency
abhorrent
abhorrently
abhorrer
abhorrers
abhorrible
abhorring
abhors
abhorson
abib
abichite
abidal
abidance
abidances
abidden
abide
abided
abided
abider
abiders
abides
abidi
abiding
abidingly
abidingness
abie
abiegh
abience
abient
abies
abietate
abietene
abietic
abietin
abietineae
abietineous
abietinic
abietite
abiezer
abigail
abigails
abigailship
abigeat
abigei
abigeus
abilao
abilene
abiliment
abilitable
abilities
ability
abilla
abilo
abime
abintestate
abiogeneses
abiogenesis
abiogenesist
abiogenetic
abiogenetical
abiogenetically
abiogenist
abiogenous
abiogeny
abiological
abiologically
abiology
abioses
abiosis
abiotic
abiotical
abiotically
abiotrophic
abiotrophy
abipon
abir
abirritant
abirritate
abirritated
abirritating
abirritation
abirritative
abiston
abit
abitibi
abiuret
abject
abjectedness
abjection
abjections
abjective
abjectly
abjectness
abjoint
abjudge
abjudged
abjudging
abjudicate
abjudicated
abjudicating
abjudication
abjudicator
abjugate
abjunct
abjunction
abjunctive
abjuration
abjurations
abjuratory
abjure
abjured
abjurement
abjurer
abjurers
abjures
abjuring
abkar
abkari
abkary
abkhas
abkhasian
abl
ablach
ablactate
ablactated
ablactating
ablactation
ablaqueate
ablare
ablastemic
ablastin
ablastous
ablate
ablated
ablates
ablating
ablation
ablations
ablatitious
ablatival
ablative
ablatively
ablatives
ablator
ablaut
ablauts
ablaze
able
ableeze
ablegate
ablegates
ablegati

2025-01-18 18:13:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-18 18:13:40 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:40 - root - INFO - SQL:
SELECT DISTINCT SUBSTRING("words", 1, 1) AS first_letter
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   ORDER BY first_letter
   LIMIT 1000;
Results:
FIRST_LETTER
""
F
T
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

2025-01-18 18:13:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 308
2025-01-18 18:13:42 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:42 - root - INFO - SQL:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%' AND LENGTH("words") = 4
   LIMIT 1000;
Results:
words
rcpt
rugs
roud
raad
rabi
race
rach
racy
rack
rada
rads
rafe
raff
raft
raga
rage
ragi
rags
raia
raya
raid
raif
rail
rain
rais
rays
raja
rake
rakh
raki
raku
rale
ralf
rall
rals
rama
rame
rami
ramp
rams
rana
rand
rane
rang
rani
rank
rann
rant
raob
rape
raps
rapt
rara
rare
rasa
rase
rash
rasp
rata
rate
rath
rato
rats
rauk
raul
raun
rave
ravi
raws
raze
razz
rcpt
rcvr
read
reak
real
ream
reap
rear
rebs
recd
reck
recs
rect
redd
rede
redo
reds
reed
reef
reek
reel
reem
reen
rees
reet
refl
refr
refs
reft
regd
rego
regr
regt
reid
reif
reim
rein
reis
reit
reki
rely
remi
rems
rend
renk
renn
reno
rent
renu
repl
repp
repr
reps
rept
reqd
resh
resp
rest
retd
rete
rets
reub
reve
revs
rgen
rhea
rheo
rhet
rhos
rhus
rial
ryal
ryas
ribe
ribs
rice
rich
rick
ride
rids
riel
riem
ryen
rier
ries
ryes
rife
riff
rifi
rift
riga
rigs
ryke
rikk
rile
rill
rima
rime
ryme
rimy
rims
rimu
rind
rynd
rine
ring
rink
rins
rynt
riot
ryot
ripa
ripe
rype
rips
rise
risk
risp
riss
rist
rita
rite
ritz
riva
rive
rivo
rixy
road
roak
roam
roan
roar
robe
robs
rock
rocs
rodd
rode
rods
roed
roey
roer
roes
roid
roil
roin
roit
royt
roka
roke
roky
role
rolf
roll
rome
romp
roms
rond
rone
rong
rood
roof
rook
rool
room
roon
roop
root
rope
ropy
ropp
rori
rory
rort
rosa
rose
rosy
ross
rota
rote
roti
rotl
roto
rots
roub
roud
roue
roun
roup
rous
rout
roux
rove
rowy
rows
rowt
roxy
rsum
rsvp
rube
ruby
rubs
ruck
rudd
rude
rudy
rued
ruen
ruer
rues
ruff
ruga
rugs
ruin
rukh
rule
ruly
rull
rumb
rume
rump
rums
rune
rung
runs
runt
rupa
ruru
rusa
ruse
rush
rusk
russ
rust
ruta
ruth
ruts

2025-01-18 18:13:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 688
2025-01-18 18:13:43 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:44 - root - INFO - SQL:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE 'r%' AND LENGTH("words") = 5
    LIMIT 1000;
Results:
words
roose
rekey
recti
rason
roily
reset
ridge
raash
rabal
rabat
rabbi
rabic
rabid
rabin
rabot
raced
racer
races
rache
racks
racon
radar
radek
radii
radio
radix
radly
radon
raffe
raffs
rafik
rafty
rafts
ragas
raged
ragee
rager
rages
raggy
raghu
ragis
rahul
raiae
rayah
rayan
raias
rayas
rayat
raids
rayed
rails
rainy
rains
rayon
raise
rajab
rajah
rajas
rajes
rajiv
rakan
raked
rakee
raker
rakes
rakis
rakit
rales
rally
ralph
ramal
raman
rambo
ramed
ramee
ramet
ramex
ramie
rammi
rammy
ramon
ramps
ramta
ramus
ranal
rance
ranch
randy
randn
rands
ranee
range
rangy
ranid
ranis
ranks
ranli
ranny
ranty
rants
raped
raper
rapes
raphe
rapic
rapid
rappe
rarer
rased
rasen
raser
rases
rason
raspy
rasps
rasse
rasty
ratal
ratan
ratch
rated
ratel
rater
rates
ratha
rathe
ratio
ratos
ratti
ratty
ratwa
rauli
raupo
raved
ravel
raven
raver
raves
ravin
rawer
rawin
rawky
rawly
raxed
raxes
razed
razee
razer
razes
razoo
razor
reaal
reach
react
readd
ready
readl
reads
reaks
realm
reals
reamy
reams
reaps
rearm
rears
reasy
reask
reast
reata
reave
rebab
rebag
reban
rebar
rebbe
rebec
rebed
rebeg
rebel
rebia
rebid
rebob
rebop
rebox
rebud
rebuy
rebus
rebut
recap
recce
reccy
recco
recip
recit
recks
recon
recpt
recta
recti
recto
recur
recut
redan
reddy
redds
reded
redes
redia
redid
redye
redig
redip
redly
redos
redox
redry
redub
redue
redug
redux
reedy
reeds
reefy
reefs
reeky
reeks
reels
reese
reesk
reest
reeve
refan
refed
refel
refer
reffo
refit
refix
refly
refry
regal
regel
reges
reget
regga
regia
regie
regin
regle
regma
regna
regur
rehem
rehid
rehoe
reice
reich
reify
reifs
reign
reina
reink
reins
reist
reive
rejig
rekey
relay
relap
relax
reles
relet
relic
relig
relit
relot
reman
remap
remen
remet
remex
remit
remix
remop
remue
remus
renay
renal
rends
rendu
reneg
renes
renet
renew
renga
renig
renin
renky
renne
rente
rents
reoil
reown
repad
repay
repas
repeg
repel
repen
repew
repic
repin
reply
repot
repps
repry
repro
reran
reree
rerig
rerob
rerow
rerub
rerun
resay
resat
resaw
retro
resee
reset
resew
resex
resid
resin
resit
resow
resty
restr
rests
resue
resun
resup
retag
retal
retan
retar
retax
retch
retem
rethe
retia
retie
retin
retip
retry
reuel
reune
reuse
revay
revel
rever
revet
revie
revue
rewan
rewax
rewed
rewet
rewin
rewon
rexen
rexes
rfree
rhamn
rheae
rheas
rheda
rheen
rheic
rhein
rhema
rheme
rheum
rhila
rhyme
rhymy
rhina
rhine
rhino
rhyta
rhoda
rhoeo
rhomb
rhumb
rials
riant
riata
ribat
rybat
ribby
ribes
riced
ricey
ricer
rices
riche
richt
ricin
ricky
ricks
riden
rider
ryder
rides
ridge
ridgy
riels
rifer
riffi
riffs
rifle
rifty
rifts
rigel
right
rigid
rigol
rigor
riyal
ryked
rykes
riled
riley
riles
rille
rilly
rills
rimal
rimas
rimed
rimer
rimes
rimpi
rinch
rinde
rindy
rinds
rynds
ringe
ringy
rings
rinka
rinks
rinse
riots
ryots
ripal
riped
ripen
riper
ripes
ripup
risen
riser
rises
rishi
risky
risks
risqu
risus
rites
rithe
ritsu
ritus
ritzy
rival
rived
rivel
riven
river
rives
rivet
rizar
roach
roads
roams
roans
roars
roast
robed
rober
robes
robin
roble
robot
robur
roche
rocky
rocks
rocta
rodeo
rodge
rogan
roger
rogue
roguy
rohan
rohob
rohun
royal
royet
roily
roils
royou
roist
rojak
rokee
rokey
roker
roleo
roles
rolfe
rollo
rolls
romal
roman
romeo
romic
rompy
romps
rompu
ronco
ronde
rondo
ronga
ronin
ronni
roods
rooed
roofy
roofs
rooky
rooks
roomy
rooms
roosa
roose
roost
rooti
rooty
roots
roove
roped
ropey
roper
ropes
roque
roral
roric
rorid
rorty
rosal
rosed
rosel
roses
roset
roshi
rosin
rotal
rotan
rotas
rotch
roter
rotes
rotge
rotls
rotor
rotos
rotse
rotta
rotte
rouen
roues
rouge
rough
rougy
rouky
round
roupy
roups
rouse
roust
route
routh
routs
roved
roven
rover
roves
rovet
rowan
rowdy
rowed
rowel
rowen
rower
rowet
rowte
rowth
rowty
roxie
rozum
ruach
ruana
rubby
rubes
rubia
rubin
ruble
rubor
rubus
ruche
rucky
rucks
rudas
ruddy
rudds
ruder
rudge
ruely
ruers
ruffe
ruffs
rufus
rugae
rugal
rugby
ruggy
ruing
ruins
ruled
ruler
rules
rumal
ruman
rumba
rumbo
rumen
rumex
rumly
rummy
rumor
rumpy
rumps
runby
runch
rundi
runed
runer
runes
rungs
runic
runny
runsy
runty
runts
rupee
rupia
rupie
rural
ruses
rushy
rusin
rusky
rusks
rusma
rusot
russe
rusty
rusts
rutch
ruths
rutic
rutyl
rutin
rutty
ruvid

2025-01-18 18:13:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:45 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:46 - root - INFO - SQL:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") = 4 AND "words" <> 'read'
    LIMIT 1000;
Results:
Too long, hard cut:
words
yuca
yeti
ammu
hebe
koso
fold
cats
inca
ccid
lind
kops
ezod
perf
asok
hest
anay
fiot
scog
liin
xeme
teer
lamb
pien
bats
inia
vogt
rcpt
dyne
haku
cons
puka
rugs
amal
agra
nama
hizz
feal
sill
pugh
pria
fuss
amit
wraf
emyd
levo
sero
maia
jara
lyre
sink
duke
dedd
firs
fief
maes
nale
moya
snug
roud
oots
left
spit
kazi
blae
kids
toss
bosn
teel
sari
glar
huck
guns
aahs
aals
aani
aaru
abac
abay
abas
abba
abbe
abby
abbr
abed
abey
abel
abet
abib
abie
abye
abir
abys
abit
able
ably
abos
abow
abox
abri
absi
abut
acad
acca
acce
acct
aced
acer
aces
ache
achy
acid
acyl
acis
acle
aclu
acme
acne
acop
acor
acpt
acre
acta
actg
acts
actu
acus
adad
adai
aday
adam
adar
adat
adaw
adda
addy
addn
addr
adds
addu
aden
adet
adib
adin
adit
adjt
admi
adod
adon
ador
ados
adry
advt
adze
aeon
aery
aero
aesc
afar
afer
affa
affy
afft
afro
agad
agag
agal
agao
agar
agas
agau
agaz
agba
agcy
aged
agee
agen
ayne
ager
ages
aget
agha
agib
agin
agio
agit
agla
agly
agma
agog
agon
agos
agra
agre
agst
agua
ague
ahab
ahey
ahem
ahet
ahir
ahoy
ahom
ahum
ayah
aias
aide
aids
aiel
ayen
ayes
ayin
aile
ails
ayme
aims
aine
ains
aint
ainu
aion
aira
aire
ayre
airy
airn
airs
airt
aith
aits
aivr
ajar
ajax
ajee
ajog
akal
akan
aked
akee
akey
aker
akha
akia
akim
akin
akka
akov
akra
akre
alae
alai
alay
alan
alap
alar
alas
alba
albe
albi
albs
alca
alce
alco
aldm
alea
alec
alee
alef
alem
alen
ales
alew
alex
alfa
alga
algy
alia
alya
alif
alii
alin
alit
alix
alky
alle
ally
allo
alls
alma
alme
alms
alod
aloe
alop
alow
alps
also
alto
alts
alum
alur
amah
amay
amal
amar
amas
amba
ambe
ambo
amdt
amel
amen
amex
amia
amic
amid
amie
amil
amyl
amin
amir
amis
amit
amla
amli
amma
ammi
ammo
ammu
amoy
amok
amor
amos
amps
amra
amus
anay
anal
anam
anan
anas
anat
anax
anba
anda
ande
andi
andy
ands
anes
anet
anew
anga
ango
anil
anim
anis
ankh
anna
anne
anni
anno
anoa
anon
anre
ansa
ansi
ansu
anta
ante
anti
ants
antu
anus
aoli
aoul
apay
apar
aped
aper
apes
apex
apii
apio
apis
apod
appd
appl
apus
appt
apse
apts
aqua
aquo
arab
arad
arak
arar
arba
arbs
arca
arch
arco
arcs
ardu
area
ared
areg
aren
ares
aret
arew
argh
argo
aria
arya
arid
aril
aryl
arks
arle
army
arms
arna
arne
arni
arow
arri
arry
arse
arte
arty
arts
arui
arum
arvo
asak
asap
asci
asea
asem
asgd
asha
ashy
asia
askr
asks
asok
asop
asor
aspy
asps
asse
assi
assn
asst
asta
astr
atap
atar
ated
atef
aten
ates
atik
atip
atis
atka
atle
atli
atma
atmo
atom
atop
atry
atta
atte
atty
attn
atua
atwo
aube
auca
auge
augh
auks
aula
auld
aulu
aune
aunt
aura
ausu
aute
auth
auto
aval
avar
avdp
aver
aves
avid
avie
avis
avys
avoy
avos
avow
awag
away
awan
awat
awed
awee
awes
awfu
awin
awls
awny
awns
awol
awry
axal
axed
axel
axer
axes
axil
axin
axis
axle
axon
azan
azha
azon
azox
baal
baar
baas
baba
babe
babi
baby
babs
babu
bach
back
bact
bade
bads
bael
baff
baft
baga
bagh
bago
bags
baho
baht
baya
bail
bain
bais
bays
bait
bayz
baja
baka
bake
baku
bala
bald
bale
bali
balk
ball
balm
balr
bals
balt
balu
bams
bana
banc
band
bane
bang
bani
bank
bans
bant
bapt
bara
barb
bard
bare
barf
bari
bark
barm
barn
barr
bars
bart
baru
base
bash
bask
bass
bast
bate
bath
bats
batt
batz
baud
bauk
baul
baun
bawd
bawl
bawn
baze
bbls
bchs
bdft
bdle
bdls
bdrm
bead
beak
beal
beam
bean
bear
beat
beau
beck
bede
beds
beef
beek
been
beep
beer
bees
beet
bego
begs
behn
beid
bein
beys
beja
bela
beld
bely
belk
bell
bels
belt
bema
beme
bena
bend
bene
beng
beni
benj
benn
beno
bens
bent
benu
bere
berg
beri
berk
berm
bern
bert
besa
bess
best
beta
bete
beth
bets
bevy
bhar
bhat
bhil
bhoy
bhut
bias
bibb
bibi
bibl
bibs
bice
bick
bide
bidi
bids
byee
bien
bier
byes
biff
biga
bigg
bygo
bija
bike
bikh
bile
bilk
bill
bilo
bima
bind
bine
bing
binh
bini
bink
bino
bins
bint
biod
biog
biol
bion
byon
bios
bird
byre
biri
birk
birl
byrl
birn
birr
birt
bise
bish
bisk
byss
bist
bite
byte
byth
biti
bito
bits
bitt
biwa
bixa
bize
bizz
bkcy
bkgd
bklr
bkpr
bkpt
blab
blad
blae
blah
blay
blam
blan
blas
blat
blaw
bldg
bldr
blea
bleb
bled
blee
bleo
blet
bleu
blew
blin
bois
blip
blit
blob
bloc
blok
blot
blow
blub
blue
blup
blur
blvd
boar
boas
boat
boba
bobo
bobs
boca
boce
bock
bode
body
bodo
bods
boer
boff
boga
bogy
bogo
bogs
boho
boid
boyd
boyg
boii
boil
boyo
boys
bojo
boke
boko
bola
bold
bole
bolk
boll
bolo
bolt
boma
bomb
bomi
bona
bond
bone
bong
boni
bony
bonk
bono
bons
boob
bood
boof
book
bool
boom
boon
boor
boos
boot
bops
bora
bord
bore
borg
borh
bori
born
boro
bors
bort
bosc
bose
bosh
bosk
bosn
boss
bota
bote
both
boti
bots
bott
boud
bouk
boul
boun
bour
bout
bouw
bove
bowe
bowk
bowl
bown
bows
boxy
boza
bozo
brab
brad
brae
brag
bray
bram
bran
bras
brat
braw
bred
bree
brei
brey
bren
bret
brev
brew
brid
brie
brig
brim
brin
brio
brit
brob
brod
brog
broo
bros
brot
brow
brrr
brum
brut
bskt
btry
bual
buat
buba
bube
bubo
bubs
buds
buck
buda
bude
budh
buff
bufo
bugi
bugs
buhl
buhr
buys
bukh
bulb
bulk
bull
bult
bumf
bump
bums
buna
bund
bung
bunk
bunn
buns
bunt
buoy
bura
burd
bure
burg
burh
buri
bury
burk
burl
burn
buro
burp
burr
burs
burt
bush
busy
busk
buss
bust
bute
buts
butt
buzz
caam
caba
cabs
caca
cace
caci
cack

2025-01-18 18:13:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 18:13:47 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:47 - root - INFO - SQL:
SELECT COUNT(*) AS total_r_words
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE 'r%'
    LIMIT 1000;
Results:
TOTAL_R_WORDS
16942

2025-01-18 18:13:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:13:49 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:13:49 - root - INFO - SQL:
SELECT "words", REVERSE("words") AS reversed_word
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    LIMIT 1000;
Results:
Too long, hard cut:
words,REVERSED_WORD
cannach,hcannac
ouistitis,sititsiuo
revacate,etacaver
voivod,doviov
synkaryonic,cinoyraknys
nonornamentally,yllatnemanronon
noncontaminable,elbanimatnocnon
cruth,hturc
collegiugia,aiguigelloc
arthrostomy,ymotsorhtra
teparies,seirapet
nonassister,retsissanon
redargue,eugrader
thrivingness,ssengnivirht
platters,srettalp
nunting,gnitnun
callipygian,naigypillac
yuca,acuy
anither,rehtina
eucryphiaceous,suoecaihpyrcue
robustiously,ylsuoitsubor
unsparse,esrapsnu
poliorcetics,scitecroilop
parmelioid,dioilemrap
exulceratory,yrotarecluxe
lymphomata,atamohpmyl
unhomelike,ekilemohnu
solemnifying,gniyfinmelos
sentimentalism,msilatnemitnes
epiblastic,citsalbipe
orthogneiss,ssiengohtro
reabbreviated,detaiverbbaer
insubduable,elbaudbusni
boxwood,doowxob
linefeeds,sdeefenil
thewlike,ekilweht
urbana,anabru
bufflehead,daehelffub
conciliations,snoitailicnoc
nobilitate,etatilibon
unwithstood,dootshtiwnu
moorpan,naproom
gases,sesag
ftncmd,dmcntf
subducing,gnicudbus
gyrovague,eugavoryg
sermonesque,euqsenomres
zingiest,tseigniz
alvina,anivla
rizzar,razzir
noncomicality,ytilacimocnon
iotized,dezitoi
enharden,nedrahne
disrupt,tpursid
psellism,msillesp
bestowing,gniwotseb
perturb,brutrep
undistinguishedness,ssendehsiugnitsidnu
carreton,noterrac
oddities,seitiddo
mindsight,thgisdnim
culpableness,ssenelbapluc
scrammed,demmarcs
lautitious,suoititual
septembral,larbmetpes
trainsickness,ssenkcisniart
unoratorically,yllacirotaronu
uncontributive,evitubirtnocnu
mobilian,nailibom
summit,timmus
greediness,ssenideerg
prescriptively,ylevitpircserp
phonomania,ainamonohp
superannuity,ytiunnarepus
polysomatous,suotamosylop
springer,regnirps
regardance,ecnadrager
turbiths,shtibrut
paulinism,msiniluap
planeta,atenalp
aconin,ninoca
recursing,gnisrucer
pertinence,ecnenitrep
idolising,gnisilodi
murph,hprum
importuner,renutropmi
archmarshal,lahsramhcra
panspermic,cimrepsnap
oscan,nacso
steamfitting,gnittifmaets
ulmaceous,suoecamlu
wingseed,deesgniw
culicifuge,eguficiluc
saeta,ateas
bravadoing,gniodavarb
yeti,itey
unsagging,gniggasnu
nonintelligence,ecnegilletninon
acquisitively,ylevitisiuqca
martineta,atenitram
graphiter,retihparg
ascaricide,ediciracsa
demantoid,diotnamed
boleite,etielob
heterotype,epytoreteh
gal,lag
jehovist,tsivohej
parabranchial,laihcnarbarap
goldenmouth,htuomnedlog
nonincandescence,ecnecsednacninon
chlamydosporic,ciropsodymalhc
diphosphate,etahpsohpid
snapdragon,nogardpans
paleozoic,ciozoelap
singarip,piragnis
unsewn,nwesnu
tacketed,detekcat
bravely,ylevarb
pocul,lucop
carburetant,tnaterubrac
nonrelation,noitalernon
nutmeats,staemtun
quarreling,gnilerrauq
overwily,yliwrevo
douses,sesuod
temptsome,emostpmet
diamegnetism,msitengemaid
enfetters,srettefne
peppercorns,snrocreppep
undetractingly,ylgnitcartednu
epitomization,noitazimotipe
electorship,pihsrotcele
interpolation,noitalopretni
temporaries,seiraropmet
anemonal,lanomena
sunderable,elbarednus
preadmiring,gnirimdaerp
softhearted,detraehtfos
fanneling,gnilennaf
wapacut,tucapaw
maxillas,sallixam
knottier,reittonk
grapelet,teleparg
hirudinea,aenidurih
babyhoods,sdoohybab
saxophonists,stsinohpoxas
vaginoplasty,ytsalponigav
coronillin,nillinoroc
ammu,umma
unbrooded,dedoorbnu
oedicnemus,sumencideo
tzardom,modrazt
sesquitertia,aitretiuqses
supraspinous,suonipsarpus
honourably,ylbaruonoh
psiloi,iolisp
enregistry,yrtsigerne
prediphtheritic,citirehthpiderp
stabilization,noitazilibats
sensitivist,tsivitisnes
macrobiote,etoiborcam
motacillid,dillicatom
dhotee,eetohd
subfrontally,yllatnorfbus
mulattress,sserttalum
hebe,ebeh
suspicable,elbacipsus
filches,sehclif
localisation,noitasilacol
phyllosoma,amosollyhp
unmolesting,gnitselomnu
baetylic,cilyteab
oncologist,tsigolocno
bispinose,esonipsib
diaspine,enipsaid
standings,sgnidnats
cribrate,etarbirc
semibiological,lacigoloibimes
superseded,dedesrepus
mislin,nilsim
intervaling,gnilavretni
imbue,eubmi
lineally,yllaenil
nepit,tipen
amiantuses,sesutnaima
anoscopy,ypocsona
epichile,elihcipe
cannellated,detallennac
tetany,ynatet
corrasive,evisarroc
resider,rediser
abdominocystic,citsyconimodba
inlooking,gnikoolni
mopstick,kcitspom
demonolater,retalonomed
spics,scips
derogated,detagored
koso,osok
steamboatmen,nemtaobmaets
disemploys,syolpmesid
nonsanction,noitcnasnon
interlobate,etabolretni
bedraggled,delggardeb
limnobiological,lacigoloibonmil
megalopidae,eadipolagem
rejuvenated,detanevujer
alvearies,seiraevla
archworker,rekrowhcra
ascendent,tnednecsa
nonpartizan,nazitrapnon
xanthione,enoihtnax
lapactic,citcapal
pyraloid,diolaryp
krater,retark
nonsanctimoniously,ylsuoinomitcnasnon
vituperation,noitareputiv
japanophile,elihponapaj
typifies,seifipyt
unresemblant,tnalbmesernu
paradrops,spordarap
clovene,enevolc
insinuativeness,ssenevitaunisni
unblaming,gnimalbnu
maldistribute,etubirtsidlam
foeniculum,mulucineof
nonphilanthropic,ciporhtnalihpnon
coruscative,evitacsuroc
monkly,ylknom
blasties,seitsalb
wm,mw
navigableness,ssenelbagivan
neurasthenics,scinehtsaruen
chrysididae,eadidisyrhc
parodontium,muitnodorap
entreasuring,gnirusaertne
cont

2025-01-18 18:13:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:13:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:13:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:13:50 - snowflake.connector.connection - INFO - closed
2025-01-18 18:13:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:14:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:14:30 - root - INFO - The error message indicates that your SQL database does not recognize the function `STRING_TO_ARRAY`. This function might not be available in your SQL dialect or database system. To achieve your goal of sorting the letters of each word, you can use alternative functions that are supported in your database.

**Possible Solution:**

Assuming you're using a database like Snowflake, you can use the `SPLIT` function instead of `STRING_TO_ARRAY`. The `SPLIT` function can split a string into an array based on a specified delimiter.

However, since splitting a word into individual characters requires splitting on an empty string (`''`), and some databases do not support an empty string as a delimiter in the `SPLIT` function, we can use regular expressions to achieve the desired result.

Here's how you can modify your query:

```sql
WITH words_with_sorted_letters AS (
    SELECT
        w."words",
        ARRAY_TO_STRING(ARRAY_SORT(LISTAGG(ch.value, '') WITHIN GROUP (ORDER BY ch.seq)), '') AS sorted_letters
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST" w,
        LATERAL FLATTEN(input => REGEXP_SPLIT_TO_ARRAY(w."words", '')) ch
    GROUP BY w."words"
)
SELECT "words", sorted_letters
FROM words_with_sorted_letters
LIMIT 1000;
```

**Explanation:**

1. **Split Words into Characters:**

   - Use `REGEXP_SPLIT_TO_ARRAY(w."words", '')` to split each word into an array of individual characters.

2. **Flatten the Array:**

   - Use `LATERAL FLATTEN` to convert the array of characters into rows, enabling us to work with each character individually.

3. **Aggregate and Sort Characters:**

   - Use `LISTAGG(ch.value, '') WITHIN GROUP (ORDER BY ch.value)` to concatenate the characters back into a string, but sorted alphabetically.

4. **Final Selection:**

   - Select the words and their sorted letter strings.

**Finding Words with Anagrams:**

To identify words that have at least one anagram (i.e., other words with the same sorted letters), you can extend the query as follows:

```sql
WITH words_with_sorted_letters AS (
    SELECT
        w."words",
        LOWER(w."words") AS word_lower,
        ARRAY_TO_STRING(ARRAY_SORT(LISTAGG(ch.value, '') WITHIN GROUP (ORDER BY ch.seq)), '') AS sorted_letters
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST" w,
        LATERAL FLATTEN(input => REGEXP_SPLIT_TO_ARRAY(w."words", '')) ch
    GROUP BY w."words"
),
anagram_groups AS (
    SELECT
        sorted_letters,
        COUNT(*) AS anagram_count
    FROM words_with_sorted_letters
    GROUP BY sorted_letters
    HAVING COUNT(*) > 1
),
filtered_words AS (
    SELECT
        wsl."words",
        wsl.sorted_letters,
        ag.anagram_count
    FROM words_with_sorted_letters wsl
    JOIN anagram_groups ag ON wsl.sorted_letters = ag.sorted_letters
    WHERE wsl.word_lower LIKE 'r%' AND LENGTH(wsl."words") BETWEEN 4 AND 5
)
SELECT "words", anagram_count
FROM filtered_words
ORDER BY "words"
LIMIT 10;
```

**Explanation:**

1. **Compute Sorted Letters for Each Word:**

   - As before, split each word into characters, sort them, and recombine into `sorted_letters`.

2. **Identify Anagram Groups:**

   - Group by `sorted_letters` and count the number of words in each group.
   - Use `HAVING COUNT(*) > 1` to find groups with more than one word (anagrams).

3. **Filter Words Starting with 'r' and Length 4-5:**

   - Filter the words that start with 'r' (case-insensitive) and have a length between 4 and 5.

4. **Join to Get Anagram Counts:**

   - Join the filtered words with their corresponding anagram counts.

5. **Select and Order Results:**

   - Select the word and anagram count.
   - Order the results alphabetically.
   - Limit to the first 10 words.

**Final Output Format:**

```csv
Word,Anagram_Count
rared,3
ravel,2
reals,4
rearm,2
rebar,2
rebus,2
rebut,2
recap,2
reach,2
react,4
```

*(Note: The above data is illustrative. The actual results may vary based on your dataset.)*

**Brief Explanation:**

- The output lists the first 10 words starting with 'r', of length 4 to 5 letters, sorted alphabetically, and that have at least one anagram.
- `Anagram_Count` indicates the number of words (including itself) that are anagrams of the word.

**Alternative Without `STRING_TO_ARRAY`:**

If your SQL dialect does not support `REGEXP_SPLIT_TO_ARRAY`, you can create a user-defined function (UDF) to split a string into characters or use recursive SQL. However, the specifics depend on your database system.

**Please ensure:**

- Replace any functions with their equivalents in your SQL dialect if necessary.
- Adjust the table and column names to match your actual schema.
- Test the query to verify it works in your environment.

**Additional Tips:**

- **If `REGEXP_SPLIT_TO_ARRAY` is unavailable:**

  Use a recursive CTE to split the string into characters.

- **Recursive CTE Example:**

  ```sql
  WITH RECURSIVE split_words AS (
    SELECT
      "words",
      1 AS pos,
      SUBSTRING("words", 1, 1) AS char
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") BETWEEN 4 AND 5 AND LOWER("words") LIKE 'r%'
    UNION ALL
    SELECT
      "words",
      pos + 1,
      SUBSTRING("words", pos + 1, 1)
    FROM split_words
    WHERE pos < LENGTH("words")
  )
  SELECT
    "words",
    STRING_AGG(char ORDER BY char) AS sorted_letters
  FROM split_words
  GROUP BY "words"
  ```
  
  Note: Recursive CTEs may have performance implications for large datasets.

**Conclusion:**

The error occurred because `STRING_TO_ARRAY` is not recognized in your SQL dialect. By adjusting the query to use functions supported by your database, you can achieve the desired result of sorting the letters in each word. This allows you to identify words that have anagrams based on their sorted letter combinations.

---

Feel free to ask if you need further assistance or clarification on any of the steps.
2025-01-18 18:14:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:14:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:14:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:14:31 - snowflake.connector.connection - INFO - closed
2025-01-18 18:14:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:15:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:15:10 - root - INFO - I'm sorry to hear that `REGEXP_SPLIT_TO_ARRAY` is not recognized in your SQL environment. Let's try an alternative approach that doesn't require `STRING_TO_ARRAY` or `REGEXP_SPLIT_TO_ARRAY`. We can achieve our goal by using a numbers table to generate positions within the words and extract individual characters using the `SUBSTR` function.

Here's how you can modify your query:

```sql
-- Step 1: Generate numbers from 1 to the maximum word length needed (in this case, 5)
WITH numbers AS (
  SELECT ROW_NUMBER() OVER () AS n
  FROM TABLE(GENERATOR(ROWCOUNT => 5)) -- Generates numbers from 1 to 5
),

-- Step 2: Filter words starting with 'r' and of length 4 to 5
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),

-- Step 3: Split words into individual characters
word_letters AS (
  SELECT
    fw."words",
    SUBSTR(fw."words", n.n, 1) AS letter
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
),

-- Step 4: Aggregate sorted letters for each word
words_with_sorted_letters AS (
  SELECT
    "words",
    ARRAY_AGG(letter ORDER BY letter) AS letters_array
  FROM word_letters
  GROUP BY "words"
),

-- Step 5: Concatenate sorted letters into a string
words_signature AS (
  SELECT
    "words",
    ARRAY_TO_STRING(letters_array, '') AS sorted_letters
  FROM words_with_sorted_letters
),

-- Step 6: Find anagram groups and count anagrams
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM words_signature
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),

-- Step 7: Join back to get words with their anagram counts
final_result AS (
  SELECT
    ws."words",
    ac.anagram_count
  FROM words_signature ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)

-- Step 8: Select the first 10 words alphabetically with their anagram counts
SELECT
  "words" AS Word,
  anagram_count AS Anagram_Count
FROM final_result
ORDER BY "words"
LIMIT 10;
```

**Explanation:**

- **Step 1:** Generate a sequence of numbers from 1 to 5 using the `GENERATOR` function. This will act as position indices for the letters in the words.

- **Step 2:** Filter the words in the `WORD_LIST` table to include only those that start with 'r' (case-insensitive) and have lengths between 4 and 5 characters.

- **Step 3:** Use the numbers generated to split each word into individual characters using the `SUBSTR` function.

- **Step 4:** Aggregate the letters for each word into an array, sorting them alphabetically.

- **Step 5:** Concatenate the sorted letters array into a string to create a signature for each word. Words with the same signature are anagrams of each other.

- **Step 6:** Group the words by their sorted letter signatures and count the number of words in each group. Only keep groups that have more than one word (meaning they have at least one anagram).

- **Step 7:** Join back to the words to get each word along with its anagram count.

- **Step 8:** Select the first 10 words alphabetically and display their anagram counts.

**Sample Output:**

Assuming the data supports it, the output will look like:

```csv
Word,Anagram_Count
raced,3
races,2
reach,2
react,4
reaps,2
rearm,2
rears,3
rebid,2
recap,2
reads,4
```

**Notes:**

- **Functions Used:**
  - `GENERATOR(ROWCOUNT => 5)`: Generates a virtual table with 5 rows to create numbers 1 to 5.
  - `ROW_NUMBER() OVER ()`: Assigns a sequential number to each row, creating our numbers table.
  - `SUBSTR(string, position, length)`: Extracts a substring from a string.
  - `ARRAY_AGG(expression ORDER BY expression)`: Aggregates values into an array with ordering.
  - `ARRAY_TO_STRING(array, delimiter)`: Concatenates array elements into a string.

- **Adjustments:**
  - If you have words longer than 5 letters, adjust the `ROWCOUNT` in the `GENERATOR` function accordingly.

**Additional Considerations:**

- Ensure that your database user has the necessary permissions to use the `GENERATOR` function.

- If `ARRAY_AGG` or `ARRAY_TO_STRING` are not available, consider alternative functions or methods provided by your SQL database.

**Brief Explanation:**

The query identifies words starting with 'r', of length 4 to 5 characters, that have at least one anagram within the list. It does so by generating a sorted letter signature for each word and counting how many words share the same signature. The output lists the first 10 words alphabetically along with the count of their anagrams.

---

**Final Output Format:**

```csv
Word,Anagram_Count
word1,str,count1,int
word2,str,count2,int
...
word10,str,count10,int
```

Please replace `word1`, `count1`, etc., with the actual words and counts from your data.

**Note on Data Types:**

- **Word:** String (str)
- **Anagram_Count:** Integer (int)

---

Let me know if you encounter any issues or need further assistance with the query.
2025-01-18 18:15:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:15:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:15:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:15:12 - snowflake.connector.connection - INFO - closed
2025-01-18 18:15:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:16:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:16:19 - root - INFO - The error you're encountering is due to the syntax used in the `ARRAY_AGG` function with the `ORDER BY` clause. In your SQL environment, the `ORDER BY` clause inside `ARRAY_AGG` may not be supported in that way. Additionally, the use of `STRING_TO_ARRAY` and `REGEXP_SPLIT_TO_ARRAY` functions is not recognized in your database.

To resolve this issue, we'll adjust the query to avoid unsupported functions and syntax. We'll use the `LISTAGG` function to concatenate letters after sorting them, which is commonly supported and allows for ordering within the aggregation.

**Corrected SQL Query:**

```sql
-- Step 1: Generate numbers from 1 to the maximum word length needed (in this case, 5)
WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
),

-- Step 2: Filter words starting with 'r' and of length 4 to 5
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),

-- Step 3: Split words into individual characters
word_letters AS (
  SELECT
    fw."words",
    SUBSTRING(fw."words", n.n, 1) AS letter
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
),

-- Step 4: Aggregate and sort letters for each word using LISTAGG
words_signature AS (
  SELECT
    "words",
    LISTAGG(letter, '') WITHIN GROUP (ORDER BY letter) AS sorted_letters
  FROM word_letters
  GROUP BY "words"
),

-- Step 5: Find anagram groups and count anagrams
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM words_signature
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),

-- Step 6: Join back to get words with their anagram counts
final_result AS (
  SELECT
    ws."words",
    ac.anagram_count
  FROM words_signature ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)

-- Step 7: Select the first 10 words alphabetically with their anagram counts
SELECT
  "words" AS Word,
  anagram_count AS Anagram_Count
FROM final_result
ORDER BY "words"
LIMIT 10;
```

**Explanation:**

- **Step 1:** Use a numbers table to generate position indices from 1 to 5, which correspond to the maximum word length we're interested in.

- **Step 2:** Filter words that start with 'r' (case-insensitive) and have a length of 4 or 5 letters.

- **Step 3:** Split each word into its constituent letters using the `SUBSTRING` function and the position indices from the numbers table.

- **Step 4:** Use `LISTAGG` with `WITHIN GROUP (ORDER BY letter)` to concatenate the letters of each word in alphabetical order, creating a sorted letter signature.

- **Step 5:** Group the words by their sorted letter signatures and count how many words share the same signature. This identifies sets of words that are anagrams of each other.

- **Step 6:** Join back to the original words to associate each word with the count of its anagrams.

- **Step 7:** Select the first 10 words alphabetically and display the anagram count for each.

**Sample Output in CSV Format:**

```csv
Word,Anagram_Count
raced,4
races,2
ramen,2
rans,3
rates,3
reach,2
react,4
reaps,2
rearm,2
rebus,2
```

**Brief Explanation:**

- This query identifies words that start with 'r', have 4 to 5 letters, and have at least one anagram in the list.

- **`Word`**: The word starting with 'r' and of length 4 or 5.

- **`Anagram_Count`**: The total number of words (including itself) that share the same sorted letter signature, indicating they are anagrams of each other.

**Additional Notes:**

- Since your SQL environment does not support functions like `STRING_TO_ARRAY` or `REGEXP_SPLIT_TO_ARRAY`, we're using basic SQL functions like `SUBSTRING` and `LISTAGG` to achieve the desired result.

- The `numbers` CTE creates a simple sequence from 1 to 5. If your database supports generating sequences differently, you can adjust this part accordingly.

- Ensure that the `LISTAGG` function and the `WITHIN GROUP` clause are supported in your database.

**Example Adjustments for Different SQL Dialects:**

- **If `LISTAGG` is not available**, you might use `GROUP_CONCAT` or equivalent functions, depending on your SQL dialect.

- **Generating Numbers Without `UNION ALL`:** If your database supports `GENERATE_SERIES`, you can replace the `numbers` CTE with:

  ```sql
  numbers AS (
    SELECT generate_series(1, 5) AS n
  ),
  ```

**Final Thoughts:**

This query should now execute without syntax errors and provide you with the first 10 words starting with 'r', of length 4 to 5, that have at least one anagram, along with the count of their anagrams.

**Note:** The actual words and anagram counts may vary based on the contents of your `WORD_LIST` table.

---

**Answer in the Specified Format:**

```csv
Word,Anagram_Count
word1:str,count1:int
word2:str,count2:int
...
word10:str,count10:int
```

*(Replace `word1`, `count1`, etc., with the actual words and counts from your data.)*

---

Let me know if you need further assistance or if you encounter any other issues with the query.
2025-01-18 18:16:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:16:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:16:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:16:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-01-18 18:16:20 - snowflake.connector.connection - INFO - closed
2025-01-18 18:16:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:16:21 - root - INFO - SQL:
-- Step 1: Generate numbers from 1 to the maximum word length needed (in this case, 5)
WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
),

-- Step 2: Filter words starting with 'r' and of length 4 to 5
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),

-- Step 3: Split words into individual characters
word_letters AS (
  SELECT
    fw."words",
    SUBSTRING(fw."words", n.n, 1) AS letter
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
),

-- Step 4: Aggregate and sort letters for each word using LISTAGG
words_signature AS (
  SELECT
    "words",
    LISTAGG(letter, '') WITHIN GROUP (ORDER BY letter) AS sorted_letters
  FROM word_letters
  GROUP BY "words"
),

-- Step 5: Find anagram groups and count anagrams
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM words_signature
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),

-- Step 6: Join back to get words with their anagram counts
final_result AS (
  SELECT
    ws."words",
    ac.anagram_count
  FROM words_signature ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)

-- Step 7: Select the first 10 words alphabetically with their anagram counts
SELECT
  "words" AS Word,
  anagram_count AS Anagram_Count
FROM final_result
ORDER BY "words"
LIMIT 10;
Results:
WORD,ANAGRAM_COUNT
raad,2
rache,2
rada,2
radek,2
ragi,2
rail,2
rails,2
rain,2
rains,2
rake,2

2025-01-18 18:16:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:16:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:16:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:16:22 - snowflake.connector.connection - INFO - closed
2025-01-18 18:16:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:17:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:17:04 - root - INFO - The error you're encountering is due to the `STRING_TO_ARRAY` function not being recognized in your SQL environment. To achieve your goal of finding words where the number of distinct letters is less than the length of the word (i.e., words with duplicate letters), we can modify the query to use only the functions available in your SQL database.

**Alternative Approach:**

We'll use a numbers table to generate positions within each word and the `SUBSTRING` function to extract individual letters. Then, we'll count the number of distinct letters and compare it to the word length.

Here's the revised query:

```sql
-- Step 1: Generate numbers from 1 up to the maximum word length in your data (adjust ROWCOUNT as needed)
WITH numbers AS (
  SELECT ROW_NUMBER() OVER (ORDER BY seq4()) AS n
  FROM TABLE(GENERATOR(ROWCOUNT => 30))  -- Adjust 30 to the maximum word length in your dataset
),

-- Step 2: Split words into individual letters
word_letters AS (
  SELECT
    w."words",
    LENGTH(w."words") AS word_length,
    SUBSTRING(w."words", n.n, 1) AS letter
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST" w
  JOIN numbers n ON n.n <= LENGTH(w."words")
),

-- Step 3: Count distinct letters and compare with word length
words_with_duplicate_letters AS (
  SELECT
    wl."words",
    COUNT(DISTINCT wl.letter) AS num_unique_letters,
    MAX(wl.word_length) AS word_length
  FROM word_letters wl
  GROUP BY wl."words"
  HAVING COUNT(DISTINCT wl.letter) < MAX(wl.word_length)
)

-- Step 4: Select words with duplicate letters
SELECT "words"
FROM words_with_duplicate_letters
LIMIT 1000;
```

**Explanation:**

1. **Numbers CTE:**

   - Generates a sequence of numbers from 1 up to the maximum word length in your dataset.
   - Adjust the `ROWCOUNT` value in the `GENERATOR` function to match the maximum possible word length.

2. **word_letters CTE:**

   - Splits each word into its individual letters.
   - Uses `SUBSTRING` to extract each character based on the position generated by the numbers table.

3. **words_with_duplicate_letters CTE:**

   - Counts the number of distinct letters in each word using `COUNT(DISTINCT wl.letter)`.
   - Compares this count to the word's length (`MAX(wl.word_length)`).
   - Uses `HAVING` to filter words where the number of unique letters is less than the word length (i.e., words with duplicate letters).

4. **Final Selection:**

   - Retrieves the list of words that contain at least one duplicate letter.
   - Limits the output to 1000 words.

**Alternative if `GENERATOR` and `seq4()` are Unsupported:**

If your SQL environment doesn't support the `GENERATOR` function or `seq4()`, you can create the `numbers` CTE manually:

```sql
WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
  SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL
  SELECT 11 UNION ALL SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL SELECT 15 UNION ALL
  SELECT 16 UNION ALL SELECT 17 UNION ALL SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
  SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL SELECT 24 UNION ALL SELECT 25 UNION ALL
  SELECT 26 UNION ALL SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30
),
-- Continue with the rest of the query as above...
```

**Example Result:**

Assuming the query runs successfully, the output will be words from your `WORD_LIST` table that contain duplicate letters. Here's how the output might look:

```csv
words
cannach
redargue
oddities
scrammed
murph
rob
room
reese
rabbis
access
added
```

*(Note: The actual words will depend on the contents of your `WORD_LIST` table.)*

**Important Considerations:**

- **Adjusting `ROWCOUNT`:** Make sure to adjust the `ROWCOUNT` in the `GENERATOR` function or the number of `UNION ALL` statements to match the maximum word length in your data.

- **Function Availability:** Ensure that functions like `ROW_NUMBER()`, `SUBSTRING()`, `COUNT(DISTINCT ...)`, and `LENGTH()` are available in your SQL environment.

- **Performance:** This query can be resource-intensive for large datasets since it involves joining on generated numbers and aggregating results. Consider limiting the input data or optimizing as needed.

**Brief Explanation:**

By using a numbers table and standard SQL functions, we've effectively replicated the functionality of `STRING_TO_ARRAY` and `ARRAY_SIZE`. This method splits each word into its constituent letters, counts the unique letters, and then identifies words where this count is less than the total word length, indicating the presence of duplicate letters.

---

Please let me know if you have any questions or need further assistance with this query!
2025-01-18 18:17:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:17:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:17:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:17:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:17:07 - snowflake.connector.connection - INFO - closed
2025-01-18 18:17:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:17:08 - root - INFO - SQL:
-- Step 1: Generate numbers from 1 up to the maximum word length in your data (adjust ROWCOUNT as needed)
WITH numbers AS (
  SELECT ROW_NUMBER() OVER (ORDER BY seq4()) AS n
  FROM TABLE(GENERATOR(ROWCOUNT => 30))  -- Adjust 30 to the maximum word length in your dataset
),

-- Step 2: Split words into individual letters
word_letters AS (
  SELECT
    w."words",
    LENGTH(w."words") AS word_length,
    SUBSTRING(w."words", n.n, 1) AS letter
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST" w
  JOIN numbers n ON n.n <= LENGTH(w."words")
),

-- Step 3: Count distinct letters and compare with word length
words_with_duplicate_letters AS (
  SELECT
    wl."words",
    COUNT(DISTINCT wl.letter) AS num_unique_letters,
    MAX(wl.word_length) AS word_length
  FROM word_letters wl
  GROUP BY wl."words"
  HAVING COUNT(DISTINCT wl.letter) < MAX(wl.word_length)
)

-- Step 4: Select words with duplicate letters
SELECT "words"
FROM words_with_duplicate_letters
LIMIT 1000;
Results:
Too long, hard cut:
words
sunderable
honourably
diamegnetism
monotrochian
solpugides
succinite
appallingly
dumetose
prastha
stringent
chemmy
undeluding
outcomplete
terebrate
sadistic
creosols
telescopes
dechlorinating
supererogatorily
transgenerations
rework
turbulently
moism
belgravian
pathognomonical
escribing
antitheologian
swaziland
unprotecting
functionlessness
abhorson
abolitionary
accidental
typifies
retrim
mantically
ultrazodiacal
mytilidae
rabbinite
euphuists
fluorescigenous
unperviousness
lorarius
aardvarks
aberrate
aberrative
abyssolith
abrogable
academicians
accinging
acidophilus
acridophagus
addendum
admissible
alamire
allogeneic
valetudinaries
descanted
nonpossible
deprograms
ungentile
antecedaneously
expropriations
defoliators
neurotically
rhamnohexose
glycyrrhiza
basibranchiate
staphylotoxin
cadmia
overurged
breakfaster
bodicemaker
usara
dicotyledonary
isoelectronically
calefactory
anoestrus
zoophiles
phosphinic
abacas
abdicated
abominate
aboulia
abrahamidae
acaricide
accomplisht
accoutred
acculturational
abusiveness
acerolas
acetylene
acquiescent
acrasia
acroataxia
acronichal
actinometrical
adipescent
adulterine
adulticidal
advertence
aerolitic
pervestigate
aboriginality
acatalepsy
accipitrine
accurre
acetobromanilide
achlorophyllous
acolhuan
acroasis
actualized
adduction
achromatopsy
adenographical
adephagan
adoral
adrenin
adulthood
advancer
advisories
aerides
aerobious
aerotechnics
acolhua
actinotherapy
aeolipile
aerostation
affirmation
affluence
afterhend
aghan
alabastrian
alcatras
alforja
algologically
alieners
allayment
allamanda
amaranthaceae
amarettos
amblyopia
amidships
ampherotokous
amphibola
amphitropal
anachronist
anaerobian
anaglyptography
analphabetic
angularia
antepirrhema
airwaves
amphicrania
anglomania
antelation
anthocyan
antigorite
antispiritualistic
aortoiliac
areographically
ascosporous
attacks
autoradiography
avengingly
goosepimply
prevacated
beknown
chakravartin
irruptively
digamies
solutioner
voluptuaries
supervene
abeles
abiologically
abrade
abridgement
acacatechol
acariasis
acclimatising
abatable
acetarsone
acholuric
acquitter
actinoelectric
actinograph
actinometric
actinostomal
adders
acritan
admarginate
admirable
adoptions
carthorse
overflow
loyalist
sheafage
aberrancies
abscession
acholic
achromous
acinaceous
acraze
adapis
adenofibroma
adhesivemeter
adhesives
adiposogenital
adoniram
adoptees
adread
adrenosterone
aegipan
aeronomical
aeroscopic
aethogen
afernan
affrayer
affraying
afrasian
afterlifetime
afterworking
agglutinated
aggrandiser
aggrieves
aglyphodontia
agonistics
agrarianize
ayatollah
aigremore
airiest
akebia
akela
alacritous
aladdinize
alamo
alarums
alaskas
alate
alaudine
alberge
alcahests
alchemical
alcohate
aldehydine
aldosterone
alebench
alecize
aleurone
alfaquins
algraphic
alkamine
alkylated
allelomorph
alleviated
alliable
allocatur
allopathies
aloedary
alluviate
alpinists
altiloquence
aluminate
ambivalent
ambosexual
ambrosterol
amebocyte
amhar
amherstite
amidoaldehyde
aminization
aminolytic
amoebula
amphibolitic
ametaboly
amphigonia
amphioxi
amphora
anablepidae
anacephalaeosis
anachronistically
anaclastic
anacrotism
anaerobiosis
anam
anaphroditous
anapnoeic
anastomoses
anatifae
anciency
andorran
anemonin
ancilia
angustia
anhedron
anilingus
animis
animosity
anisognathous
anisomeles
anywheres
annealer
annunciated
anomalist
anorogenic
anorthographically
antedates
antedawn
antesignanus
anthypophoretic
agrammaphasia
algerita
allobaric
alterers
anabaptized
anadyomene
analgesic
anapneic
anatifa
angiomatous
anglemeter
anywhereness
ankee
anneloid
annona
antarctic
antemetallic
antennary
anthropogenetic
anthropomorphite
antibank
antibrachial
anticaste
anticaustic
anticipate
anticipated
anticomment
anticommunistical
anticonductor
anticritically
antiexpressionism
antifermentative
antifungal
antigrammatical
antilapse
antileft
antimagistratical
antimonial
antiopium
antipart
antipedobaptism
antiphysicalness
antipopery
antiprojectivity
antiprostatic
antiritualism
antisepalous
antiskidding
antispace
antistrophize
antithesism
antitrust
antizoea
anunder
anvilling
aphorismos
aphototropic
apicad
apina
aplanogamete
apocopate
apophyllite
apoplasmodial
appledrane
applique
aptness
aquafer
aquaria
aralkylated
arbitrate
arborescently
arbuscular
archdeaconry
archimandrites
archimperialistic
archivers
archoplasm
archpatron
archpirate
archprince
archrascal
archwench
areolas
areopagus
argyrocephalous
arillodium
armaments
armchaired
arpeggiando
arrivals
arrived
arsenophenylglycin
artemas
artemision
arteriostrepsis
arthropleura
artocarpeous
arvicoline
asyndetically
asparagus
assertively
assoluto
asteroids
asthamatic
asthenopia
astonishes
astraeidae
astragalus
astricted
astrometric
atbash
attacking
attenuable
attractability
audiophiles
atomistic
auriculotemporal
aurorium
arborolatry
arugolas
asbest
aselli
assamites
assassinator
assassins
astronomer
aureus
autarchic
authenticly
authorisable
autofecundation
autoinduction
autoionization
autostyly
autotropic
autoxidize
auxotroph
avocation
axolotl
azinphosm

2025-01-18 18:17:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:17:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:17:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:17:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-18 18:17:09 - snowflake.connector.connection - INFO - closed
2025-01-18 18:17:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:17:09 - root - INFO - SQL:
SELECT SUBSTRING("words", 1, 1) AS first_letter, COUNT(*) AS count
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    GROUP BY first_letter
    ORDER BY first_letter
    LIMIT 1000;
Results:
FIRST_LETTER,COUNT
,2
F,1
T,1
a,25690
b,18599
c,32408
d,18901
e,14341
f,12003
g,11059
h,13866
i,13340
j,2867
k,3988
l,10097
m,20002
n,13613
o,12804
p,35203
q,1807
r,16942
s,39158
t,19025
u,23009
v,5372
w,6637
x,512
y,1152
z,1405

2025-01-18 18:17:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:17:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:17:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:17:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:17:11 - snowflake.connector.connection - INFO - closed
2025-01-18 18:17:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:17:11 - root - INFO - SQL:
SELECT "words", LENGTH("words") AS word_length
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") = 5
    LIMIT 1000;
Results:
Too long, hard cut:
words,WORD_LENGTH
cruth,5
gases,5
murph,5
oscan,5
saeta,5
pocul,5
imbue,5
nepit,5
spics,5
nitre,5
kohua,5
fique,5
eking,5
hutch,5
wooed,5
accel,5
vicar,5
slued,5
stoae,5
veuve,5
waked,5
laksa,5
wodgy,5
hatte,5
wilco,5
telos,5
surma,5
betes,5
telei,5
roose,5
cahuy,5
azoch,5
taily,5
petto,5
waefu,5
gipon,5
betel,5
buzzy,5
sofar,5
betty,5
wains,5
bulge,5
eloah,5
agade,5
soave,5
orbit,5
wiggy,5
cheer,5
skids,5
jarry,5
rekey,5
trust,5
azlon,5
alans,5
avile,5
etiam,5
trona,5
wryly,5
barie,5
holms,5
yawny,5
waive,5
ahush,5
horae,5
vlach,5
lutao,5
amids,5
boned,5
froom,5
agone,5
natal,5
zincs,5
dagon,5
bunch,5
kiefs,5
clipt,5
stirk,5
donna,5
arias,5
saudi,5
fohat,5
iambe,5
larum,5
litre,5
caner,5
penal,5
tyned,5
moism,5
ketyl,5
eldin,5
washo,5
unist,5
julie,5
recti,5
abaue,5
awide,5
sanct,5
cuifs,5
whute,5
awest,5
omrah,5
glogg,5
plans,5
rason,5
fluor,5
welts,5
oyana,5
kerry,5
modoc,5
sodio,5
chiot,5
macer,5
amowt,5
slipe,5
bogle,5
wacks,5
skewl,5
micky,5
gated,5
usque,5
agric,5
codol,5
yocks,5
oopod,5
lidos,5
camus,5
timbo,5
acana,5
loper,5
chris,5
crisp,5
lokao,5
usara,5
vucom,5
kabel,5
palki,5
busto,5
mikra,5
muggy,5
heave,5
roily,5
lamna,5
eruct,5
celom,5
coble,5
undim,5
myron,5
delit,5
bossa,5
gursh,5
moted,5
wizen,5
soggy,5
frape,5
reset,5
crest,5
puddy,5
ridge,5
poach,5
expdt,5
three,5
biffs,5
cadet,5
areas,5
lases,5
scray,5
pooch,5
boomy,5
thumb,5
susso,5
irena,5
butts,5
sorgo,5
teres,5
aahed,5
aalii,5
aargh,5
aaron,5
abaca,5
abaci,5
aback,5
abada,5
abaff,5
abaft,5
abaka,5
abama,5
abamp,5
aband,5
abase,5
abash,5
abask,5
abate,5
abaue,5
abave,5
abaze,5
abbas,5
abbey,5
abbes,5
abbie,5
abbot,5
abdal,5
abdat,5
abdom,5
abeam,5
abear,5
abede,5
abele,5
abend,5
aberr,5
abets,5
abhor,5
abide,5
abidi,5
abies,5
abyes,5
abilo,5
abime,5
abysm,5
abyss,5
abkar,5
abler,5
ables,5
ablet,5
ablow,5
abmho,5
abner,5
abnet,5
abode,5
abody,5
abohm,5
aboil,5
aboma,5
aboon,5
abord,5
abort,5
abote,5
about,5
above,5
abray,5
abram,5
abret,5
abrim,5
abrin,5
abris,5
abrus,5
absee,5
absey,5
absis,5
absit,5
abuta,5
abstr,5
abuna,5
abune,5
abura,5
abuse,5
abush,5
abuts,5
abuzz,5
abwab,5
acale,5
acana,5
acapu,5
acara,5
acari,5
acast,5
acate,5
accel,5
accoy,5
accra,5
accts,5
accum,5
accur,5
accus,5
acedy,5
acerb,5
aceta,5
achar,5
ached,5
achen,5
acher,5
aches,5
achoo,5
achor,5
acidy,5
acids,5
acier,5
acies,5
acyls,5
acing,5
acini,5
ackee,5
ackey,5
acker,5
aclys,5
acmes,5
acmic,5
acned,5
acnes,5
acock,5
acoin,5
acold,5
acoma,5
acone,5
acool,5
acorn,5
acost,5
acoup,5
acrab,5
acred,5
acres,5
acrid,5
acryl,5
acroa,5
acron,5
acrux,5
acted,5
actin,5
acton,5
actor,5
actos,5
actus,5
acuan,5
acute,5
adage,5
adagy,5
adays,5
adams,5
adapa,5
adapt,5
adati,5
adaty,5
adawe,5
adawn,5
adcon,5
addax,5
addda,5
added,5
adder,5
addie,5
addio,5
addis,5
addle,5
addnl,5
adead,5
adeem,5
adeep,5
adela,5
adeps,5
adept,5
adfix,5
adiel,5
adieu,5
adion,5
adios,5
adyta,5
adits,5
adjag,5
adlai,5
adlay,5
adlet,5
adman,5
admen,5
admin,5
admit,5
admix,5
admov,5
admrx,5
adnex,5
adobe,5
adobo,5
adolf,5
adopt,5
adore,5
adorn,5
adown,5
adoxa,5
adoxy,5
adoze,5
adpao,5
adrad,5
adret,5
adrip,5
adrop,5
adrue,5
adsum,5
adult,5
adunc,5
adure,5
adusk,5
adust,5
adzer,5
adzes,5
aecia,5
aedes,5
aeger,5
aegir,5
aegis,5
aegle,5
aeons,5
aequi,5
aeric,5
aerie,5
aeron,5
aesir,5
aesop,5
aetat,5
aevia,5
aevum,5
aface,5
afara,5
afars,5
afear,5
affix,5
afgod,5
afifi,5
afire,5
aflat,5
afley,5
aflow,5
afoam,5
afoot,5
afore,5
afoul,5
afray,5
afret,5
afric,5
afrit,5
afros,5
after,5
agada,5
agade,5
again,5
agama,5
agami,5
agamy,5
agape,5
agars,5
agasp,5
agast,5
agata,5
agate,5
agaty,5
agave,5
agaze,5
agena,5
agend,5
agene,5
agent,5
agers,5
agete,5
agger,5
aggie,5
aggry,5
aggro,5
aggur,5
aghan,5
aghas,5
agiel,5
agile,5
aging,5
agios,5
agism,5
agist,5
aglee,5
agley,5
aglet,5
aglow,5
agmas,5
agnat,5
agnel,5
agnes,5
agnus,5
agoge,5
agoho,5
agone,5
agony,5
agons,5
agora,5
ainee,5
agrah,5
agral,5
agree,5
agria,5
agric,5
agrin,5
agrom,5
agron,5
agsam,5
aguey,5
agues,5
agura,5
agush,5
agust,5
ahead,5
aheap,5
ahems,5
ahind,5
ahint,5
ahmed,5
ahmet,5
ahold,5
aholt,5
ahong,5
ahsan,5
ahull,5
ahunt,5
ahura,5
ahush,5
ahwal,5
ayahs,5
aided,5
aider,5
aides,5
ayelp,5
ayens,5
aiery,5
aiger,5
aigre,5
ayins,5
ailed,5
aylet,5
ailie,5
aillt,5
ayllu,5
aimak,5
aimed,5
aimee,5
aimer,5
ainoi,5
ainus,5
aioli,5
ayond,5
ayont,5
ayous,5
airan,5
aired,5
airer,5
airns,5
airth,5
airts,5
aisle,5
aitch,5
aitis,5
ayuyu,5
aiver,5
aiwan,5
aizle,5
ajaja,5
ajari,5
ajava,5
ajhar,5
ajiva,5
ajuga,5
akala,5
akali,5
akasa,5
akebi,5
akees,5
akeki,5
akela,5
akene,5
aking,5
akkad,5
aknee,5
aknow,5
akpek,5
akron,5
akule,5
akund,5
alack,5
alada,5
alain,5
alaki,5
alala,5
alamo,5
aland,5
alane,5
alang,5
alani,5
alans,5
alant,5
alapa,5
alary,5
alarm,5
alate,5
alawi,5
alban,5
albas,5
albee,5
albin,5
albyn,5
album,5
albus,5
alcae,5
alces,5
alcid,5
alcor,5
alday,5
aldea,5
alden,5
alder,5
aldim,5
aldol,5
aldus,5
aleak,5
aleck,5
alecs,5
alefs,5
aleft,5
alenu,5
aleph,5
alert,5
aleut,5
alfas,5
alfet,5
alfin,5
alfur,5
algae,5
algal,5
algas,5
algic,5
algid,5
algin,

2025-01-18 18:17:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:17:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:17:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:17:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-18 18:17:13 - snowflake.connector.connection - INFO - closed
2025-01-18 18:17:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:18:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:18:25 - root - INFO - ```sql
-- Corrected SQL Query

WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6
),
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 6
),
word_letters AS (
  SELECT
    fw."words",
    LISTAGG(SUBSTRING(LOWER(fw."words"), n.n, 1), '') WITHIN GROUP (ORDER BY SUBSTRING(LOWER(fw."words"), n.n, 1)) AS sorted_letters
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
  GROUP BY fw."words"
),
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM word_letters
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),
final_result AS (
  SELECT
    wl."words" AS Word,
    ac.anagram_count AS Anagram_Count
  FROM word_letters wl
  JOIN anagram_counts ac ON wl.sorted_letters = ac.sorted_letters
)
SELECT
  Word,
  Anagram_Count
FROM final_result
ORDER BY Word
LIMIT 10;
```
2025-01-18 18:18:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:18:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:18:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:18:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-01-18 18:18:27 - snowflake.connector.connection - INFO - closed
2025-01-18 18:18:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:18:27 - root - INFO - SQL:
-- Corrected SQL Query

WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6
),
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 6
),
word_letters AS (
  SELECT
    fw."words",
    LISTAGG(SUBSTRING(LOWER(fw."words"), n.n, 1), '') WITHIN GROUP (ORDER BY SUBSTRING(LOWER(fw."words"), n.n, 1)) AS sorted_letters
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
  GROUP BY fw."words"
),
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM word_letters
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),
final_result AS (
  SELECT
    wl."words" AS Word,
    ac.anagram_count AS Anagram_Count
  FROM word_letters wl
  JOIN anagram_counts ac ON wl.sorted_letters = ac.sorted_letters
)
SELECT
  Word,
  Anagram_Count
FROM final_result
ORDER BY Word
LIMIT 10;
Results:
WORD,ANAGRAM_COUNT
raad,2
rabies,2
rache,2
rachel,2
raches,2
racion,2
racker,2
rackle,3
rada,2
radek,2

2025-01-18 18:18:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:18:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:18:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:18:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:18:29 - snowflake.connector.connection - INFO - closed
2025-01-18 18:18:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:18:29 - root - INFO - SQL:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE SUBSTRING("words", 2, 1) = 'e'
    LIMIT 1000;
Results:
Too long, hard cut:
words
revacate
teparies
redargue
sentimentalism
reabbreviated
sermonesque
bestowing
perturb
septembral
regardance
recursing
pertinence
yeti
demantoid
heterotype
jehovist
temptsome
peppercorns
temporaries
oedicnemus
sesquitertia
sensitivist
hebe
semibiological
nepit
tetany
resider
demonolater
derogated
bedraggled
megalopidae
rejuvenated
neurasthenics
requalified
reclassification
seminifical
destinism
relator
defogged
perspiratory
oenolin
deafnesses
teledendrite
peyotes
recrimination
percontation
serviteur
sediments
reintroducing
heliograph
recidivists
yellowbark
semiopal
deoxidate
repoint
resellers
celiocele
developmentalist
descanted
betraying
revisualization
veuve
venetes
realia
leucaemia
retenant
bestraddle
leonite
henhouse
perries
defilade
penacute
peristele
seedness
seggiola
fearedly
metamorphic
neuronal
telos
tentered
dehydrogeniser
perf
betes
mescal
sentients
telei
readjuster
genitor
hest
megatheriidae
tensileness
weighbauk
petto
pentapolitan
telescopes
neckyoke
decompressing
petasites
restrainable
retrocession
retrogress
betel
geniture
renourishment
semidefensively
seeableness
nemopanthus
textile
germanious
perulate
wellbeing
mesomorphy
feeding
declension
hederiform
deciliter
xeme
teer
betty
geospiza
tetramethylene
dealated
serrated
revetoed
festoon
aerobacters
helply
peridermium
meadowless
replaceability
hemiapraxia
weatherhead
redheadedly
deprograms
perispherical
geomoroi
percompound
healthsome
vespiform
pervigilium
merging
hexagrammos
teledus
welder
gemeled
recopying
dechlorinating
necrosed
defoliation
lecturee
devoutlessness
remarkableness
rekey
leishmanic
retrim
lentiscus
aeolia
terebrate
penetralian
webworms
delusory
beadiness
peeler
metamorphopsia
reyouth
pentameran
tetraspgia
bedrel
weekwam
neuralgias
semishade
terebene
tetragamy
pedagogist
septimole
denationalisation
lewdly
recapitalize
bellic
technologies
percental
reknead
neurula
telluriferous
deciduousness
televiewing
beknown
newsman
wellnear
reductio
deerstalkers
mealmen
demanded
semiretirement
reconduct
terpenes
refragableness
permutationist
tegularly
gerrymanderer
begattal
meterstick
hecatonstylon
reflow
teledendron
secondrater
metalaw
sensitively
repiqued
becripple
pentail
refuges
feal
pensility
seesaw
terotechnology
remeasure
defleaed
serpentian
pedicurist
departure
bedsheets
petrosquamous
persianist
peccability
refuted
retrospection
termital
heightener
fenders
beleaguers
veneniferous
newichawanoc
reaccents
revolutionarily
selectness
heaved
messire
peripatetical
leucomas
perforation
reconcilee
reformation
rework
gelatiniser
keypads
semiacid
semireverberatory
neurotransmitter
hermeticism
reproductive
peregrinate
melchite
neutretto
sexpot
dentalium
centralized
pedunculate
levo
besweatered
negotious
penal
heteroscian
telautographic
hepatized
vestless
sero
lectionary
terricolous
decarbonised
merganser
rebesiege
bejesuit
serictery
defoliators
declassification
ketyl
neurotically
reswearing
redecorated
demioctangular
necesse
reforestment
desorbing
beamman
temporaneousness
cecily
termor
peptonising
geronomite
reworking
dedd
telexes
yellowhammer
segregating
negotiate
rehoboth
leptogenesis
regimentation
helladian
peristeromorphic
gerontologic
semiloose
featly
reobserved
benchy
vegetocarbonaceous
tectonically
referrible
searingly
pervicaciously
perisarcal
recti
reducers
zenaidura
teacherage
peachen
fecundation
teanal
demesne
pectiniferous
beguines
weaponed
desensitizes
belgravian
techniquer
benefactor
redondilla
reaspire
restrictively
semienclosure
bevesselled
believability
rescore
cercus
perceptivity
rejoicing
kellegk
terrazzo
nephalist
heterofermentative
feltwort
percivale
sectionalized
sesban
rerises
pecunial
deadliest
semihyperbolical
segmentary
demisang
rebreeding
reinsmen
jeremias
respondencies
destains
sensor
pervestigate
rechanging
tetradrachmon
reshipper
reclose
reimprint
pedipulator
refracture
vestally
penlop
geogenetic
left
neuropteroidea
sexists
semistill
reanalyze
readymade
welts
secretly
desiccant
kerry
versatility
benefit
declaiming
lectureships
heartquake
welches
negatives
bedights
sermonism
reconstructed
hepatonephric
cedron
recataloguing
permanganic
perjuring
deactivators
delawn
redrawing
pelorization
retinoblastoma
refectory
temple
metathesise
medicomechanical
reformatted
defigure
weevilproof
securable
teruteru
televisual
belostoma
penetrolqgy
bemitred
aerugo
periostitic
bejumble
meteoris
mesopodia
reshaking
resultlessness
demiangel
seborrhoea
weaponry
hetairic
dendrocoelous
dematerialization
demibarrel
resnatron
dermatotome
reelers
teaboards
needlessness
necropathy
hexabiose
neurofibromatosis
depriorize
vestiaries
perillas
tenderling
delabialize
dermoidal
meditating
benami
vernon
beamless
heptads
heptadecane
heave
geldesprung
beliefs
melodizer
pentasyllabic
hective
feedingstuff
bespice
celom
devolvement
neodadaist
secundoprimary
ley
peripatidae
megamastictoral
septocosta
helminthous
rebudgeted
megacephalic
delit
behight
receptually
hematocytogenesis
deputy
reattacking
metarules
teel
recalescing
cemeterial
regive
geomance
fer

2025-01-18 18:18:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:18:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:18:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:18:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 18:18:30 - snowflake.connector.connection - INFO - closed
2025-01-18 18:18:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:18:31 - root - INFO - SQL:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE '%e'
    LIMIT 1000;
Results:
Too long, hard cut:
words
revacate
noncontaminable
redargue
unsparse
unhomelike
insubduable
thewlike
nobilitate
gyrovague
sermonesque
uncontributive
regardance
pertinence
culicifuge
nonintelligence
ascaricide
boleite
heterotype
nonincandescence
diphosphate
temptsome
sunderable
macrobiote
dhotee
hebe
suspicable
bispinose
diaspine
cribrate
imbue
epichile
corrasive
interlobate
megalopidae
xanthione
japanophile
clovene
maldistribute
coruscative
chrysididae
santonine
conspissate
nitre
disseise
mixochromosome
fique
borofluoride
crapette
utricle
idrialine
teledendrite
harangue
freddie
catpipe
deoxidate
arborize
underscribe
celiocele
succinite
poongee
praetextae
tannase
misentitle
illude
ruminate
stoae
veuve
nonpossible
superinitiative
dimedone
novemperfoliate
nahane
nonsyndicate
bestraddle
castorite
vocable
leonite
tickle
henhouse
grassie
defilade
hatte
gowdnie
undeniable
vulturewise
penacute
peristele
achromacyte
bronchiocele
fractionalize
mythologize
bourasque
commissionaire
wooable
estramazone
roose
extine
garrigue
sphere
scopulae
megatheriidae
monocle
capriote
precompliance
postdepressive
superguarantee
grouze
tachiste
neckyoke
preinduce
restrainable
lochiocyte
occlusive
suprastate
birdie
anaclete
mythopoetise
agitable
geniture
multinervate
textile
perulate
xeme
undeducible
irrespirable
paracarmine
tetramethylene
elrage
bulge
snoutlike
ozocerite
tradesmanlike
outcomplete
agade
albertype
healthsome
maitrise
soave
nondissipative
insuree
dumetose
cremaillere
scullionize
succourable
durable
tickicide
ailuridae
woodwose
lecturee
muskallunge
dyne
unbutcherlike
unpurposive
tunicate
terebrate
slavikite
counselable
fregatidae
farcilite
prophetize
strigine
frigostable
achene
interlace
macrozoospore
pipette
implete
moringaceae
ungentile
spiriferidae
semishade
terebene
pullulate
phenyldiethanolamine
nonconfidence
septimole
nonintoxicative
recapitalize
pregalvanize
valerone
misdevise
concludence
pagodalike
avile
paeanize
crocoite
asarone
hyalopsite
dryopithecinae
barie
phytostrote
backhouse
tripinnate
ordinariate
culverhouse
waive
aplodontiidae
boucle
elidible
horae
becripple
eglomerate
glossiphonidae
interleave
atangle
piprine
flative
contraplete
remeasure
nonassistive
zantiote
cabotage
unoffendable
departure
bullgine
woollike
exhibitionize
preadequate
agone
harlemite
coadmire
incorporealize
characterizable
synergize
scablike
markmote
lophobranchiate
stupulose
tagilite
unware
macrouridae
susceptible
farcialize
biaswise
foredestine
messire
microplakite
superficialize
axlike
ectoenzyme
che
hutchinsonite
oxyaldehyde
reconcilee
uncrinkle
vapourize
gymnotidae
iambe
pleasantsome
handyframe
reproductive
strangulable
turnstone
birkremite
ayudante
peregrinate
melchite
predefinite
wauble
lycanthrope
fattenable
crithmene
litre
dulcitude
pedunculate
cattlegate
sulfadiazine
iodomethane
polysyllable
hailse
solitaire
epitomize
endopleurite
orangeade
discoglossidae
lutidine
hydrophilite
rebesiege
turklike
unpromotive
saxicolidae
postulance
lyre
duke
exanimate
rhamnohexose
clericalize
necesse
sociable
impendence
geronomite
staphyleaceae
unswathable
signalize
assassinative
nouveaute
nondirective
nonremunerative
negotiate
arsehole
manganate
conciliabule
adamellite
carthorse
fistmele
julie
hydrazidine
outtire
semiloose
aldehyde
referrible
swivellike
caddle
stitchwhile
jungle
unweldable
actinolite
polyene
abaue
homemake
wastable
stashie
myeline
teacherage
cymballike
trioleate
agriculture
demesne
inshore
principate
aussie
catepuce
whirlicote
nurture
collectivize
awide
nale
rufescence
unaccurate
rubellite
corniche
conveyorize
cuvage
mugilidae
initialize
whute
basaltine
reaspire
kongsbergite
punnable
semienclosure
unreducible
boneache
preadaptive
autobolide
granule
rescore
unrake
engendure
hornpipe
corrobboree
heterofermentative
percivale
copaiye
acetaniside
inamissible
squamipinnate
bannerwise
caretake
mytilidae
flintstone
rabbinite
rabbiteye
frocklike
schoharie
circumfuse
lobate
sordamente
vagrance
countervote
pervestigate
gashouse
quietage
oosporange
riverscape
salable
nicotine
reclose
watape
unameliorable
alacreatine
refracture
coccaceae
pyrargyrite
everywhere
coresidence
reanalyze
capitoninae
readymade
iridophore
quadrantile
partie
nonespionage
vasquine
overseethe
heartquake
flutterable
exclamative
crioceratite
roentgenopaque
slipe
bogle
fractile
tiffie
fasciolariidae
dispersonate
ashame
stavewise
campsite
tubenose
dateable
coinheritance
usque
pinninervate
directable
supervene
schizogregarinae
pitastile
adeleidae
temple
metathesise
orthographise
cassolette
thereabove
microcryptocrystalline
shameface
caviare
nonstainable
unguligrade
defigure
gnathonize
securable
sabuline
intentive
ingeminate
interlake
quenselite
bejumble
marcescence
nazarene
insecable
makonde
blae
pantoffle
suaviloquence
chromidae
idealize
intertangle
amebicide
masskanne
gieseckite
superpolite
unchargeable
vibratiuncle
ingressive
jumillite
nosophyte
abthainrie
dermatotome
backsite
profluence
anticompetitive
tameable
allophore
girsle
hexabiose
chloanthite
depriorize
stratiote
microdiactine
unpla

2025-01-18 18:18:31 - root - INFO - itercount: 0
2025-01-18 18:18:31 - root - INFO - Database Name: MODERN_DATA
Schema Name: MODERN_DATA
DDL describes table information.
,0
table_name,PIZZA_NAMES
description,
DDL,"create or replace TABLE PIZZA_NAMES (
	""pizza_id"" NUMBER(38,0),
	""pizza_name"" VARCHAR(16777216)
);"

,1
table_name,COMPANIES_DATES
description,
DDL,"create or replace TABLE COMPANIES_DATES (
	""company_id"" NUMBER(38,0),
	""date_joined"" VARCHAR(16777216),
	""year_founded"" NUMBER(38,0)
);"

,2
table_name,COMPANIES_INDUSTRIES
description,
DDL,"create or replace TABLE COMPANIES_INDUSTRIES (
	""company_id"" NUMBER(38,0),
	""industry"" VARCHAR(16777216)
);"

,3
table_name,PIZZA_CLEAN_RUNNER_ORDERS
description,
DDL,"create or replace TABLE PIZZA_CLEAN_RUNNER_ORDERS (
	""order_id"" NUMBER(38,0),
	""runner_id"" NUMBER(38,0),
	""pickup_time"" VARCHAR(16777216),
	""distance"" FLOAT,
	""duration"" FLOAT,
	""cancellation"" VARCHAR(16777216)
);"

,4
table_name,PIZZA_GET_EXCLUSIONS
description,
DDL,"create or replace TABLE PIZZA_GET_EXCLUSIONS (
	""row_id"" NUMBER(38,0),
	""order_id"" NUMBER(38,0),
	""exclusions"" NUMBER(38,0),
	""total_exclusions"" NUMBER(38,0)
);"

,5
table_name,PIZZA_RECIPES
description,
DDL,"create or replace TABLE PIZZA_RECIPES (
	""pizza_id"" NUMBER(38,0),
	""toppings"" VARCHAR(16777216)
);"

,6
table_name,WORD_LIST
description,
DDL,"create or replace TABLE WORD_LIST (
	""words"" VARCHAR(16777216)
);"

,7
table_name,COMPANIES_FUNDING
description,
DDL,"create or replace TABLE COMPANIES_FUNDING (
	""company_id"" NUMBER(38,0),
	""valuation"" NUMBER(38,0),
	""funding"" NUMBER(38,0),
	""select_investors"" VARCHAR(16777216)
);"

,8
table_name,INCOME_TREES
description,
DDL,"create or replace TABLE INCOME_TREES (
	""zipcode"" NUMBER(38,0),
	""Estimate_Total"" NUMBER(38,0),
	""Margin_of_Error_Total"" NUMBER(38,0),
	""Estimate_Median_income"" NUMBER(38,0),
	""Margin_of_Error_Median_income"" NUMBER(38,0),
	""Estimate_Mean_income"" NUMBER(38,0),
	""Margin_of_Error_Mean_income"" NUMBER(38,0)
);"

,9
table_name,PIZZA_CLEAN_CUSTOMER_ORDERS
description,
DDL,"create or replace TABLE PIZZA_CLEAN_CUSTOMER_ORDERS (
	""order_id"" NUMBER(38,0),
	""customer_id"" NUMBER(38,0),
	""pizza_id"" NUMBER(38,0),
	""exclusions"" VARCHAR(16777216),
	""extras"" VARCHAR(16777216),
	""order_time"" VARCHAR(16777216)
);"

,10
table_name,PIZZA_CUSTOMER_ORDERS
description,
DDL,"create or replace TABLE PIZZA_CUSTOMER_ORDERS (
	""order_id"" NUMBER(38,0),
	""customer_id"" NUMBER(38,0),
	""pizza_id"" NUMBER(38,0),
	""exclusions"" VARCHAR(16777216),
	""extras"" VARCHAR(16777216),
	""order_time"" VARCHAR(16777216)
);"

,11
table_name,PIZZA_RUNNERS
description,
DDL,"create or replace TABLE PIZZA_RUNNERS (
	""runner_id"" NUMBER(38,0),
	""registration_date"" VARCHAR(16777216)
);"

,12
table_name,PIZZA_RUNNER_ORDERS
description,
DDL,"create or replace TABLE PIZZA_RUNNER_ORDERS (
	""order_id"" NUMBER(38,0),
	""runner_id"" NUMBER(38,0),
	""pickup_time"" VARCHAR(16777216),
	""distance"" VARCHAR(16777216),
	""duration"" VARCHAR(16777216),
	""cancellation"" VARCHAR(16777216)
);"

,13
table_name,PIZZA_GET_EXTRAS
description,
DDL,"create or replace TABLE PIZZA_GET_EXTRAS (
	""row_id"" NUMBER(38,0),
	""order_id"" NUMBER(38,0),
	""extras"" NUMBER(38,0),
	""extras_count"" NUMBER(38,0)
);"

,14
table_name,PIZZA_TOPPINGS
description,
DDL,"create or replace TABLE PIZZA_TOPPINGS (
	""topping_id"" NUMBER(38,0),
	""topping_name"" VARCHAR(16777216)
);"

,15
table_name,STATISTICS
description,
DDL,"create or replace TABLE STATISTICS (
	""date"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""total_cases"" NUMBER(38,0),
	""total_deaths"" NUMBER(38,0)
);"

,16
table_name,TREES
description,
DDL,"create or replace TABLE TREES (
	""idx"" NUMBER(38,0),
	""tree_id"" NUMBER(38,0),
	""tree_dbh"" NUMBER(38,0),
	""stump_diam"" NUMBER(38,0),
	""status"" VARCHAR(16777216),
	""health"" VARCHAR(16777216),
	""spc_latin"" VARCHAR(16777216),
	""spc_common"" VARCHAR(16777216),
	""address"" VARCHAR(16777216),
	""zipcode"" NUMBER(38,0),
	""borocode"" NUMBER(38,0),
	""boroname"" VARCHAR(16777216),
	""nta_name"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'MODERN_DATA': {'MODERN_DATA': ['COMPANIES_DATES', 'COMPANIES_FUNDING', 'COMPANIES_INDUSTRIES', 'INCOME_TREES', 'PIZZA_CLEAN_CUSTOMER_ORDERS', 'PIZZA_CLEAN_RUNNER_ORDERS', 'PIZZA_CUSTOMER_ORDERS', 'PIZZA_GET_EXCLUSIONS', 'PIZZA_GET_EXTRAS', 'PIZZA_NAMES', 'PIZZA_RECIPES', 'PIZZA_RUNNERS', 'PIZZA_RUNNER_ORDERS', 'PIZZA_TOPPINGS', 'STATISTICS', 'TREES', 'WORD_LIST']}}
Begin Exploring Related Columns
**Relevant Table:**

- **`MODERN_DATA.MODERN_DATA.WORD_LIST`**

**Relevant Column and Potential Usage:**

- **`"words"`**: Contains words.
  - **Potential Usage**:
    - Filter words that start with `'r'`.
    - Select words of length between 4 and 5 letters.
    - Identify anagrams by rearranging letters.
    - Analyze word lengths and frequency.

**Conditions That May Be Used:**

- **Start with 'r'**: `"words" ILIKE 'r%'`
- **Length between 4 and 5 letters**: `LENGTH("words") BETWEEN 4 AND 5`
- **Specific word length**: `LENGTH("words") = 4` or `LENGTH("words") = 5`
- **Contains specific letters**: `"words" ILIKE '%r%'`
- **Order alphabetically**: `ORDER BY "words"`

---

**SQL Queries:**

1. Retrieve all unique words:

   ```sql
   SELECT DISTINCT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   LIMIT 1000;
   ```

2. Select words that start with 'r':

   ```sql
   SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%'
   LIMIT 1000;
   ```

3. Find words of length 4 or 5:

   ```sql
   SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE LENGTH("words") BETWEEN 4 AND 5
   LIMIT 1000;
   ```

4. Select words that start with 'r' and have 4 or 5 letters:

   ```sql
   SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
   LIMIT 1000;
   ```

5. Get the lengths of words and their frequency:

   ```sql
   SELECT LENGTH("words") AS word_length, COUNT(*) AS frequency
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   GROUP BY LENGTH("words")
   ORDER BY word_length
   LIMIT 1000;
   ```

6. List words containing the letter 'r':

   ```sql
   SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE '%r%'
   LIMIT 1000;
   ```

7. Retrieve words sorted alphabetically:

   ```sql
   SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   ORDER BY "words"
   LIMIT 1000;
   ```

8. Extract the first letter of each word:

   ```sql
   SELECT DISTINCT SUBSTRING("words", 1, 1) AS first_letter
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   ORDER BY first_letter
   LIMIT 1000;
   ```

9. Select 4-letter words starting with 'r':

   ```sql
   SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%' AND LENGTH("words") = 4
   LIMIT 1000;
   ```

10. Select 5-letter words starting with 'r':

    ```sql
    SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE 'r%' AND LENGTH("words") = 5
    LIMIT 1000;
    ```

11. Find words that are anagrams of 'read':

    ```sql
    SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") = 4 AND "words" <> 'read'
    LIMIT 1000;
    ```

12. Count total number of words starting with 'r':

    ```sql
    SELECT COUNT(*) AS total_r_words
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE 'r%'
    LIMIT 1000;
    ```

13. List words and their reversed versions:

    ```sql
    SELECT "words", REVERSE("words") AS reversed_word
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    LIMIT 1000;
    ```

14. Select words with letters sorted alphabetically:

    ```sql
    SELECT "words", ARRAY_TO_STRING(ARRAY_SORT(STRING_TO_ARRAY("words", '')), '') AS sorted_letters
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    LIMIT 1000;
    ```

15. Find words that have duplicate letters:

    ```sql
    SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE ARRAY_SIZE(ARRAY_DISTINCT(STRING_TO_ARRAY("words", ''))) < LENGTH("words")
    LIMIT 1000;
    ```

16. List words grouped by their first letter:

    ```sql
    SELECT SUBSTRING("words", 1, 1) AS first_letter, COUNT(*) AS count
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    GROUP BY first_letter
    ORDER BY first_letter
    LIMIT 1000;
    ```

17. Select words of length 5 and their lengths:

    ```sql
    SELECT "words", LENGTH("words") AS word_length
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") = 5
    LIMIT 1000;
    ```

18. Find words containing only letters 'a' to 'z':

    ```sql
    SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE '%[a-z]%'
    LIMIT 1000;
    ```

19. Select words where the second letter is 'e':

    ```sql
    SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE SUBSTRING("words", 2, 1) = 'e'
    LIMIT 1000;
    ```

20. Retrieve words ending with 'e':

    ```sql
    SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE '%e'
    LIMIT 1000;
    ```

These queries help in understanding the data within the `"words"` column of the `WORD_LIST` table. They explore various aspects such as word length, starting letters, and patterns within the words.Query:
SELECT DISTINCT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   LIMIT 1000;
Answer:
Too long, hard cut:
words
cannach
ouistitis
revacate
voivod
synkaryonic
nonornamentally
noncontaminable
cruth
arthrostomy
teparies
nonassister
redargue
thrivingness
nunting
callipygian
yuca
eucryphiaceous
robustiously
poliorcetics
exulceratory
sentimentalism
epiblastic
orthogneiss
reabbreviated
insubduable
boxwood
bufflehead
nobilitate
bestowing
undistinguishedness
carreton
oddities
superannuity
wingseed
bravadoing
boleite
unsewn
maxillas
lymphomata
linefeeds
unwithstood
moorpan
noncomicality
perturb
scrammed
septembral
greediness
polysomatous
paulinism
planeta
unsagging
ascaricide
gal
sunderable
fanneling
grapelet
enregistry
filches
mislin
commences
tetany
resider
requalified
scorser
anither
unhomelike
solemnifying
thewlike
gases
ftncmd
rizzar
iotized
mobilian
regardance
importuner
culicifuge
yeti
demantoid
parabranchial
goldenmouth
wapacut
subfrontally
oncologist
anoscopy
epichile
krater
maldistribute
platters
unsparse
urbana
conciliations
gyrovague
sermonesque
alvina
psellism
culpableness
trainsickness
summit
turbiths
aconin
recursing
pertinence
murph
archmarshal
panspermic
saeta
martineta
heterotype
jehovist
snapdragon
bravely
overwily
douses
diamegnetism
anemonal
preadmiring
babyhoods
psiloi
stabilization
motacillid
dhotee
mulattress
hebe
suspicable
nepit
disemploys
bedraggled
unblaming
foeniculum
entreasuring
bookholder
disrupt
lautitious
uncontributive
idolising
oscan
steamfitting
tacketed
carburetant
temptsome
electorship
unbrooded
sesquitertia
phyllosoma
unmolesting
bispinose
semibiological
superseded
intervaling
corrasive
inlooking
koso
archworker
lapactic
parodontium
santonine
executiveship
unmisgivingly
conspissate
impoundment
omnibuses
alvearies
paradrops
chrysididae
overseen
borofluoride
crapette
infiltering
defogged
idrialine
perspiratory
pradeep
percontation
serviteur
limuloidea
catpipe
psychorhythmic
yellowbark
cattails
catwood
waked
antibiotically
leucaemia
anacoluthia
explainer
ammoniating
ezod
tensileness
vocable
myeloencephalitis
explain
supersystem
interpolation
localisation
collegiugia
subducing
zingiest
enharden
unoratorically
prescriptively
phonomania
nonincandescence
diphosphate
singarip
pocul
peppercorns
epitomization
temporaries
knottier
vaginoplasty
coronillin
oedicnemus
supraspinous
sensitivist
macrobiote
baetylic
standings
derogated
japanophile
clovene
wm
contouring
monotrochian
predaylight
idololatrical
parmelioid
mindsight
nonintelligence
acquisitively
graphiter
chlamydosporic
paleozoic
nonrelation
nutmeats
quarreling
enfetters
undetractingly
hirudinea
saxophonists
tzardom
honourably
diaspine
cribrate
imbue
lineally
amiantuses
cannellated
mopstick
demonolater
spics
steamboatmen
nonsanction
interlobate
megalopidae
rejuvenated
ascendent
xanthione
pyraloid
vituperation
typifies
unresemblant
insinuativeness
monkly
blasties
navigableness
neurasthenics
expeding
parallelepiped
unsmothered
nitre
prexies
abdominocystic
limnobiological
coruscative
trebuchet
forebitt
exploded
reclassification
disseise
kohua
friskiest
seminifical
whizzers
fique
nonpredatory
spheroidicity
destinism
trisulphid
utricle
episiohematoma
madrilenian
prairies
deafnesses
spiralization
nondiplomatically
noncontentious
peyotes
pilaff
duckbills
notices
harangue
freddie
unrecognized
squids
egoistical
heliograph
cats
overoxidized
queues
recidivists
everyman
simblot
semiopal
deoxidate
repoint
disconanthous
gypsophilous
arborize
unpretty
churching
idolisers
resellers
wristwork
underscribe
impetulantly
imperii
succinite
poongee
narcos
mutuum
draconic
ethologically
prizers
praetextae
potboils
tannase
wooed
inca
descanted
bisubstitution
accel
dueller
fallowist
polyarthritic
spiritualistically
caryophyllous
moniker
antialcoholic
odorized
ruminate
insphering
pseudolegendary
basculation
slued
stoae
discourteousness
turwar
warcraft
venetes
oxgoad
missmark
sandiest
lind
discoplasm
orleanist
dyotheletism
worshipers
subcontinuous
rowelhead
nonadjudicated
aliphatic
partheniad
jokers
wineskins
stringent
slabber
aphrodisia
phantasms
kops
moneybags
nongraphitic
henhouse
grassie
trichonotid
glossoid
defilade
cockalorum
endovenous
subglenoid
gowdnie
laryngalgia
shuddered
chairmender
undeniable
plectrons
peristele
bronchiocele
grantia
seedness
tocharic
timider
fractionalize
numida
pinonic
citizenizing
gravitationally
rob
liltingly
paradisia
tentered
dehydrogeniser
runnel
whiteseam
gorbit
epicenity
asok
supergratified
intrenchment
hammochrysos
megatheriidae
taily
petto
waefu
earthgall
dreigh
anay
jinnywink
grouze
precondensing
contemplamen
knappy
familiarly
tarrish
thitherwards
tachiste
ghostified
cymoidium
swangy
phenyls
retrogress
suprastate
gabbled
irreductibility
renourishment
hypothermia
arsenicalism
wellbeing
crubeen
mesomorphy
feeding
symbols
distrustingly
preacquisitiveness
hutch
misentitle
illude
overswarth
betraying
veuve
nonpossible
unstrong
traily
enchasers
nonsyndicate
wodgy
planchets
quadrantly
garishly
asyngamy
fascia
vulturewise
aminobarbituric
satirised
manswear
malihinis
metamorphic
surbed
pluralised
mythologize
mahewu
bourasque
bringers

Query:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%'
   LIMIT 1000;
Answer:
Too long, hard cut:
words
revacate
redargue
robustiously
reabbreviated
rizzar
regardance
recursing
resider
rejuvenated
requalified
reclassification
relator
recrimination
reintroducing
recidivists
repoint
resellers
ruminate
revisualization
razzia
realia
rowelhead
retenant
rob
runnel
roose
readjuster
restrainable
retrocession
retrogress
rutilant
rhinosporidium
roosevelt
renourishment
ropeways
revetoed
replaceability
redheadedly
recopying
rcpt
remarkableness
rekey
radicalization
retrim
reyouth
rosetan
rodinal
recapitalize
reknead
reductio
rugs
reconduct
refragableness
rusticalness
reflow
repiqued
rollout
refuges
remeasure
refuted
radiolaria
retrospection
reaccents
revolutionarily
roystonea
rumorous
runneth
reconcilee
reformation
rework
riggers
reproductive
ranales
rebesiege
rainwater
reswearing
rhamnohexose
redecorated
reforestment
reworking
rostrulum
radiocinematograph
rehoboth
regimentation
ranseur
reobserved
referrible
recti
reducers
rufescence
rubellite
redondilla
roundhouses
reaspire
restrictively
roud
rescore
rejoicing
rerises
rabbinite
rolleywayman
rabbiteye
rubbernecker
rcd
rebreeding
reinsmen
respondencies
rechanging
riverscape
rason
reshipper
reclose
reimprint
refracture
reanalyze
readymade
rubberer
roentgenopaque
reconstructed
recataloguing
redrawing
retinoblastoma
refectory
riping
reformatted
rubbishly
reshaking
rifter
rampoling
resultlessness
rankness
resnatron
reelers
roily
ranselman
racket
rockroses
rikisha
rebudgeted
receptually
reattacking
recalescing
regive
renominating
repoll
reset
ridge
revest
recoil
romanticism
reaffirmance
rhynchocoela
relitigate
reheat
retitling
ranids
reedify
receiver
renversement
r
ra
raad
raadzaal
raanan
raasch
raash
rab
rabal
raband
rabanna
rabat
rabatine
rabato
rabatos
rabatte
rabatted
rabattement
rabatting
rabban
rabbanim
rabbanist
rabbanite
rabbet
rabbeted
rabbeting
rabbets
rabbi
rabbies
rabbin
rabbinate
rabbinates
rabbindom
rabbinic
rabbinica
rabbinical
rabbinically
rabbinism
rabbinist
rabbinistic
rabbinistical
rabbinite
rabbinitic
rabbinize
rabbins
rabbinship
rabbis
rabbish
rabbiship
rabbit
rabbitberry
rabbitberries
rabbited
rabbiteye
rabbiter
rabbiters
rabbitfish
rabbitfishes
rabbithearted
rabbity
rabbiting
rabbitlike
rabbitmouth
rabbitoh
rabbitproof
rabbitry
rabbitries
rabbitroot
rabbits
rabbitskin
rabbitweed
rabbitwise
rabbitwood
rabble
rabbled
rabblelike
rabblement
rabbleproof
rabbler
rabblers
rabbles
rabblesome
rabbling
rabboni
rabbonim
rabbonis
rabdomancy
rabelais
rabelaisian
rabelaisianism
rabelaism
rabfak
rabi
rabiator
rabic
rabid
rabidity
rabidities
rabidly
rabidness
rabies
rabietic
rabific
rabiform
rabigenic
rabin
rabinet
rabious
rabirubia
rabitic
rablin
rabot
rabulistic
rabulous
racahout
racallable
racche
raccoon
raccoonberry
raccoons
raccroc
race
raceabout
racebrood
racecard
racecourse
racecourses
raced
racegoer
racegoing
racehorse
racehorses
racelike
raceline
racemase
racemate
racemates
racemation
raceme
racemed
racemes
racemic
racemiferous
racemiform
racemism
racemisms
racemization
racemize
racemized
racemizes
racemizing
racemocarbonate
racemocarbonic
racemoid
racemomethylate
racemose
racemosely
racemous
racemously
racemule
racemulose
raceplate
racer
racers
racerunner
races
racetrack
racetracker
racetracks
racette
raceway
raceways
rach
rache
rachel
raches
rachet
rachets
rachial
rachialgia
rachialgic
rachianalgesia
rachianectes
rachianesthesia
rachicentesis
rachycentridae
rachycentron
rachides
rachidial
rachidian
rachiform
rachiglossa
rachiglossate
rachigraph
rachilla
rachillae
rachiocentesis
rachiocyphosis
rachiococainize
rachiodynia
rachiodont
rachiometer
rachiomyelitis
rachioparalysis
rachioplegia
rachioscoliosis
rachiotome
rachiotomy
rachipagus
rachis
rachischisis
rachises
rachitic
rachitides
rachitis
rachitism
rachitogenic
rachitome
rachitomy
rachitomous
racy
racial
racialism
racialist
racialistic
racialists
raciality
racialization
racialize
racially
racier
raciest
racily
racinage
raciness
racinesses
racing
racinglike
racings
racion
racism
racisms
racist
racists
rack
rackabones
rackan
rackapee
rackateer
rackateering
rackboard
rackbone
racked
racker
rackers
racket
racketed
racketeer
racketeering
racketeers
racketer
rackety
racketier
racketiest
racketiness
racketing
racketlike
racketproof
racketry
rackets
rackett
rackettail
rackful
racking
rackingly
rackle
rackless
rackman
rackmaster
racknumber
rackproof
rackrentable
racks
rackway
rackwork
rackworks
raclette
raclettes
racloir
racoyian
racon
racons
raconteur
raconteurs
raconteuses
racoon
racoons
racovian
racquet
racquetball
racquets
rad
rada
radar
radarman
radarmen
radars
radarscope
radarscopes
radded
radding
raddle
raddled
raddleman
raddlemen
raddles
raddling
raddlings
radeau
radeaux
radectomy
radectomieseph
radek
radeur
radevore
radford
radiability
radiable
radiably
radiac
radial
radiale
radialia
radialis
radiality
radialization
radialize
radially
radials
radian
radiance
radiances
radiancy
radiancies
radians
radiant
radiantly
radiantness
radiants
radiary
radiata
radiate
radiated
radiately
radiateness
radiates
radia
Query:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE LENGTH("words") BETWEEN 4 AND 5
   LIMIT 1000;
Answer:
Too long, hard cut:
words
cruth
yuca
gases
murph
oscan
saeta
yeti
pocul
ammu
hebe
imbue
nepit
spics
koso
nitre
kohua
fique
eking
fold
cats
hutch
wooed
inca
accel
vicar
slued
ccid
stoae
veuve
waked
lind
kops
laksa
wodgy
hatte
wilco
ezod
telos
surma
perf
betes
telei
asok
roose
cahuy
azoch
hest
taily
petto
waefu
anay
fiot
gipon
betel
buzzy
scog
liin
sofar
xeme
teer
betty
wains
bulge
lamb
eloah
pien
agade
bats
inia
vogt
soave
orbit
wiggy
cheer
rcpt
skids
jarry
dyne
rekey
haku
trust
azlon
cons
puka
alans
avile
etiam
trona
wryly
barie
holms
rugs
amal
yawny
agra
waive
ahush
nama
horae
hizz
vlach
feal
lutao
amids
boned
froom
sill
agone
natal
zincs
dagon
bunch
kiefs
clipt
stirk
donna
arias
pugh
pria
saudi
fohat
fuss
amit
iambe
larum
wraf
emyd
litre
caner
levo
penal
tyned
sero
maia
moism
jara
lyre
sink
duke
ketyl
eldin
dedd
washo
unist
julie
firs
recti
fief
abaue
maes
awide
nale
sanct
moya
cuifs
whute
snug
awest
omrah
roud
oots
glogg
plans
rason
fluor
left
welts
oyana
kerry
modoc
sodio
spit
chiot
macer
amowt
slipe
bogle
kazi
wacks
skewl
micky
gated
usque
agric
codol
yocks
oopod
lidos
camus
timbo
acana
loper
chris
crisp
lokao
blae
usara
vucom
kabel
palki
busto
kids
mikra
muggy
heave
roily
toss
lamna
eruct
celom
coble
undim
bosn
myron
delit
bossa
gursh
teel
moted
wizen
soggy
frape
reset
crest
puddy
ridge
poach
expdt
three
biffs
sari
cadet
areas
lases
scray
glar
pooch
huck
guns
boomy
thumb
susso
irena
butts
sorgo
teres
aahed
aahs
aalii
aals
aani
aargh
aaron
aaru
abac
abaca
abaci
aback
abada
abaff
abaft
abay
abaka
abama
abamp
aband
abas
abase
abash
abask
abate
abaue
abave
abaze
abba
abbas
abbe
abbey
abbes
abby
abbie
abbot
abbr
abdal
abdat
abdom
abeam
abear
abed
abede
abey
abel
abele
abend
aberr
abet
abets
abhor
abib
abide
abidi
abie
abye
abies
abyes
abilo
abime
abir
abys
abysm
abyss
abit
abkar
able
abler
ables
ablet
ably
ablow
abmho
abner
abnet
abode
abody
abohm
aboil
aboma
aboon
abord
abort
abos
abote
about
above
abow
abox
abray
abram
abret
abri
abrim
abrin
abris
abrus
absee
absey
absi
absis
absit
abuta
abstr
abuna
abune
abura
abuse
abush
abut
abuts
abuzz
abwab
acad
acale
acana
acapu
acara
acari
acast
acate
acca
acce
accel
accoy
accra
acct
accts
accum
accur
accus
aced
acedy
acer
acerb
aces
aceta
achar
ache
ached
achen
acher
aches
achy
achoo
achor
acid
acidy
acids
acier
acies
acyl
acyls
acing
acini
acis
ackee
ackey
acker
acle
aclys
aclu
acme
acmes
acmic
acne
acned
acnes
acock
acoin
acold
acoma
acone
acool
acop
acor
acorn
acost
acoup
acpt
acrab
acre
acred
acres
acrid
acryl
acroa
acron
acrux
acta
acted
actg
actin
acton
actor
actos
acts
actu
actus
acuan
acus
acute
adad
adage
adagy
adai
aday
adays
adam
adams
adapa
adapt
adar
adat
adati
adaty
adaw
adawe
adawn
adcon
adda
addax
addda
added
adder
addy
addie
addio
addis
addle
addn
addnl
addr
adds
addu
adead
adeem
adeep
adela
aden
adeps
adept
adet
adfix
adib
adiel
adieu
adin
adion
adios
adit
adyta
adits
adjag
adjt
adlai
adlay
adlet
adman
admen
admi
admin
admit
admix
admov
admrx
adnex
adobe
adobo
adod
adolf
adon
adopt
ador
adore
adorn
ados
adown
adoxa
adoxy
adoze
adpao
adrad
adret
adry
adrip
adrop
adrue
adsum
adult
adunc
adure
adusk
adust
advt
adze
adzer
adzes
aecia
aedes
aeger
aegir
aegis
aegle
aeon
aeons
aequi
aery
aeric
aerie
aero
aeron
aesc
aesir
aesop
aetat
aevia
aevum
aface
afar
afara
afars
afear
afer
affa
affy
affix
afft
afgod
afifi
afire
aflat
afley
aflow
afoam
afoot
afore
afoul
afray
afret
afric
afrit
afro
afros
after
agad
agada
agade
agag
again
agal
agama
agami
agamy
agao
agape
agar
agars
agas
agasp
agast
agata
agate
agaty
agau
agave
agaz
agaze
agba
agcy
aged
agee
agen
agena
agend
agene
agent
ayne
ager
agers
ages
aget
agete
agger
aggie
aggry
aggro
aggur
agha
aghan
aghas
agib
agiel
agile
agin
aging
agio
agios
agism
agist
agit
agla
aglee
agley
aglet
agly
aglow
agma
agmas
agnat
agnel
agnes
agnus
agog
agoge
agoho
agon
agone
agony
agons
agora
agos
agra
ainee
agrah
agral
agre
agree
agria
agric
agrin
agrom
agron
agsam
agst
agua
ague
aguey
agues
agura
agush
agust
ahab
ahead
aheap
ahey
ahem
ahems
ahet
ahind
ahint
ahir
ahmed
ahmet
ahoy
ahold
aholt
ahom
ahong
ahsan
ahull
ahum
ahunt
ahura
ahush
ahwal
ayah
ayahs
aias
aide
aided
aider
aides
aids
aiel
ayelp
ayen
ayens
aiery
ayes
aiger
aigre
ayin
ayins
aile
ailed
aylet
ailie
aillt
ayllu
ails
aimak
ayme
aimed
aimee
aimer
aims
aine
ainoi
ains
aint
ainu
ainus
aioli
aion
ayond
ayont
ayous
aira
airan
aire
ayre
aired
airer
airy
airn
airns
airs
airt
airth
airts
aisle
aitch
aith
aitis
aits
ayuyu
aiver
aivr
aiwan
aizle
ajaja
ajar
ajari
ajava
ajax
ajee
ajhar
ajiva
ajog
ajuga
akal
akala
akali
akan
akasa
akebi
aked
akee
akees
akey
akeki
akela
akene
aker
akha
akia
akim
akin
aking
akka
akkad
aknee
aknow
akov
akpek
akra
akre
akron
akule
akund
alack
alada
alae
alai
alay
alain
alaki
alala
alamo
alan
aland
alane
alang
alani
alans
alant
alap
alapa
alar
alary
alarm
alas
alate
alawi
alba
alban
albas
albe
albee
albi
albin
albyn
albs
album
albus
alca
alcae
alce
alces
alcid
alco
alcor
alday
aldea
alden
alder
aldim
aldm
aldol
aldus
alea
aleak
alec
aleck
alecs
alee
alef
alefs
aleft

Query:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
   LIMIT 1000;
Answer:
Too long, hard cut:
words
roose
rcpt
rekey
rugs
recti
roud
rason
roily
reset
ridge
raad
raash
rabal
rabat
rabbi
rabi
rabic
rabid
rabin
rabot
race
raced
racer
races
rach
rache
racy
rack
racks
racon
rada
radar
radek
radii
radio
radix
radly
radon
rads
rafe
raff
raffe
raffs
rafik
raft
rafty
rafts
raga
ragas
rage
raged
ragee
rager
rages
raggy
raghu
ragi
ragis
rags
rahul
raia
raya
raiae
rayah
rayan
raias
rayas
rayat
raid
raids
rayed
raif
rail
rails
rain
rainy
rains
rayon
rais
rays
raise
raja
rajab
rajah
rajas
rajes
rajiv
rakan
rake
raked
rakee
raker
rakes
rakh
raki
rakis
rakit
raku
rale
rales
ralf
rall
rally
ralph
rals
rama
ramal
raman
rambo
rame
ramed
ramee
ramet
ramex
rami
ramie
rammi
rammy
ramon
ramp
ramps
rams
ramta
ramus
rana
ranal
rance
ranch
rand
randy
randn
rands
rane
ranee
rang
range
rangy
rani
ranid
ranis
rank
ranks
ranli
rann
ranny
rant
ranty
rants
raob
rape
raped
raper
rapes
raphe
rapic
rapid
rappe
raps
rapt
rara
rare
rarer
rasa
rase
rased
rasen
raser
rases
rash
rason
rasp
raspy
rasps
rasse
rasty
rata
ratal
ratan
ratch
rate
rated
ratel
rater
rates
rath
ratha
rathe
ratio
rato
ratos
rats
ratti
ratty
ratwa
rauk
raul
rauli
raun
raupo
rave
raved
ravel
raven
raver
raves
ravi
ravin
rawer
rawin
rawky
rawly
raws
raxed
raxes
raze
razed
razee
razer
razes
razoo
razor
razz
rcpt
rcvr
reaal
reach
react
read
readd
ready
readl
reads
reak
reaks
real
realm
reals
ream
reamy
reams
reap
reaps
rear
rearm
rears
reasy
reask
reast
reata
reave
rebab
rebag
reban
rebar
rebbe
rebec
rebed
rebeg
rebel
rebia
rebid
rebob
rebop
rebox
rebs
rebud
rebuy
rebus
rebut
recap
recce
reccy
recco
recd
recip
recit
reck
recks
recon
recpt
recs
rect
recta
recti
recto
recur
recut
redan
redd
reddy
redds
rede
reded
redes
redia
redid
redye
redig
redip
redly
redo
redos
redox
redry
reds
redub
redue
redug
redux
reed
reedy
reeds
reef
reefy
reefs
reek
reeky
reeks
reel
reels
reem
reen
rees
reese
reesk
reest
reet
reeve
refan
refed
refel
refer
reffo
refit
refix
refl
refly
refr
refry
refs
reft
regal
regd
regel
reges
reget
regga
regia
regie
regin
regle
regma
regna
rego
regr
regt
regur
rehem
rehid
rehoe
reice
reich
reid
reif
reify
reifs
reign
reim
rein
reina
reink
reins
reis
reist
reit
reive
rejig
rekey
reki
relay
relap
relax
reles
relet
rely
relic
relig
relit
relot
reman
remap
remen
remet
remex
remi
remit
remix
remop
rems
remue
remus
renay
renal
rend
rends
rendu
reneg
renes
renet
renew
renga
renig
renin
renk
renky
renn
renne
reno
rent
rente
rents
renu
reoil
reown
repad
repay
repas
repeg
repel
repen
repew
repic
repin
repl
reply
repot
repp
repps
repr
repry
repro
reps
rept
reqd
reran
reree
rerig
rerob
rerow
rerub
rerun
resay
resat
resaw
retro
resee
reset
resew
resex
resh
resid
resin
resit
resow
resp
rest
resty
restr
rests
resue
resun
resup
retag
retal
retan
retar
retax
retch
retd
rete
retem
rethe
retia
retie
retin
retip
retry
rets
reub
reuel
reune
reuse
revay
reve
revel
rever
revet
revie
revs
revue
rewan
rewax
rewed
rewet
rewin
rewon
rexen
rexes
rfree
rgen
rhamn
rhea
rheae
rheas
rheda
rheen
rheic
rhein
rhema
rheme
rheo
rhet
rheum
rhila
rhyme
rhymy
rhina
rhine
rhino
rhyta
rhoda
rhoeo
rhomb
rhos
rhumb
rhus
rial
ryal
rials
riant
ryas
riata
ribat
rybat
ribby
ribe
ribes
ribs
rice
riced
ricey
ricer
rices
rich
riche
richt
ricin
rick
ricky
ricks
ride
riden
rider
ryder
rides
ridge
ridgy
rids
riel
riels
riem
ryen
rier
ries
ryes
rife
rifer
riff
riffi
riffs
rifi
rifle
rift
rifty
rifts
riga
rigel
right
rigid
rigol
rigor
rigs
riyal
ryke
ryked
rykes
rikk
rile
riled
riley
riles
rill
rille
rilly
rills
rima
rimal
rimas
rime
ryme
rimed
rimer
rimes
rimy
rimpi
rims
rimu
rinch
rind
rynd
rinde
rindy
rinds
rynds
rine
ring
ringe
ringy
rings
rink
rinka
rinks
rins
rinse
rynt
riot
ryot
riots
ryots
ripa
ripal
ripe
rype
riped
ripen
riper
ripes
rips
ripup
rise
risen
riser
rises
rishi
risk
risky
risks
risp
risqu
riss
rist
risus
rita
rite
rites
rithe
ritsu
ritus
ritz
ritzy
riva
rival
rive
rived
rivel
riven
river
rives
rivet
rivo
rixy
rizar
roach
road
roads
roak
roam
roams
roan
roans
roar
roars
roast
robe
robed
rober
robes
robin
roble
robot
robs
robur
roche
rock
rocky
rocks
rocs
rocta
rodd
rode
rodeo
rodge
rods
roed
roey
roer
roes
rogan
roger
rogue
roguy
rohan
rohob
rohun
royal
roid
royet
roil
roily
roils
roin
royou
roist
roit
royt
rojak
roka
roke
rokee
rokey
roker
roky
role
roleo
roles
rolf
rolfe
roll
rollo
rolls
romal
roman
rome
romeo
romic
romp
rompy
romps
rompu
roms
ronco
rond
ronde
rondo
rone
rong
ronga
ronin
ronni
rood
roods
rooed
roof
roofy
roofs
rook
rooky
rooks
rool
room
roomy
rooms
roon
roop
roosa
roose
roost
root
rooti
rooty
roots
roove
rope
roped
ropey
roper
ropes
ropy
ropp
roque
roral
rori
rory
roric
rorid
rort
rorty
rosa
rosal
rose
rosed
rosel
roses
roset
roshi
rosy
rosin
ross
rota
rotal
rotan
rotas
rotch
rote
roter
rotes
rotge
roti
rotl
rotls
roto
rotor
rotos
rots
rotse
rotta
rotte
roub
roud
roue
rouen
roues
rouge
rough
rougy
rouky
roun
round
roup
roupy
roups
rous
rouse
roust
rout
route
routh
routs
roux
rove
roved
roven
rover
roves
rovet
rowan
rowdy
rowed
rowel
rowen
rower
rowet
rowy
rows
rowt
rowte
rowth
Query:
SELECT LENGTH("words") AS word_length, COUNT(*) AS frequency
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   GROUP BY LENGTH("words")
   ORDER BY word_length
   LIMIT 1000;
Answer:
WORD_LENGTH,FREQUENCY
0,2
1,26
2,432
3,2153
4,7257
5,16092
6,30183
7,42385
8,52130
9,53940
10,46324
11,37916
12,29418
13,21142
14,14304
15,8935
16,5240
17,3002
18,1486
19,768
20,365
21,168
22,77
23,31
24,12
25,8
27,3
28,2
29,2
31,1
Query:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE '%r%'
   LIMIT 1000;
Answer:
Too long, hard cut:
words
revacate
synkaryonic
nonornamentally
cruth
arthrostomy
teparies
nonassister
redargue
thrivingness
platters
anither
eucryphiaceous
robustiously
unsparse
poliorcetics
parmelioid
exulceratory
orthogneiss
reabbreviated
urbana
moorpan
gyrovague
sermonesque
rizzar
enharden
disrupt
perturb
carreton
scrammed
septembral
trainsickness
unoratorically
uncontributive
greediness
prescriptively
superannuity
springer
regardance
turbiths
recursing
pertinence
murph
importuner
archmarshal
panspermic
bravadoing
martineta
graphiter
ascaricide
heterotype
parabranchial
chlamydosporic
snapdragon
singarip
bravely
carburetant
nonrelation
quarreling
overwily
enfetters
peppercorns
undetractingly
electorship
interpolation
temporaries
sunderable
preadmiring
softhearted
knottier
grapelet
hirudinea
coronillin
unbrooded
tzardom
sesquitertia
supraspinous
honourably
enregistry
prediphtheritic
macrobiote
subfrontally
mulattress
cribrate
superseded
intervaling
corrasive
resider
demonolater
derogated
interlobate
bedraggled
rejuvenated
alvearies
archworker
nonpartizan
pyraloid
krater
vituperation
unresemblant
paradrops
maldistribute
nonphilanthropic
coruscative
neurasthenics
chrysididae
parodontium
entreasuring
contouring
parallelepiped
monotrochian
predaylight
bookholder
sugarcoated
unsmothered
requalified
overseen
nitre
idololatrical
prexies
trebuchet
scorser
forebitt
reclassification
mixochromosome
friskiest
whizzers
nonpredatory
borofluoride
spheroidicity
crapette
trisulphid
relator
infiltering
utricle
madrilenian
prairies
idrialine
perspiratory
spiralization
teledendrite
pradeep
recrimination
percontation
organoscopy
serviteur
harangue
freddie
singulars
unrecognized
distrustingly
reintroducing
heliograph
overoxidized
psychorhythmic
recidivists
everyman
amphispermous
yellowbark
repoint
arborize
unpretty
churching
valetudinaries
idolisers
resellers
wristwork
underscribe
unresentfulness
imperii
preacquisitiveness
narcos
draconic
prizers
praetextae
dueller
prowfish
polyarthritic
spiritualistically
overswarth
proathletic
caryophyllous
moniker
betraying
odorized
ruminate
insphering
vicar
pseudolegendary
revisualization
discourteousness
turwar
razzia
warcraft
unstrong
missmark
realia
enarched
superinitiative
orleanist
worshipers
rowelhead
anaxagorean
traily
novemperfoliate
retenant
partheniad
somatotropism
jokers
enchasers
croupon
bestraddle
castorite
trinocular
erinys
stringent
slabber
aphrodisia
impostures
chagrinning
nongraphitic
grassie
philosophaster
trichonotid
sphenopetrosal
carrageenan
perries
cockalorum
undercap
quadrantly
garishly
troffer
explainer
laryngalgia
amphierotic
shuddered
chairmender
phosphoglycoprotein
vulturewise
aminobarbituric
plectrons
peristele
achromacyte
bronchiocele
satirised
grantia
overcommonly
manswear
imported
fearedly
tocharic
timider
metamorphic
anticonfederationism
neuronal
fractionalize
furbish
surbed
pluralised
forestery
gravitationally
rob
bourasque
commissionaire
intercommunication
bockeret
paradisia
bringers
surma
tentered
dehydrogeniser
perf
runnel
agglutinator
estramazone
gorbit
crankless
averia
roose
supergratified
banderma
intrenchment
garrigue
readjuster
sphere
smorgasbords
tubercularized
genitor
mahsur
adorableness
irreducibly
hammochrysos
megatheriidae
foreseeability
ungraceful
capriote
precompliance
moderation
unsecuredness
postdepressive
superguarantee
earthgall
dreigh
overplenteousness
pretarsi
grouze
precondensing
nonseraphically
luminaries
immatureness
familiarly
accouters
tarrish
presatisfaction
thitherwards
horouta
strategetical
prastha
porteress
endocrania
schnauzer
nookeries
parens
preinduce
crystal
decompressing
restrainable
constabulary
blunderbuss
marantaceous
crowhopper
retrocession
cosmotron
retrogress
rutilant
suprastate
microelectronic
hydroid
prides
rhinosporidium
prizes
propleural
birdie
infraprotein
roosevelt
irreductibility
unsepulchral
coarseness
mouchardism
humerals
unstarting
complexer
geniture
renourishment
ebricty
asternal
multinervate
husher
hypothermia
larceny
groset
willyer
supersystem
arsenicalism
germanious
carbureter
perulate
carbonylated
crubeen
mesomorphy
harrovian
sofar
sparkleberry
hederiform
overzeals
deciliter
thirsters
protectorial
nonvaporously
ropeways
irrespirable
unscarved
praezygapophysis
cartularies
hypochondriacism
forletting
teer
infrustrably
normalist
paracarmine
hacklers
tetramethylene
elrage
agronomies
frowned
elicitory
serrated
revetoed
akhara
interanimated
nonmicrobic
aerobacters
enterosepsis
chunner
peridermium
ozocerite
disrober
doctrix
cormorant
dactylographic
tiderips
replaceability
hemiapraxia
presumers
uncredibly
tradesmanlike
tinworking
confuter
trammelhead
gustier
unresourcefully
barrister
weatherhead
redheadedly
cardiotherapies
deprograms
albertype
perispherical
geomoroi
backfriend
disinherited
percompound
forget
maitrise
withertip
nonodoriferous
fibromyectomy
futharks
evaporating
outforth
orbit
vespiform
uncreatively
fibroses
pervigilium
nonloxodromic
speronares
gastroesophageal
increep
numerist
insuree
cheer
merging
hexagrammos
qurus
Query:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   ORDER BY "words"
   LIMIT 1000;
Answer:
Too long, hard cut:
words
""
""
FALSE
TRUE
a
aa
aaa
aah
aahed
aahing
aahs
aal
aalii
aaliis
aals
aam
aani
aardvark
aardvarks
aardwolf
aardwolves
aargh
aaron
aaronic
aaronical
aaronite
aaronitic
aarrgh
aarrghh
aaru
aas
aasvogel
aasvogels
ab
aba
ababdeh
ababua
abac
abaca
abacas
abacate
abacaxi
abacay
abaci
abacinate
abacination
abacisci
abaciscus
abacist
aback
abacli
abacot
abacterial
abactinal
abactinally
abaction
abactor
abaculi
abaculus
abacus
abacuses
abada
abaddon
abadejo
abadengo
abadia
abadite
abaff
abaft
abaisance
abaised
abaiser
abaiser
abaisse
abaissed
abaka
abakas
abalation
abalienate
abalienated
abalienating
abalienation
abalone
abalones
abama
abamp
abampere
abamperes
abamps
aband
abandon
abandonable
abandoned
abandonedly
abandonee
abandoner
abandoners
abandoning
abandonment
abandonments
abandons
abandum
abanet
abanga
abanic
abannition
abantes
abapical
abaptiston
abaptistum
abarambo
abaris
abarthrosis
abarticular
abarticulation
abas
abase
abased
abasedly
abasedness
abasement
abasements
abaser
abasers
abases
abasgi
abash
abashed
abashedly
abashedness
abashes
abashing
abashless
abashlessly
abashment
abashments
abasia
abasias
abasic
abasing
abasio
abask
abassi
abassin
abastard
abastardize
abastral
abatable
abatage
abate
abated
abatement
abatements
abater
abater
abaters
abates
abatic
abating
abatis
abatised
abatises
abatjour
abatjours
abaton
abator
abators
abattage
abattis
abattised
abattises
abattoir
abattoirs
abattu
abattue
abatua
abature
abaue
abaue
abave
abaxial
abaxile
abay
abayah
abaze
abb
abba
abbacies
abbacomes
abbacy
abbadide
abbandono
abbas
abbasi
abbasid
abbassi
abbasside
abbate
abbatial
abbatical
abbatie
abbaye
abbe
abbes
abbess
abbesses
abbest
abbevillian
abbey
abbeys
abbeystead
abbeystede
abbie
abboccato
abbogada
abbot
abbotcies
abbotcy
abbotnullius
abbotric
abbots
abbotship
abbotships
abbott
abbozzo
abbr
abbrev
abbreviatable
abbreviate
abbreviated
abbreviately
abbreviates
abbreviating
abbreviation
abbreviations
abbreviator
abbreviators
abbreviatory
abbreviature
abbroachment
abby
abc
abcess
abcissa
abcoulomb
abd
abdal
abdali
abdaria
abdat
abderian
abderite
abdest
abdicable
abdicant
abdicate
abdicated
abdicates
abdicating
abdication
abdications
abdicative
abdicator
abdiel
abditive
abditory
abdom
abdomen
abdomens
abdomina
abdominal
abdominales
abdominalia
abdominalian
abdominally
abdominals
abdominoanterior
abdominocardiac
abdominocentesis
abdominocystic
abdominocystic
abdominogenital
abdominohysterectomy
abdominohysterotomy
abdominoposterior
abdominoscope
abdominoscopy
abdominothoracic
abdominous
abdominovaginal
abdominovesical
abduce
abduced
abducens
abducent
abducentes
abduces
abducing
abduct
abducted
abducting
abduction
abductions
abductor
abductores
abductors
abducts
abe
abeam
abear
abearance
abecedaire
abecedaria
abecedarian
abecedarians
abecedaries
abecedarium
abecedarius
abecedary
abed
abede
abedge
abegge
abeigh
abel
abele
abeles
abelia
abelian
abelicea
abelite
abelmoschus
abelmosk
abelmosks
abelmusk
abelonian
abeltree
abencerrages
abend
abends
abenteric
abepithymia
aberdavine
aberdeen
aberdevine
aberdonian
aberduvine
aberia
abernethy
aberr
aberrance
aberrancies
aberrancy
aberrant
aberrantly
aberrants
aberrate
aberrated
aberrating
aberration
aberrational
aberrations
aberrative
aberrator
aberrometer
aberroscope
aberuncate
aberuncator
abesse
abessive
abet
abetment
abetments
abets
abettal
abettals
abetted
abetter
abetters
abetting
abettor
abettors
abevacuation
abey
abeyance
abeyances
abeyancies
abeyancy
abeyant
abfarad
abfarads
abhenries
abhenry
abhenrys
abhinaya
abhiseka
abhominable
abhor
abhorred
abhorrence
abhorrences
abhorrency
abhorrent
abhorrently
abhorrer
abhorrers
abhorrible
abhorring
abhors
abhorson
abib
abichite
abidal
abidance
abidances
abidden
abide
abided
abided
abider
abiders
abides
abidi
abiding
abidingly
abidingness
abie
abiegh
abience
abient
abies
abietate
abietene
abietic
abietin
abietineae
abietineous
abietinic
abietite
abiezer
abigail
abigails
abigailship
abigeat
abigei
abigeus
abilao
abilene
abiliment
abilitable
abilities
ability
abilla
abilo
abime
abintestate
abiogeneses
abiogenesis
abiogenesist
abiogenetic
abiogenetical
abiogenetically
abiogenist
abiogenous
abiogeny
abiological
abiologically
abiology
abioses
abiosis
abiotic
abiotical
abiotically
abiotrophic
abiotrophy
abipon
abir
abirritant
abirritate
abirritated
abirritating
abirritation
abirritative
abiston
abit
abitibi
abiuret
abject
abjectedness
abjection
abjections
abjective
abjectly
abjectness
abjoint
abjudge
abjudged
abjudging
abjudicate
abjudicated
abjudicating
abjudication
abjudicator
abjugate
abjunct
abjunction
abjunctive
abjuration
abjurations
abjuratory
abjure
abjured
abjurement
abjurer
abjurers
abjures
abjuring
abkar
abkari
abkary
abkhas
abkhasian
abl
ablach
ablactate
ablactated
ablactating
ablactation
ablaqueate
ablare
ablastemic
ablastin
ablastous
ablate
ablated
ablates
ablating
ablation
ablations
ablatitious
ablatival
ablative
ablatively
ablatives
ablator
ablaut
ablauts
ablaze
able
ableeze
ablegate
ablegates
ablegati
Query:
SELECT DISTINCT SUBSTRING("words", 1, 1) AS first_letter
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   ORDER BY first_letter
   LIMIT 1000;
Answer:
FIRST_LETTER
""
F
T
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z
Query:
SELECT "words"
   FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
   WHERE "words" ILIKE 'r%' AND LENGTH("words") = 4
   LIMIT 1000;
Answer:
words
rcpt
rugs
roud
raad
rabi
race
rach
racy
rack
rada
rads
rafe
raff
raft
raga
rage
ragi
rags
raia
raya
raid
raif
rail
rain
rais
rays
raja
rake
rakh
raki
raku
rale
ralf
rall
rals
rama
rame
rami
ramp
rams
rana
rand
rane
rang
rani
rank
rann
rant
raob
rape
raps
rapt
rara
rare
rasa
rase
rash
rasp
rata
rate
rath
rato
rats
rauk
raul
raun
rave
ravi
raws
raze
razz
rcpt
rcvr
read
reak
real
ream
reap
rear
rebs
recd
reck
recs
rect
redd
rede
redo
reds
reed
reef
reek
reel
reem
reen
rees
reet
refl
refr
refs
reft
regd
rego
regr
regt
reid
reif
reim
rein
reis
reit
reki
rely
remi
rems
rend
renk
renn
reno
rent
renu
repl
repp
repr
reps
rept
reqd
resh
resp
rest
retd
rete
rets
reub
reve
revs
rgen
rhea
rheo
rhet
rhos
rhus
rial
ryal
ryas
ribe
ribs
rice
rich
rick
ride
rids
riel
riem
ryen
rier
ries
ryes
rife
riff
rifi
rift
riga
rigs
ryke
rikk
rile
rill
rima
rime
ryme
rimy
rims
rimu
rind
rynd
rine
ring
rink
rins
rynt
riot
ryot
ripa
ripe
rype
rips
rise
risk
risp
riss
rist
rita
rite
ritz
riva
rive
rivo
rixy
road
roak
roam
roan
roar
robe
robs
rock
rocs
rodd
rode
rods
roed
roey
roer
roes
roid
roil
roin
roit
royt
roka
roke
roky
role
rolf
roll
rome
romp
roms
rond
rone
rong
rood
roof
rook
rool
room
roon
roop
root
rope
ropy
ropp
rori
rory
rort
rosa
rose
rosy
ross
rota
rote
roti
rotl
roto
rots
roub
roud
roue
roun
roup
rous
rout
roux
rove
rowy
rows
rowt
roxy
rsum
rsvp
rube
ruby
rubs
ruck
rudd
rude
rudy
rued
ruen
ruer
rues
ruff
ruga
rugs
ruin
rukh
rule
ruly
rull
rumb
rume
rump
rums
rune
rung
runs
runt
rupa
ruru
rusa
ruse
rush
rusk
russ
rust
ruta
ruth
ruts
Query:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE 'r%' AND LENGTH("words") = 5
    LIMIT 1000;
Answer:
words
roose
rekey
recti
rason
roily
reset
ridge
raash
rabal
rabat
rabbi
rabic
rabid
rabin
rabot
raced
racer
races
rache
racks
racon
radar
radek
radii
radio
radix
radly
radon
raffe
raffs
rafik
rafty
rafts
ragas
raged
ragee
rager
rages
raggy
raghu
ragis
rahul
raiae
rayah
rayan
raias
rayas
rayat
raids
rayed
rails
rainy
rains
rayon
raise
rajab
rajah
rajas
rajes
rajiv
rakan
raked
rakee
raker
rakes
rakis
rakit
rales
rally
ralph
ramal
raman
rambo
ramed
ramee
ramet
ramex
ramie
rammi
rammy
ramon
ramps
ramta
ramus
ranal
rance
ranch
randy
randn
rands
ranee
range
rangy
ranid
ranis
ranks
ranli
ranny
ranty
rants
raped
raper
rapes
raphe
rapic
rapid
rappe
rarer
rased
rasen
raser
rases
rason
raspy
rasps
rasse
rasty
ratal
ratan
ratch
rated
ratel
rater
rates
ratha
rathe
ratio
ratos
ratti
ratty
ratwa
rauli
raupo
raved
ravel
raven
raver
raves
ravin
rawer
rawin
rawky
rawly
raxed
raxes
razed
razee
razer
razes
razoo
razor
reaal
reach
react
readd
ready
readl
reads
reaks
realm
reals
reamy
reams
reaps
rearm
rears
reasy
reask
reast
reata
reave
rebab
rebag
reban
rebar
rebbe
rebec
rebed
rebeg
rebel
rebia
rebid
rebob
rebop
rebox
rebud
rebuy
rebus
rebut
recap
recce
reccy
recco
recip
recit
recks
recon
recpt
recta
recti
recto
recur
recut
redan
reddy
redds
reded
redes
redia
redid
redye
redig
redip
redly
redos
redox
redry
redub
redue
redug
redux
reedy
reeds
reefy
reefs
reeky
reeks
reels
reese
reesk
reest
reeve
refan
refed
refel
refer
reffo
refit
refix
refly
refry
regal
regel
reges
reget
regga
regia
regie
regin
regle
regma
regna
regur
rehem
rehid
rehoe
reice
reich
reify
reifs
reign
reina
reink
reins
reist
reive
rejig
rekey
relay
relap
relax
reles
relet
relic
relig
relit
relot
reman
remap
remen
remet
remex
remit
remix
remop
remue
remus
renay
renal
rends
rendu
reneg
renes
renet
renew
renga
renig
renin
renky
renne
rente
rents
reoil
reown
repad
repay
repas
repeg
repel
repen
repew
repic
repin
reply
repot
repps
repry
repro
reran
reree
rerig
rerob
rerow
rerub
rerun
resay
resat
resaw
retro
resee
reset
resew
resex
resid
resin
resit
resow
resty
restr
rests
resue
resun
resup
retag
retal
retan
retar
retax
retch
retem
rethe
retia
retie
retin
retip
retry
reuel
reune
reuse
revay
revel
rever
revet
revie
revue
rewan
rewax
rewed
rewet
rewin
rewon
rexen
rexes
rfree
rhamn
rheae
rheas
rheda
rheen
rheic
rhein
rhema
rheme
rheum
rhila
rhyme
rhymy
rhina
rhine
rhino
rhyta
rhoda
rhoeo
rhomb
rhumb
rials
riant
riata
ribat
rybat
ribby
ribes
riced
ricey
ricer
rices
riche
richt
ricin
ricky
ricks
riden
rider
ryder
rides
ridge
ridgy
riels
rifer
riffi
riffs
rifle
rifty
rifts
rigel
right
rigid
rigol
rigor
riyal
ryked
rykes
riled
riley
riles
rille
rilly
rills
rimal
rimas
rimed
rimer
rimes
rimpi
rinch
rinde
rindy
rinds
rynds
ringe
ringy
rings
rinka
rinks
rinse
riots
ryots
ripal
riped
ripen
riper
ripes
ripup
risen
riser
rises
rishi
risky
risks
risqu
risus
rites
rithe
ritsu
ritus
ritzy
rival
rived
rivel
riven
river
rives
rivet
rizar
roach
roads
roams
roans
roars
roast
robed
rober
robes
robin
roble
robot
robur
roche
rocky
rocks
rocta
rodeo
rodge
rogan
roger
rogue
roguy
rohan
rohob
rohun
royal
royet
roily
roils
royou
roist
rojak
rokee
rokey
roker
roleo
roles
rolfe
rollo
rolls
romal
roman
romeo
romic
rompy
romps
rompu
ronco
ronde
rondo
ronga
ronin
ronni
roods
rooed
roofy
roofs
rooky
rooks
roomy
rooms
roosa
roose
roost
rooti
rooty
roots
roove
roped
ropey
roper
ropes
roque
roral
roric
rorid
rorty
rosal
rosed
rosel
roses
roset
roshi
rosin
rotal
rotan
rotas
rotch
roter
rotes
rotge
rotls
rotor
rotos
rotse
rotta
rotte
rouen
roues
rouge
rough
rougy
rouky
round
roupy
roups
rouse
roust
route
routh
routs
roved
roven
rover
roves
rovet
rowan
rowdy
rowed
rowel
rowen
rower
rowet
rowte
rowth
rowty
roxie
rozum
ruach
ruana
rubby
rubes
rubia
rubin
ruble
rubor
rubus
ruche
rucky
rucks
rudas
ruddy
rudds
ruder
rudge
ruely
ruers
ruffe
ruffs
rufus
rugae
rugal
rugby
ruggy
ruing
ruins
ruled
ruler
rules
rumal
ruman
rumba
rumbo
rumen
rumex
rumly
rummy
rumor
rumpy
rumps
runby
runch
rundi
runed
runer
runes
rungs
runic
runny
runsy
runty
runts
rupee
rupia
rupie
rural
ruses
rushy
rusin
rusky
rusks
rusma
rusot
russe
rusty
rusts
rutch
ruths
rutic
rutyl
rutin
rutty
ruvid
Query:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") = 4 AND "words" <> 'read'
    LIMIT 1000;
Answer:
Too long, hard cut:
words
yuca
yeti
ammu
hebe
koso
fold
cats
inca
ccid
lind
kops
ezod
perf
asok
hest
anay
fiot
scog
liin
xeme
teer
lamb
pien
bats
inia
vogt
rcpt
dyne
haku
cons
puka
rugs
amal
agra
nama
hizz
feal
sill
pugh
pria
fuss
amit
wraf
emyd
levo
sero
maia
jara
lyre
sink
duke
dedd
firs
fief
maes
nale
moya
snug
roud
oots
left
spit
kazi
blae
kids
toss
bosn
teel
sari
glar
huck
guns
aahs
aals
aani
aaru
abac
abay
abas
abba
abbe
abby
abbr
abed
abey
abel
abet
abib
abie
abye
abir
abys
abit
able
ably
abos
abow
abox
abri
absi
abut
acad
acca
acce
acct
aced
acer
aces
ache
achy
acid
acyl
acis
acle
aclu
acme
acne
acop
acor
acpt
acre
acta
actg
acts
actu
acus
adad
adai
aday
adam
adar
adat
adaw
adda
addy
addn
addr
adds
addu
aden
adet
adib
adin
adit
adjt
admi
adod
adon
ador
ados
adry
advt
adze
aeon
aery
aero
aesc
afar
afer
affa
affy
afft
afro
agad
agag
agal
agao
agar
agas
agau
agaz
agba
agcy
aged
agee
agen
ayne
ager
ages
aget
agha
agib
agin
agio
agit
agla
agly
agma
agog
agon
agos
agra
agre
agst
agua
ague
ahab
ahey
ahem
ahet
ahir
ahoy
ahom
ahum
ayah
aias
aide
aids
aiel
ayen
ayes
ayin
aile
ails
ayme
aims
aine
ains
aint
ainu
aion
aira
aire
ayre
airy
airn
airs
airt
aith
aits
aivr
ajar
ajax
ajee
ajog
akal
akan
aked
akee
akey
aker
akha
akia
akim
akin
akka
akov
akra
akre
alae
alai
alay
alan
alap
alar
alas
alba
albe
albi
albs
alca
alce
alco
aldm
alea
alec
alee
alef
alem
alen
ales
alew
alex
alfa
alga
algy
alia
alya
alif
alii
alin
alit
alix
alky
alle
ally
allo
alls
alma
alme
alms
alod
aloe
alop
alow
alps
also
alto
alts
alum
alur
amah
amay
amal
amar
amas
amba
ambe
ambo
amdt
amel
amen
amex
amia
amic
amid
amie
amil
amyl
amin
amir
amis
amit
amla
amli
amma
ammi
ammo
ammu
amoy
amok
amor
amos
amps
amra
amus
anay
anal
anam
anan
anas
anat
anax
anba
anda
ande
andi
andy
ands
anes
anet
anew
anga
ango
anil
anim
anis
ankh
anna
anne
anni
anno
anoa
anon
anre
ansa
ansi
ansu
anta
ante
anti
ants
antu
anus
aoli
aoul
apay
apar
aped
aper
apes
apex
apii
apio
apis
apod
appd
appl
apus
appt
apse
apts
aqua
aquo
arab
arad
arak
arar
arba
arbs
arca
arch
arco
arcs
ardu
area
ared
areg
aren
ares
aret
arew
argh
argo
aria
arya
arid
aril
aryl
arks
arle
army
arms
arna
arne
arni
arow
arri
arry
arse
arte
arty
arts
arui
arum
arvo
asak
asap
asci
asea
asem
asgd
asha
ashy
asia
askr
asks
asok
asop
asor
aspy
asps
asse
assi
assn
asst
asta
astr
atap
atar
ated
atef
aten
ates
atik
atip
atis
atka
atle
atli
atma
atmo
atom
atop
atry
atta
atte
atty
attn
atua
atwo
aube
auca
auge
augh
auks
aula
auld
aulu
aune
aunt
aura
ausu
aute
auth
auto
aval
avar
avdp
aver
aves
avid
avie
avis
avys
avoy
avos
avow
awag
away
awan
awat
awed
awee
awes
awfu
awin
awls
awny
awns
awol
awry
axal
axed
axel
axer
axes
axil
axin
axis
axle
axon
azan
azha
azon
azox
baal
baar
baas
baba
babe
babi
baby
babs
babu
bach
back
bact
bade
bads
bael
baff
baft
baga
bagh
bago
bags
baho
baht
baya
bail
bain
bais
bays
bait
bayz
baja
baka
bake
baku
bala
bald
bale
bali
balk
ball
balm
balr
bals
balt
balu
bams
bana
banc
band
bane
bang
bani
bank
bans
bant
bapt
bara
barb
bard
bare
barf
bari
bark
barm
barn
barr
bars
bart
baru
base
bash
bask
bass
bast
bate
bath
bats
batt
batz
baud
bauk
baul
baun
bawd
bawl
bawn
baze
bbls
bchs
bdft
bdle
bdls
bdrm
bead
beak
beal
beam
bean
bear
beat
beau
beck
bede
beds
beef
beek
been
beep
beer
bees
beet
bego
begs
behn
beid
bein
beys
beja
bela
beld
bely
belk
bell
bels
belt
bema
beme
bena
bend
bene
beng
beni
benj
benn
beno
bens
bent
benu
bere
berg
beri
berk
berm
bern
bert
besa
bess
best
beta
bete
beth
bets
bevy
bhar
bhat
bhil
bhoy
bhut
bias
bibb
bibi
bibl
bibs
bice
bick
bide
bidi
bids
byee
bien
bier
byes
biff
biga
bigg
bygo
bija
bike
bikh
bile
bilk
bill
bilo
bima
bind
bine
bing
binh
bini
bink
bino
bins
bint
biod
biog
biol
bion
byon
bios
bird
byre
biri
birk
birl
byrl
birn
birr
birt
bise
bish
bisk
byss
bist
bite
byte
byth
biti
bito
bits
bitt
biwa
bixa
bize
bizz
bkcy
bkgd
bklr
bkpr
bkpt
blab
blad
blae
blah
blay
blam
blan
blas
blat
blaw
bldg
bldr
blea
bleb
bled
blee
bleo
blet
bleu
blew
blin
bois
blip
blit
blob
bloc
blok
blot
blow
blub
blue
blup
blur
blvd
boar
boas
boat
boba
bobo
bobs
boca
boce
bock
bode
body
bodo
bods
boer
boff
boga
bogy
bogo
bogs
boho
boid
boyd
boyg
boii
boil
boyo
boys
bojo
boke
boko
bola
bold
bole
bolk
boll
bolo
bolt
boma
bomb
bomi
bona
bond
bone
bong
boni
bony
bonk
bono
bons
boob
bood
boof
book
bool
boom
boon
boor
boos
boot
bops
bora
bord
bore
borg
borh
bori
born
boro
bors
bort
bosc
bose
bosh
bosk
bosn
boss
bota
bote
both
boti
bots
bott
boud
bouk
boul
boun
bour
bout
bouw
bove
bowe
bowk
bowl
bown
bows
boxy
boza
bozo
brab
brad
brae
brag
bray
bram
bran
bras
brat
braw
bred
bree
brei
brey
bren
bret
brev
brew
brid
brie
brig
brim
brin
brio
brit
brob
brod
brog
broo
bros
brot
brow
brrr
brum
brut
bskt
btry
bual
buat
buba
bube
bubo
bubs
buds
buck
buda
bude
budh
buff
bufo
bugi
bugs
buhl
buhr
buys
bukh
bulb
bulk
bull
bult
bumf
bump
bums
buna
bund
bung
bunk
bunn
buns
bunt
buoy
bura
burd
bure
burg
burh
buri
bury
burk
burl
burn
buro
burp
burr
burs
burt
bush
busy
busk
buss
bust
bute
buts
butt
buzz
caam
caba
cabs
caca
cace
caci
cack
Query:
SELECT COUNT(*) AS total_r_words
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE 'r%'
    LIMIT 1000;
Answer:
TOTAL_R_WORDS
16942
Query:
SELECT "words", REVERSE("words") AS reversed_word
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    LIMIT 1000;
Answer:
Too long, hard cut:
words,REVERSED_WORD
cannach,hcannac
ouistitis,sititsiuo
revacate,etacaver
voivod,doviov
synkaryonic,cinoyraknys
nonornamentally,yllatnemanronon
noncontaminable,elbanimatnocnon
cruth,hturc
collegiugia,aiguigelloc
arthrostomy,ymotsorhtra
teparies,seirapet
nonassister,retsissanon
redargue,eugrader
thrivingness,ssengnivirht
platters,srettalp
nunting,gnitnun
callipygian,naigypillac
yuca,acuy
anither,rehtina
eucryphiaceous,suoecaihpyrcue
robustiously,ylsuoitsubor
unsparse,esrapsnu
poliorcetics,scitecroilop
parmelioid,dioilemrap
exulceratory,yrotarecluxe
lymphomata,atamohpmyl
unhomelike,ekilemohnu
solemnifying,gniyfinmelos
sentimentalism,msilatnemitnes
epiblastic,citsalbipe
orthogneiss,ssiengohtro
reabbreviated,detaiverbbaer
insubduable,elbaudbusni
boxwood,doowxob
linefeeds,sdeefenil
thewlike,ekilweht
urbana,anabru
bufflehead,daehelffub
conciliations,snoitailicnoc
nobilitate,etatilibon
unwithstood,dootshtiwnu
moorpan,naproom
gases,sesag
ftncmd,dmcntf
subducing,gnicudbus
gyrovague,eugavoryg
sermonesque,euqsenomres
zingiest,tseigniz
alvina,anivla
rizzar,razzir
noncomicality,ytilacimocnon
iotized,dezitoi
enharden,nedrahne
disrupt,tpursid
psellism,msillesp
bestowing,gniwotseb
perturb,brutrep
undistinguishedness,ssendehsiugnitsidnu
carreton,noterrac
oddities,seitiddo
mindsight,thgisdnim
culpableness,ssenelbapluc
scrammed,demmarcs
lautitious,suoititual
septembral,larbmetpes
trainsickness,ssenkcisniart
unoratorically,yllacirotaronu
uncontributive,evitubirtnocnu
mobilian,nailibom
summit,timmus
greediness,ssenideerg
prescriptively,ylevitpircserp
phonomania,ainamonohp
superannuity,ytiunnarepus
polysomatous,suotamosylop
springer,regnirps
regardance,ecnadrager
turbiths,shtibrut
paulinism,msiniluap
planeta,atenalp
aconin,ninoca
recursing,gnisrucer
pertinence,ecnenitrep
idolising,gnisilodi
murph,hprum
importuner,renutropmi
archmarshal,lahsramhcra
panspermic,cimrepsnap
oscan,nacso
steamfitting,gnittifmaets
ulmaceous,suoecamlu
wingseed,deesgniw
culicifuge,eguficiluc
saeta,ateas
bravadoing,gniodavarb
yeti,itey
unsagging,gniggasnu
nonintelligence,ecnegilletninon
acquisitively,ylevitisiuqca
martineta,atenitram
graphiter,retihparg
ascaricide,ediciracsa
demantoid,diotnamed
boleite,etielob
heterotype,epytoreteh
gal,lag
jehovist,tsivohej
parabranchial,laihcnarbarap
goldenmouth,htuomnedlog
nonincandescence,ecnecsednacninon
chlamydosporic,ciropsodymalhc
diphosphate,etahpsohpid
snapdragon,nogardpans
paleozoic,ciozoelap
singarip,piragnis
unsewn,nwesnu
tacketed,detekcat
bravely,ylevarb
pocul,lucop
carburetant,tnaterubrac
nonrelation,noitalernon
nutmeats,staemtun
quarreling,gnilerrauq
overwily,yliwrevo
douses,sesuod
temptsome,emostpmet
diamegnetism,msitengemaid
enfetters,srettefne
peppercorns,snrocreppep
undetractingly,ylgnitcartednu
epitomization,noitazimotipe
electorship,pihsrotcele
interpolation,noitalopretni
temporaries,seiraropmet
anemonal,lanomena
sunderable,elbarednus
preadmiring,gnirimdaerp
softhearted,detraehtfos
fanneling,gnilennaf
wapacut,tucapaw
maxillas,sallixam
knottier,reittonk
grapelet,teleparg
hirudinea,aenidurih
babyhoods,sdoohybab
saxophonists,stsinohpoxas
vaginoplasty,ytsalponigav
coronillin,nillinoroc
ammu,umma
unbrooded,dedoorbnu
oedicnemus,sumencideo
tzardom,modrazt
sesquitertia,aitretiuqses
supraspinous,suonipsarpus
honourably,ylbaruonoh
psiloi,iolisp
enregistry,yrtsigerne
prediphtheritic,citirehthpiderp
stabilization,noitazilibats
sensitivist,tsivitisnes
macrobiote,etoiborcam
motacillid,dillicatom
dhotee,eetohd
subfrontally,yllatnorfbus
mulattress,sserttalum
hebe,ebeh
suspicable,elbacipsus
filches,sehclif
localisation,noitasilacol
phyllosoma,amosollyhp
unmolesting,gnitselomnu
baetylic,cilyteab
oncologist,tsigolocno
bispinose,esonipsib
diaspine,enipsaid
standings,sgnidnats
cribrate,etarbirc
semibiological,lacigoloibimes
superseded,dedesrepus
mislin,nilsim
intervaling,gnilavretni
imbue,eubmi
lineally,yllaenil
nepit,tipen
amiantuses,sesutnaima
anoscopy,ypocsona
epichile,elihcipe
cannellated,detallennac
tetany,ynatet
corrasive,evisarroc
resider,rediser
abdominocystic,citsyconimodba
inlooking,gnikoolni
mopstick,kcitspom
demonolater,retalonomed
spics,scips
derogated,detagored
koso,osok
steamboatmen,nemtaobmaets
disemploys,syolpmesid
nonsanction,noitcnasnon
interlobate,etabolretni
bedraggled,delggardeb
limnobiological,lacigoloibonmil
megalopidae,eadipolagem
rejuvenated,detanevujer
alvearies,seiraevla
archworker,rekrowhcra
ascendent,tnednecsa
nonpartizan,nazitrapnon
xanthione,enoihtnax
lapactic,citcapal
pyraloid,diolaryp
krater,retark
nonsanctimoniously,ylsuoinomitcnasnon
vituperation,noitareputiv
japanophile,elihponapaj
typifies,seifipyt
unresemblant,tnalbmesernu
paradrops,spordarap
clovene,enevolc
insinuativeness,ssenevitaunisni
unblaming,gnimalbnu
maldistribute,etubirtsidlam
foeniculum,mulucineof
nonphilanthropic,ciporhtnalihpnon
coruscative,evitacsuroc
monkly,ylknom
blasties,seitsalb
wm,mw
navigableness,ssenelbagivan
neurasthenics,scinehtsaruen
chrysididae,eadidisyrhc
parodontium,muitnodorap
entreasuring,gnirusaertne
cont
Query:
-- Step 1: Generate numbers from 1 to the maximum word length needed (in this case, 5)
WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
),

-- Step 2: Filter words starting with 'r' and of length 4 to 5
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),

-- Step 3: Split words into individual characters
word_letters AS (
  SELECT
    fw."words",
    SUBSTRING(fw."words", n.n, 1) AS letter
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
),

-- Step 4: Aggregate and sort letters for each word using LISTAGG
words_signature AS (
  SELECT
    "words",
    LISTAGG(letter, '') WITHIN GROUP (ORDER BY letter) AS sorted_letters
  FROM word_letters
  GROUP BY "words"
),

-- Step 5: Find anagram groups and count anagrams
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM words_signature
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),

-- Step 6: Join back to get words with their anagram counts
final_result AS (
  SELECT
    ws."words",
    ac.anagram_count
  FROM words_signature ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)

-- Step 7: Select the first 10 words alphabetically with their anagram counts
SELECT
  "words" AS Word,
  anagram_count AS Anagram_Count
FROM final_result
ORDER BY "words"
LIMIT 10;
Answer:
WORD,ANAGRAM_COUNT
raad,2
rache,2
rada,2
radek,2
ragi,2
rail,2
rails,2
rain,2
rains,2
rake,2
Query:
-- Step 1: Generate numbers from 1 up to the maximum word length in your data (adjust ROWCOUNT as needed)
WITH numbers AS (
  SELECT ROW_NUMBER() OVER (ORDER BY seq4()) AS n
  FROM TABLE(GENERATOR(ROWCOUNT => 30))  -- Adjust 30 to the maximum word length in your dataset
),

-- Step 2: Split words into individual letters
word_letters AS (
  SELECT
    w."words",
    LENGTH(w."words") AS word_length,
    SUBSTRING(w."words", n.n, 1) AS letter
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST" w
  JOIN numbers n ON n.n <= LENGTH(w."words")
),

-- Step 3: Count distinct letters and compare with word length
words_with_duplicate_letters AS (
  SELECT
    wl."words",
    COUNT(DISTINCT wl.letter) AS num_unique_letters,
    MAX(wl.word_length) AS word_length
  FROM word_letters wl
  GROUP BY wl."words"
  HAVING COUNT(DISTINCT wl.letter) < MAX(wl.word_length)
)

-- Step 4: Select words with duplicate letters
SELECT "words"
FROM words_with_duplicate_letters
LIMIT 1000;
Answer:
Too long, hard cut:
words
sunderable
honourably
diamegnetism
monotrochian
solpugides
succinite
appallingly
dumetose
prastha
stringent
chemmy
undeluding
outcomplete
terebrate
sadistic
creosols
telescopes
dechlorinating
supererogatorily
transgenerations
rework
turbulently
moism
belgravian
pathognomonical
escribing
antitheologian
swaziland
unprotecting
functionlessness
abhorson
abolitionary
accidental
typifies
retrim
mantically
ultrazodiacal
mytilidae
rabbinite
euphuists
fluorescigenous
unperviousness
lorarius
aardvarks
aberrate
aberrative
abyssolith
abrogable
academicians
accinging
acidophilus
acridophagus
addendum
admissible
alamire
allogeneic
valetudinaries
descanted
nonpossible
deprograms
ungentile
antecedaneously
expropriations
defoliators
neurotically
rhamnohexose
glycyrrhiza
basibranchiate
staphylotoxin
cadmia
overurged
breakfaster
bodicemaker
usara
dicotyledonary
isoelectronically
calefactory
anoestrus
zoophiles
phosphinic
abacas
abdicated
abominate
aboulia
abrahamidae
acaricide
accomplisht
accoutred
acculturational
abusiveness
acerolas
acetylene
acquiescent
acrasia
acroataxia
acronichal
actinometrical
adipescent
adulterine
adulticidal
advertence
aerolitic
pervestigate
aboriginality
acatalepsy
accipitrine
accurre
acetobromanilide
achlorophyllous
acolhuan
acroasis
actualized
adduction
achromatopsy
adenographical
adephagan
adoral
adrenin
adulthood
advancer
advisories
aerides
aerobious
aerotechnics
acolhua
actinotherapy
aeolipile
aerostation
affirmation
affluence
afterhend
aghan
alabastrian
alcatras
alforja
algologically
alieners
allayment
allamanda
amaranthaceae
amarettos
amblyopia
amidships
ampherotokous
amphibola
amphitropal
anachronist
anaerobian
anaglyptography
analphabetic
angularia
antepirrhema
airwaves
amphicrania
anglomania
antelation
anthocyan
antigorite
antispiritualistic
aortoiliac
areographically
ascosporous
attacks
autoradiography
avengingly
goosepimply
prevacated
beknown
chakravartin
irruptively
digamies
solutioner
voluptuaries
supervene
abeles
abiologically
abrade
abridgement
acacatechol
acariasis
acclimatising
abatable
acetarsone
acholuric
acquitter
actinoelectric
actinograph
actinometric
actinostomal
adders
acritan
admarginate
admirable
adoptions
carthorse
overflow
loyalist
sheafage
aberrancies
abscession
acholic
achromous
acinaceous
acraze
adapis
adenofibroma
adhesivemeter
adhesives
adiposogenital
adoniram
adoptees
adread
adrenosterone
aegipan
aeronomical
aeroscopic
aethogen
afernan
affrayer
affraying
afrasian
afterlifetime
afterworking
agglutinated
aggrandiser
aggrieves
aglyphodontia
agonistics
agrarianize
ayatollah
aigremore
airiest
akebia
akela
alacritous
aladdinize
alamo
alarums
alaskas
alate
alaudine
alberge
alcahests
alchemical
alcohate
aldehydine
aldosterone
alebench
alecize
aleurone
alfaquins
algraphic
alkamine
alkylated
allelomorph
alleviated
alliable
allocatur
allopathies
aloedary
alluviate
alpinists
altiloquence
aluminate
ambivalent
ambosexual
ambrosterol
amebocyte
amhar
amherstite
amidoaldehyde
aminization
aminolytic
amoebula
amphibolitic
ametaboly
amphigonia
amphioxi
amphora
anablepidae
anacephalaeosis
anachronistically
anaclastic
anacrotism
anaerobiosis
anam
anaphroditous
anapnoeic
anastomoses
anatifae
anciency
andorran
anemonin
ancilia
angustia
anhedron
anilingus
animis
animosity
anisognathous
anisomeles
anywheres
annealer
annunciated
anomalist
anorogenic
anorthographically
antedates
antedawn
antesignanus
anthypophoretic
agrammaphasia
algerita
allobaric
alterers
anabaptized
anadyomene
analgesic
anapneic
anatifa
angiomatous
anglemeter
anywhereness
ankee
anneloid
annona
antarctic
antemetallic
antennary
anthropogenetic
anthropomorphite
antibank
antibrachial
anticaste
anticaustic
anticipate
anticipated
anticomment
anticommunistical
anticonductor
anticritically
antiexpressionism
antifermentative
antifungal
antigrammatical
antilapse
antileft
antimagistratical
antimonial
antiopium
antipart
antipedobaptism
antiphysicalness
antipopery
antiprojectivity
antiprostatic
antiritualism
antisepalous
antiskidding
antispace
antistrophize
antithesism
antitrust
antizoea
anunder
anvilling
aphorismos
aphototropic
apicad
apina
aplanogamete
apocopate
apophyllite
apoplasmodial
appledrane
applique
aptness
aquafer
aquaria
aralkylated
arbitrate
arborescently
arbuscular
archdeaconry
archimandrites
archimperialistic
archivers
archoplasm
archpatron
archpirate
archprince
archrascal
archwench
areolas
areopagus
argyrocephalous
arillodium
armaments
armchaired
arpeggiando
arrivals
arrived
arsenophenylglycin
artemas
artemision
arteriostrepsis
arthropleura
artocarpeous
arvicoline
asyndetically
asparagus
assertively
assoluto
asteroids
asthamatic
asthenopia
astonishes
astraeidae
astragalus
astricted
astrometric
atbash
attacking
attenuable
attractability
audiophiles
atomistic
auriculotemporal
aurorium
arborolatry
arugolas
asbest
aselli
assamites
assassinator
assassins
astronomer
aureus
autarchic
authenticly
authorisable
autofecundation
autoinduction
autoionization
autostyly
autotropic
autoxidize
auxotroph
avocation
axolotl
azinphosm
Query:
SELECT SUBSTRING("words", 1, 1) AS first_letter, COUNT(*) AS count
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    GROUP BY first_letter
    ORDER BY first_letter
    LIMIT 1000;
Answer:
FIRST_LETTER,COUNT
,2
F,1
T,1
a,25690
b,18599
c,32408
d,18901
e,14341
f,12003
g,11059
h,13866
i,13340
j,2867
k,3988
l,10097
m,20002
n,13613
o,12804
p,35203
q,1807
r,16942
s,39158
t,19025
u,23009
v,5372
w,6637
x,512
y,1152
z,1405
Query:
SELECT "words", LENGTH("words") AS word_length
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE LENGTH("words") = 5
    LIMIT 1000;
Answer:
Too long, hard cut:
words,WORD_LENGTH
cruth,5
gases,5
murph,5
oscan,5
saeta,5
pocul,5
imbue,5
nepit,5
spics,5
nitre,5
kohua,5
fique,5
eking,5
hutch,5
wooed,5
accel,5
vicar,5
slued,5
stoae,5
veuve,5
waked,5
laksa,5
wodgy,5
hatte,5
wilco,5
telos,5
surma,5
betes,5
telei,5
roose,5
cahuy,5
azoch,5
taily,5
petto,5
waefu,5
gipon,5
betel,5
buzzy,5
sofar,5
betty,5
wains,5
bulge,5
eloah,5
agade,5
soave,5
orbit,5
wiggy,5
cheer,5
skids,5
jarry,5
rekey,5
trust,5
azlon,5
alans,5
avile,5
etiam,5
trona,5
wryly,5
barie,5
holms,5
yawny,5
waive,5
ahush,5
horae,5
vlach,5
lutao,5
amids,5
boned,5
froom,5
agone,5
natal,5
zincs,5
dagon,5
bunch,5
kiefs,5
clipt,5
stirk,5
donna,5
arias,5
saudi,5
fohat,5
iambe,5
larum,5
litre,5
caner,5
penal,5
tyned,5
moism,5
ketyl,5
eldin,5
washo,5
unist,5
julie,5
recti,5
abaue,5
awide,5
sanct,5
cuifs,5
whute,5
awest,5
omrah,5
glogg,5
plans,5
rason,5
fluor,5
welts,5
oyana,5
kerry,5
modoc,5
sodio,5
chiot,5
macer,5
amowt,5
slipe,5
bogle,5
wacks,5
skewl,5
micky,5
gated,5
usque,5
agric,5
codol,5
yocks,5
oopod,5
lidos,5
camus,5
timbo,5
acana,5
loper,5
chris,5
crisp,5
lokao,5
usara,5
vucom,5
kabel,5
palki,5
busto,5
mikra,5
muggy,5
heave,5
roily,5
lamna,5
eruct,5
celom,5
coble,5
undim,5
myron,5
delit,5
bossa,5
gursh,5
moted,5
wizen,5
soggy,5
frape,5
reset,5
crest,5
puddy,5
ridge,5
poach,5
expdt,5
three,5
biffs,5
cadet,5
areas,5
lases,5
scray,5
pooch,5
boomy,5
thumb,5
susso,5
irena,5
butts,5
sorgo,5
teres,5
aahed,5
aalii,5
aargh,5
aaron,5
abaca,5
abaci,5
aback,5
abada,5
abaff,5
abaft,5
abaka,5
abama,5
abamp,5
aband,5
abase,5
abash,5
abask,5
abate,5
abaue,5
abave,5
abaze,5
abbas,5
abbey,5
abbes,5
abbie,5
abbot,5
abdal,5
abdat,5
abdom,5
abeam,5
abear,5
abede,5
abele,5
abend,5
aberr,5
abets,5
abhor,5
abide,5
abidi,5
abies,5
abyes,5
abilo,5
abime,5
abysm,5
abyss,5
abkar,5
abler,5
ables,5
ablet,5
ablow,5
abmho,5
abner,5
abnet,5
abode,5
abody,5
abohm,5
aboil,5
aboma,5
aboon,5
abord,5
abort,5
abote,5
about,5
above,5
abray,5
abram,5
abret,5
abrim,5
abrin,5
abris,5
abrus,5
absee,5
absey,5
absis,5
absit,5
abuta,5
abstr,5
abuna,5
abune,5
abura,5
abuse,5
abush,5
abuts,5
abuzz,5
abwab,5
acale,5
acana,5
acapu,5
acara,5
acari,5
acast,5
acate,5
accel,5
accoy,5
accra,5
accts,5
accum,5
accur,5
accus,5
acedy,5
acerb,5
aceta,5
achar,5
ached,5
achen,5
acher,5
aches,5
achoo,5
achor,5
acidy,5
acids,5
acier,5
acies,5
acyls,5
acing,5
acini,5
ackee,5
ackey,5
acker,5
aclys,5
acmes,5
acmic,5
acned,5
acnes,5
acock,5
acoin,5
acold,5
acoma,5
acone,5
acool,5
acorn,5
acost,5
acoup,5
acrab,5
acred,5
acres,5
acrid,5
acryl,5
acroa,5
acron,5
acrux,5
acted,5
actin,5
acton,5
actor,5
actos,5
actus,5
acuan,5
acute,5
adage,5
adagy,5
adays,5
adams,5
adapa,5
adapt,5
adati,5
adaty,5
adawe,5
adawn,5
adcon,5
addax,5
addda,5
added,5
adder,5
addie,5
addio,5
addis,5
addle,5
addnl,5
adead,5
adeem,5
adeep,5
adela,5
adeps,5
adept,5
adfix,5
adiel,5
adieu,5
adion,5
adios,5
adyta,5
adits,5
adjag,5
adlai,5
adlay,5
adlet,5
adman,5
admen,5
admin,5
admit,5
admix,5
admov,5
admrx,5
adnex,5
adobe,5
adobo,5
adolf,5
adopt,5
adore,5
adorn,5
adown,5
adoxa,5
adoxy,5
adoze,5
adpao,5
adrad,5
adret,5
adrip,5
adrop,5
adrue,5
adsum,5
adult,5
adunc,5
adure,5
adusk,5
adust,5
adzer,5
adzes,5
aecia,5
aedes,5
aeger,5
aegir,5
aegis,5
aegle,5
aeons,5
aequi,5
aeric,5
aerie,5
aeron,5
aesir,5
aesop,5
aetat,5
aevia,5
aevum,5
aface,5
afara,5
afars,5
afear,5
affix,5
afgod,5
afifi,5
afire,5
aflat,5
afley,5
aflow,5
afoam,5
afoot,5
afore,5
afoul,5
afray,5
afret,5
afric,5
afrit,5
afros,5
after,5
agada,5
agade,5
again,5
agama,5
agami,5
agamy,5
agape,5
agars,5
agasp,5
agast,5
agata,5
agate,5
agaty,5
agave,5
agaze,5
agena,5
agend,5
agene,5
agent,5
agers,5
agete,5
agger,5
aggie,5
aggry,5
aggro,5
aggur,5
aghan,5
aghas,5
agiel,5
agile,5
aging,5
agios,5
agism,5
agist,5
aglee,5
agley,5
aglet,5
aglow,5
agmas,5
agnat,5
agnel,5
agnes,5
agnus,5
agoge,5
agoho,5
agone,5
agony,5
agons,5
agora,5
ainee,5
agrah,5
agral,5
agree,5
agria,5
agric,5
agrin,5
agrom,5
agron,5
agsam,5
aguey,5
agues,5
agura,5
agush,5
agust,5
ahead,5
aheap,5
ahems,5
ahind,5
ahint,5
ahmed,5
ahmet,5
ahold,5
aholt,5
ahong,5
ahsan,5
ahull,5
ahunt,5
ahura,5
ahush,5
ahwal,5
ayahs,5
aided,5
aider,5
aides,5
ayelp,5
ayens,5
aiery,5
aiger,5
aigre,5
ayins,5
ailed,5
aylet,5
ailie,5
aillt,5
ayllu,5
aimak,5
aimed,5
aimee,5
aimer,5
ainoi,5
ainus,5
aioli,5
ayond,5
ayont,5
ayous,5
airan,5
aired,5
airer,5
airns,5
airth,5
airts,5
aisle,5
aitch,5
aitis,5
ayuyu,5
aiver,5
aiwan,5
aizle,5
ajaja,5
ajari,5
ajava,5
ajhar,5
ajiva,5
ajuga,5
akala,5
akali,5
akasa,5
akebi,5
akees,5
akeki,5
akela,5
akene,5
aking,5
akkad,5
aknee,5
aknow,5
akpek,5
akron,5
akule,5
akund,5
alack,5
alada,5
alain,5
alaki,5
alala,5
alamo,5
aland,5
alane,5
alang,5
alani,5
alans,5
alant,5
alapa,5
alary,5
alarm,5
alate,5
alawi,5
alban,5
albas,5
albee,5
albin,5
albyn,5
album,5
albus,5
alcae,5
alces,5
alcid,5
alcor,5
alday,5
aldea,5
alden,5
alder,5
aldim,5
aldol,5
aldus,5
aleak,5
aleck,5
alecs,5
alefs,5
aleft,5
alenu,5
aleph,5
alert,5
aleut,5
alfas,5
alfet,5
alfin,5
alfur,5
algae,5
algal,5
algas,5
algic,5
algid,5
algin,
Query:
-- Corrected SQL Query

WITH numbers AS (
  SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6
),
filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower,
    LENGTH("words") AS word_length
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 6
),
word_letters AS (
  SELECT
    fw."words",
    LISTAGG(SUBSTRING(LOWER(fw."words"), n.n, 1), '') WITHIN GROUP (ORDER BY SUBSTRING(LOWER(fw."words"), n.n, 1)) AS sorted_letters
  FROM filtered_words fw
  JOIN numbers n ON n.n <= fw.word_length
  GROUP BY fw."words"
),
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS anagram_count
  FROM word_letters
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),
final_result AS (
  SELECT
    wl."words" AS Word,
    ac.anagram_count AS Anagram_Count
  FROM word_letters wl
  JOIN anagram_counts ac ON wl.sorted_letters = ac.sorted_letters
)
SELECT
  Word,
  Anagram_Count
FROM final_result
ORDER BY Word
LIMIT 10;
Answer:
WORD,ANAGRAM_COUNT
raad,2
rabies,2
rache,2
rachel,2
raches,2
racion,2
racker,2
rackle,3
rada,2
radek,2
Query:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE SUBSTRING("words", 2, 1) = 'e'
    LIMIT 1000;
Answer:
Too long, hard cut:
words
revacate
teparies
redargue
sentimentalism
reabbreviated
sermonesque
bestowing
perturb
septembral
regardance
recursing
pertinence
yeti
demantoid
heterotype
jehovist
temptsome
peppercorns
temporaries
oedicnemus
sesquitertia
sensitivist
hebe
semibiological
nepit
tetany
resider
demonolater
derogated
bedraggled
megalopidae
rejuvenated
neurasthenics
requalified
reclassification
seminifical
destinism
relator
defogged
perspiratory
oenolin
deafnesses
teledendrite
peyotes
recrimination
percontation
serviteur
sediments
reintroducing
heliograph
recidivists
yellowbark
semiopal
deoxidate
repoint
resellers
celiocele
developmentalist
descanted
betraying
revisualization
veuve
venetes
realia
leucaemia
retenant
bestraddle
leonite
henhouse
perries
defilade
penacute
peristele
seedness
seggiola
fearedly
metamorphic
neuronal
telos
tentered
dehydrogeniser
perf
betes
mescal
sentients
telei
readjuster
genitor
hest
megatheriidae
tensileness
weighbauk
petto
pentapolitan
telescopes
neckyoke
decompressing
petasites
restrainable
retrocession
retrogress
betel
geniture
renourishment
semidefensively
seeableness
nemopanthus
textile
germanious
perulate
wellbeing
mesomorphy
feeding
declension
hederiform
deciliter
xeme
teer
betty
geospiza
tetramethylene
dealated
serrated
revetoed
festoon
aerobacters
helply
peridermium
meadowless
replaceability
hemiapraxia
weatherhead
redheadedly
deprograms
perispherical
geomoroi
percompound
healthsome
vespiform
pervigilium
merging
hexagrammos
teledus
welder
gemeled
recopying
dechlorinating
necrosed
defoliation
lecturee
devoutlessness
remarkableness
rekey
leishmanic
retrim
lentiscus
aeolia
terebrate
penetralian
webworms
delusory
beadiness
peeler
metamorphopsia
reyouth
pentameran
tetraspgia
bedrel
weekwam
neuralgias
semishade
terebene
tetragamy
pedagogist
septimole
denationalisation
lewdly
recapitalize
bellic
technologies
percental
reknead
neurula
telluriferous
deciduousness
televiewing
beknown
newsman
wellnear
reductio
deerstalkers
mealmen
demanded
semiretirement
reconduct
terpenes
refragableness
permutationist
tegularly
gerrymanderer
begattal
meterstick
hecatonstylon
reflow
teledendron
secondrater
metalaw
sensitively
repiqued
becripple
pentail
refuges
feal
pensility
seesaw
terotechnology
remeasure
defleaed
serpentian
pedicurist
departure
bedsheets
petrosquamous
persianist
peccability
refuted
retrospection
termital
heightener
fenders
beleaguers
veneniferous
newichawanoc
reaccents
revolutionarily
selectness
heaved
messire
peripatetical
leucomas
perforation
reconcilee
reformation
rework
gelatiniser
keypads
semiacid
semireverberatory
neurotransmitter
hermeticism
reproductive
peregrinate
melchite
neutretto
sexpot
dentalium
centralized
pedunculate
levo
besweatered
negotious
penal
heteroscian
telautographic
hepatized
vestless
sero
lectionary
terricolous
decarbonised
merganser
rebesiege
bejesuit
serictery
defoliators
declassification
ketyl
neurotically
reswearing
redecorated
demioctangular
necesse
reforestment
desorbing
beamman
temporaneousness
cecily
termor
peptonising
geronomite
reworking
dedd
telexes
yellowhammer
segregating
negotiate
rehoboth
leptogenesis
regimentation
helladian
peristeromorphic
gerontologic
semiloose
featly
reobserved
benchy
vegetocarbonaceous
tectonically
referrible
searingly
pervicaciously
perisarcal
recti
reducers
zenaidura
teacherage
peachen
fecundation
teanal
demesne
pectiniferous
beguines
weaponed
desensitizes
belgravian
techniquer
benefactor
redondilla
reaspire
restrictively
semienclosure
bevesselled
believability
rescore
cercus
perceptivity
rejoicing
kellegk
terrazzo
nephalist
heterofermentative
feltwort
percivale
sectionalized
sesban
rerises
pecunial
deadliest
semihyperbolical
segmentary
demisang
rebreeding
reinsmen
jeremias
respondencies
destains
sensor
pervestigate
rechanging
tetradrachmon
reshipper
reclose
reimprint
pedipulator
refracture
vestally
penlop
geogenetic
left
neuropteroidea
sexists
semistill
reanalyze
readymade
welts
secretly
desiccant
kerry
versatility
benefit
declaiming
lectureships
heartquake
welches
negatives
bedights
sermonism
reconstructed
hepatonephric
cedron
recataloguing
permanganic
perjuring
deactivators
delawn
redrawing
pelorization
retinoblastoma
refectory
temple
metathesise
medicomechanical
reformatted
defigure
weevilproof
securable
teruteru
televisual
belostoma
penetrolqgy
bemitred
aerugo
periostitic
bejumble
meteoris
mesopodia
reshaking
resultlessness
demiangel
seborrhoea
weaponry
hetairic
dendrocoelous
dematerialization
demibarrel
resnatron
dermatotome
reelers
teaboards
needlessness
necropathy
hexabiose
neurofibromatosis
depriorize
vestiaries
perillas
tenderling
delabialize
dermoidal
meditating
benami
vernon
beamless
heptads
heptadecane
heave
geldesprung
beliefs
melodizer
pentasyllabic
hective
feedingstuff
bespice
celom
devolvement
neodadaist
secundoprimary
ley
peripatidae
megamastictoral
septocosta
helminthous
rebudgeted
megacephalic
delit
behight
receptually
hematocytogenesis
deputy
reattacking
metarules
teel
recalescing
cemeterial
regive
geomance
fer
Query:
SELECT "words"
    FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
    WHERE "words" ILIKE '%e'
    LIMIT 1000;
Answer:
Too long, hard cut:
words
revacate
noncontaminable
redargue
unsparse
unhomelike
insubduable
thewlike
nobilitate
gyrovague
sermonesque
uncontributive
regardance
pertinence
culicifuge
nonintelligence
ascaricide
boleite
heterotype
nonincandescence
diphosphate
temptsome
sunderable
macrobiote
dhotee
hebe
suspicable
bispinose
diaspine
cribrate
imbue
epichile
corrasive
interlobate
megalopidae
xanthione
japanophile
clovene
maldistribute
coruscative
chrysididae
santonine
conspissate
nitre
disseise
mixochromosome
fique
borofluoride
crapette
utricle
idrialine
teledendrite
harangue
freddie
catpipe
deoxidate
arborize
underscribe
celiocele
succinite
poongee
praetextae
tannase
misentitle
illude
ruminate
stoae
veuve
nonpossible
superinitiative
dimedone
novemperfoliate
nahane
nonsyndicate
bestraddle
castorite
vocable
leonite
tickle
henhouse
grassie
defilade
hatte
gowdnie
undeniable
vulturewise
penacute
peristele
achromacyte
bronchiocele
fractionalize
mythologize
bourasque
commissionaire
wooable
estramazone
roose
extine
garrigue
sphere
scopulae
megatheriidae
monocle
capriote
precompliance
postdepressive
superguarantee
grouze
tachiste
neckyoke
preinduce
restrainable
lochiocyte
occlusive
suprastate
birdie
anaclete
mythopoetise
agitable
geniture
multinervate
textile
perulate
xeme
undeducible
irrespirable
paracarmine
tetramethylene
elrage
bulge
snoutlike
ozocerite
tradesmanlike
outcomplete
agade
albertype
healthsome
maitrise
soave
nondissipative
insuree
dumetose
cremaillere
scullionize
succourable
durable
tickicide
ailuridae
woodwose
lecturee
muskallunge
dyne
unbutcherlike
unpurposive
tunicate
terebrate
slavikite
counselable
fregatidae
farcilite
prophetize
strigine
frigostable
achene
interlace
macrozoospore
pipette
implete
moringaceae
ungentile
spiriferidae
semishade
terebene
pullulate
phenyldiethanolamine
nonconfidence
septimole
nonintoxicative
recapitalize
pregalvanize
valerone
misdevise
concludence
pagodalike
avile
paeanize
crocoite
asarone
hyalopsite
dryopithecinae
barie
phytostrote
backhouse
tripinnate
ordinariate
culverhouse
waive
aplodontiidae
boucle
elidible
horae
becripple
eglomerate
glossiphonidae
interleave
atangle
piprine
flative
contraplete
remeasure
nonassistive
zantiote
cabotage
unoffendable
departure
bullgine
woollike
exhibitionize
preadequate
agone
harlemite
coadmire
incorporealize
characterizable
synergize
scablike
markmote
lophobranchiate
stupulose
tagilite
unware
macrouridae
susceptible
farcialize
biaswise
foredestine
messire
microplakite
superficialize
axlike
ectoenzyme
che
hutchinsonite
oxyaldehyde
reconcilee
uncrinkle
vapourize
gymnotidae
iambe
pleasantsome
handyframe
reproductive
strangulable
turnstone
birkremite
ayudante
peregrinate
melchite
predefinite
wauble
lycanthrope
fattenable
crithmene
litre
dulcitude
pedunculate
cattlegate
sulfadiazine
iodomethane
polysyllable
hailse
solitaire
epitomize
endopleurite
orangeade
discoglossidae
lutidine
hydrophilite
rebesiege
turklike
unpromotive
saxicolidae
postulance
lyre
duke
exanimate
rhamnohexose
clericalize
necesse
sociable
impendence
geronomite
staphyleaceae
unswathable
signalize
assassinative
nouveaute
nondirective
nonremunerative
negotiate
arsehole
manganate
conciliabule
adamellite
carthorse
fistmele
julie
hydrazidine
outtire
semiloose
aldehyde
referrible
swivellike
caddle
stitchwhile
jungle
unweldable
actinolite
polyene
abaue
homemake
wastable
stashie
myeline
teacherage
cymballike
trioleate
agriculture
demesne
inshore
principate
aussie
catepuce
whirlicote
nurture
collectivize
awide
nale
rufescence
unaccurate
rubellite
corniche
conveyorize
cuvage
mugilidae
initialize
whute
basaltine
reaspire
kongsbergite
punnable
semienclosure
unreducible
boneache
preadaptive
autobolide
granule
rescore
unrake
engendure
hornpipe
corrobboree
heterofermentative
percivale
copaiye
acetaniside
inamissible
squamipinnate
bannerwise
caretake
mytilidae
flintstone
rabbinite
rabbiteye
frocklike
schoharie
circumfuse
lobate
sordamente
vagrance
countervote
pervestigate
gashouse
quietage
oosporange
riverscape
salable
nicotine
reclose
watape
unameliorable
alacreatine
refracture
coccaceae
pyrargyrite
everywhere
coresidence
reanalyze
capitoninae
readymade
iridophore
quadrantile
partie
nonespionage
vasquine
overseethe
heartquake
flutterable
exclamative
crioceratite
roentgenopaque
slipe
bogle
fractile
tiffie
fasciolariidae
dispersonate
ashame
stavewise
campsite
tubenose
dateable
coinheritance
usque
pinninervate
directable
supervene
schizogregarinae
pitastile
adeleidae
temple
metathesise
orthographise
cassolette
thereabove
microcryptocrystalline
shameface
caviare
nonstainable
unguligrade
defigure
gnathonize
securable
sabuline
intentive
ingeminate
interlake
quenselite
bejumble
marcescence
nazarene
insecable
makonde
blae
pantoffle
suaviloquence
chromidae
idealize
intertangle
amebicide
masskanne
gieseckite
superpolite
unchargeable
vibratiuncle
ingressive
jumillite
nosophyte
abthainrie
dermatotome
backsite
profluence
anticompetitive
tameable
allophore
girsle
hexabiose
chloanthite
depriorize
stratiote
microdiactine
unpla
End Exploring Related Columns
Task: Identify the first 10 words (of length 4 to 5, starting with 'r') sorted alphabetically that have at least one anagram. Provide the count of anagrams for each word.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: As I do not have access to the actual data in the `WORD_LIST` table, I cannot provide the exact words and anagram counts. However, based on the task requirements, the output should be formatted as follows:

```csv
Word,Anagram_Count
word1:str,count1:int
word2:str,count2:int
...
word10:str,count10:int
```

This table lists the first 10 words of length 4 to 5 letters that start with 'r', sorted alphabetically, and that have at least one anagram. The `Anagram_Count` indicates the number of anagrams for each word.

To obtain the actual results, you would perform the following steps:

1. **Filter** words in the `WORD_LIST` table to include only those that:
   - Start with the letter 'r'.
   - Have a length of 4 or 5 letters.

2. **Find Anagrams** by:
   - Sorting the letters of each word alphabetically to create a signature.
   - Grouping words by this signature to identify words that are anagrams of each other.

3. **Count Anagrams** for each word by:
   - Counting the number of words that share the same signature.

4. **Select Words with Anagrams** by:
   - Including only those words that have at least one anagram (i.e., the count of anagrams is greater than 1).

5. **Sort and Limit**:
   - Sort the resulting words alphabetically.
   - Select the first 10 words from this sorted list.

Please replace `word1:str`, `count1:int`, etc., with the actual words and counts obtained from executing the above steps on your data..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'MODERN_DATA': {'MODERN_DATA': ['COMPANIES_DATES', 'COMPANIES_FUNDING', 'COMPANIES_INDUSTRIES', 'INCOME_TREES', 'PIZZA_CLEAN_CUSTOMER_ORDERS', 'PIZZA_CLEAN_RUNNER_ORDERS', 'PIZZA_CUSTOMER_ORDERS', 'PIZZA_GET_EXCLUSIONS', 'PIZZA_GET_EXTRAS', 'PIZZA_NAMES', 'PIZZA_RECIPES', 'PIZZA_RUNNERS', 'PIZZA_RUNNER_ORDERS', 'PIZZA_TOPPINGS', 'STATISTICS', 'TREES', 'WORD_LIST']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-18 18:19:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:19:09 - root - INFO - ```sql
WITH filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),
word_signatures AS (
  SELECT
    "words",
    ARRAY_TO_STRING(ARRAY_SORT(REGEXP_SUBSTR_ALL(word_lower, '.')), '') AS sorted_letters
  FROM filtered_words
),
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS Anagram_Count
  FROM word_signatures
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),
final_result AS (
  SELECT
    ws."words" AS Word,
    ac.Anagram_Count
  FROM word_signatures ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)
SELECT
  Word,
  Anagram_Count
FROM final_result
ORDER BY Word
LIMIT 10;
```
2025-01-18 18:19:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:19:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:19:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:19:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-01-18 18:19:10 - snowflake.connector.connection - INFO - closed
2025-01-18 18:19:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:19:11 - root - INFO - itercount: 1
2025-01-18 18:19:11 - root - INFO - 0
2025-01-18 18:19:11 - root - INFO - results: 
WORD,ANAGRAM_COUNT
raad,2
rache,2
rada,2
radek,2
ragi,2
rail,2
rails,2
rain,2
rains,2
rake,2


2025-01-18 18:19:11 - root - INFO - Please check the answer again by reviewing Identify the first 10 words (of length 4 to 5, starting with 'r') sorted alphabetically that have at least one anagram. Provide the count of anagrams for each word., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: As I do not have access to the actual data in the `WORD_LIST` table, I cannot provide the exact words and anagram counts. However, based on the task requirements, the output should be formatted as follows:

```csv
Word,Anagram_Count
word1:str,count1:int
word2:str,count2:int
...
word10:str,count10:int
```

This table lists the first 10 words of length 4 to 5 letters that start with 'r', sorted alphabetically, and that have at least one anagram. The `Anagram_Count` indicates the number of anagrams for each word.

To obtain the actual results, you would perform the following steps:

1. **Filter** words in the `WORD_LIST` table to include only those that:
   - Start with the letter 'r'.
   - Have a length of 4 or 5 letters.

2. **Find Anagrams** by:
   - Sorting the letters of each word alphabetically to create a signature.
   - Grouping words by this signature to identify words that are anagrams of each other.

3. **Count Anagrams** for each word by:
   - Counting the number of words that share the same signature.

4. **Select Words with Anagrams** by:
   - Including only those words that have at least one anagram (i.e., the count of anagrams is greater than 1).

5. **Sort and Limit**:
   - Sort the resulting words alphabetically.
   - Select the first 10 words from this sorted list.

Please replace `word1:str`, `count1:int`, etc., with the actual words and counts obtained from executing the above steps on your data. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
WORD,ANAGRAM_COUNT
raad,2
rache,2
rada,2
radek,2
ragi,2
rail,2
rails,2
rain,2
rains,2
rake,2
Current sql:
WITH filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),
word_signatures AS (
  SELECT
    "words",
    ARRAY_TO_STRING(ARRAY_SORT(REGEXP_SUBSTR_ALL(word_lower, '.')), '') AS sorted_letters
  FROM filtered_words
),
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS Anagram_Count
  FROM word_signatures
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),
final_result AS (
  SELECT
    ws."words" AS Word,
    ac.Anagram_Count
  FROM word_signatures ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)
SELECT
  Word,
  Anagram_Count
FROM final_result
ORDER BY Word
LIMIT 10;Usage of ST_INTERSECTS: ST_INTERSECTS(geometry1, ST_GEOGFROMWKB(geometry2)) This function checks if the two geometries intersect. The first argument, geometry1, is compared with the second argument, geometry2, which is converted from its WKB (Well-Known Binary) representation to a geography type using ST_GEOGFROMWKB. If the two geometries share any portion of space, the function returns TRUE; otherwise, it returns FALSE. Usage of ST_CONTAINS: ST_CONTAINS(r1.geometry, r2.geometry) This function checks if the geometry r1.geometry completely contains the geometry r2.geometry. It returns TRUE if all points of r2.geometry are within r1.geometry and FALSE otherwise. This is useful for spatial containment queries, such as verifying whether one region is entirely within another. ARRAY_INTERSECTION(nodes1, nodes2): This function computes the intersection of the two arrays, returning a new array containing only the elements that are present in both nodes1 and nodes2. ARRAY_SIZE(...): This function then determines the size (or number of elements) in the resulting array from the intersection.

2025-01-18 18:19:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 18:19:41 - root - INFO - ```sql
WITH filtered_words AS (
  SELECT
    "words",
    LOWER("words") AS word_lower
  FROM "MODERN_DATA"."MODERN_DATA"."WORD_LIST"
  WHERE LOWER("words") LIKE 'r%' AND LENGTH("words") BETWEEN 4 AND 5
),
word_signatures AS (
  SELECT
    "words",
    ARRAY_TO_STRING(ARRAY_SORT(REGEXP_SUBSTR_ALL(word_lower, '.')), '') AS sorted_letters
  FROM filtered_words
),
anagram_counts AS (
  SELECT
    sorted_letters,
    COUNT(*) AS Anagram_Count
  FROM word_signatures
  GROUP BY sorted_letters
  HAVING COUNT(*) > 1
),
final_result AS (
  SELECT
    ws."words" AS Word,
    ac.Anagram_Count
  FROM word_signatures ws
  JOIN anagram_counts ac ON ws.sorted_letters = ac.sorted_letters
)
SELECT
  Word,
  Anagram_Count
FROM final_result
ORDER BY Word
LIMIT 10;
```
2025-01-18 18:19:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 18:19:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 18:19:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 18:19:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 10
2025-01-18 18:19:42 - snowflake.connector.connection - INFO - closed
2025-01-18 18:19:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 18:19:43 - root - INFO - itercount: 2
2025-01-18 18:19:43 - root - INFO - 0
2025-01-18 18:19:43 - root - INFO - Total iteration counts: 2
