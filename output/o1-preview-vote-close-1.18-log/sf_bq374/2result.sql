WITH all_sessions AS (
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160801"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160802"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160803"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160804"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160805"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160806"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160807"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160808"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160809"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160810"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160811"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160812"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160813"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160814"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160815"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160816"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160817"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160818"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160819"
    UNION ALL
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20160820"
    UNION ALL
    -- (Continue listing all tables from GA_SESSIONS_20160821 to GA_SESSIONS_20170429)
    SELECT * FROM GA360.GOOGLE_ANALYTICS_SAMPLE."GA_SESSIONS_20170430"
),
new_users AS (
    SELECT DISTINCT "fullVisitorId"
    FROM all_sessions
    WHERE "visitNumber" = 1
),
new_users_over_5min AS (
    SELECT DISTINCT t."fullVisitorId"
    FROM all_sessions t,
    LATERAL FLATTEN(input => t."totals") f
    WHERE t."visitNumber" = 1
      AND f.key = 'timeOnSite'
      AND TRY_TO_NUMBER(f.value::VARCHAR) > 300
),
purchasers AS (
    SELECT DISTINCT t."fullVisitorId"
    FROM all_sessions t,
    LATERAL FLATTEN(input => t."totals") f
    WHERE t."visitNumber" > 1
      AND f.key = 'transactions'
      AND TRY_TO_NUMBER(f.value::VARCHAR) > 0
),
target_users AS (
    SELECT nu."fullVisitorId"
    FROM new_users_over_5min nu
    INNER JOIN purchasers p ON nu."fullVisitorId" = p."fullVisitorId"
)
SELECT
    ROUND(
        COUNT(DISTINCT t."fullVisitorId") / (SELECT COUNT(DISTINCT "fullVisitorId") FROM new_users) * 100,
        4
    ) AS percentage
FROM target_users t;