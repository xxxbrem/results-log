Both SQL queries aim to calculate the average number of new unicorn companies per year in the top industry from 2019 to 2021. Let's compare them to determine which one is more appropriate.

---

**1. Analysis of the SQL Queries:**

- **`0result.sql`:**

  - **Approach:**
    - Calculates the total number of new unicorns in each industry between 2019 and 2021.
    - Identifies the top industry with the highest count of new unicorns.
    - Divides the total number of new unicorns in the top industry by 3 (the number of years) to compute the average per year.
  - **Limitation:**
    - Assumes an even distribution of new unicorns across the years.
    - Does not account for variations in yearly counts, which may skew the average if some years have significantly more or fewer new unicorns.

- **`1result.sql`:**

  - **Approach:**
    - Extracts the year from the `date_joined` field to consider yearly data.
    - Identifies all new unicorns from 2019 to 2021, categorized by industry and year.
    - Determines the top industry based on the total count of new unicorns during the period.
    - Calculates the number of new unicorns per year for the top industry.
    - Computes the average by taking the mean of the yearly counts, accounting for fluctuations in different years.
  - **Advantage:**
    - Provides a more accurate average by considering the actual number of new unicorns each year.
    - Reflects any year-over-year changes, ensuring the average is not skewed by anomalies in any single year.

---

**2. Conclusion:**

While both queries yield the same numerical result, **`1result.sql`** is the more accurate and appropriate choice for the following reasons:

- It accounts for the yearly distribution of new unicorns, providing a true average based on actual annual counts.
- It mitigates the impact of any anomalous years with unusually high or low numbers of new unicorns.
- It aligns precisely with the question's requirement to calculate the average number of new unicorns per year.

---

**3. Selected SQL:**

Based on the analysis above, the correct SQL query to use is:

```plain
1result.sql
```