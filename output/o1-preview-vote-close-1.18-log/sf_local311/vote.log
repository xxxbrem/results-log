After reviewing both SQL queries and their results, we can determine that **`1result.sql`** is the correct SQL query to answer the task. Here's why:

1. **Use of CTEs for Clarity and Modularity**: The query in `1result.sql` uses Common Table Expressions (CTEs), which break down the problem into smaller, logical steps. This makes the query easier to read, understand, and maintain.

2. **Accurate Selection of Best Driver**:
   - The `best_driver_ranked` CTE in `1result.sql` uses the `ROW_NUMBER()` window function to rank drivers based on their total points per constructor per year. This approach ensures that even if there are ties, only one driver (the one with the first occurrence) is selected as the best driver.
   - In contrast, `0result.sql` uses `MAX(driver_points)` without explicitly handling ties or identifying which driver achieved the maximum points. This could lead to ambiguities if multiple drivers have the same maximum points.

3. **Structured Approach**:
   - `1result.sql` systematically calculates constructor points and driver points separately before combining them. Each step is clearly defined in its own CTE, which enhances readability.
   - It explicitly joins the best driver data with the constructor points to compute the combined points, ensuring that the data aligns correctly.

4. **Consistency in Results**: Both queries produce the same results, but `1result.sql` does so with a method that is more robust and less prone to errors. It provides a solid foundation for accurate data retrieval, especially in complex datasets.

5. **Handling of NULLs and Data Integrity**: The use of `ROW_NUMBER()` and explicit joins in `1result.sql` reduces the risk of NULL values affecting the outcome, ensuring the integrity of the combined points calculation.

**Conclusion**: Given the reasons above, **`1result.sql`** is the preferred and correct SQL query to use. It offers a clear, accurate, and reliable method to determine the top 3 constructors based on the combined points of their best driver and team in each year.

---

```plain
1result.sql
```