WITH ADMIN_AREA AS (
  SELECT
    City,
    ST_UNION_AGG(ADMIN_GEOMETRY) AS ADMIN_GEOMETRY
  FROM (
    SELECT 'Amsterdam' AS City, t."GEO_CORDINATES" AS ADMIN_GEOMETRY
    FROM "NETHERLANDS_OPEN_MAP_DATA"."NETHERLANDS"."V_ADMINISTRATIVE" t,
         LATERAL FLATTEN(input => PARSE_JSON(t."NAMES")) f
    WHERE f.VALUE::STRING ILIKE '%Amsterdam%' AND t."ADMIN_LEVEL" = '8'

    UNION ALL

    SELECT 'Rotterdam' AS City, t."GEO_CORDINATES" AS ADMIN_GEOMETRY
    FROM "NETHERLANDS_OPEN_MAP_DATA"."NETHERLANDS"."V_ADMINISTRATIVE" t,
         LATERAL FLATTEN(input => PARSE_JSON(t."NAMES")) f
    WHERE f.VALUE::STRING ILIKE '%Rotterdam%' AND t."ADMIN_LEVEL" = '8'
  ) sub
  GROUP BY City
)
SELECT
  a.City,
  b."CLASS" AS "Class",
  b."SUBCLASS" AS "Subclass",
  ROUND(SUM(TRY_TO_DOUBLE(b."SURFACE_AREA_SQ_M")), 4) AS "Total_Surface_Area_Sq_M",
  COUNT(*) AS "Number_of_Buildings"
FROM
  "NETHERLANDS_OPEN_MAP_DATA"."NETHERLANDS"."V_BUILDING" b
INNER JOIN
  ADMIN_AREA a
ON
  ST_CONTAINS(a.ADMIN_GEOMETRY, b."GEO_CORDINATES")
WHERE
  b."GEO_CORDINATES" IS NOT NULL
GROUP BY
  a.City, b."CLASS", b."SUBCLASS"
ORDER BY
  a.City, "Total_Surface_Area_Sq_M" DESC NULLS LAST;