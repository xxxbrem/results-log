2025-01-18 20:09:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:10:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:10:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:10:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:10:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:10:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 93
2025-01-18 20:10:23 - snowflake.connector.connection - INFO - closed
2025-01-18 20:10:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:10:23 - root - INFO - SQL:
SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Results:
country_code
DO
WO
BA
UA
MW
YU
ZM
LT
KR
RO
BG
TR
GR
CH
NO
MX
GE
EE
CZ
SV
HN
PA
EG
AU
CU
CR
PL
IT
CY
OA
GB
SG
CN
MC
JP
HU
DZ
AT
NL
CA
IS
SK
NI
IN
EC
ES
IE
EA
TN
GT
HK
CO
AR
SI
KE
IL
TW
MT
MD
JO
MA
ZA
EP
RS
PE
LU
DK
FI
BE
ZW
DD
DE
US
PH
SA
MN
FR
SU
BR
ID
KZ
HR
RU
SE
AP
ME
SM
NZ
PT
CL
LV
CS
MY

2025-01-18 20:10:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:10:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:10:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:10:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:10:24 - snowflake.connector.connection - INFO - closed
2025-01-18 20:10:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:10:25 - root - INFO - SQL:
SELECT "filing_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Results:
Too long, hard cut:
filing_date
19971015
19990322
0
19830217
19900109
19900101
19860106
0
19480102
19800125
19820209
19820219
19700116
19700224
19700501
0
18901220
19690318
19660117
18940609
18941217
18950125
0
19620924
19650616
19660402
19660506
19660704
19660725
19661121
19600102
19580106
19290107
19400116
19870521
19840705
19920730
19781012
19861030
19910225
19860106
19930106
20150702
19830922
19860626
19730907
19780905
19820512
19880217
19900307
0
19790102
0
0
19710204
19971230
19880317
19820430
19750221
19830503
19810413
19780313
19820518
19820524
19800416
19901205
19860918
19850916
19730328
19851029
19750527
19770706
19750707
19791105
19781012
19721012
19781219
19730906
19731029
19740405
19741216
19750221
19750925
19760105
19760123
19760331
19761125
19770324
19770413
19770802
19771125
19780505
19780613
19780712
19780717
19781020
19790110
19790718
19800918
19520218
19581027
19590724
19590915
19591103
19591202
19600518
19600524
19610929
19620219
19631211
19640430
19670405
0
19701231
19710930
19720218
19720225
19720428
19720619
19741003
19701210
19710528
19710901
19710902
19710924
19711005
19720321
19720428
19720517
19720905
19721106
0
19730129
19730402
0
19730828
19730924
19731009
19731022
0
19731114
19731206
19740325
0
19740523
19740523
19750213
19750507
19750710
19750826
0
0
19760203
19760602
19760630
19760902
19761006
19761214
19770114
19770125
19770211
0
19770407
0
0
19770908
19771103
19780118
0
19780406
0
19790208
19790912
19791002
19791116
19800221
19800312
19800527
19801017
0
19801215
19810209
19810421
19810525
19810603
19810923
19820121
19820720
19821101
19821103
19821222
0
19830503
19830504
19830510
19830524
19830607
19830719
0
19831230
19840503
19840703
19840802
19840906
19840924
19841220
19850409
19850513
19850718
19850919
19851128
19860218
19861105
19870121
19870302
19880929
18991221
19020507
19021112
19030316
19030921
19020820
19040315
19050821
19620127
18951218
18950924
18970331
19690130
18971110
18971027
18980218
18980429
18990624
19000210
19600226
19640227
19011009
19600310
19620309
19610310
19040217
19040615
19040913
19710305
19620326
19720310
19060228
19060723
19071207
19700324
19090220
19710329
19670403
19100617
19100723
19680410
19600516
19620517
19120619
19710429
19720428
19140108
19660509
19720508
19670517
19140731
19690513
19650526
19690519
19680531
19191125
19200412
19210514
19690630
19780912
19800311
0
0
0
0
0
0
0
0
19770401
19770518
19750521
19810716
19770831
19770907
19870813
19841114
0
0
19470908
19490315
0
19860729
19890125
19670616
19670912
19600120
19600707
19611127
19620626
19620705
0
19631224
19631226
19640519
19640708
19641009
19370114
19500120
19340122
19240212
19370209
19530213
19430325
19200218
19520227
19620213
19530226
19510312
19630219
19660216
19570301
19440420
19440422
19510406
19600309
19690217
19520418
19911010
19850415
19840420
19881013
19961007
19970827
19980917
19870108
19760109
19810108
19950109
19770110
19860110
19830112
19830111
19960110
19880111
19711229
19980109
19980109
19870112
19830114
19930112
19850111
19940118
19830112
19840113
19950113
19950113
19790117
19820113
19990111
19770119
19860114
19750111
19850116
19720111
19910122
19780121
19740109
19840117
19780119
19820120
19860114
19870114
19940126
19970117
19770127
19760128
19780125
19920121
19720124
19890117
19980120
19940128
19980120
19950124
19930122
19870120
19870120
19810127
19940131
19980604
19830330
19941206
0
0
19150111
0
0
0
0
0
19870116
0
19930115
19350212
0
0
0
19600208
19480210
0
0
0
19870202
19760504
19910809
19840810
19680814
19790905
19800829
19751008
19791205
19711208
20030401
19991029
19961122
19830119
19961128
19970103
19950112
19880309
19880314
20000713
19920114
19991103
19880211
19750515
19941219
19941229
19970314
19991220
19751008
19830928
19970321
19920811
19920812
19970213
19970218
19990324
19920828
20001222
19970205
19950414
19840105
19830209
19990301
19920828
19950524
19950526
19770725
20000202
19970425
19921130
19890210
20000210
19840629
20000501
20000112
19890201
20000131
19970701
19921218
19780307
19841016
19950816
19680314
19711029
19970725
20000118
19930315
19990402
20000330
19890622
19951011
19780710
19930310
20000404
19930520
19780904
19930420
19990430
19990520
19850411
19951206
19990608
20000327
19890831
19790119
20000414
19930705
19790219
19720810
19891130
19971008
19960119
20000505
19790528
19790614
19990628
19900119
19900103
19711224
19790824
20000519
19851106
19841211
19960312
19960129
19900320
19730228
19791113
20000816
19971212
19940121
19990819
20000530
19900502
19990813
20000615
19800219
19730516
19960607
19980224
19800319
19730612
19800402
19990817
19990830
19900627
19730723
19800619
19960607
20000721
20000627
19860730
19860731
19900810
19800730
19800820
19900827
19990909
20000929
19980203
19991001
19900912
19901018
19980123
20000726
19740314
19960808
19740508
19960823
20000707
20000830
19870319
20000505
19960918
19961008
19980618
19910301
20001207
19961001
19910114
19940727
19960913
19910410
19870622
19980424
19910403
19980528
19980601
19870819
19870908
19870910
19750218
19860

2025-01-18 20:10:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:10:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:10:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:10:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 20:10:26 - snowflake.connector.connection - INFO - closed
2025-01-18 20:10:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:10:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:10:55 - root - INFO - ```sql
WITH months AS (
  SELECT
    YEAR(d) AS "Year",
    MONTH(d) AS "Month_num",
    TO_CHAR(d, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(month, seq4(), '2008-01-01') AS d
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
  )
  WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "Year",
    MONTH(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "Month_num",
    TO_CHAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'Mon') AS "Month",
    COUNT(DISTINCT t."publication_number") AS "Number_of_filings"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  WHERE t."country_code" = 'US'
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" <> 0
    AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
    AND LOWER(t."abstract_localized"::VARIANT:"text"::STRING) LIKE '%internet%of%things%'
  GROUP BY 1, 2, 3
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:10:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:10:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:10:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:10:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 128
2025-01-18 20:10:57 - snowflake.connector.connection - INFO - closed
2025-01-18 20:10:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:10:58 - root - INFO - SQL:
WITH months AS (
  SELECT
    YEAR(d) AS "Year",
    MONTH(d) AS "Month_num",
    TO_CHAR(d, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(month, seq4(), '2008-01-01') AS d
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
  )
  WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "Year",
    MONTH(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "Month_num",
    TO_CHAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'Mon') AS "Month",
    COUNT(DISTINCT t."publication_number") AS "Number_of_filings"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  WHERE t."country_code" = 'US'
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" <> 0
    AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
    AND LOWER(t."abstract_localized"::VARIANT:"text"::STRING) LIKE '%internet%of%things%'
  GROUP BY 1, 2, 3
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Results:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,0
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,0
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,0
2017,4,Apr,0
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,0
2018,3,Mar,0
2018,4,Apr,0
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0

2025-01-18 20:10:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:10:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:10:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:10:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-18 20:11:00 - snowflake.connector.connection - INFO - closed
2025-01-18 20:11:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:11:00 - root - INFO - SQL:
SELECT "abstract_localized"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Results:
Too long, hard cut:
abstract_localized
"[
  {
    ""language"": ""es"",
    ""text"": ""consiste en colocar una muestra solida de cereal o leguminosa en una bandeja especial desarrollada para esta metodologia (bandeja de cromatografia), la cual en su base interior (fondo) posee un substrato sensible a las aflatoxinas, que al momento de la prueba se remoja con un disolvente extractor. Las particulas contaminadas liberan aflatoxinas que eluyen hacia el substrato en una area localizada alrededor de la particula contaminada. Despues de remover la muestra la bandeja se observa bajo luz ultravioleta de 365 nm, con la cual se observan pequenas manchas azules en los sitios donde hubo particulas contaminadas. Se encontro que existe una correlacion altamente significativa entre el numero de particulas que liberan aflatoxinas hacia el substrato sensible (manchas azules) y el contenido de aflatoxinas obtenido mediante un metodo quimico cuantitativo."",
    ""truncated"": false
  }
]"
"[
  {
    ""language"": ""es"",
    ""text"": ""derivados de acido 2-imino-metil-fenil-acetico que tiene una actividad microbicida, insecticida, y acaricida, a un proceso para la preparacion de los mismos, a nuevos intermediarios para su preparacion, a composiciones agroquimicas que contienen estos ingredientes activos, asi como a su uso en el control y prevencion de hongos, acaros, e insectos patagonicos de plantas end agricultura y en el campo de higiene."",
    ""truncated"": false
  }
]"
[]
[]
[]
"[
  {
    ""language"": ""en"",
    ""text"": ""PURPOSE:To install the title fish bank suitable for the spawning of fish and shellfish, usable for a long period of time without causing spoiling by connecting to a mooring object artificial algal weeds with such a makeup that stringy leaf axes are projected innumerably from strand-like stem axes and by putting the algal weeds underwater. CONSTITUTION:The objective artificial algal weeds consisting of the following elements: (a) artificial algal weeds 13 with stringy leaf axes 12 innumerably projected from continuous, flexible strand-like stem axes 11 are put underwater 14; (b) the stem axes 11 are made of continuous plastic filaments 16 interlaced forming a texture 15; (c) the leaf axes 12 are made of plastic filaments 17 held at the texture 15 of the stem axes 11; and (d) part of the continuous stem axes 11 is connected to a mooring object 18."",
    ""truncated"": false
  },
  {
    ""language"": ""ja"",
    ""text"": ""(57)【要約】本公報は電子出願前の出願データであるた め要約のデータは記録されません。"",
    ""truncated"": false
  }
]"
"[
  {
    ""language"": ""ja"",
    ""text"": ""(57)【要約】本公報は電子出願前の出願データであるた め要約のデータは記録されません。"",
    ""truncated"": false
  }
]"
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
"[
  {
    ""language"": ""en"",
    ""text"": ""893,001. Stretching. BIGWOOD &amp; SON Ltd., JOSHUA. Dec. 16, 1960 [Jan. 2, 1960], No. 156/60. Class 83 (4). A stretching machine of the type in which metal sheet, gripped at its ends between jaws of gripper heads, is stretched when the heads are moved apart, is characterized in that each gripper head has a passage formed therein and extending through the gripper head in line with the opening between the jaws so that strip can be passed from a coil through the passages in the gripper heads and a length of strip can be gripped, stretched and then released from the machine by passing it out through the said passages. One gripper head 11 is normally stationary during stretching, but is adjustable along a bed 12 by screws 17 driven by an electric motor 19. The other gripper head 10 is urged, by piston rods 13 in fluid-pressure cylinders 14, away from the head 11 to stretch strip, extending from a coil, therebetween, the head 10 running on rollers 16 on the bed 12. The body of each gripper head has a passage extending therethrough defined by guides 20 faced with non-abrasive material 22. Each series of grip blocks 23 of a gripper head is actuated by a piston rod 24 of a fluid-pressure cylinder 26. Specifications 614,186, 739,291 and 809,619 are referred to."",
    ""truncated"": false
  }
]"
"[
  {
    ""language"": ""en"",
    ""text"": ""873,984. Jacks. SCHWARZ, E., [trading as METALLWARENUND MASCHINENFABRIK P. SCHWARZ]. Jan. 6, 1958 [Feb. 8, 1957], No. 509/58. Class 78 (3). [Also in Group XXIII] A tool for lifting and/ or supporting tools or workpieces on presses, punches or similar machine tools comprises at least two co-operating jaws one of which 11 is fixed to a support column 10, the other jaw 12 being slidably mounted for displacement therealong and having a stirrupshaped mounting member including arms 13, 14 in which the column 10 is journalled at two spaced-apart points and means arranged between the arms for raising and lowering the jaw 12. As shown the means for raising and lowering the jaw 12 is a cant ring shifting mechanism of which the hand operating lever 16 abuts on every downward stroke against a stop 17 on the stirrup. A release lever 22 serves for rapid retu

2025-01-18 20:11:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:11:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:11:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:11:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:11:02 - snowflake.connector.connection - INFO - closed
2025-01-18 20:11:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:11:02 - root - INFO - SQL:
SELECT t."publication_number",
          t."abstract_localized"::VARIANT:"text"::STRING AS "abstract_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,abstract_text
CR-5634-A,
CR-5990-A,
FI-429-A,
HK-6083-A,
HU-T52763-A,
JP-H03206829-A,
JP-S62159089-A,
US-416-A,
US-2528225-A,
AT-A41580-A,
AT-A47682-A,
AT-A63682-A,
CA-920790-A,
CA-950907-A,
CA-920830-A,
CA-9086-A,
CH-3256-A,
CH-540255-A,
CH-433637-A,
CH-8494-A,
CH-9587-A,
CH-9968-A,
DD-8297-A,
FR-1334211-A,
FR-1444995-A,
FR-1474468-A,
FR-1478988-A,
FR-1485992-A,
FR-1487706-A,
FR-1508237-A,
GB-893001-A,
GB-873984-A,
GB-307790-A,
GB-534192-A,
HK-39487-A,
HK-52284-A,
HK-55992-A,
HK-60178-A,
HK-82486-A,
HU-T58725-A,
JP-S62157892-A,
JP-H06198910-A,
MA-42286-A,
OA-07542-A,
OA-08399-A,
PH-11723-A,
PH-15213-A,
PH-17928-A,
PH-23905-A,
TR-26506-A,
US-4613-A,
US-4234270-A,
US-6310-A,
US-8947-A,
YU-24971-A,
YU-51397-A,
YU-53588-A,
YU-94082-A,
AT-A134275-A,
AT-A160683-A,
AT-A168281-A,
AT-A179178-A,
AT-A196182-A,
AT-A202882-A,
AT-A205780-A,
AT-A245590-A,
AT-A250686-A,
AT-A269985-A,
AT-A272073-A,
AT-A312885-A,
AT-A404675-A,
AT-A482077-A,
AT-A519575-A,
AT-A710279-A,
AT-A735378-A,
AT-A876472-A,
AT-A906278-A,
BE-804534-A,
BE-806687-A,
BE-813367-A,
BE-823416-A,
BE-825816-A,
BE-833811-A,
BE-837312-A,
BE-837857-A,
BE-840231-A,
BE-848755-A,
BE-852837-A,
BE-853553-A,
BE-857395-A,
BE-861199-A,
BE-866723-A,
BE-868080-A,
BE-868938-A,
BE-869056-A,
BE-871421-A,
BE-873394-A,
BE-877768-A,
BE-885287-A,
BE-509322-A,
BE-572409-A,
BE-580990-A,
BE-582698-A,
BE-584260-A,
BE-585255-A,
BE-590934-A,
BE-591142-A,
BE-608698-A,
BE-614102-A,
BE-641112-A,
BE-647329-A,
BE-696614-A,
BE-757718-A,
BE-761170-A,
BE-773373-A,
BE-779552-A,
BE-779864-A,
BE-782856-A,
BE-785081-A,
BR-7402667-A,
CA-919795-A,
CA-921485-A,
CA-949331-A,
CA-940601-A,
CA-952509-A,
CA-969477-A,
CA-957211-A,
CA-964531-A,
CA-970871-A,
CA-974642-A,
CA-970156-A,
CA-15987-A,
CA-1003950-A,
CA-998543-A,
CA-16913-A,
CA-1010201-A,
CA-1007854-A,
CA-1004238-A,
CA-1008568-A,
CA-18563-A,
CA-995356-A,
CA-1006284-A,
CA-1013478-A,
CA-19959-A,
CA-1029597-A,
CA-1008729-A,
CA-1050191-A,
CA-1045448-A,
CA-1059120-A,
CA-1024007-A,
CA-23668-A,
CA-24395-A,
CA-1006362-A,
CA-1095517-A,
CA-1050671-A,
CA-1053401-A,
CA-1046805-A,
CA-1085295-A,
CA-1084844-A,
CA-1067004-A,
CA-1095710-A,
CA-27243-A,
CA-1089150-A,
CA-28163-A,
CA-28465-A,
CA-1088104-A,
CA-1072350-A,
CA-1114446-A,
CA-29797-A,
CA-1098093-A,
CA-31628-A,
CA-1092542-A,
CA-1155622-A,
CA-1122037-A,
CA-1139209-A,
CA-1149649-A,
CA-1110891-A,
CA-1145119-A,
CA-1125991-A,
CA-36329-A,
CA-1135535-A,
CA-1154421-A,
CA-1161271-A,
CA-1176339-A,
CA-1178020-A,
CA-1162713-A,
CA-1189535-A,
CA-1187223-A,
CA-1208489-A,
CA-1195046-A,
CA-1186283-A,
CA-41876-A,
CA-1212038-A,
CA-1191397-A,
CA-1197410-A,
CA-1216501-A,
CA-1204702-A,
CA-1223728-A,
CA-43273-A,
CA-1206543-A,
CA-1229735-A,
CA-1234097-A,
CA-1219333-A,
CA-1228350-A,
CA-1241951-A,
CA-1208886-A,
CA-1263079-A,
CA-1237140-A,
CA-1227616-A,
CA-1252414-A,
CA-1266567-A,
CA-1241730-A,
CA-1274626-A,
CA-1263734-A,
CA-1271286-A,
CA-1262494-A,
CA-66947-A,
CA-77867-A,
CA-78404-A,
CA-80097-A,
CA-85483-A,
CA-86404-A,
CA-88876-A,
CA-95029-A,
CH-378178-A,
CH-11218-A,
CH-11286-A,
CH-14377-A,
CH-503687-A,
CH-15066-A,
CH-15518-A,
CH-16423-A,
CH-16580-A,
CH-19546-A,
CH-21002-A,
CH-372604-A,
CH-405520-A,
CH-24748-A,
CH-378372-A,
CH-402439-A,
CH-387539-A,
CH-31003-A,
CH-31225-A,
CH-31903-A,
CH-518228-A,
CH-396205-A,
CH-544230-A,
CH-36286-A,
CH-37084-A,
CH-41273-A,
CH-522569-A,
CH-44956-A,
CH-536797-A,
CH-462084-A,
CH-52767-A,
CH-53651-A,
CH-498861-A,
CH-379811-A,
CH-393839-A,
CH-60490-A,
CH-539157-A,
CH-541208-A,
CH-66893-A,
CH-455052-A,
CH-554991-A,
CH-450035-A,
CH-73219-A,
CH-490054-A,
CH-471055-A,
CH-516215-A,
CH-473334-A,
CH-86757-A,
CH-87572-A,
CH-97232-A,
CH-493231-A,
CY-1270-A,
CY-1345-A,
DD-18224-A,
DD-24162-A,
DD-30434-A,
DD-49762-A,
DD-56858-A,
DD-56975-A,
DD-71745-A,
DD-93406-A,
DK-143677-A,
DK-220177-A,
DK-224175-A,
DK-318281-A,
DK-388577-A,
DK-398577-A,
DK-423187-A,
DK-540284-A,
FI-21698-A,
FI-14109-A,
FI-23876-A,
FI-26259-A,
FI-28117-A,
FI-863100-A,
FI-890355-A,
FR-1529048-A,
FR-1536688-A,
FR-1250774-A,
FR-1265518-A,
FR-1311472-A,
FR-1334436-A,
FR-1327672-A,
FR-93131-A,
FR-1377918-A,
FR-1388060-A,
FR-1394598-A,
FR-1400829-A,
FR-1415869-A,
GB-494318-A,
GB-740961-A,
GB-413664-A,
GB-226698-A,
GB-491961-A,
GB-734439-A,
GB-589546-A,
GB-147410-A,
GB-718629-A,
GB-933129-A,
GB-726335-A,
GB-696973-A,
GB-981650-A,
GB-1094014-A,
GB-813561-A,
GB-575877-A,
GB-627004-A,
GB-723210-A,
GB-894980-A,
GB-1254938-A,
GB-713370-A,
HU-T67017-A,
HU-T39794-A,
HU-T40753-A,
HU-T52581-A,
ID-16396-A,
ID-20737-A,
ID-24140-A,
JP-S62165193-A,
JP-S5285331-A,
JP-S57116755-A,
JP-H08191286-A,
JP-S5387240-A,
JP-S62161096-A,
JP-S59127531-A,
JP-S59128220-A,
JP-H09191341-A,
JP-H01180285-A,
JP-S4871797-A,
JP-H11197018-A,
JP-H1149528-A,
JP-S63173215-A,
JP-S59128182-A,
JP-H06209632-A,
JP-S61164464-A,
JP-H07208063-A,
JP-S59128720-A,
JP-S59187448-A,
JP-H08190937-A,
JP-H08194356-A,
JP-S5596945-A,
JP-S58121067-A,
JP-2000203601-A,
JP-S5389750-A,
JP-S62163740-A,
JP-S5180723-A,
JP-S61165867-A,
JP-S4876109-A,
JP-H04237231-A,
JP-S5499170-A,
JP-S50100056-A,
JP-S6

2025-01-18 20:11:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:11:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:11:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:11:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:11:04 - snowflake.connector.connection - INFO - closed
2025-01-18 20:11:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:11:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:11:57 - root - INFO - ```sql
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(filing_date_parsed) AS "Year",
        MONTH(filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT t."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            f.value:"language"::STRING AS "language",
            LOWER(f.value:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t
        LEFT JOIN LATERAL FLATTEN(input => t."abstract_localized") f ON TRUE
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
    ) sub
    WHERE filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND "language" = 'en'
      AND "abstract_text" ILIKE '%internet of things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:11:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:11:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:11:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:11:58 - snowflake.connector.connection - INFO - closed
2025-01-18 20:11:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:13:08 - root - INFO - ```sql
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(sub.filing_date_parsed) AS "Year",
        MONTH(sub.filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT sub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            f.VALUE:"language"::STRING AS "language",
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
    ) sub
    WHERE sub.filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND sub."language" = 'en'
      AND sub."abstract_text" ILIKE '%internet%of%things%'
      AND sub.filing_date_parsed IS NOT NULL
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```

**Note:** The error `invalid identifier 't."publication_number"'` occurred because the alias `t` was not accessible at the point where `"publication_number"` was referenced. To fix this, I ensured that all references to `t` (the alias for the `PUBLICATIONS` table) are within the appropriate scope.

In this corrected query:

- The inner subquery extracts the required data, including `"publication_number"`, and assigns it the alias `sub`.
- All references to columns from the subquery use the `sub.` prefix, ensuring proper scoping.
- The `LATERAL FLATTEN` is used to parse the `abstract_localized` array, and we filter for abstracts where the `"language"` is `'en'` and the `"abstract_text"` contains `'internet of things'`.
- We convert the `"filing_date"` to a date format using `TRY_TO_DATE` and ensure it's within the specified range.
- The outer query joins the counts to the generated list of months from 2008 to 2022, ensuring that months with zero filings are included.

This should resolve the previous error and produce the desired results.
2025-01-18 20:13:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 128
2025-01-18 20:13:09 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:10 - root - INFO - SQL:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(sub.filing_date_parsed) AS "Year",
        MONTH(sub.filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT sub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            f.VALUE:"language"::STRING AS "language",
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
    ) sub
    WHERE sub.filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND sub."language" = 'en'
      AND sub."abstract_text" ILIKE '%internet%of%things%'
      AND sub.filing_date_parsed IS NOT NULL
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Results:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,3
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0

2025-01-18 20:13:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 93
2025-01-18 20:13:11 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:12 - root - INFO - SQL:
SELECT "country_code",
          COUNT(*) AS "publication_count"
   FROM PATENTS.PATENTS.PUBLICATIONS
   GROUP BY "country_code"
   LIMIT 1000;
Results:
country_code,publication_count
JP,110525
HU,969
DZ,1
HR,167
RS,38
GR,207
UA,479
MW,4
NO,890
YU,228
ZM,10
LT,50
PL,1187
CR,41
CS,528
MY,195
LV,23
DO,6
WO,9409
AU,9744
CU,23
RO,172
KR,28416
SA,20
MN,1
IE,372
EA,108
ES,2080
DE,12656
US,57953
DD,722
PH,116
MX,863
EE,7
GE,23
EG,18
PA,5
TR,222
BG,265
AT,4482
IL,1185
TW,4270
MT,1
MD,30
NI,7
MA,54
EP,8335
ZA,1261
CH,3513
CO,118
AR,666
KE,5
SI,117
BA,1
RU,2979
JO,26
IT,3866
OA,29
CY,81
GB,5551
SG,284
SU,2526
FR,3326
BR,4469
ID,43
LU,139
NL,1274
BE,2457
ZW,2
IN,222
EC,14
PT,372
CL,267
NZ,276
CN,208729
MC,4
PE,77
KZ,1
FI,467
DK,575
SK,99
CA,13358
IS,28
SE,1473
AP,65
SM,11
ME,5
CZ,414
SV,3
HN,5
HK,440
TN,15
GT,15

2025-01-18 20:13:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:13:13 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:13 - root - INFO - SQL:
SELECT "filing_date",
          TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_converted"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Results:
Too long, hard cut:
filing_date,filing_date_converted
19971015,1997-10-15
19990322,1999-03-22
0,
19830217,1983-02-17
19900109,1990-01-09
19900101,1990-01-01
19860106,1986-01-06
0,
19480102,1948-01-02
19800125,1980-01-25
19820209,1982-02-09
19820219,1982-02-19
19700116,1970-01-16
19700224,1970-02-24
19700501,1970-05-01
0,
18901220,1890-12-20
19690318,1969-03-18
19660117,1966-01-17
18940609,1894-06-09
18941217,1894-12-17
18950125,1895-01-25
0,
19620924,1962-09-24
19650616,1965-06-16
19660402,1966-04-02
19660506,1966-05-06
19660704,1966-07-04
19660725,1966-07-25
19661121,1966-11-21
19600102,1960-01-02
19580106,1958-01-06
19290107,1929-01-07
19400116,1940-01-16
19870521,1987-05-21
19840705,1984-07-05
19920730,1992-07-30
19781012,1978-10-12
19861030,1986-10-30
19910225,1991-02-25
19860106,1986-01-06
19930106,1993-01-06
20150702,2015-07-02
19830922,1983-09-22
19860626,1986-06-26
19730907,1973-09-07
19780905,1978-09-05
19820512,1982-05-12
19880217,1988-02-17
19900307,1990-03-07
0,
19790102,1979-01-02
0,
0,
19710204,1971-02-04
19971230,1997-12-30
19880317,1988-03-17
19820430,1982-04-30
19750221,1975-02-21
19830503,1983-05-03
19810413,1981-04-13
19780313,1978-03-13
19820518,1982-05-18
19820524,1982-05-24
19800416,1980-04-16
19901205,1990-12-05
19860918,1986-09-18
19850916,1985-09-16
19730328,1973-03-28
19851029,1985-10-29
19750527,1975-05-27
19770706,1977-07-06
19750707,1975-07-07
19791105,1979-11-05
19781012,1978-10-12
19721012,1972-10-12
19781219,1978-12-19
19730906,1973-09-06
19731029,1973-10-29
19740405,1974-04-05
19741216,1974-12-16
19750221,1975-02-21
19750925,1975-09-25
19760105,1976-01-05
19760123,1976-01-23
19760331,1976-03-31
19761125,1976-11-25
19770324,1977-03-24
19770413,1977-04-13
19770802,1977-08-02
19771125,1977-11-25
19780505,1978-05-05
19780613,1978-06-13
19780712,1978-07-12
19780717,1978-07-17
19781020,1978-10-20
19790110,1979-01-10
19790718,1979-07-18
19800918,1980-09-18
19520218,1952-02-18
19581027,1958-10-27
19590724,1959-07-24
19590915,1959-09-15
19591103,1959-11-03
19591202,1959-12-02
19600518,1960-05-18
19600524,1960-05-24
19610929,1961-09-29
19620219,1962-02-19
19631211,1963-12-11
19640430,1964-04-30
19670405,1967-04-05
0,
19701231,1970-12-31
19710930,1971-09-30
19720218,1972-02-18
19720225,1972-02-25
19720428,1972-04-28
19720619,1972-06-19
19741003,1974-10-03
19701210,1970-12-10
19710528,1971-05-28
19710901,1971-09-01
19710902,1971-09-02
19710924,1971-09-24
19711005,1971-10-05
19720321,1972-03-21
19720428,1972-04-28
19720517,1972-05-17
19720905,1972-09-05
19721106,1972-11-06
0,
19730129,1973-01-29
19730402,1973-04-02
0,
19730828,1973-08-28
19730924,1973-09-24
19731009,1973-10-09
19731022,1973-10-22
0,
19731114,1973-11-14
19731206,1973-12-06
19740325,1974-03-25
0,
19740523,1974-05-23
19740523,1974-05-23
19750213,1975-02-13
19750507,1975-05-07
19750710,1975-07-10
19750826,1975-08-26
0,
0,
19760203,1976-02-03
19760602,1976-06-02
19760630,1976-06-30
19760902,1976-09-02
19761006,1976-10-06
19761214,1976-12-14
19770114,1977-01-14
19770125,1977-01-25
19770211,1977-02-11
0,
19770407,1977-04-07
0,
0,
19770908,1977-09-08
19771103,1977-11-03
19780118,1978-01-18
0,
19780406,1978-04-06
0,
19790208,1979-02-08
19790912,1979-09-12
19791002,1979-10-02
19791116,1979-11-16
19800221,1980-02-21
19800312,1980-03-12
19800527,1980-05-27
19801017,1980-10-17
0,
19801215,1980-12-15
19810209,1981-02-09
19810421,1981-04-21
19810525,1981-05-25
19810603,1981-06-03
19810923,1981-09-23
19820121,1982-01-21
19820720,1982-07-20
19821101,1982-11-01
19821103,1982-11-03
19821222,1982-12-22
0,
19830503,1983-05-03
19830504,1983-05-04
19830510,1983-05-10
19830524,1983-05-24
19830607,1983-06-07
19830719,1983-07-19
0,
19831230,1983-12-30
19840503,1984-05-03
19840703,1984-07-03
19840802,1984-08-02
19840906,1984-09-06
19840924,1984-09-24
19841220,1984-12-20
19850409,1985-04-09
19850513,1985-05-13
19850718,1985-07-18
19850919,1985-09-19
19851128,1985-11-28
19860218,1986-02-18
19861105,1986-11-05
19870121,1987-01-21
19870302,1987-03-02
19880929,1988-09-29
18991221,1899-12-21
19020507,1902-05-07
19021112,1902-11-12
19030316,1903-03-16
19030921,1903-09-21
19020820,1902-08-20
19040315,1904-03-15
19050821,1905-08-21
19620127,1962-01-27
18951218,1895-12-18
18950924,1895-09-24
18970331,1897-03-31
19690130,1969-01-30
18971110,1897-11-10
18971027,1897-10-27
18980218,1898-02-18
18980429,1898-04-29
18990624,1899-06-24
19000210,1900-02-10
19600226,1960-02-26
19640227,1964-02-27
19011009,1901-10-09
19600310,1960-03-10
19620309,1962-03-09
19610310,1961-03-10
19040217,1904-02-17
19040615,1904-06-15
19040913,1904-09-13
19710305,1971-03-05
19620326,1962-03-26
19720310,1972-03-10
19060228,1906-02-28
19060723,1906-07-23
19071207,1907-12-07
19700324,1970-03-24
19090220,1909-02-20
19710329,1971-03-29
19670403,1967-04-03
19100617,1910-06-17
19100723,1910-07-23
19680410,1968-04-10
19600516,1960-05-16
19620517,1962-05-17
19120619,1912-06-19
19710429,1971-04-29
19720428,1972-04-28
19140108,1914-01-08
19660509,1966-05-09
19720508,1972-05-08
19670517,1967-05-17
19140731,1914-07-31


2025-01-18 20:13:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-18 20:13:15 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:13:36 - root - INFO - ```sql
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(sub.filing_date_parsed) AS "Year",
        MONTH(sub.filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT sub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            LOWER(t."abstract_localized"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
          AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
          AND t."abstract_localized" IS NOT NULL
    ) sub
    WHERE sub.filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND sub."abstract_text" ILIKE '%internet of things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:13:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 128
2025-01-18 20:13:38 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:38 - root - INFO - SQL:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(sub.filing_date_parsed) AS "Year",
        MONTH(sub.filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT sub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            LOWER(t."abstract_localized"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
          AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
          AND t."abstract_localized" IS NOT NULL
    ) sub
    WHERE sub.filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND sub."abstract_text" ILIKE '%internet of things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Results:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,2
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0

2025-01-18 20:13:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:13:40 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:40 - root - INFO - SQL:
SELECT SUBSTRING("filing_date"::VARCHAR, 1, 4) AS "year",
           SUBSTRING("filing_date"::VARCHAR, 5, 2) AS "month",
           COUNT(*) AS "publication_count"
    FROM PATENTS.PATENTS.PUBLICATIONS
    GROUP BY "year", "month"
    ORDER BY "year", "month"
    LIMIT 1000;
Results:
Too long, hard cut:
year,month,publication_count
0,,8885
1846,11,1
1853,08,1
1860,09,1
1867,07,1
1877,07,2
1877,08,1
1877,11,1
1880,08,1
1881,06,2
1882,03,1
1882,07,1
1882,11,1
1883,03,1
1883,04,1
1885,02,2
1885,04,1
1885,10,1
1886,02,1
1886,05,1
1886,11,1
1887,01,1
1887,06,1
1887,07,1
1888,04,1
1888,07,1
1888,10,1
1889,03,1
1889,04,1
1889,06,2
1889,07,2
1889,08,2
1889,09,1
1889,11,1
1890,07,1
1890,09,1
1890,11,1
1890,12,1
1891,01,1
1891,04,1
1891,06,1
1891,07,2
1891,09,1
1891,10,1
1891,11,1
1891,12,1
1892,01,1
1892,04,3
1892,06,1
1892,08,3
1892,12,2
1893,01,1
1893,04,3
1893,06,3
1893,07,1
1893,08,2
1893,09,2
1893,10,1
1893,11,3
1893,12,2
1894,01,5
1894,02,2
1894,03,2
1894,04,6
1894,05,4
1894,06,3
1894,07,1
1894,08,3
1894,10,4
1894,11,2
1894,12,2
1895,01,2
1895,03,4
1895,04,1
1895,05,2
1895,06,2
1895,07,1
1895,08,1
1895,09,3
1895,10,5
1895,11,3
1895,12,4
1896,01,1
1896,02,4
1896,03,3
1896,04,2
1896,05,3
1896,06,3
1896,07,8
1896,08,2
1896,09,7
1896,10,3
1896,11,4
1896,12,4
1897,01,7
1897,02,1
1897,03,5
1897,04,3
1897,05,4
1897,06,1
1897,07,5
1897,08,1
1897,09,2
1897,10,4
1897,11,5
1897,12,6
1898,01,6
1898,02,6
1898,03,3
1898,04,6
1898,05,2
1898,06,5
1898,07,4
1898,08,1
1898,09,6
1898,10,1
1898,11,7
1898,12,4
1899,01,4
1899,02,13
1899,03,12
1899,04,9
1899,05,12
1899,06,9
1899,07,7
1899,08,9
1899,09,6
1899,10,7
1899,11,8
1899,12,14
1900,01,5
1900,02,10
1900,03,8
1900,04,9
1900,05,8
1900,06,5
1900,07,8
1900,08,3
1900,09,7
1900,10,6
1900,11,7
1900,12,5
1901,01,9
1901,02,4
1901,03,6
1901,04,16
1901,05,7
1901,06,6
1901,07,5
1901,08,6
1901,09,4
1901,10,11
1901,11,11
1901,12,6
1902,01,3
1902,02,12
1902,03,12
1902,04,8
1902,05,10
1902,06,5
1902,07,8
1902,08,11
1902,09,14
1902,10,6
1902,11,6
1902,12,5
1903,01,12
1903,02,6
1903,03,19
1903,04,12
1903,05,6
1903,06,14
1903,07,9
1903,08,10
1903,09,3
1903,10,6
1903,11,8
1903,12,6
1904,01,13
1904,02,11
1904,03,15
1904,04,11
1904,05,10
1904,06,16
1904,07,8
1904,08,11
1904,09,17
1904,10,9
1904,11,7
1904,12,8
1905,01,8
1905,02,12
1905,03,14
1905,04,7
1905,05,17
1905,06,10
1905,07,13
1905,08,9
1905,09,12
1905,10,17
1905,11,11
1905,12,19
1906,01,8
1906,02,14
1906,03,22
1906,04,11
1906,05,22
1906,06,16
1906,07,14
1906,08,19
1906,09,18
1906,10,20
1906,11,10
1906,12,15
1907,01,14
1907,02,24
1907,03,17
1907,04,15
1907,05,19
1907,06,18
1907,07,14
1907,08,17
1907,09,15
1907,10,16
1907,11,12
1907,12,16
1908,01,14
1908,02,17
1908,03,14
1908,04,14
1908,05,19
1908,06,16
1908,07,11
1908,08,6
1908,09,14
1908,10,6
1908,11,13
1908,12,16
1909,01,15
1909,02,12
1909,03,20
1909,04,12
1909,05,6
1909,06,14
1909,07,13
1909,08,9
1909,09,15
1909,10,12
1909,11,17
1909,12,10
1910,01,10
1910,02,20
1910,03,11
1910,04,15
1910,05,13
1910,06,17
1910,07,13
1910,08,11
1910,09,13
1910,10,13
1910,11,14
1910,12,14
1911,01,17
1911,02,27
1911,03,20
1911,04,19
1911,05,19
1911,06,21
1911,07,13
1911,08,22
1911,09,22
1911,10,20
1911,11,12
1911,12,16
1912,01,19
1912,02,20
1912,03,21
1912,04,29
1912,05,17
1912,06,30
1912,07,22
1912,08,29
1912,09,18
1912,10,25
1912,11,17
1912,12,29
1913,01,25
1913,02,15
1913,03,28
1913,04,33
1913,05,21
1913,06,23
1913,07,27
1913,08,17
1913,09,15
1913,10,22
1913,11,27
1913,12,22
1914,01,16
1914,02,20
1914,03,23
1914,04,18
1914,05,21
1914,06,17
1914,07,18
1914,08,12
1914,09,11
1914,10,14
1914,11,12
1914,12,15
1915,01,15
1915,02,22
1915,03,22
1915,04,15
1915,05,17
1915,06,11
1915,07,13
1915,08,12
1915,09,12
1915,10,8
1915,11,16
1915,12,8
1916,01,15
1916,02,9
1916,03,13
1916,04,24
1916,05,25
1916,06,10
1916,07,14
1916,08,11
1916,09,10
1916,10,17
1916,11,15
1916,12,10
1917,01,11
1917,02,8
1917,03,15
1917,04,13
1917,05,12
1917,06,13
1917,07,13
1917,08,10
1917,09,10
1917,10,9
1917,11,16
1917,12,13
1918,01,12
1918,02,8
1918,03,8
1918,04,12
1918,05,13
1918,06,8
1918,07,13
1918,08,8
1918,09,13
1918,10,8
1918,11,6
1918,12,2
1919,01,12
1919,02,11
1919,03,13
1919,04,16
1919,05,15
1919,06,14
1919,07,11
1919,08,15
1919,09,8
1919,10,6
1919,11,16
1919,12,12
1920,01,16
1920,02,12
1920,03,20
1920,04,9
1920,05,13
1920,06,27
1920,07,23
1920,08,8
1920,09,12
1920,10,10
1920,11,17
1920,12,6
1921,01,21
1921,02,22
1921,03,22
1921,04,13
1921,05,18
1921,06,15
1921,07,19
1921,08,18
1921,09,18
1921,10,14
1921,11,12
1921,12,16
1922,01,10
1922,02,10
1922,03,12
1922,04,15
1922,05,24
1922,06,15
1922,07,7
1922,08,14
1922,09,13
1922,10,15
1922,11,15
1922,12,9
1923,01,16
1923,02,11
1923,03,20
1923,04,16
1923,05,12
1923,06,14
1923,07,13
1923,08,7
1923,09,11
1923,10,17
1923,11,15
1923,12,14
1924,01,15
1924,02,12
1924,03,15
1924,04,23
1924,05,13
1924,06,12
1924,07,14
1924,08,13
1924,09,17
1924,10,11
1924,11,10
1924,12,19
1925,01,18
1925,02,18
1925,03,15
1925,04,23
1925,05,17
1925,06,21
1925,07,21
1925,08,12
1925,09,15
1925,10,12
1925,11,12
1925,12,19
1926,01,15
1926,02,8
1926,03,23
1926,04,15
1926,05,17
1926,06,23
1926,07,18
1926,08,18
1926,09,12
1926,10,24
1926,11,24
1926,12,17
1927,01,13
1927,02,11
1927,03,16
1927,04,27
1927,05,27
1927,06,12
1927,07,15
1927,08,17
1927,09,18
1927,10,26
1927,11,12
1927,12,17
1928,01,21
1928,02,19
1928,03,21
1928,04

2025-01-18 20:13:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:13:42 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:13:42 - root - INFO - SQL:
SELECT "publication_number",
           "filing_date",
           "country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE "country_code" = 'US'
      AND "filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,filing_date,country_code
US-2018235635-A1,20170628,US
US-2018201131-A1,20170425,US
US-2017235415-A1,20170501,US
US-2017244772-A1,20170508,US
US-2017251351-A1,20170511,US
US-2018332422-A1,20170512,US
US-2018344618-A1,20170531,US
US-2017365978-A1,20170620,US
US-2017282979-A1,20170621,US
US-2018374008-A1,20170627,US
US-2019000011-A1,20170703,US
US-2019011327-A1,20170707,US
US-2018141748-A1,20170707,US
US-2017312220-A1,20170718,US
US-2018021729-A1,20170719,US
US-2017326685-A1,20170720,US
US-2019027838-A1,20170724,US
US-2018043016-A1,20170810,US
US-2018015550-A1,20170818,US
US-2017366839-A1,20170901,US
US-2018308237-A1,20170901,US
US-2017368430-A1,20170910,US
US-2018005882-A1,20170918,US
US-2018014294-A1,20170922,US
US-2018055834-A1,20170926,US
US-2018138699-A1,20171002,US
US-2018093291-A1,20171003,US
US-2019166643-A1,20150619,US
US-2019008396-A1,20160804,US
US-2018247845-A1,20160802,US
US-2019244002-A1,20180226,US
US-2018285832-A1,20160902,US
US-2018297625-A1,20161007,US
US-2018314375-A1,20161031,US
US-2018324318-A1,20161102,US
US-2020255606-A1,20161229,US
US-2018332521-A1,20151218,US
US-2020300710-A1,20161114,US
US-2018334294-A1,20160406,US
US-2018063804-A1,20171030,US
US-2018050165-A1,20171031,US
US-2018068082-A1,20171113,US
US-2018214421-A1,20171221,US
US-2019147861-A1,20171228,US
US-2019206984-A1,20180102,US
US-2018143152-A1,20180103,US
US-2018131680-A1,20180104,US
US-2018210608-A1,20180118,US
US-2019235774-A1,20180129,US
US-2018212990-A1,20180206,US
US-2019248391-A1,20180212,US
US-2018164906-A1,20180212,US
US-2019257425-A1,20180217,US
US-2018272285-A1,20180221,US
US-2019257342-A1,20180222,US
US-2019254290-A1,20180222,US
US-2018257099-A1,20180227,US
US-2019262055-A1,20180228,US
US-2019269443-A1,20180302,US
US-2018193440-A1,20180305,US
US-2018261055-A1,20180308,US
US-2018267719-A1,20180309,US
US-2019282850-A1,20180316,US
US-2021353254-A1,20200512,US
US-2018293073-A1,20180403,US
US-2018329166-A1,20180405,US
US-2018233592-A1,20180413,US
US-2019316264-A1,20180413,US
US-2019317850-A1,20180417,US
US-2019321673-A1,20180419,US
US-2019326755-A1,20180420,US
US-2019321213-A1,20180423,US
US-2018304833-A1,20180423,US
US-2018334888-A1,20180425,US
US-2019333871-A1,20180430,US
US-2018323192-A1,20180502,US
US-2018254806-A1,20180503,US
US-2018254074-A1,20180507,US
US-2018328779-A1,20180509,US
US-2018329475-A1,20180510,US
US-2018339704-A1,20180511,US
US-2018336332-A1,20180517,US
US-2019363325-A1,20180522,US
US-2018343482-A1,20180522,US
US-2018371080-A1,20180523,US
US-2019364807-A1,20180530,US
US-2018286958-A1,20180605,US
US-2018361500-A1,20180607,US
US-2019150530-A1,20180615,US
US-2018376351-A1,20180620,US
US-2018372441-A1,20180621,US
US-2018296030-A1,20180622,US
US-2019002200-A1,20180627,US
US-2020004883-A1,20180627,US
US-2020014076-A1,20180709,US
US-2019293515-A1,20180709,US
US-2019024014-A1,20180720,US
US-2020028206-A1,20161213,US
US-2019338645-A1,20161208,US
US-2021189594-A1,20170202,US
US-2019111078-A1,20170208,US
US-2019060877-A1,20170309,US
US-2019174718-A1,20180406,US
US-2019054338-A1,20180822,US
US-2019012038-A1,20180824,US
US-2019098882-A1,20180827,US
US-2019221573-A1,20180829,US
US-2020069862-A1,20180903,US
US-2020078136-A1,20180906,US
US-2020091600-A1,20180918,US
US-2020094415-A1,20180921,US
US-2019049982-A1,20180928,US
US-2019043058-A1,20181009,US
US-2019244905-A1,20181016,US
US-2019183807-A1,20181019,US
US-2019128912-A1,20181026,US
US-2019142717-A1,20181030,US
US-2019065873-A1,20181031,US
US-2020143704-A1,20181102,US
US-2020111794-A1,20181105,US
US-2019145555-A1,20181108,US
US-2019145280-A1,20181115,US
US-2019160844-A1,20181121,US
US-2019162206-A1,20181121,US
US-2020182340-A1,20181206,US
US-2020213312-A1,20181228,US
US-2019206089-A1,20181231,US
US-2019223548-A1,20181231,US
US-2020219455-A1,20190103,US
US-2019140490-A1,20190104,US
US-2020162083-A1,20190206,US
US-2020256036-A1,20190212,US
US-2019266722-A1,20190213,US
US-2019186352-A1,20190222,US
US-2019184983-A1,20190225,US
US-2019265940-A1,20190228,US
US-2019296705-A1,20190307,US
US-2019277596-A1,20190308,US
US-2020293837-A1,20190312,US
US-2020047478-A1,20170511,US
US-2019301055-A1,20170602,US
US-2019304293-A1,20170524,US
US-2021029410-A1,20171019,US
US-2020138080-A1,20170804,US
US-2019183882-A1,20170328,US
US-2021224349-A1,20180412,US
US-2019284914-A1,20160923,US
US-2019273673-A1,20170825,US
US-2019174987-A1,20170720,US
US-2020025859-A1,20170922,US
US-2020039338-A1,20171012,US
US-2020267544-A1,20181220,US
US-2019284481-A1,20190315,US
US-2020063461-A1,20190316,US
US-2019218174-A1,20190320,US
US-2019296557-A1,20190320,US
US-2020245155-A1,20190321,US
US-2019228033-A1,20190401,US
US-2020320541-A1,20190405,US
US-2020319217-A1,20190408,US
US-2019319270-A1,20190411,US
US-2019246274-A1,20190416,US
US-2019333785-A1,20190425,US
US-2019334273-A1,20190429,US
US-2019253802-A1,20190429,US
US-2019261271-A1,20190430,US
US-2019263549-A1,20190507,US
US-2019349965-A1,20190507,US
US-2019267545-A1,20190507,US
US-2019371543-A1,20190509,US
US-2019268910-A1,20190514,

2025-01-18 20:13:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:13:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:13:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:13:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:13:43 - snowflake.connector.connection - INFO - closed
2025-01-18 20:13:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:14:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:14:15 - root - INFO - ```sql
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(pub.publication_date_parsed) AS "Year",
        MONTH(pub.publication_date_parsed) AS "Month_num",
        COUNT(DISTINCT pub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."publication_date"::VARCHAR, 'YYYYMMDD') AS publication_date_parsed,
            f.VALUE:"language"::STRING AS "language",
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."publication_date" IS NOT NULL
          AND t."publication_date" <> 0
    ) pub
    WHERE pub.publication_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND pub."language" = 'en'
      AND pub."abstract_text" ILIKE '%internet%of%things%'
      AND pub.publication_date_parsed IS NOT NULL
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:14:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:14:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:14:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:14:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 128
2025-01-18 20:14:17 - snowflake.connector.connection - INFO - closed
2025-01-18 20:14:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:14:17 - root - INFO - SQL:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(pub.publication_date_parsed) AS "Year",
        MONTH(pub.publication_date_parsed) AS "Month_num",
        COUNT(DISTINCT pub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."publication_date"::VARCHAR, 'YYYYMMDD') AS publication_date_parsed,
            f.VALUE:"language"::STRING AS "language",
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."publication_date" IS NOT NULL
          AND t."publication_date" <> 0
    ) pub
    WHERE pub.publication_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND pub."language" = 'en'
      AND pub."abstract_text" ILIKE '%internet%of%things%'
      AND pub.publication_date_parsed IS NOT NULL
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Results:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,0
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,0
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,1
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,0
2017,4,Apr,0
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,2
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,0
2018,3,Mar,0
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0

2025-01-18 20:14:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:14:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:14:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:14:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 20:14:18 - snowflake.connector.connection - INFO - closed
2025-01-18 20:14:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:14:48 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:14:48 - root - INFO - ```sql
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(pub.publication_date_parsed) AS "Year",
        MONTH(pub.publication_date_parsed) AS "Month_num",
        COUNT(DISTINCT pub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."publication_date"::VARCHAR, 'YYYYMMDD') AS publication_date_parsed,
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."publication_date" IS NOT NULL
          AND t."publication_date" <> 0
          AND f.VALUE:"text" IS NOT NULL
    ) pub
    WHERE pub.publication_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND pub."abstract_text" ILIKE '%internet%of%things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:14:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:14:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:14:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:14:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 128
2025-01-18 20:14:50 - snowflake.connector.connection - INFO - closed
2025-01-18 20:14:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:14:50 - root - INFO - SQL:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(pub.publication_date_parsed) AS "Year",
        MONTH(pub.publication_date_parsed) AS "Month_num",
        COUNT(DISTINCT pub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."publication_date"::VARCHAR, 'YYYYMMDD') AS publication_date_parsed,
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."publication_date" IS NOT NULL
          AND t."publication_date" <> 0
          AND f.VALUE:"text" IS NOT NULL
    ) pub
    WHERE pub.publication_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND pub."abstract_text" ILIKE '%internet%of%things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Results:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,0
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,0
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,1
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,0
2017,4,Apr,0
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,2
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,0
2018,3,Mar,0
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0

2025-01-18 20:14:50 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:14:50 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:14:50 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:14:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:14:52 - snowflake.connector.connection - INFO - closed
2025-01-18 20:14:52 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:14:52 - root - INFO - SQL:
SELECT "application_number"
    FROM PATENTS.PATENTS.PUBLICATIONS
    LIMIT 1000;
Results:
Too long, hard cut:
application_number
CR-5634-A
CR-5990-A
FI-429D-A
HK-6083-A
HU-7590-A
JP-4890-A
JP-6286-A
US-416D-A
US-9948-A
AT-41580-A
AT-47682-A
AT-63682-A
CA-72337-A
CA-75688-A
CA-81627-A
CA-9086D-A
CH-3256D-A
CH-32972-A
CH-59566-A
CH-8494D-A
CH-9587D-A
CH-9968D-A
DD-8297D-A
FR-19873-A
FR-20966-A
FR-56170-A
FR-60658-A
FR-68041-A
FR-70755-A
FR-84394-A
GB-15660-A
GB-50958-A
GB-54729-A
GB-93140-A
HK-39487-A
HK-52284-A
HK-55992-A
HK-60178-A
HK-82486-A
HU-62391-A
JP-42386-A
JP-67093-A
MA-42286-A
OA-58112-A
OA-58887-A
PH-14999-A
PH-21568-A
PH-27280-A
PH-36517-A
TR-25990-A
US-4613D-A
US-59779-A
US-6310D-A
US-8947D-A
YU-24971-A
YU-51397-A
YU-53588-A
YU-94082-A
AT-134275-A
AT-160683-A
AT-168281-A
AT-179178-A
AT-196182-A
AT-202882-A
AT-205780-A
AT-245590-A
AT-250686-A
AT-269985-A
AT-272073-A
AT-312885-A
AT-404675-A
AT-482077-A
AT-519575-A
AT-710279-A
AT-735378-A
AT-876472-A
AT-906278-A
BE-135378-A
BE-137212-A
BE-142905-A
BE-151562-A
BE-153592-A
BE-160369-A
BE-163314-A
BE-163757-A
BE-165719-A
BE-172709-A
BE-176081-A
BE-176682-A
BE-179841-A
BE-182921-A
BE-187407-A
BE-188538-A
BE-189232-A
BE-189327-A
BE-191250-A
BE-192832-A
BE-196360-A
BE-202146-A
BE-509322-A
BE-572409-A
BE-580990-A
BE-582698-A
BE-584260-A
BE-585255-A
BE-590934-A
BE-591142-A
BE-608698-A
BE-614102-A
BE-641112-A
BE-647329-A
BE-696614-A
BE-757718-A
BE-761170-A
BE-773373-A
BE-779552-A
BE-779864-A
BE-782856-A
BE-785081-A
BR-266774-A
CA-100319-A
CA-114242-A
CA-121904-A
CA-121988-A
CA-123686-A
CA-124428-A
CA-137722-A
CA-140905-A
CA-142369-A
CA-150941-A
CA-155884-A
CA-15987D-A
CA-163172-A
CA-167685-A
CA-16913D-A
CA-179842-A
CA-181797-A
CA-182858-A
CA-183905-A
CA-18563D-A
CA-185777-A
CA-187849-A
CA-195878-A
CA-19959D-A
CA-200626-A
CA-200632-A
CA-220092-A
CA-226487-A
CA-231251-A
CA-234212-A
CA-23668D-A
CA-24395D-A
CA-244852-A
CA-253922-A
CA-256110-A
CA-260420-A
CA-262852-A
CA-267803-A
CA-269711-A
CA-270426-A
CA-271567-A
CA-27243D-A
CA-276327-A
CA-28163D-A
CA-28465D-A
CA-286365-A
CA-290147-A
CA-295170-A
CA-29797D-A
CA-300615-A
CA-31628D-A
CA-321126-A
CA-335539-A
CA-336800-A
CA-340009-A
CA-346216-A
CA-347519-A
CA-352834-A
CA-362667-A
CA-36329D-A
CA-366798-A
CA-370439-A
CA-375813-A
CA-378235-A
CA-378978-A
CA-386476-A
CA-394670-A
CA-407653-A
CA-414587-A
CA-414730-A
CA-418289-A
CA-41876D-A
CA-427335-A
CA-427461-A
CA-427794-A
CA-428695-A
CA-429879-A
CA-432684-A
CA-43273D-A
CA-444491-A
CA-453501-A
CA-458035-A
CA-460234-A
CA-462534-A
CA-463864-A
CA-470722-A
CA-478572-A
CA-481428-A
CA-487036-A
CA-491161-A
CA-496400-A
CA-502094-A
CA-522175-A
CA-527800-A
CA-530928-A
CA-578900-A
CA-66947D-A
CA-77867D-A
CA-78404D-A
CA-80097D-A
CA-85483D-A
CA-86404D-A
CA-88876D-A
CA-95029D-A
CH-108762-A
CH-11218D-A
CH-11286D-A
CH-14377D-A
CH-146669-A
CH-15066D-A
CH-15518D-A
CH-16423D-A
CH-16580D-A
CH-19546D-A
CH-21002D-A
CH-224960-A
CH-241264-A
CH-24748D-A
CH-272960-A
CH-284762-A
CH-293961-A
CH-31003D-A
CH-31225D-A
CH-31903D-A
CH-321471-A
CH-357762-A
CH-359672-A
CH-36286D-A
CH-37084D-A
CH-41273D-A
CH-445970-A
CH-44956D-A
CH-452871-A
CH-482967-A
CH-52767D-A
CH-53651D-A
CH-537968-A
CH-557360-A
CH-601062-A
CH-60490D-A
CH-631771-A
CH-642072-A
CH-66893D-A
CH-671466-A
CH-680972-A
CH-698167-A
CH-73219D-A
CH-735769-A
CH-738365-A
CH-757669-A
CH-820568-A
CH-86757D-A
CH-87572D-A
CH-97232D-A
CH-996769-A
CY-127078-A
CY-134580-A
DD-18224D-A
DD-24162D-A
DD-30434D-A
DD-49762D-A
DD-56858D-A
DD-56975D-A
DD-71745D-A
DD-93406D-A
DK-143677-A
DK-220177-A
DK-224175-A
DK-318281-A
DK-388577-A
DK-398577-A
DK-423187-A
DK-540284-A
FI-112342-A
FI-14109D-A
FI-23876D-A
FI-26259D-A
FI-28117D-A
FI-863100-A
FI-890355-A
FR-110705-A
FR-120698-A
FR-816131-A
FR-832290-A
FR-880176-A
FR-901955-A
FR-903002-A
FR-93131D-A
FR-958353-A
FR-958533-A
FR-975009-A
FR-981132-A
FR-990969-A
GB-117637-A
GB-160750-A
GB-218734-A
GB-366624-A
GB-381337-A
GB-409253-A
GB-488243-A
GB-492920-A
GB-511252-A
GB-541062-A
GB-543953-A
GB-585551-A
GB-659563-A
GB-679066-A
GB-682657-A
GB-730644-A
GB-782544-A
GB-810151-A
GB-826660-A
GB-855569-A
GB-986852-A
HU-104293-A
HU-138985-A
HU-152984-A
HU-528388-A
ID-962853-A
ID-972988-A
ID-982004-A
JP-116187-A
JP-149276-A
JP-157181-A
JP-157895-A
JP-167377-A
JP-209686-A
JP-214083-A
JP-240483-A
JP-250496-A
JP-251088-A
JP-268772-A
JP-296398-A
JP-296798-A
JP-317587-A
JP-335383-A
JP-341593-A
JP-348385-A
JP-348994-A
JP-366083-A
JP-367984-A
JP-383695-A
JP-431595-A
JP-438879-A
JP-446382-A
JP-447399-A
JP-516077-A
JP-519086-A
JP-530775-A
JP-536985-A
JP-546172-A
JP-555191-A
JP-570478-A
JP-578074-A
JP-596284-A
JP-596378-A
JP-598382-A
JP-617586-A
JP-649887-A
JP-684594-A
JP-696397-A
JP-732577-A
JP-759076-A
JP-776078-A
JP-803892-A
JP-836372-A
JP-843989-A
JP-854998-A
JP-862494-A
JP-870198-A
JP-870695-A
JP-880893-A
JP-896687-A
JP-908087-A
JP-971281-A
JP-995794-A
LV-980129-A
MX-778683-A
TR-126994-A
US-11025D-A
US-15355D-A
US-155515-A
US-18685D-A
US-20482D-A
US-29111D-A
US-40373D-A
US-40881D-A
US-438787-A
US-47553D-A
US-588893-A
US-622635-A
US-62685D-A
US-63185D-A
US-71077D-A
US-724260-A
US-732748-A
US-82748D-A
US-83171D-A
US-93868D-A
US-952687-A
YU-11077

2025-01-18 20:14:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:14:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:14:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:14:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 20:14:53 - snowflake.connector.connection - INFO - closed
2025-01-18 20:14:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:14:54 - root - INFO - SQL:
SELECT "publication_date",
           TRY_TO_DATE("publication_date"::VARCHAR, 'YYYYMMDD') AS "publication_date_converted"
    FROM PATENTS.PATENTS.PUBLICATIONS
    LIMIT 1000;
Results:
Too long, hard cut:
publication_date,publication_date_converted
19980507,1998-05-07
19991217,1999-12-17
18920810,1892-08-10
19830217,1983-02-17
19900828,1990-08-28
19910910,1991-09-10
19870715,1987-07-15
18370928,1837-09-28
19501031,1950-10-31
19810215,1981-02-15
19860115,1986-01-15
19860415,1986-04-15
19730213,1973-02-13
19740709,1974-07-09
19730213,1973-02-13
18780805,1878-08-05
18910815,1891-08-15
19731015,1973-10-15
19670415,1967-04-15
18950131,1895-01-31
18950715,1895-07-15
18950915,1895-09-15
0,
19630802,1963-08-02
19660708,1966-07-08
19670324,1967-03-24
19670428,1967-04-28
19670623,1967-06-23
19670707,1967-07-07
19680105,1968-01-05
19620404,1962-04-04
19610802,1961-08-02
19300507,1930-05-07
19410228,1941-02-28
19870529,1987-05-29
19840713,1984-07-13
19920807,1992-08-07
19781020,1978-10-20
19861107,1986-11-07
19920330,1992-03-30
19870713,1987-07-13
19940719,1994-07-19
20180509,2018-05-09
19850331,1985-03-31
19880630,1988-06-30
19780530,1978-05-30
19820927,1982-09-27
19850131,1985-01-31
19891218,1989-12-18
19950315,1995-03-15
18460702,1846-07-02
19801118,1980-11-18
18490410,1849-04-10
18520511,1852-05-11
19810430,1981-04-30
19991122,1999-11-22
19891231,1989-12-31
19820831,1982-08-31
19761115,1976-11-15
19880915,1988-09-15
19860215,1986-02-15
19820715,1982-07-15
19830315,1983-03-15
19840315,1984-03-15
19810515,1981-05-15
19920915,1992-09-15
19880115,1988-01-15
19870115,1987-01-15
19760715,1976-07-15
19880615,1988-06-15
19760315,1976-03-15
19791015,1979-10-15
19780315,1978-03-15
19820915,1982-09-15
19800815,1980-08-15
19750915,1975-09-15
19861015,1986-10-15
19740306,1974-03-06
19740215,1974-02-15
19740731,1974-07-31
19750616,1975-06-16
19750616,1975-06-16
19760116,1976-01-16
19760705,1976-07-05
19760514,1976-05-14
19760716,1976-07-16
19770316,1977-03-16
19770718,1977-07-18
19770801,1977-08-01
19771201,1977-12-01
19780525,1978-05-25
19781106,1978-11-06
19781213,1978-12-13
19790112,1979-01-12
19781116,1978-11-16
19790420,1979-04-20
19790710,1979-07-10
19800118,1980-01-18
19810116,1981-01-16
19520315,1952-03-15
19620629,1962-06-29
19591116,1959-11-16
19591231,1959-12-31
19600301,1960-03-01
19600602,1960-06-02
19601118,1960-11-18
19600916,1960-09-16
19620115,1962-01-15
19620820,1962-08-20
19640611,1964-06-11
19641030,1964-10-30
19670615,1967-06-15
19710401,1971-04-01
19710527,1971-05-27
19720117,1972-01-17
19720818,1972-08-18
19720616,1972-06-16
19720901,1972-09-01
19721219,1972-12-19
19751209,1975-12-09
19730123,1973-01-23
19730220,1973-02-20
19740618,1974-06-18
19740122,1974-01-22
19740806,1974-08-06
19750617,1975-06-17
19741105,1974-11-05
19750318,1975-03-18
19750708,1975-07-08
19750916,1975-09-16
19750701,1975-07-01
18821218,1882-12-18
19770118,1977-01-18
19761019,1976-10-19
18830614,1883-06-14
19770517,1977-05-17
19770405,1977-04-05
19770125,1977-01-25
19770412,1977-04-12
18840125,1884-01-25
19760817,1976-08-17
19770301,1977-03-01
19770705,1977-07-05
18840809,1884-08-09
19780418,1978-04-18
19770419,1977-04-19
19790306,1979-03-06
19790102,1979-01-02
19790724,1979-07-24
19780110,1978-01-10
18860327,1886-03-27
18860628,1886-06-28
19770308,1977-03-08
19810210,1981-02-10
19790313,1979-03-13
19790501,1979-05-01
19790123,1979-01-23
19800909,1980-09-09
19800902,1980-09-02
19791127,1979-11-27
19810217,1981-02-17
18870723,1887-07-23
19801104,1980-11-04
18871209,1887-12-09
18880204,1888-02-04
19801021,1980-10-21
19800226,1980-02-26
19811215,1981-12-15
18880901,1888-09-01
19810324,1981-03-24
18890619,1889-06-19
19801230,1980-12-30
19831025,1983-10-25
19820420,1982-04-20
19830111,1983-01-11
19830712,1983-07-12
19811020,1981-10-20
19830426,1983-04-26
19820622,1982-06-22
18910404,1891-04-04
19821116,1982-11-16
19830927,1983-09-27
19840131,1984-01-31
19841016,1984-10-16
19841120,1984-11-20
19840228,1984-02-28
19850625,1985-06-25
19850514,1985-05-14
19860729,1986-07-29
19851008,1985-10-08
19850430,1985-04-30
18930208,1893-02-08
19860930,1986-09-30
19850806,1985-08-06
19851203,1985-12-03
19870113,1987-01-13
19860520,1986-05-20
19870707,1987-07-07
18930620,1893-06-20
19860624,1986-06-24
19871201,1987-12-01
19880315,1988-03-15
19870317,1987-03-17
19871020,1987-10-20
19880913,1988-09-13
19860805,1986-08-05
19891121,1989-11-21
19880524,1988-05-24
19871006,1987-10-06
19890411,1989-04-11
19900313,1990-03-13
19880906,1988-09-06
19900925,1990-09-25
19891205,1989-12-05
19900703,1990-07-03
19891024,1989-10-24
19000406,1900-04-06
19021021,1902-10-21
19021202,1902-12-02
19030407,1903-04-07
19040216,1904-02-16
19040412,1904-04-12
19040823,1904-08-23
19050912,1905-09-12
19640531,1964-05-31
18960715,1896-07-15
18960615,1896-06-15
18971115,1897-11-15
19710228,1971-02-28
18980331,1898-03-31
18980615,1898-06-15
18981130,1898-11-30
18981231,1898-12-31
19000731,1900-07-31
19010515,1901-05-15
19630629,1963-06-29
19660115,1966-01-15
19030215,1903-02-15
19640615,1964-06-15
19651115,1965-11-15
19650131,1965-01-31
19050228,1905-02-28
19050315,1905-03-15
19050531,1905-05-31
19720131,1972-01-31
19650731,1965-07-31
19731115,1973-11-15
19061215,1906-12-15
19070415,1907

2025-01-18 20:14:54 - root - INFO - itercount: 0
2025-01-18 20:14:54 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
DDL describes table information.
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
To determine the best approach for the task, we need to understand the structure and content of the relevant tables and columns. Here's the analysis:

**Relevant Table and Columns:**

- **Table:** `PATENTS.PATENTS.PUBLICATIONS`

- **Columns:**
  - `"country_code"`: Used to filter U.S. publications (`"country_code"` = 'US').
  - `"abstract_localized"`: Contains the abstract text where we can search for the phrase 'internet of things'.
  - `"filing_date"`: The date when the application was filed; required to filter and group filings from 2008 to 2022 by month.
  - `"publication_number"`: Unique identifier for the publication.

**Conditions that may be used:**

- Filter for U.S. publications: `"country_code"` = 'US'
- Filing dates between 2008 and 2022: `"filing_date"` between '20080101' and '20221231'
- Abstract contains 'internet of things': Need to extract text from `"abstract_localized"` and perform a case-insensitive search.

**Understanding the Data:**

To write the final query accurately, we need to understand the data formats and contents of the columns, especially since `"abstract_localized"` is of type `VARIANT` (a semi-structured data type in Snowflake) and `"filing_date"` is a number.

Below are 10 simple SQL queries to explore the data:

---

1. **Query to view distinct country codes:**

   ```sql
   SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
   ```

2. **Query to sample filing dates to understand the format:**

   ```sql
   SELECT "filing_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
   ```

3. **Query to find the minimum and maximum filing dates:**

   ```sql
   SELECT MIN("filing_date") AS "min_filing_date",
          MAX("filing_date") AS "max_filing_date"
   FROM PATENTS.PATENTS.PUBLICATIONS;
   ```

4. **Query to sample abstract data (raw `VARIANT` format):**

   ```sql
   SELECT "abstract_localized"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
   ```

5. **Query to extract abstract text from `abstract_localized`:**

   Assuming the `abstract_localized` column contains a key `"text"` with the abstract content.

   ```sql
   SELECT t."publication_number",
          t."abstract_localized"::VARIANT:"text"::STRING AS "abstract_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
   ```

6. **Query to extract language code from `abstract_localized` (if available):**

   ```sql
   SELECT t."abstract_localized"::VARIANT:"language"::STRING AS "language"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
   ```

7. **Query to count publications per country code:**

   ```sql
   SELECT "country_code",
          COUNT(*) AS "publication_count"
   FROM PATENTS.PATENTS.PUBLICATIONS
   GROUP BY "country_code"
   LIMIT 1000;
   ```

8. **Query to attempt conversion of `filing_date` to date format:**

   Assuming `filing_date` is in `'YYYYMMDD'` format.

   ```sql
   SELECT "filing_date",
          TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_converted"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
   ```

9. **Query to find publications where abstract includes 'internet of things':**

   ```sql
   SELECT t."publication_number",
          t."abstract_localized"::VARIANT:"text"::STRING AS "abstract_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."abstract_localized"::VARIANT:"text"::STRING ILIKE '%internet%of%things%'
   LIMIT 1000;
   ```

10. **Query to extract year and month from `filing_date` and count publications:**

    Assuming `filing_date` is in `'YYYYMMDD'` numeric format.

    ```sql
    SELECT SUBSTRING("filing_date"::VARCHAR, 1, 4) AS "year",
           SUBSTRING("filing_date"::VARCHAR, 5, 2) AS "month",
           COUNT(*) AS "publication_count"
    FROM PATENTS.PATENTS.PUBLICATIONS
    GROUP BY "year", "month"
    ORDER BY "year", "month"
    LIMIT 1000;
    ```

11. **Query to sample U.S. publications filed between 2008 and 2022:**

    ```sql
    SELECT "publication_number",
           "filing_date",
           "country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE "country_code" = 'US'
      AND "filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 1000;
    ```

12. **Query to verify if `filing_date` contains invalid dates:**

    ```sql
    SELECT "filing_date"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') IS NULL
    LIMIT 1000;
    ```

13. **Query to list publications with abstracts in different languages:**

    ```sql
    SELECT t."abstract_localized"::VARIANT:"language"::STRING AS "language",
           COUNT(*) AS "publication_count"
    FROM PATENTS.PATENTS.PUBLICATIONS t
    GROUP BY "language"
    LIMIT 1000;
    ```

14. **Query to extract and sample application numbers:**

    ```sql
    SELECT "application_number"
    FROM PATENTS.PATENTS.PUBLICATIONS
    LIMIT 1000;
    ```

15. **Query to check the format of `publication_date`:**

    ```sql
    SELECT "publication_date",
           TRY_TO_DATE("publication_date"::VARCHAR, 'YYYYMMDD') AS "publication_date_converted"
    FROM PATENTS.PATENTS.PUBLICATIONS
    LIMIT 1000;
    ```

---

**Notes:**

- All column names are enclosed in double quotations as per SQL standards for identifiers.
- We used `TRY_TO_DATE` to safely attempt date conversions without causing errors if the format is unexpected.
- The `::VARIANT:"key"` syntax is used to extract values from columns of type `VARIANT` in Snowflake SQL.
- The `ILIKE` operator is used for case-insensitive pattern matching in SQL.
- We included the `%` wildcard symbol in the `ILIKE` pattern for fuzzy matching, replacing spaces appropriately.
- Each query is limited to 1000 rows to prevent excessive data retrieval during exploration.

By running these queries, we can understand:

- The format and range of dates in `"filing_date"` and `"publication_date"`.
- How to extract and search within the abstract texts stored in `"abstract_localized"`.
- The distribution of publications by country and over time.
- Whether the abstracts are in English or other languages, which may affect text searches.

This information will help us construct an accurate final query to answer the original task.Query:
SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Answer:
country_code
DO
WO
BA
UA
MW
YU
ZM
LT
KR
RO
BG
TR
GR
CH
NO
MX
GE
EE
CZ
SV
HN
PA
EG
AU
CU
CR
PL
IT
CY
OA
GB
SG
CN
MC
JP
HU
DZ
AT
NL
CA
IS
SK
NI
IN
EC
ES
IE
EA
TN
GT
HK
CO
AR
SI
KE
IL
TW
MT
MD
JO
MA
ZA
EP
RS
PE
LU
DK
FI
BE
ZW
DD
DE
US
PH
SA
MN
FR
SU
BR
ID
KZ
HR
RU
SE
AP
ME
SM
NZ
PT
CL
LV
CS
MY
Query:
SELECT "filing_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Answer:
Too long, hard cut:
filing_date
19971015
19990322
0
19830217
19900109
19900101
19860106
0
19480102
19800125
19820209
19820219
19700116
19700224
19700501
0
18901220
19690318
19660117
18940609
18941217
18950125
0
19620924
19650616
19660402
19660506
19660704
19660725
19661121
19600102
19580106
19290107
19400116
19870521
19840705
19920730
19781012
19861030
19910225
19860106
19930106
20150702
19830922
19860626
19730907
19780905
19820512
19880217
19900307
0
19790102
0
0
19710204
19971230
19880317
19820430
19750221
19830503
19810413
19780313
19820518
19820524
19800416
19901205
19860918
19850916
19730328
19851029
19750527
19770706
19750707
19791105
19781012
19721012
19781219
19730906
19731029
19740405
19741216
19750221
19750925
19760105
19760123
19760331
19761125
19770324
19770413
19770802
19771125
19780505
19780613
19780712
19780717
19781020
19790110
19790718
19800918
19520218
19581027
19590724
19590915
19591103
19591202
19600518
19600524
19610929
19620219
19631211
19640430
19670405
0
19701231
19710930
19720218
19720225
19720428
19720619
19741003
19701210
19710528
19710901
19710902
19710924
19711005
19720321
19720428
19720517
19720905
19721106
0
19730129
19730402
0
19730828
19730924
19731009
19731022
0
19731114
19731206
19740325
0
19740523
19740523
19750213
19750507
19750710
19750826
0
0
19760203
19760602
19760630
19760902
19761006
19761214
19770114
19770125
19770211
0
19770407
0
0
19770908
19771103
19780118
0
19780406
0
19790208
19790912
19791002
19791116
19800221
19800312
19800527
19801017
0
19801215
19810209
19810421
19810525
19810603
19810923
19820121
19820720
19821101
19821103
19821222
0
19830503
19830504
19830510
19830524
19830607
19830719
0
19831230
19840503
19840703
19840802
19840906
19840924
19841220
19850409
19850513
19850718
19850919
19851128
19860218
19861105
19870121
19870302
19880929
18991221
19020507
19021112
19030316
19030921
19020820
19040315
19050821
19620127
18951218
18950924
18970331
19690130
18971110
18971027
18980218
18980429
18990624
19000210
19600226
19640227
19011009
19600310
19620309
19610310
19040217
19040615
19040913
19710305
19620326
19720310
19060228
19060723
19071207
19700324
19090220
19710329
19670403
19100617
19100723
19680410
19600516
19620517
19120619
19710429
19720428
19140108
19660509
19720508
19670517
19140731
19690513
19650526
19690519
19680531
19191125
19200412
19210514
19690630
19780912
19800311
0
0
0
0
0
0
0
0
19770401
19770518
19750521
19810716
19770831
19770907
19870813
19841114
0
0
19470908
19490315
0
19860729
19890125
19670616
19670912
19600120
19600707
19611127
19620626
19620705
0
19631224
19631226
19640519
19640708
19641009
19370114
19500120
19340122
19240212
19370209
19530213
19430325
19200218
19520227
19620213
19530226
19510312
19630219
19660216
19570301
19440420
19440422
19510406
19600309
19690217
19520418
19911010
19850415
19840420
19881013
19961007
19970827
19980917
19870108
19760109
19810108
19950109
19770110
19860110
19830112
19830111
19960110
19880111
19711229
19980109
19980109
19870112
19830114
19930112
19850111
19940118
19830112
19840113
19950113
19950113
19790117
19820113
19990111
19770119
19860114
19750111
19850116
19720111
19910122
19780121
19740109
19840117
19780119
19820120
19860114
19870114
19940126
19970117
19770127
19760128
19780125
19920121
19720124
19890117
19980120
19940128
19980120
19950124
19930122
19870120
19870120
19810127
19940131
19980604
19830330
19941206
0
0
19150111
0
0
0
0
0
19870116
0
19930115
19350212
0
0
0
19600208
19480210
0
0
0
19870202
19760504
19910809
19840810
19680814
19790905
19800829
19751008
19791205
19711208
20030401
19991029
19961122
19830119
19961128
19970103
19950112
19880309
19880314
20000713
19920114
19991103
19880211
19750515
19941219
19941229
19970314
19991220
19751008
19830928
19970321
19920811
19920812
19970213
19970218
19990324
19920828
20001222
19970205
19950414
19840105
19830209
19990301
19920828
19950524
19950526
19770725
20000202
19970425
19921130
19890210
20000210
19840629
20000501
20000112
19890201
20000131
19970701
19921218
19780307
19841016
19950816
19680314
19711029
19970725
20000118
19930315
19990402
20000330
19890622
19951011
19780710
19930310
20000404
19930520
19780904
19930420
19990430
19990520
19850411
19951206
19990608
20000327
19890831
19790119
20000414
19930705
19790219
19720810
19891130
19971008
19960119
20000505
19790528
19790614
19990628
19900119
19900103
19711224
19790824
20000519
19851106
19841211
19960312
19960129
19900320
19730228
19791113
20000816
19971212
19940121
19990819
20000530
19900502
19990813
20000615
19800219
19730516
19960607
19980224
19800319
19730612
19800402
19990817
19990830
19900627
19730723
19800619
19960607
20000721
20000627
19860730
19860731
19900810
19800730
19800820
19900827
19990909
20000929
19980203
19991001
19900912
19901018
19980123
20000726
19740314
19960808
19740508
19960823
20000707
20000830
19870319
20000505
19960918
19961008
19980618
19910301
20001207
19961001
19910114
19940727
19960913
19910410
19870622
19980424
19910403
19980528
19980601
19870819
19870908
19870910
19750218
19860
Query:
WITH months AS (
  SELECT
    YEAR(d) AS "Year",
    MONTH(d) AS "Month_num",
    TO_CHAR(d, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(month, seq4(), '2008-01-01') AS d
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
  )
  WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "Year",
    MONTH(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD')) AS "Month_num",
    TO_CHAR(TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD'), 'Mon') AS "Month",
    COUNT(DISTINCT t."publication_number") AS "Number_of_filings"
  FROM PATENTS.PATENTS.PUBLICATIONS t
  WHERE t."country_code" = 'US'
    AND t."filing_date" IS NOT NULL
    AND t."filing_date" <> 0
    AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
    AND LOWER(t."abstract_localized"::VARIANT:"text"::STRING) LIKE '%internet%of%things%'
  GROUP BY 1, 2, 3
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Answer:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,0
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,0
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,0
2017,4,Apr,0
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,0
2018,3,Mar,0
2018,4,Apr,0
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
Query:
SELECT "abstract_localized"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Answer:
Too long, hard cut:
abstract_localized
"[
  {
    ""language"": ""es"",
    ""text"": ""consiste en colocar una muestra solida de cereal o leguminosa en una bandeja especial desarrollada para esta metodologia (bandeja de cromatografia), la cual en su base interior (fondo) posee un substrato sensible a las aflatoxinas, que al momento de la prueba se remoja con un disolvente extractor. Las particulas contaminadas liberan aflatoxinas que eluyen hacia el substrato en una area localizada alrededor de la particula contaminada. Despues de remover la muestra la bandeja se observa bajo luz ultravioleta de 365 nm, con la cual se observan pequenas manchas azules en los sitios donde hubo particulas contaminadas. Se encontro que existe una correlacion altamente significativa entre el numero de particulas que liberan aflatoxinas hacia el substrato sensible (manchas azules) y el contenido de aflatoxinas obtenido mediante un metodo quimico cuantitativo."",
    ""truncated"": false
  }
]"
"[
  {
    ""language"": ""es"",
    ""text"": ""derivados de acido 2-imino-metil-fenil-acetico que tiene una actividad microbicida, insecticida, y acaricida, a un proceso para la preparacion de los mismos, a nuevos intermediarios para su preparacion, a composiciones agroquimicas que contienen estos ingredientes activos, asi como a su uso en el control y prevencion de hongos, acaros, e insectos patagonicos de plantas end agricultura y en el campo de higiene."",
    ""truncated"": false
  }
]"
[]
[]
[]
"[
  {
    ""language"": ""en"",
    ""text"": ""PURPOSE:To install the title fish bank suitable for the spawning of fish and shellfish, usable for a long period of time without causing spoiling by connecting to a mooring object artificial algal weeds with such a makeup that stringy leaf axes are projected innumerably from strand-like stem axes and by putting the algal weeds underwater. CONSTITUTION:The objective artificial algal weeds consisting of the following elements: (a) artificial algal weeds 13 with stringy leaf axes 12 innumerably projected from continuous, flexible strand-like stem axes 11 are put underwater 14; (b) the stem axes 11 are made of continuous plastic filaments 16 interlaced forming a texture 15; (c) the leaf axes 12 are made of plastic filaments 17 held at the texture 15 of the stem axes 11; and (d) part of the continuous stem axes 11 is connected to a mooring object 18."",
    ""truncated"": false
  },
  {
    ""language"": ""ja"",
    ""text"": ""(57)【要約】本公報は電子出願前の出願データであるた め要約のデータは記録されません。"",
    ""truncated"": false
  }
]"
"[
  {
    ""language"": ""ja"",
    ""text"": ""(57)【要約】本公報は電子出願前の出願データであるた め要約のデータは記録されません。"",
    ""truncated"": false
  }
]"
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
"[
  {
    ""language"": ""en"",
    ""text"": ""893,001. Stretching. BIGWOOD &amp; SON Ltd., JOSHUA. Dec. 16, 1960 [Jan. 2, 1960], No. 156/60. Class 83 (4). A stretching machine of the type in which metal sheet, gripped at its ends between jaws of gripper heads, is stretched when the heads are moved apart, is characterized in that each gripper head has a passage formed therein and extending through the gripper head in line with the opening between the jaws so that strip can be passed from a coil through the passages in the gripper heads and a length of strip can be gripped, stretched and then released from the machine by passing it out through the said passages. One gripper head 11 is normally stationary during stretching, but is adjustable along a bed 12 by screws 17 driven by an electric motor 19. The other gripper head 10 is urged, by piston rods 13 in fluid-pressure cylinders 14, away from the head 11 to stretch strip, extending from a coil, therebetween, the head 10 running on rollers 16 on the bed 12. The body of each gripper head has a passage extending therethrough defined by guides 20 faced with non-abrasive material 22. Each series of grip blocks 23 of a gripper head is actuated by a piston rod 24 of a fluid-pressure cylinder 26. Specifications 614,186, 739,291 and 809,619 are referred to."",
    ""truncated"": false
  }
]"
"[
  {
    ""language"": ""en"",
    ""text"": ""873,984. Jacks. SCHWARZ, E., [trading as METALLWARENUND MASCHINENFABRIK P. SCHWARZ]. Jan. 6, 1958 [Feb. 8, 1957], No. 509/58. Class 78 (3). [Also in Group XXIII] A tool for lifting and/ or supporting tools or workpieces on presses, punches or similar machine tools comprises at least two co-operating jaws one of which 11 is fixed to a support column 10, the other jaw 12 being slidably mounted for displacement therealong and having a stirrupshaped mounting member including arms 13, 14 in which the column 10 is journalled at two spaced-apart points and means arranged between the arms for raising and lowering the jaw 12. As shown the means for raising and lowering the jaw 12 is a cant ring shifting mechanism of which the hand operating lever 16 abuts on every downward stroke against a stop 17 on the stirrup. A release lever 22 serves for rapid retu
Query:
SELECT t."publication_number",
          t."abstract_localized"::VARIANT:"text"::STRING AS "abstract_text"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,abstract_text
CR-5634-A,
CR-5990-A,
FI-429-A,
HK-6083-A,
HU-T52763-A,
JP-H03206829-A,
JP-S62159089-A,
US-416-A,
US-2528225-A,
AT-A41580-A,
AT-A47682-A,
AT-A63682-A,
CA-920790-A,
CA-950907-A,
CA-920830-A,
CA-9086-A,
CH-3256-A,
CH-540255-A,
CH-433637-A,
CH-8494-A,
CH-9587-A,
CH-9968-A,
DD-8297-A,
FR-1334211-A,
FR-1444995-A,
FR-1474468-A,
FR-1478988-A,
FR-1485992-A,
FR-1487706-A,
FR-1508237-A,
GB-893001-A,
GB-873984-A,
GB-307790-A,
GB-534192-A,
HK-39487-A,
HK-52284-A,
HK-55992-A,
HK-60178-A,
HK-82486-A,
HU-T58725-A,
JP-S62157892-A,
JP-H06198910-A,
MA-42286-A,
OA-07542-A,
OA-08399-A,
PH-11723-A,
PH-15213-A,
PH-17928-A,
PH-23905-A,
TR-26506-A,
US-4613-A,
US-4234270-A,
US-6310-A,
US-8947-A,
YU-24971-A,
YU-51397-A,
YU-53588-A,
YU-94082-A,
AT-A134275-A,
AT-A160683-A,
AT-A168281-A,
AT-A179178-A,
AT-A196182-A,
AT-A202882-A,
AT-A205780-A,
AT-A245590-A,
AT-A250686-A,
AT-A269985-A,
AT-A272073-A,
AT-A312885-A,
AT-A404675-A,
AT-A482077-A,
AT-A519575-A,
AT-A710279-A,
AT-A735378-A,
AT-A876472-A,
AT-A906278-A,
BE-804534-A,
BE-806687-A,
BE-813367-A,
BE-823416-A,
BE-825816-A,
BE-833811-A,
BE-837312-A,
BE-837857-A,
BE-840231-A,
BE-848755-A,
BE-852837-A,
BE-853553-A,
BE-857395-A,
BE-861199-A,
BE-866723-A,
BE-868080-A,
BE-868938-A,
BE-869056-A,
BE-871421-A,
BE-873394-A,
BE-877768-A,
BE-885287-A,
BE-509322-A,
BE-572409-A,
BE-580990-A,
BE-582698-A,
BE-584260-A,
BE-585255-A,
BE-590934-A,
BE-591142-A,
BE-608698-A,
BE-614102-A,
BE-641112-A,
BE-647329-A,
BE-696614-A,
BE-757718-A,
BE-761170-A,
BE-773373-A,
BE-779552-A,
BE-779864-A,
BE-782856-A,
BE-785081-A,
BR-7402667-A,
CA-919795-A,
CA-921485-A,
CA-949331-A,
CA-940601-A,
CA-952509-A,
CA-969477-A,
CA-957211-A,
CA-964531-A,
CA-970871-A,
CA-974642-A,
CA-970156-A,
CA-15987-A,
CA-1003950-A,
CA-998543-A,
CA-16913-A,
CA-1010201-A,
CA-1007854-A,
CA-1004238-A,
CA-1008568-A,
CA-18563-A,
CA-995356-A,
CA-1006284-A,
CA-1013478-A,
CA-19959-A,
CA-1029597-A,
CA-1008729-A,
CA-1050191-A,
CA-1045448-A,
CA-1059120-A,
CA-1024007-A,
CA-23668-A,
CA-24395-A,
CA-1006362-A,
CA-1095517-A,
CA-1050671-A,
CA-1053401-A,
CA-1046805-A,
CA-1085295-A,
CA-1084844-A,
CA-1067004-A,
CA-1095710-A,
CA-27243-A,
CA-1089150-A,
CA-28163-A,
CA-28465-A,
CA-1088104-A,
CA-1072350-A,
CA-1114446-A,
CA-29797-A,
CA-1098093-A,
CA-31628-A,
CA-1092542-A,
CA-1155622-A,
CA-1122037-A,
CA-1139209-A,
CA-1149649-A,
CA-1110891-A,
CA-1145119-A,
CA-1125991-A,
CA-36329-A,
CA-1135535-A,
CA-1154421-A,
CA-1161271-A,
CA-1176339-A,
CA-1178020-A,
CA-1162713-A,
CA-1189535-A,
CA-1187223-A,
CA-1208489-A,
CA-1195046-A,
CA-1186283-A,
CA-41876-A,
CA-1212038-A,
CA-1191397-A,
CA-1197410-A,
CA-1216501-A,
CA-1204702-A,
CA-1223728-A,
CA-43273-A,
CA-1206543-A,
CA-1229735-A,
CA-1234097-A,
CA-1219333-A,
CA-1228350-A,
CA-1241951-A,
CA-1208886-A,
CA-1263079-A,
CA-1237140-A,
CA-1227616-A,
CA-1252414-A,
CA-1266567-A,
CA-1241730-A,
CA-1274626-A,
CA-1263734-A,
CA-1271286-A,
CA-1262494-A,
CA-66947-A,
CA-77867-A,
CA-78404-A,
CA-80097-A,
CA-85483-A,
CA-86404-A,
CA-88876-A,
CA-95029-A,
CH-378178-A,
CH-11218-A,
CH-11286-A,
CH-14377-A,
CH-503687-A,
CH-15066-A,
CH-15518-A,
CH-16423-A,
CH-16580-A,
CH-19546-A,
CH-21002-A,
CH-372604-A,
CH-405520-A,
CH-24748-A,
CH-378372-A,
CH-402439-A,
CH-387539-A,
CH-31003-A,
CH-31225-A,
CH-31903-A,
CH-518228-A,
CH-396205-A,
CH-544230-A,
CH-36286-A,
CH-37084-A,
CH-41273-A,
CH-522569-A,
CH-44956-A,
CH-536797-A,
CH-462084-A,
CH-52767-A,
CH-53651-A,
CH-498861-A,
CH-379811-A,
CH-393839-A,
CH-60490-A,
CH-539157-A,
CH-541208-A,
CH-66893-A,
CH-455052-A,
CH-554991-A,
CH-450035-A,
CH-73219-A,
CH-490054-A,
CH-471055-A,
CH-516215-A,
CH-473334-A,
CH-86757-A,
CH-87572-A,
CH-97232-A,
CH-493231-A,
CY-1270-A,
CY-1345-A,
DD-18224-A,
DD-24162-A,
DD-30434-A,
DD-49762-A,
DD-56858-A,
DD-56975-A,
DD-71745-A,
DD-93406-A,
DK-143677-A,
DK-220177-A,
DK-224175-A,
DK-318281-A,
DK-388577-A,
DK-398577-A,
DK-423187-A,
DK-540284-A,
FI-21698-A,
FI-14109-A,
FI-23876-A,
FI-26259-A,
FI-28117-A,
FI-863100-A,
FI-890355-A,
FR-1529048-A,
FR-1536688-A,
FR-1250774-A,
FR-1265518-A,
FR-1311472-A,
FR-1334436-A,
FR-1327672-A,
FR-93131-A,
FR-1377918-A,
FR-1388060-A,
FR-1394598-A,
FR-1400829-A,
FR-1415869-A,
GB-494318-A,
GB-740961-A,
GB-413664-A,
GB-226698-A,
GB-491961-A,
GB-734439-A,
GB-589546-A,
GB-147410-A,
GB-718629-A,
GB-933129-A,
GB-726335-A,
GB-696973-A,
GB-981650-A,
GB-1094014-A,
GB-813561-A,
GB-575877-A,
GB-627004-A,
GB-723210-A,
GB-894980-A,
GB-1254938-A,
GB-713370-A,
HU-T67017-A,
HU-T39794-A,
HU-T40753-A,
HU-T52581-A,
ID-16396-A,
ID-20737-A,
ID-24140-A,
JP-S62165193-A,
JP-S5285331-A,
JP-S57116755-A,
JP-H08191286-A,
JP-S5387240-A,
JP-S62161096-A,
JP-S59127531-A,
JP-S59128220-A,
JP-H09191341-A,
JP-H01180285-A,
JP-S4871797-A,
JP-H11197018-A,
JP-H1149528-A,
JP-S63173215-A,
JP-S59128182-A,
JP-H06209632-A,
JP-S61164464-A,
JP-H07208063-A,
JP-S59128720-A,
JP-S59187448-A,
JP-H08190937-A,
JP-H08194356-A,
JP-S5596945-A,
JP-S58121067-A,
JP-2000203601-A,
JP-S5389750-A,
JP-S62163740-A,
JP-S5180723-A,
JP-S61165867-A,
JP-S4876109-A,
JP-H04237231-A,
JP-S5499170-A,
JP-S50100056-A,
JP-S6
Query:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(sub.filing_date_parsed) AS "Year",
        MONTH(sub.filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT sub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            f.VALUE:"language"::STRING AS "language",
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
    ) sub
    WHERE sub.filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND sub."language" = 'en'
      AND sub."abstract_text" ILIKE '%internet%of%things%'
      AND sub.filing_date_parsed IS NOT NULL
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Answer:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,3
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
Query:
SELECT "country_code",
          COUNT(*) AS "publication_count"
   FROM PATENTS.PATENTS.PUBLICATIONS
   GROUP BY "country_code"
   LIMIT 1000;
Answer:
country_code,publication_count
JP,110525
HU,969
DZ,1
HR,167
RS,38
GR,207
UA,479
MW,4
NO,890
YU,228
ZM,10
LT,50
PL,1187
CR,41
CS,528
MY,195
LV,23
DO,6
WO,9409
AU,9744
CU,23
RO,172
KR,28416
SA,20
MN,1
IE,372
EA,108
ES,2080
DE,12656
US,57953
DD,722
PH,116
MX,863
EE,7
GE,23
EG,18
PA,5
TR,222
BG,265
AT,4482
IL,1185
TW,4270
MT,1
MD,30
NI,7
MA,54
EP,8335
ZA,1261
CH,3513
CO,118
AR,666
KE,5
SI,117
BA,1
RU,2979
JO,26
IT,3866
OA,29
CY,81
GB,5551
SG,284
SU,2526
FR,3326
BR,4469
ID,43
LU,139
NL,1274
BE,2457
ZW,2
IN,222
EC,14
PT,372
CL,267
NZ,276
CN,208729
MC,4
PE,77
KZ,1
FI,467
DK,575
SK,99
CA,13358
IS,28
SE,1473
AP,65
SM,11
ME,5
CZ,414
SV,3
HN,5
HK,440
TN,15
GT,15
Query:
SELECT "filing_date",
          TRY_TO_DATE("filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date_converted"
   FROM PATENTS.PATENTS.PUBLICATIONS
   LIMIT 1000;
Answer:
Too long, hard cut:
filing_date,filing_date_converted
19971015,1997-10-15
19990322,1999-03-22
0,
19830217,1983-02-17
19900109,1990-01-09
19900101,1990-01-01
19860106,1986-01-06
0,
19480102,1948-01-02
19800125,1980-01-25
19820209,1982-02-09
19820219,1982-02-19
19700116,1970-01-16
19700224,1970-02-24
19700501,1970-05-01
0,
18901220,1890-12-20
19690318,1969-03-18
19660117,1966-01-17
18940609,1894-06-09
18941217,1894-12-17
18950125,1895-01-25
0,
19620924,1962-09-24
19650616,1965-06-16
19660402,1966-04-02
19660506,1966-05-06
19660704,1966-07-04
19660725,1966-07-25
19661121,1966-11-21
19600102,1960-01-02
19580106,1958-01-06
19290107,1929-01-07
19400116,1940-01-16
19870521,1987-05-21
19840705,1984-07-05
19920730,1992-07-30
19781012,1978-10-12
19861030,1986-10-30
19910225,1991-02-25
19860106,1986-01-06
19930106,1993-01-06
20150702,2015-07-02
19830922,1983-09-22
19860626,1986-06-26
19730907,1973-09-07
19780905,1978-09-05
19820512,1982-05-12
19880217,1988-02-17
19900307,1990-03-07
0,
19790102,1979-01-02
0,
0,
19710204,1971-02-04
19971230,1997-12-30
19880317,1988-03-17
19820430,1982-04-30
19750221,1975-02-21
19830503,1983-05-03
19810413,1981-04-13
19780313,1978-03-13
19820518,1982-05-18
19820524,1982-05-24
19800416,1980-04-16
19901205,1990-12-05
19860918,1986-09-18
19850916,1985-09-16
19730328,1973-03-28
19851029,1985-10-29
19750527,1975-05-27
19770706,1977-07-06
19750707,1975-07-07
19791105,1979-11-05
19781012,1978-10-12
19721012,1972-10-12
19781219,1978-12-19
19730906,1973-09-06
19731029,1973-10-29
19740405,1974-04-05
19741216,1974-12-16
19750221,1975-02-21
19750925,1975-09-25
19760105,1976-01-05
19760123,1976-01-23
19760331,1976-03-31
19761125,1976-11-25
19770324,1977-03-24
19770413,1977-04-13
19770802,1977-08-02
19771125,1977-11-25
19780505,1978-05-05
19780613,1978-06-13
19780712,1978-07-12
19780717,1978-07-17
19781020,1978-10-20
19790110,1979-01-10
19790718,1979-07-18
19800918,1980-09-18
19520218,1952-02-18
19581027,1958-10-27
19590724,1959-07-24
19590915,1959-09-15
19591103,1959-11-03
19591202,1959-12-02
19600518,1960-05-18
19600524,1960-05-24
19610929,1961-09-29
19620219,1962-02-19
19631211,1963-12-11
19640430,1964-04-30
19670405,1967-04-05
0,
19701231,1970-12-31
19710930,1971-09-30
19720218,1972-02-18
19720225,1972-02-25
19720428,1972-04-28
19720619,1972-06-19
19741003,1974-10-03
19701210,1970-12-10
19710528,1971-05-28
19710901,1971-09-01
19710902,1971-09-02
19710924,1971-09-24
19711005,1971-10-05
19720321,1972-03-21
19720428,1972-04-28
19720517,1972-05-17
19720905,1972-09-05
19721106,1972-11-06
0,
19730129,1973-01-29
19730402,1973-04-02
0,
19730828,1973-08-28
19730924,1973-09-24
19731009,1973-10-09
19731022,1973-10-22
0,
19731114,1973-11-14
19731206,1973-12-06
19740325,1974-03-25
0,
19740523,1974-05-23
19740523,1974-05-23
19750213,1975-02-13
19750507,1975-05-07
19750710,1975-07-10
19750826,1975-08-26
0,
0,
19760203,1976-02-03
19760602,1976-06-02
19760630,1976-06-30
19760902,1976-09-02
19761006,1976-10-06
19761214,1976-12-14
19770114,1977-01-14
19770125,1977-01-25
19770211,1977-02-11
0,
19770407,1977-04-07
0,
0,
19770908,1977-09-08
19771103,1977-11-03
19780118,1978-01-18
0,
19780406,1978-04-06
0,
19790208,1979-02-08
19790912,1979-09-12
19791002,1979-10-02
19791116,1979-11-16
19800221,1980-02-21
19800312,1980-03-12
19800527,1980-05-27
19801017,1980-10-17
0,
19801215,1980-12-15
19810209,1981-02-09
19810421,1981-04-21
19810525,1981-05-25
19810603,1981-06-03
19810923,1981-09-23
19820121,1982-01-21
19820720,1982-07-20
19821101,1982-11-01
19821103,1982-11-03
19821222,1982-12-22
0,
19830503,1983-05-03
19830504,1983-05-04
19830510,1983-05-10
19830524,1983-05-24
19830607,1983-06-07
19830719,1983-07-19
0,
19831230,1983-12-30
19840503,1984-05-03
19840703,1984-07-03
19840802,1984-08-02
19840906,1984-09-06
19840924,1984-09-24
19841220,1984-12-20
19850409,1985-04-09
19850513,1985-05-13
19850718,1985-07-18
19850919,1985-09-19
19851128,1985-11-28
19860218,1986-02-18
19861105,1986-11-05
19870121,1987-01-21
19870302,1987-03-02
19880929,1988-09-29
18991221,1899-12-21
19020507,1902-05-07
19021112,1902-11-12
19030316,1903-03-16
19030921,1903-09-21
19020820,1902-08-20
19040315,1904-03-15
19050821,1905-08-21
19620127,1962-01-27
18951218,1895-12-18
18950924,1895-09-24
18970331,1897-03-31
19690130,1969-01-30
18971110,1897-11-10
18971027,1897-10-27
18980218,1898-02-18
18980429,1898-04-29
18990624,1899-06-24
19000210,1900-02-10
19600226,1960-02-26
19640227,1964-02-27
19011009,1901-10-09
19600310,1960-03-10
19620309,1962-03-09
19610310,1961-03-10
19040217,1904-02-17
19040615,1904-06-15
19040913,1904-09-13
19710305,1971-03-05
19620326,1962-03-26
19720310,1972-03-10
19060228,1906-02-28
19060723,1906-07-23
19071207,1907-12-07
19700324,1970-03-24
19090220,1909-02-20
19710329,1971-03-29
19670403,1967-04-03
19100617,1910-06-17
19100723,1910-07-23
19680410,1968-04-10
19600516,1960-05-16
19620517,1962-05-17
19120619,1912-06-19
19710429,1971-04-29
19720428,1972-04-28
19140108,1914-01-08
19660509,1966-05-09
19720508,1972-05-08
19670517,1967-05-17
19140731,1914-07-31

Query:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(sub.filing_date_parsed) AS "Year",
        MONTH(sub.filing_date_parsed) AS "Month_num",
        COUNT(DISTINCT sub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_parsed,
            LOWER(t."abstract_localized"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t
        WHERE t."country_code" = 'US'
          AND t."filing_date" IS NOT NULL
          AND t."filing_date" <> 0
          AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
          AND t."abstract_localized" IS NOT NULL
    ) sub
    WHERE sub.filing_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND sub."abstract_text" ILIKE '%internet of things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Answer:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,2
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
Query:
SELECT SUBSTRING("filing_date"::VARCHAR, 1, 4) AS "year",
           SUBSTRING("filing_date"::VARCHAR, 5, 2) AS "month",
           COUNT(*) AS "publication_count"
    FROM PATENTS.PATENTS.PUBLICATIONS
    GROUP BY "year", "month"
    ORDER BY "year", "month"
    LIMIT 1000;
Answer:
Too long, hard cut:
year,month,publication_count
0,,8885
1846,11,1
1853,08,1
1860,09,1
1867,07,1
1877,07,2
1877,08,1
1877,11,1
1880,08,1
1881,06,2
1882,03,1
1882,07,1
1882,11,1
1883,03,1
1883,04,1
1885,02,2
1885,04,1
1885,10,1
1886,02,1
1886,05,1
1886,11,1
1887,01,1
1887,06,1
1887,07,1
1888,04,1
1888,07,1
1888,10,1
1889,03,1
1889,04,1
1889,06,2
1889,07,2
1889,08,2
1889,09,1
1889,11,1
1890,07,1
1890,09,1
1890,11,1
1890,12,1
1891,01,1
1891,04,1
1891,06,1
1891,07,2
1891,09,1
1891,10,1
1891,11,1
1891,12,1
1892,01,1
1892,04,3
1892,06,1
1892,08,3
1892,12,2
1893,01,1
1893,04,3
1893,06,3
1893,07,1
1893,08,2
1893,09,2
1893,10,1
1893,11,3
1893,12,2
1894,01,5
1894,02,2
1894,03,2
1894,04,6
1894,05,4
1894,06,3
1894,07,1
1894,08,3
1894,10,4
1894,11,2
1894,12,2
1895,01,2
1895,03,4
1895,04,1
1895,05,2
1895,06,2
1895,07,1
1895,08,1
1895,09,3
1895,10,5
1895,11,3
1895,12,4
1896,01,1
1896,02,4
1896,03,3
1896,04,2
1896,05,3
1896,06,3
1896,07,8
1896,08,2
1896,09,7
1896,10,3
1896,11,4
1896,12,4
1897,01,7
1897,02,1
1897,03,5
1897,04,3
1897,05,4
1897,06,1
1897,07,5
1897,08,1
1897,09,2
1897,10,4
1897,11,5
1897,12,6
1898,01,6
1898,02,6
1898,03,3
1898,04,6
1898,05,2
1898,06,5
1898,07,4
1898,08,1
1898,09,6
1898,10,1
1898,11,7
1898,12,4
1899,01,4
1899,02,13
1899,03,12
1899,04,9
1899,05,12
1899,06,9
1899,07,7
1899,08,9
1899,09,6
1899,10,7
1899,11,8
1899,12,14
1900,01,5
1900,02,10
1900,03,8
1900,04,9
1900,05,8
1900,06,5
1900,07,8
1900,08,3
1900,09,7
1900,10,6
1900,11,7
1900,12,5
1901,01,9
1901,02,4
1901,03,6
1901,04,16
1901,05,7
1901,06,6
1901,07,5
1901,08,6
1901,09,4
1901,10,11
1901,11,11
1901,12,6
1902,01,3
1902,02,12
1902,03,12
1902,04,8
1902,05,10
1902,06,5
1902,07,8
1902,08,11
1902,09,14
1902,10,6
1902,11,6
1902,12,5
1903,01,12
1903,02,6
1903,03,19
1903,04,12
1903,05,6
1903,06,14
1903,07,9
1903,08,10
1903,09,3
1903,10,6
1903,11,8
1903,12,6
1904,01,13
1904,02,11
1904,03,15
1904,04,11
1904,05,10
1904,06,16
1904,07,8
1904,08,11
1904,09,17
1904,10,9
1904,11,7
1904,12,8
1905,01,8
1905,02,12
1905,03,14
1905,04,7
1905,05,17
1905,06,10
1905,07,13
1905,08,9
1905,09,12
1905,10,17
1905,11,11
1905,12,19
1906,01,8
1906,02,14
1906,03,22
1906,04,11
1906,05,22
1906,06,16
1906,07,14
1906,08,19
1906,09,18
1906,10,20
1906,11,10
1906,12,15
1907,01,14
1907,02,24
1907,03,17
1907,04,15
1907,05,19
1907,06,18
1907,07,14
1907,08,17
1907,09,15
1907,10,16
1907,11,12
1907,12,16
1908,01,14
1908,02,17
1908,03,14
1908,04,14
1908,05,19
1908,06,16
1908,07,11
1908,08,6
1908,09,14
1908,10,6
1908,11,13
1908,12,16
1909,01,15
1909,02,12
1909,03,20
1909,04,12
1909,05,6
1909,06,14
1909,07,13
1909,08,9
1909,09,15
1909,10,12
1909,11,17
1909,12,10
1910,01,10
1910,02,20
1910,03,11
1910,04,15
1910,05,13
1910,06,17
1910,07,13
1910,08,11
1910,09,13
1910,10,13
1910,11,14
1910,12,14
1911,01,17
1911,02,27
1911,03,20
1911,04,19
1911,05,19
1911,06,21
1911,07,13
1911,08,22
1911,09,22
1911,10,20
1911,11,12
1911,12,16
1912,01,19
1912,02,20
1912,03,21
1912,04,29
1912,05,17
1912,06,30
1912,07,22
1912,08,29
1912,09,18
1912,10,25
1912,11,17
1912,12,29
1913,01,25
1913,02,15
1913,03,28
1913,04,33
1913,05,21
1913,06,23
1913,07,27
1913,08,17
1913,09,15
1913,10,22
1913,11,27
1913,12,22
1914,01,16
1914,02,20
1914,03,23
1914,04,18
1914,05,21
1914,06,17
1914,07,18
1914,08,12
1914,09,11
1914,10,14
1914,11,12
1914,12,15
1915,01,15
1915,02,22
1915,03,22
1915,04,15
1915,05,17
1915,06,11
1915,07,13
1915,08,12
1915,09,12
1915,10,8
1915,11,16
1915,12,8
1916,01,15
1916,02,9
1916,03,13
1916,04,24
1916,05,25
1916,06,10
1916,07,14
1916,08,11
1916,09,10
1916,10,17
1916,11,15
1916,12,10
1917,01,11
1917,02,8
1917,03,15
1917,04,13
1917,05,12
1917,06,13
1917,07,13
1917,08,10
1917,09,10
1917,10,9
1917,11,16
1917,12,13
1918,01,12
1918,02,8
1918,03,8
1918,04,12
1918,05,13
1918,06,8
1918,07,13
1918,08,8
1918,09,13
1918,10,8
1918,11,6
1918,12,2
1919,01,12
1919,02,11
1919,03,13
1919,04,16
1919,05,15
1919,06,14
1919,07,11
1919,08,15
1919,09,8
1919,10,6
1919,11,16
1919,12,12
1920,01,16
1920,02,12
1920,03,20
1920,04,9
1920,05,13
1920,06,27
1920,07,23
1920,08,8
1920,09,12
1920,10,10
1920,11,17
1920,12,6
1921,01,21
1921,02,22
1921,03,22
1921,04,13
1921,05,18
1921,06,15
1921,07,19
1921,08,18
1921,09,18
1921,10,14
1921,11,12
1921,12,16
1922,01,10
1922,02,10
1922,03,12
1922,04,15
1922,05,24
1922,06,15
1922,07,7
1922,08,14
1922,09,13
1922,10,15
1922,11,15
1922,12,9
1923,01,16
1923,02,11
1923,03,20
1923,04,16
1923,05,12
1923,06,14
1923,07,13
1923,08,7
1923,09,11
1923,10,17
1923,11,15
1923,12,14
1924,01,15
1924,02,12
1924,03,15
1924,04,23
1924,05,13
1924,06,12
1924,07,14
1924,08,13
1924,09,17
1924,10,11
1924,11,10
1924,12,19
1925,01,18
1925,02,18
1925,03,15
1925,04,23
1925,05,17
1925,06,21
1925,07,21
1925,08,12
1925,09,15
1925,10,12
1925,11,12
1925,12,19
1926,01,15
1926,02,8
1926,03,23
1926,04,15
1926,05,17
1926,06,23
1926,07,18
1926,08,18
1926,09,12
1926,10,24
1926,11,24
1926,12,17
1927,01,13
1927,02,11
1927,03,16
1927,04,27
1927,05,27
1927,06,12
1927,07,15
1927,08,17
1927,09,18
1927,10,26
1927,11,12
1927,12,17
1928,01,21
1928,02,19
1928,03,21
1928,04
Query:
SELECT "publication_number",
           "filing_date",
           "country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS
    WHERE "country_code" = 'US'
      AND "filing_date" BETWEEN 20080101 AND 20221231
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,filing_date,country_code
US-2018235635-A1,20170628,US
US-2018201131-A1,20170425,US
US-2017235415-A1,20170501,US
US-2017244772-A1,20170508,US
US-2017251351-A1,20170511,US
US-2018332422-A1,20170512,US
US-2018344618-A1,20170531,US
US-2017365978-A1,20170620,US
US-2017282979-A1,20170621,US
US-2018374008-A1,20170627,US
US-2019000011-A1,20170703,US
US-2019011327-A1,20170707,US
US-2018141748-A1,20170707,US
US-2017312220-A1,20170718,US
US-2018021729-A1,20170719,US
US-2017326685-A1,20170720,US
US-2019027838-A1,20170724,US
US-2018043016-A1,20170810,US
US-2018015550-A1,20170818,US
US-2017366839-A1,20170901,US
US-2018308237-A1,20170901,US
US-2017368430-A1,20170910,US
US-2018005882-A1,20170918,US
US-2018014294-A1,20170922,US
US-2018055834-A1,20170926,US
US-2018138699-A1,20171002,US
US-2018093291-A1,20171003,US
US-2019166643-A1,20150619,US
US-2019008396-A1,20160804,US
US-2018247845-A1,20160802,US
US-2019244002-A1,20180226,US
US-2018285832-A1,20160902,US
US-2018297625-A1,20161007,US
US-2018314375-A1,20161031,US
US-2018324318-A1,20161102,US
US-2020255606-A1,20161229,US
US-2018332521-A1,20151218,US
US-2020300710-A1,20161114,US
US-2018334294-A1,20160406,US
US-2018063804-A1,20171030,US
US-2018050165-A1,20171031,US
US-2018068082-A1,20171113,US
US-2018214421-A1,20171221,US
US-2019147861-A1,20171228,US
US-2019206984-A1,20180102,US
US-2018143152-A1,20180103,US
US-2018131680-A1,20180104,US
US-2018210608-A1,20180118,US
US-2019235774-A1,20180129,US
US-2018212990-A1,20180206,US
US-2019248391-A1,20180212,US
US-2018164906-A1,20180212,US
US-2019257425-A1,20180217,US
US-2018272285-A1,20180221,US
US-2019257342-A1,20180222,US
US-2019254290-A1,20180222,US
US-2018257099-A1,20180227,US
US-2019262055-A1,20180228,US
US-2019269443-A1,20180302,US
US-2018193440-A1,20180305,US
US-2018261055-A1,20180308,US
US-2018267719-A1,20180309,US
US-2019282850-A1,20180316,US
US-2021353254-A1,20200512,US
US-2018293073-A1,20180403,US
US-2018329166-A1,20180405,US
US-2018233592-A1,20180413,US
US-2019316264-A1,20180413,US
US-2019317850-A1,20180417,US
US-2019321673-A1,20180419,US
US-2019326755-A1,20180420,US
US-2019321213-A1,20180423,US
US-2018304833-A1,20180423,US
US-2018334888-A1,20180425,US
US-2019333871-A1,20180430,US
US-2018323192-A1,20180502,US
US-2018254806-A1,20180503,US
US-2018254074-A1,20180507,US
US-2018328779-A1,20180509,US
US-2018329475-A1,20180510,US
US-2018339704-A1,20180511,US
US-2018336332-A1,20180517,US
US-2019363325-A1,20180522,US
US-2018343482-A1,20180522,US
US-2018371080-A1,20180523,US
US-2019364807-A1,20180530,US
US-2018286958-A1,20180605,US
US-2018361500-A1,20180607,US
US-2019150530-A1,20180615,US
US-2018376351-A1,20180620,US
US-2018372441-A1,20180621,US
US-2018296030-A1,20180622,US
US-2019002200-A1,20180627,US
US-2020004883-A1,20180627,US
US-2020014076-A1,20180709,US
US-2019293515-A1,20180709,US
US-2019024014-A1,20180720,US
US-2020028206-A1,20161213,US
US-2019338645-A1,20161208,US
US-2021189594-A1,20170202,US
US-2019111078-A1,20170208,US
US-2019060877-A1,20170309,US
US-2019174718-A1,20180406,US
US-2019054338-A1,20180822,US
US-2019012038-A1,20180824,US
US-2019098882-A1,20180827,US
US-2019221573-A1,20180829,US
US-2020069862-A1,20180903,US
US-2020078136-A1,20180906,US
US-2020091600-A1,20180918,US
US-2020094415-A1,20180921,US
US-2019049982-A1,20180928,US
US-2019043058-A1,20181009,US
US-2019244905-A1,20181016,US
US-2019183807-A1,20181019,US
US-2019128912-A1,20181026,US
US-2019142717-A1,20181030,US
US-2019065873-A1,20181031,US
US-2020143704-A1,20181102,US
US-2020111794-A1,20181105,US
US-2019145555-A1,20181108,US
US-2019145280-A1,20181115,US
US-2019160844-A1,20181121,US
US-2019162206-A1,20181121,US
US-2020182340-A1,20181206,US
US-2020213312-A1,20181228,US
US-2019206089-A1,20181231,US
US-2019223548-A1,20181231,US
US-2020219455-A1,20190103,US
US-2019140490-A1,20190104,US
US-2020162083-A1,20190206,US
US-2020256036-A1,20190212,US
US-2019266722-A1,20190213,US
US-2019186352-A1,20190222,US
US-2019184983-A1,20190225,US
US-2019265940-A1,20190228,US
US-2019296705-A1,20190307,US
US-2019277596-A1,20190308,US
US-2020293837-A1,20190312,US
US-2020047478-A1,20170511,US
US-2019301055-A1,20170602,US
US-2019304293-A1,20170524,US
US-2021029410-A1,20171019,US
US-2020138080-A1,20170804,US
US-2019183882-A1,20170328,US
US-2021224349-A1,20180412,US
US-2019284914-A1,20160923,US
US-2019273673-A1,20170825,US
US-2019174987-A1,20170720,US
US-2020025859-A1,20170922,US
US-2020039338-A1,20171012,US
US-2020267544-A1,20181220,US
US-2019284481-A1,20190315,US
US-2020063461-A1,20190316,US
US-2019218174-A1,20190320,US
US-2019296557-A1,20190320,US
US-2020245155-A1,20190321,US
US-2019228033-A1,20190401,US
US-2020320541-A1,20190405,US
US-2020319217-A1,20190408,US
US-2019319270-A1,20190411,US
US-2019246274-A1,20190416,US
US-2019333785-A1,20190425,US
US-2019334273-A1,20190429,US
US-2019253802-A1,20190429,US
US-2019261271-A1,20190430,US
US-2019263549-A1,20190507,US
US-2019349965-A1,20190507,US
US-2019267545-A1,20190507,US
US-2019371543-A1,20190509,US
US-2019268910-A1,20190514,
Query:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(pub.publication_date_parsed) AS "Year",
        MONTH(pub.publication_date_parsed) AS "Month_num",
        COUNT(DISTINCT pub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."publication_date"::VARCHAR, 'YYYYMMDD') AS publication_date_parsed,
            f.VALUE:"language"::STRING AS "language",
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."publication_date" IS NOT NULL
          AND t."publication_date" <> 0
    ) pub
    WHERE pub.publication_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND pub."language" = 'en'
      AND pub."abstract_text" ILIKE '%internet%of%things%'
      AND pub.publication_date_parsed IS NOT NULL
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Answer:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,0
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,0
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,1
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,0
2017,4,Apr,0
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,2
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,0
2018,3,Mar,0
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
Query:
WITH months AS (
    SELECT
        YEAR(d) AS "Year",
        MONTH(d) AS "Month_num",
        TO_CHAR(d, 'Mon') AS "Month"
    FROM (
        SELECT DATEADD(month, seq4(), '2008-01-01') AS d
        FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
    )
    WHERE d BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
    m."Year",
    m."Month_num",
    m."Month",
    COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
    SELECT
        YEAR(pub.publication_date_parsed) AS "Year",
        MONTH(pub.publication_date_parsed) AS "Month_num",
        COUNT(DISTINCT pub."publication_number") AS "Number_of_filings"
    FROM (
        SELECT
            t."publication_number",
            TRY_TO_DATE(t."publication_date"::VARCHAR, 'YYYYMMDD') AS publication_date_parsed,
            LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
        FROM PATENTS.PATENTS.PUBLICATIONS t,
             LATERAL FLATTEN(input => t."abstract_localized") f
        WHERE t."country_code" = 'US'
          AND t."publication_date" IS NOT NULL
          AND t."publication_date" <> 0
          AND f.VALUE:"text" IS NOT NULL
    ) pub
    WHERE pub.publication_date_parsed BETWEEN '2008-01-01' AND '2022-12-31'
      AND pub."abstract_text" ILIKE '%internet%of%things%'
    GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
Answer:
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,0
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,0
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,1
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,0
2017,4,Apr,0
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,2
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,0
2018,3,Mar,0
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
Query:
SELECT "application_number"
    FROM PATENTS.PATENTS.PUBLICATIONS
    LIMIT 1000;
Answer:
Too long, hard cut:
application_number
CR-5634-A
CR-5990-A
FI-429D-A
HK-6083-A
HU-7590-A
JP-4890-A
JP-6286-A
US-416D-A
US-9948-A
AT-41580-A
AT-47682-A
AT-63682-A
CA-72337-A
CA-75688-A
CA-81627-A
CA-9086D-A
CH-3256D-A
CH-32972-A
CH-59566-A
CH-8494D-A
CH-9587D-A
CH-9968D-A
DD-8297D-A
FR-19873-A
FR-20966-A
FR-56170-A
FR-60658-A
FR-68041-A
FR-70755-A
FR-84394-A
GB-15660-A
GB-50958-A
GB-54729-A
GB-93140-A
HK-39487-A
HK-52284-A
HK-55992-A
HK-60178-A
HK-82486-A
HU-62391-A
JP-42386-A
JP-67093-A
MA-42286-A
OA-58112-A
OA-58887-A
PH-14999-A
PH-21568-A
PH-27280-A
PH-36517-A
TR-25990-A
US-4613D-A
US-59779-A
US-6310D-A
US-8947D-A
YU-24971-A
YU-51397-A
YU-53588-A
YU-94082-A
AT-134275-A
AT-160683-A
AT-168281-A
AT-179178-A
AT-196182-A
AT-202882-A
AT-205780-A
AT-245590-A
AT-250686-A
AT-269985-A
AT-272073-A
AT-312885-A
AT-404675-A
AT-482077-A
AT-519575-A
AT-710279-A
AT-735378-A
AT-876472-A
AT-906278-A
BE-135378-A
BE-137212-A
BE-142905-A
BE-151562-A
BE-153592-A
BE-160369-A
BE-163314-A
BE-163757-A
BE-165719-A
BE-172709-A
BE-176081-A
BE-176682-A
BE-179841-A
BE-182921-A
BE-187407-A
BE-188538-A
BE-189232-A
BE-189327-A
BE-191250-A
BE-192832-A
BE-196360-A
BE-202146-A
BE-509322-A
BE-572409-A
BE-580990-A
BE-582698-A
BE-584260-A
BE-585255-A
BE-590934-A
BE-591142-A
BE-608698-A
BE-614102-A
BE-641112-A
BE-647329-A
BE-696614-A
BE-757718-A
BE-761170-A
BE-773373-A
BE-779552-A
BE-779864-A
BE-782856-A
BE-785081-A
BR-266774-A
CA-100319-A
CA-114242-A
CA-121904-A
CA-121988-A
CA-123686-A
CA-124428-A
CA-137722-A
CA-140905-A
CA-142369-A
CA-150941-A
CA-155884-A
CA-15987D-A
CA-163172-A
CA-167685-A
CA-16913D-A
CA-179842-A
CA-181797-A
CA-182858-A
CA-183905-A
CA-18563D-A
CA-185777-A
CA-187849-A
CA-195878-A
CA-19959D-A
CA-200626-A
CA-200632-A
CA-220092-A
CA-226487-A
CA-231251-A
CA-234212-A
CA-23668D-A
CA-24395D-A
CA-244852-A
CA-253922-A
CA-256110-A
CA-260420-A
CA-262852-A
CA-267803-A
CA-269711-A
CA-270426-A
CA-271567-A
CA-27243D-A
CA-276327-A
CA-28163D-A
CA-28465D-A
CA-286365-A
CA-290147-A
CA-295170-A
CA-29797D-A
CA-300615-A
CA-31628D-A
CA-321126-A
CA-335539-A
CA-336800-A
CA-340009-A
CA-346216-A
CA-347519-A
CA-352834-A
CA-362667-A
CA-36329D-A
CA-366798-A
CA-370439-A
CA-375813-A
CA-378235-A
CA-378978-A
CA-386476-A
CA-394670-A
CA-407653-A
CA-414587-A
CA-414730-A
CA-418289-A
CA-41876D-A
CA-427335-A
CA-427461-A
CA-427794-A
CA-428695-A
CA-429879-A
CA-432684-A
CA-43273D-A
CA-444491-A
CA-453501-A
CA-458035-A
CA-460234-A
CA-462534-A
CA-463864-A
CA-470722-A
CA-478572-A
CA-481428-A
CA-487036-A
CA-491161-A
CA-496400-A
CA-502094-A
CA-522175-A
CA-527800-A
CA-530928-A
CA-578900-A
CA-66947D-A
CA-77867D-A
CA-78404D-A
CA-80097D-A
CA-85483D-A
CA-86404D-A
CA-88876D-A
CA-95029D-A
CH-108762-A
CH-11218D-A
CH-11286D-A
CH-14377D-A
CH-146669-A
CH-15066D-A
CH-15518D-A
CH-16423D-A
CH-16580D-A
CH-19546D-A
CH-21002D-A
CH-224960-A
CH-241264-A
CH-24748D-A
CH-272960-A
CH-284762-A
CH-293961-A
CH-31003D-A
CH-31225D-A
CH-31903D-A
CH-321471-A
CH-357762-A
CH-359672-A
CH-36286D-A
CH-37084D-A
CH-41273D-A
CH-445970-A
CH-44956D-A
CH-452871-A
CH-482967-A
CH-52767D-A
CH-53651D-A
CH-537968-A
CH-557360-A
CH-601062-A
CH-60490D-A
CH-631771-A
CH-642072-A
CH-66893D-A
CH-671466-A
CH-680972-A
CH-698167-A
CH-73219D-A
CH-735769-A
CH-738365-A
CH-757669-A
CH-820568-A
CH-86757D-A
CH-87572D-A
CH-97232D-A
CH-996769-A
CY-127078-A
CY-134580-A
DD-18224D-A
DD-24162D-A
DD-30434D-A
DD-49762D-A
DD-56858D-A
DD-56975D-A
DD-71745D-A
DD-93406D-A
DK-143677-A
DK-220177-A
DK-224175-A
DK-318281-A
DK-388577-A
DK-398577-A
DK-423187-A
DK-540284-A
FI-112342-A
FI-14109D-A
FI-23876D-A
FI-26259D-A
FI-28117D-A
FI-863100-A
FI-890355-A
FR-110705-A
FR-120698-A
FR-816131-A
FR-832290-A
FR-880176-A
FR-901955-A
FR-903002-A
FR-93131D-A
FR-958353-A
FR-958533-A
FR-975009-A
FR-981132-A
FR-990969-A
GB-117637-A
GB-160750-A
GB-218734-A
GB-366624-A
GB-381337-A
GB-409253-A
GB-488243-A
GB-492920-A
GB-511252-A
GB-541062-A
GB-543953-A
GB-585551-A
GB-659563-A
GB-679066-A
GB-682657-A
GB-730644-A
GB-782544-A
GB-810151-A
GB-826660-A
GB-855569-A
GB-986852-A
HU-104293-A
HU-138985-A
HU-152984-A
HU-528388-A
ID-962853-A
ID-972988-A
ID-982004-A
JP-116187-A
JP-149276-A
JP-157181-A
JP-157895-A
JP-167377-A
JP-209686-A
JP-214083-A
JP-240483-A
JP-250496-A
JP-251088-A
JP-268772-A
JP-296398-A
JP-296798-A
JP-317587-A
JP-335383-A
JP-341593-A
JP-348385-A
JP-348994-A
JP-366083-A
JP-367984-A
JP-383695-A
JP-431595-A
JP-438879-A
JP-446382-A
JP-447399-A
JP-516077-A
JP-519086-A
JP-530775-A
JP-536985-A
JP-546172-A
JP-555191-A
JP-570478-A
JP-578074-A
JP-596284-A
JP-596378-A
JP-598382-A
JP-617586-A
JP-649887-A
JP-684594-A
JP-696397-A
JP-732577-A
JP-759076-A
JP-776078-A
JP-803892-A
JP-836372-A
JP-843989-A
JP-854998-A
JP-862494-A
JP-870198-A
JP-870695-A
JP-880893-A
JP-896687-A
JP-908087-A
JP-971281-A
JP-995794-A
LV-980129-A
MX-778683-A
TR-126994-A
US-11025D-A
US-15355D-A
US-155515-A
US-18685D-A
US-20482D-A
US-29111D-A
US-40373D-A
US-40881D-A
US-438787-A
US-47553D-A
US-588893-A
US-622635-A
US-62685D-A
US-63185D-A
US-71077D-A
US-724260-A
US-732748-A
US-82748D-A
US-83171D-A
US-93868D-A
US-952687-A
YU-11077
Query:
SELECT "publication_date",
           TRY_TO_DATE("publication_date"::VARCHAR, 'YYYYMMDD') AS "publication_date_converted"
    FROM PATENTS.PATENTS.PUBLICATIONS
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_date,publication_date_converted
19980507,1998-05-07
19991217,1999-12-17
18920810,1892-08-10
19830217,1983-02-17
19900828,1990-08-28
19910910,1991-09-10
19870715,1987-07-15
18370928,1837-09-28
19501031,1950-10-31
19810215,1981-02-15
19860115,1986-01-15
19860415,1986-04-15
19730213,1973-02-13
19740709,1974-07-09
19730213,1973-02-13
18780805,1878-08-05
18910815,1891-08-15
19731015,1973-10-15
19670415,1967-04-15
18950131,1895-01-31
18950715,1895-07-15
18950915,1895-09-15
0,
19630802,1963-08-02
19660708,1966-07-08
19670324,1967-03-24
19670428,1967-04-28
19670623,1967-06-23
19670707,1967-07-07
19680105,1968-01-05
19620404,1962-04-04
19610802,1961-08-02
19300507,1930-05-07
19410228,1941-02-28
19870529,1987-05-29
19840713,1984-07-13
19920807,1992-08-07
19781020,1978-10-20
19861107,1986-11-07
19920330,1992-03-30
19870713,1987-07-13
19940719,1994-07-19
20180509,2018-05-09
19850331,1985-03-31
19880630,1988-06-30
19780530,1978-05-30
19820927,1982-09-27
19850131,1985-01-31
19891218,1989-12-18
19950315,1995-03-15
18460702,1846-07-02
19801118,1980-11-18
18490410,1849-04-10
18520511,1852-05-11
19810430,1981-04-30
19991122,1999-11-22
19891231,1989-12-31
19820831,1982-08-31
19761115,1976-11-15
19880915,1988-09-15
19860215,1986-02-15
19820715,1982-07-15
19830315,1983-03-15
19840315,1984-03-15
19810515,1981-05-15
19920915,1992-09-15
19880115,1988-01-15
19870115,1987-01-15
19760715,1976-07-15
19880615,1988-06-15
19760315,1976-03-15
19791015,1979-10-15
19780315,1978-03-15
19820915,1982-09-15
19800815,1980-08-15
19750915,1975-09-15
19861015,1986-10-15
19740306,1974-03-06
19740215,1974-02-15
19740731,1974-07-31
19750616,1975-06-16
19750616,1975-06-16
19760116,1976-01-16
19760705,1976-07-05
19760514,1976-05-14
19760716,1976-07-16
19770316,1977-03-16
19770718,1977-07-18
19770801,1977-08-01
19771201,1977-12-01
19780525,1978-05-25
19781106,1978-11-06
19781213,1978-12-13
19790112,1979-01-12
19781116,1978-11-16
19790420,1979-04-20
19790710,1979-07-10
19800118,1980-01-18
19810116,1981-01-16
19520315,1952-03-15
19620629,1962-06-29
19591116,1959-11-16
19591231,1959-12-31
19600301,1960-03-01
19600602,1960-06-02
19601118,1960-11-18
19600916,1960-09-16
19620115,1962-01-15
19620820,1962-08-20
19640611,1964-06-11
19641030,1964-10-30
19670615,1967-06-15
19710401,1971-04-01
19710527,1971-05-27
19720117,1972-01-17
19720818,1972-08-18
19720616,1972-06-16
19720901,1972-09-01
19721219,1972-12-19
19751209,1975-12-09
19730123,1973-01-23
19730220,1973-02-20
19740618,1974-06-18
19740122,1974-01-22
19740806,1974-08-06
19750617,1975-06-17
19741105,1974-11-05
19750318,1975-03-18
19750708,1975-07-08
19750916,1975-09-16
19750701,1975-07-01
18821218,1882-12-18
19770118,1977-01-18
19761019,1976-10-19
18830614,1883-06-14
19770517,1977-05-17
19770405,1977-04-05
19770125,1977-01-25
19770412,1977-04-12
18840125,1884-01-25
19760817,1976-08-17
19770301,1977-03-01
19770705,1977-07-05
18840809,1884-08-09
19780418,1978-04-18
19770419,1977-04-19
19790306,1979-03-06
19790102,1979-01-02
19790724,1979-07-24
19780110,1978-01-10
18860327,1886-03-27
18860628,1886-06-28
19770308,1977-03-08
19810210,1981-02-10
19790313,1979-03-13
19790501,1979-05-01
19790123,1979-01-23
19800909,1980-09-09
19800902,1980-09-02
19791127,1979-11-27
19810217,1981-02-17
18870723,1887-07-23
19801104,1980-11-04
18871209,1887-12-09
18880204,1888-02-04
19801021,1980-10-21
19800226,1980-02-26
19811215,1981-12-15
18880901,1888-09-01
19810324,1981-03-24
18890619,1889-06-19
19801230,1980-12-30
19831025,1983-10-25
19820420,1982-04-20
19830111,1983-01-11
19830712,1983-07-12
19811020,1981-10-20
19830426,1983-04-26
19820622,1982-06-22
18910404,1891-04-04
19821116,1982-11-16
19830927,1983-09-27
19840131,1984-01-31
19841016,1984-10-16
19841120,1984-11-20
19840228,1984-02-28
19850625,1985-06-25
19850514,1985-05-14
19860729,1986-07-29
19851008,1985-10-08
19850430,1985-04-30
18930208,1893-02-08
19860930,1986-09-30
19850806,1985-08-06
19851203,1985-12-03
19870113,1987-01-13
19860520,1986-05-20
19870707,1987-07-07
18930620,1893-06-20
19860624,1986-06-24
19871201,1987-12-01
19880315,1988-03-15
19870317,1987-03-17
19871020,1987-10-20
19880913,1988-09-13
19860805,1986-08-05
19891121,1989-11-21
19880524,1988-05-24
19871006,1987-10-06
19890411,1989-04-11
19900313,1990-03-13
19880906,1988-09-06
19900925,1990-09-25
19891205,1989-12-05
19900703,1990-07-03
19891024,1989-10-24
19000406,1900-04-06
19021021,1902-10-21
19021202,1902-12-02
19030407,1903-04-07
19040216,1904-02-16
19040412,1904-04-12
19040823,1904-08-23
19050912,1905-09-12
19640531,1964-05-31
18960715,1896-07-15
18960615,1896-06-15
18971115,1897-11-15
19710228,1971-02-28
18980331,1898-03-31
18980615,1898-06-15
18981130,1898-11-30
18981231,1898-12-31
19000731,1900-07-31
19010515,1901-05-15
19630629,1963-06-29
19660115,1966-01-15
19030215,1903-02-15
19640615,1964-06-15
19651115,1965-11-15
19650131,1965-01-31
19050228,1905-02-28
19050315,1905-03-15
19050531,1905-05-31
19720131,1972-01-31
19650731,1965-07-31
19731115,1973-11-15
19061215,1906-12-15
19070415,1907
End Exploring Related Columns
Task: How many U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') were filed each month from 2008 to 2022, including months with no filings?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: To determine the number of U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') filed each month from 2008 to 2022, including months with no filings, we would query the `PUBLICATIONS` table with the following conditions:
- `country_code` is 'US'
- `filing_date` between 2008 and 2022
- `abstract_localized` contains the phrase 'internet of things'

We would then group the results by the year and month of the `filing_date`, ensuring that months with zero filings are included.

```csv
Year,Month_num,Month,Number_of_filings
2008,01,Jan,num:int
2008,02,Feb,num:int
...
2022,12,Dec,num:int
(Attention: includes months with zero filings)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-18 20:15:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:15:25 - root - INFO - To determine the number of U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') filed each month from 2008 to 2022, including months with no filings, you can use the following SQL query:

```sql
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(month, seq4(), '2008-01-01') AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
  )
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```

This query performs the following steps:

- **Generates a list of all months** from January 2008 to December 2022 using the `months` common table expression (CTE).
- **Extracts and filters publication data** where:
  - The `country_code` is 'US'.
  - The `filing_date` is between January 1, 2008, and December 31, 2022.
  - The `abstract_localized` field contains the phrase 'internet of things' (case-insensitive).
- **Flattens the `abstract_localized` VARIANT column** to extract the abstract text.
- **Aggregates the count of unique publication numbers** grouped by year and month.
- **Left joins** the aggregated data with the list of months to include months with zero filings.
- **Orders the results** by year and month.

The output will include the year, month number, month name, and the number of filings for each month, including months with zero filings.
2025-01-18 20:15:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:15:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:15:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:15:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 180
2025-01-18 20:15:27 - snowflake.connector.connection - INFO - closed
2025-01-18 20:15:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:15:27 - root - INFO - itercount: 1
2025-01-18 20:15:27 - root - INFO - 0
2025-01-18 20:15:27 - root - INFO - results: 
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,2
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
2023,12,Dec,0
2029,4,Apr,0
2034,8,Aug,0
2039,12,Dec,0
2045,4,Apr,0
2050,8,Aug,0
2055,12,Dec,0
2061,4,Apr,0
2066,8,Aug,0
2071,12,Dec,0
2077,4,Apr,0
2082,8,Aug,0
2087,12,Dec,0
2093,4,Apr,0
2098,8,Aug,0
2103,12,Dec,0
2109,4,Apr,0
2114,8,Aug,0
2119,12,Dec,0
2125,4,Apr,0
2130,8,Aug,0
2135,12,Dec,0
2141,4,Apr,0
2146,8,Aug,0
2151,12,Dec,0
2157,4,Apr,0
2162,8,Aug,0
2167,12,Dec,0
2173,4,Apr,0
2178,8,Aug,0
2183,12,Dec,0
2189,4,Apr,0
2194,8,Aug,0
2199,12,Dec,0
2205,4,Apr,0
2210,8,Aug,0
2215,12,Dec,0
2221,4,Apr,0
2226,8,Aug,0
2231,12,Dec,0
2237,4,Apr,0
2242,8,Aug,0
2247,12,Dec,0
2253,4,Apr,0
2258,8,Aug,0
2263,12,Dec,0
2269,4,Apr,0
2274,8,Aug,0
2279,12,Dec,0
2285,4,Apr,0
2290,8,Aug,0
2295,12,Dec,0


2025-01-18 20:15:27 - root - INFO - Please check the answer again by reviewing How many U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') were filed each month from 2008 to 2022, including months with no filings?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the number of U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') filed each month from 2008 to 2022, including months with no filings, we would query the `PUBLICATIONS` table with the following conditions:
- `country_code` is 'US'
- `filing_date` between 2008 and 2022
- `abstract_localized` contains the phrase 'internet of things'

We would then group the results by the year and month of the `filing_date`, ensuring that months with zero filings are included.

```csv
Year,Month_num,Month,Number_of_filings
2008,01,Jan,num:int
2008,02,Feb,num:int
...
2022,12,Dec,num:int
(Attention: includes months with zero filings)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,2
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
2023,12,Dec,0
2029,4,Apr,0
2034,8,Aug,0
2039,12,Dec,0
2045,4,Apr,0
2050,8,Aug,0
2055,12,Dec,0
2061,4,Apr,0
2066,8,Aug,0
2071,12,Dec,0
2077,4,Apr,0
2082,8,Aug,0
2087,12,Dec,0
2093,4,Apr,0
2098,8,Aug,0
2103,12,Dec,0
2109,4,Apr,0
2114,8,Aug,0
2119,12,Dec,0
2125,4,Apr,0
2130,8,Aug,0
2135,12,Dec,0
2141,4,Apr,0
2146,8,Aug,0
2151,12,Dec,0
2157,4,Apr,0
2162,8,Aug,0
2167,12,Dec,0
2173,4,Apr,0
2178,8,Aug,0
2183,12,Dec,0
2189,4,Apr,0
2194,8,Aug,0
2199,12,Dec,0
2205,4,Apr,0
2210,8,Aug,0
2215,12,Dec,0
2221,4,Apr,0
2226,8,Aug,0
2231,12,Dec,0
2237,4,Apr,0
2242,8,Aug,0
2247,12,Dec,0
2253,4,Apr,0
2258,8,Aug,0
2263,12,Dec,0
2269,4,Apr,0
2274,8,Aug,0
2279,12,Dec,0
2285,4,Apr,0
2290,8,Aug,0
2295,12,Dec,0
Current sql:
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(month, seq4(), '2008-01-01') AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => ((2022 - 2008 + 1) * 12)))
  )
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";Be careful of using GENERATOR. Don't use seq4(), use ROW_NUMBER().

2025-01-18 20:16:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:16:26 - root - INFO - To determine the number of U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') filed each month from 2008 to 2022, including months with no filings, we would query the `PUBLICATIONS` table with the following conditions:

- `country_code` is 'US'
- `filing_date` between 2008 and 2022
- `abstract_localized` contains the phrase 'internet of things'

We would then group the results by the year and month of the `filing_date`, ensuring that months with zero filings are included.

Here is the SQL query:

```sql
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(
             month, 
             ROW_NUMBER() OVER (ORDER BY NULL) - 1, 
             '2008-01-01'
           ) AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => 180))
  )
  WHERE date_column BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```

This query performs the following steps:

- **Generates a list of all months** from January 2008 to December 2022 using the `months` Common Table Expression (CTE), ensuring that no extra months are included beyond 2022.
  
- **Extracts and filters publication data** where:
  - The `"country_code"` is `'US'`.
  - The `"filing_date"` is between January 1, 2008, and December 31, 2022.
  - The `"abstract_localized"` field contains the phrase `'internet of things'` (case-insensitive).

- **Flattens the `"abstract_localized"` `VARIANT` column** to extract the abstract text using `LATERAL FLATTEN`.

- **Converts the `filing_date` to a date format** using `TRY_TO_DATE`.

- **Aggregates the count of unique publication numbers** grouped by year and month.

- **Left joins** the aggregated data with the list of months to include months with zero filings.

- **Orders the results** by year and month.

**Note:** This query avoids using `seq4()` in the `GENERATOR` function and uses `ROW_NUMBER()` instead, as per your request.

**Output Format:**

The result will be in the following format, including months with zero filings:

```csv
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
...
2022,12,Dec,0
```

**Important Considerations:**

- Ensure that all column names are enclosed in double quotations `"column_name"` as per SQL standards.
- The `LIKE` operator is used for pattern matching; since Snowflake's `LIKE` is case-insensitive by default, it's suitable for this context.
- The `COALESCE` function is used to replace `NULL` values with `0` for months with no filings.
- The `TRY_TO_DATE` function safely attempts to convert the `filing_date` to a date, avoiding errors if the format is unexpected.
- The `LATERAL FLATTEN` is necessary to extract the text from the `abstract_localized` `VARIANT` column.

This query will provide the number of U.S. publications related to IoT filed each month from 2008 to 2022, including months with zero filings.
2025-01-18 20:16:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:16:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:16:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:16:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 180
2025-01-18 20:16:27 - snowflake.connector.connection - INFO - closed
2025-01-18 20:16:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:16:28 - root - INFO - itercount: 2
2025-01-18 20:16:28 - root - INFO - 0
2025-01-18 20:16:28 - root - INFO - results: 
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,2
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
2018,9,Sep,0
2018,10,Oct,0
2018,11,Nov,1
2018,12,Dec,0
2019,1,Jan,0
2019,2,Feb,0
2019,3,Mar,0
2019,4,Apr,0
2019,5,May,0
2019,6,Jun,0
2019,7,Jul,0
2019,8,Aug,1
2019,9,Sep,2
2019,10,Oct,0
2019,11,Nov,1
2019,12,Dec,0
2020,1,Jan,0
2020,2,Feb,1
2020,3,Mar,0
2020,4,Apr,2
2020,5,May,0
2020,6,Jun,2
2020,7,Jul,1
2020,8,Aug,0
2020,9,Sep,0
2020,10,Oct,0
2020,11,Nov,1
2020,12,Dec,0
2021,1,Jan,0
2021,2,Feb,0
2021,3,Mar,0
2021,4,Apr,0
2021,5,May,0
2021,6,Jun,0
2021,7,Jul,1
2021,8,Aug,0
2021,9,Sep,0
2021,10,Oct,0
2021,11,Nov,1
2021,12,Dec,0
2022,1,Jan,0
2022,2,Feb,0
2022,3,Mar,1
2022,4,Apr,0
2022,5,May,0
2022,6,Jun,0
2022,7,Jul,0
2022,8,Aug,0
2022,9,Sep,1
2022,10,Oct,0
2022,11,Nov,0
2022,12,Dec,1


2025-01-18 20:16:28 - root - INFO - Please check the answer again by reviewing How many U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') were filed each month from 2008 to 2022, including months with no filings?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the number of U.S. publications related to IoT (where the abstract includes the phrase 'internet of things') filed each month from 2008 to 2022, including months with no filings, we would query the `PUBLICATIONS` table with the following conditions:
- `country_code` is 'US'
- `filing_date` between 2008 and 2022
- `abstract_localized` contains the phrase 'internet of things'

We would then group the results by the year and month of the `filing_date`, ensuring that months with zero filings are included.

```csv
Year,Month_num,Month,Number_of_filings
2008,01,Jan,num:int
2008,02,Feb,num:int
...
2022,12,Dec,num:int
(Attention: includes months with zero filings)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Month_num,Month,Number_of_filings
2008,1,Jan,0
2008,2,Feb,0
2008,3,Mar,0
2008,4,Apr,0
2008,5,May,0
2008,6,Jun,0
2008,7,Jul,0
2008,8,Aug,0
2008,9,Sep,0
2008,10,Oct,0
2008,11,Nov,0
2008,12,Dec,0
2009,1,Jan,0
2009,2,Feb,0
2009,3,Mar,0
2009,4,Apr,0
2009,5,May,0
2009,6,Jun,0
2009,7,Jul,0
2009,8,Aug,0
2009,9,Sep,0
2009,10,Oct,0
2009,11,Nov,0
2009,12,Dec,0
2010,1,Jan,0
2010,2,Feb,0
2010,3,Mar,0
2010,4,Apr,0
2010,5,May,0
2010,6,Jun,0
2010,7,Jul,0
2010,8,Aug,0
2010,9,Sep,0
2010,10,Oct,0
2010,11,Nov,0
2010,12,Dec,0
2011,1,Jan,0
2011,2,Feb,0
2011,3,Mar,0
2011,4,Apr,0
2011,5,May,0
2011,6,Jun,0
2011,7,Jul,0
2011,8,Aug,0
2011,9,Sep,0
2011,10,Oct,0
2011,11,Nov,0
2011,12,Dec,0
2012,1,Jan,0
2012,2,Feb,0
2012,3,Mar,0
2012,4,Apr,0
2012,5,May,0
2012,6,Jun,0
2012,7,Jul,0
2012,8,Aug,0
2012,9,Sep,0
2012,10,Oct,0
2012,11,Nov,0
2012,12,Dec,0
2013,1,Jan,0
2013,2,Feb,0
2013,3,Mar,0
2013,4,Apr,0
2013,5,May,0
2013,6,Jun,0
2013,7,Jul,0
2013,8,Aug,0
2013,9,Sep,0
2013,10,Oct,0
2013,11,Nov,0
2013,12,Dec,0
2014,1,Jan,0
2014,2,Feb,0
2014,3,Mar,0
2014,4,Apr,0
2014,5,May,0
2014,6,Jun,0
2014,7,Jul,0
2014,8,Aug,0
2014,9,Sep,0
2014,10,Oct,0
2014,11,Nov,0
2014,12,Dec,0
2015,1,Jan,0
2015,2,Feb,0
2015,3,Mar,0
2015,4,Apr,1
2015,5,May,0
2015,6,Jun,0
2015,7,Jul,0
2015,8,Aug,0
2015,9,Sep,0
2015,10,Oct,0
2015,11,Nov,0
2015,12,Dec,1
2016,1,Jan,0
2016,2,Feb,0
2016,3,Mar,0
2016,4,Apr,0
2016,5,May,0
2016,6,Jun,0
2016,7,Jul,0
2016,8,Aug,0
2016,9,Sep,0
2016,10,Oct,0
2016,11,Nov,0
2016,12,Dec,0
2017,1,Jan,0
2017,2,Feb,0
2017,3,Mar,1
2017,4,Apr,2
2017,5,May,0
2017,6,Jun,0
2017,7,Jul,0
2017,8,Aug,0
2017,9,Sep,0
2017,10,Oct,0
2017,11,Nov,0
2017,12,Dec,0
2018,1,Jan,0
2018,2,Feb,1
2018,3,Mar,1
2018,4,Apr,1
2018,5,May,0
2018,6,Jun,0
2018,7,Jul,0
2018,8,Aug,0
2018,9,Sep,0
2018,10,Oct,0
2018,11,Nov,1
2018,12,Dec,0
2019,1,Jan,0
2019,2,Feb,0
2019,3,Mar,0
2019,4,Apr,0
2019,5,May,0
2019,6,Jun,0
2019,7,Jul,0
2019,8,Aug,1
2019,9,Sep,2
2019,10,Oct,0
2019,11,Nov,1
2019,12,Dec,0
2020,1,Jan,0
2020,2,Feb,1
2020,3,Mar,0
2020,4,Apr,2
2020,5,May,0
2020,6,Jun,2
2020,7,Jul,1
2020,8,Aug,0
2020,9,Sep,0
2020,10,Oct,0
2020,11,Nov,1
2020,12,Dec,0
2021,1,Jan,0
2021,2,Feb,0
2021,3,Mar,0
2021,4,Apr,0
2021,5,May,0
2021,6,Jun,0
2021,7,Jul,1
2021,8,Aug,0
2021,9,Sep,0
2021,10,Oct,0
2021,11,Nov,1
2021,12,Dec,0
2022,1,Jan,0
2022,2,Feb,0
2022,3,Mar,1
2022,4,Apr,0
2022,5,May,0
2022,6,Jun,0
2022,7,Jul,0
2022,8,Aug,0
2022,9,Sep,1
2022,10,Oct,0
2022,11,Nov,0
2022,12,Dec,1
Current sql:
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(
             month, 
             ROW_NUMBER() OVER (ORDER BY NULL) - 1, 
             '2008-01-01'
           ) AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => 180))
  )
  WHERE date_column BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";Be careful of using GENERATOR. Don't use seq4(), use ROW_NUMBER().

2025-01-18 20:17:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:17:21 - root - INFO - ```sql
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(
             month, 
             ROW_NUMBER() OVER (ORDER BY NULL) - 1, 
             '2008-01-01'
           ) AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => DATEDIFF(month, '2008-01-01', '2022-12-31') + 1))
  )
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:17:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:17:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:17:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:17:22 - snowflake.connector.connection - INFO - closed
2025-01-18 20:17:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:17:22 - root - INFO - itercount: 3
2025-01-18 20:17:22 - root - INFO - 001015 (22023): 01b9cd01-0004-7b17-0001-11c300ee8896: SQL compilation error:
argument 1 to function GENERATOR needs to be constant, found '(CAST(DATE_DIFFTIMESTAMPINMONTHS('2008-01-01 00:00:00.000000000Z', '2022-12-31 00:00:00.000000000Z') AS NUMBER(9,0))) + 1'
2025-01-18 20:17:22 - root - INFO - Input sql:
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(
             month, 
             ROW_NUMBER() OVER (ORDER BY NULL) - 1, 
             '2008-01-01'
           ) AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => DATEDIFF(month, '2008-01-01', '2022-12-31') + 1))
  )
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
The error information is:
001015 (22023): 01b9cd01-0004-7b17-0001-11c300ee8896: SQL compilation error:
argument 1 to function GENERATOR needs to be constant, found '(CAST(DATE_DIFFTIMESTAMPINMONTHS('2008-01-01 00:00:00.000000000Z', '2022-12-31 00:00:00.000000000Z') AS NUMBER(9,0))) + 1'
Please correct it and output only 1 complete SQL query.Be careful of using GENERATOR. Don't use seq4(), use ROW_NUMBER().

2025-01-18 20:17:52 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 20:17:52 - root - INFO - ```sql
WITH months AS (
  SELECT
    YEAR(date_column) AS "Year",
    MONTH(date_column) AS "Month_num",
    TO_CHAR(date_column, 'Mon') AS "Month"
  FROM (
    SELECT DATEADD(
             month, 
             ROW_NUMBER() OVER (ORDER BY NULL) - 1, 
             '2008-01-01'::DATE
           ) AS date_column
    FROM TABLE(GENERATOR(ROWCOUNT => 180))
  )
  WHERE date_column BETWEEN '2008-01-01' AND '2022-12-31'
)
SELECT
  m."Year",
  m."Month_num",
  m."Month",
  COALESCE(f."Number_of_filings", 0) AS "Number_of_filings"
FROM months m
LEFT JOIN (
  SELECT
    YEAR(fd."filing_date") AS "Year",
    MONTH(fd."filing_date") AS "Month_num",
    COUNT(DISTINCT fd."publication_number") AS "Number_of_filings"
  FROM (
    SELECT
      t."publication_number",
      TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
      LOWER(f.VALUE:"text"::STRING) AS "abstract_text"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."abstract_localized") f
    WHERE t."country_code" = 'US'
      AND t."filing_date" IS NOT NULL
      AND t."filing_date" <> 0
      AND TRY_TO_DATE(t."filing_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2008-01-01' AND '2022-12-31'
      AND f.VALUE:"text" IS NOT NULL
  ) fd
  WHERE fd."abstract_text" LIKE '%internet of things%'
  GROUP BY 1, 2
) f
ON m."Year" = f."Year" AND m."Month_num" = f."Month_num"
ORDER BY m."Year", m."Month_num";
```
2025-01-18 20:17:52 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 20:17:52 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 20:17:52 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 20:17:54 - snowflake.connector.cursor - INFO - Number of results in first chunk: 180
2025-01-18 20:17:54 - snowflake.connector.connection - INFO - closed
2025-01-18 20:17:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 20:17:54 - root - INFO - itercount: 4
2025-01-18 20:17:54 - root - INFO - 0
2025-01-18 20:17:54 - root - INFO - Total iteration counts: 4
