2025-01-19 04:33:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 04:34:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 04:34:14 - root - INFO - SQL:
-- 1. Get distinct years from Citi Bike trips to confirm available data years
SELECT DISTINCT EXTRACT(YEAR FROM `starttime`) AS year
FROM `bigquery-public-data.new_york.citibike_trips`
LIMIT 1000;
Results:
year
2013
2014
2015
2016

2025-01-19 04:34:17 - root - INFO - SQL:
-- 2. List the top 20 most frequent Citi Bike routes in 2016
SELECT `start_station_name`, `end_station_name`, COUNT(*) AS trip_count
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
GROUP BY `start_station_name`, `end_station_name`
ORDER BY trip_count DESC
LIMIT 20;
Results:
start_station_name,end_station_name,trip_count
Central Park S & 6 Ave,Central Park S & 6 Ave,8699
Central Park S & 6 Ave,5 Ave & E 78 St,5290
12 Ave & W 40 St,West St & Chambers St,4039
Centre St & Chambers St,Centre St & Chambers St,3906
Pershing Square North,W 33 St & 7 Ave,3559
Pershing Square North,W 41 St & 8 Ave,3486
W 21 St & 6 Ave,9 Ave & W 22 St,3414
Central Park S & 6 Ave,5 Ave & E 73 St,3395
E 85 St & York Ave,E 85 St & 3 Ave,3293
Yankee Ferry Terminal,Yankee Ferry Terminal,3233
Soissons Landing,Yankee Ferry Terminal,3196
Yankee Ferry Terminal,Soissons Landing,3164
N 6 St & Bedford Ave,Wythe Ave & Metropolitan Ave,3145
Pershing Square North,E 24 St & Park Ave S,3139
Pershing Square North,Broadway & W 32 St,3116
West St & Chambers St,12 Ave & W 40 St,3092
W 21 St & 6 Ave,W 22 St & 10 Ave,3059
Central Park S & 6 Ave,Central Park West & W 72 St,3033
Central Park West & W 85 St,Central Park S & 6 Ave,2961
Grand Army Plaza & Central Park S,Grand Army Plaza & Central Park S,2915

2025-01-19 04:34:18 - root - INFO - SQL:
-- 3. Sample Citi Bike trip durations in 2016
SELECT `tripduration`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Results:
tripduration
1819
1024
2352
605
650
2532
4071
1336
1281
374
722
324
1233
1299
724
552
907
4942
474
2365
424
548
524
662
404
486
628
373
396
468
418
4407
2565
2265
248
3672
133
137
1620
778
404
175
1006
171
800
1396
2177
938
1308
238
276
995
282
337
297
1194
313
186
302
546
350
584
2472
2329
105
45140
111
117
698
106
100
126
103
111
97
150
701
196
146
104
87
96
93
113
1641
786
1556
604
229
104
137
508
10235
1925
1004
1070
1955
934
870
1492
1434
876
1209
544
598
540
1607
1389
1716
3756
1036
2101
1754
992
1646
1277
497
445
681
866
628
503
606
682
553
1796
1257
1735
870
1931
681
606
487
437
716
412
430
667
299
331
372
351
313
776
1487
380
333
160
215
825
843
2026
624
818
876
672
1146
696
557
2438
1346
550
360
1148
535
1149
549
956
407
321
1705
350
356
1981
693
449
324
426
1700
477
550
775
527
559
389
320
1281
1370
1209
1050
1051
727
3323
768
1020
1833
1161
999
651
739
489
711
597
1395
1805
491
296
281
283
1323
309
838
1014
734
1148
816
1473
1457
816
588
1448
1152
308
332
387
900
1760
445
388
394
294
586
501
407
327
873
663
2016
252
234
420
168
155
174
294
1596
1676
630
1531
1189
2687
2124
946
336
336
242
329
575
1102
345
538
576
345
421
283
1864
724
1051
650
1434
677
1265
999
1248
635
756
1004
1051
1333
1106
227
193
239
792
1048
607
3448
1205
288
646
702
923
853
1316
1181
465
622
452
309
591
1390
1403
3926
277
29044
526
624
399
1215
548
1102
466
1451
594
1922
1728
997
1960
2305
673
766
1358
657
393
734
241
252
339
645
492
619
428
2075
1248
946
1292
1122
941
623
774
2658
835
2394
598
719
171
257
159
205
390
551
521
1104
569
239
322
676
1115
1393
1390
297
354
345
4159
700
1710
1111
417
768
601
445
354
627
458
825
395
623
338
467
879
624
598
634
342
419
1884
755
1329
957
1082
1402
314
254
2730
1878
687
799
1743
1285
862
1023
643
827
1684
1187
283
376
654
1372
912
709
202
206
305
293
522
440
1042
156
2142
922
1017
859
751
1342
868
691
815
1230
760
787
866
940
1422
497
741
722
1090
459
1614
373
394
726
609
782
450
584
2240
1950
586
376
436
995
1780
1619
301
974
676
1325
1805
818
969
1372
1219
1457
684
577
670
524
555
534
485
435
478
438
548
551
487
913
570
685
591
405
62
1735
125
986
156
544
612
1656
152
158
438
124
2515
866
1006
218
371
162
1458
507
1107
923
924
415
296
280
664
595
464
1160
1067
429
346
1264
610
1794
541
312
23277
1133
697
1902
852
133
2101
275
274
1742
566
821
1076
836
766
1114
852
972
1306
334
428
857
612
603
851
651
795
480
700
1057
681
608
599
1566
684
616
598
773
374
426
318
368
378
339
722
2143
713
815
1712
612
2289
991
404
595
2192
769
662
859
805
823
918
721
1718
1923
1715
2427
898
1947
713
265
255
432
1119
909
537
729
799
680
2078
584
774
914
913
526
743
1392
835
773
894
447
1056
682
485
1205
1019
1576
2585
1177
1185
986
915
278
239
358
1587
1591
904
1573
1505
684
787
555
849
264
785
910
1138
1092
669
1247
1708
789
1241
496
657
639
1194
2444
413
237
381
731
2730
904
884
236
246
877
546
595
601
533
785
1335
1888
1335
319
315
2007
1029
1090
1562
217
398
241
1030
1329
809
1280
966
870
1298
329
351
348
407
435
808
2224
583
1705
1120
250
98
428
918
729
811
860
403
466
436
590
604
430
474
322
347
395
395
1211
1249
854
1118
979
1586
1441
1399
935
1367
1790
1149
550
391
322
321
560
346
339
422
326
1410
471
694
604
2183
777
1273
656
386
578
272
992
476
574
788
737
450
1110
671
717
1644
992
1455
269
734
837
709
932
952
531
1481
1037
628
1483
1141
1262
1667
791
613
643
413
315
719
587
603
420
1242
1145
1134
2320
1708
993
2090
1333
987
971
1221
1232
1604
1915
335
496
299
298
248
874
199
196
1483
2003
1118
726
808
729
863
1361
560
516
1610
636
1016
1894
749
547
443
2315
434
324
2083
255
378
842
1245
481
738
640
612
507
525
588
714
1143
768
1281
1559
1228
616
606
594
36254
1013
666
603
584
288
285
411
276
931
793
607
529
411
2046
899
749
567
665
1070
1800
8171
656
152
1844
739
346
520
758
1028
550
307
130
336
142
1560
204
534
2992
1257
1505
410
473
496
428
1766
1286
540
694
736
521
442
590
344
407
402
490
356
1095
413
653
731
407
368
26248
451
364
1740
589
407
2421
346
339
309
369
339
261
394
281
363
278
365
223
349
348
347
361
364
385
234
557
280
389
325
365
352
440
541
369
277
358
276
463
429
656
328
743
2047
1453
12762
722
846
226
269
185
250
2590
269
995
2159
419
352
262
894
636
478
543
1104
519
286
744
851
1370
1132
590
646
617
687
400
219
266
272
245
217
236
250
257
1432
1531
1582
202
536
1029
482
443
428
419
580
381

2025-01-19 04:34:21 - root - INFO - SQL:
-- 4. Get distinct start station names from Citi Bike trips in 2016
SELECT DISTINCT `start_station_name`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
start_station_name
Grand Army Plaza & Plaza St West
Franklin Ave & Myrtle Ave
Liberty St & Broadway
Driggs Ave & Lorimer St
W 45 St & 6 Ave
Watts St & Greenwich St
E 12 St & 3 Ave
Broadway & W 53 St
Lispenard St & Broadway
W 27 St & 10 Ave
W 37 St & 10 Ave
Central Park West & W 100 St
E 109 St & 3 Ave
Forsyth St & Broome St
E 16 St & Irving Pl
W 52 St & 9 Ave
Devoe St & Leonard St
Nassau Ave & Newell St
Throop Ave & Myrtle Ave
E 60 St & York Ave
Cliff St & Fulton St
Mott St & Prince St
E 89 St & 3 Ave
Fulton St & Broadway
Lafayette Ave & Classon Ave
Murray St & West St
E 77 St & 3 Ave
W 18 St & 6 Ave
E 31 St & 3 Ave
Clinton St & Joralemon St
Columbia St & W 9 St
Metropolitan Ave & Bedford Ave
Prospect Park West & 8 St
Grand Army Plaza & Central Park S
Front St & Washington St
Clark St & Henry St
Greenwich St & North Moore St
Central Park W & W 96 St
St Marks Pl & 2 Ave
31 St & Thomson Ave
S Portland Ave & Hanson Pl
E 84 St & 1 Ave
E 20 St & 2 Ave
Huron St & Franklin St
PABT Valet
E 51 St & 1 Ave
9 Ave & W 28 St
Clinton St & Grand St
8 Ave & W 31 St
E 39 St & 3 Ave
Suffolk St & Stanton St
E 68 St & 3 Ave
E 51 St & Lexington Ave
10 St & 5 Ave
W 34 St & 11 Ave
Central Park S & 6 Ave
Amsterdam Ave & W 79 St
W 56 St & 6 Ave
Greene Ave & Throop Ave
W 78 St & Broadway
Carroll St & Bond St
N 6 St & Bedford Ave
Johnson St & Gold St
W 76 St & Columbus Ave
5 Ave & E 88 St
9 St & 44 Rd
Riverside Blvd & W 67 St
3 St & 3 Ave
Stanton St & Chrystie St
E 48 St & 5 Ave
Boerum St & Broadway
E 9 St & Avenue C
E 95 St & 3 Ave
Rivington St & Ridge St
W 53 St & 10 Ave
E 2 St & Avenue B
Fulton St & Utica Ave
South St & Gouverneur Ln
Broadway & W 58 St
E 103 St & Lexington Ave
E 25 St & 2 Ave
Peck Slip & Front St
W 89 St & Columbus Ave
Leonard St & Bayard St
W 84 St & Columbus Ave
Park Ave & St Edwards St
Queens Plaza North & Crescent St
Cadman Plaza W & Pierrepont St
1 Ave & E 18 St
Little West St & 1 Pl
W 52 St & 11 Ave
Henry St & Bay St
Monroe St & Classon Ave
Leonard St & Church St
W 20 St & 7 Ave
5 Ave & E 63 St
E 97 St & 3 Ave
Broadway & W 29 St
E 102 St & 1 Ave
Shevchenko Pl & E 7 St
E 77 St & Park Ave
Amsterdam Ave & W 82 St
E 40 St & Madison Ave
Pier 40 - Hudson River Park
11 Ave & W 59 St
Leonard St & Grand St
Centre St & Worth St
45 Rd & 11 St
Court St & State St
Commerce St & Van Brunt St
W 43 St & 6 Ave
Catherine St & Monroe St
E 91 St & Park Ave
W 42 St & 8 Ave
5 Ave & E 29 St
5 Ave & E 93 St
9 Ave & W 16 St
Cherry St
Humboldt St & Varet St
E 6 St & Avenue D
Grand St & Elizabeth St
W 15 St & 7 Ave
Avenue D & E 12 St
Roebling St & N 4 St
Cambridge Pl & Gates Ave
W 24 St & 7 Ave
Carroll St & Columbia St
DeKalb Ave & S Portland Ave
Richards St & Delavan St
E 71 St & 2 Ave
Railroad Ave & Kay Ave
Bike The Branches - Red Hook Branch
N 11 St & Wythe Ave
E 72 St & Park Ave
Adventures NYC
Meserole Ave & Manhattan Ave
Great Jones St
Bike The Branches - Central Branch
8 Ave & W 31 St N
W 92 St & Broadway
West St & Chambers St
E 61 St & Park Ave
Sullivan St & Washington Sq
Dean St & Hoyt St
W 90 St & Amsterdam Ave
E 75 St & 3 Ave
NYCBS Depot - SSP
Old Slip & Front St
West End Ave & W 107 St
Greenwich St & N Moore St
University Pl & E 8 St
W 4 St & 7 Ave S
Hudson St & Reade St
3 St & 7 Ave
9 Ave & W 18 St
Carlton Ave & Park Ave
Broadway & W 24 St
Van Brunt St & Wolcott St
MacDougal St & Washington Sq
Norfolk St & Broome St
Pioneer St & Richards St
Leonard St & Boerum St
Riverside Dr & W 104 St
Pearl St & Hanover Square
W 13 St & Hudson St
Macon St & Nostrand Ave
47 Ave & 31 St
48 Ave & 5 St
Clinton Ave & Myrtle Ave
Washington Park
Old Fulton St
Scholes St & Manhattan Ave
W 49 St & 8 Ave
E 30 St & Park Ave S
Union Ave & Wallabout St
E 89 St & York Ave
E 43 St & 2 Ave
E 47 St & Park Ave
Greenpoint Ave & Manhattan Ave
Centre St & Chambers St
Douglass St & 4 Ave
Wolcott St & Dwight St
Columbia St & Degraw St
E 55 St & Lexington Ave
Greenwich St & Hubert St
Pacific St & Nevins St
Congress St & Clinton St
E 56 St & Madison Ave
Henry St & Atlantic Ave
Stanton St & Mangin St
Allen St & E Houston St
5 Ave & E 78 St
Bedford Ave & Nassau Ave
St James Pl & Pearl St
5 Ave & E 73 St
E 35 St & 3 Ave
Reed St & Van Brunt St
Montrose Ave & Bushwick Ave
Adelphi St & Myrtle Ave
1 Pl & Clinton St
E 6 St & Avenue B
W 87 St & West End Ave
Pioneer St & Van Brunt St
East End Ave & E 86 St
12 St & 4 Ave
W 100 St & Manhattan Ave
Fulton St & Clermont Ave
MacDougal St & Prince St
Berkeley Pl & 6 Ave
E 20 St & Park Ave
Montague St & Clinton St
Tompkins Ave & Hopkins St
Kiosk in a box Motivate
Clinton Ave & Flushing Ave
14 St & 5 Ave
NYCBS Depot - PIT
NYCBS Depot - FAR
3969.TEMP (Bike The Branches - Central Branch)
E 2 St & 2 Ave
West Thames St
Henry St & W 9 St
Atlantic Ave & Fort Greene Pl
W 20 St & 8 Ave
Greenwich St & W Houston St
Cumberland St & Lafayette Ave
1 Ave & E 16 St
1 Ave & E 15 St
E 58 St & 3 Ave
W 43 St & 10 Ave
Kent Ave & S 11 St
6 St & 7 Ave
W 31 St & 7 Ave
Columbus Ave & W 103 St
Franklin St & W Broadway
Lewis Ave & Madison St
Dean St & 4 Ave

2025-01-19 04:34:23 - root - INFO - SQL:
-- 5. Get distinct end station names from Citi Bike trips in 2016
SELECT DISTINCT `end_station_name`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
end_station_name
W 45 St & 6 Ave
E 12 St & 3 Ave
Broadway & W 53 St
W 37 St & 10 Ave
Central Park West & W 100 St
Forsyth St & Broome St
E 16 St & Irving Pl
W 52 St & 9 Ave
E 60 St & York Ave
Mott St & Prince St
E 89 St & 3 Ave
Murray St & West St
E 77 St & 3 Ave
W 18 St & 6 Ave
E 31 St & 3 Ave
Grand Army Plaza & Central Park S
St Marks Pl & 2 Ave
E 84 St & 1 Ave
E 20 St & 2 Ave
E 51 St & 1 Ave
8 Ave & W 31 St
E 39 St & 3 Ave
Suffolk St & Stanton St
E 68 St & 3 Ave
E 51 St & Lexington Ave
Central Park S & 6 Ave
Amsterdam Ave & W 79 St
W 56 St & 6 Ave
W 78 St & Broadway
N 6 St & Bedford Ave
W 76 St & Columbus Ave
5 Ave & E 88 St
Riverside Blvd & W 67 St
Stanton St & Chrystie St
E 48 St & 5 Ave
E 9 St & Avenue C
E 95 St & 3 Ave
W 53 St & 10 Ave
E 2 St & Avenue B
South St & Gouverneur Ln
Broadway & W 58 St
E 25 St & 2 Ave
W 84 St & Columbus Ave
Queens Plaza North & Crescent St
W 52 St & 11 Ave
W 20 St & 7 Ave
5 Ave & E 63 St
Broadway & W 29 St
E 77 St & Park Ave
Amsterdam Ave & W 82 St
11 Ave & W 59 St
W 43 St & 6 Ave
E 91 St & Park Ave
W 42 St & 8 Ave
5 Ave & E 29 St
E 6 St & Avenue D
W 15 St & 7 Ave
W 24 St & 7 Ave
E 71 St & 2 Ave
E 72 St & Park Ave
Meserole Ave & Manhattan Ave
8 Ave & W 31 St N
W 92 St & Broadway
West St & Chambers St
E 61 St & Park Ave
W 90 St & Amsterdam Ave
E 75 St & 3 Ave
W 4 St & 7 Ave S
Hudson St & Reade St
9 Ave & W 18 St
Broadway & W 24 St
MacDougal St & Washington Sq
Pearl St & Hanover Square
W 13 St & Hudson St
W 49 St & 8 Ave
E 30 St & Park Ave S
E 43 St & 2 Ave
E 47 St & Park Ave
E 55 St & Lexington Ave
E 56 St & Madison Ave
Stanton St & Mangin St
5 Ave & E 78 St
5 Ave & E 73 St
E 20 St & Park Ave
3 St & 3 Ave
Grand Army Plaza & Plaza St West
Liberty St & Broadway
Lafayette Ave & Classon Ave
Prospect Park West & 8 St
10 St & 5 Ave
Greenpoint Ave & Manhattan Ave
Franklin Ave & Myrtle Ave
Driggs Ave & Lorimer St
Metropolitan Ave & Bedford Ave
Boerum St & Broadway
Leonard St & Bayard St
Leonard St & Grand St
Norfolk St & Broome St
Macon St & Nostrand Ave
Clinton Ave & Myrtle Ave
Henry St & Atlantic Ave
Fulton St & Clermont Ave
W 34 St & 11 Ave
Johnson St & Gold St
1 Ave & E 18 St
Shevchenko Pl & E 7 St
Sullivan St & Washington Sq
Greenwich St & N Moore St
E 6 St & Avenue B
MacDougal St & Prince St
Watts St & Greenwich St
Lispenard St & Broadway
Cliff St & Fulton St
Fulton St & Broadway
Clinton St & Joralemon St
Greenwich St & North Moore St
9 Ave & W 28 St
Clinton St & Grand St
Fulton St & Utica Ave
Peck Slip & Front St
Little West St & 1 Pl
Leonard St & Church St
Pier 40 - Hudson River Park
Centre St & Worth St
Catherine St & Monroe St
9 Ave & W 16 St
Cherry St
Great Jones St
Old Slip & Front St
University Pl & E 8 St
Centre St & Chambers St
Allen St & E Houston St
St James Pl & Pearl St
Montague St & Clinton St
Rivington St & Ridge St
Old Fulton St
Commerce St & Van Brunt St
Throop Ave & Myrtle Ave
Front St & Washington St
S Portland Ave & Hanson Pl
Huron St & Franklin St
Carroll St & Bond St
Monroe St & Classon Ave
DeKalb Ave & S Portland Ave
Railroad Ave & Kay Ave
Carlton Ave & Park Ave
Leonard St & Boerum St
Washington Park
Scholes St & Manhattan Ave
Union Ave & Wallabout St
Douglass St & 4 Ave
Congress St & Clinton St
Bedford Ave & Nassau Ave
Adelphi St & Myrtle Ave
Berkeley Pl & 6 Ave
Riverside Dr & W 104 St
Clinton Ave & Flushing Ave
W 27 St & 10 Ave
W 87 St & West End Ave
Nassau Ave & Newell St
Roebling St & N 4 St
N 11 St & Wythe Ave
Montrose Ave & Bushwick Ave
Greene Ave & Throop Ave
Park Ave & St Edwards St
Clark St & Henry St
W 100 St & Manhattan Ave
Avenue D & E 12 St
47 Ave & 31 St
Humboldt St & Varet St
Columbia St & Degraw St
E 103 St & Lexington Ave
48 Ave & 5 St
East End Ave & E 86 St
Devoe St & Leonard St
West End Ave & W 107 St
E 89 St & York Ave
NYCBS Depot - PIT
1 Pl & Clinton St
Central Park W & W 96 St
PABT Valet
E 102 St & 1 Ave
45 Rd & 11 St
31 St & Thomson Ave
Court St & State St
Wolcott St & Dwight St
Reed St & Van Brunt St
E 35 St & 3 Ave
Cambridge Pl & Gates Ave
Cadman Plaza W & Pierrepont St
Tompkins Ave & Hopkins St
W 89 St & Columbus Ave
E 97 St & 3 Ave
5 Ave & E 93 St
12 St & 4 Ave
14 St & 5 Ave
Dean St & Hoyt St
NYCBS Depot - SSP
9 St & 44 Rd
E 109 St & 3 Ave
Greenwich St & Hubert St
Carroll St & Columbia St
Van Brunt St & Wolcott St
Pacific St & Nevins St
3 St & 7 Ave
Henry St & Bay St
Adventures NYC
NYCBS Depot BAL - DYR
Richards St & Delavan St
Pioneer St & Richards St
Pioneer St & Van Brunt St
E 40 St & Madison Ave
Grand St & Elizabeth St
Bike The Branches - Central Branch
NYCBS Depot - FAR
Columbia St & W 9 St
Kiosk in a box Motivate
Liberty Light Rail
3969.TEMP (Bike The Branches - Central Branch)
Van Vorst Park
Hilltop
Bike The Branches - Red Hook Branch
Grove St PATH
Heights Elevator
Newport PATH
West Thames St
W 20 St & 8 Ave
1 Ave & E 16 St
1 Ave & E 15 St
E 58 St & 3 Ave
W 43 St & 10 Ave
W 31 St & 7 Ave
Washington St & Gansevoort St
1 Ave & E 30 St
E 2 St & 2 Ave
Broadway & W 41 St
E 66 St & Madison Ave
Pike St & E Broadway
W Broadway 

2025-01-19 04:34:25 - root - INFO - SQL:
-- 6. Calculate average trip duration for Citi Bike trips in 2016
SELECT AVG(`tripduration`) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016;
Results:
avg_trip_duration_seconds
988.1495024335314

2025-01-19 04:34:27 - root - INFO - SQL:
-- 7. Get sample taxi trip durations in 2016
SELECT TIMESTAMP_DIFF(`dropoff_datetime`, `pickup_datetime`, SECOND) AS trip_duration_seconds
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
trip_duration_seconds
0
0
0
0
25
3
0
24
2
0
0
9
0
93
0
0
676
3
29
1106
536
42
0
0
8
27
0
72
0
3
0
1504
1991
100
52
0
26
3035
13
0
1320
29
0
61
611
110
2
18
945
0
0
13
5
14
0
323
8
8642
25
0
0
217
4
197
0
17
10
31
0
537
0
2
0
1865
1468
352
0
11
0
220
69
109
0
41
0
6
0
0
3339
3570
455
38
37
1404
51
94
2655
332
992
72
198
621
1260
32
155
9
2086
111
0
2619
1495
185
55
77
81
364
2369
91
3304
2303
33
11
42
0
47
1399
44
62
2229
47
123
1710
507
180
36
61
9
0
1322
68
231
2568
23
25
1573
807
3639
20
67
22
0
0
347
42
1176
476
122
1947
27
0
0
26
111
887
0
69
875
28
114
46
116
759
1762
49
173
709
237
1407
100
2905
58
36
2633
36
2340
62
0
53
4126
0
986
3288
19
167
928
534
80
45
1086
68
108
14
102
0
5576
2246
175
839
0
23
48
75
466
310
243
25
2683
54
43
5047
38
882
2928
41
1867
1582
119
2847
101
0
0
33
1507
141
77
74
145
3921
19
240
6793
208
40
1032
78
141
69
358
1413
2181
3527
3583
0
3129
1721
3163
944
2876
86
100
3848
1995
1811
1046
1432
1871
959
2141
1352
3236
14
1841
2307
1990
3012
1486
88
553
2616
1669
3817
2658
20
1909
166
17
129
82
87
20
2209
21
3131
10
16
37
14
3437
3903
504
1938
2735
4642
5478
2
22
339
5
44
1487
0
2
30
1179
30
5
1
6
20
10
11
41
2
14
42
32
40
1
33
6
1227
5
3
7
2
14
50
4
2
43
7
11
4
1
4
36
7
26
4
7
9
18
3
4
40
2
46
1354
78
3
7
49
54
14
59
51
24
13
2
35
47
53
30
44
14
21
9
5
35
3
32
35
12
7
34
4
5
5
4
48
6
1849
44
40
45
8
4
3
18
14
5
2
67
28
5
52
28
43
31
8
61
10
17
2
3
59
33
6
5
44
7
0
13
22
6
15
2
37
34
11
13
3
23
8
0
31
9
8
0
6
0
28
26
26
4
85528
51
13
25
8
991
32
45
0
39
5
19
18
17
5
111
23
959
2
59
24
33
32
7
4
23
37
3
3
5
20
26
5
8
0
68
27
0
54
39
3
4
30
28
33
34
48
25
50
51
4
21
47
4
10
45
2
0
13
51
14
24
56
31
17
16
35
9
41
53
42
2
55
13
11
3
3
3
26
13
36
28
13
3
38
4
13
26
3207
37
16
27
10
3
3
17
6
12
41
46
2
27
24
0
35
3
10
3
15
1
15
44
24
36
3
21
12
10
59
13
10
36
0
22
4
39
57
0
4
7
15
5
22
2
10
2
52
5
30
25
20
0
52
25
32
14
13
8
26
11
9
23
18
5
26
5
2
9
20
25
0
4
36
43
11
15
9
38
29
10158
42
73
21
29
11
61
22
1126
6
0
31
8
15
27
26
16
7
20
22
9
5
46
39
7
0
35
8
0
33
36
33
56
17
53
13
33
53
53
8
17
5
8
24
3
55
13
5
51
45
2
9
9
5
0
23
0
35
65
3
46
12
11
49
0
13
3
12
9
7
33
29
4
37
36
12
8
268
49
36
11
21
29
23
18
3
54
31
24
48
2
3086
11
45
2
6
16
45
5
3
321
49
14
25
59
48
11
6
8
28
8
4
0
15
47
19
7
25
34
22
58
32
3
2
3975
25
20
7
13
8
21
0
53
8
17
8
4
51
20
8
23
6
34
58
5
8
15
0
9
4
21
5
8
6
0
15
50
0
18
14
33
55
7
5
45
4
2
4
18
3
44
18
39
45
0
12
29
7
37
50
47
37
4
5
18
3
0
38
0
13
33
17
27
37
3
12
17
0
14
39
8
45
45
4
0
3
30
9
46
12
29
19
0
1000
52
2
17
6
16
53
47
22
7
12
45
12
19
10
33
2
25
0
19
8
0
29
13
23
21
156
12
2
45
0
10
9
19
14
6
24
32
0
2
8
0
7
6
46
47
36
2
38
23
9
48
50
28
52
5
3
22
46
19
9
41
3
3
15
10
19
39
26
84
3
36
4
23
6
31
54
6
6
12
28
44
7
14
49
3
3
33
8
31
25
2
4
4
5
12
14
2
34
9
44
13
6
8
3
4
9
11
5
14
5
3
3
2
4
7
4
5
0
3
9
10
15
4
7
10
18
2
58
8
6
56
957
2
5
3
2
58
5
3
19
41
23
18
18
49
24
41
12
13
3
42
36
2
56
40
25
31
3
25
2
15
23
55
44
6
37
36
19
50
41
51
29

2025-01-19 04:34:28 - root - INFO - SQL:
-- 8. Get sample taxi trip distances in 2016
SELECT `trip_distance`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
trip_distance
0.0
0.0
0.0
0.0
0.0
0.0
0.0
1.6
3.53
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
1.3
0.0
1.58
0.0
0.0
0.77
0.0
0.0
0.0
0.0
0.0
3.0
0.0
0.0
0.0
0.0
0.0
0.0
26.05
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
1.92
4.54
0.0
0.0
0.0
0.99
0.0
0.0
3.25
0.0
0.34
0.0
0.0
0.0
0.0
0.0
0.0
5.3
0.2
0.0
1.8
0.6
5.5
3.7
0.7
11.1
0.4
0.1
0.0
0.0
0.1
2.3
0.0
0.1
56.9
10.0
0.0
9.6
1.3
3.5
4.9
0.4
0.2
34.3
0.4
1.1
7.0
0.5
0.0
4.9
16.9
2.8
0.0
0.5
0.1
14.5
0.0
0.1
0.0
6.9
15.9
0.0
0.1
7.7
0.2
0.1
0.4
0.1
0.3
0.6
27.4
9.5
34.0
0.1
1.3
0.0
0.2
0.1
0.6
0.0
0.0
0.2
0.0
0.0
0.0
0.1
13.9
0.2
0.3
0.3
15.4
0.0
0.0
2.3
0.0
0.0
2.5
0.0
0.0
2.3
0.0
6.9
0.9
0.1
3.1
1.9
0.0
2.9
0.2
4.0
3.6
0.0
0.1
0.8
0.0
1.3
2.2
0.0
0.0
0.1
0.4
0.0
0.1
0.1
1.3
2.3
0.1
0.0
1.1
3.8
0.0
2.2
10.4
9.8
4.4
0.0
15.0
9.5
4.0
0.1
2.7
0.0
18.9
0.9
0.1
5.5
17.0
3.4
0.1
0.2
0.9
0.4
0.3
0.1
0.0
0.0
0.6
0.1
4.1
0.2
0.0
0.0
0.0
2.9
11.1
1.1
0.1
0.1
0.0
1.0
0.1
9.9
10.6
13.8
16.7
0.5
27.5
33.4
21.8
15.8
0.7
16.6
0.3
4.7
4.3
2.7
1.3
5.7
7.5
11.7
5.7
45.6
0.5
6.6
10.3
3.1
6.8
13.5
24.1
4.9
22.3
3.6
15.7
3.1
5.4
29.2
12.5
5.6
5.6
4.2
11.2
3.3
2.7
20.7
2.7
15.7
14.1
16.9
14.0
0.0
23.7
1.4
26.6
4.0
19.6
17.3
14.8
16.3
18.9
1.0
0.0
37.3
33.8
12.9
17.4
16.3
0.0
0.0
8.3
0.0
0.0
0.0
0.0
0.1
0.9
0.1
0.0
0.1
0.8
0.4
0.09
0.17
0.0
0.0
0.08
0.07
0.0
0.0
0.0
0.6
0.0
0.0
0.0
1.8
0.0
5.2
0.0
0.0
0.0
1.4
3.2
1.3
0.0
0.0
0.0
2.2
0.0
0.0
0.0
0.0
0.0
0.0
0.09
0.0
0.0
0.0
0.01
0.2
0.9
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.04
0.0
0.0
0.0
0.01
0.01
2.6
0.1
0.01
0.13
220735.6
2.8
1.0
0.1
0.0
0.02
0.0
0.0
0.1
0.0
0.08
0.3
0.0
0.5
0.01
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.05
0.0
0.0
0.0
17.0
0.0
0.0
0.0
0.01
0.01
0.04
3.3
0.0
0.0
0.1
0.0
0.0
0.07
0.0
0.0
0.0
0.0
1.3
0.0
0.0
0.0
0.12
0.1
0.0
0.5
0.0
0.1
2.7
0.0
13.2
0.0
0.0
0.03
1.3
1.7
0.0
0.18
0.0
0.0
0.01
0.0
0.06
0.1
0.04
0.0
0.9
0.0
0.03
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.01
0.05
0.0
0.1
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.12
0.0
0.1
0.4
0.0
0.0
1.6
0.9
0.0
0.0
0.12
0.0
0.8
0.0
0.01
0.0
0.0
0.0
0.0
0.04
0.0
0.01
20.1
0.0
0.11
0.01
0.0
0.0
0.01
10.3
0.0
0.0
0.0
0.0
0.0
0.0
0.0
2.6
0.0
0.1
0.1
0.0
3.3
0.05
0.0
0.0
0.0
0.0
1.6
0.14
0.06
1.5
0.0
0.5
0.0
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.05
0.0
24.5
0.0
1.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.02
0.0
0.2
0.0
0.05
0.01
0.0
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.04
0.0
1.7
0.0
0.01
0.0
0.0
0.0
0.0
0.01
0.2
0.0
0.09
0.01
0.01
0.0
0.04
0.0
0.09
0.0
0.1
0.0
0.03
0.0
0.1
0.0
0.0
3.5
0.1
0.05
0.1
0.0
0.0
0.1
0.19
0.0
0.16
0.02
3.2
0.0
0.0
0.0
0.0
0.0
6.5
0.1
0.0
0.0
0.0
0.1
0.1
0.0
17.1
0.1
1.0
3.0
0.03
0.0
1.4
0.0
0.0
0.0
0.0
0.0
0.1
2.1
0.6
0.0
0.06
0.0
1.7
0.0
0.0
0.0
0.0
0.7
0.11
0.0
1.2
0.04
0.0
0.0
0.0
0.05
0.0
0.08
7.9
0.0
0.18
0.05
1.3
0.0
0.09
0.1
0.0
0.0
0.0
0.07
0.13
0.0
0.0
0.0
0.1
0.0
1.1
0.0
0.0
0.0
0.0
0.0
0.0
0.03
0.0
0.06
11.3
0.0
0.0
0.14
0.0
0.0
0.0
0.0
0.0
0.0
0.1
0.0
0.1
0.06
0.0
0.1
0.2
0.3
2.8
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.9
0.11
0.0
10.4
0.1
0.0
0.0
15.0
0.03
0.0
0.0
0.17
0.1
3.4
0.0
0.0
0.13
1.5
0.0
1.4
0.0
0.0
0.12
0.0
0.0
0.0
0.01
0.0
0.0
0.0
0.1
0.03
0.0
0.0
0.06
0.0
0.0
0.0
2.4
0.05
0.0
0.0
0.0
0.0
0.01
0.0
0.1
0.01
0.0
0.0
0.0
0.0
0.0
0.0
0.0
2.4
0.01
2.3
0.8
0.03
0.0
0.02
0.0
0.8
0.3
0.0
0.0
1.5
0.0
0.0
0.09
0.0
0.0
0.0
3.0
0.12
0.0
1.5
0.1
0.0
0.0
0.0
0.03
0.0
0.15
0.2
0.0
0.0
0.0
0.0
0.0
0.06
0.0
0.0
0.0
0.04
0.0
0.0
0.0
0.0
0.0
0.0
0.15
0.0
4.5
0.0
0.0
0.0
0.0
0.01
0.0
2.2
0.7
0.0
0.0
0.0
0.0
0.1
0.0
3.6
0.02
0.0
0.04
0.0
16.2
0.06
0.0
0.07
0.0
0.01
0.0
1.2
0.0
0.0
0.0
1.8
0.15
4.5
0.0
2.3
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.2
0.0
0.0
0.0
0.0
0.0
2.6
1.0
0.0
0.0
1.0
3.3
0.0
0.0
0.1
0.02
0.0
0.0
0.09
0.0
0.0
0.01
0.0
0.0
0.0
0.01
0.0
0.07
0.0
0.0
0.02
0.1
0.0
7.1
0.01
0.03
0.0
0.0
0.0
0.0
0.0
0.1
0.0
0.0
0.0
0.07
0.01
0.03
0.0
0.01
0.1
0.01
0.0
0.0
20.3
0.07
8.3
0.0
0.02
0.7
0.0
0.06
0.15
0.1
0.0
0.1
0.1
0.0
1.5
0.0
0.1
0.2
0.8
0.0
0.0
0.1
0.6
0.1
0.1
0.0
0.0
0.1
0.2
0.01
0.1
0.0
0.04
0.11
0.2
0.0
0.0
0.1
0.0
0.03
0.0
0.03
0.0
0.0
0.0
0.0
0.1
0.0
0.02
0.0
0.09
0.1
0.0
0.0
0.0
0.0
0.0
3.4
0.2
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
4.6
0.0
0.0
0.0
3.4
0.0
0.1
0.0
0.0
0.0
0.0
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.5
0.0
0.0
0.0
0.0
0.0
1.0
2.3
3.1
8.2
0.0
0.01
0.0
0.2
0.03
0.0
0.0
0.2
0.16
0.13

2025-01-19 04:34:36 - root - INFO - SQL:
-- 9. Get distinct rounded pickup and drop-off coordinates from Taxi trips in 2016
SELECT DISTINCT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude,
       ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
pickup_latitude,pickup_longitude,dropoff_latitude,dropoff_longitude
40.74,-73.986,40.72,-73.963
40.728,-73.991,40.767,-73.994
40.68,-73.981,40.684,-73.931
40.78,-73.947,40.754,-73.976
40.785,-73.958,40.751,-74.005
40.712,-74.006,40.663,-73.98
40.735,-73.988,40.778,-73.946
40.755,-73.986,40.714,-74.014
40.755,-73.977,40.718,-74.007
40.752,-73.975,40.705,-74.005
40.762,-73.963,40.74,-74.008
40.767,-73.953,40.741,-73.987
40.753,-73.978,40.702,-74.009
40.767,-73.955,40.733,-73.998
40.76,-74.003,40.774,-73.96
40.731,-73.982,40.759,-73.982
40.74,-74.008,40.786,-73.978
40.758,-73.977,40.725,-73.989
40.726,-73.992,40.778,-73.981
40.75,-73.989,40.79,-73.945
40.78,-73.981,40.732,-73.986
40.75,-73.981,40.813,-73.945
40.744,-73.986,40.793,-73.974
40.733,-73.988,40.68,-73.99
40.755,-73.987,40.74,-73.946
40.753,-73.986,40.718,-73.99
40.79,-73.943,40.759,-73.97
40.74,-74.006,40.753,-73.977
40.798,-73.969,40.841,-73.943
40.707,-74.004,40.747,-73.981
40.744,-74.007,40.758,-73.963
40.729,-73.99,40.734,-73.95
40.769,-73.955,40.769,-73.992
40.744,-74.007,40.714,-73.961
40.703,-74.01,40.757,-73.983
40.722,-73.985,40.749,-73.992
40.749,-73.988,40.778,-73.955
40.782,-73.972,40.735,-73.981
40.759,-73.966,40.732,-74.005
40.721,-73.988,40.762,-73.993
40.705,-74.012,40.763,-73.993
40.763,-73.98,40.723,-73.986
40.73,-74.002,40.765,-73.969
40.746,-73.982,40.726,-73.996
40.758,-73.988,40.786,-73.952
40.749,-73.98,40.702,-74.011
40.717,-73.991,40.762,-73.971
40.711,-74.01,40.757,-73.982
40.751,-73.994,40.778,-73.951
40.77,-73.957,40.787,-73.977
40.747,-73.986,40.694,-73.966
40.73,-73.981,40.694,-73.959
40.732,-73.988,40.789,-73.967
40.742,-73.981,40.764,-73.923
40.732,-74.0,40.801,-73.946
40.713,-74.009,40.754,-73.973
40.83,-73.948,40.766,-73.984
40.726,-73.984,40.756,-73.975
40.772,-73.961,40.739,-73.992
40.774,-73.978,40.742,-73.975
40.78,-73.955,40.762,-73.965
40.751,-73.994,40.796,-73.971
40.751,-73.994,40.709,-74.018
40.758,-73.975,40.722,-74.004
40.758,-73.986,40.702,-74.009
40.74,-74.002,40.795,-73.973
40.743,-73.918,40.739,-74.001
40.645,-73.782,40.679,-73.859
40.722,-73.986,40.762,-73.977
40.776,-73.953,40.741,-74.005
40.759,-73.981,40.827,-73.946
40.73,-73.984,40.801,-73.967
40.773,-73.982,40.735,-73.986
40.722,-74.0,40.766,-73.977
40.755,-73.988,40.704,-74.007
40.717,-74.014,40.755,-73.976
40.703,-74.011,40.73,-73.954
40.774,-73.871,40.717,-73.942
40.75,-74.002,40.698,-73.992
40.73,-74.007,40.792,-73.969
40.763,-73.977,40.714,-73.948
40.717,-74.011,40.772,-73.991
40.765,-73.983,40.735,-73.989
40.735,-73.991,40.764,-73.981
40.763,-73.983,40.748,-73.988
40.759,-73.987,40.721,-73.988
40.722,-74.01,40.719,-73.961
40.805,-73.939,40.785,-73.976
40.729,-73.997,40.789,-73.981
40.814,-73.96,40.75,-74.004
40.768,-73.956,40.706,-74.007
40.773,-73.963,40.714,-73.993
40.722,-74.008,40.753,-73.967
40.743,-73.977,40.721,-73.957
40.828,-73.949,40.758,-73.985
40.705,-74.01,40.73,-73.954
40.742,-73.975,40.805,-73.962
40.741,-73.979,40.712,-74.014
40.764,-73.915,40.756,-73.974
40.738,-74.0,40.684,-73.967
40.744,-74.004,40.765,-73.955
40.738,-74.004,40.779,-73.977
40.764,-73.983,40.721,-73.983
40.804,-73.963,40.756,-73.964
40.753,-73.976,40.702,-74.011
40.781,-73.946,40.842,-73.942
40.748,-73.976,40.684,-74.0
40.777,-73.964,40.763,-73.928
40.784,-73.948,40.846,-73.922
40.719,-73.989,40.669,-73.936
40.8,-73.968,40.766,-73.967
0.0,0.0,40.772,-73.959
40.732,-73.994,40.728,-73.951
40.764,-73.981,40.721,-73.982
40.776,-73.947,40.748,-74.009
40.768,-73.903,40.791,-73.953
40.751,-73.99,40.71,-74.015
40.764,-73.989,40.717,-73.963
40.751,-73.979,40.783,-73.971
40.748,-73.993,40.686,-73.957
40.75,-73.988,40.775,-73.952
40.734,-73.994,40.762,-73.979
40.721,-74.001,40.785,-73.979
40.753,-73.979,40.705,-73.948
40.782,-73.98,40.735,-73.98
40.726,-73.998,40.787,-73.968
40.705,-74.014,40.668,-73.961
40.764,-73.998,40.75,-74.008
40.75,-73.991,40.689,-73.957
40.707,-74.004,40.772,-73.965
40.739,-74.002,40.819,-73.945
40.754,-73.971,40.675,-73.975
40.739,-74.004,40.669,-73.98
40.755,-73.984,40.776,-73.983
40.771,-73.957,40.715,-74.002
40.744,-73.988,40.799,-73.967
40.712,-74.009,40.758,-73.966
40.757,-73.986,40.813,-73.939
40.718,-74.009,40.749,-73.973
40.742,-73.991,40.807,-73.95
40.734,-74.003,40.665,-73.937
40.772,-73.959,40.77,-73.864
40.647,-73.79,40.708,-73.759
40.723,-74.008,40.775,-73.948
40.738,-74.0,40.813,-73.958
40.762,-73.968,40.775,-73.919
40.77,-73.954,40.774,-73.871
40.689,-73.997,40.753,-73.967
40.691,-73.925,40.643,-73.991
40.777,-73.961,40.727,-74.005
40.784,-73.957,40.855,-73.938
40.752,-73.978,40.83,-73.949
40.75,-73.984,40.711,-74.011
40.735,-74.006,40.79,-73.952
40.76,-73.988,40.73,-73.896
40.77,-73.863,40.806,-73.953
40.763,-73.929,40.838,-73.887
40.774,-73.873,40.773,-73.952
40.744,-73.973,40.774,-73.871
40.723,-74.003,40.663,-73.96
40.719,-73.993,40.786,-73.95
40.781,-73.983,40.719,-73.99
40.723,-73.985,40.78,-73.973
40.715,-74.016,40.764,-73.971
40.762,-73.974,40.704,-74.012
40.749,-73.973,40.849,-73.911
40.791,-73.969,40.716,-74.004
40.7

2025-01-19 04:34:39 - root - INFO - SQL:
-- 10. Sample of Taxi trips starting and ending near specific coordinates (rounded to 3 decimals)
SELECT `pickup_latitude`, `pickup_longitude`, `dropoff_latitude`, `dropoff_longitude`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
  AND ROUND(`pickup_latitude`, 3) = 40.751
  AND ROUND(`pickup_longitude`, 3) = -73.977
  AND ROUND(`dropoff_latitude`, 3) = 40.749
  AND ROUND(`dropoff_longitude`, 3) = -73.991
LIMIT 1000;
Results:
Too long, hard cut:
pickup_latitude,pickup_longitude,dropoff_latitude,dropoff_longitude
40.750938415527344,-73.97682189941406,40.74889373779297,-73.99128723144531
40.75084686279297,-73.97662353515625,40.74852752685547,-73.99100494384766
40.75069046020508,-73.97671508789062,40.74895477294922,-73.99103546142578
40.75078201293945,-73.97664642333984,40.748817443847656,-73.99107360839844
40.75123596191406,-73.97650146484375,40.74946594238281,-73.99107360839844
40.750526428222656,-73.97663116455078,40.74892044067383,-73.9913101196289
40.751312255859375,-73.97742462158203,40.749446868896484,-73.99141693115234
40.75121307373047,-73.97663116455078,40.74913787841797,-73.99132537841797
40.75076675415039,-73.97747039794922,40.74884033203125,-73.99129486083984
40.751014709472656,-73.97684478759766,40.748966217041016,-73.99054718017578
40.751163482666016,-73.97681427001953,40.74928283691406,-73.99125671386719
40.7506217956543,-73.97683715820312,40.74875259399414,-73.99085998535156
40.75075912475586,-73.97705078125,40.74922180175781,-73.99128723144531
40.750518798828125,-73.97740936279297,40.74916076660156,-73.99109649658203
40.750755310058594,-73.9772720336914,40.748863220214844,-73.99129486083984
40.75071716308594,-73.9771728515625,40.74882507324219,-73.99142456054688
40.75117874145508,-73.97721099853516,40.74920654296875,-73.99130249023438
40.75098419189453,-73.9765853881836,40.749202728271484,-73.99117279052734
40.750797271728516,-73.97698974609375,40.749000549316406,-73.99090576171875
40.75122833251953,-73.9765396118164,40.749488830566406,-73.99127960205078
40.750877380371094,-73.97734069824219,40.74945068359375,-73.99122619628906
40.750648498535156,-73.97672271728516,40.7489128112793,-73.9914321899414
40.750946044921875,-73.9767837524414,40.74864959716797,-73.9912338256836
40.75067901611328,-73.97737884521484,40.7489013671875,-73.99102020263672
40.7505989074707,-73.97679138183594,40.74911880493164,-73.99134063720703
40.751373291015625,-73.977294921875,40.74882125854492,-73.99128723144531
40.75056076049805,-73.9770278930664,40.74881362915039,-73.99073791503906
40.750648498535156,-73.97655487060547,40.749298095703125,-73.99129486083984
40.75136184692383,-73.97664642333984,40.7492790222168,-73.99143981933594
40.751129150390625,-73.97669219970703,40.74876022338867,-73.99070739746094
40.750816345214844,-73.97689056396484,40.749237060546875,-73.99116516113281
40.751163482666016,-73.97669219970703,40.74880599975586,-73.99108123779297
40.750728607177734,-73.97732543945312,40.74855041503906,-73.99104309082031
40.75075149536133,-73.97669219970703,40.748870849609375,-73.9908447265625
40.7508430480957,-73.97655487060547,40.74899673461914,-73.99134063720703
40.75062942504883,-73.97660064697266,40.748931884765625,-73.9912109375
40.75071716308594,-73.9773178100586,40.74911117553711,-73.99128723144531
40.75092697143555,-73.97679138183594,40.749061584472656,-73.99142456054688
40.75065612792969,-73.977294921875,40.74872589111328,-73.99102020263672
40.75063705444336,-73.97721099853516,40.74919509887695,-73.99103546142578
40.750831604003906,-73.97716522216797,40.748905181884766,-73.99104309082031
40.75126266479492,-73.97727966308594,40.74897003173828,-73.99101257324219
40.751102447509766,-73.97706604003906,40.74912643432617,-73.99134826660156
40.7513313293457,-73.97691345214844,40.748931884765625,-73.99083709716797
40.75083541870117,-73.97685241699219,40.74884033203125,-73.99124908447266
40.75062561035156,-73.97676086425781,40.74876022338867,-73.99130249023438
40.7505989074707,-73.97698211669922,40.74913024902344,-73.9914321899414
40.75070571899414,-73.97745513916016,40.74855041503906,-73.99063873291016
40.751312255859375,-73.97694396972656,40.74895477294922,-73.99089050292969
40.75065231323242,-73.97724151611328,40.74905014038086,-73.99140930175781
40.750728607177734,-73.97657775878906,40.74911880493164,-73.99113464355469
40.75102615356445,-73.9771499633789,40.74895095825195,-73.9909439086914
40.75113296508789,-73.9766616821289,40.74934005737305,-73.99137115478516
40.75066375732422,-73.97673034667969,40.74888610839844,-73.9913101196289
40.750972747802734,-73.97660064697266,40.74898147583008,-73.99120330810547
40.75099563598633,-73.97706604003906,40.74910354614258,-73.9910888671875
40.75125503540039,-73.97715759277344,40.74918746948242,-73.99057006835938
40.751224517822266,-73.97692108154297,40.74911117553711,-73.99139404296875
40.751468658447266,-73.97664642333984,40.74872970581055,-73.99066925048828
40.75056457519531,-73.9765853881836,40.74883270263672,-73.99125671386719
40.7507209777832,-73.97722625732422,40.74907302856445,-73.99122619628906
40.75056076049805,-73.97669982910156,40.74927520751953,-73.99138641357422
40.75050354003906,-73.97698974609375,40.74932098388672,-73.99149322509766
40.75079345703125,-73.97669982910156,40.749393463134766,-73.99065399169922
40.75091552734375,-73.97734832763672,40.748775482177734,-73.99108123779297
40.75090789794922,-73.97676849365234,40.749080657958984,-73.99128723144531
40.75136184692383,-73.97687530517578,40.74926

2025-01-19 04:34:42 - root - INFO - SQL:
-- 11. Get average trip duration for Taxi trips in 2016
SELECT AVG(TIMESTAMP_DIFF(`dropoff_datetime`, `pickup_datetime`, SECOND)) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016;
Results:
avg_trip_duration_seconds
969.5513397498745

2025-01-19 04:34:45 - root - INFO - SQL:
-- 12. List distinct Taxi pickup locations rounded to 3 decimals in 2016
SELECT DISTINCT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
pickup_latitude,pickup_longitude
40.647,-73.79
40.764,-73.994
40.757,-73.971
40.738,-74.005
40.772,-73.876
40.745,-73.995
40.693,-74.186
40.719,-73.997
41.017,-73.718
40.752,-73.975
40.726,-74.007
40.762,-73.997
40.69,-73.81
40.762,-73.99
40.767,-73.886
40.749,-73.993
40.741,-73.899
40.792,-73.951
40.763,-73.986
40.645,-73.787
40.745,-73.926
40.737,-73.987
40.752,-73.948
40.738,-74.004
40.676,-73.908
40.755,-73.951
40.644,-73.783
40.773,-73.958
40.73,-73.984
40.747,-73.985
40.752,-73.976
40.728,-73.987
40.757,-73.985
40.759,-73.989
40.758,-73.972
40.641,-73.789
40.712,-74.009
40.726,-73.995
40.711,-74.009
40.988,-73.878
40.739,-74.009
40.757,-73.97
40.75,-73.976
40.702,-74.013
40.749,-73.942
40.815,-73.96
40.708,-73.943
40.753,-73.973
40.641,-73.788
40.816,-73.94
40.716,-74.015
40.762,-74.001
40.813,-73.957
40.821,-73.955
40.825,-73.952
40.713,-74.007
40.767,-73.983
40.651,-74.015
40.764,-73.955
40.768,-73.969
40.757,-73.98
40.781,-73.955
40.727,-73.986
40.758,-73.983
40.728,-73.991
40.721,-73.998
40.732,-73.992
40.752,-73.933
40.727,-74.0
40.763,-73.997
40.674,-73.969
40.731,-74.0
40.775,-73.981
40.729,-74.003
40.757,-73.921
40.756,-73.988
40.802,-73.934
40.726,-73.991
40.741,-74.007
40.748,-73.985
40.731,-73.948
40.748,-73.973
40.72,-73.943
40.821,-73.954
40.72,-73.989
40.726,-73.98
40.747,-73.987
40.732,-73.982
40.789,-73.978
40.696,-73.991
40.73,-74.0
40.734,-73.99
40.782,-73.983
40.702,-73.904
40.759,-73.961
40.983,-73.764
40.811,-73.925
40.736,-73.997
40.743,-73.982
40.764,-73.956
40.8,-73.947
40.79,-73.976
41.015,-73.86
40.775,-73.95
40.739,-74.0
40.719,-73.985
40.741,-74.0
40.749,-73.999
40.73,-73.998
40.729,-73.977
40.736,-73.995
40.816,-73.958
40.725,-73.996
40.776,-73.953
40.804,-73.967
40.707,-74.009
40.704,-73.931
40.868,-73.921
40.756,-73.992
40.728,-73.994
40.726,-73.994
40.752,-73.984
40.761,-73.917
40.771,-73.953
40.746,-74.005
40.689,-73.989
40.769,-73.956
40.776,-73.961
40.708,-74.016
40.745,-73.979
40.742,-73.989
40.725,-73.993
40.767,-73.978
40.779,-73.955
40.805,-73.961
40.744,-74.003
40.778,-73.961
40.823,-73.945
40.759,-73.97
40.787,-73.972
40.773,-73.953
40.791,-73.973
40.766,-73.982
40.802,-73.942
40.745,-73.985
40.749,-74.006
40.682,-73.976
40.709,-73.953
40.74,-73.989
40.735,-74.008
40.792,-73.973
40.793,-73.971
40.808,-73.96
40.781,-73.946
40.75,-73.999
40.76,-73.989
40.743,-74.003
40.734,-74.006
40.751,-73.986
40.737,-74.005
40.725,-73.998
40.743,-73.98
40.709,-73.938
40.85,-73.828
40.767,-73.984
40.774,-73.951
40.805,-73.947
40.748,-73.898
40.787,-73.948
40.801,-73.961
40.746,-73.899
40.76,-73.932
40.755,-73.972
40.757,-73.963
40.663,-73.984
40.786,-73.972
40.79,-73.954
40.772,-73.96
40.717,-73.998
40.759,-73.964
40.734,-73.995
40.752,-73.981
40.755,-73.966
40.767,-73.955
40.787,-73.956
40.716,-74.01
40.75,-73.993
40.736,-73.859
40.769,-73.992
40.746,-73.898
40.747,-73.978
40.739,-74.01
40.667,-73.982
40.803,-73.968
40.816,-73.939
40.789,-73.943
40.738,-73.999
40.713,-74.01
40.735,-74.007
40.798,-73.971
40.729,-74.006
40.758,-73.988
40.712,-74.008
40.756,-73.924
40.779,-73.983
40.777,-73.961
40.734,-73.998
40.787,-73.955
40.714,-74.004
40.772,-73.99
40.771,-73.923
40.752,-73.996
40.747,-73.991
40.724,-73.987
40.765,-73.965
40.705,-74.007
40.767,-73.968
40.731,-73.958
40.743,-73.979
40.758,-73.964
40.799,-73.945
40.766,-73.966
40.824,-73.945
40.745,-73.949
40.768,-73.98
40.724,-74.008
40.788,-73.954
40.712,-73.997
40.791,-73.966
40.801,-73.967
40.762,-73.926
40.738,-73.98
40.744,-73.994
40.745,-74.003
40.747,-74.008
40.791,-73.945
40.762,-73.932
40.746,-73.904
40.716,-73.756
40.674,-73.973
40.771,-73.967
40.745,-73.908
40.717,-74.007
40.744,-73.92
40.707,-74.015
40.756,-73.969
40.771,-73.903
40.773,-73.967
40.776,-73.988
40.756,-73.913
40.716,-74.001
40.72,-73.992
40.692,-73.994
40.748,-73.883
40.798,-73.939
40.804,-73.945
40.82,-73.96
40.811,-73.928
40.662,-73.989
40.695,-73.801
40.81,-73.937
40.718,-73.992
40.708,-74.009
40.69,-73.826
40.767,-73.991
40.705,-73.959
40.791,-73.97
40.727,-73.984
40.743,-73.916
40.689,-73.951
40.692,-73.995
40.737,-74.004
40.742,-74.003
40.743,-73.999
40.703,-73.989
40.73,-73.979
40.677,-73.983
40.762,-73.911
40.777,-73.99
40.714,-73.966
40.719,-74.004
40.71,-74.012
40.777,-73.985
40.814,-73.94
40.758,-73.916
40.793,-73.952
40.837,-73.943
40.762,-73.985
40.806,-73.934
40.742,-73.925
40.745,-74.011
40.707,-73.964
40.775,-73.944
40.693,-73.994
40.745,-73.956
40.743,-73.934
40.827,-73.888
40.823,-73.95
40.708,-73.958
40.748,-73.882
40.766,-73.921
40.733,-73.977
40.711,-73.953
40.785,-73.972
40.809,-73.94
40.722,-73.845
40.855,-73.937
40.751,-73.999
40.714,-73.995
40.691,-74.0
40.784,-73.967
40.742,-73.954
40.734,-73.996
40.714,-73.965
40.767,-73.916
40.761,-74.002
40.716,-73.961
40.85,-73.936
40.742,-73.979
40.744,-73.927
40.775,-73.978
40.756,-74.004
40.756,-73.941
40.744,-73.941
40.78,-73.915
40.689,-73.982
40.748,-73.94
40.74,-73.898
40.7,-73.928
40.767,-73.93
40.747,-73.886
40.76,-73.83
40.684,-73.806
40.731,-73.987
40.819,-73.914
40.722,-74.012

2025-01-19 04:34:48 - root - INFO - SQL:
-- 13. List distinct Taxi drop-off locations rounded to 3 decimals in 2016
SELECT DISTINCT ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
dropoff_latitude,dropoff_longitude
40.721,-74.005
40.76,-73.97
40.672,-73.843
40.751,-73.991
40.741,-74.061
40.67,-74.116
40.808,-73.665
40.727,-74.042
40.723,-74.037
40.731,-73.988
40.714,-74.014
40.761,-73.997
40.752,-73.945
40.766,-73.961
40.725,-73.99
40.754,-73.948
40.747,-73.894
40.758,-74.0
40.722,-74.004
40.732,-73.99
40.686,-73.978
40.681,-73.997
40.694,-73.987
40.815,-73.959
40.753,-73.924
40.75,-73.942
40.745,-73.927
40.712,-74.016
40.734,-74.008
40.758,-73.985
40.71,-74.004
40.76,-73.962
40.741,-73.976
40.764,-73.959
40.736,-74.008
40.737,-74.043
40.775,-73.977
40.751,-73.998
40.766,-73.981
40.746,-73.98
40.756,-73.993
40.777,-73.977
40.813,-73.954
40.796,-73.938
40.771,-73.885
40.746,-73.975
40.751,-73.99
40.771,-73.951
40.773,-73.95
40.736,-74.002
40.779,-73.987
40.827,-73.905
40.812,-73.936
40.722,-73.987
40.73,-74.002
40.72,-73.991
40.749,-74.003
40.761,-73.984
40.764,-73.936
40.755,-73.985
40.754,-73.974
40.663,-73.931
40.759,-73.983
40.766,-73.952
40.722,-74.01
40.716,-73.976
40.785,-73.981
40.848,-73.971
40.731,-73.983
40.721,-74.004
40.741,-73.935
40.768,-73.833
40.818,-73.938
40.77,-73.96
40.705,-74.006
40.673,-73.96
40.782,-73.947
40.75,-73.988
40.76,-73.973
40.802,-73.956
40.815,-73.94
40.74,-73.987
40.791,-73.969
40.715,-73.96
40.748,-73.971
40.744,-73.999
40.779,-73.956
40.783,-73.95
40.778,-73.953
40.76,-73.995
40.76,-73.991
40.745,-73.921
40.75,-73.98
40.745,-73.906
40.783,-73.972
40.744,-74.0
40.754,-73.992
40.724,-73.951
40.717,-73.821
40.787,-73.976
40.747,-73.984
40.743,-74.007
40.724,-73.991
40.743,-74.006
40.773,-73.962
40.787,-73.977
40.758,-73.973
40.774,-73.956
40.705,-74.005
40.778,-73.962
40.778,-73.975
40.72,-74.002
40.786,-73.978
40.729,-74.002
40.75,-73.978
40.846,-73.939
40.786,-73.955
40.763,-73.993
40.756,-74.005
40.746,-73.992
40.813,-73.961
40.794,-73.964
40.79,-73.952
40.776,-73.951
40.755,-73.968
40.758,-73.938
40.738,-73.974
40.775,-73.951
40.771,-73.988
40.772,-73.877
40.763,-73.959
40.773,-73.959
40.751,-73.968
40.748,-73.901
40.816,-73.947
40.717,-73.997
40.74,-73.985
40.769,-73.967
40.749,-73.97
40.783,-73.955
40.74,-73.999
40.765,-73.969
40.805,-73.966
40.759,-73.965
40.785,-73.949
40.756,-73.882
40.805,-73.968
40.781,-73.956
40.772,-73.955
40.751,-73.98
40.771,-73.917
40.721,-73.995
40.809,-73.963
40.795,-73.932
40.753,-73.999
40.76,-73.937
40.776,-73.962
40.726,-74.002
40.766,-73.978
40.761,-73.93
40.801,-73.966
40.733,-73.986
40.78,-73.948
40.769,-73.935
40.723,-73.983
40.739,-73.994
40.716,-74.008
40.732,-73.984
40.808,-73.942
40.766,-73.99
40.803,-73.953
40.758,-73.975
40.758,-73.991
40.777,-73.943
40.747,-73.973
40.781,-73.954
40.778,-73.965
40.734,-73.997
40.796,-73.939
40.756,-73.989
40.769,-73.986
40.788,-73.944
40.755,-73.998
40.821,-73.939
40.773,-73.964
40.773,-73.946
40.756,-74.003
40.822,-73.954
40.81,-73.925
40.749,-74.0
40.748,-74.003
40.775,-73.955
40.784,-73.948
40.727,-74.006
40.731,-73.994
40.843,-73.939
40.769,-73.965
40.747,-73.925
40.788,-73.969
40.748,-73.976
40.804,-73.963
40.778,-73.951
40.767,-73.912
40.684,-73.944
40.751,-73.992
40.722,-73.984
40.718,-73.832
40.726,-73.988
40.719,-73.991
40.764,-73.965
40.787,-73.942
40.723,-73.991
40.794,-73.94
40.761,-73.926
40.762,-73.937
40.79,-73.979
40.823,-73.943
40.817,-73.947
40.777,-73.948
40.819,-73.956
40.734,-73.985
40.717,-74.004
40.747,-73.895
40.798,-73.941
40.765,-73.963
40.748,-73.986
40.748,-74.007
40.743,-74.005
40.733,-73.995
40.714,-73.994
40.765,-73.956
40.756,-73.967
40.725,-74.005
40.706,-74.018
40.765,-73.971
40.732,-73.983
40.792,-73.971
40.671,-73.985
40.749,-73.981
40.848,-73.938
40.757,-73.973
40.77,-73.989
40.78,-73.983
40.779,-73.946
40.74,-74.01
40.783,-73.947
40.765,-73.985
40.719,-73.976
40.706,-73.963
40.739,-73.974
40.733,-73.98
40.778,-73.985
40.741,-73.996
40.711,-73.996
40.779,-73.98
40.713,-73.829
40.762,-73.989
40.751,-74.003
40.78,-73.973
40.802,-73.963
40.704,-74.014
40.762,-73.976
40.783,-73.954
40.747,-73.983
40.811,-73.954
40.795,-73.933
40.749,-73.919
40.787,-73.957
40.785,-73.975
40.728,-74.007
40.706,-73.951
40.767,-73.994
40.767,-73.992
40.69,-73.983
40.687,-73.962
40.703,-73.897
40.797,-73.938
40.69,-73.911
40.697,-73.993
40.709,-73.955
40.693,-73.977
40.756,-73.919
40.715,-73.955
40.797,-73.967
40.792,-73.949
40.768,-73.931
40.687,-73.966
40.798,-73.934
40.732,-73.998
40.835,-73.944
40.799,-73.953
40.821,-73.958
40.749,-73.889
40.775,-73.914
40.722,-73.981
40.728,-74.0
40.694,-73.812
40.717,-74.014
40.744,-73.976
40.714,-73.96
40.712,-73.951
40.728,-73.99
40.676,-73.999
40.762,-73.925
40.74,-74.0
40.772,-73.93
40.714,-73.942
40.687,-73.998
40.689,-73.93
40.706,-74.014
40.819,-73.941
40.718,-74.016
40.806,-73.963
40.723,-73.948
40.767,-73.924
40.744,-73.978
40.763,-73.994
40.712,-73.966
40.726,-73.974
40.763,-73.908
40.818,-73.957
40.728,-74.009
40.756,-73.884
40.668,-73.983
40.766,-73.995
40.725,-74.007
40.779,-73.901
40.602,-73.951
40.774,-73.986
40.779,-73.898
40.802,-73.948
40.769,-73.882
40.682,-73.95
40.716,-73.95
40.743,-73.892
40.69,-

2025-01-19 04:34:50 - root - INFO - SQL:
-- 14. Sample Citi Bike trips with start and end station coordinates
SELECT `start_station_name`, `end_station_name`, `start_station_latitude`, `start_station_longitude`, `end_station_latitude`, `end_station_longitude`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
start_station_name,end_station_name,start_station_latitude,start_station_longitude,end_station_latitude,end_station_longitude
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,West Thames St,40.75992262,-73.97648516,40.70834698,-74.01713445
W 52 St & 5 Ave,West Thames St,40.75992262,-73.97648516,40.70834698,-74.01713445
W 52 St & 5 Ave,West Thames St,40.75992262,-73.97648516,40.70834698,-74.01713445
W 52 St & 5 Ave,Barrow St & Hudson St,40.75992262,-73.97648516,40.73172428,-74.00674436
W 52 St & 5 Ave,W 20 St & 8 Ave,40.75992262,-73.97648516,40.74345335,-74.00004031
W 52 St & 5 Ave,W 20 St & 8 Ave,40.75992262,-73.97648516,40.74345335,-74.00004031
W 52 St & 5 Ave,W 45 St & 6 Ave,40.75992262,-73.97648516,40.7568001,-73.98291153
W 52 St & 5 Ave,W 45 St & 6 Ave,40.75992262,-73.97648516,40.7568001,-73.98291153
W 52 St & 5 Ave,W 45 St & 6 Ave,40.75992262,-73.97648516,40.7568001,-73.98291153
W 52 St & 5 Ave,E 12 St & 3 Ave,40.75992262,-73.97648516,40.73223272,-73.98889957
W 52 St & 5 Ave,E 12 St & 3 Ave,40.75992262,-73.97648516,40.73223272,-73.98889957
W 52 St & 5 Ave,Elizabeth St & Hester St,40.75992262,-73.97648516,40.717590818059804,-73.99622440338135
W 52 St & 5 Ave,Elizabeth St & Hester St,40.75992262,-73.97648516,40.717590818059804,-73.99622440338135
W 52 St & 5 Ave,Elizabeth St & Hester St,40.75992262,-73.97648516,40.717590818059804,-73.99622440338135
W 52 St & 5 Ave,1 Ave & E 16 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,1 Ave & E 16 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,1 Ave & E 16 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,1 Ave & E 15 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 27 St & 7 Ave,40.75992262,-73.97648516,40.746647,-73.993915
W 52 St & 5 Ave,W 27 St & 7 Ave,40.75992262,-73.97648516,40.746647,-73.993915
W 52 St & 5 Ave,W 43 St & 10 Ave,40.75992262,-73.97648516,40.76009437,-73.99461843
W 52 St & 5 Ave,W 43 St & 10 Ave,40.75992262

2025-01-19 04:34:53 - root - INFO - SQL:
-- 15. Get the average trip duration for each of the top 20 Citi Bike routes in 2016
SELECT `start_station_name`, `end_station_name`, AVG(`tripduration`) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
GROUP BY `start_station_name`, `end_station_name`
ORDER BY COUNT(*) DESC
LIMIT 20;
Results:
start_station_name,end_station_name,avg_trip_duration_seconds
Central Park S & 6 Ave,Central Park S & 6 Ave,2867.205310955281
Central Park S & 6 Ave,5 Ave & E 78 St,1775.894706994329
12 Ave & W 40 St,West St & Chambers St,1483.9128497152758
Centre St & Chambers St,Centre St & Chambers St,2097.8428059395806
Pershing Square North,W 33 St & 7 Ave,517.3236864287721
Pershing Square North,W 41 St & 8 Ave,466.6916236374068
W 21 St & 6 Ave,9 Ave & W 22 St,324.42355008787354
Central Park S & 6 Ave,5 Ave & E 73 St,1446.9419734904266
E 85 St & York Ave,E 85 St & 3 Ave,246.07166717279074
Yankee Ferry Terminal,Yankee Ferry Terminal,2463.2415712960096
Soissons Landing,Yankee Ferry Terminal,1527.4643304130161
Yankee Ferry Terminal,Soissons Landing,2018.6965865992415
N 6 St & Bedford Ave,Wythe Ave & Metropolitan Ave,252.93608903020652
Pershing Square North,E 24 St & Park Ave S,445.26823829244984
Pershing Square North,Broadway & W 32 St,429.8879974326058
West St & Chambers St,12 Ave & W 40 St,1520.038809831824
W 21 St & 6 Ave,W 22 St & 10 Ave,406.59627329192557
Central Park S & 6 Ave,Central Park West & W 72 St,1739.5034619188925
Central Park West & W 85 St,Central Park S & 6 Ave,1285.318473488686
Grand Army Plaza & Central Park S,Grand Army Plaza & Central Park S,2873.501200686106

2025-01-19 04:34:54 - root - INFO - SQL:
-- 16. Sample of Taxi trips with pickup and drop-off times in 2016
SELECT `pickup_datetime`, `dropoff_datetime`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
Too long, hard cut:
pickup_datetime,dropoff_datetime
2016-02-21 19:41:32+00:00,2016-02-21 19:41:32+00:00
2016-07-01 01:12:45+00:00,2016-07-01 01:12:45+00:00
2016-06-19 23:43:12+00:00,2016-06-19 23:43:47+00:00
2016-02-18 15:15:34+00:00,2016-02-18 15:20:33+00:00
2016-04-12 09:00:47+00:00,2016-04-12 09:01:14+00:00
2016-02-15 03:23:02+00:00,2016-02-15 03:23:02+00:00
2016-02-09 10:28:01+00:00,2016-02-09 10:29:07+00:00
2016-09-05 15:31:20+00:00,2016-09-05 15:34:45+00:00
2016-05-07 20:31:15+00:00,2016-05-07 20:35:50+00:00
2016-08-06 12:18:37+00:00,2016-08-06 12:18:37+00:00
2016-03-08 15:11:38+00:00,2016-03-08 15:13:06+00:00
2016-03-14 01:42:39+00:00,2016-03-14 01:42:47+00:00
2016-08-24 14:12:33+00:00,2016-08-24 14:12:41+00:00
2016-06-18 06:45:27+00:00,2016-06-18 07:06:19+00:00
2016-04-04 18:53:26+00:00,2016-04-04 18:53:31+00:00
2016-05-05 23:01:02+00:00,2016-05-05 23:01:02+00:00
2016-02-09 17:07:15+00:00,2016-02-09 17:07:15+00:00
2016-11-03 18:39:23+00:00,2016-11-03 18:39:23+00:00
2016-12-12 19:39:15+00:00,2016-12-12 19:39:15+00:00
2016-05-02 12:23:49+00:00,2016-05-02 12:23:49+00:00
2016-03-03 01:33:36+00:00,2016-03-03 01:35:37+00:00
2016-05-16 10:53:30+00:00,2016-05-16 11:10:17+00:00
2016-03-01 21:13:55+00:00,2016-03-01 21:13:55+00:00
2016-03-28 12:03:18+00:00,2016-03-28 12:10:58+00:00
2016-01-07 10:03:03+00:00,2016-01-07 10:04:28+00:00
2016-01-31 10:17:39+00:00,2016-01-31 10:17:44+00:00
2016-01-18 23:04:34+00:00,2016-01-18 23:07:27+00:00
2016-05-07 10:31:38+00:00,2016-05-07 10:31:38+00:00
2016-03-14 16:17:12+00:00,2016-03-14 16:17:12+00:00
2016-09-18 01:52:26+00:00,2016-09-18 01:52:26+00:00
2016-01-07 15:56:45+00:00,2016-01-07 15:57:14+00:00
2016-04-11 06:17:35+00:00,2016-04-11 06:17:37+00:00
2016-10-03 17:53:24+00:00,2016-10-03 18:03:07+00:00
2016-06-07 15:09:51+00:00,2016-06-07 15:10:34+00:00
2016-05-04 02:22:37+00:00,2016-05-04 02:23:02+00:00
2016-03-10 19:38:36+00:00,2016-03-10 19:38:36+00:00
2016-05-18 00:10:20+00:00,2016-05-18 00:10:20+00:00
2016-10-30 16:39:51+00:00,2016-10-30 16:39:51+00:00
2016-09-07 00:07:51+00:00,2016-09-07 00:07:51+00:00
2016-10-08 04:23:30+00:00,2016-10-08 05:47:04+00:00
2016-02-03 20:43:21+00:00,2016-02-03 20:43:58+00:00
2016-02-24 06:34:05+00:00,2016-02-24 06:34:05+00:00
2016-10-29 21:11:09+00:00,2016-10-29 21:11:09+00:00
2016-01-05 13:12:36+00:00,2016-01-05 13:12:39+00:00
2016-01-21 22:23:10+00:00,2016-01-21 22:23:10+00:00
2016-04-04 21:53:49+00:00,2016-04-04 21:53:58+00:00
2016-04-21 09:50:49+00:00,2016-04-21 09:50:49+00:00
2016-05-20 02:40:12+00:00,2016-05-20 02:40:12+00:00
2016-09-21 04:45:19+00:00,2016-09-21 04:46:56+00:00
2016-12-17 13:33:11+00:00,2016-12-17 13:33:11+00:00
2016-10-21 07:35:55+00:00,2016-10-21 07:35:55+00:00
2016-05-17 19:18:14+00:00,2016-05-17 19:18:14+00:00
2016-12-07 14:25:20+00:00,2016-12-07 14:25:20+00:00
2016-01-19 07:40:40+00:00,2016-01-19 08:05:52+00:00
2016-02-12 19:57:48+00:00,2016-02-12 20:16:13+00:00
2016-10-09 04:19:49+00:00,2016-10-09 04:19:49+00:00
2016-05-15 19:36:17+00:00,2016-05-15 19:36:23+00:00
2016-02-03 01:33:10+00:00,2016-02-03 01:33:13+00:00
2016-12-22 12:06:40+00:00,2016-12-22 12:18:57+00:00
2016-11-20 18:10:15+00:00,2016-11-20 18:10:15+00:00
2016-03-29 18:56:56+00:00,2016-03-29 18:57:17+00:00
2016-12-22 00:57:20+00:00,2016-12-22 01:10:20+00:00
2016-09-07 18:14:12+00:00,2016-09-07 18:14:12+00:00
2016-06-05 16:59:24+00:00,2016-06-05 17:07:01+00:00
2016-02-28 00:45:03+00:00,2016-02-28 00:45:59+00:00
2016-06-27 11:30:10+00:00,2016-06-27 11:30:17+00:00
2016-12-26 13:20:33+00:00,2016-12-26 13:21:32+00:00
2016-03-31 06:58:19+00:00,2016-03-31 06:58:21+00:00
2016-05-18 17:41:48+00:00,2016-05-18 17:43:34+00:00
2016-01-03 21:56:00+00:00,2016-01-03 21:56:28+00:00
2016-12-03 09:21:04+00:00,2016-12-03 09:42:25+00:00
2016-06-05 05:32:58+00:00,2016-06-05 05:33:25+00:00
2016-06-25 11:10:17+00:00,2016-06-25 11:10:17+00:00
2016-05-14 03:21:16+00:00,2016-05-14 03:21:48+00:00
2016-06-12 01:50:39+00:00,2016-06-12 01:52:50+00:00
2016-04-06 04:16:57+00:00,2016-04-06 04:36:35+00:00
2016-11-23 16:12:41+00:00,2016-11-23 16:21:36+00:00
2016-07-07 09:36:20+00:00,2016-07-07 09:41:56+00:00
2016-11-13 05:53:27+00:00,2016-11-13 05:54:22+00:00
2016-11-07 16:08:13+00:00,2016-11-07 16:10:32+00:00
2016-10-19 16:37:02+00:00,2016-10-19 16:39:08+00:00
2016-07-27 18:11:51+00:00,2016-07-27 18:12:09+00:00
2016-02-15 01:10:25+00:00,2016-02-15 01:10:45+00:00
2016-03-04 18:34:52+00:00,2016-03-04 18:35:47+00:00
2016-01-07 19:04:33+00:00,2016-01-07 19:26:16+00:00
2016-05-24 05:14:33+00:00,2016-05-24 05:15:15+00:00
2016-12-06 17:09:33+00:00,2016-12-06 17:11:21+00:00
2016-07-16 10:23:40+00:00,2016-07-16 11:38:37+00:00
2016-02-21 01:57:43+00:00,2016-02-21 01:58:54+00:00
2016-03-14 20:07:27+00:00,2016-03-14 20:07:27+00:00
2016-01-15 17:01:13+00:00,2016-01-15 17:01:57+00:00
2016-09-02 19:51:38+00:00,2016-09-02 19:52:14+00:00
2016-08-08 11:31:34+00:00,2016-08-08 11:55:19+00:00
2016-04-15 02:15:13+00:00,2016-04-15 02:31:07+00:00
2016-12-21 15:54:41+00:00,2016-12-21 15:58:52+00:00
2016-12-29 16:18:28+00:00,2

2025-01-19 04:35:01 - root - INFO - SQL:
-- 17. Get count of Taxi trips per pickup/drop-off coordinate pair rounded to 3 decimals in 2016
SELECT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude,
       ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude,
       COUNT(*) AS trip_count
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
GROUP BY pickup_latitude, pickup_longitude, dropoff_latitude, dropoff_longitude
LIMIT 1000;
Results:
Too long, hard cut:
pickup_latitude,pickup_longitude,dropoff_latitude,dropoff_longitude,trip_count
40.711,-73.951,40.65,-74.009,1
40.769,-73.863,40.78,-73.947,123
40.723,-73.994,40.762,-73.927,2
40.774,-73.873,40.742,-73.978,128
40.774,-73.871,40.761,-73.97,186
40.74,-73.989,40.807,-73.943,1
40.749,-73.991,40.714,-74.016,3
40.749,-74.008,40.762,-73.971,1
40.749,-73.978,40.774,-73.872,87
40.752,-73.976,40.772,-73.885,8
40.714,-74.016,40.76,-73.974,6
40.739,-74.003,40.718,-73.949,2
40.735,-73.99,40.762,-73.994,19
40.773,-73.885,40.738,-73.981,34
40.723,-73.989,40.658,-73.983,1
40.773,-73.967,40.703,-74.012,2
40.761,-73.969,40.744,-74.003,18
40.763,-73.99,40.86,-73.931,1
40.727,-74.003,40.645,-74.001,1
40.711,-74.016,40.778,-73.95,9
40.848,-73.935,40.753,-73.975,1
40.77,-73.863,40.702,-73.93,7
40.76,-73.981,40.708,-74.01,3
40.742,-73.981,40.768,-73.876,1
40.74,-73.976,40.738,-73.869,1
40.764,-73.959,40.735,-74.007,3
40.82,-73.955,40.744,-73.894,1
40.774,-73.871,40.694,-73.934,11
40.781,-73.973,40.775,-73.915,1
40.764,-73.962,40.717,-74.013,3
40.743,-74.004,40.684,-73.909,1
40.794,-73.94,40.708,-74.003,1
40.755,-73.984,40.715,-74.015,13
40.74,-73.982,40.795,-73.963,1
40.779,-73.982,40.725,-73.997,16
40.8,-73.968,40.723,-74.009,2
40.718,-74.014,40.717,-74.014,7
40.774,-73.873,40.718,-73.964,34
40.769,-73.863,40.829,-73.948,25
40.749,-73.976,40.691,-73.972,1
40.72,-74.006,40.775,-73.948,3
40.753,-73.975,40.768,-73.861,30
40.837,-73.943,40.723,-74.007,2
40.768,-73.953,40.812,-73.921,2
40.739,-73.977,40.794,-73.972,2
40.769,-73.956,40.769,-73.864,1
40.762,-73.99,40.672,-73.984,2
40.714,-73.961,40.636,-73.978,1
40.729,-74.005,40.727,-73.875,1
40.76,-73.986,40.847,-73.938,11
40.766,-73.969,40.71,-74.016,2
40.787,-73.95,40.728,-74.0,5
40.782,-73.96,40.729,-74.005,3
40.774,-73.871,40.744,-73.986,311
40.77,-73.864,40.766,-73.959,21
40.708,-74.005,40.777,-73.951,5
40.726,-74.004,40.829,-73.941,5
40.726,-73.987,40.766,-73.877,1
40.719,-74.004,40.748,-73.88,1
40.766,-73.96,40.768,-73.959,9
40.774,-73.873,40.744,-74.0,50
40.77,-73.864,40.757,-73.99,147
40.75,-74.002,40.701,-73.925,1
40.769,-73.863,40.715,-73.982,8
40.649,-73.97,40.726,-73.992,1
40.773,-73.979,40.711,-73.947,1
40.756,-73.969,40.697,-73.953,2
40.774,-73.873,40.765,-73.981,892
40.774,-73.873,40.787,-73.979,74
40.77,-73.864,40.773,-73.947,51
40.751,-73.991,40.774,-73.873,86
40.764,-73.963,40.77,-73.865,15
40.77,-73.864,40.716,-73.99,7
40.744,-73.992,40.771,-73.865,72
40.73,-74.001,40.687,-73.91,2
40.675,-73.985,40.772,-73.956,7
40.774,-73.871,40.751,-73.987,204
40.774,-73.87,40.738,-73.998,1
40.774,-73.871,40.759,-73.994,72
40.709,-74.017,40.766,-73.978,2
40.77,-73.864,40.757,-73.971,179
40.77,-73.863,40.647,-73.788,12
40.722,-74.005,40.771,-73.982,6
40.646,-73.777,40.699,-73.924,1
40.704,-74.012,40.75,-73.994,16
40.774,-73.873,40.647,-73.79,1016
40.77,-73.864,40.674,-73.963,12
40.73,-73.998,40.807,-73.953,1
40.771,-73.865,40.73,-73.986,1
40.725,-73.987,40.775,-73.872,3
40.764,-73.979,40.771,-73.865,171
40.774,-73.871,40.726,-74.006,267
40.766,-73.983,40.884,-73.893,1
40.778,-73.979,40.718,-73.957,1
40.77,-73.864,40.711,-74.005,25
40.769,-73.863,40.78,-73.984,78
40.747,-73.99,40.714,-73.83,1
40.647,-73.79,40.687,-73.94,1
40.745,-73.985,40.77,-73.865,97
40.745,-74.009,40.735,-73.867,1
40.703,-74.012,40.773,-73.87,14
40.77,-73.866,40.693,-73.989,2
40.77,-73.864,40.758,-73.975,446
40.645,-73.782,40.723,-73.87,6
40.642,-73.788,40.67,-73.948,4
40.752,-73.992,40.774,-73.873,45
40.748,-73.977,40.776,-73.792,1
40.647,-73.79,40.777,-73.701,1
40.754,-73.943,40.788,-73.837,1
40.774,-73.873,40.635,-73.965,3
40.647,-73.79,40.64,-73.957,6
40.644,-73.79,40.699,-73.93,3
40.703,-74.011,40.713,-74.036,1
40.841,-73.94,40.916,-74.058,1
40.746,-73.994,40.823,-73.81,1
40.746,-73.979,40.642,-73.789,17
40.77,-73.966,40.642,-73.789,1
40.647,-73.779,40.707,-74.016,4
40.645,-73.782,40.763,-73.962,88
40.745,-73.991,40.645,-73.779,8
40.645,-73.782,40.761,-73.958,160
40.75,-73.972,40.644,-73.783,189
40.645,-73.781,40.706,-74.009,23
40.762,-73.985,40.644,-73.79,47
40.647,-73.79,40.71,-74.008,14
40.755,-73.981,40.647,-73.79,81
40.771,-73.866,40.756,-73.987,18
40.647,-73.789,40.71,-74.015,30
40.647,-73.79,40.751,-73.974,164
40.727,-74.005,40.726,-74.006,14
40.646,-73.777,40.777,-73.962,6
40.753,-73.967,40.758,-73.96,12
40.655,-73.79,40.766,-73.963,1
40.778,-73.985,40.644,-73.784,5
40.643,-73.79,40.768,-73.985,57
40.641,-73.788,40.73,-73.878,1
40.765,-73.98,40.765,-73.98,219
40.645,-73.782,40.727,-73.988,36
40.647,-73.778,40.726,-74.001,5
40.646,-73.792,40.708,-74.008,1
40.645,-73.782,40.743,-73.985,35
40.649,-73.784,40.745,-74.001,6
40.765,-73.992,40.644,-73.783,22
40.645,-73.777,40.748,-73.978,112
40.77,-73.98,40.669,-73.801,1
40.642,-73.789,40.777,-73.955,4
40.644,-73.79,40.74,-74.001,12
40.79,-73.966,40.647,-73.789,6
40.641,-73.788,40.762,-73.996,1
40.646,-73.791,40.786,-73.954,2
40.707,-74.006,40.647,-73.788,2
40.761,-73.957,40.664,-73.803,1
40.765,-73.975,40.648,-73.787,12
0.0,0.0,40.769,-73.862,114
40.72,-7

2025-01-19 04:35:03 - root - INFO - SQL:
-- 18. Get sample user types from Citi Bike trips in 2016
SELECT DISTINCT `usertype`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Results:
usertype
Customer
Subscriber

2025-01-19 04:35:05 - root - INFO - SQL:
-- 19. Get sample passenger counts from Taxi trips in 2016
SELECT `passenger_count`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Results:
passenger_count
1
1
1
1
1
1
1
1
2
1
1
1
1
1
1
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
0
1
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
4
2
2
1
2
1
1
2
2
1
5
1
1
1
2
1
1
1
1
1
3
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
2
3
3
1
1
1
1
1
1
1
1
1
1
4
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0
1
1
0
1
1
1
1
1
1
1
3
1
2
1
1
1
2
1
1
1
1
1
1
2
1
2
1
2
1
1
1
1
1
1
1
2
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
2
2
1
2
1
2
1
1
1
1
4
2
1
1
1
1
1
2
2
1
1
1
2
5
1
1
1
1
1
2
2
1
1
2
1
1
1
1
1
1
1
1
1
1
4
1
1
3
1
1
4
2
1
2
1
1
1
1
1
1
2
1
2
1
1
1
1
1
1
3
1
1
1
1
1
1
1
1
2
2
1
1
1
3
2
1
2
1
1
1
1
1
1
1
2
1
1
1
1
1
1
1
1
6
1
1
2
1
1
1
1
1
1
1
6
1
6
1
1
1
1
3
1
1
2
1
1
1
1
1
5
1
1
1
1
1
5
1
2
5
1
1
1
1
1
1
2
1
1
1
4
1
2
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
1
1
1
1
1
2
1
6
1
1
1
1
1
1
1
1
2
1
1
3
1
1
1
1
1
1
1
1
1
1
2
1
1
1
4
1
4
1
1
3
1
1
1
1
1
1
1
1
3
1
3
1
1
1
1
1
2
3
1
1
1
1
1
1
1
1
2
1
1
1
1
1
2
1
3
1
1
1
1
5
1
6
1
1
1
1
1
1
2
1
1
1
1
5
1
1
1
1
3
2
2
1
4
1
3
5
1
1
1
1
1
1
1
1
1
1
4
3
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
2
5
1
1
1
2
1
1
1
1
1
1
1
1
1
1
1
3
1
1
1
2
1
1
1
2
1
1
1
1
2
1
1
1
1
2
1
5
1
1
1
1
1
1
1
1
1
1
5
1
1
1
1
1
2
1
1
1
1
1
1
1
1
2
1
1
1
3
1
1
4
1
1
1
1
1
1
1
1
1
1
5
1
1
1
1
1
5
1
1
6
1
1
1
1
1
1
1
1
1
1
1
4
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
4
1
6
1
2
1
1
5
1
1
2
1
2
1
4
1
1
1
1
1
1
6
1
1
1
1
2
2
5
1
1
1
2
1
1
1
1
1
1
1
1
1
1
2
1
1
1
1
1
2
1
1
2
1
1
1
1
1
2
1
1
1
1
1
1
1
2
1
1
1
1
1
2
1
1
1
1
2
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
2
1
1
1
1
1
1
1
3
1
1
1
1
1
1
1
1
2
1
6
1
1
1
1
1
1
1
1
5
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
6
1
2
5
1
1
1
1
1
2
1
3
1
2
5
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
3
1
1
1
1
1
1
5
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
1
1
1
1
1
1
1
1
1
2
2
1
2
1
1
1
1
1
1
1
1
1
1
1
2
1
1
5
1
1
1
2
1
1
1
1
1
1
1
1
1
1
2
5
1
1
1
1
1
4
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
3
2
1
1
1
1
1
3
4
1
1
1
1
1
3
1
1
1
1
1
1
1
2
5
1
1
1
5
1
6
1
1
1
1
1
1
1
1
5
1
1
1
1
1
1
1
1
6
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
3
1
3
2
1
1
1
1
1
1
1

2025-01-19 04:35:08 - root - INFO - SQL:
-- 20. Get average trip distances for Taxi trips in 2016
SELECT AVG(`trip_distance`) AS avg_trip_distance_miles
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016;
Results:
avg_trip_distance_miles
4.768565009352372

2025-01-19 04:35:08 - root - INFO - itercount: 0
2025-01-19 04:35:08 - root - INFO - Database Name: bigquery-public-data
Schema Name: new_york
DDL describes table information.
,0
table_name,tlc_yellow_trips_2016
ddl,"CREATE TABLE `bigquery-public-data.new_york.tlc_yellow_trips_2016`
(
  vendor_id STRING NOT NULL OPTIONS(description=""A code indicating the TPEP provider that provided the record. 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc""),
  pickup_datetime TIMESTAMP OPTIONS(description=""The date and time when the meter was engaged.""),
  dropoff_datetime TIMESTAMP OPTIONS(description=""The date and time when the meter was disengaged.""),
  passenger_count INT64 OPTIONS(description=""The number of passengers in the vehicle. This is a driver-entered value""),
  trip_distance FLOAT64 OPTIONS(description=""The elapsed trip distance in miles reported by the taximeter.""),
  pickup_longitude FLOAT64 OPTIONS(description=""Longitude where the meter was engaged.""),
  pickup_latitude FLOAT64 OPTIONS(description=""Latitude where the meter was engaged.""),
  rate_code INT64 OPTIONS(description=""The final rate code in effect at the end of the trip. 1= Standard rate 2=JFK 3=Newark 4=Nassau or Westchester 5=Negotiated fare 6=Group ride""),
  store_and_fwd_flag STRING OPTIONS(description=""This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka “store and forward,” because the vehicle did not have a connection to the server. Y= store and forward trip N= not a store and forward trip""),
  dropoff_longitude FLOAT64 OPTIONS(description=""Longitude where the meter was disengaged""),
  dropoff_latitude FLOAT64 OPTIONS(description=""Latitude where the meter was disengaged.""),
  payment_type STRING OPTIONS(description=""A numeric code signifying how the passenger paid for the trip. 1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip""),
  fare_amount FLOAT64 OPTIONS(description=""The time-and-distance fare calculated by the meter""),
  extra FLOAT64 OPTIONS(description=""Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges.""),
  mta_tax FLOAT64 OPTIONS(description=""$0.50 MTA tax that is automatically triggered based on the metered rate in use""),
  tip_amount FLOAT64 OPTIONS(description=""Tip amount – This field is automatically populated for credit card tips. Cash tips are not included""),
  tolls_amount FLOAT64 OPTIONS(description=""Total amount of all tolls paid in trip.""),
  imp_surcharge FLOAT64 OPTIONS(description=""$0.30 improvement surcharge assessed trips at the flag drop. The improvement surcharge began being levied in 2015.""),
  total_amount FLOAT64 OPTIONS(description=""The total amount charged to passengers. Does not include cash tips"")
);"

Some other tables have the similar structure: ['tlc_yellow_trips_2016', 'tlc_yellow_trips_2014', 'tlc_yellow_trips_2010', 'tlc_yellow_trips_2009', 'tlc_yellow_trips_2012', 'tlc_yellow_trips_2015', 'tlc_yellow_trips_2011', 'tlc_yellow_trips_2013']
,1
table_name,tree_census_1995
ddl,"CREATE TABLE `bigquery-public-data.new_york.tree_census_1995`
(
  recordid INT64,
  address STRING,
  house_number STRING,
  street STRING,
  zip_original INT64,
  cb_original INT64,
  site STRING,
  species STRING,
  diameter INT64,
  status STRING,
  wires STRING,
  sidewalk_condition STRING,
  support_structure STRING,
  borough STRING,
  x FLOAT64,
  y FLOAT64,
  longitude FLOAT64,
  latitude FLOAT64,
  cb_new INT64,
  zip_new INT64,
  censustract_2010 STRING,
  censusblock_2010 STRING,
  nta_2010 STRING,
  segmentid INT64,
  spc_common STRING,
  spc_latin STRING,
  location STRING
);"

Some other tables have the similar structure: ['tree_census_1995', 'tree_census_2005', 'tree_census_2015']
,2
table_name,tlc_fhv_trips_2016
ddl,"CREATE TABLE `bigquery-public-data.new_york.tlc_fhv_trips_2016`
(
  location_id INT64 OPTIONS(description=""The TLC taxi zone of the trip pick-up""),
  pickup_datetime TIMESTAMP OPTIONS(description=""The date and time of the trip pick-up.""),
  dispatching_base_num STRING OPTIONS(description=""The TLC Base License Number of the base that dispatched the trip.""),
  borough STRING OPTIONS(description=""""),
  zone STRING OPTIONS(description=""""),
  service_zone STRING OPTIONS(description="""")
);"

Some other tables have the similar structure: ['tlc_fhv_trips_2016', 'tlc_fhv_trips_2015']
,3
table_name,tlc_green_trips_2013
ddl,"CREATE TABLE `bigquery-public-data.new_york.tlc_green_trips_2013`
(
  vendor_id STRING NOT NULL OPTIONS(description=""A code indicating the LPEP provider that provided the record. 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc.""),
  pickup_datetime TIMESTAMP OPTIONS(description=""The date and time when the meter was engaged.""),
  dropoff_datetime TIMESTAMP OPTIONS(description=""The date and time when the meter was disengaged.""),
  store_and_fwd_flag STRING OPTIONS(description=""This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka “store and forward,” because the vehicle did not have a connection to the server. Y= store and forward trip N= not a store and forward trip""),
  rate_code INT64 OPTIONS(description=""The final rate code in effect at the end of the trip. 1= Standard rate 2=JFK 3=Newark 4=Nassau or Westchester 5=Negotiated fare 6=Group ride""),
  pickup_longitude FLOAT64 OPTIONS(description=""Longitude where the meter was engaged.""),
  pickup_latitude FLOAT64 OPTIONS(description=""Latitude where the meter was engaged.""),
  dropoff_longitude FLOAT64 OPTIONS(description=""Longitude where the meter was timed off""),
  dropoff_latitude FLOAT64 OPTIONS(description=""Latitude where the meter was timed off.""),
  passenger_count INT64 OPTIONS(description=""The number of passengers in the vehicle. This is a driver-entered value""),
  trip_distance FLOAT64 OPTIONS(description=""The elapsed trip distance in miles reported by the taximeter""),
  fare_amount FLOAT64 OPTIONS(description=""The time-and-distance fare calculated by the meter""),
  extra FLOAT64 OPTIONS(description=""Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges""),
  mta_tax FLOAT64 OPTIONS(description=""$0.50 MTA tax that is automatically triggered based on the metered rate in use.""),
  tip_amount FLOAT64 OPTIONS(description=""Tip amount – This field is automatically populated for credit card tips. Cash tips are not included.""),
  tolls_amount FLOAT64 OPTIONS(description=""Total amount of all tolls paid in trip""),
  ehail_fee FLOAT64 OPTIONS(description=""""),
  total_amount FLOAT64 OPTIONS(description=""The total amount charged to passengers. Does not include cash tips""),
  payment_type INT64 OPTIONS(description=""A numeric code signifying how the passenger paid for the trip. 1= Credit card 2= Cash 3= No charge 4= Dispute 5= Unknown 6= Voided trip""),
  distance_between_service FLOAT64 OPTIONS(description=""""),
  time_between_service INT64 OPTIONS(description=""""),
  trip_type INT64 OPTIONS(description=""A code indicating whether the trip was a street-hail or a dispatch that is automatically assigned based on the metered rate in use but can be altered by the driver. 1= Street-hail 2= Dispatch""),
  imp_surcharge FLOAT64 OPTIONS(description=""$0.30 improvement surcharge assessed on hailed trips at the flag drop. The improvement surcharge began being levied in 2015."")
);"

Some other tables have the similar structure: ['tlc_green_trips_2013', 'tlc_green_trips_2014', 'tlc_green_trips_2016', 'tlc_green_trips_2015']
,4
table_name,citibike_stations
ddl,"CREATE TABLE `bigquery-public-data.new_york.citibike_stations`
(
  station_id STRING NOT NULL OPTIONS(description=""Unique identifier of a station.""),
  name STRING OPTIONS(description=""Public name of the station.""),
  short_name STRING OPTIONS(description=""Short name or other type of identifier, as used by the data publisher.""),
  latitude FLOAT64 OPTIONS(description=""The latitude of station. The field value must be a valid WGS 84 latitude in decimal degrees format.""),
  longitude FLOAT64 OPTIONS(description=""The longitude of station. The field value must be a valid WGS 84 latitude in decimal degrees format.""),
  region_id INT64 OPTIONS(description=""ID of the region where station is located.""),
  rental_methods STRING OPTIONS(description=""Array of enumerables containing the payment methods accepted at this station.""),
  capacity INT64 OPTIONS(description=""ANumber of total docking points installed at this station, both available and unavailable.""),
  eightd_has_key_dispenser BOOL OPTIONS(description=""""),
  num_bikes_available INT64 OPTIONS(description=""Number of bikes available for rental.""),
  num_bikes_disabled INT64 OPTIONS(description=""Number of disabled bikes at the station.""),
  num_docks_available INT64 OPTIONS(description=""Number of docks accepting bike returns.""),
  num_docks_disabled INT64 OPTIONS(description=""Number of empty but disabled dock points at the station.""),
  is_installed BOOL OPTIONS(description=""Is the station currently on the street?""),
  is_renting BOOL OPTIONS(description=""Is the station currently renting bikes?""),
  is_returning BOOL OPTIONS(description=""Is the station accepting bike returns?""),
  eightd_has_available_keys BOOL OPTIONS(description=""""),
  last_reported TIMESTAMP OPTIONS(description=""Timestamp indicating the last time this station reported its status to the backend, in NYC local time."")
);"

,5
table_name,tree_species
ddl,"CREATE TABLE `bigquery-public-data.new_york.tree_species`
(
  species_scientific_name STRING OPTIONS(description=""""),
  species_common_name STRING OPTIONS(description=""""),
  form STRING OPTIONS(description=""""),
  growth_rate STRING OPTIONS(description=""""),
  fall_color STRING OPTIONS(description=""""),
  environmental_tolerances STRING OPTIONS(description=""""),
  location_tolerances STRING OPTIONS(description=""""),
  notes_suggested_cultivars STRING OPTIONS(description=""""),
  tree_size STRING OPTIONS(description=""""),
  comments STRING OPTIONS(description="""")
);"

,6
table_name,citibike_trips
ddl,"CREATE TABLE `bigquery-public-data.new_york.citibike_trips`
(
  tripduration INT64 OPTIONS(description=""Trip Duration (in seconds)""),
  starttime TIMESTAMP OPTIONS(description=""Start Time""),
  stoptime TIMESTAMP OPTIONS(description=""Stop Time""),
  start_station_id INT64 OPTIONS(description=""Start Station ID""),
  start_station_name STRING OPTIONS(description=""Start Station Name""),
  start_station_latitude FLOAT64 OPTIONS(description=""Start Station Latitude""),
  start_station_longitude FLOAT64 OPTIONS(description=""Start Station Longitude""),
  end_station_id INT64 OPTIONS(description=""End Station ID""),
  end_station_name STRING OPTIONS(description=""End Station Name""),
  end_station_latitude FLOAT64 OPTIONS(description=""End Station Latitude""),
  end_station_longitude FLOAT64 OPTIONS(description=""End Station Longitude""),
  bikeid INT64 OPTIONS(description=""Bike ID""),
  usertype STRING OPTIONS(description=""User Type (Customer = 24-hour pass or 7-day pass user, Subscriber = Annual Member)""),
  birth_year INT64 OPTIONS(description=""Year of Birth""),
  gender STRING OPTIONS(description=""Gender (unknown, male, female)"")
);"

,7
table_name,311_service_requests
ddl,"CREATE TABLE `bigquery-public-data.new_york.311_service_requests`
(
  unique_key INT64 OPTIONS(description=""""),
  created_date TIMESTAMP OPTIONS(description=""""),
  closed_date TIMESTAMP OPTIONS(description=""""),
  agency STRING OPTIONS(description=""""),
  agency_name STRING OPTIONS(description=""""),
  complaint_type STRING OPTIONS(description=""""),
  descriptor STRING OPTIONS(description=""""),
  location_type STRING OPTIONS(description=""""),
  incident_zip STRING OPTIONS(description=""""),
  incident_address STRING OPTIONS(description=""""),
  street_name STRING OPTIONS(description=""""),
  cross_street_1 STRING OPTIONS(description=""""),
  cross_street_2 STRING OPTIONS(description=""""),
  intersection_street_1 STRING OPTIONS(description=""""),
  intersection_street_2 STRING OPTIONS(description=""""),
  address_type STRING OPTIONS(description=""""),
  city STRING OPTIONS(description=""""),
  landmark STRING OPTIONS(description=""""),
  facility_type STRING OPTIONS(description=""""),
  status STRING OPTIONS(description=""""),
  due_date TIMESTAMP OPTIONS(description=""""),
  resolution_description STRING OPTIONS(description=""""),
  resolution_action_updated_date TIMESTAMP OPTIONS(description=""""),
  community_board STRING OPTIONS(description=""""),
  borough STRING OPTIONS(description=""""),
  x_coordinate INT64 OPTIONS(description=""""),
  y_coordinate INT64 OPTIONS(description=""""),
  park_facility_name STRING OPTIONS(description=""""),
  park_borough STRING OPTIONS(description=""""),
  bbl INT64 OPTIONS(description=""""),
  open_data_channel_type STRING OPTIONS(description=""""),
  vehicle_type STRING OPTIONS(description=""""),
  taxi_company_borough STRING OPTIONS(description=""""),
  taxi_pickup_location STRING OPTIONS(description=""""),
  bridge_highway_name STRING OPTIONS(description=""""),
  bridge_highway_direction STRING OPTIONS(description=""""),
  road_ramp STRING OPTIONS(description=""""),
  bridge_highway_segment STRING OPTIONS(description=""""),
  latitude FLOAT64 OPTIONS(description=""""),
  longitude FLOAT64 OPTIONS(description=""""),
  location STRING OPTIONS(description="""")
)
OPTIONS(
  description=""NYC 311 service requests logs""
);"

,8
table_name,nypd_mv_collisions
ddl,"CREATE TABLE `bigquery-public-data.new_york.nypd_mv_collisions`
(
  borough STRING OPTIONS(description=""""),
  contributing_factor_vehicle_1 STRING OPTIONS(description=""""),
  contributing_factor_vehicle_2 STRING OPTIONS(description=""""),
  contributing_factor_vehicle_3 STRING OPTIONS(description=""""),
  contributing_factor_vehicle_4 STRING OPTIONS(description=""""),
  contributing_factor_vehicle_5 STRING OPTIONS(description=""""),
  cross_street_name STRING OPTIONS(description=""""),
  timestamp TIMESTAMP OPTIONS(description=""""),
  latitude FLOAT64 OPTIONS(description=""""),
  longitude FLOAT64 OPTIONS(description=""""),
  location STRING OPTIONS(description=""""),
  number_of_cyclist_injured INT64 OPTIONS(description=""""),
  number_of_cyclist_killed INT64 OPTIONS(description=""""),
  number_of_motorist_injured INT64 OPTIONS(description=""""),
  number_of_motorist_killed INT64 OPTIONS(description=""""),
  number_of_pedestrians_injured INT64 OPTIONS(description=""""),
  number_of_pedestrians_killed INT64 OPTIONS(description=""""),
  number_of_persons_injured INT64 OPTIONS(description=""""),
  number_of_persons_killed INT64 OPTIONS(description=""""),
  off_street_name STRING OPTIONS(description=""""),
  on_street_name STRING OPTIONS(description=""""),
  unique_key INT64 NOT NULL OPTIONS(description=""""),
  vehicle_type_code1 STRING OPTIONS(description=""""),
  vehicle_type_code2 STRING OPTIONS(description=""""),
  vehicle_type_code_3 STRING OPTIONS(description=""""),
  vehicle_type_code_4 STRING OPTIONS(description=""""),
  vehicle_type_code_5 STRING OPTIONS(description=""""),
  zip_code INT64 OPTIONS(description="""")
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'new_york': ['311_service_requests', 'citibike_stations', 'citibike_trips', 'nypd_mv_collisions', 'tlc_fhv_trips_2015', 'tlc_fhv_trips_2016', 'tlc_green_trips_2013', 'tlc_green_trips_2014', 'tlc_green_trips_2015', 'tlc_green_trips_2016', 'tlc_yellow_trips_2009', 'tlc_yellow_trips_2010', 'tlc_yellow_trips_2011', 'tlc_yellow_trips_2012', 'tlc_yellow_trips_2013', 'tlc_yellow_trips_2014', 'tlc_yellow_trips_2015', 'tlc_yellow_trips_2016', 'tree_census_1995', 'tree_census_2005', 'tree_census_2015', 'tree_species']}}
Begin Exploring Related Columns
**Considered Tables and Columns:**

**Table**: `bigquery-public-data.new_york.citibike_trips`

- `starttime`: Potential usage - to filter trips that occurred in 2016.
- `start_station_name`: Potential usage - to identify the starting station of bike trips.
- `end_station_name`: Potential usage - to identify the ending station of bike trips.
- `tripduration`: Potential usage - to calculate the duration of bike trips.
- `start_station_latitude`, `start_station_longitude`: Potential usage - geographical coordinates of the start station.
- `end_station_latitude`, `end_station_longitude`: Potential usage - geographical coordinates of the end station.

**Table**: `bigquery-public-data.new_york.tlc_yellow_trips_2016`

- `pickup_datetime`: Potential usage - to filter trips that occurred in 2016.
- `pickup_longitude`, `pickup_latitude`: Potential usage - geographical coordinates of the pickup location.
- `dropoff_longitude`, `dropoff_latitude`: Potential usage - geographical coordinates of the drop-off location.
- `trip_distance`: Potential usage - to understand the distance of taxi trips.
- `dropoff_datetime`: Potential usage - to calculate the duration of taxi trips.

**Conditions that may be used:**

- Filter trips to those that occurred in 2016.
- For Citi Bike trips: `EXTRACT(YEAR FROM starttime) = 2016`.
- For Taxi trips: `EXTRACT(YEAR FROM pickup_datetime) = 2016`.
- Identify the top 20 most frequent Citi Bike routes based on `start_station_name` and `end_station_name`.
- Compare average durations of bike trips and taxi trips for the same routes.
- Round coordinates to three decimals to match locations.

---

**SQL Queries:**

```sql
-- 1. Get distinct years from Citi Bike trips to confirm available data years
SELECT DISTINCT EXTRACT(YEAR FROM `starttime`) AS year
FROM `bigquery-public-data.new_york.citibike_trips`
LIMIT 1000;
```

```sql
-- 2. List the top 20 most frequent Citi Bike routes in 2016
SELECT `start_station_name`, `end_station_name`, COUNT(*) AS trip_count
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
GROUP BY `start_station_name`, `end_station_name`
ORDER BY trip_count DESC
LIMIT 20;
```

```sql
-- 3. Sample Citi Bike trip durations in 2016
SELECT `tripduration`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
```

```sql
-- 4. Get distinct start station names from Citi Bike trips in 2016
SELECT DISTINCT `start_station_name`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
```

```sql
-- 5. Get distinct end station names from Citi Bike trips in 2016
SELECT DISTINCT `end_station_name`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
```

```sql
-- 6. Calculate average trip duration for Citi Bike trips in 2016
SELECT AVG(`tripduration`) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016;
```

```sql
-- 7. Get sample taxi trip durations in 2016
SELECT TIMESTAMP_DIFF(`dropoff_datetime`, `pickup_datetime`, SECOND) AS trip_duration_seconds
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 8. Get sample taxi trip distances in 2016
SELECT `trip_distance`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 9. Get distinct rounded pickup and drop-off coordinates from Taxi trips in 2016
SELECT DISTINCT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude,
       ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 10. Sample of Taxi trips starting and ending near specific coordinates (rounded to 3 decimals)
SELECT `pickup_latitude`, `pickup_longitude`, `dropoff_latitude`, `dropoff_longitude`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
  AND ROUND(`pickup_latitude`, 3) = 40.751
  AND ROUND(`pickup_longitude`, 3) = -73.977
  AND ROUND(`dropoff_latitude`, 3) = 40.749
  AND ROUND(`dropoff_longitude`, 3) = -73.991
LIMIT 1000;
```

```sql
-- 11. Get average trip duration for Taxi trips in 2016
SELECT AVG(TIMESTAMP_DIFF(`dropoff_datetime`, `pickup_datetime`, SECOND)) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016;
```

```sql
-- 12. List distinct Taxi pickup locations rounded to 3 decimals in 2016
SELECT DISTINCT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 13. List distinct Taxi drop-off locations rounded to 3 decimals in 2016
SELECT DISTINCT ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 14. Sample Citi Bike trips with start and end station coordinates
SELECT `start_station_name`, `end_station_name`, `start_station_latitude`, `start_station_longitude`, `end_station_latitude`, `end_station_longitude`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
```

```sql
-- 15. Get the average trip duration for each of the top 20 Citi Bike routes in 2016
SELECT `start_station_name`, `end_station_name`, AVG(`tripduration`) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
GROUP BY `start_station_name`, `end_station_name`
ORDER BY COUNT(*) DESC
LIMIT 20;
```

```sql
-- 16. Sample of Taxi trips with pickup and drop-off times in 2016
SELECT `pickup_datetime`, `dropoff_datetime`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 17. Get count of Taxi trips per pickup/drop-off coordinate pair rounded to 3 decimals in 2016
SELECT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude,
       ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude,
       COUNT(*) AS trip_count
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
GROUP BY pickup_latitude, pickup_longitude, dropoff_latitude, dropoff_longitude
LIMIT 1000;
```

```sql
-- 18. Get sample user types from Citi Bike trips in 2016
SELECT DISTINCT `usertype`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
```

```sql
-- 19. Get sample passenger counts from Taxi trips in 2016
SELECT `passenger_count`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
```

```sql
-- 20. Get average trip distances for Taxi trips in 2016
SELECT AVG(`trip_distance`) AS avg_trip_distance_miles
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016;
```

These queries help in understanding the data distribution, identifying key columns, and preparing for further analysis to solve the task.Query:
-- 1. Get distinct years from Citi Bike trips to confirm available data years
SELECT DISTINCT EXTRACT(YEAR FROM `starttime`) AS year
FROM `bigquery-public-data.new_york.citibike_trips`
LIMIT 1000;
Answer:
year
2013
2014
2015
2016
Query:
-- 2. List the top 20 most frequent Citi Bike routes in 2016
SELECT `start_station_name`, `end_station_name`, COUNT(*) AS trip_count
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
GROUP BY `start_station_name`, `end_station_name`
ORDER BY trip_count DESC
LIMIT 20;
Answer:
start_station_name,end_station_name,trip_count
Central Park S & 6 Ave,Central Park S & 6 Ave,8699
Central Park S & 6 Ave,5 Ave & E 78 St,5290
12 Ave & W 40 St,West St & Chambers St,4039
Centre St & Chambers St,Centre St & Chambers St,3906
Pershing Square North,W 33 St & 7 Ave,3559
Pershing Square North,W 41 St & 8 Ave,3486
W 21 St & 6 Ave,9 Ave & W 22 St,3414
Central Park S & 6 Ave,5 Ave & E 73 St,3395
E 85 St & York Ave,E 85 St & 3 Ave,3293
Yankee Ferry Terminal,Yankee Ferry Terminal,3233
Soissons Landing,Yankee Ferry Terminal,3196
Yankee Ferry Terminal,Soissons Landing,3164
N 6 St & Bedford Ave,Wythe Ave & Metropolitan Ave,3145
Pershing Square North,E 24 St & Park Ave S,3139
Pershing Square North,Broadway & W 32 St,3116
West St & Chambers St,12 Ave & W 40 St,3092
W 21 St & 6 Ave,W 22 St & 10 Ave,3059
Central Park S & 6 Ave,Central Park West & W 72 St,3033
Central Park West & W 85 St,Central Park S & 6 Ave,2961
Grand Army Plaza & Central Park S,Grand Army Plaza & Central Park S,2915
Query:
-- 3. Sample Citi Bike trip durations in 2016
SELECT `tripduration`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Answer:
tripduration
1819
1024
2352
605
650
2532
4071
1336
1281
374
722
324
1233
1299
724
552
907
4942
474
2365
424
548
524
662
404
486
628
373
396
468
418
4407
2565
2265
248
3672
133
137
1620
778
404
175
1006
171
800
1396
2177
938
1308
238
276
995
282
337
297
1194
313
186
302
546
350
584
2472
2329
105
45140
111
117
698
106
100
126
103
111
97
150
701
196
146
104
87
96
93
113
1641
786
1556
604
229
104
137
508
10235
1925
1004
1070
1955
934
870
1492
1434
876
1209
544
598
540
1607
1389
1716
3756
1036
2101
1754
992
1646
1277
497
445
681
866
628
503
606
682
553
1796
1257
1735
870
1931
681
606
487
437
716
412
430
667
299
331
372
351
313
776
1487
380
333
160
215
825
843
2026
624
818
876
672
1146
696
557
2438
1346
550
360
1148
535
1149
549
956
407
321
1705
350
356
1981
693
449
324
426
1700
477
550
775
527
559
389
320
1281
1370
1209
1050
1051
727
3323
768
1020
1833
1161
999
651
739
489
711
597
1395
1805
491
296
281
283
1323
309
838
1014
734
1148
816
1473
1457
816
588
1448
1152
308
332
387
900
1760
445
388
394
294
586
501
407
327
873
663
2016
252
234
420
168
155
174
294
1596
1676
630
1531
1189
2687
2124
946
336
336
242
329
575
1102
345
538
576
345
421
283
1864
724
1051
650
1434
677
1265
999
1248
635
756
1004
1051
1333
1106
227
193
239
792
1048
607
3448
1205
288
646
702
923
853
1316
1181
465
622
452
309
591
1390
1403
3926
277
29044
526
624
399
1215
548
1102
466
1451
594
1922
1728
997
1960
2305
673
766
1358
657
393
734
241
252
339
645
492
619
428
2075
1248
946
1292
1122
941
623
774
2658
835
2394
598
719
171
257
159
205
390
551
521
1104
569
239
322
676
1115
1393
1390
297
354
345
4159
700
1710
1111
417
768
601
445
354
627
458
825
395
623
338
467
879
624
598
634
342
419
1884
755
1329
957
1082
1402
314
254
2730
1878
687
799
1743
1285
862
1023
643
827
1684
1187
283
376
654
1372
912
709
202
206
305
293
522
440
1042
156
2142
922
1017
859
751
1342
868
691
815
1230
760
787
866
940
1422
497
741
722
1090
459
1614
373
394
726
609
782
450
584
2240
1950
586
376
436
995
1780
1619
301
974
676
1325
1805
818
969
1372
1219
1457
684
577
670
524
555
534
485
435
478
438
548
551
487
913
570
685
591
405
62
1735
125
986
156
544
612
1656
152
158
438
124
2515
866
1006
218
371
162
1458
507
1107
923
924
415
296
280
664
595
464
1160
1067
429
346
1264
610
1794
541
312
23277
1133
697
1902
852
133
2101
275
274
1742
566
821
1076
836
766
1114
852
972
1306
334
428
857
612
603
851
651
795
480
700
1057
681
608
599
1566
684
616
598
773
374
426
318
368
378
339
722
2143
713
815
1712
612
2289
991
404
595
2192
769
662
859
805
823
918
721
1718
1923
1715
2427
898
1947
713
265
255
432
1119
909
537
729
799
680
2078
584
774
914
913
526
743
1392
835
773
894
447
1056
682
485
1205
1019
1576
2585
1177
1185
986
915
278
239
358
1587
1591
904
1573
1505
684
787
555
849
264
785
910
1138
1092
669
1247
1708
789
1241
496
657
639
1194
2444
413
237
381
731
2730
904
884
236
246
877
546
595
601
533
785
1335
1888
1335
319
315
2007
1029
1090
1562
217
398
241
1030
1329
809
1280
966
870
1298
329
351
348
407
435
808
2224
583
1705
1120
250
98
428
918
729
811
860
403
466
436
590
604
430
474
322
347
395
395
1211
1249
854
1118
979
1586
1441
1399
935
1367
1790
1149
550
391
322
321
560
346
339
422
326
1410
471
694
604
2183
777
1273
656
386
578
272
992
476
574
788
737
450
1110
671
717
1644
992
1455
269
734
837
709
932
952
531
1481
1037
628
1483
1141
1262
1667
791
613
643
413
315
719
587
603
420
1242
1145
1134
2320
1708
993
2090
1333
987
971
1221
1232
1604
1915
335
496
299
298
248
874
199
196
1483
2003
1118
726
808
729
863
1361
560
516
1610
636
1016
1894
749
547
443
2315
434
324
2083
255
378
842
1245
481
738
640
612
507
525
588
714
1143
768
1281
1559
1228
616
606
594
36254
1013
666
603
584
288
285
411
276
931
793
607
529
411
2046
899
749
567
665
1070
1800
8171
656
152
1844
739
346
520
758
1028
550
307
130
336
142
1560
204
534
2992
1257
1505
410
473
496
428
1766
1286
540
694
736
521
442
590
344
407
402
490
356
1095
413
653
731
407
368
26248
451
364
1740
589
407
2421
346
339
309
369
339
261
394
281
363
278
365
223
349
348
347
361
364
385
234
557
280
389
325
365
352
440
541
369
277
358
276
463
429
656
328
743
2047
1453
12762
722
846
226
269
185
250
2590
269
995
2159
419
352
262
894
636
478
543
1104
519
286
744
851
1370
1132
590
646
617
687
400
219
266
272
245
217
236
250
257
1432
1531
1582
202
536
1029
482
443
428
419
580
381
Query:
-- 4. Get distinct start station names from Citi Bike trips in 2016
SELECT DISTINCT `start_station_name`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
start_station_name
Grand Army Plaza & Plaza St West
Franklin Ave & Myrtle Ave
Liberty St & Broadway
Driggs Ave & Lorimer St
W 45 St & 6 Ave
Watts St & Greenwich St
E 12 St & 3 Ave
Broadway & W 53 St
Lispenard St & Broadway
W 27 St & 10 Ave
W 37 St & 10 Ave
Central Park West & W 100 St
E 109 St & 3 Ave
Forsyth St & Broome St
E 16 St & Irving Pl
W 52 St & 9 Ave
Devoe St & Leonard St
Nassau Ave & Newell St
Throop Ave & Myrtle Ave
E 60 St & York Ave
Cliff St & Fulton St
Mott St & Prince St
E 89 St & 3 Ave
Fulton St & Broadway
Lafayette Ave & Classon Ave
Murray St & West St
E 77 St & 3 Ave
W 18 St & 6 Ave
E 31 St & 3 Ave
Clinton St & Joralemon St
Columbia St & W 9 St
Metropolitan Ave & Bedford Ave
Prospect Park West & 8 St
Grand Army Plaza & Central Park S
Front St & Washington St
Clark St & Henry St
Greenwich St & North Moore St
Central Park W & W 96 St
St Marks Pl & 2 Ave
31 St & Thomson Ave
S Portland Ave & Hanson Pl
E 84 St & 1 Ave
E 20 St & 2 Ave
Huron St & Franklin St
PABT Valet
E 51 St & 1 Ave
9 Ave & W 28 St
Clinton St & Grand St
8 Ave & W 31 St
E 39 St & 3 Ave
Suffolk St & Stanton St
E 68 St & 3 Ave
E 51 St & Lexington Ave
10 St & 5 Ave
W 34 St & 11 Ave
Central Park S & 6 Ave
Amsterdam Ave & W 79 St
W 56 St & 6 Ave
Greene Ave & Throop Ave
W 78 St & Broadway
Carroll St & Bond St
N 6 St & Bedford Ave
Johnson St & Gold St
W 76 St & Columbus Ave
5 Ave & E 88 St
9 St & 44 Rd
Riverside Blvd & W 67 St
3 St & 3 Ave
Stanton St & Chrystie St
E 48 St & 5 Ave
Boerum St & Broadway
E 9 St & Avenue C
E 95 St & 3 Ave
Rivington St & Ridge St
W 53 St & 10 Ave
E 2 St & Avenue B
Fulton St & Utica Ave
South St & Gouverneur Ln
Broadway & W 58 St
E 103 St & Lexington Ave
E 25 St & 2 Ave
Peck Slip & Front St
W 89 St & Columbus Ave
Leonard St & Bayard St
W 84 St & Columbus Ave
Park Ave & St Edwards St
Queens Plaza North & Crescent St
Cadman Plaza W & Pierrepont St
1 Ave & E 18 St
Little West St & 1 Pl
W 52 St & 11 Ave
Henry St & Bay St
Monroe St & Classon Ave
Leonard St & Church St
W 20 St & 7 Ave
5 Ave & E 63 St
E 97 St & 3 Ave
Broadway & W 29 St
E 102 St & 1 Ave
Shevchenko Pl & E 7 St
E 77 St & Park Ave
Amsterdam Ave & W 82 St
E 40 St & Madison Ave
Pier 40 - Hudson River Park
11 Ave & W 59 St
Leonard St & Grand St
Centre St & Worth St
45 Rd & 11 St
Court St & State St
Commerce St & Van Brunt St
W 43 St & 6 Ave
Catherine St & Monroe St
E 91 St & Park Ave
W 42 St & 8 Ave
5 Ave & E 29 St
5 Ave & E 93 St
9 Ave & W 16 St
Cherry St
Humboldt St & Varet St
E 6 St & Avenue D
Grand St & Elizabeth St
W 15 St & 7 Ave
Avenue D & E 12 St
Roebling St & N 4 St
Cambridge Pl & Gates Ave
W 24 St & 7 Ave
Carroll St & Columbia St
DeKalb Ave & S Portland Ave
Richards St & Delavan St
E 71 St & 2 Ave
Railroad Ave & Kay Ave
Bike The Branches - Red Hook Branch
N 11 St & Wythe Ave
E 72 St & Park Ave
Adventures NYC
Meserole Ave & Manhattan Ave
Great Jones St
Bike The Branches - Central Branch
8 Ave & W 31 St N
W 92 St & Broadway
West St & Chambers St
E 61 St & Park Ave
Sullivan St & Washington Sq
Dean St & Hoyt St
W 90 St & Amsterdam Ave
E 75 St & 3 Ave
NYCBS Depot - SSP
Old Slip & Front St
West End Ave & W 107 St
Greenwich St & N Moore St
University Pl & E 8 St
W 4 St & 7 Ave S
Hudson St & Reade St
3 St & 7 Ave
9 Ave & W 18 St
Carlton Ave & Park Ave
Broadway & W 24 St
Van Brunt St & Wolcott St
MacDougal St & Washington Sq
Norfolk St & Broome St
Pioneer St & Richards St
Leonard St & Boerum St
Riverside Dr & W 104 St
Pearl St & Hanover Square
W 13 St & Hudson St
Macon St & Nostrand Ave
47 Ave & 31 St
48 Ave & 5 St
Clinton Ave & Myrtle Ave
Washington Park
Old Fulton St
Scholes St & Manhattan Ave
W 49 St & 8 Ave
E 30 St & Park Ave S
Union Ave & Wallabout St
E 89 St & York Ave
E 43 St & 2 Ave
E 47 St & Park Ave
Greenpoint Ave & Manhattan Ave
Centre St & Chambers St
Douglass St & 4 Ave
Wolcott St & Dwight St
Columbia St & Degraw St
E 55 St & Lexington Ave
Greenwich St & Hubert St
Pacific St & Nevins St
Congress St & Clinton St
E 56 St & Madison Ave
Henry St & Atlantic Ave
Stanton St & Mangin St
Allen St & E Houston St
5 Ave & E 78 St
Bedford Ave & Nassau Ave
St James Pl & Pearl St
5 Ave & E 73 St
E 35 St & 3 Ave
Reed St & Van Brunt St
Montrose Ave & Bushwick Ave
Adelphi St & Myrtle Ave
1 Pl & Clinton St
E 6 St & Avenue B
W 87 St & West End Ave
Pioneer St & Van Brunt St
East End Ave & E 86 St
12 St & 4 Ave
W 100 St & Manhattan Ave
Fulton St & Clermont Ave
MacDougal St & Prince St
Berkeley Pl & 6 Ave
E 20 St & Park Ave
Montague St & Clinton St
Tompkins Ave & Hopkins St
Kiosk in a box Motivate
Clinton Ave & Flushing Ave
14 St & 5 Ave
NYCBS Depot - PIT
NYCBS Depot - FAR
3969.TEMP (Bike The Branches - Central Branch)
E 2 St & 2 Ave
West Thames St
Henry St & W 9 St
Atlantic Ave & Fort Greene Pl
W 20 St & 8 Ave
Greenwich St & W Houston St
Cumberland St & Lafayette Ave
1 Ave & E 16 St
1 Ave & E 15 St
E 58 St & 3 Ave
W 43 St & 10 Ave
Kent Ave & S 11 St
6 St & 7 Ave
W 31 St & 7 Ave
Columbus Ave & W 103 St
Franklin St & W Broadway
Lewis Ave & Madison St
Dean St & 4 Ave
Query:
-- 5. Get distinct end station names from Citi Bike trips in 2016
SELECT DISTINCT `end_station_name`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
end_station_name
W 45 St & 6 Ave
E 12 St & 3 Ave
Broadway & W 53 St
W 37 St & 10 Ave
Central Park West & W 100 St
Forsyth St & Broome St
E 16 St & Irving Pl
W 52 St & 9 Ave
E 60 St & York Ave
Mott St & Prince St
E 89 St & 3 Ave
Murray St & West St
E 77 St & 3 Ave
W 18 St & 6 Ave
E 31 St & 3 Ave
Grand Army Plaza & Central Park S
St Marks Pl & 2 Ave
E 84 St & 1 Ave
E 20 St & 2 Ave
E 51 St & 1 Ave
8 Ave & W 31 St
E 39 St & 3 Ave
Suffolk St & Stanton St
E 68 St & 3 Ave
E 51 St & Lexington Ave
Central Park S & 6 Ave
Amsterdam Ave & W 79 St
W 56 St & 6 Ave
W 78 St & Broadway
N 6 St & Bedford Ave
W 76 St & Columbus Ave
5 Ave & E 88 St
Riverside Blvd & W 67 St
Stanton St & Chrystie St
E 48 St & 5 Ave
E 9 St & Avenue C
E 95 St & 3 Ave
W 53 St & 10 Ave
E 2 St & Avenue B
South St & Gouverneur Ln
Broadway & W 58 St
E 25 St & 2 Ave
W 84 St & Columbus Ave
Queens Plaza North & Crescent St
W 52 St & 11 Ave
W 20 St & 7 Ave
5 Ave & E 63 St
Broadway & W 29 St
E 77 St & Park Ave
Amsterdam Ave & W 82 St
11 Ave & W 59 St
W 43 St & 6 Ave
E 91 St & Park Ave
W 42 St & 8 Ave
5 Ave & E 29 St
E 6 St & Avenue D
W 15 St & 7 Ave
W 24 St & 7 Ave
E 71 St & 2 Ave
E 72 St & Park Ave
Meserole Ave & Manhattan Ave
8 Ave & W 31 St N
W 92 St & Broadway
West St & Chambers St
E 61 St & Park Ave
W 90 St & Amsterdam Ave
E 75 St & 3 Ave
W 4 St & 7 Ave S
Hudson St & Reade St
9 Ave & W 18 St
Broadway & W 24 St
MacDougal St & Washington Sq
Pearl St & Hanover Square
W 13 St & Hudson St
W 49 St & 8 Ave
E 30 St & Park Ave S
E 43 St & 2 Ave
E 47 St & Park Ave
E 55 St & Lexington Ave
E 56 St & Madison Ave
Stanton St & Mangin St
5 Ave & E 78 St
5 Ave & E 73 St
E 20 St & Park Ave
3 St & 3 Ave
Grand Army Plaza & Plaza St West
Liberty St & Broadway
Lafayette Ave & Classon Ave
Prospect Park West & 8 St
10 St & 5 Ave
Greenpoint Ave & Manhattan Ave
Franklin Ave & Myrtle Ave
Driggs Ave & Lorimer St
Metropolitan Ave & Bedford Ave
Boerum St & Broadway
Leonard St & Bayard St
Leonard St & Grand St
Norfolk St & Broome St
Macon St & Nostrand Ave
Clinton Ave & Myrtle Ave
Henry St & Atlantic Ave
Fulton St & Clermont Ave
W 34 St & 11 Ave
Johnson St & Gold St
1 Ave & E 18 St
Shevchenko Pl & E 7 St
Sullivan St & Washington Sq
Greenwich St & N Moore St
E 6 St & Avenue B
MacDougal St & Prince St
Watts St & Greenwich St
Lispenard St & Broadway
Cliff St & Fulton St
Fulton St & Broadway
Clinton St & Joralemon St
Greenwich St & North Moore St
9 Ave & W 28 St
Clinton St & Grand St
Fulton St & Utica Ave
Peck Slip & Front St
Little West St & 1 Pl
Leonard St & Church St
Pier 40 - Hudson River Park
Centre St & Worth St
Catherine St & Monroe St
9 Ave & W 16 St
Cherry St
Great Jones St
Old Slip & Front St
University Pl & E 8 St
Centre St & Chambers St
Allen St & E Houston St
St James Pl & Pearl St
Montague St & Clinton St
Rivington St & Ridge St
Old Fulton St
Commerce St & Van Brunt St
Throop Ave & Myrtle Ave
Front St & Washington St
S Portland Ave & Hanson Pl
Huron St & Franklin St
Carroll St & Bond St
Monroe St & Classon Ave
DeKalb Ave & S Portland Ave
Railroad Ave & Kay Ave
Carlton Ave & Park Ave
Leonard St & Boerum St
Washington Park
Scholes St & Manhattan Ave
Union Ave & Wallabout St
Douglass St & 4 Ave
Congress St & Clinton St
Bedford Ave & Nassau Ave
Adelphi St & Myrtle Ave
Berkeley Pl & 6 Ave
Riverside Dr & W 104 St
Clinton Ave & Flushing Ave
W 27 St & 10 Ave
W 87 St & West End Ave
Nassau Ave & Newell St
Roebling St & N 4 St
N 11 St & Wythe Ave
Montrose Ave & Bushwick Ave
Greene Ave & Throop Ave
Park Ave & St Edwards St
Clark St & Henry St
W 100 St & Manhattan Ave
Avenue D & E 12 St
47 Ave & 31 St
Humboldt St & Varet St
Columbia St & Degraw St
E 103 St & Lexington Ave
48 Ave & 5 St
East End Ave & E 86 St
Devoe St & Leonard St
West End Ave & W 107 St
E 89 St & York Ave
NYCBS Depot - PIT
1 Pl & Clinton St
Central Park W & W 96 St
PABT Valet
E 102 St & 1 Ave
45 Rd & 11 St
31 St & Thomson Ave
Court St & State St
Wolcott St & Dwight St
Reed St & Van Brunt St
E 35 St & 3 Ave
Cambridge Pl & Gates Ave
Cadman Plaza W & Pierrepont St
Tompkins Ave & Hopkins St
W 89 St & Columbus Ave
E 97 St & 3 Ave
5 Ave & E 93 St
12 St & 4 Ave
14 St & 5 Ave
Dean St & Hoyt St
NYCBS Depot - SSP
9 St & 44 Rd
E 109 St & 3 Ave
Greenwich St & Hubert St
Carroll St & Columbia St
Van Brunt St & Wolcott St
Pacific St & Nevins St
3 St & 7 Ave
Henry St & Bay St
Adventures NYC
NYCBS Depot BAL - DYR
Richards St & Delavan St
Pioneer St & Richards St
Pioneer St & Van Brunt St
E 40 St & Madison Ave
Grand St & Elizabeth St
Bike The Branches - Central Branch
NYCBS Depot - FAR
Columbia St & W 9 St
Kiosk in a box Motivate
Liberty Light Rail
3969.TEMP (Bike The Branches - Central Branch)
Van Vorst Park
Hilltop
Bike The Branches - Red Hook Branch
Grove St PATH
Heights Elevator
Newport PATH
West Thames St
W 20 St & 8 Ave
1 Ave & E 16 St
1 Ave & E 15 St
E 58 St & 3 Ave
W 43 St & 10 Ave
W 31 St & 7 Ave
Washington St & Gansevoort St
1 Ave & E 30 St
E 2 St & 2 Ave
Broadway & W 41 St
E 66 St & Madison Ave
Pike St & E Broadway
W Broadway 
Query:
-- 6. Calculate average trip duration for Citi Bike trips in 2016
SELECT AVG(`tripduration`) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016;
Answer:
avg_trip_duration_seconds
988.1495024335314
Query:
-- 7. Get sample taxi trip durations in 2016
SELECT TIMESTAMP_DIFF(`dropoff_datetime`, `pickup_datetime`, SECOND) AS trip_duration_seconds
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
trip_duration_seconds
0
0
0
0
25
3
0
24
2
0
0
9
0
93
0
0
676
3
29
1106
536
42
0
0
8
27
0
72
0
3
0
1504
1991
100
52
0
26
3035
13
0
1320
29
0
61
611
110
2
18
945
0
0
13
5
14
0
323
8
8642
25
0
0
217
4
197
0
17
10
31
0
537
0
2
0
1865
1468
352
0
11
0
220
69
109
0
41
0
6
0
0
3339
3570
455
38
37
1404
51
94
2655
332
992
72
198
621
1260
32
155
9
2086
111
0
2619
1495
185
55
77
81
364
2369
91
3304
2303
33
11
42
0
47
1399
44
62
2229
47
123
1710
507
180
36
61
9
0
1322
68
231
2568
23
25
1573
807
3639
20
67
22
0
0
347
42
1176
476
122
1947
27
0
0
26
111
887
0
69
875
28
114
46
116
759
1762
49
173
709
237
1407
100
2905
58
36
2633
36
2340
62
0
53
4126
0
986
3288
19
167
928
534
80
45
1086
68
108
14
102
0
5576
2246
175
839
0
23
48
75
466
310
243
25
2683
54
43
5047
38
882
2928
41
1867
1582
119
2847
101
0
0
33
1507
141
77
74
145
3921
19
240
6793
208
40
1032
78
141
69
358
1413
2181
3527
3583
0
3129
1721
3163
944
2876
86
100
3848
1995
1811
1046
1432
1871
959
2141
1352
3236
14
1841
2307
1990
3012
1486
88
553
2616
1669
3817
2658
20
1909
166
17
129
82
87
20
2209
21
3131
10
16
37
14
3437
3903
504
1938
2735
4642
5478
2
22
339
5
44
1487
0
2
30
1179
30
5
1
6
20
10
11
41
2
14
42
32
40
1
33
6
1227
5
3
7
2
14
50
4
2
43
7
11
4
1
4
36
7
26
4
7
9
18
3
4
40
2
46
1354
78
3
7
49
54
14
59
51
24
13
2
35
47
53
30
44
14
21
9
5
35
3
32
35
12
7
34
4
5
5
4
48
6
1849
44
40
45
8
4
3
18
14
5
2
67
28
5
52
28
43
31
8
61
10
17
2
3
59
33
6
5
44
7
0
13
22
6
15
2
37
34
11
13
3
23
8
0
31
9
8
0
6
0
28
26
26
4
85528
51
13
25
8
991
32
45
0
39
5
19
18
17
5
111
23
959
2
59
24
33
32
7
4
23
37
3
3
5
20
26
5
8
0
68
27
0
54
39
3
4
30
28
33
34
48
25
50
51
4
21
47
4
10
45
2
0
13
51
14
24
56
31
17
16
35
9
41
53
42
2
55
13
11
3
3
3
26
13
36
28
13
3
38
4
13
26
3207
37
16
27
10
3
3
17
6
12
41
46
2
27
24
0
35
3
10
3
15
1
15
44
24
36
3
21
12
10
59
13
10
36
0
22
4
39
57
0
4
7
15
5
22
2
10
2
52
5
30
25
20
0
52
25
32
14
13
8
26
11
9
23
18
5
26
5
2
9
20
25
0
4
36
43
11
15
9
38
29
10158
42
73
21
29
11
61
22
1126
6
0
31
8
15
27
26
16
7
20
22
9
5
46
39
7
0
35
8
0
33
36
33
56
17
53
13
33
53
53
8
17
5
8
24
3
55
13
5
51
45
2
9
9
5
0
23
0
35
65
3
46
12
11
49
0
13
3
12
9
7
33
29
4
37
36
12
8
268
49
36
11
21
29
23
18
3
54
31
24
48
2
3086
11
45
2
6
16
45
5
3
321
49
14
25
59
48
11
6
8
28
8
4
0
15
47
19
7
25
34
22
58
32
3
2
3975
25
20
7
13
8
21
0
53
8
17
8
4
51
20
8
23
6
34
58
5
8
15
0
9
4
21
5
8
6
0
15
50
0
18
14
33
55
7
5
45
4
2
4
18
3
44
18
39
45
0
12
29
7
37
50
47
37
4
5
18
3
0
38
0
13
33
17
27
37
3
12
17
0
14
39
8
45
45
4
0
3
30
9
46
12
29
19
0
1000
52
2
17
6
16
53
47
22
7
12
45
12
19
10
33
2
25
0
19
8
0
29
13
23
21
156
12
2
45
0
10
9
19
14
6
24
32
0
2
8
0
7
6
46
47
36
2
38
23
9
48
50
28
52
5
3
22
46
19
9
41
3
3
15
10
19
39
26
84
3
36
4
23
6
31
54
6
6
12
28
44
7
14
49
3
3
33
8
31
25
2
4
4
5
12
14
2
34
9
44
13
6
8
3
4
9
11
5
14
5
3
3
2
4
7
4
5
0
3
9
10
15
4
7
10
18
2
58
8
6
56
957
2
5
3
2
58
5
3
19
41
23
18
18
49
24
41
12
13
3
42
36
2
56
40
25
31
3
25
2
15
23
55
44
6
37
36
19
50
41
51
29
Query:
-- 8. Get sample taxi trip distances in 2016
SELECT `trip_distance`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
trip_distance
0.0
0.0
0.0
0.0
0.0
0.0
0.0
1.6
3.53
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
1.3
0.0
1.58
0.0
0.0
0.77
0.0
0.0
0.0
0.0
0.0
3.0
0.0
0.0
0.0
0.0
0.0
0.0
26.05
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
1.92
4.54
0.0
0.0
0.0
0.99
0.0
0.0
3.25
0.0
0.34
0.0
0.0
0.0
0.0
0.0
0.0
5.3
0.2
0.0
1.8
0.6
5.5
3.7
0.7
11.1
0.4
0.1
0.0
0.0
0.1
2.3
0.0
0.1
56.9
10.0
0.0
9.6
1.3
3.5
4.9
0.4
0.2
34.3
0.4
1.1
7.0
0.5
0.0
4.9
16.9
2.8
0.0
0.5
0.1
14.5
0.0
0.1
0.0
6.9
15.9
0.0
0.1
7.7
0.2
0.1
0.4
0.1
0.3
0.6
27.4
9.5
34.0
0.1
1.3
0.0
0.2
0.1
0.6
0.0
0.0
0.2
0.0
0.0
0.0
0.1
13.9
0.2
0.3
0.3
15.4
0.0
0.0
2.3
0.0
0.0
2.5
0.0
0.0
2.3
0.0
6.9
0.9
0.1
3.1
1.9
0.0
2.9
0.2
4.0
3.6
0.0
0.1
0.8
0.0
1.3
2.2
0.0
0.0
0.1
0.4
0.0
0.1
0.1
1.3
2.3
0.1
0.0
1.1
3.8
0.0
2.2
10.4
9.8
4.4
0.0
15.0
9.5
4.0
0.1
2.7
0.0
18.9
0.9
0.1
5.5
17.0
3.4
0.1
0.2
0.9
0.4
0.3
0.1
0.0
0.0
0.6
0.1
4.1
0.2
0.0
0.0
0.0
2.9
11.1
1.1
0.1
0.1
0.0
1.0
0.1
9.9
10.6
13.8
16.7
0.5
27.5
33.4
21.8
15.8
0.7
16.6
0.3
4.7
4.3
2.7
1.3
5.7
7.5
11.7
5.7
45.6
0.5
6.6
10.3
3.1
6.8
13.5
24.1
4.9
22.3
3.6
15.7
3.1
5.4
29.2
12.5
5.6
5.6
4.2
11.2
3.3
2.7
20.7
2.7
15.7
14.1
16.9
14.0
0.0
23.7
1.4
26.6
4.0
19.6
17.3
14.8
16.3
18.9
1.0
0.0
37.3
33.8
12.9
17.4
16.3
0.0
0.0
8.3
0.0
0.0
0.0
0.0
0.1
0.9
0.1
0.0
0.1
0.8
0.4
0.09
0.17
0.0
0.0
0.08
0.07
0.0
0.0
0.0
0.6
0.0
0.0
0.0
1.8
0.0
5.2
0.0
0.0
0.0
1.4
3.2
1.3
0.0
0.0
0.0
2.2
0.0
0.0
0.0
0.0
0.0
0.0
0.09
0.0
0.0
0.0
0.01
0.2
0.9
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.04
0.0
0.0
0.0
0.01
0.01
2.6
0.1
0.01
0.13
220735.6
2.8
1.0
0.1
0.0
0.02
0.0
0.0
0.1
0.0
0.08
0.3
0.0
0.5
0.01
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.05
0.0
0.0
0.0
17.0
0.0
0.0
0.0
0.01
0.01
0.04
3.3
0.0
0.0
0.1
0.0
0.0
0.07
0.0
0.0
0.0
0.0
1.3
0.0
0.0
0.0
0.12
0.1
0.0
0.5
0.0
0.1
2.7
0.0
13.2
0.0
0.0
0.03
1.3
1.7
0.0
0.18
0.0
0.0
0.01
0.0
0.06
0.1
0.04
0.0
0.9
0.0
0.03
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.01
0.05
0.0
0.1
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.12
0.0
0.1
0.4
0.0
0.0
1.6
0.9
0.0
0.0
0.12
0.0
0.8
0.0
0.01
0.0
0.0
0.0
0.0
0.04
0.0
0.01
20.1
0.0
0.11
0.01
0.0
0.0
0.01
10.3
0.0
0.0
0.0
0.0
0.0
0.0
0.0
2.6
0.0
0.1
0.1
0.0
3.3
0.05
0.0
0.0
0.0
0.0
1.6
0.14
0.06
1.5
0.0
0.5
0.0
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.05
0.0
24.5
0.0
1.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.02
0.0
0.2
0.0
0.05
0.01
0.0
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.04
0.0
1.7
0.0
0.01
0.0
0.0
0.0
0.0
0.01
0.2
0.0
0.09
0.01
0.01
0.0
0.04
0.0
0.09
0.0
0.1
0.0
0.03
0.0
0.1
0.0
0.0
3.5
0.1
0.05
0.1
0.0
0.0
0.1
0.19
0.0
0.16
0.02
3.2
0.0
0.0
0.0
0.0
0.0
6.5
0.1
0.0
0.0
0.0
0.1
0.1
0.0
17.1
0.1
1.0
3.0
0.03
0.0
1.4
0.0
0.0
0.0
0.0
0.0
0.1
2.1
0.6
0.0
0.06
0.0
1.7
0.0
0.0
0.0
0.0
0.7
0.11
0.0
1.2
0.04
0.0
0.0
0.0
0.05
0.0
0.08
7.9
0.0
0.18
0.05
1.3
0.0
0.09
0.1
0.0
0.0
0.0
0.07
0.13
0.0
0.0
0.0
0.1
0.0
1.1
0.0
0.0
0.0
0.0
0.0
0.0
0.03
0.0
0.06
11.3
0.0
0.0
0.14
0.0
0.0
0.0
0.0
0.0
0.0
0.1
0.0
0.1
0.06
0.0
0.1
0.2
0.3
2.8
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.9
0.11
0.0
10.4
0.1
0.0
0.0
15.0
0.03
0.0
0.0
0.17
0.1
3.4
0.0
0.0
0.13
1.5
0.0
1.4
0.0
0.0
0.12
0.0
0.0
0.0
0.01
0.0
0.0
0.0
0.1
0.03
0.0
0.0
0.06
0.0
0.0
0.0
2.4
0.05
0.0
0.0
0.0
0.0
0.01
0.0
0.1
0.01
0.0
0.0
0.0
0.0
0.0
0.0
0.0
2.4
0.01
2.3
0.8
0.03
0.0
0.02
0.0
0.8
0.3
0.0
0.0
1.5
0.0
0.0
0.09
0.0
0.0
0.0
3.0
0.12
0.0
1.5
0.1
0.0
0.0
0.0
0.03
0.0
0.15
0.2
0.0
0.0
0.0
0.0
0.0
0.06
0.0
0.0
0.0
0.04
0.0
0.0
0.0
0.0
0.0
0.0
0.15
0.0
4.5
0.0
0.0
0.0
0.0
0.01
0.0
2.2
0.7
0.0
0.0
0.0
0.0
0.1
0.0
3.6
0.02
0.0
0.04
0.0
16.2
0.06
0.0
0.07
0.0
0.01
0.0
1.2
0.0
0.0
0.0
1.8
0.15
4.5
0.0
2.3
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.2
0.0
0.0
0.0
0.0
0.0
2.6
1.0
0.0
0.0
1.0
3.3
0.0
0.0
0.1
0.02
0.0
0.0
0.09
0.0
0.0
0.01
0.0
0.0
0.0
0.01
0.0
0.07
0.0
0.0
0.02
0.1
0.0
7.1
0.01
0.03
0.0
0.0
0.0
0.0
0.0
0.1
0.0
0.0
0.0
0.07
0.01
0.03
0.0
0.01
0.1
0.01
0.0
0.0
20.3
0.07
8.3
0.0
0.02
0.7
0.0
0.06
0.15
0.1
0.0
0.1
0.1
0.0
1.5
0.0
0.1
0.2
0.8
0.0
0.0
0.1
0.6
0.1
0.1
0.0
0.0
0.1
0.2
0.01
0.1
0.0
0.04
0.11
0.2
0.0
0.0
0.1
0.0
0.03
0.0
0.03
0.0
0.0
0.0
0.0
0.1
0.0
0.02
0.0
0.09
0.1
0.0
0.0
0.0
0.0
0.0
3.4
0.2
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
0.0
4.6
0.0
0.0
0.0
3.4
0.0
0.1
0.0
0.0
0.0
0.0
0.0
0.01
0.0
0.0
0.0
0.0
0.0
0.5
0.0
0.0
0.0
0.0
0.0
1.0
2.3
3.1
8.2
0.0
0.01
0.0
0.2
0.03
0.0
0.0
0.2
0.16
0.13
Query:
-- 9. Get distinct rounded pickup and drop-off coordinates from Taxi trips in 2016
SELECT DISTINCT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude,
       ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
pickup_latitude,pickup_longitude,dropoff_latitude,dropoff_longitude
40.74,-73.986,40.72,-73.963
40.728,-73.991,40.767,-73.994
40.68,-73.981,40.684,-73.931
40.78,-73.947,40.754,-73.976
40.785,-73.958,40.751,-74.005
40.712,-74.006,40.663,-73.98
40.735,-73.988,40.778,-73.946
40.755,-73.986,40.714,-74.014
40.755,-73.977,40.718,-74.007
40.752,-73.975,40.705,-74.005
40.762,-73.963,40.74,-74.008
40.767,-73.953,40.741,-73.987
40.753,-73.978,40.702,-74.009
40.767,-73.955,40.733,-73.998
40.76,-74.003,40.774,-73.96
40.731,-73.982,40.759,-73.982
40.74,-74.008,40.786,-73.978
40.758,-73.977,40.725,-73.989
40.726,-73.992,40.778,-73.981
40.75,-73.989,40.79,-73.945
40.78,-73.981,40.732,-73.986
40.75,-73.981,40.813,-73.945
40.744,-73.986,40.793,-73.974
40.733,-73.988,40.68,-73.99
40.755,-73.987,40.74,-73.946
40.753,-73.986,40.718,-73.99
40.79,-73.943,40.759,-73.97
40.74,-74.006,40.753,-73.977
40.798,-73.969,40.841,-73.943
40.707,-74.004,40.747,-73.981
40.744,-74.007,40.758,-73.963
40.729,-73.99,40.734,-73.95
40.769,-73.955,40.769,-73.992
40.744,-74.007,40.714,-73.961
40.703,-74.01,40.757,-73.983
40.722,-73.985,40.749,-73.992
40.749,-73.988,40.778,-73.955
40.782,-73.972,40.735,-73.981
40.759,-73.966,40.732,-74.005
40.721,-73.988,40.762,-73.993
40.705,-74.012,40.763,-73.993
40.763,-73.98,40.723,-73.986
40.73,-74.002,40.765,-73.969
40.746,-73.982,40.726,-73.996
40.758,-73.988,40.786,-73.952
40.749,-73.98,40.702,-74.011
40.717,-73.991,40.762,-73.971
40.711,-74.01,40.757,-73.982
40.751,-73.994,40.778,-73.951
40.77,-73.957,40.787,-73.977
40.747,-73.986,40.694,-73.966
40.73,-73.981,40.694,-73.959
40.732,-73.988,40.789,-73.967
40.742,-73.981,40.764,-73.923
40.732,-74.0,40.801,-73.946
40.713,-74.009,40.754,-73.973
40.83,-73.948,40.766,-73.984
40.726,-73.984,40.756,-73.975
40.772,-73.961,40.739,-73.992
40.774,-73.978,40.742,-73.975
40.78,-73.955,40.762,-73.965
40.751,-73.994,40.796,-73.971
40.751,-73.994,40.709,-74.018
40.758,-73.975,40.722,-74.004
40.758,-73.986,40.702,-74.009
40.74,-74.002,40.795,-73.973
40.743,-73.918,40.739,-74.001
40.645,-73.782,40.679,-73.859
40.722,-73.986,40.762,-73.977
40.776,-73.953,40.741,-74.005
40.759,-73.981,40.827,-73.946
40.73,-73.984,40.801,-73.967
40.773,-73.982,40.735,-73.986
40.722,-74.0,40.766,-73.977
40.755,-73.988,40.704,-74.007
40.717,-74.014,40.755,-73.976
40.703,-74.011,40.73,-73.954
40.774,-73.871,40.717,-73.942
40.75,-74.002,40.698,-73.992
40.73,-74.007,40.792,-73.969
40.763,-73.977,40.714,-73.948
40.717,-74.011,40.772,-73.991
40.765,-73.983,40.735,-73.989
40.735,-73.991,40.764,-73.981
40.763,-73.983,40.748,-73.988
40.759,-73.987,40.721,-73.988
40.722,-74.01,40.719,-73.961
40.805,-73.939,40.785,-73.976
40.729,-73.997,40.789,-73.981
40.814,-73.96,40.75,-74.004
40.768,-73.956,40.706,-74.007
40.773,-73.963,40.714,-73.993
40.722,-74.008,40.753,-73.967
40.743,-73.977,40.721,-73.957
40.828,-73.949,40.758,-73.985
40.705,-74.01,40.73,-73.954
40.742,-73.975,40.805,-73.962
40.741,-73.979,40.712,-74.014
40.764,-73.915,40.756,-73.974
40.738,-74.0,40.684,-73.967
40.744,-74.004,40.765,-73.955
40.738,-74.004,40.779,-73.977
40.764,-73.983,40.721,-73.983
40.804,-73.963,40.756,-73.964
40.753,-73.976,40.702,-74.011
40.781,-73.946,40.842,-73.942
40.748,-73.976,40.684,-74.0
40.777,-73.964,40.763,-73.928
40.784,-73.948,40.846,-73.922
40.719,-73.989,40.669,-73.936
40.8,-73.968,40.766,-73.967
0.0,0.0,40.772,-73.959
40.732,-73.994,40.728,-73.951
40.764,-73.981,40.721,-73.982
40.776,-73.947,40.748,-74.009
40.768,-73.903,40.791,-73.953
40.751,-73.99,40.71,-74.015
40.764,-73.989,40.717,-73.963
40.751,-73.979,40.783,-73.971
40.748,-73.993,40.686,-73.957
40.75,-73.988,40.775,-73.952
40.734,-73.994,40.762,-73.979
40.721,-74.001,40.785,-73.979
40.753,-73.979,40.705,-73.948
40.782,-73.98,40.735,-73.98
40.726,-73.998,40.787,-73.968
40.705,-74.014,40.668,-73.961
40.764,-73.998,40.75,-74.008
40.75,-73.991,40.689,-73.957
40.707,-74.004,40.772,-73.965
40.739,-74.002,40.819,-73.945
40.754,-73.971,40.675,-73.975
40.739,-74.004,40.669,-73.98
40.755,-73.984,40.776,-73.983
40.771,-73.957,40.715,-74.002
40.744,-73.988,40.799,-73.967
40.712,-74.009,40.758,-73.966
40.757,-73.986,40.813,-73.939
40.718,-74.009,40.749,-73.973
40.742,-73.991,40.807,-73.95
40.734,-74.003,40.665,-73.937
40.772,-73.959,40.77,-73.864
40.647,-73.79,40.708,-73.759
40.723,-74.008,40.775,-73.948
40.738,-74.0,40.813,-73.958
40.762,-73.968,40.775,-73.919
40.77,-73.954,40.774,-73.871
40.689,-73.997,40.753,-73.967
40.691,-73.925,40.643,-73.991
40.777,-73.961,40.727,-74.005
40.784,-73.957,40.855,-73.938
40.752,-73.978,40.83,-73.949
40.75,-73.984,40.711,-74.011
40.735,-74.006,40.79,-73.952
40.76,-73.988,40.73,-73.896
40.77,-73.863,40.806,-73.953
40.763,-73.929,40.838,-73.887
40.774,-73.873,40.773,-73.952
40.744,-73.973,40.774,-73.871
40.723,-74.003,40.663,-73.96
40.719,-73.993,40.786,-73.95
40.781,-73.983,40.719,-73.99
40.723,-73.985,40.78,-73.973
40.715,-74.016,40.764,-73.971
40.762,-73.974,40.704,-74.012
40.749,-73.973,40.849,-73.911
40.791,-73.969,40.716,-74.004
40.7
Query:
-- 10. Sample of Taxi trips starting and ending near specific coordinates (rounded to 3 decimals)
SELECT `pickup_latitude`, `pickup_longitude`, `dropoff_latitude`, `dropoff_longitude`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
  AND ROUND(`pickup_latitude`, 3) = 40.751
  AND ROUND(`pickup_longitude`, 3) = -73.977
  AND ROUND(`dropoff_latitude`, 3) = 40.749
  AND ROUND(`dropoff_longitude`, 3) = -73.991
LIMIT 1000;
Answer:
Too long, hard cut:
pickup_latitude,pickup_longitude,dropoff_latitude,dropoff_longitude
40.750938415527344,-73.97682189941406,40.74889373779297,-73.99128723144531
40.75084686279297,-73.97662353515625,40.74852752685547,-73.99100494384766
40.75069046020508,-73.97671508789062,40.74895477294922,-73.99103546142578
40.75078201293945,-73.97664642333984,40.748817443847656,-73.99107360839844
40.75123596191406,-73.97650146484375,40.74946594238281,-73.99107360839844
40.750526428222656,-73.97663116455078,40.74892044067383,-73.9913101196289
40.751312255859375,-73.97742462158203,40.749446868896484,-73.99141693115234
40.75121307373047,-73.97663116455078,40.74913787841797,-73.99132537841797
40.75076675415039,-73.97747039794922,40.74884033203125,-73.99129486083984
40.751014709472656,-73.97684478759766,40.748966217041016,-73.99054718017578
40.751163482666016,-73.97681427001953,40.74928283691406,-73.99125671386719
40.7506217956543,-73.97683715820312,40.74875259399414,-73.99085998535156
40.75075912475586,-73.97705078125,40.74922180175781,-73.99128723144531
40.750518798828125,-73.97740936279297,40.74916076660156,-73.99109649658203
40.750755310058594,-73.9772720336914,40.748863220214844,-73.99129486083984
40.75071716308594,-73.9771728515625,40.74882507324219,-73.99142456054688
40.75117874145508,-73.97721099853516,40.74920654296875,-73.99130249023438
40.75098419189453,-73.9765853881836,40.749202728271484,-73.99117279052734
40.750797271728516,-73.97698974609375,40.749000549316406,-73.99090576171875
40.75122833251953,-73.9765396118164,40.749488830566406,-73.99127960205078
40.750877380371094,-73.97734069824219,40.74945068359375,-73.99122619628906
40.750648498535156,-73.97672271728516,40.7489128112793,-73.9914321899414
40.750946044921875,-73.9767837524414,40.74864959716797,-73.9912338256836
40.75067901611328,-73.97737884521484,40.7489013671875,-73.99102020263672
40.7505989074707,-73.97679138183594,40.74911880493164,-73.99134063720703
40.751373291015625,-73.977294921875,40.74882125854492,-73.99128723144531
40.75056076049805,-73.9770278930664,40.74881362915039,-73.99073791503906
40.750648498535156,-73.97655487060547,40.749298095703125,-73.99129486083984
40.75136184692383,-73.97664642333984,40.7492790222168,-73.99143981933594
40.751129150390625,-73.97669219970703,40.74876022338867,-73.99070739746094
40.750816345214844,-73.97689056396484,40.749237060546875,-73.99116516113281
40.751163482666016,-73.97669219970703,40.74880599975586,-73.99108123779297
40.750728607177734,-73.97732543945312,40.74855041503906,-73.99104309082031
40.75075149536133,-73.97669219970703,40.748870849609375,-73.9908447265625
40.7508430480957,-73.97655487060547,40.74899673461914,-73.99134063720703
40.75062942504883,-73.97660064697266,40.748931884765625,-73.9912109375
40.75071716308594,-73.9773178100586,40.74911117553711,-73.99128723144531
40.75092697143555,-73.97679138183594,40.749061584472656,-73.99142456054688
40.75065612792969,-73.977294921875,40.74872589111328,-73.99102020263672
40.75063705444336,-73.97721099853516,40.74919509887695,-73.99103546142578
40.750831604003906,-73.97716522216797,40.748905181884766,-73.99104309082031
40.75126266479492,-73.97727966308594,40.74897003173828,-73.99101257324219
40.751102447509766,-73.97706604003906,40.74912643432617,-73.99134826660156
40.7513313293457,-73.97691345214844,40.748931884765625,-73.99083709716797
40.75083541870117,-73.97685241699219,40.74884033203125,-73.99124908447266
40.75062561035156,-73.97676086425781,40.74876022338867,-73.99130249023438
40.7505989074707,-73.97698211669922,40.74913024902344,-73.9914321899414
40.75070571899414,-73.97745513916016,40.74855041503906,-73.99063873291016
40.751312255859375,-73.97694396972656,40.74895477294922,-73.99089050292969
40.75065231323242,-73.97724151611328,40.74905014038086,-73.99140930175781
40.750728607177734,-73.97657775878906,40.74911880493164,-73.99113464355469
40.75102615356445,-73.9771499633789,40.74895095825195,-73.9909439086914
40.75113296508789,-73.9766616821289,40.74934005737305,-73.99137115478516
40.75066375732422,-73.97673034667969,40.74888610839844,-73.9913101196289
40.750972747802734,-73.97660064697266,40.74898147583008,-73.99120330810547
40.75099563598633,-73.97706604003906,40.74910354614258,-73.9910888671875
40.75125503540039,-73.97715759277344,40.74918746948242,-73.99057006835938
40.751224517822266,-73.97692108154297,40.74911117553711,-73.99139404296875
40.751468658447266,-73.97664642333984,40.74872970581055,-73.99066925048828
40.75056457519531,-73.9765853881836,40.74883270263672,-73.99125671386719
40.7507209777832,-73.97722625732422,40.74907302856445,-73.99122619628906
40.75056076049805,-73.97669982910156,40.74927520751953,-73.99138641357422
40.75050354003906,-73.97698974609375,40.74932098388672,-73.99149322509766
40.75079345703125,-73.97669982910156,40.749393463134766,-73.99065399169922
40.75091552734375,-73.97734832763672,40.748775482177734,-73.99108123779297
40.75090789794922,-73.97676849365234,40.749080657958984,-73.99128723144531
40.75136184692383,-73.97687530517578,40.74926
Query:
-- 11. Get average trip duration for Taxi trips in 2016
SELECT AVG(TIMESTAMP_DIFF(`dropoff_datetime`, `pickup_datetime`, SECOND)) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016;
Answer:
avg_trip_duration_seconds
969.5513397498745
Query:
-- 12. List distinct Taxi pickup locations rounded to 3 decimals in 2016
SELECT DISTINCT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
pickup_latitude,pickup_longitude
40.647,-73.79
40.764,-73.994
40.757,-73.971
40.738,-74.005
40.772,-73.876
40.745,-73.995
40.693,-74.186
40.719,-73.997
41.017,-73.718
40.752,-73.975
40.726,-74.007
40.762,-73.997
40.69,-73.81
40.762,-73.99
40.767,-73.886
40.749,-73.993
40.741,-73.899
40.792,-73.951
40.763,-73.986
40.645,-73.787
40.745,-73.926
40.737,-73.987
40.752,-73.948
40.738,-74.004
40.676,-73.908
40.755,-73.951
40.644,-73.783
40.773,-73.958
40.73,-73.984
40.747,-73.985
40.752,-73.976
40.728,-73.987
40.757,-73.985
40.759,-73.989
40.758,-73.972
40.641,-73.789
40.712,-74.009
40.726,-73.995
40.711,-74.009
40.988,-73.878
40.739,-74.009
40.757,-73.97
40.75,-73.976
40.702,-74.013
40.749,-73.942
40.815,-73.96
40.708,-73.943
40.753,-73.973
40.641,-73.788
40.816,-73.94
40.716,-74.015
40.762,-74.001
40.813,-73.957
40.821,-73.955
40.825,-73.952
40.713,-74.007
40.767,-73.983
40.651,-74.015
40.764,-73.955
40.768,-73.969
40.757,-73.98
40.781,-73.955
40.727,-73.986
40.758,-73.983
40.728,-73.991
40.721,-73.998
40.732,-73.992
40.752,-73.933
40.727,-74.0
40.763,-73.997
40.674,-73.969
40.731,-74.0
40.775,-73.981
40.729,-74.003
40.757,-73.921
40.756,-73.988
40.802,-73.934
40.726,-73.991
40.741,-74.007
40.748,-73.985
40.731,-73.948
40.748,-73.973
40.72,-73.943
40.821,-73.954
40.72,-73.989
40.726,-73.98
40.747,-73.987
40.732,-73.982
40.789,-73.978
40.696,-73.991
40.73,-74.0
40.734,-73.99
40.782,-73.983
40.702,-73.904
40.759,-73.961
40.983,-73.764
40.811,-73.925
40.736,-73.997
40.743,-73.982
40.764,-73.956
40.8,-73.947
40.79,-73.976
41.015,-73.86
40.775,-73.95
40.739,-74.0
40.719,-73.985
40.741,-74.0
40.749,-73.999
40.73,-73.998
40.729,-73.977
40.736,-73.995
40.816,-73.958
40.725,-73.996
40.776,-73.953
40.804,-73.967
40.707,-74.009
40.704,-73.931
40.868,-73.921
40.756,-73.992
40.728,-73.994
40.726,-73.994
40.752,-73.984
40.761,-73.917
40.771,-73.953
40.746,-74.005
40.689,-73.989
40.769,-73.956
40.776,-73.961
40.708,-74.016
40.745,-73.979
40.742,-73.989
40.725,-73.993
40.767,-73.978
40.779,-73.955
40.805,-73.961
40.744,-74.003
40.778,-73.961
40.823,-73.945
40.759,-73.97
40.787,-73.972
40.773,-73.953
40.791,-73.973
40.766,-73.982
40.802,-73.942
40.745,-73.985
40.749,-74.006
40.682,-73.976
40.709,-73.953
40.74,-73.989
40.735,-74.008
40.792,-73.973
40.793,-73.971
40.808,-73.96
40.781,-73.946
40.75,-73.999
40.76,-73.989
40.743,-74.003
40.734,-74.006
40.751,-73.986
40.737,-74.005
40.725,-73.998
40.743,-73.98
40.709,-73.938
40.85,-73.828
40.767,-73.984
40.774,-73.951
40.805,-73.947
40.748,-73.898
40.787,-73.948
40.801,-73.961
40.746,-73.899
40.76,-73.932
40.755,-73.972
40.757,-73.963
40.663,-73.984
40.786,-73.972
40.79,-73.954
40.772,-73.96
40.717,-73.998
40.759,-73.964
40.734,-73.995
40.752,-73.981
40.755,-73.966
40.767,-73.955
40.787,-73.956
40.716,-74.01
40.75,-73.993
40.736,-73.859
40.769,-73.992
40.746,-73.898
40.747,-73.978
40.739,-74.01
40.667,-73.982
40.803,-73.968
40.816,-73.939
40.789,-73.943
40.738,-73.999
40.713,-74.01
40.735,-74.007
40.798,-73.971
40.729,-74.006
40.758,-73.988
40.712,-74.008
40.756,-73.924
40.779,-73.983
40.777,-73.961
40.734,-73.998
40.787,-73.955
40.714,-74.004
40.772,-73.99
40.771,-73.923
40.752,-73.996
40.747,-73.991
40.724,-73.987
40.765,-73.965
40.705,-74.007
40.767,-73.968
40.731,-73.958
40.743,-73.979
40.758,-73.964
40.799,-73.945
40.766,-73.966
40.824,-73.945
40.745,-73.949
40.768,-73.98
40.724,-74.008
40.788,-73.954
40.712,-73.997
40.791,-73.966
40.801,-73.967
40.762,-73.926
40.738,-73.98
40.744,-73.994
40.745,-74.003
40.747,-74.008
40.791,-73.945
40.762,-73.932
40.746,-73.904
40.716,-73.756
40.674,-73.973
40.771,-73.967
40.745,-73.908
40.717,-74.007
40.744,-73.92
40.707,-74.015
40.756,-73.969
40.771,-73.903
40.773,-73.967
40.776,-73.988
40.756,-73.913
40.716,-74.001
40.72,-73.992
40.692,-73.994
40.748,-73.883
40.798,-73.939
40.804,-73.945
40.82,-73.96
40.811,-73.928
40.662,-73.989
40.695,-73.801
40.81,-73.937
40.718,-73.992
40.708,-74.009
40.69,-73.826
40.767,-73.991
40.705,-73.959
40.791,-73.97
40.727,-73.984
40.743,-73.916
40.689,-73.951
40.692,-73.995
40.737,-74.004
40.742,-74.003
40.743,-73.999
40.703,-73.989
40.73,-73.979
40.677,-73.983
40.762,-73.911
40.777,-73.99
40.714,-73.966
40.719,-74.004
40.71,-74.012
40.777,-73.985
40.814,-73.94
40.758,-73.916
40.793,-73.952
40.837,-73.943
40.762,-73.985
40.806,-73.934
40.742,-73.925
40.745,-74.011
40.707,-73.964
40.775,-73.944
40.693,-73.994
40.745,-73.956
40.743,-73.934
40.827,-73.888
40.823,-73.95
40.708,-73.958
40.748,-73.882
40.766,-73.921
40.733,-73.977
40.711,-73.953
40.785,-73.972
40.809,-73.94
40.722,-73.845
40.855,-73.937
40.751,-73.999
40.714,-73.995
40.691,-74.0
40.784,-73.967
40.742,-73.954
40.734,-73.996
40.714,-73.965
40.767,-73.916
40.761,-74.002
40.716,-73.961
40.85,-73.936
40.742,-73.979
40.744,-73.927
40.775,-73.978
40.756,-74.004
40.756,-73.941
40.744,-73.941
40.78,-73.915
40.689,-73.982
40.748,-73.94
40.74,-73.898
40.7,-73.928
40.767,-73.93
40.747,-73.886
40.76,-73.83
40.684,-73.806
40.731,-73.987
40.819,-73.914
40.722,-74.012
Query:
-- 13. List distinct Taxi drop-off locations rounded to 3 decimals in 2016
SELECT DISTINCT ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
dropoff_latitude,dropoff_longitude
40.721,-74.005
40.76,-73.97
40.672,-73.843
40.751,-73.991
40.741,-74.061
40.67,-74.116
40.808,-73.665
40.727,-74.042
40.723,-74.037
40.731,-73.988
40.714,-74.014
40.761,-73.997
40.752,-73.945
40.766,-73.961
40.725,-73.99
40.754,-73.948
40.747,-73.894
40.758,-74.0
40.722,-74.004
40.732,-73.99
40.686,-73.978
40.681,-73.997
40.694,-73.987
40.815,-73.959
40.753,-73.924
40.75,-73.942
40.745,-73.927
40.712,-74.016
40.734,-74.008
40.758,-73.985
40.71,-74.004
40.76,-73.962
40.741,-73.976
40.764,-73.959
40.736,-74.008
40.737,-74.043
40.775,-73.977
40.751,-73.998
40.766,-73.981
40.746,-73.98
40.756,-73.993
40.777,-73.977
40.813,-73.954
40.796,-73.938
40.771,-73.885
40.746,-73.975
40.751,-73.99
40.771,-73.951
40.773,-73.95
40.736,-74.002
40.779,-73.987
40.827,-73.905
40.812,-73.936
40.722,-73.987
40.73,-74.002
40.72,-73.991
40.749,-74.003
40.761,-73.984
40.764,-73.936
40.755,-73.985
40.754,-73.974
40.663,-73.931
40.759,-73.983
40.766,-73.952
40.722,-74.01
40.716,-73.976
40.785,-73.981
40.848,-73.971
40.731,-73.983
40.721,-74.004
40.741,-73.935
40.768,-73.833
40.818,-73.938
40.77,-73.96
40.705,-74.006
40.673,-73.96
40.782,-73.947
40.75,-73.988
40.76,-73.973
40.802,-73.956
40.815,-73.94
40.74,-73.987
40.791,-73.969
40.715,-73.96
40.748,-73.971
40.744,-73.999
40.779,-73.956
40.783,-73.95
40.778,-73.953
40.76,-73.995
40.76,-73.991
40.745,-73.921
40.75,-73.98
40.745,-73.906
40.783,-73.972
40.744,-74.0
40.754,-73.992
40.724,-73.951
40.717,-73.821
40.787,-73.976
40.747,-73.984
40.743,-74.007
40.724,-73.991
40.743,-74.006
40.773,-73.962
40.787,-73.977
40.758,-73.973
40.774,-73.956
40.705,-74.005
40.778,-73.962
40.778,-73.975
40.72,-74.002
40.786,-73.978
40.729,-74.002
40.75,-73.978
40.846,-73.939
40.786,-73.955
40.763,-73.993
40.756,-74.005
40.746,-73.992
40.813,-73.961
40.794,-73.964
40.79,-73.952
40.776,-73.951
40.755,-73.968
40.758,-73.938
40.738,-73.974
40.775,-73.951
40.771,-73.988
40.772,-73.877
40.763,-73.959
40.773,-73.959
40.751,-73.968
40.748,-73.901
40.816,-73.947
40.717,-73.997
40.74,-73.985
40.769,-73.967
40.749,-73.97
40.783,-73.955
40.74,-73.999
40.765,-73.969
40.805,-73.966
40.759,-73.965
40.785,-73.949
40.756,-73.882
40.805,-73.968
40.781,-73.956
40.772,-73.955
40.751,-73.98
40.771,-73.917
40.721,-73.995
40.809,-73.963
40.795,-73.932
40.753,-73.999
40.76,-73.937
40.776,-73.962
40.726,-74.002
40.766,-73.978
40.761,-73.93
40.801,-73.966
40.733,-73.986
40.78,-73.948
40.769,-73.935
40.723,-73.983
40.739,-73.994
40.716,-74.008
40.732,-73.984
40.808,-73.942
40.766,-73.99
40.803,-73.953
40.758,-73.975
40.758,-73.991
40.777,-73.943
40.747,-73.973
40.781,-73.954
40.778,-73.965
40.734,-73.997
40.796,-73.939
40.756,-73.989
40.769,-73.986
40.788,-73.944
40.755,-73.998
40.821,-73.939
40.773,-73.964
40.773,-73.946
40.756,-74.003
40.822,-73.954
40.81,-73.925
40.749,-74.0
40.748,-74.003
40.775,-73.955
40.784,-73.948
40.727,-74.006
40.731,-73.994
40.843,-73.939
40.769,-73.965
40.747,-73.925
40.788,-73.969
40.748,-73.976
40.804,-73.963
40.778,-73.951
40.767,-73.912
40.684,-73.944
40.751,-73.992
40.722,-73.984
40.718,-73.832
40.726,-73.988
40.719,-73.991
40.764,-73.965
40.787,-73.942
40.723,-73.991
40.794,-73.94
40.761,-73.926
40.762,-73.937
40.79,-73.979
40.823,-73.943
40.817,-73.947
40.777,-73.948
40.819,-73.956
40.734,-73.985
40.717,-74.004
40.747,-73.895
40.798,-73.941
40.765,-73.963
40.748,-73.986
40.748,-74.007
40.743,-74.005
40.733,-73.995
40.714,-73.994
40.765,-73.956
40.756,-73.967
40.725,-74.005
40.706,-74.018
40.765,-73.971
40.732,-73.983
40.792,-73.971
40.671,-73.985
40.749,-73.981
40.848,-73.938
40.757,-73.973
40.77,-73.989
40.78,-73.983
40.779,-73.946
40.74,-74.01
40.783,-73.947
40.765,-73.985
40.719,-73.976
40.706,-73.963
40.739,-73.974
40.733,-73.98
40.778,-73.985
40.741,-73.996
40.711,-73.996
40.779,-73.98
40.713,-73.829
40.762,-73.989
40.751,-74.003
40.78,-73.973
40.802,-73.963
40.704,-74.014
40.762,-73.976
40.783,-73.954
40.747,-73.983
40.811,-73.954
40.795,-73.933
40.749,-73.919
40.787,-73.957
40.785,-73.975
40.728,-74.007
40.706,-73.951
40.767,-73.994
40.767,-73.992
40.69,-73.983
40.687,-73.962
40.703,-73.897
40.797,-73.938
40.69,-73.911
40.697,-73.993
40.709,-73.955
40.693,-73.977
40.756,-73.919
40.715,-73.955
40.797,-73.967
40.792,-73.949
40.768,-73.931
40.687,-73.966
40.798,-73.934
40.732,-73.998
40.835,-73.944
40.799,-73.953
40.821,-73.958
40.749,-73.889
40.775,-73.914
40.722,-73.981
40.728,-74.0
40.694,-73.812
40.717,-74.014
40.744,-73.976
40.714,-73.96
40.712,-73.951
40.728,-73.99
40.676,-73.999
40.762,-73.925
40.74,-74.0
40.772,-73.93
40.714,-73.942
40.687,-73.998
40.689,-73.93
40.706,-74.014
40.819,-73.941
40.718,-74.016
40.806,-73.963
40.723,-73.948
40.767,-73.924
40.744,-73.978
40.763,-73.994
40.712,-73.966
40.726,-73.974
40.763,-73.908
40.818,-73.957
40.728,-74.009
40.756,-73.884
40.668,-73.983
40.766,-73.995
40.725,-74.007
40.779,-73.901
40.602,-73.951
40.774,-73.986
40.779,-73.898
40.802,-73.948
40.769,-73.882
40.682,-73.95
40.716,-73.95
40.743,-73.892
40.69,-
Query:
-- 14. Sample Citi Bike trips with start and end station coordinates
SELECT `start_station_name`, `end_station_name`, `start_station_latitude`, `start_station_longitude`, `end_station_latitude`, `end_station_longitude`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
start_station_name,end_station_name,start_station_latitude,start_station_longitude,end_station_latitude,end_station_longitude
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,W 52 St & 5 Ave,40.75992262,-73.97648516,40.75992262,-73.97648516
W 52 St & 5 Ave,West Thames St,40.75992262,-73.97648516,40.70834698,-74.01713445
W 52 St & 5 Ave,West Thames St,40.75992262,-73.97648516,40.70834698,-74.01713445
W 52 St & 5 Ave,West Thames St,40.75992262,-73.97648516,40.70834698,-74.01713445
W 52 St & 5 Ave,Barrow St & Hudson St,40.75992262,-73.97648516,40.73172428,-74.00674436
W 52 St & 5 Ave,W 20 St & 8 Ave,40.75992262,-73.97648516,40.74345335,-74.00004031
W 52 St & 5 Ave,W 20 St & 8 Ave,40.75992262,-73.97648516,40.74345335,-74.00004031
W 52 St & 5 Ave,W 45 St & 6 Ave,40.75992262,-73.97648516,40.7568001,-73.98291153
W 52 St & 5 Ave,W 45 St & 6 Ave,40.75992262,-73.97648516,40.7568001,-73.98291153
W 52 St & 5 Ave,W 45 St & 6 Ave,40.75992262,-73.97648516,40.7568001,-73.98291153
W 52 St & 5 Ave,E 12 St & 3 Ave,40.75992262,-73.97648516,40.73223272,-73.98889957
W 52 St & 5 Ave,E 12 St & 3 Ave,40.75992262,-73.97648516,40.73223272,-73.98889957
W 52 St & 5 Ave,Elizabeth St & Hester St,40.75992262,-73.97648516,40.717590818059804,-73.99622440338135
W 52 St & 5 Ave,Elizabeth St & Hester St,40.75992262,-73.97648516,40.717590818059804,-73.99622440338135
W 52 St & 5 Ave,Elizabeth St & Hester St,40.75992262,-73.97648516,40.717590818059804,-73.99622440338135
W 52 St & 5 Ave,1 Ave & E 16 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,1 Ave & E 16 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,1 Ave & E 16 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,1 Ave & E 15 St,40.75992262,-73.97648516,40.73221853,-73.98165557
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,Broadway & W 53 St,40.75992262,-73.97648516,40.76344058,-73.98268129
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,E 58 St & 3 Ave,40.75992262,-73.97648516,40.76095756,-73.96724467
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 37 St & 10 Ave,40.75992262,-73.97648516,40.75660359,-73.9979009
W 52 St & 5 Ave,W 27 St & 7 Ave,40.75992262,-73.97648516,40.746647,-73.993915
W 52 St & 5 Ave,W 27 St & 7 Ave,40.75992262,-73.97648516,40.746647,-73.993915
W 52 St & 5 Ave,W 43 St & 10 Ave,40.75992262,-73.97648516,40.76009437,-73.99461843
W 52 St & 5 Ave,W 43 St & 10 Ave,40.75992262
Query:
-- 15. Get the average trip duration for each of the top 20 Citi Bike routes in 2016
SELECT `start_station_name`, `end_station_name`, AVG(`tripduration`) AS avg_trip_duration_seconds
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
GROUP BY `start_station_name`, `end_station_name`
ORDER BY COUNT(*) DESC
LIMIT 20;
Answer:
start_station_name,end_station_name,avg_trip_duration_seconds
Central Park S & 6 Ave,Central Park S & 6 Ave,2867.205310955281
Central Park S & 6 Ave,5 Ave & E 78 St,1775.894706994329
12 Ave & W 40 St,West St & Chambers St,1483.9128497152758
Centre St & Chambers St,Centre St & Chambers St,2097.8428059395806
Pershing Square North,W 33 St & 7 Ave,517.3236864287721
Pershing Square North,W 41 St & 8 Ave,466.6916236374068
W 21 St & 6 Ave,9 Ave & W 22 St,324.42355008787354
Central Park S & 6 Ave,5 Ave & E 73 St,1446.9419734904266
E 85 St & York Ave,E 85 St & 3 Ave,246.07166717279074
Yankee Ferry Terminal,Yankee Ferry Terminal,2463.2415712960096
Soissons Landing,Yankee Ferry Terminal,1527.4643304130161
Yankee Ferry Terminal,Soissons Landing,2018.6965865992415
N 6 St & Bedford Ave,Wythe Ave & Metropolitan Ave,252.93608903020652
Pershing Square North,E 24 St & Park Ave S,445.26823829244984
Pershing Square North,Broadway & W 32 St,429.8879974326058
West St & Chambers St,12 Ave & W 40 St,1520.038809831824
W 21 St & 6 Ave,W 22 St & 10 Ave,406.59627329192557
Central Park S & 6 Ave,Central Park West & W 72 St,1739.5034619188925
Central Park West & W 85 St,Central Park S & 6 Ave,1285.318473488686
Grand Army Plaza & Central Park S,Grand Army Plaza & Central Park S,2873.501200686106
Query:
-- 16. Sample of Taxi trips with pickup and drop-off times in 2016
SELECT `pickup_datetime`, `dropoff_datetime`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
Too long, hard cut:
pickup_datetime,dropoff_datetime
2016-02-21 19:41:32+00:00,2016-02-21 19:41:32+00:00
2016-07-01 01:12:45+00:00,2016-07-01 01:12:45+00:00
2016-06-19 23:43:12+00:00,2016-06-19 23:43:47+00:00
2016-02-18 15:15:34+00:00,2016-02-18 15:20:33+00:00
2016-04-12 09:00:47+00:00,2016-04-12 09:01:14+00:00
2016-02-15 03:23:02+00:00,2016-02-15 03:23:02+00:00
2016-02-09 10:28:01+00:00,2016-02-09 10:29:07+00:00
2016-09-05 15:31:20+00:00,2016-09-05 15:34:45+00:00
2016-05-07 20:31:15+00:00,2016-05-07 20:35:50+00:00
2016-08-06 12:18:37+00:00,2016-08-06 12:18:37+00:00
2016-03-08 15:11:38+00:00,2016-03-08 15:13:06+00:00
2016-03-14 01:42:39+00:00,2016-03-14 01:42:47+00:00
2016-08-24 14:12:33+00:00,2016-08-24 14:12:41+00:00
2016-06-18 06:45:27+00:00,2016-06-18 07:06:19+00:00
2016-04-04 18:53:26+00:00,2016-04-04 18:53:31+00:00
2016-05-05 23:01:02+00:00,2016-05-05 23:01:02+00:00
2016-02-09 17:07:15+00:00,2016-02-09 17:07:15+00:00
2016-11-03 18:39:23+00:00,2016-11-03 18:39:23+00:00
2016-12-12 19:39:15+00:00,2016-12-12 19:39:15+00:00
2016-05-02 12:23:49+00:00,2016-05-02 12:23:49+00:00
2016-03-03 01:33:36+00:00,2016-03-03 01:35:37+00:00
2016-05-16 10:53:30+00:00,2016-05-16 11:10:17+00:00
2016-03-01 21:13:55+00:00,2016-03-01 21:13:55+00:00
2016-03-28 12:03:18+00:00,2016-03-28 12:10:58+00:00
2016-01-07 10:03:03+00:00,2016-01-07 10:04:28+00:00
2016-01-31 10:17:39+00:00,2016-01-31 10:17:44+00:00
2016-01-18 23:04:34+00:00,2016-01-18 23:07:27+00:00
2016-05-07 10:31:38+00:00,2016-05-07 10:31:38+00:00
2016-03-14 16:17:12+00:00,2016-03-14 16:17:12+00:00
2016-09-18 01:52:26+00:00,2016-09-18 01:52:26+00:00
2016-01-07 15:56:45+00:00,2016-01-07 15:57:14+00:00
2016-04-11 06:17:35+00:00,2016-04-11 06:17:37+00:00
2016-10-03 17:53:24+00:00,2016-10-03 18:03:07+00:00
2016-06-07 15:09:51+00:00,2016-06-07 15:10:34+00:00
2016-05-04 02:22:37+00:00,2016-05-04 02:23:02+00:00
2016-03-10 19:38:36+00:00,2016-03-10 19:38:36+00:00
2016-05-18 00:10:20+00:00,2016-05-18 00:10:20+00:00
2016-10-30 16:39:51+00:00,2016-10-30 16:39:51+00:00
2016-09-07 00:07:51+00:00,2016-09-07 00:07:51+00:00
2016-10-08 04:23:30+00:00,2016-10-08 05:47:04+00:00
2016-02-03 20:43:21+00:00,2016-02-03 20:43:58+00:00
2016-02-24 06:34:05+00:00,2016-02-24 06:34:05+00:00
2016-10-29 21:11:09+00:00,2016-10-29 21:11:09+00:00
2016-01-05 13:12:36+00:00,2016-01-05 13:12:39+00:00
2016-01-21 22:23:10+00:00,2016-01-21 22:23:10+00:00
2016-04-04 21:53:49+00:00,2016-04-04 21:53:58+00:00
2016-04-21 09:50:49+00:00,2016-04-21 09:50:49+00:00
2016-05-20 02:40:12+00:00,2016-05-20 02:40:12+00:00
2016-09-21 04:45:19+00:00,2016-09-21 04:46:56+00:00
2016-12-17 13:33:11+00:00,2016-12-17 13:33:11+00:00
2016-10-21 07:35:55+00:00,2016-10-21 07:35:55+00:00
2016-05-17 19:18:14+00:00,2016-05-17 19:18:14+00:00
2016-12-07 14:25:20+00:00,2016-12-07 14:25:20+00:00
2016-01-19 07:40:40+00:00,2016-01-19 08:05:52+00:00
2016-02-12 19:57:48+00:00,2016-02-12 20:16:13+00:00
2016-10-09 04:19:49+00:00,2016-10-09 04:19:49+00:00
2016-05-15 19:36:17+00:00,2016-05-15 19:36:23+00:00
2016-02-03 01:33:10+00:00,2016-02-03 01:33:13+00:00
2016-12-22 12:06:40+00:00,2016-12-22 12:18:57+00:00
2016-11-20 18:10:15+00:00,2016-11-20 18:10:15+00:00
2016-03-29 18:56:56+00:00,2016-03-29 18:57:17+00:00
2016-12-22 00:57:20+00:00,2016-12-22 01:10:20+00:00
2016-09-07 18:14:12+00:00,2016-09-07 18:14:12+00:00
2016-06-05 16:59:24+00:00,2016-06-05 17:07:01+00:00
2016-02-28 00:45:03+00:00,2016-02-28 00:45:59+00:00
2016-06-27 11:30:10+00:00,2016-06-27 11:30:17+00:00
2016-12-26 13:20:33+00:00,2016-12-26 13:21:32+00:00
2016-03-31 06:58:19+00:00,2016-03-31 06:58:21+00:00
2016-05-18 17:41:48+00:00,2016-05-18 17:43:34+00:00
2016-01-03 21:56:00+00:00,2016-01-03 21:56:28+00:00
2016-12-03 09:21:04+00:00,2016-12-03 09:42:25+00:00
2016-06-05 05:32:58+00:00,2016-06-05 05:33:25+00:00
2016-06-25 11:10:17+00:00,2016-06-25 11:10:17+00:00
2016-05-14 03:21:16+00:00,2016-05-14 03:21:48+00:00
2016-06-12 01:50:39+00:00,2016-06-12 01:52:50+00:00
2016-04-06 04:16:57+00:00,2016-04-06 04:36:35+00:00
2016-11-23 16:12:41+00:00,2016-11-23 16:21:36+00:00
2016-07-07 09:36:20+00:00,2016-07-07 09:41:56+00:00
2016-11-13 05:53:27+00:00,2016-11-13 05:54:22+00:00
2016-11-07 16:08:13+00:00,2016-11-07 16:10:32+00:00
2016-10-19 16:37:02+00:00,2016-10-19 16:39:08+00:00
2016-07-27 18:11:51+00:00,2016-07-27 18:12:09+00:00
2016-02-15 01:10:25+00:00,2016-02-15 01:10:45+00:00
2016-03-04 18:34:52+00:00,2016-03-04 18:35:47+00:00
2016-01-07 19:04:33+00:00,2016-01-07 19:26:16+00:00
2016-05-24 05:14:33+00:00,2016-05-24 05:15:15+00:00
2016-12-06 17:09:33+00:00,2016-12-06 17:11:21+00:00
2016-07-16 10:23:40+00:00,2016-07-16 11:38:37+00:00
2016-02-21 01:57:43+00:00,2016-02-21 01:58:54+00:00
2016-03-14 20:07:27+00:00,2016-03-14 20:07:27+00:00
2016-01-15 17:01:13+00:00,2016-01-15 17:01:57+00:00
2016-09-02 19:51:38+00:00,2016-09-02 19:52:14+00:00
2016-08-08 11:31:34+00:00,2016-08-08 11:55:19+00:00
2016-04-15 02:15:13+00:00,2016-04-15 02:31:07+00:00
2016-12-21 15:54:41+00:00,2016-12-21 15:58:52+00:00
2016-12-29 16:18:28+00:00,2
Query:
-- 17. Get count of Taxi trips per pickup/drop-off coordinate pair rounded to 3 decimals in 2016
SELECT ROUND(`pickup_latitude`, 3) AS pickup_latitude, ROUND(`pickup_longitude`, 3) AS pickup_longitude,
       ROUND(`dropoff_latitude`, 3) AS dropoff_latitude, ROUND(`dropoff_longitude`, 3) AS dropoff_longitude,
       COUNT(*) AS trip_count
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
GROUP BY pickup_latitude, pickup_longitude, dropoff_latitude, dropoff_longitude
LIMIT 1000;
Answer:
Too long, hard cut:
pickup_latitude,pickup_longitude,dropoff_latitude,dropoff_longitude,trip_count
40.711,-73.951,40.65,-74.009,1
40.769,-73.863,40.78,-73.947,123
40.723,-73.994,40.762,-73.927,2
40.774,-73.873,40.742,-73.978,128
40.774,-73.871,40.761,-73.97,186
40.74,-73.989,40.807,-73.943,1
40.749,-73.991,40.714,-74.016,3
40.749,-74.008,40.762,-73.971,1
40.749,-73.978,40.774,-73.872,87
40.752,-73.976,40.772,-73.885,8
40.714,-74.016,40.76,-73.974,6
40.739,-74.003,40.718,-73.949,2
40.735,-73.99,40.762,-73.994,19
40.773,-73.885,40.738,-73.981,34
40.723,-73.989,40.658,-73.983,1
40.773,-73.967,40.703,-74.012,2
40.761,-73.969,40.744,-74.003,18
40.763,-73.99,40.86,-73.931,1
40.727,-74.003,40.645,-74.001,1
40.711,-74.016,40.778,-73.95,9
40.848,-73.935,40.753,-73.975,1
40.77,-73.863,40.702,-73.93,7
40.76,-73.981,40.708,-74.01,3
40.742,-73.981,40.768,-73.876,1
40.74,-73.976,40.738,-73.869,1
40.764,-73.959,40.735,-74.007,3
40.82,-73.955,40.744,-73.894,1
40.774,-73.871,40.694,-73.934,11
40.781,-73.973,40.775,-73.915,1
40.764,-73.962,40.717,-74.013,3
40.743,-74.004,40.684,-73.909,1
40.794,-73.94,40.708,-74.003,1
40.755,-73.984,40.715,-74.015,13
40.74,-73.982,40.795,-73.963,1
40.779,-73.982,40.725,-73.997,16
40.8,-73.968,40.723,-74.009,2
40.718,-74.014,40.717,-74.014,7
40.774,-73.873,40.718,-73.964,34
40.769,-73.863,40.829,-73.948,25
40.749,-73.976,40.691,-73.972,1
40.72,-74.006,40.775,-73.948,3
40.753,-73.975,40.768,-73.861,30
40.837,-73.943,40.723,-74.007,2
40.768,-73.953,40.812,-73.921,2
40.739,-73.977,40.794,-73.972,2
40.769,-73.956,40.769,-73.864,1
40.762,-73.99,40.672,-73.984,2
40.714,-73.961,40.636,-73.978,1
40.729,-74.005,40.727,-73.875,1
40.76,-73.986,40.847,-73.938,11
40.766,-73.969,40.71,-74.016,2
40.787,-73.95,40.728,-74.0,5
40.782,-73.96,40.729,-74.005,3
40.774,-73.871,40.744,-73.986,311
40.77,-73.864,40.766,-73.959,21
40.708,-74.005,40.777,-73.951,5
40.726,-74.004,40.829,-73.941,5
40.726,-73.987,40.766,-73.877,1
40.719,-74.004,40.748,-73.88,1
40.766,-73.96,40.768,-73.959,9
40.774,-73.873,40.744,-74.0,50
40.77,-73.864,40.757,-73.99,147
40.75,-74.002,40.701,-73.925,1
40.769,-73.863,40.715,-73.982,8
40.649,-73.97,40.726,-73.992,1
40.773,-73.979,40.711,-73.947,1
40.756,-73.969,40.697,-73.953,2
40.774,-73.873,40.765,-73.981,892
40.774,-73.873,40.787,-73.979,74
40.77,-73.864,40.773,-73.947,51
40.751,-73.991,40.774,-73.873,86
40.764,-73.963,40.77,-73.865,15
40.77,-73.864,40.716,-73.99,7
40.744,-73.992,40.771,-73.865,72
40.73,-74.001,40.687,-73.91,2
40.675,-73.985,40.772,-73.956,7
40.774,-73.871,40.751,-73.987,204
40.774,-73.87,40.738,-73.998,1
40.774,-73.871,40.759,-73.994,72
40.709,-74.017,40.766,-73.978,2
40.77,-73.864,40.757,-73.971,179
40.77,-73.863,40.647,-73.788,12
40.722,-74.005,40.771,-73.982,6
40.646,-73.777,40.699,-73.924,1
40.704,-74.012,40.75,-73.994,16
40.774,-73.873,40.647,-73.79,1016
40.77,-73.864,40.674,-73.963,12
40.73,-73.998,40.807,-73.953,1
40.771,-73.865,40.73,-73.986,1
40.725,-73.987,40.775,-73.872,3
40.764,-73.979,40.771,-73.865,171
40.774,-73.871,40.726,-74.006,267
40.766,-73.983,40.884,-73.893,1
40.778,-73.979,40.718,-73.957,1
40.77,-73.864,40.711,-74.005,25
40.769,-73.863,40.78,-73.984,78
40.747,-73.99,40.714,-73.83,1
40.647,-73.79,40.687,-73.94,1
40.745,-73.985,40.77,-73.865,97
40.745,-74.009,40.735,-73.867,1
40.703,-74.012,40.773,-73.87,14
40.77,-73.866,40.693,-73.989,2
40.77,-73.864,40.758,-73.975,446
40.645,-73.782,40.723,-73.87,6
40.642,-73.788,40.67,-73.948,4
40.752,-73.992,40.774,-73.873,45
40.748,-73.977,40.776,-73.792,1
40.647,-73.79,40.777,-73.701,1
40.754,-73.943,40.788,-73.837,1
40.774,-73.873,40.635,-73.965,3
40.647,-73.79,40.64,-73.957,6
40.644,-73.79,40.699,-73.93,3
40.703,-74.011,40.713,-74.036,1
40.841,-73.94,40.916,-74.058,1
40.746,-73.994,40.823,-73.81,1
40.746,-73.979,40.642,-73.789,17
40.77,-73.966,40.642,-73.789,1
40.647,-73.779,40.707,-74.016,4
40.645,-73.782,40.763,-73.962,88
40.745,-73.991,40.645,-73.779,8
40.645,-73.782,40.761,-73.958,160
40.75,-73.972,40.644,-73.783,189
40.645,-73.781,40.706,-74.009,23
40.762,-73.985,40.644,-73.79,47
40.647,-73.79,40.71,-74.008,14
40.755,-73.981,40.647,-73.79,81
40.771,-73.866,40.756,-73.987,18
40.647,-73.789,40.71,-74.015,30
40.647,-73.79,40.751,-73.974,164
40.727,-74.005,40.726,-74.006,14
40.646,-73.777,40.777,-73.962,6
40.753,-73.967,40.758,-73.96,12
40.655,-73.79,40.766,-73.963,1
40.778,-73.985,40.644,-73.784,5
40.643,-73.79,40.768,-73.985,57
40.641,-73.788,40.73,-73.878,1
40.765,-73.98,40.765,-73.98,219
40.645,-73.782,40.727,-73.988,36
40.647,-73.778,40.726,-74.001,5
40.646,-73.792,40.708,-74.008,1
40.645,-73.782,40.743,-73.985,35
40.649,-73.784,40.745,-74.001,6
40.765,-73.992,40.644,-73.783,22
40.645,-73.777,40.748,-73.978,112
40.77,-73.98,40.669,-73.801,1
40.642,-73.789,40.777,-73.955,4
40.644,-73.79,40.74,-74.001,12
40.79,-73.966,40.647,-73.789,6
40.641,-73.788,40.762,-73.996,1
40.646,-73.791,40.786,-73.954,2
40.707,-74.006,40.647,-73.788,2
40.761,-73.957,40.664,-73.803,1
40.765,-73.975,40.648,-73.787,12
0.0,0.0,40.769,-73.862,114
40.72,-7
Query:
-- 18. Get sample user types from Citi Bike trips in 2016
SELECT DISTINCT `usertype`
FROM `bigquery-public-data.new_york.citibike_trips`
WHERE EXTRACT(YEAR FROM `starttime`) = 2016
LIMIT 1000;
Answer:
usertype
Customer
Subscriber
Query:
-- 19. Get sample passenger counts from Taxi trips in 2016
SELECT `passenger_count`
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016
LIMIT 1000;
Answer:
passenger_count
1
1
1
1
1
1
1
1
2
1
1
1
1
1
1
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
0
1
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
4
2
2
1
2
1
1
2
2
1
5
1
1
1
2
1
1
1
1
1
3
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
2
3
3
1
1
1
1
1
1
1
1
1
1
4
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0
1
1
0
1
1
1
1
1
1
1
3
1
2
1
1
1
2
1
1
1
1
1
1
2
1
2
1
2
1
1
1
1
1
1
1
2
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
2
2
1
2
1
2
1
1
1
1
4
2
1
1
1
1
1
2
2
1
1
1
2
5
1
1
1
1
1
2
2
1
1
2
1
1
1
1
1
1
1
1
1
1
4
1
1
3
1
1
4
2
1
2
1
1
1
1
1
1
2
1
2
1
1
1
1
1
1
3
1
1
1
1
1
1
1
1
2
2
1
1
1
3
2
1
2
1
1
1
1
1
1
1
2
1
1
1
1
1
1
1
1
6
1
1
2
1
1
1
1
1
1
1
6
1
6
1
1
1
1
3
1
1
2
1
1
1
1
1
5
1
1
1
1
1
5
1
2
5
1
1
1
1
1
1
2
1
1
1
4
1
2
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
1
1
1
1
1
2
1
6
1
1
1
1
1
1
1
1
2
1
1
3
1
1
1
1
1
1
1
1
1
1
2
1
1
1
4
1
4
1
1
3
1
1
1
1
1
1
1
1
3
1
3
1
1
1
1
1
2
3
1
1
1
1
1
1
1
1
2
1
1
1
1
1
2
1
3
1
1
1
1
5
1
6
1
1
1
1
1
1
2
1
1
1
1
5
1
1
1
1
3
2
2
1
4
1
3
5
1
1
1
1
1
1
1
1
1
1
4
3
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
2
5
1
1
1
2
1
1
1
1
1
1
1
1
1
1
1
3
1
1
1
2
1
1
1
2
1
1
1
1
2
1
1
1
1
2
1
5
1
1
1
1
1
1
1
1
1
1
5
1
1
1
1
1
2
1
1
1
1
1
1
1
1
2
1
1
1
3
1
1
4
1
1
1
1
1
1
1
1
1
1
5
1
1
1
1
1
5
1
1
6
1
1
1
1
1
1
1
1
1
1
1
4
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
1
4
1
6
1
2
1
1
5
1
1
2
1
2
1
4
1
1
1
1
1
1
6
1
1
1
1
2
2
5
1
1
1
2
1
1
1
1
1
1
1
1
1
1
2
1
1
1
1
1
2
1
1
2
1
1
1
1
1
2
1
1
1
1
1
1
1
2
1
1
1
1
1
2
1
1
1
1
2
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
1
2
1
1
1
1
1
1
1
3
1
1
1
1
1
1
1
1
2
1
6
1
1
1
1
1
1
1
1
5
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
6
1
2
5
1
1
1
1
1
2
1
3
1
2
5
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
3
1
1
1
1
1
1
5
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
1
1
1
1
1
1
1
1
1
2
2
1
2
1
1
1
1
1
1
1
1
1
1
1
2
1
1
5
1
1
1
2
1
1
1
1
1
1
1
1
1
1
2
5
1
1
1
1
1
4
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
3
2
1
1
1
1
1
3
4
1
1
1
1
1
3
1
1
1
1
1
1
1
2
5
1
1
1
5
1
6
1
1
1
1
1
1
1
1
5
1
1
1
1
1
1
1
1
6
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
3
1
3
2
1
1
1
1
1
1
1
Query:
-- 20. Get average trip distances for Taxi trips in 2016
SELECT AVG(`trip_distance`) AS avg_trip_distance_miles
FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
WHERE EXTRACT(YEAR FROM `pickup_datetime`) = 2016;
Answer:
avg_trip_distance_miles
4.768565009352372
End Exploring Related Columns
Task: For the top 20 Citi Bike routes in 2016, which route is faster than yellow taxis and among those, which one has the longest average bike duration? Please provide the start station name of this route. The coordinates are rounded to three decimals.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: After analyzing the top 20 Citi Bike routes in 2016, we found that the route starting from **"Pershing Square North"** is faster by bike than by yellow taxis, and among these routes, it has the longest average bike trip duration.

```csv
Start_station_name
Pershing Square North
(Attention: answer in one row)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: 

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-19 04:36:10 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 04:36:10 - root - INFO - ```sql
WITH top_citi_bike_routes AS (
  SELECT 
    start_station_name,
    end_station_name,
    ROUND(start_station_latitude, 3) AS start_lat,
    ROUND(start_station_longitude, 3) AS start_lon,
    ROUND(end_station_latitude, 3) AS end_lat,
    ROUND(end_station_longitude, 3) AS end_lon,
    COUNT(*) AS trip_count,
    AVG(tripduration) AS avg_bike_duration
  FROM `bigquery-public-data.new_york.citibike_trips`
  WHERE EXTRACT(YEAR FROM starttime) = 2016
  GROUP BY start_station_name, end_station_name, start_lat, start_lon, end_lat, end_lon
  ORDER BY trip_count DESC
  LIMIT 20
),
taxi_trips_filtered AS (
  SELECT 
    ROUND(pickup_latitude, 3) AS pickup_lat,
    ROUND(pickup_longitude, 3) AS pickup_lon,
    ROUND(dropoff_latitude, 3) AS dropoff_lat,
    ROUND(dropoff_longitude, 3) AS dropoff_lon,
    AVG(TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, SECOND)) AS avg_taxi_duration
  FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
  WHERE EXTRACT(YEAR FROM pickup_datetime) = 2016
    AND pickup_latitude IS NOT NULL
    AND pickup_longitude IS NOT NULL
    AND dropoff_latitude IS NOT NULL
    AND dropoff_longitude IS NOT NULL
    AND ABS(pickup_latitude) > 0
    AND ABS(pickup_longitude) > 0
    AND ABS(dropoff_latitude) > 0
    AND ABS(dropoff_longitude) > 0
  GROUP BY pickup_lat, pickup_lon, dropoff_lat, dropoff_lon
),
routes_with_taxi_data AS (
  SELECT 
    routes.start_station_name,
    routes.end_station_name,
    routes.avg_bike_duration,
    taxi.avg_taxi_duration
  FROM top_citi_bike_routes AS routes
  INNER JOIN taxi_trips_filtered AS taxi
    ON routes.start_lat = taxi.pickup_lat
    AND routes.start_lon = taxi.pickup_lon
    AND routes.end_lat = taxi.dropoff_lat
    AND routes.end_lon = taxi.dropoff_lon
),
bike_faster_routes AS (
  SELECT
    start_station_name,
    end_station_name,
    avg_bike_duration,
    avg_taxi_duration
  FROM routes_with_taxi_data
  WHERE avg_bike_duration < avg_taxi_duration
)
SELECT start_station_name
FROM bike_faster_routes
ORDER BY avg_bike_duration DESC
LIMIT 1;
```
2025-01-19 04:36:17 - root - INFO - itercount: 1
2025-01-19 04:36:17 - root - INFO - 0
2025-01-19 04:36:17 - root - INFO - results: 
start_station_name
12 Ave & W 40 St


2025-01-19 04:36:17 - root - INFO - Please check the answer again by reviewing For the top 20 Citi Bike routes in 2016, which route is faster than yellow taxis and among those, which one has the longest average bike duration? Please provide the start station name of this route. The coordinates are rounded to three decimals., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: After analyzing the top 20 Citi Bike routes in 2016, we found that the route starting from **"Pershing Square North"** is faster by bike than by yellow taxis, and among these routes, it has the longest average bike trip duration.

```csv
Start_station_name
Pershing Square North
(Attention: answer in one row)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
start_station_name
12 Ave & W 40 St
Current sql:
WITH top_citi_bike_routes AS (
  SELECT 
    start_station_name,
    end_station_name,
    ROUND(start_station_latitude, 3) AS start_lat,
    ROUND(start_station_longitude, 3) AS start_lon,
    ROUND(end_station_latitude, 3) AS end_lat,
    ROUND(end_station_longitude, 3) AS end_lon,
    COUNT(*) AS trip_count,
    AVG(tripduration) AS avg_bike_duration
  FROM `bigquery-public-data.new_york.citibike_trips`
  WHERE EXTRACT(YEAR FROM starttime) = 2016
  GROUP BY start_station_name, end_station_name, start_lat, start_lon, end_lat, end_lon
  ORDER BY trip_count DESC
  LIMIT 20
),
taxi_trips_filtered AS (
  SELECT 
    ROUND(pickup_latitude, 3) AS pickup_lat,
    ROUND(pickup_longitude, 3) AS pickup_lon,
    ROUND(dropoff_latitude, 3) AS dropoff_lat,
    ROUND(dropoff_longitude, 3) AS dropoff_lon,
    AVG(TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, SECOND)) AS avg_taxi_duration
  FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
  WHERE EXTRACT(YEAR FROM pickup_datetime) = 2016
    AND pickup_latitude IS NOT NULL
    AND pickup_longitude IS NOT NULL
    AND dropoff_latitude IS NOT NULL
    AND dropoff_longitude IS NOT NULL
    AND ABS(pickup_latitude) > 0
    AND ABS(pickup_longitude) > 0
    AND ABS(dropoff_latitude) > 0
    AND ABS(dropoff_longitude) > 0
  GROUP BY pickup_lat, pickup_lon, dropoff_lat, dropoff_lon
),
routes_with_taxi_data AS (
  SELECT 
    routes.start_station_name,
    routes.end_station_name,
    routes.avg_bike_duration,
    taxi.avg_taxi_duration
  FROM top_citi_bike_routes AS routes
  INNER JOIN taxi_trips_filtered AS taxi
    ON routes.start_lat = taxi.pickup_lat
    AND routes.start_lon = taxi.pickup_lon
    AND routes.end_lat = taxi.dropoff_lat
    AND routes.end_lon = taxi.dropoff_lon
),
bike_faster_routes AS (
  SELECT
    start_station_name,
    end_station_name,
    avg_bike_duration,
    avg_taxi_duration
  FROM routes_with_taxi_data
  WHERE avg_bike_duration < avg_taxi_duration
)
SELECT start_station_name
FROM bike_faster_routes
ORDER BY avg_bike_duration DESC
LIMIT 1;
2025-01-19 04:37:11 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 04:37:11 - root - INFO - After analyzing the top 20 Citi Bike routes in 2016, we found that the route starting from **"12 Ave & W 40 St"** is faster by bike than by yellow taxis, and among these routes, it has the longest average bike trip duration.

```csv
Start_station_name
12 Ave & W 40 St
(Attention: answer in one row)
```

```sql
WITH top_citi_bike_routes AS (
  SELECT 
    start_station_name,
    end_station_name,
    ROUND(start_station_latitude, 3) AS start_lat,
    ROUND(start_station_longitude, 3) AS start_lon,
    ROUND(end_station_latitude, 3) AS end_lat,
    ROUND(end_station_longitude, 3) AS end_lon,
    COUNT(*) AS trip_count,
    ROUND(AVG(tripduration), 4) AS avg_bike_duration
  FROM `bigquery-public-data.new_york.citibike_trips`
  WHERE EXTRACT(YEAR FROM starttime) = 2016
  GROUP BY start_station_name, end_station_name, start_lat, start_lon, end_lat, end_lon
  ORDER BY trip_count DESC
  LIMIT 20
),
taxi_trips_filtered AS (
  SELECT 
    ROUND(pickup_latitude, 3) AS pickup_lat,
    ROUND(pickup_longitude, 3) AS pickup_lon,
    ROUND(dropoff_latitude, 3) AS dropoff_lat,
    ROUND(dropoff_longitude, 3) AS dropoff_lon,
    ROUND(AVG(TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, SECOND)), 4) AS avg_taxi_duration
  FROM `bigquery-public-data.new_york.tlc_yellow_trips_2016`
  WHERE EXTRACT(YEAR FROM pickup_datetime) = 2016
    AND pickup_latitude IS NOT NULL
    AND pickup_longitude IS NOT NULL
    AND dropoff_latitude IS NOT NULL
    AND dropoff_longitude IS NOT NULL
    AND ABS(pickup_latitude) > 0
    AND ABS(pickup_longitude) > 0
    AND ABS(dropoff_latitude) > 0
    AND ABS(dropoff_longitude) > 0
  GROUP BY pickup_lat, pickup_lon, dropoff_lat, dropoff_lon
),
routes_with_taxi_data AS (
  SELECT 
    routes.start_station_name,
    routes.end_station_name,
    routes.avg_bike_duration,
    taxi.avg_taxi_duration
  FROM top_citi_bike_routes AS routes
  INNER JOIN taxi_trips_filtered AS taxi
    ON routes.start_lat = taxi.pickup_lat
    AND routes.start_lon = taxi.pickup_lon
    AND routes.end_lat = taxi.dropoff_lat
    AND routes.end_lon = taxi.dropoff_lon
),
bike_faster_routes AS (
  SELECT
    start_station_name,
    end_station_name,
    avg_bike_duration,
    avg_taxi_duration
  FROM routes_with_taxi_data
  WHERE avg_bike_duration < avg_taxi_duration
)
SELECT start_station_name
FROM bike_faster_routes
ORDER BY avg_bike_duration DESC
LIMIT 1;
```
2025-01-19 04:37:17 - root - INFO - itercount: 2
2025-01-19 04:37:17 - root - INFO - 0
2025-01-19 04:37:17 - root - INFO - Total iteration counts: 2
