2025-01-18 02:45:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 02:46:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 02:46:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-18 02:46:25 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:25 - root - INFO - SQL:
-- Query 1: Get distinct years available in the data
SELECT DISTINCT "calendar_year"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Results:
calendar_year
2020
2019
2018

2025-01-18 02:46:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 02:46:26 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:27 - root - INFO - SQL:
-- Query 2: Get distinct month numbers
SELECT DISTINCT "month_number"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Results:
month_number
8
7
5
4
3
9
6

2025-01-18 02:46:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-18 02:46:28 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:29 - root - INFO - SQL:
-- Query 3: Get distinct week numbers
SELECT DISTINCT "week_number"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Results:
week_number
36
35
34
33
32
31
30
29
27
26
25
24
23
22
20
19
18
17
16
15
14
28
21
13

2025-01-18 02:46:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 13
2025-01-18 02:46:30 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:30 - root - INFO - SQL:
-- Query 4: Get all week_dates for mid-June across years
SELECT DISTINCT "week_date"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "week_date" LIKE '%-06-%'
LIMIT 1000
Results:
week_date
2020-06-29
2020-06-22
2020-06-15
2020-06-08
2020-06-01
2019-06-24
2019-06-17
2019-06-10
2019-06-03
2018-06-25
2018-06-11
2018-06-04
2018-06-18

2025-01-18 02:46:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 02:46:32 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:32 - root - INFO - SQL:
-- Query 5: Get sales data for weeks before June 15, 2018
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018 AND "week_date" < '2018-06-15'
LIMIT 1000
Results:
Too long, hard cut:
week_date,sales
2018-06-11,8872
2018-06-11,599428
2018-06-11,3376
2018-06-11,9067
2018-06-11,1106388
2018-06-11,11342
2018-06-11,26129
2018-06-11,4981850
2018-06-11,2503852
2018-06-11,7784
2018-06-11,37087
2018-06-11,21396
2018-06-11,25158
2018-06-11,11434
2018-06-11,5089
2018-06-11,13407541
2018-06-11,147672
2018-06-11,2295726
2018-06-11,4348
2018-06-11,24241
2018-06-11,75934
2018-06-11,16319647
2018-06-11,28537
2018-06-11,10046
2018-06-11,425176
2018-06-11,18162
2018-06-11,3833
2018-06-11,315
2018-06-11,1112686
2018-06-11,18746
2018-06-11,7553
2018-06-11,14155
2018-06-11,204864
2018-06-11,20648
2018-06-11,6992
2018-06-11,874977
2018-06-11,8892
2018-06-11,19120
2018-06-11,45937
2018-06-11,590874
2018-06-11,2823
2018-06-11,4747642
2018-06-11,1474258
2018-06-11,1661208
2018-06-11,2025226
2018-06-11,1057265
2018-06-11,872544
2018-06-11,194891
2018-06-11,4783369
2018-06-11,16698
2018-06-11,692614
2018-06-11,6065268
2018-06-11,29761
2018-06-11,670490
2018-06-11,33556
2018-06-11,2042
2018-06-11,21615
2018-06-11,2239999
2018-06-11,5229
2018-06-11,406698
2018-06-11,24213
2018-06-11,2869364
2018-06-11,818381
2018-06-11,3629615
2018-06-11,1344116
2018-06-11,2641
2018-06-11,16338668
2018-06-11,466471
2018-06-11,457686
2018-06-11,1807
2018-06-11,8089459
2018-06-11,3188543
2018-06-11,8956
2018-06-11,34876
2018-06-11,57675
2018-06-11,5976020
2018-06-11,1263
2018-06-11,4653781
2018-06-11,1083
2018-06-11,2172474
2018-06-11,675764
2018-06-11,70884
2018-06-11,13818746
2018-06-11,29083
2018-06-11,866655
2018-06-11,127191
2018-06-11,247971
2018-06-11,370955
2018-06-11,43580
2018-06-11,973450
2018-06-11,2601253
2018-06-11,42687
2018-06-11,643833
2018-06-11,17298594
2018-06-11,103002
2018-06-11,8950657
2018-06-11,3521233
2018-06-11,1238
2018-06-11,3015554
2018-06-11,3735576
2018-06-11,2364447
2018-06-11,5083
2018-06-11,2582650
2018-06-11,2594216
2018-06-11,782355
2018-06-11,22862
2018-06-11,36422
2018-06-11,863137
2018-06-11,1025535
2018-06-11,3688874
2018-06-11,3451215
2018-06-11,45457692
2018-06-11,1447
2018-06-11,1869959
2018-06-11,424744
2018-06-11,9492
2018-06-11,1657858
2018-06-11,292720
2018-06-11,395095
2018-06-11,281396
2018-06-11,5154
2018-06-11,1398343
2018-06-11,3997517
2018-06-11,12219442
2018-06-11,183079
2018-06-11,8844241
2018-06-11,41795
2018-06-11,288966
2018-06-11,59992
2018-06-11,67957
2018-06-11,949969
2018-06-11,200527
2018-06-11,11731
2018-06-11,80675
2018-06-11,974570
2018-06-11,2270402
2018-06-11,5297231
2018-06-11,516
2018-06-11,29603
2018-06-11,11943362
2018-06-11,168689
2018-06-11,72259
2018-06-11,1674382
2018-06-11,78217
2018-06-11,6610714
2018-06-11,27898
2018-06-11,42154
2018-06-11,317882
2018-06-11,141389
2018-06-11,474
2018-06-11,11700
2018-06-11,107708
2018-06-11,1097916
2018-06-11,12869
2018-06-11,42898
2018-06-11,3862038
2018-06-11,3773700
2018-06-11,101267
2018-06-11,191115
2018-06-11,1982463
2018-06-11,1788
2018-06-11,140018
2018-06-11,554435
2018-06-11,18888
2018-06-11,176422
2018-06-11,45941
2018-06-11,20798
2018-06-11,46374089
2018-06-11,62744987
2018-06-11,20499
2018-06-11,499003
2018-06-11,264516
2018-06-11,66093
2018-06-11,4283
2018-06-11,7584275
2018-06-11,63701
2018-06-11,165
2018-06-11,1131
2018-06-11,1405097
2018-06-11,2308082
2018-06-11,56029
2018-06-11,263917
2018-06-11,61774
2018-06-11,25171
2018-06-11,24975
2018-06-11,2750
2018-06-11,410843
2018-06-11,4688696
2018-06-11,18580
2018-06-11,179999
2018-06-11,27988
2018-06-11,35506
2018-06-11,2103267
2018-06-11,5275148
2018-06-11,76242
2018-06-11,10712
2018-06-11,9776
2018-06-11,24734
2018-06-11,32038
2018-06-11,505429
2018-06-11,560894
2018-06-11,233158
2018-06-11,55002
2018-06-11,19258180
2018-06-11,274177
2018-06-11,15710
2018-06-11,8679
2018-06-11,1230114
2018-06-11,15294732
2018-06-11,25171
2018-06-11,505170
2018-06-11,864993
2018-06-11,87193
2018-06-11,14242
2018-06-11,2111113
2018-06-11,22006
2018-06-11,247
2018-06-11,1679258
2018-06-11,179446
2018-06-11,4494744
2018-06-11,789593
2018-06-11,3935578
2018-06-11,26016926
2018-06-11,190429
2018-06-11,34453
2018-06-11,3855
2018-06-11,71480
2018-06-11,7059
2018-06-11,809932
2018-06-11,48298
2018-06-11,295585
2018-06-11,2270
2018-06-11,319
2018-06-11,1326
2018-06-11,15372
2018-06-11,1391101
2018-06-11,191428
2018-06-11,99690
2018-06-04,856954
2018-06-04,17430358
2018-06-04,90749
2018-06-04,338624
2018-06-04,608
2018-06-04,11888324
2018-06-04,3860699
2018-06-04,3156
2018-06-04,4119
2018-06-04,1611020
2018-06-04,193013
2018-06-04,304043
2018-06-04,20111
2018-06-04,190508
2018-06-04,8557
2018-06-04,479062
2018-06-04,660944
2018-06-04,46330
2018-06-04,3278
2018-06-04,208182
2018-06-04,25295650
2018-06-04,27450
2018-06-04,102197
2018-06-04,383314
2018-06-04,574447
2018-06-04,9098
2018-06-04,68874
2018-06-04,2129350
2018-06-04,19407
2018-06-04,324667
2018-06-04,52156
2018-06-04,3658363
2018-06-04,18960302
2018-06-04,35244
2018-06-04,12739
2018-06-04,3090
2018-06-04,4528994
2018-06-04,965704
2018-06-04,1152276
2018-06-04,40963
2018-06-04,1061363
2018-06-04,550332
2018-06-04,16291305
2018-

2025-01-18 02:46:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 02:46:34 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:34 - root - INFO - SQL:
-- Query 6: Get sales data for weeks after June 15, 2018
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018 AND "week_date" > '2018-06-15'
LIMIT 1000
Results:
Too long, hard cut:
week_date,sales
2018-09-03,4061587
2018-09-03,2567629
2018-09-03,2595500
2018-09-03,31963
2018-09-03,47435
2018-09-03,919696
2018-09-03,978070
2018-09-03,1947
2018-09-03,91267
2018-09-03,2285900
2018-09-03,12731
2018-09-03,29030
2018-09-03,1116307
2018-09-03,80997
2018-09-03,14120
2018-09-03,5162052
2018-09-03,5696
2018-09-03,77189
2018-09-03,6127358
2018-09-03,9835
2018-09-03,43420
2018-09-03,590212
2018-09-03,2001519
2018-09-03,32805
2018-09-03,1396231
2018-09-03,13524
2018-09-03,82155
2018-09-03,218535
2018-09-03,3767499
2018-09-03,628
2018-09-03,16827
2018-09-03,811398
2018-09-03,110020
2018-09-03,15313
2018-09-03,841204
2018-09-03,18637
2018-09-03,221475
2018-09-03,14061632
2018-09-03,1748009
2018-09-03,591752
2018-09-03,3674012
2018-09-03,1722458
2018-09-03,2628980
2018-09-03,11781
2018-09-03,48465750
2018-09-03,6146003
2018-09-03,25314
2018-09-03,4697152
2018-09-03,26659
2018-09-03,990948
2018-09-03,196078
2018-09-03,23120
2018-09-03,8117339
2018-09-03,887810
2018-09-03,18314
2018-09-03,217669
2018-09-03,4118
2018-09-03,68725
2018-09-03,71260
2018-09-03,22079
2018-09-03,28551
2018-09-03,4476
2018-09-03,415523
2018-09-03,1767
2018-09-03,10195
2018-09-03,1096480
2018-09-03,12316657
2018-09-03,338184
2018-09-03,275951
2018-09-03,34935
2018-09-03,133122
2018-09-03,211190
2018-09-03,7481
2018-09-03,22910
2018-09-03,10951
2018-09-03,3503579
2018-09-03,7343
2018-09-03,552065
2018-09-03,2452043
2018-09-03,343476
2018-09-03,306883
2018-09-03,46258
2018-09-03,4244
2018-09-03,283975
2018-09-03,1723
2018-09-03,64890
2018-09-03,70303
2018-09-03,4858213
2018-09-03,26250
2018-09-03,348668
2018-09-03,62994
2018-09-03,197148
2018-09-03,37572
2018-09-03,9134
2018-09-03,135087
2018-09-03,16132084
2018-09-03,24829
2018-09-03,2333272
2018-09-03,1020147
2018-09-03,40367
2018-09-03,2262960
2018-09-03,12819
2018-09-03,142895
2018-09-03,26528
2018-09-03,211870
2018-09-03,3023
2018-09-03,8921
2018-09-03,2728
2018-09-03,51498
2018-09-03,414760
2018-09-03,19684
2018-09-03,1035142
2018-09-03,1913519
2018-09-03,9172
2018-09-03,674495
2018-09-03,285668
2018-09-03,219373
2018-09-03,1992
2018-09-03,77337
2018-09-03,3570993
2018-09-03,17018241
2018-09-03,39127
2018-09-03,1643186
2018-09-03,2202824
2018-09-03,505972
2018-09-03,6338
2018-09-03,688739
2018-09-03,33458
2018-09-03,433337
2018-09-03,1424830
2018-09-03,22134
2018-09-03,885777
2018-09-03,3925467
2018-09-03,527007
2018-09-03,2662626
2018-09-03,45635
2018-09-03,49816
2018-09-03,1254182
2018-09-03,204671
2018-09-03,11283
2018-09-03,46103
2018-09-03,580178
2018-09-03,767576
2018-09-03,33782
2018-09-03,11982961
2018-09-03,170660
2018-09-03,1014
2018-09-03,2815683
2018-09-03,317289
2018-09-03,64738913
2018-09-03,336
2018-09-03,475798
2018-09-03,8331
2018-09-03,309415
2018-09-03,7833159
2018-09-03,4064836
2018-09-03,7890
2018-09-03,3820245
2018-09-03,4636139
2018-09-03,837698
2018-09-03,44228
2018-09-03,661
2018-09-03,555072
2018-09-03,20151180
2018-09-03,2232
2018-09-03,1839899
2018-09-03,3519
2018-09-03,21403
2018-09-03,88095
2018-09-03,3112724
2018-09-03,100572
2018-09-03,44646
2018-09-03,86022
2018-09-03,3555
2018-09-03,46961088
2018-09-03,333131
2018-09-03,635306
2018-09-03,23121
2018-09-03,998378
2018-09-03,3293146
2018-09-03,27056859
2018-09-03,1202476
2018-09-03,18284
2018-09-03,11483
2018-09-03,2225780
2018-09-03,20609
2018-09-03,18040008
2018-09-03,1469805
2018-09-03,153789
2018-09-03,6792399
2018-09-03,29456
2018-09-03,5409703
2018-09-03,56467
2018-09-03,12516
2018-09-03,158813
2018-09-03,704015
2018-09-03,4523
2018-09-03,14004934
2018-09-03,39806
2018-09-03,15235
2018-09-03,166175
2018-09-03,4991682
2018-09-03,25439
2018-09-03,3195980
2018-09-03,45153
2018-09-03,2112
2018-09-03,17302402
2018-09-03,4886261
2018-09-03,406534
2018-09-03,2395716
2018-09-03,9559294
2018-09-03,432100
2018-09-03,2218383
2018-09-03,5195994
2018-09-03,29868
2018-09-03,1194485
2018-09-03,9113287
2018-09-03,45359
2018-09-03,8426
2018-09-03,118205
2018-09-03,63955
2018-09-03,10809
2018-09-03,1132140
2018-09-03,16634
2018-09-03,1444
2018-09-03,73215
2018-09-03,1712121
2018-09-03,1581
2018-09-03,623714
2018-09-03,33679
2018-09-03,8831
2018-09-03,35199
2018-09-03,2632
2018-09-03,3990111
2018-09-03,6430
2018-09-03,185709
2018-09-03,1451739
2018-08-27,417133
2018-08-27,306710
2018-08-27,7772144
2018-08-27,58182
2018-08-27,11830
2018-08-27,409784
2018-08-27,3768596
2018-08-27,1046565
2018-08-27,27029237
2018-08-27,34518
2018-08-27,426984
2018-08-27,7147
2018-08-27,1056
2018-08-27,6954362
2018-08-27,471
2018-08-27,4801366
2018-08-27,4719614
2018-08-27,3803349
2018-08-27,1902
2018-08-27,9709
2018-08-27,4959
2018-08-27,46206
2018-08-27,1151960
2018-08-27,48721552
2018-08-27,43177
2018-08-27,642010
2018-08-27,148940
2018-08-27,559020
2018-08-27,147770
2018-08-27,31915
2018-08-27,40880
2018-08-27,1327
2018-08-27,1199
2018-08-27,3052667
2018-08-27,52176
2018-08-27,1278085
2018-08-27,982749
2018-08-27,499027
2018-08-27,19710
2018-08-27,9073
2018-08-27,24678
2018-08-27,15927682
2018-08-27,5157614
2018-08-27,6296

2025-01-18 02:46:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-18 02:46:35 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:36 - root - INFO - SQL:
-- Query 7: Get total sales per week for 2019
SELECT "week_date", SUM("sales") AS "total_sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019
GROUP BY "week_date"
LIMIT 1000
Results:
week_date,total_sales
2019-09-02,581305293
2019-08-26,580274015
2019-08-19,576006984
2019-08-12,573749878
2019-08-05,575209431
2019-07-22,578808584
2019-07-15,571261970
2019-07-08,578449344
2019-07-01,559413335
2019-07-29,573703558
2019-06-24,555374893
2019-06-10,563298795
2019-06-03,561091415
2019-05-27,564501406
2019-05-20,561098180
2019-05-13,571234200
2019-05-06,580698026
2019-04-15,549169512
2019-04-08,604578468
2019-03-25,581317054
2019-04-29,578911200
2019-06-17,559088818
2019-04-22,574707247
2019-04-01,592780894

2025-01-18 02:46:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 952
2025-01-18 02:46:37 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:38 - root - INFO - SQL:
-- Query 8: Get weeks and sales for four weeks before June 15, 2019
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "week_date" BETWEEN '2019-05-18' AND '2019-06-14'
LIMIT 1000
Results:
Too long, hard cut:
week_date,sales
2019-06-10,3583429
2019-06-10,24912
2019-06-10,27438
2019-06-10,47863371
2019-06-10,438
2019-06-10,248900
2019-06-10,4320748
2019-06-10,917468
2019-06-10,1024245
2019-06-10,17665063
2019-06-10,2085600
2019-06-10,63930481
2019-06-10,49071
2019-06-10,44658
2019-06-10,596
2019-06-10,398975
2019-06-10,25720
2019-06-10,692
2019-06-10,670967
2019-06-10,13472767
2019-06-10,5564759
2019-06-10,1774
2019-06-10,33476
2019-06-10,817840
2019-06-10,42926
2019-06-10,10619
2019-06-10,257154
2019-06-10,15223053
2019-06-10,34895
2019-06-10,197788
2019-06-10,74866
2019-06-10,360593
2019-06-10,707150
2019-06-10,5298
2019-06-10,135583
2019-06-10,45683094
2019-06-10,370982
2019-06-10,11457
2019-06-10,11002
2019-06-10,13563
2019-06-10,108826
2019-06-10,393410
2019-06-10,28306508
2019-06-10,44689
2019-06-10,14154393
2019-06-10,1985537
2019-06-10,9939148
2019-06-10,608300
2019-06-10,5606
2019-06-10,129616
2019-06-10,48587
2019-06-10,3204
2019-06-10,33437
2019-06-10,3563545
2019-06-10,1361886
2019-06-10,719
2019-06-10,2308933
2019-06-10,21058
2019-06-10,7229407
2019-06-10,176906
2019-06-10,440532
2019-06-10,11684
2019-06-10,2934750
2019-06-10,18238815
2019-06-10,1298346
2019-06-10,330
2019-06-10,54769
2019-06-10,33461
2019-06-10,2989057
2019-06-10,71253
2019-06-10,1072062
2019-06-10,13589
2019-06-10,314653
2019-06-10,5346
2019-06-10,117146
2019-06-10,11080
2019-06-10,2385371
2019-06-10,10287
2019-06-10,6864037
2019-06-10,934354
2019-06-10,826850
2019-06-10,3477
2019-06-10,14557
2019-06-10,22635
2019-06-10,2481
2019-06-10,892871
2019-06-10,284661
2019-06-10,5165189
2019-06-10,5395078
2019-06-10,261479
2019-06-10,35899
2019-06-10,5530443
2019-06-10,2473137
2019-06-10,991970
2019-06-10,647734
2019-06-10,3960
2019-06-10,2023
2019-06-10,836261
2019-06-10,20817
2019-06-10,3287968
2019-06-10,63988
2019-06-10,2202
2019-06-10,32873
2019-06-10,1043270
2019-06-10,5321
2019-06-10,1958181
2019-06-10,599201
2019-06-10,22935
2019-06-10,815552
2019-06-10,4232669
2019-06-10,4385594
2019-06-10,2163
2019-06-10,665862
2019-06-10,3223292
2019-06-10,39301
2019-06-10,12341
2019-06-10,4424506
2019-06-10,92900
2019-06-10,1364893
2019-06-10,1453001
2019-06-10,2357833
2019-06-10,553618
2019-06-10,594425
2019-06-10,9970781
2019-06-10,2167545
2019-06-10,107940
2019-06-10,6452
2019-06-10,1814066
2019-06-10,2285957
2019-06-10,622599
2019-06-10,40122
2019-06-10,260829
2019-06-10,28506
2019-06-10,50407
2019-06-10,69776
2019-06-10,16220
2019-06-10,21058788
2019-06-10,17187874
2019-06-10,2331370
2019-06-10,3397422
2019-06-10,390
2019-06-10,16993
2019-06-10,388425
2019-06-10,700099
2019-06-10,203948
2019-06-10,68969
2019-06-10,92126
2019-06-10,13379
2019-06-10,29386
2019-06-10,32298
2019-06-10,28347
2019-06-10,1423932
2019-06-10,1348660
2019-06-10,6976
2019-06-10,36178
2019-06-10,12329
2019-06-10,12110841
2019-06-10,1584009
2019-06-10,189131
2019-06-10,121329
2019-06-10,355916
2019-06-10,84782
2019-06-10,186006
2019-06-10,591
2019-06-10,124503
2019-06-10,3452208
2019-06-10,250428
2019-06-10,48411
2019-06-10,385139
2019-06-10,49177
2019-06-10,6309504
2019-06-10,761907
2019-06-10,69576
2019-06-10,3855
2019-06-10,13422
2019-06-10,53853
2019-06-10,6551
2019-06-10,48186
2019-06-10,206351
2019-06-10,420973
2019-06-10,91443
2019-06-10,45045
2019-06-10,55804
2019-06-10,2523524
2019-06-10,432132
2019-06-10,2989
2019-06-10,616983
2019-06-10,29250
2019-06-10,29648
2019-06-10,46484
2019-06-10,103504
2019-06-10,31518
2019-06-10,1817300
2019-06-10,240933
2019-06-10,703981
2019-06-10,48232
2019-06-10,29077
2019-06-10,1642732
2019-06-10,19108
2019-06-10,16029572
2019-06-10,5882328
2019-06-10,34312
2019-06-10,2551886
2019-06-10,272539
2019-06-10,141855
2019-06-10,1213423
2019-06-10,4385571
2019-06-10,74402
2019-06-10,1928884
2019-06-10,7888
2019-06-10,10793
2019-06-10,341969
2019-06-10,5007001
2019-06-10,38922
2019-06-10,1192869
2019-06-10,16171
2019-06-10,30484
2019-06-10,2146934
2019-06-10,25423
2019-06-10,401366
2019-06-10,1952
2019-06-10,271084
2019-06-10,2709105
2019-06-10,3262039
2019-06-10,18023
2019-06-10,15865
2019-06-10,1095376
2019-06-10,8425635
2019-06-10,26164
2019-06-10,946820
2019-06-10,9844
2019-06-10,5362681
2019-06-10,99448
2019-06-10,22261
2019-06-10,8321738
2019-06-10,371712
2019-06-10,163838
2019-06-10,491734
2019-06-03,5686
2019-06-03,13452948
2019-06-03,10045104
2019-06-03,12374
2019-06-03,37383
2019-06-03,2162952
2019-06-03,4412254
2019-06-03,650
2019-06-03,24813
2019-06-03,63098
2019-06-03,1357741
2019-06-03,50710
2019-06-03,320969
2019-06-03,5966719
2019-06-03,2344702
2019-06-03,10836
2019-06-03,607669
2019-06-03,385829
2019-06-03,26053
2019-06-03,928
2019-06-03,74055
2019-06-03,65421
2019-06-03,11856
2019-06-03,2151091
2019-06-03,605388
2019-06-03,80482
2019-06-03,27191
2019-06-03,885653
2019-06-03,127646
2019-06-03,166362
2019-06-03,31920
2019-06-03,128857
2019-06-03,28328
2019-06-03,10067270
2019-06-03,46822
2019-06-03,36809
2019-06-03,13811
2019-06-03,35494
2019-06-03,10211
2019-06-03,2710
2019-06-03,43851
2019-06-03,681786
2019-06-03,4902

2025-01-18 02:46:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 952
2025-01-18 02:46:39 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:39 - root - INFO - SQL:
-- Query 9: Get weeks and sales for four weeks after June 15, 2019
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "week_date" BETWEEN '2019-06-15' AND '2019-07-12'
LIMIT 1000
Results:
Too long, hard cut:
week_date,sales
2019-07-08,211117
2019-07-08,2271810
2019-07-08,11376
2019-07-08,104261
2019-07-08,730522
2019-07-08,4104
2019-07-08,42517
2019-07-08,3422911
2019-07-08,11102
2019-07-08,10064
2019-07-08,74991
2019-07-08,8535
2019-07-08,760068
2019-07-08,10482753
2019-07-08,3178
2019-07-08,6788
2019-07-08,88931
2019-07-08,600329
2019-07-08,250538
2019-07-08,92637
2019-07-08,28692
2019-07-08,43673
2019-07-08,59478
2019-07-08,13044
2019-07-08,5427710
2019-07-08,27681
2019-07-08,2855752
2019-07-08,8731
2019-07-08,274
2019-07-08,8632008
2019-07-08,3841
2019-07-08,430
2019-07-08,42736
2019-07-08,2016572
2019-07-08,416030
2019-07-08,945051
2019-07-08,89057
2019-07-08,43462
2019-07-08,1106851
2019-07-08,4396610
2019-07-08,78888
2019-07-08,16247
2019-07-08,6969368
2019-07-08,15927
2019-07-08,1086
2019-07-08,10239
2019-07-08,7489
2019-07-08,18037839
2019-07-08,383957
2019-07-08,22993
2019-07-08,2006754
2019-07-08,14210
2019-07-08,5964
2019-07-08,1119373
2019-07-08,94216
2019-07-08,2281688
2019-07-08,13038
2019-07-08,30068
2019-07-08,12165
2019-07-08,37203
2019-07-08,2372721
2019-07-08,14968
2019-07-08,3505355
2019-07-08,2660454
2019-07-08,921
2019-07-08,4837455
2019-07-08,1167
2019-07-08,2489907
2019-07-08,3796656
2019-07-08,1932743
2019-07-08,3732
2019-07-08,15396567
2019-07-08,15220097
2019-07-08,83560
2019-07-08,1983
2019-07-08,28527
2019-07-08,161434
2019-07-08,140091
2019-07-08,812411
2019-07-08,33665
2019-07-08,5623154
2019-07-08,6028685
2019-07-08,2368717
2019-07-08,36544
2019-07-08,1266613
2019-07-08,969147
2019-07-08,217673
2019-07-08,7308
2019-07-08,1242747
2019-07-08,23019
2019-07-08,96339
2019-07-08,21302
2019-07-08,41891
2019-07-08,17670
2019-07-08,81238
2019-07-08,20702
2019-07-08,13655139
2019-07-08,600477
2019-07-08,5616
2019-07-08,16077293
2019-07-08,1349368
2019-07-08,13999
2019-07-08,1821432
2019-07-08,609107
2019-07-08,2674512
2019-07-08,610790
2019-07-08,459078
2019-07-08,49181
2019-07-08,17847247
2019-07-08,34278
2019-07-08,3185767
2019-07-08,695
2019-07-08,823955
2019-07-08,624821
2019-07-08,175962
2019-07-08,183970
2019-07-08,41970
2019-07-08,51945
2019-07-08,252114
2019-07-08,1051863
2019-07-08,4437639
2019-07-08,1069852
2019-07-08,17352
2019-07-08,388368
2019-07-08,607111
2019-07-08,1300
2019-07-08,51308
2019-07-08,47975640
2019-07-08,679688
2019-07-08,827795
2019-07-08,986372
2019-07-08,251840
2019-07-08,147848
2019-07-08,36931
2019-07-08,698409
2019-07-08,392103
2019-07-08,2275412
2019-07-08,40148
2019-07-08,28833
2019-07-08,3401659
2019-07-08,33198
2019-07-08,889307
2019-07-08,10022589
2019-07-08,925885
2019-07-08,276011
2019-07-08,47307
2019-07-08,1356241
2019-07-08,1388556
2019-07-08,296466
2019-07-08,335555
2019-07-08,73078
2019-07-08,6456837
2019-07-08,547604
2019-07-08,2394928
2019-07-08,5373915
2019-07-08,107095
2019-07-08,261294
2019-07-08,610742
2019-07-08,281653
2019-07-08,678973
2019-07-08,263908
2019-07-08,4526934
2019-07-08,4313
2019-07-08,51580
2019-07-08,291620
2019-07-08,8268743
2019-07-08,1482163
2019-07-08,131456
2019-07-08,27057
2019-07-08,163543
2019-07-08,1349075
2019-07-08,393250
2019-07-08,34113
2019-07-08,352198
2019-07-08,1644832
2019-07-08,2215
2019-07-08,53986
2019-07-08,135253
2019-07-08,191392
2019-07-08,1643435
2019-07-08,349
2019-07-08,18605341
2019-07-08,384904
2019-07-08,45833
2019-07-08,2977623
2019-07-08,3659756
2019-07-08,1744
2019-07-08,3655229
2019-07-08,2801
2019-07-08,1836881
2019-07-08,336358
2019-07-08,30696
2019-07-08,7594430
2019-07-08,29419
2019-07-08,367047
2019-07-08,403860
2019-07-08,56305
2019-07-08,14639
2019-07-08,3669
2019-07-08,4491883
2019-07-08,70588
2019-07-08,96139
2019-07-08,49243076
2019-07-08,50654
2019-07-08,4312364
2019-07-08,2480
2019-07-08,377649
2019-07-08,2218991
2019-07-08,29602
2019-07-08,10809
2019-07-08,74233
2019-07-08,31853
2019-07-08,37720
2019-07-08,27541
2019-07-08,656939
2019-07-08,440666
2019-07-08,12834
2019-07-08,13571
2019-07-08,28826969
2019-07-08,13036
2019-07-08,1471243
2019-07-08,11965367
2019-07-08,11942
2019-07-08,26177
2019-07-08,5431816
2019-07-08,1018
2019-07-08,22084439
2019-07-08,3020851
2019-07-08,71020
2019-07-08,2627646
2019-07-08,920105
2019-07-08,108002
2019-07-08,5523016
2019-07-08,3179
2019-07-08,30578
2019-07-08,17515
2019-07-08,66105856
2019-07-08,36516
2019-07-01,8257765
2019-07-01,17070
2019-07-01,2430621
2019-07-01,2953902
2019-07-01,2566392
2019-07-01,441745
2019-07-01,2069
2019-07-01,510322
2019-07-01,15847783
2019-07-01,3362661
2019-07-01,139145
2019-07-01,946499
2019-07-01,770203
2019-07-01,26127
2019-07-01,264185
2019-07-01,23199
2019-07-01,907662
2019-07-01,567967
2019-07-01,1679647
2019-07-01,358021
2019-07-01,1354343
2019-07-01,19489
2019-07-01,6372383
2019-07-01,23003
2019-07-01,10101
2019-07-01,1327796
2019-07-01,598471
2019-07-01,569655
2019-07-01,247643
2019-07-01,1203070
2019-07-01,45244
2019-07-01,58469
2019-07-01,5796470
2019-07-01,11824063
2019-07-01,17199917
2019-07-01,13797763
2019-07-01,4284449
2019-07-01,1490417
2019-07-01,101684
2019-07-01,4150200
2019-07-01,4511608
2

2025-01-18 02:46:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-18 02:46:41 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:41 - root - INFO - SQL:
-- Query 10: Get distinct "week_date_formatted" values
SELECT DISTINCT "week_date_formatted"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Results:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26

2025-01-18 02:46:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:42 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 02:46:42 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:43 - root - INFO - SQL:
-- Query 11: Get sales data around mid-June for 2020
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2020 AND "week_date" BETWEEN '2020-05-18' AND '2020-07-12'
LIMIT 1000
Results:
Too long, hard cut:
week_date,sales
2020-07-06,275749
2020-07-06,7059529
2020-07-06,12375
2020-07-06,359403
2020-07-06,48780231
2020-07-06,7647467
2020-07-06,969187
2020-07-06,6400
2020-07-06,4994
2020-07-06,1582259
2020-07-06,668776
2020-07-06,8083
2020-07-06,244785
2020-07-06,1018034
2020-07-06,88857
2020-07-06,3282052
2020-07-06,255
2020-07-06,110244
2020-07-06,887999
2020-07-06,42032
2020-07-06,3455
2020-07-06,11138070
2020-07-06,721874
2020-07-06,256827
2020-07-06,682100
2020-07-06,37050
2020-07-06,55662
2020-07-06,6214520
2020-07-06,136436
2020-07-06,115555
2020-07-06,20474557
2020-07-06,1241439
2020-07-06,2622537
2020-07-06,325193
2020-07-06,36344
2020-07-06,61436
2020-07-06,609
2020-07-06,9068336
2020-07-06,23347
2020-07-06,1710069
2020-07-06,906114
2020-07-06,182
2020-07-06,6882
2020-07-06,9201
2020-07-06,2781013
2020-07-06,1797035
2020-07-06,2380924
2020-07-06,622949
2020-07-06,803916
2020-07-06,6004542
2020-07-06,311406
2020-07-06,25697
2020-07-06,439785
2020-07-06,69555
2020-07-06,258887
2020-07-06,2195016
2020-07-06,1555479
2020-07-06,924200
2020-07-06,15166
2020-07-06,3429645
2020-07-06,238360
2020-07-06,63378896
2020-07-06,918354
2020-07-06,331218
2020-07-06,37637
2020-07-06,2740820
2020-07-06,426852
2020-07-06,2169
2020-07-06,1761918
2020-07-06,2554247
2020-07-06,183866
2020-07-06,3797159
2020-07-06,13212
2020-07-06,4963653
2020-07-06,451177
2020-07-06,3709096
2020-07-06,40809
2020-07-06,27063
2020-07-06,17021169
2020-07-06,146709
2020-07-06,5192225
2020-07-06,142232
2020-07-06,145983
2020-07-06,46303
2020-07-06,1745
2020-07-06,4586
2020-07-06,40385
2020-07-06,5019969
2020-07-06,1596
2020-07-06,24942
2020-07-06,16524293
2020-07-06,53961
2020-07-06,91728
2020-07-06,406081
2020-07-06,2344198
2020-07-06,796093
2020-07-06,27950
2020-07-06,1086528
2020-07-06,86961
2020-07-06,19118
2020-07-06,239295
2020-07-06,2088873
2020-07-06,423729
2020-07-06,5923390
2020-07-06,60073
2020-07-06,678
2020-07-06,2146830
2020-07-06,849767
2020-07-06,380313
2020-07-06,21729
2020-07-06,355406
2020-07-06,17291374
2020-07-06,2315581
2020-07-06,330882
2020-07-06,112146
2020-07-06,851198
2020-07-06,3276611
2020-07-06,15592
2020-07-06,7561
2020-07-06,8883923
2020-07-06,716548
2020-07-06,29108793
2020-07-06,217025
2020-07-06,46232992
2020-07-06,635946
2020-07-06,16310453
2020-07-06,2271038
2020-07-06,435672
2020-07-06,4559185
2020-07-06,1347139
2020-07-06,38732
2020-07-06,11040
2020-07-06,22390
2020-07-06,483735
2020-07-06,1477
2020-07-06,3291
2020-07-06,490012
2020-07-06,5111
2020-07-06,14585
2020-07-06,41662
2020-07-06,31099
2020-07-06,76614
2020-07-06,535423
2020-07-06,32526
2020-07-06,1154719
2020-07-06,1323741
2020-07-06,66956
2020-07-06,3643428
2020-07-06,1167
2020-07-06,11188175
2020-07-06,16364768
2020-07-06,9796
2020-07-06,26990
2020-07-06,901
2020-07-06,2469632
2020-07-06,435958
2020-07-06,8915
2020-07-06,55226
2020-07-06,113658
2020-07-06,12924
2020-07-06,52659
2020-07-06,1852468
2020-07-06,507582
2020-07-06,338
2020-07-06,4986083
2020-07-06,14964981
2020-07-06,403284
2020-07-06,752634
2020-07-06,80992
2020-07-06,35417
2020-07-06,47716
2020-07-06,5542204
2020-07-06,637462
2020-07-06,82262
2020-07-06,26208
2020-07-06,11303
2020-07-06,9889
2020-07-06,3254599
2020-07-06,45209
2020-07-06,23549192
2020-07-06,520
2020-07-06,2996
2020-07-06,2383015
2020-07-06,14544
2020-07-06,1890
2020-07-06,6472357
2020-07-06,2436037
2020-07-06,1655
2020-07-06,11174
2020-07-06,13288
2020-07-06,1472205
2020-07-06,30361
2020-07-06,5242
2020-07-06,45866
2020-07-06,330861
2020-07-06,44553
2020-07-06,190268
2020-07-06,943414
2020-07-06,46728
2020-07-06,20453
2020-07-06,2669073
2020-07-06,7305
2020-07-06,1019429
2020-07-06,11639
2020-07-06,1375040
2020-07-06,190014
2020-07-06,7387040
2020-07-06,3558
2020-07-06,45134
2020-07-06,11439615
2020-07-06,46193
2020-07-06,10863
2020-07-06,18464
2020-07-06,11396
2020-07-06,461684
2020-07-06,23995
2020-07-06,62607
2020-07-06,20817
2020-07-06,21435
2020-07-06,12835
2020-07-06,105029
2020-07-06,1535122
2020-07-06,895842
2020-07-06,3613
2020-07-06,2165894
2020-07-06,1047479
2020-07-06,62554
2020-07-06,8047
2020-07-06,926391
2020-07-06,122755
2020-07-06,43697
2020-07-06,2200505
2020-07-06,4643858
2020-07-06,74071
2020-07-06,82969
2020-07-06,6182738
2020-07-06,53017
2020-07-06,646393
2020-06-29,771649
2020-06-29,248186
2020-06-29,41232
2020-06-29,746
2020-06-29,17430
2020-06-29,28788145
2020-06-29,357156
2020-06-29,3222249
2020-06-29,83692
2020-06-29,6219
2020-06-29,339336
2020-06-29,18485
2020-06-29,2033692
2020-06-29,31393
2020-06-29,2509564
2020-06-29,865
2020-06-29,22101960
2020-06-29,8563
2020-06-29,2444
2020-06-29,1753657
2020-06-29,16297956
2020-06-29,31008
2020-06-29,40816
2020-06-29,2311
2020-06-29,5151347
2020-06-29,47898629
2020-06-29,137746
2020-06-29,474829
2020-06-29,1142258
2020-06-29,3387378
2020-06-29,337
2020-06-29,15402
2020-06-29,473733
2020-06-29,32127
2020-06-29,3372
2020-06-29,621849
2020-06-29,10224
2020-06-29,1283298
2020-06-29,38761
2020-06-29,32575
2020-06-29,2069075
2020-06-29,3518
2020-06-29,9579

2025-01-18 02:46:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 02:46:44 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:44 - root - INFO - SQL:
-- Query 12: Get distinct regions in the data
SELECT DISTINCT "region"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Results:
region
ASIA
USA
EUROPE
AFRICA
CANADA
SOUTH AMERICA
OCEANIA

2025-01-18 02:46:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-18 02:46:46 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:46 - root - INFO - SQL:
-- Query 13: Get total transactions per week for 2018
SELECT "week_date", SUM("transactions") AS "total_transactions"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018
GROUP BY "week_date"
LIMIT 1000
Results:
week_date,total_transactions
2018-09-03,14754885
2018-08-27,14866086
2018-08-20,14630533
2018-08-13,14650155
2018-08-06,14664250
2018-07-30,14517411
2018-07-23,14630429
2018-07-16,14423378
2018-07-09,14433509
2018-07-02,14254080
2018-06-25,14276206
2018-06-18,14239928
2018-06-11,14301607
2018-06-04,14191769
2018-05-28,14334709
2018-04-30,14804758
2018-04-23,14264852
2018-04-16,13764983
2018-04-09,14335920
2018-04-02,14461826
2018-05-21,14300704
2018-05-14,14402634
2018-05-07,14433880
2018-03-26,14467968

2025-01-18 02:46:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 8
2025-01-18 02:46:48 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:48 - root - INFO - SQL:
-- Query 14: Get distinct segments in the data
SELECT DISTINCT "segment"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Results:
segment
C3
F1
unknown
C1
C2
F3
C4
F2

2025-01-18 02:46:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:46:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:46:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:46:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-18 02:46:50 - snowflake.connector.connection - INFO - closed
2025-01-18 02:46:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:46:50 - root - INFO - SQL:
-- Query 15: Get total sales per platform for June 2019
SELECT "platform", SUM("sales") AS "total_sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "month_number" = 6
GROUP BY "platform"
LIMIT 1000
Results:
platform,total_sales
Retail,2181126868
Shopify,57727053

2025-01-18 02:46:50 - root - INFO - itercount: 0
2025-01-18 02:46:50 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
To address your request, let's first identify the relevant tables and columns for the analysis.

**Relevant Table:**

- **"CLEANED_WEEKLY_SALES"**

**Relevant Columns and Potential Usage:**

1. **"calendar_year"**: To filter data for the years 2018, 2019, and 2020.
2. **"week_date"**: To identify the weeks around mid-June.
3. **"sales"**: To calculate total sales before and after June 15 for each year.
4. **"week_number"**: To identify the specific weeks leading up to and following June 15.
5. **"month_number"**: To filter data for the month of June.
6. **"week_date_formatted"**: Useful for date formatting if needed.
7. **"region"**: Potentially used if regional analysis is required.
8. **"platform"**: Could be used to analyze sales across different platforms.
9. **"segment"**: To explore sales across different market segments.
10. **"transactions"**: To analyze the number of transactions in addition to sales.

**Conditions That May Be Used:**

- **"calendar_year" = 2018 OR 2019 OR 2020**: To select the required years.
- **"week_date" BETWEEN specific dates**: To select weeks before and after June 15.
- **"month_number" = 6**: To focus on the month of June.

Here are 15 simple, short, non-nested SQL queries to understand the values in the related columns:

```sql
-- Query 1: Get distinct years available in the data
SELECT DISTINCT "calendar_year"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000;

-- Query 2: Get distinct month numbers
SELECT DISTINCT "month_number"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000;

-- Query 3: Get distinct week numbers
SELECT DISTINCT "week_number"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000;

-- Query 4: Get all week_dates for mid-June across years
SELECT DISTINCT "week_date"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "week_date" LIKE '%-06-%'
LIMIT 1000;

-- Query 5: Get sales data for weeks before June 15, 2018
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018 AND "week_date" < '2018-06-15'
LIMIT 1000;

-- Query 6: Get sales data for weeks after June 15, 2018
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018 AND "week_date" > '2018-06-15'
LIMIT 1000;

-- Query 7: Get total sales per week for 2019
SELECT "week_date", SUM("sales") AS "total_sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019
GROUP BY "week_date"
LIMIT 1000;

-- Query 8: Get weeks and sales for four weeks before June 15, 2019
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "week_date" BETWEEN '2019-05-18' AND '2019-06-14'
LIMIT 1000;

-- Query 9: Get weeks and sales for four weeks after June 15, 2019
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "week_date" BETWEEN '2019-06-15' AND '2019-07-12'
LIMIT 1000;

-- Query 10: Get distinct "week_date_formatted" values
SELECT DISTINCT "week_date_formatted"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000;

-- Query 11: Get sales data around mid-June for 2020
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2020 AND "week_date" BETWEEN '2020-05-18' AND '2020-07-12'
LIMIT 1000;

-- Query 12: Get distinct regions in the data
SELECT DISTINCT "region"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000;

-- Query 13: Get total transactions per week for 2018
SELECT "week_date", SUM("transactions") AS "total_transactions"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018
GROUP BY "week_date"
LIMIT 1000;

-- Query 14: Get distinct segments in the data
SELECT DISTINCT "segment"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000;

-- Query 15: Get total sales per platform for June 2019
SELECT "platform", SUM("sales") AS "total_sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "month_number" = 6
GROUP BY "platform"
LIMIT 1000;
```

Each of these queries is designed to help understand the data in the relevant columns and to explore the conditions needed for the analysis.Query:
-- Query 1: Get distinct years available in the data
SELECT DISTINCT "calendar_year"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Answer:
calendar_year
2020
2019
2018
Query:
-- Query 2: Get distinct month numbers
SELECT DISTINCT "month_number"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Answer:
month_number
8
7
5
4
3
9
6
Query:
-- Query 3: Get distinct week numbers
SELECT DISTINCT "week_number"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Answer:
week_number
36
35
34
33
32
31
30
29
27
26
25
24
23
22
20
19
18
17
16
15
14
28
21
13
Query:
-- Query 4: Get all week_dates for mid-June across years
SELECT DISTINCT "week_date"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "week_date" LIKE '%-06-%'
LIMIT 1000
Answer:
week_date
2020-06-29
2020-06-22
2020-06-15
2020-06-08
2020-06-01
2019-06-24
2019-06-17
2019-06-10
2019-06-03
2018-06-25
2018-06-11
2018-06-04
2018-06-18
Query:
-- Query 5: Get sales data for weeks before June 15, 2018
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018 AND "week_date" < '2018-06-15'
LIMIT 1000
Answer:
Too long, hard cut:
week_date,sales
2018-06-11,8872
2018-06-11,599428
2018-06-11,3376
2018-06-11,9067
2018-06-11,1106388
2018-06-11,11342
2018-06-11,26129
2018-06-11,4981850
2018-06-11,2503852
2018-06-11,7784
2018-06-11,37087
2018-06-11,21396
2018-06-11,25158
2018-06-11,11434
2018-06-11,5089
2018-06-11,13407541
2018-06-11,147672
2018-06-11,2295726
2018-06-11,4348
2018-06-11,24241
2018-06-11,75934
2018-06-11,16319647
2018-06-11,28537
2018-06-11,10046
2018-06-11,425176
2018-06-11,18162
2018-06-11,3833
2018-06-11,315
2018-06-11,1112686
2018-06-11,18746
2018-06-11,7553
2018-06-11,14155
2018-06-11,204864
2018-06-11,20648
2018-06-11,6992
2018-06-11,874977
2018-06-11,8892
2018-06-11,19120
2018-06-11,45937
2018-06-11,590874
2018-06-11,2823
2018-06-11,4747642
2018-06-11,1474258
2018-06-11,1661208
2018-06-11,2025226
2018-06-11,1057265
2018-06-11,872544
2018-06-11,194891
2018-06-11,4783369
2018-06-11,16698
2018-06-11,692614
2018-06-11,6065268
2018-06-11,29761
2018-06-11,670490
2018-06-11,33556
2018-06-11,2042
2018-06-11,21615
2018-06-11,2239999
2018-06-11,5229
2018-06-11,406698
2018-06-11,24213
2018-06-11,2869364
2018-06-11,818381
2018-06-11,3629615
2018-06-11,1344116
2018-06-11,2641
2018-06-11,16338668
2018-06-11,466471
2018-06-11,457686
2018-06-11,1807
2018-06-11,8089459
2018-06-11,3188543
2018-06-11,8956
2018-06-11,34876
2018-06-11,57675
2018-06-11,5976020
2018-06-11,1263
2018-06-11,4653781
2018-06-11,1083
2018-06-11,2172474
2018-06-11,675764
2018-06-11,70884
2018-06-11,13818746
2018-06-11,29083
2018-06-11,866655
2018-06-11,127191
2018-06-11,247971
2018-06-11,370955
2018-06-11,43580
2018-06-11,973450
2018-06-11,2601253
2018-06-11,42687
2018-06-11,643833
2018-06-11,17298594
2018-06-11,103002
2018-06-11,8950657
2018-06-11,3521233
2018-06-11,1238
2018-06-11,3015554
2018-06-11,3735576
2018-06-11,2364447
2018-06-11,5083
2018-06-11,2582650
2018-06-11,2594216
2018-06-11,782355
2018-06-11,22862
2018-06-11,36422
2018-06-11,863137
2018-06-11,1025535
2018-06-11,3688874
2018-06-11,3451215
2018-06-11,45457692
2018-06-11,1447
2018-06-11,1869959
2018-06-11,424744
2018-06-11,9492
2018-06-11,1657858
2018-06-11,292720
2018-06-11,395095
2018-06-11,281396
2018-06-11,5154
2018-06-11,1398343
2018-06-11,3997517
2018-06-11,12219442
2018-06-11,183079
2018-06-11,8844241
2018-06-11,41795
2018-06-11,288966
2018-06-11,59992
2018-06-11,67957
2018-06-11,949969
2018-06-11,200527
2018-06-11,11731
2018-06-11,80675
2018-06-11,974570
2018-06-11,2270402
2018-06-11,5297231
2018-06-11,516
2018-06-11,29603
2018-06-11,11943362
2018-06-11,168689
2018-06-11,72259
2018-06-11,1674382
2018-06-11,78217
2018-06-11,6610714
2018-06-11,27898
2018-06-11,42154
2018-06-11,317882
2018-06-11,141389
2018-06-11,474
2018-06-11,11700
2018-06-11,107708
2018-06-11,1097916
2018-06-11,12869
2018-06-11,42898
2018-06-11,3862038
2018-06-11,3773700
2018-06-11,101267
2018-06-11,191115
2018-06-11,1982463
2018-06-11,1788
2018-06-11,140018
2018-06-11,554435
2018-06-11,18888
2018-06-11,176422
2018-06-11,45941
2018-06-11,20798
2018-06-11,46374089
2018-06-11,62744987
2018-06-11,20499
2018-06-11,499003
2018-06-11,264516
2018-06-11,66093
2018-06-11,4283
2018-06-11,7584275
2018-06-11,63701
2018-06-11,165
2018-06-11,1131
2018-06-11,1405097
2018-06-11,2308082
2018-06-11,56029
2018-06-11,263917
2018-06-11,61774
2018-06-11,25171
2018-06-11,24975
2018-06-11,2750
2018-06-11,410843
2018-06-11,4688696
2018-06-11,18580
2018-06-11,179999
2018-06-11,27988
2018-06-11,35506
2018-06-11,2103267
2018-06-11,5275148
2018-06-11,76242
2018-06-11,10712
2018-06-11,9776
2018-06-11,24734
2018-06-11,32038
2018-06-11,505429
2018-06-11,560894
2018-06-11,233158
2018-06-11,55002
2018-06-11,19258180
2018-06-11,274177
2018-06-11,15710
2018-06-11,8679
2018-06-11,1230114
2018-06-11,15294732
2018-06-11,25171
2018-06-11,505170
2018-06-11,864993
2018-06-11,87193
2018-06-11,14242
2018-06-11,2111113
2018-06-11,22006
2018-06-11,247
2018-06-11,1679258
2018-06-11,179446
2018-06-11,4494744
2018-06-11,789593
2018-06-11,3935578
2018-06-11,26016926
2018-06-11,190429
2018-06-11,34453
2018-06-11,3855
2018-06-11,71480
2018-06-11,7059
2018-06-11,809932
2018-06-11,48298
2018-06-11,295585
2018-06-11,2270
2018-06-11,319
2018-06-11,1326
2018-06-11,15372
2018-06-11,1391101
2018-06-11,191428
2018-06-11,99690
2018-06-04,856954
2018-06-04,17430358
2018-06-04,90749
2018-06-04,338624
2018-06-04,608
2018-06-04,11888324
2018-06-04,3860699
2018-06-04,3156
2018-06-04,4119
2018-06-04,1611020
2018-06-04,193013
2018-06-04,304043
2018-06-04,20111
2018-06-04,190508
2018-06-04,8557
2018-06-04,479062
2018-06-04,660944
2018-06-04,46330
2018-06-04,3278
2018-06-04,208182
2018-06-04,25295650
2018-06-04,27450
2018-06-04,102197
2018-06-04,383314
2018-06-04,574447
2018-06-04,9098
2018-06-04,68874
2018-06-04,2129350
2018-06-04,19407
2018-06-04,324667
2018-06-04,52156
2018-06-04,3658363
2018-06-04,18960302
2018-06-04,35244
2018-06-04,12739
2018-06-04,3090
2018-06-04,4528994
2018-06-04,965704
2018-06-04,1152276
2018-06-04,40963
2018-06-04,1061363
2018-06-04,550332
2018-06-04,16291305
2018-
Query:
-- Query 6: Get sales data for weeks after June 15, 2018
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018 AND "week_date" > '2018-06-15'
LIMIT 1000
Answer:
Too long, hard cut:
week_date,sales
2018-09-03,4061587
2018-09-03,2567629
2018-09-03,2595500
2018-09-03,31963
2018-09-03,47435
2018-09-03,919696
2018-09-03,978070
2018-09-03,1947
2018-09-03,91267
2018-09-03,2285900
2018-09-03,12731
2018-09-03,29030
2018-09-03,1116307
2018-09-03,80997
2018-09-03,14120
2018-09-03,5162052
2018-09-03,5696
2018-09-03,77189
2018-09-03,6127358
2018-09-03,9835
2018-09-03,43420
2018-09-03,590212
2018-09-03,2001519
2018-09-03,32805
2018-09-03,1396231
2018-09-03,13524
2018-09-03,82155
2018-09-03,218535
2018-09-03,3767499
2018-09-03,628
2018-09-03,16827
2018-09-03,811398
2018-09-03,110020
2018-09-03,15313
2018-09-03,841204
2018-09-03,18637
2018-09-03,221475
2018-09-03,14061632
2018-09-03,1748009
2018-09-03,591752
2018-09-03,3674012
2018-09-03,1722458
2018-09-03,2628980
2018-09-03,11781
2018-09-03,48465750
2018-09-03,6146003
2018-09-03,25314
2018-09-03,4697152
2018-09-03,26659
2018-09-03,990948
2018-09-03,196078
2018-09-03,23120
2018-09-03,8117339
2018-09-03,887810
2018-09-03,18314
2018-09-03,217669
2018-09-03,4118
2018-09-03,68725
2018-09-03,71260
2018-09-03,22079
2018-09-03,28551
2018-09-03,4476
2018-09-03,415523
2018-09-03,1767
2018-09-03,10195
2018-09-03,1096480
2018-09-03,12316657
2018-09-03,338184
2018-09-03,275951
2018-09-03,34935
2018-09-03,133122
2018-09-03,211190
2018-09-03,7481
2018-09-03,22910
2018-09-03,10951
2018-09-03,3503579
2018-09-03,7343
2018-09-03,552065
2018-09-03,2452043
2018-09-03,343476
2018-09-03,306883
2018-09-03,46258
2018-09-03,4244
2018-09-03,283975
2018-09-03,1723
2018-09-03,64890
2018-09-03,70303
2018-09-03,4858213
2018-09-03,26250
2018-09-03,348668
2018-09-03,62994
2018-09-03,197148
2018-09-03,37572
2018-09-03,9134
2018-09-03,135087
2018-09-03,16132084
2018-09-03,24829
2018-09-03,2333272
2018-09-03,1020147
2018-09-03,40367
2018-09-03,2262960
2018-09-03,12819
2018-09-03,142895
2018-09-03,26528
2018-09-03,211870
2018-09-03,3023
2018-09-03,8921
2018-09-03,2728
2018-09-03,51498
2018-09-03,414760
2018-09-03,19684
2018-09-03,1035142
2018-09-03,1913519
2018-09-03,9172
2018-09-03,674495
2018-09-03,285668
2018-09-03,219373
2018-09-03,1992
2018-09-03,77337
2018-09-03,3570993
2018-09-03,17018241
2018-09-03,39127
2018-09-03,1643186
2018-09-03,2202824
2018-09-03,505972
2018-09-03,6338
2018-09-03,688739
2018-09-03,33458
2018-09-03,433337
2018-09-03,1424830
2018-09-03,22134
2018-09-03,885777
2018-09-03,3925467
2018-09-03,527007
2018-09-03,2662626
2018-09-03,45635
2018-09-03,49816
2018-09-03,1254182
2018-09-03,204671
2018-09-03,11283
2018-09-03,46103
2018-09-03,580178
2018-09-03,767576
2018-09-03,33782
2018-09-03,11982961
2018-09-03,170660
2018-09-03,1014
2018-09-03,2815683
2018-09-03,317289
2018-09-03,64738913
2018-09-03,336
2018-09-03,475798
2018-09-03,8331
2018-09-03,309415
2018-09-03,7833159
2018-09-03,4064836
2018-09-03,7890
2018-09-03,3820245
2018-09-03,4636139
2018-09-03,837698
2018-09-03,44228
2018-09-03,661
2018-09-03,555072
2018-09-03,20151180
2018-09-03,2232
2018-09-03,1839899
2018-09-03,3519
2018-09-03,21403
2018-09-03,88095
2018-09-03,3112724
2018-09-03,100572
2018-09-03,44646
2018-09-03,86022
2018-09-03,3555
2018-09-03,46961088
2018-09-03,333131
2018-09-03,635306
2018-09-03,23121
2018-09-03,998378
2018-09-03,3293146
2018-09-03,27056859
2018-09-03,1202476
2018-09-03,18284
2018-09-03,11483
2018-09-03,2225780
2018-09-03,20609
2018-09-03,18040008
2018-09-03,1469805
2018-09-03,153789
2018-09-03,6792399
2018-09-03,29456
2018-09-03,5409703
2018-09-03,56467
2018-09-03,12516
2018-09-03,158813
2018-09-03,704015
2018-09-03,4523
2018-09-03,14004934
2018-09-03,39806
2018-09-03,15235
2018-09-03,166175
2018-09-03,4991682
2018-09-03,25439
2018-09-03,3195980
2018-09-03,45153
2018-09-03,2112
2018-09-03,17302402
2018-09-03,4886261
2018-09-03,406534
2018-09-03,2395716
2018-09-03,9559294
2018-09-03,432100
2018-09-03,2218383
2018-09-03,5195994
2018-09-03,29868
2018-09-03,1194485
2018-09-03,9113287
2018-09-03,45359
2018-09-03,8426
2018-09-03,118205
2018-09-03,63955
2018-09-03,10809
2018-09-03,1132140
2018-09-03,16634
2018-09-03,1444
2018-09-03,73215
2018-09-03,1712121
2018-09-03,1581
2018-09-03,623714
2018-09-03,33679
2018-09-03,8831
2018-09-03,35199
2018-09-03,2632
2018-09-03,3990111
2018-09-03,6430
2018-09-03,185709
2018-09-03,1451739
2018-08-27,417133
2018-08-27,306710
2018-08-27,7772144
2018-08-27,58182
2018-08-27,11830
2018-08-27,409784
2018-08-27,3768596
2018-08-27,1046565
2018-08-27,27029237
2018-08-27,34518
2018-08-27,426984
2018-08-27,7147
2018-08-27,1056
2018-08-27,6954362
2018-08-27,471
2018-08-27,4801366
2018-08-27,4719614
2018-08-27,3803349
2018-08-27,1902
2018-08-27,9709
2018-08-27,4959
2018-08-27,46206
2018-08-27,1151960
2018-08-27,48721552
2018-08-27,43177
2018-08-27,642010
2018-08-27,148940
2018-08-27,559020
2018-08-27,147770
2018-08-27,31915
2018-08-27,40880
2018-08-27,1327
2018-08-27,1199
2018-08-27,3052667
2018-08-27,52176
2018-08-27,1278085
2018-08-27,982749
2018-08-27,499027
2018-08-27,19710
2018-08-27,9073
2018-08-27,24678
2018-08-27,15927682
2018-08-27,5157614
2018-08-27,6296
Query:
-- Query 7: Get total sales per week for 2019
SELECT "week_date", SUM("sales") AS "total_sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019
GROUP BY "week_date"
LIMIT 1000
Answer:
week_date,total_sales
2019-09-02,581305293
2019-08-26,580274015
2019-08-19,576006984
2019-08-12,573749878
2019-08-05,575209431
2019-07-22,578808584
2019-07-15,571261970
2019-07-08,578449344
2019-07-01,559413335
2019-07-29,573703558
2019-06-24,555374893
2019-06-10,563298795
2019-06-03,561091415
2019-05-27,564501406
2019-05-20,561098180
2019-05-13,571234200
2019-05-06,580698026
2019-04-15,549169512
2019-04-08,604578468
2019-03-25,581317054
2019-04-29,578911200
2019-06-17,559088818
2019-04-22,574707247
2019-04-01,592780894
Query:
-- Query 8: Get weeks and sales for four weeks before June 15, 2019
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "week_date" BETWEEN '2019-05-18' AND '2019-06-14'
LIMIT 1000
Answer:
Too long, hard cut:
week_date,sales
2019-06-10,3583429
2019-06-10,24912
2019-06-10,27438
2019-06-10,47863371
2019-06-10,438
2019-06-10,248900
2019-06-10,4320748
2019-06-10,917468
2019-06-10,1024245
2019-06-10,17665063
2019-06-10,2085600
2019-06-10,63930481
2019-06-10,49071
2019-06-10,44658
2019-06-10,596
2019-06-10,398975
2019-06-10,25720
2019-06-10,692
2019-06-10,670967
2019-06-10,13472767
2019-06-10,5564759
2019-06-10,1774
2019-06-10,33476
2019-06-10,817840
2019-06-10,42926
2019-06-10,10619
2019-06-10,257154
2019-06-10,15223053
2019-06-10,34895
2019-06-10,197788
2019-06-10,74866
2019-06-10,360593
2019-06-10,707150
2019-06-10,5298
2019-06-10,135583
2019-06-10,45683094
2019-06-10,370982
2019-06-10,11457
2019-06-10,11002
2019-06-10,13563
2019-06-10,108826
2019-06-10,393410
2019-06-10,28306508
2019-06-10,44689
2019-06-10,14154393
2019-06-10,1985537
2019-06-10,9939148
2019-06-10,608300
2019-06-10,5606
2019-06-10,129616
2019-06-10,48587
2019-06-10,3204
2019-06-10,33437
2019-06-10,3563545
2019-06-10,1361886
2019-06-10,719
2019-06-10,2308933
2019-06-10,21058
2019-06-10,7229407
2019-06-10,176906
2019-06-10,440532
2019-06-10,11684
2019-06-10,2934750
2019-06-10,18238815
2019-06-10,1298346
2019-06-10,330
2019-06-10,54769
2019-06-10,33461
2019-06-10,2989057
2019-06-10,71253
2019-06-10,1072062
2019-06-10,13589
2019-06-10,314653
2019-06-10,5346
2019-06-10,117146
2019-06-10,11080
2019-06-10,2385371
2019-06-10,10287
2019-06-10,6864037
2019-06-10,934354
2019-06-10,826850
2019-06-10,3477
2019-06-10,14557
2019-06-10,22635
2019-06-10,2481
2019-06-10,892871
2019-06-10,284661
2019-06-10,5165189
2019-06-10,5395078
2019-06-10,261479
2019-06-10,35899
2019-06-10,5530443
2019-06-10,2473137
2019-06-10,991970
2019-06-10,647734
2019-06-10,3960
2019-06-10,2023
2019-06-10,836261
2019-06-10,20817
2019-06-10,3287968
2019-06-10,63988
2019-06-10,2202
2019-06-10,32873
2019-06-10,1043270
2019-06-10,5321
2019-06-10,1958181
2019-06-10,599201
2019-06-10,22935
2019-06-10,815552
2019-06-10,4232669
2019-06-10,4385594
2019-06-10,2163
2019-06-10,665862
2019-06-10,3223292
2019-06-10,39301
2019-06-10,12341
2019-06-10,4424506
2019-06-10,92900
2019-06-10,1364893
2019-06-10,1453001
2019-06-10,2357833
2019-06-10,553618
2019-06-10,594425
2019-06-10,9970781
2019-06-10,2167545
2019-06-10,107940
2019-06-10,6452
2019-06-10,1814066
2019-06-10,2285957
2019-06-10,622599
2019-06-10,40122
2019-06-10,260829
2019-06-10,28506
2019-06-10,50407
2019-06-10,69776
2019-06-10,16220
2019-06-10,21058788
2019-06-10,17187874
2019-06-10,2331370
2019-06-10,3397422
2019-06-10,390
2019-06-10,16993
2019-06-10,388425
2019-06-10,700099
2019-06-10,203948
2019-06-10,68969
2019-06-10,92126
2019-06-10,13379
2019-06-10,29386
2019-06-10,32298
2019-06-10,28347
2019-06-10,1423932
2019-06-10,1348660
2019-06-10,6976
2019-06-10,36178
2019-06-10,12329
2019-06-10,12110841
2019-06-10,1584009
2019-06-10,189131
2019-06-10,121329
2019-06-10,355916
2019-06-10,84782
2019-06-10,186006
2019-06-10,591
2019-06-10,124503
2019-06-10,3452208
2019-06-10,250428
2019-06-10,48411
2019-06-10,385139
2019-06-10,49177
2019-06-10,6309504
2019-06-10,761907
2019-06-10,69576
2019-06-10,3855
2019-06-10,13422
2019-06-10,53853
2019-06-10,6551
2019-06-10,48186
2019-06-10,206351
2019-06-10,420973
2019-06-10,91443
2019-06-10,45045
2019-06-10,55804
2019-06-10,2523524
2019-06-10,432132
2019-06-10,2989
2019-06-10,616983
2019-06-10,29250
2019-06-10,29648
2019-06-10,46484
2019-06-10,103504
2019-06-10,31518
2019-06-10,1817300
2019-06-10,240933
2019-06-10,703981
2019-06-10,48232
2019-06-10,29077
2019-06-10,1642732
2019-06-10,19108
2019-06-10,16029572
2019-06-10,5882328
2019-06-10,34312
2019-06-10,2551886
2019-06-10,272539
2019-06-10,141855
2019-06-10,1213423
2019-06-10,4385571
2019-06-10,74402
2019-06-10,1928884
2019-06-10,7888
2019-06-10,10793
2019-06-10,341969
2019-06-10,5007001
2019-06-10,38922
2019-06-10,1192869
2019-06-10,16171
2019-06-10,30484
2019-06-10,2146934
2019-06-10,25423
2019-06-10,401366
2019-06-10,1952
2019-06-10,271084
2019-06-10,2709105
2019-06-10,3262039
2019-06-10,18023
2019-06-10,15865
2019-06-10,1095376
2019-06-10,8425635
2019-06-10,26164
2019-06-10,946820
2019-06-10,9844
2019-06-10,5362681
2019-06-10,99448
2019-06-10,22261
2019-06-10,8321738
2019-06-10,371712
2019-06-10,163838
2019-06-10,491734
2019-06-03,5686
2019-06-03,13452948
2019-06-03,10045104
2019-06-03,12374
2019-06-03,37383
2019-06-03,2162952
2019-06-03,4412254
2019-06-03,650
2019-06-03,24813
2019-06-03,63098
2019-06-03,1357741
2019-06-03,50710
2019-06-03,320969
2019-06-03,5966719
2019-06-03,2344702
2019-06-03,10836
2019-06-03,607669
2019-06-03,385829
2019-06-03,26053
2019-06-03,928
2019-06-03,74055
2019-06-03,65421
2019-06-03,11856
2019-06-03,2151091
2019-06-03,605388
2019-06-03,80482
2019-06-03,27191
2019-06-03,885653
2019-06-03,127646
2019-06-03,166362
2019-06-03,31920
2019-06-03,128857
2019-06-03,28328
2019-06-03,10067270
2019-06-03,46822
2019-06-03,36809
2019-06-03,13811
2019-06-03,35494
2019-06-03,10211
2019-06-03,2710
2019-06-03,43851
2019-06-03,681786
2019-06-03,4902
Query:
-- Query 9: Get weeks and sales for four weeks after June 15, 2019
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "week_date" BETWEEN '2019-06-15' AND '2019-07-12'
LIMIT 1000
Answer:
Too long, hard cut:
week_date,sales
2019-07-08,211117
2019-07-08,2271810
2019-07-08,11376
2019-07-08,104261
2019-07-08,730522
2019-07-08,4104
2019-07-08,42517
2019-07-08,3422911
2019-07-08,11102
2019-07-08,10064
2019-07-08,74991
2019-07-08,8535
2019-07-08,760068
2019-07-08,10482753
2019-07-08,3178
2019-07-08,6788
2019-07-08,88931
2019-07-08,600329
2019-07-08,250538
2019-07-08,92637
2019-07-08,28692
2019-07-08,43673
2019-07-08,59478
2019-07-08,13044
2019-07-08,5427710
2019-07-08,27681
2019-07-08,2855752
2019-07-08,8731
2019-07-08,274
2019-07-08,8632008
2019-07-08,3841
2019-07-08,430
2019-07-08,42736
2019-07-08,2016572
2019-07-08,416030
2019-07-08,945051
2019-07-08,89057
2019-07-08,43462
2019-07-08,1106851
2019-07-08,4396610
2019-07-08,78888
2019-07-08,16247
2019-07-08,6969368
2019-07-08,15927
2019-07-08,1086
2019-07-08,10239
2019-07-08,7489
2019-07-08,18037839
2019-07-08,383957
2019-07-08,22993
2019-07-08,2006754
2019-07-08,14210
2019-07-08,5964
2019-07-08,1119373
2019-07-08,94216
2019-07-08,2281688
2019-07-08,13038
2019-07-08,30068
2019-07-08,12165
2019-07-08,37203
2019-07-08,2372721
2019-07-08,14968
2019-07-08,3505355
2019-07-08,2660454
2019-07-08,921
2019-07-08,4837455
2019-07-08,1167
2019-07-08,2489907
2019-07-08,3796656
2019-07-08,1932743
2019-07-08,3732
2019-07-08,15396567
2019-07-08,15220097
2019-07-08,83560
2019-07-08,1983
2019-07-08,28527
2019-07-08,161434
2019-07-08,140091
2019-07-08,812411
2019-07-08,33665
2019-07-08,5623154
2019-07-08,6028685
2019-07-08,2368717
2019-07-08,36544
2019-07-08,1266613
2019-07-08,969147
2019-07-08,217673
2019-07-08,7308
2019-07-08,1242747
2019-07-08,23019
2019-07-08,96339
2019-07-08,21302
2019-07-08,41891
2019-07-08,17670
2019-07-08,81238
2019-07-08,20702
2019-07-08,13655139
2019-07-08,600477
2019-07-08,5616
2019-07-08,16077293
2019-07-08,1349368
2019-07-08,13999
2019-07-08,1821432
2019-07-08,609107
2019-07-08,2674512
2019-07-08,610790
2019-07-08,459078
2019-07-08,49181
2019-07-08,17847247
2019-07-08,34278
2019-07-08,3185767
2019-07-08,695
2019-07-08,823955
2019-07-08,624821
2019-07-08,175962
2019-07-08,183970
2019-07-08,41970
2019-07-08,51945
2019-07-08,252114
2019-07-08,1051863
2019-07-08,4437639
2019-07-08,1069852
2019-07-08,17352
2019-07-08,388368
2019-07-08,607111
2019-07-08,1300
2019-07-08,51308
2019-07-08,47975640
2019-07-08,679688
2019-07-08,827795
2019-07-08,986372
2019-07-08,251840
2019-07-08,147848
2019-07-08,36931
2019-07-08,698409
2019-07-08,392103
2019-07-08,2275412
2019-07-08,40148
2019-07-08,28833
2019-07-08,3401659
2019-07-08,33198
2019-07-08,889307
2019-07-08,10022589
2019-07-08,925885
2019-07-08,276011
2019-07-08,47307
2019-07-08,1356241
2019-07-08,1388556
2019-07-08,296466
2019-07-08,335555
2019-07-08,73078
2019-07-08,6456837
2019-07-08,547604
2019-07-08,2394928
2019-07-08,5373915
2019-07-08,107095
2019-07-08,261294
2019-07-08,610742
2019-07-08,281653
2019-07-08,678973
2019-07-08,263908
2019-07-08,4526934
2019-07-08,4313
2019-07-08,51580
2019-07-08,291620
2019-07-08,8268743
2019-07-08,1482163
2019-07-08,131456
2019-07-08,27057
2019-07-08,163543
2019-07-08,1349075
2019-07-08,393250
2019-07-08,34113
2019-07-08,352198
2019-07-08,1644832
2019-07-08,2215
2019-07-08,53986
2019-07-08,135253
2019-07-08,191392
2019-07-08,1643435
2019-07-08,349
2019-07-08,18605341
2019-07-08,384904
2019-07-08,45833
2019-07-08,2977623
2019-07-08,3659756
2019-07-08,1744
2019-07-08,3655229
2019-07-08,2801
2019-07-08,1836881
2019-07-08,336358
2019-07-08,30696
2019-07-08,7594430
2019-07-08,29419
2019-07-08,367047
2019-07-08,403860
2019-07-08,56305
2019-07-08,14639
2019-07-08,3669
2019-07-08,4491883
2019-07-08,70588
2019-07-08,96139
2019-07-08,49243076
2019-07-08,50654
2019-07-08,4312364
2019-07-08,2480
2019-07-08,377649
2019-07-08,2218991
2019-07-08,29602
2019-07-08,10809
2019-07-08,74233
2019-07-08,31853
2019-07-08,37720
2019-07-08,27541
2019-07-08,656939
2019-07-08,440666
2019-07-08,12834
2019-07-08,13571
2019-07-08,28826969
2019-07-08,13036
2019-07-08,1471243
2019-07-08,11965367
2019-07-08,11942
2019-07-08,26177
2019-07-08,5431816
2019-07-08,1018
2019-07-08,22084439
2019-07-08,3020851
2019-07-08,71020
2019-07-08,2627646
2019-07-08,920105
2019-07-08,108002
2019-07-08,5523016
2019-07-08,3179
2019-07-08,30578
2019-07-08,17515
2019-07-08,66105856
2019-07-08,36516
2019-07-01,8257765
2019-07-01,17070
2019-07-01,2430621
2019-07-01,2953902
2019-07-01,2566392
2019-07-01,441745
2019-07-01,2069
2019-07-01,510322
2019-07-01,15847783
2019-07-01,3362661
2019-07-01,139145
2019-07-01,946499
2019-07-01,770203
2019-07-01,26127
2019-07-01,264185
2019-07-01,23199
2019-07-01,907662
2019-07-01,567967
2019-07-01,1679647
2019-07-01,358021
2019-07-01,1354343
2019-07-01,19489
2019-07-01,6372383
2019-07-01,23003
2019-07-01,10101
2019-07-01,1327796
2019-07-01,598471
2019-07-01,569655
2019-07-01,247643
2019-07-01,1203070
2019-07-01,45244
2019-07-01,58469
2019-07-01,5796470
2019-07-01,11824063
2019-07-01,17199917
2019-07-01,13797763
2019-07-01,4284449
2019-07-01,1490417
2019-07-01,101684
2019-07-01,4150200
2019-07-01,4511608
2
Query:
-- Query 10: Get distinct "week_date_formatted" values
SELECT DISTINCT "week_date_formatted"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Answer:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26
Query:
-- Query 11: Get sales data around mid-June for 2020
SELECT "week_date", "sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2020 AND "week_date" BETWEEN '2020-05-18' AND '2020-07-12'
LIMIT 1000
Answer:
Too long, hard cut:
week_date,sales
2020-07-06,275749
2020-07-06,7059529
2020-07-06,12375
2020-07-06,359403
2020-07-06,48780231
2020-07-06,7647467
2020-07-06,969187
2020-07-06,6400
2020-07-06,4994
2020-07-06,1582259
2020-07-06,668776
2020-07-06,8083
2020-07-06,244785
2020-07-06,1018034
2020-07-06,88857
2020-07-06,3282052
2020-07-06,255
2020-07-06,110244
2020-07-06,887999
2020-07-06,42032
2020-07-06,3455
2020-07-06,11138070
2020-07-06,721874
2020-07-06,256827
2020-07-06,682100
2020-07-06,37050
2020-07-06,55662
2020-07-06,6214520
2020-07-06,136436
2020-07-06,115555
2020-07-06,20474557
2020-07-06,1241439
2020-07-06,2622537
2020-07-06,325193
2020-07-06,36344
2020-07-06,61436
2020-07-06,609
2020-07-06,9068336
2020-07-06,23347
2020-07-06,1710069
2020-07-06,906114
2020-07-06,182
2020-07-06,6882
2020-07-06,9201
2020-07-06,2781013
2020-07-06,1797035
2020-07-06,2380924
2020-07-06,622949
2020-07-06,803916
2020-07-06,6004542
2020-07-06,311406
2020-07-06,25697
2020-07-06,439785
2020-07-06,69555
2020-07-06,258887
2020-07-06,2195016
2020-07-06,1555479
2020-07-06,924200
2020-07-06,15166
2020-07-06,3429645
2020-07-06,238360
2020-07-06,63378896
2020-07-06,918354
2020-07-06,331218
2020-07-06,37637
2020-07-06,2740820
2020-07-06,426852
2020-07-06,2169
2020-07-06,1761918
2020-07-06,2554247
2020-07-06,183866
2020-07-06,3797159
2020-07-06,13212
2020-07-06,4963653
2020-07-06,451177
2020-07-06,3709096
2020-07-06,40809
2020-07-06,27063
2020-07-06,17021169
2020-07-06,146709
2020-07-06,5192225
2020-07-06,142232
2020-07-06,145983
2020-07-06,46303
2020-07-06,1745
2020-07-06,4586
2020-07-06,40385
2020-07-06,5019969
2020-07-06,1596
2020-07-06,24942
2020-07-06,16524293
2020-07-06,53961
2020-07-06,91728
2020-07-06,406081
2020-07-06,2344198
2020-07-06,796093
2020-07-06,27950
2020-07-06,1086528
2020-07-06,86961
2020-07-06,19118
2020-07-06,239295
2020-07-06,2088873
2020-07-06,423729
2020-07-06,5923390
2020-07-06,60073
2020-07-06,678
2020-07-06,2146830
2020-07-06,849767
2020-07-06,380313
2020-07-06,21729
2020-07-06,355406
2020-07-06,17291374
2020-07-06,2315581
2020-07-06,330882
2020-07-06,112146
2020-07-06,851198
2020-07-06,3276611
2020-07-06,15592
2020-07-06,7561
2020-07-06,8883923
2020-07-06,716548
2020-07-06,29108793
2020-07-06,217025
2020-07-06,46232992
2020-07-06,635946
2020-07-06,16310453
2020-07-06,2271038
2020-07-06,435672
2020-07-06,4559185
2020-07-06,1347139
2020-07-06,38732
2020-07-06,11040
2020-07-06,22390
2020-07-06,483735
2020-07-06,1477
2020-07-06,3291
2020-07-06,490012
2020-07-06,5111
2020-07-06,14585
2020-07-06,41662
2020-07-06,31099
2020-07-06,76614
2020-07-06,535423
2020-07-06,32526
2020-07-06,1154719
2020-07-06,1323741
2020-07-06,66956
2020-07-06,3643428
2020-07-06,1167
2020-07-06,11188175
2020-07-06,16364768
2020-07-06,9796
2020-07-06,26990
2020-07-06,901
2020-07-06,2469632
2020-07-06,435958
2020-07-06,8915
2020-07-06,55226
2020-07-06,113658
2020-07-06,12924
2020-07-06,52659
2020-07-06,1852468
2020-07-06,507582
2020-07-06,338
2020-07-06,4986083
2020-07-06,14964981
2020-07-06,403284
2020-07-06,752634
2020-07-06,80992
2020-07-06,35417
2020-07-06,47716
2020-07-06,5542204
2020-07-06,637462
2020-07-06,82262
2020-07-06,26208
2020-07-06,11303
2020-07-06,9889
2020-07-06,3254599
2020-07-06,45209
2020-07-06,23549192
2020-07-06,520
2020-07-06,2996
2020-07-06,2383015
2020-07-06,14544
2020-07-06,1890
2020-07-06,6472357
2020-07-06,2436037
2020-07-06,1655
2020-07-06,11174
2020-07-06,13288
2020-07-06,1472205
2020-07-06,30361
2020-07-06,5242
2020-07-06,45866
2020-07-06,330861
2020-07-06,44553
2020-07-06,190268
2020-07-06,943414
2020-07-06,46728
2020-07-06,20453
2020-07-06,2669073
2020-07-06,7305
2020-07-06,1019429
2020-07-06,11639
2020-07-06,1375040
2020-07-06,190014
2020-07-06,7387040
2020-07-06,3558
2020-07-06,45134
2020-07-06,11439615
2020-07-06,46193
2020-07-06,10863
2020-07-06,18464
2020-07-06,11396
2020-07-06,461684
2020-07-06,23995
2020-07-06,62607
2020-07-06,20817
2020-07-06,21435
2020-07-06,12835
2020-07-06,105029
2020-07-06,1535122
2020-07-06,895842
2020-07-06,3613
2020-07-06,2165894
2020-07-06,1047479
2020-07-06,62554
2020-07-06,8047
2020-07-06,926391
2020-07-06,122755
2020-07-06,43697
2020-07-06,2200505
2020-07-06,4643858
2020-07-06,74071
2020-07-06,82969
2020-07-06,6182738
2020-07-06,53017
2020-07-06,646393
2020-06-29,771649
2020-06-29,248186
2020-06-29,41232
2020-06-29,746
2020-06-29,17430
2020-06-29,28788145
2020-06-29,357156
2020-06-29,3222249
2020-06-29,83692
2020-06-29,6219
2020-06-29,339336
2020-06-29,18485
2020-06-29,2033692
2020-06-29,31393
2020-06-29,2509564
2020-06-29,865
2020-06-29,22101960
2020-06-29,8563
2020-06-29,2444
2020-06-29,1753657
2020-06-29,16297956
2020-06-29,31008
2020-06-29,40816
2020-06-29,2311
2020-06-29,5151347
2020-06-29,47898629
2020-06-29,137746
2020-06-29,474829
2020-06-29,1142258
2020-06-29,3387378
2020-06-29,337
2020-06-29,15402
2020-06-29,473733
2020-06-29,32127
2020-06-29,3372
2020-06-29,621849
2020-06-29,10224
2020-06-29,1283298
2020-06-29,38761
2020-06-29,32575
2020-06-29,2069075
2020-06-29,3518
2020-06-29,9579
Query:
-- Query 12: Get distinct regions in the data
SELECT DISTINCT "region"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Answer:
region
ASIA
USA
EUROPE
AFRICA
CANADA
SOUTH AMERICA
OCEANIA
Query:
-- Query 13: Get total transactions per week for 2018
SELECT "week_date", SUM("transactions") AS "total_transactions"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2018
GROUP BY "week_date"
LIMIT 1000
Answer:
week_date,total_transactions
2018-09-03,14754885
2018-08-27,14866086
2018-08-20,14630533
2018-08-13,14650155
2018-08-06,14664250
2018-07-30,14517411
2018-07-23,14630429
2018-07-16,14423378
2018-07-09,14433509
2018-07-02,14254080
2018-06-25,14276206
2018-06-18,14239928
2018-06-11,14301607
2018-06-04,14191769
2018-05-28,14334709
2018-04-30,14804758
2018-04-23,14264852
2018-04-16,13764983
2018-04-09,14335920
2018-04-02,14461826
2018-05-21,14300704
2018-05-14,14402634
2018-05-07,14433880
2018-03-26,14467968
Query:
-- Query 14: Get distinct segments in the data
SELECT DISTINCT "segment"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
LIMIT 1000
Answer:
segment
C3
F1
unknown
C1
C2
F3
C4
F2
Query:
-- Query 15: Get total sales per platform for June 2019
SELECT "platform", SUM("sales") AS "total_sales"
FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
WHERE "calendar_year" = 2019 AND "month_number" = 6
GROUP BY "platform"
LIMIT 1000
Answer:
platform,total_sales
Retail,2181126868
Shopify,57727053
End Exploring Related Columns
Task: For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: The following table summarizes the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020.

```csv
Year,Sales_Before_June15,Sales_After_June15,Percentage_Change
2018,num:int,num:int,num:float
2019,num:int,num:int,num:float
2020,num:int,num:int,num:float
(Attention: answer in this order)
```.
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-18 02:48:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 02:48:02 - root - INFO - ```sql
WITH sales_before AS (
    SELECT
        "calendar_year" AS "Year",
        SUM("sales") AS "Sales_Before_June15"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020) AND
        TO_DATE("week_date", 'YYYY-MM-DD') >= CASE
            WHEN "calendar_year" = 2018 THEN '2018-05-21'
            WHEN "calendar_year" = 2019 THEN '2019-05-20'
            WHEN "calendar_year" = 2020 THEN '2020-05-18'
        END AND
        TO_DATE("week_date", 'YYYY-MM-DD') < CASE
            WHEN "calendar_year" = 2018 THEN '2018-06-15'
            WHEN "calendar_year" = 2019 THEN '2019-06-15'
            WHEN "calendar_year" = 2020 THEN '2020-06-15'
        END
    GROUP BY
        "calendar_year"
),
sales_after AS (
    SELECT
        "calendar_year" AS "Year",
        SUM("sales") AS "Sales_After_June15"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020) AND
        TO_DATE("week_date", 'YYYY-MM-DD') >= CASE
            WHEN "calendar_year" = 2018 THEN '2018-06-15'
            WHEN "calendar_year" = 2019 THEN '2019-06-15'
            WHEN "calendar_year" = 2020 THEN '2020-06-15'
        END AND
        TO_DATE("week_date", 'YYYY-MM-DD') < CASE
            WHEN "calendar_year" = 2018 THEN '2018-07-13'
            WHEN "calendar_year" = 2019 THEN '2019-07-13'
            WHEN "calendar_year" = 2020 THEN '2020-07-13'
        END
    GROUP BY
        "calendar_year"
)
SELECT
    before."Year",
    before."Sales_Before_June15",
    after."Sales_After_June15",
    ROUND(100.0 * (after."Sales_After_June15" - before."Sales_Before_June15") / NULLIF(before."Sales_Before_June15", 0), 4) AS "Percentage_Change"
FROM
    sales_before AS before
    JOIN sales_after AS after ON before."Year" = after."Year"
ORDER BY
    before."Year";
```
2025-01-18 02:48:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:48:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:48:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:48:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-18 02:48:03 - snowflake.connector.connection - INFO - closed
2025-01-18 02:48:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:48:04 - root - INFO - itercount: 1
2025-01-18 02:48:04 - root - INFO - 0
2025-01-18 02:48:04 - root - INFO - results: 
Year,Sales_Before_June15,Sales_After_June15,Percentage_Change
2018,2125140809,2129242914,0.1930
2019,2249989796,2252326390,0.1038
2020,2345878357,2318994169,-1.1460


2025-01-18 02:48:04 - root - INFO - Please check the answer again by reviewing For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: The following table summarizes the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020.

```csv
Year,Sales_Before_June15,Sales_After_June15,Percentage_Change
2018,num:int,num:int,num:float
2019,num:int,num:int,num:float
2020,num:int,num:int,num:float
(Attention: answer in this order)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Sales_Before_June15,Sales_After_June15,Percentage_Change
2018,2125140809,2129242914,0.1930
2019,2249989796,2252326390,0.1038
2020,2345878357,2318994169,-1.1460
Current sql:
WITH sales_before AS (
    SELECT
        "calendar_year" AS "Year",
        SUM("sales") AS "Sales_Before_June15"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020) AND
        TO_DATE("week_date", 'YYYY-MM-DD') >= CASE
            WHEN "calendar_year" = 2018 THEN '2018-05-21'
            WHEN "calendar_year" = 2019 THEN '2019-05-20'
            WHEN "calendar_year" = 2020 THEN '2020-05-18'
        END AND
        TO_DATE("week_date", 'YYYY-MM-DD') < CASE
            WHEN "calendar_year" = 2018 THEN '2018-06-15'
            WHEN "calendar_year" = 2019 THEN '2019-06-15'
            WHEN "calendar_year" = 2020 THEN '2020-06-15'
        END
    GROUP BY
        "calendar_year"
),
sales_after AS (
    SELECT
        "calendar_year" AS "Year",
        SUM("sales") AS "Sales_After_June15"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020) AND
        TO_DATE("week_date", 'YYYY-MM-DD') >= CASE
            WHEN "calendar_year" = 2018 THEN '2018-06-15'
            WHEN "calendar_year" = 2019 THEN '2019-06-15'
            WHEN "calendar_year" = 2020 THEN '2020-06-15'
        END AND
        TO_DATE("week_date", 'YYYY-MM-DD') < CASE
            WHEN "calendar_year" = 2018 THEN '2018-07-13'
            WHEN "calendar_year" = 2019 THEN '2019-07-13'
            WHEN "calendar_year" = 2020 THEN '2020-07-13'
        END
    GROUP BY
        "calendar_year"
)
SELECT
    before."Year",
    before."Sales_Before_June15",
    after."Sales_After_June15",
    ROUND(100.0 * (after."Sales_After_June15" - before."Sales_Before_June15") / NULLIF(before."Sales_Before_June15", 0), 4) AS "Percentage_Change"
FROM
    sales_before AS before
    JOIN sales_after AS after ON before."Year" = after."Year"
ORDER BY
    before."Year";
2025-01-18 02:48:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 02:48:56 - root - INFO - The following table summarizes the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each of the years 2018, 2019, and 2020.

```csv
Year,Sales_Before_June15,Sales_After_June15,Percentage_Change
2018,2125140809,2129242914,0.1930
2019,2249989796,2252326390,0.1038
2020,2345878357,2318994169,-1.1460
```

```sql
WITH sales_before AS (
    SELECT
        "calendar_year" AS "Year",
        SUM("sales") AS "Sales_Before_June15"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020) AND
        TO_DATE("week_date", 'YYYY-MM-DD') >= CASE
            WHEN "calendar_year" = 2018 THEN '2018-05-21'
            WHEN "calendar_year" = 2019 THEN '2019-05-20'
            WHEN "calendar_year" = 2020 THEN '2020-05-18'
        END AND
        TO_DATE("week_date", 'YYYY-MM-DD') < CASE
            WHEN "calendar_year" = 2018 THEN '2018-06-15'
            WHEN "calendar_year" = 2019 THEN '2019-06-15'
            WHEN "calendar_year" = 2020 THEN '2020-06-15'
        END
    GROUP BY
        "calendar_year"
),
sales_after AS (
    SELECT
        "calendar_year" AS "Year",
        SUM("sales") AS "Sales_After_June15"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020) AND
        TO_DATE("week_date", 'YYYY-MM-DD') >= CASE
            WHEN "calendar_year" = 2018 THEN '2018-06-15'
            WHEN "calendar_year" = 2019 THEN '2019-06-15'
            WHEN "calendar_year" = 2020 THEN '2020-06-15'
        END AND
        TO_DATE("week_date", 'YYYY-MM-DD') < CASE
            WHEN "calendar_year" = 2018 THEN '2018-07-13'
            WHEN "calendar_year" = 2019 THEN '2019-07-13'
            WHEN "calendar_year" = 2020 THEN '2020-07-13'
        END
    GROUP BY
        "calendar_year"
)
SELECT
    before."Year",
    before."Sales_Before_June15",
    after."Sales_After_June15",
    ROUND(
        100.0 * (after."Sales_After_June15" - before."Sales_Before_June15") 
        / NULLIF(before."Sales_Before_June15", 0), 
        4
    ) AS "Percentage_Change"
FROM
    sales_before AS before
    JOIN sales_after AS after ON before."Year" = after."Year"
ORDER BY
    before."Year";
```
2025-01-18 02:48:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 02:48:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 02:48:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 02:48:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-18 02:48:57 - snowflake.connector.connection - INFO - closed
2025-01-18 02:48:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 02:48:58 - root - INFO - itercount: 2
2025-01-18 02:48:58 - root - INFO - 0
2025-01-18 02:48:58 - root - INFO - Total iteration counts: 2
