2025-01-18 07:32:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 07:33:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 07:33:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:33:21 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:22 - root - INFO - SQL:
SELECT DISTINCT "county_name", "county_fips_code"
   FROM BLS.GEO_US_BOUNDARIES.COUNTIES
   WHERE "county_name" ILIKE '%Allegheny%';
Results:
county_name,county_fips_code
Allegheny,42003

2025-01-18 07:33:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:33:23 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:24 - root - INFO - SQL:
SELECT DISTINCT "area_fips"
   FROM BLS.BLS_QCEW."_1998_Q1"
   WHERE "area_fips" = '42003';
Results:
area_fips
42003

2025-01-18 07:33:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 400
2025-01-18 07:33:25 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:25 - root - INFO - SQL:
SELECT DISTINCT "item_name"
   FROM BLS.BLS.CPI_U;
Results:
Too long, hard cut:
item_name
Owners' equivalent rent of residences
Owners' equivalent rent of primary residence
Energy services
New and used motor vehicles
Used cars and trucks
Motor vehicle insurance
All items less food and energy
Apparel
Commodities
Education and communication
Food and beverages
Food
Nonalcoholic beverages and beverage materials
Other food at home
Fruits and vegetables
Other goods and services
Other goods
Housing
Shelter
Household energy
Household furnishings and supplies
Transportation
Transportation commodities less motor fuel
"Tuition, other school fees, and childcare"
Food away from home
Rent of primary residence
Recreation
Services less medical care services
All items less food
Energy commodities
"Commodities less food, energy, and used cars and trucks"
Communication
Information and information processing
"Meats, poultry, and fish"
"Nondurables less food, beverages, and apparel"
Nondurables less food and apparel
Recreation commodities
Utilities and public transportation
Boys' apparel
Women's apparel
Boys' and girls' footwear
Watches
Technical and business school tuition and fees
Uncooked beef roasts
Pork
"Bacon, breakfast sausage, and related products"
Pork chops
Milk
Other fresh fruits
Lettuce
Financial services
"Propane, kerosene, and firewood"
Water and sewerage maintenance
Other foods
Limited service meals and snacks
Appliances
Miscellaneous household products
Physicians' services
Tenants' and household insurance
Televisions
"Sewing machines, fabric and supplies"
Cookies
Rental of video discs and other media
Gasoline (all types)
All items less shelter
Commodities less food
"Meats, poultry, fish, and eggs"
"All items less food, shelter, and energy"
"All items less food, shelter, energy, and used cars and trucks"
Education
Medical care services
Rent of shelter
Other services
Services less energy services
Men's pants and shorts
Women's outerwear
Women's footwear
College tuition and fees
Postage and delivery services
Telephone services
Breakfast cereal
Bread
"Fresh biscuits, rolls, muffins"
Beef and veal
Other uncooked poultry including turkey
Other fresh vegetables
Carbonated drinks
Other beverage materials including tea
Other sweets
Salad dressing
Snacks
Baby food
Full service meals and snacks
Food at employee sites and schools
Distilled spirits at home
Wine at home
Alcoholic beverages away from home
Tobacco and smoking products
Tobacco products other than cigarettes
Bedroom furniture
"Living room, kitchen, and dining room furniture"
"Tools, hardware, outdoor equipment and supplies"
Housekeeping supplies
Household operations
"Moving, storage, freight expense"
Other bakery products
Fresh fish and seafood
Frozen noncarbonated juices and drinks
Soups
Personal care services
Furniture and bedding
Dishes and flatware
Domestic services
Dental services
Miscellaneous personal goods
Floor coverings
Other linens
Other appliances
Professional services
Services by other medical professionals
Hospital services
Health insurance
Medicinal drugs
Other video equipment
Audio equipment
Pets and pet products
Sporting goods
Photography
Photographers and photo processing
Toys
Fees for lessons or instructions
Tires
Rice
Bread other than white
Fresh cakes and cupcakes
Breakfast sausage and related products
Frankfurters
Fresh and frozen chicken parts
Shelf stable fish and seafood
Instant coffee
Other condiments
Prepared salads
Whiskey at home
Intercity bus fare
Intracity mass transit
"Toys, games, hobbies and playground equipment"
Admission to sporting events
Sports equipment
Fresh fruits and vegetables
Recreation services
Infants' and toddlers' apparel
"Information technology, hardware and services"
Cereals and cereal products
Processed fish and seafood
Eggs
Fresh fruits
Frozen fruits and vegetables
"Hair, dental, shaving, and miscellaneous personal care products"
"Cosmetics, perfume, bath, nail preparations and implements"
Funeral expenses
Major appliances
Ham
Apples
Juices and nonalcoholic drinks
Water and sewer and trash collection services
Other household equipment and furnishings
Nursing homes and adult day services
Care of invalids and elderly at home
Prescription drugs
Nonprescription drugs
Video and audio
Other recreation services
Motor vehicle maintenance and servicing
Motor vehicle repair
Airline fares
White bread
"Fresh sweetrolls, coffeecakes, doughnuts"
"Frozen and refrigerated bakery products, pies, tarts, turnovers"
Frozen fish and seafood
Fresh milk other than whole
Butter
"Oranges, including tangerines"
Canned vegetables
Salt and other seasonings and spices
"Distilled spirits, excluding whiskey, at home"
New cars and trucks
Vehicle parts and equipment other than tires
Ship fare
Outpatient hospital services
"Admission to movies, theaters, and concerts"
Photo Processing
Veterinarian services
Tax return preparation and other accounting fees
"Housing at school, excluding board"
Video and audio products
Music instruments and accessories
Newspapers and magazines
"Motor oil, coolant, and fluids"
New motorcycles
Pur

2025-01-18 07:33:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:33:27 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:27 - root - INFO - SQL:
SELECT DISTINCT "area_name"
   FROM BLS.BLS.CPI_U
   WHERE "area_name" ILIKE '%U.S.%';
Results:
area_name
U.S. city average

2025-01-18 07:33:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-18 07:33:29 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:29 - root - INFO - SQL:
SELECT DISTINCT "year"
   FROM BLS.BLS.CPI_U
   WHERE "year" BETWEEN 1998 AND 2017;
Results:
year
2008
2009
2011
2014
1998
1999
2001
2002
2007
2010
2012
2013
2015
2016
2017
2000
2004
2003
2005
2006

2025-01-18 07:33:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 28
2025-01-18 07:33:31 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:31 - root - INFO - SQL:
SELECT "year", "value"
   FROM BLS.BLS.CPI_U
   WHERE "item_name" = 'All items'
     AND "area_name" = 'U.S. city average'
     AND "year" = 1998;
Results:
year,value
1998,161.6
1998,161.9
1998,162.2
1998,162.5
1998,162.8
1998,163.0
1998,163.2
1998,163.4
1998,163.6
1998,164.0
1998,164.0
1998,163.9
1998,163.0
1998,162.0
1998,162.0
1998,162.0
1998,162.2
1998,162.6
1998,162.8
1998,163.2
1998,163.4
1998,163.5
1998,163.9
1998,164.1
1998,164.4
1998,162.3
1998,163.7
1998,163.0

2025-01-18 07:33:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 28
2025-01-18 07:33:32 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:33 - root - INFO - SQL:
SELECT "year", "value"
   FROM BLS.BLS.CPI_U
   WHERE "item_name" = 'All items'
     AND "area_name" = 'U.S. city average'
     AND "year" = 2017;
Results:
year,value
2017,244.076
2017,246.163
2017,245.12
2017,242.839
2017,243.603
2017,243.801
2017,244.524
2017,244.733
2017,244.955
2017,244.786
2017,245.519
2017,246.819
2017,246.663
2017,246.669
2017,246.524
2017,245.12
2017,243.62
2017,243.872
2017,243.766
2017,244.274
2017,244.069
2017,244.218
2017,244.28
2017,245.205
2017,246.551
2017,246.657
2017,247.378
2017,247.736

2025-01-18 07:33:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:33:34 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:35 - root - INFO - SQL:
SELECT "avg_wkly_wage_10_total_all_industries"
   FROM BLS.BLS_QCEW."_1998_Q1"
   WHERE "area_fips" = '42003';
Results:
avg_wkly_wage_10_total_all_industries
644.0

2025-01-18 07:33:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:33:36 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:36 - root - INFO - SQL:
SELECT "avg_wkly_wage_10_total_all_industries"
   FROM BLS.BLS_QCEW."_2017_Q4"
   WHERE "area_fips" = '42003';
Results:
avg_wkly_wage_10_total_all_industries
1171.0

2025-01-18 07:33:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:33:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:33:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:33:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 930
2025-01-18 07:33:39 - snowflake.connector.connection - INFO - closed
2025-01-18 07:33:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:33:40 - root - INFO - SQL:
SELECT DISTINCT "series_title"
    FROM BLS.BLS.EMPLOYMENT_HOURS_EARNINGS_SERIES;
Results:
Too long, hard cut:
series_title
"All employees, thousands, total nonfarm, seasonally adjusted"
"All employees, quarterly averages, seasonally adjusted, thousands, total nonfarm, seasonally adjusted"
"All employees, 3-month average change, seasonally adjusted, thousands, total nonfarm, seasonally adjusted"
"All employees, thousands, total private, seasonally adjusted"
"Average weekly hours of all employees, total private, seasonally adjusted"
"Production and nonsupervisory employees, thousands, total private, seasonally adjusted"
"Average weekly hours of production and nonsupervisory employees, total private, seasonally adjusted"
"Average weekly earnings of all employees, total private, seasonally adjusted"
"Average weekly earnings of all employees, 1982-1984 dollars, total private, seasonally adjusted"
"Average hourly earnings of all employees, 1982-1984 dollars, total private, seasonally adjusted"
"Indexes of aggregate weekly payrolls of all employees, 2007=100, total private, seasonally adjusted"
"Diffusion indexes, 1-month span, seasonally adjusted, total private, seasonally adjusted"
"Diffusion indexes, 6-month span, seasonally adjusted, total private, seasonally adjusted"
"All employees, 3-month average change, seasonally adjusted, thousands, total private, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, 1982-84 dollars, total private, seasonally adjusted"
"Average hourly earnings of production and nonsupervisory employees, 1982-84 dollars, total private, seasonally adjusted"
"Indexes of aggregate weekly hours of production and nonsupervisory employees, 2002=100, total private, seasonally adjusted"
"Indexes of aggregate weekly payrolls of production and nonsupervisory employees, 2002=100, total private, seasonally adjusted"
"Average weekly hours, production/nonsupervisory employees, quarterly averages, seasonally adjusted, total private, seasonally adjusted"
"Aggregate weekly payrolls of all employees, thousands, total private, seasonally adjusted"
"Aggregate weekly payrolls of production and nonsupervisory employees, thousands, total private, seasonally adjusted"
"Average hourly earnings of all employees, goods-producing, seasonally adjusted"
"Women employees, thousands, goods-producing, seasonally adjusted"
"Average weekly earnings of all employees, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly hours of all employees, 2007=100, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly payrolls of all employees, 2007=100, goods-producing, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly hours of production and nonsupervisory employees, 2002=100, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly payrolls of production and nonsupervisory employees, 2002=100, goods-producing, seasonally adjusted"
"Average weekly hours of production and nonsupervisory employees, private service-providing, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, 1982-84 dollars, private service-providing, seasonally adjusted"
"All employees, thousands, mining and logging, seasonally adjusted"
"Production and nonsupervisory employees, thousands, mining and logging, seasonally adjusted"
"Indexes of aggregate weekly payrolls of all employees, 2007=100, mining and logging, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, mining and logging, seasonally adjusted"
"Indexes of aggregate weekly hours of production and nonsupervisory employees, 2002=100, mining and logging, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, mining, seasonally adjusted"
"Average weekly earnings of all employees, metal ore mining, seasonally adjusted"
"Diffusion indexes, 3-month span, seasonally adjusted, total private, seasonally adjusted"
"All employees, quarterly averages, seasonally adjusted, thousands, total private, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, total private, seasonally adjusted"
"Aggregate weekly hours of production and nonsupervisory employees, thousands, goods-producing, seasonally adjusted"
"Aggregate weekly payrolls of production and nonsupervisory employees, thousands, goods-producing, seasonally adjusted"
"All employees, thousands, service-providing, seasonally adjusted"
"Average weekly hours of all employees, private service-providing, seasonally adjusted"
"Average hourly earnings of production and nonsupervisory employees, private service-providing, seasonally adjusted"
"Women employees, thousands, mining and logging, seasonally adjusted"
"Aggregate weekly hours of production and nonsupervisory employees, thousands, mining and logging, seasonally adjusted"
"Women employees, thousands, logging, seasonally adjusted"
"Indexes of aggregate weekly hours of all employees, 2007=100, logging, season

2025-01-18 07:33:40 - root - INFO - itercount: 0
2025-01-18 07:33:40 - root - INFO - Database Name: BLS
Schema Name: BLS
DDL describes table information.
,0
table_name,CPI_U
description,
DDL,"create or replace TABLE CPI_U (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""survey_abbreviation"" VARCHAR(16777216),
	""seasonal_code"" VARCHAR(16777216),
	""periodicity_code"" VARCHAR(16777216),
	""area_code"" VARCHAR(16777216),
	""area_name"" VARCHAR(16777216),
	""item_code"" VARCHAR(16777216),
	""item_name"" VARCHAR(16777216),
	""date"" DATE
);"

,1
table_name,UNEMPLOYMENT_CPS_SERIES
description,
DDL,"create or replace TABLE UNEMPLOYMENT_CPS_SERIES (
	""series_id"" VARCHAR(16777216),
	""lfst_code"" NUMBER(38,0),
	""periodicity_code"" VARCHAR(16777216),
	""series_title"" VARCHAR(16777216),
	""absn_code"" NUMBER(38,0),
	""activity_code"" NUMBER(38,0),
	""ages_code"" NUMBER(38,0),
	""class_code"" NUMBER(38,0),
	""duration_code"" NUMBER(38,0),
	""education_code"" NUMBER(38,0),
	""entr_code"" NUMBER(38,0),
	""expr_code"" NUMBER(38,0),
	""hheader_code"" NUMBER(38,0),
	""hour_code"" NUMBER(38,0),
	""indy_code"" NUMBER(38,0),
	""jdes_code"" NUMBER(38,0),
	""look_code"" NUMBER(38,0),
	""mari_code"" NUMBER(38,0),
	""mjhs_code"" NUMBER(38,0),
	""occupation_code"" NUMBER(38,0),
	""orig_code"" NUMBER(38,0),
	""pcts_code"" NUMBER(38,0),
	""race_code"" NUMBER(38,0),
	""rjnw_code"" NUMBER(38,0),
	""rnlf_code"" NUMBER(38,0),
	""rwns_code"" NUMBER(38,0),
	""seek_code"" NUMBER(38,0),
	""sexs_code"" NUMBER(38,0),
	""tdat_code"" NUMBER(38,0),
	""vets_code"" NUMBER(38,0),
	""wkst_code"" NUMBER(38,0),
	""born_code"" NUMBER(38,0),
	""chld_code"" NUMBER(38,0),
	""disa_code"" NUMBER(38,0),
	""seasonal"" VARCHAR(16777216),
	""footnote_codes"" VARCHAR(16777216),
	""begin_year"" NUMBER(38,0),
	""begin_period"" VARCHAR(16777216),
	""end_year"" NUMBER(38,0),
	""end_period"" VARCHAR(16777216),
	""cert_code"" NUMBER(38,0)
);"

,2
table_name,C_CPI_U
description,
DDL,"create or replace TABLE C_CPI_U (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""survey_abbreviation"" VARCHAR(16777216),
	""seasonal_code"" VARCHAR(16777216),
	""periodicity_code"" VARCHAR(16777216),
	""area_code"" VARCHAR(16777216),
	""area_name"" VARCHAR(16777216),
	""item_code"" VARCHAR(16777216),
	""item_name"" VARCHAR(16777216),
	""date"" DATE
);"

,3
table_name,EMPLOYMENT_HOURS_EARNINGS
description,
DDL,"create or replace TABLE EMPLOYMENT_HOURS_EARNINGS (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""date"" DATE,
	""series_title"" VARCHAR(16777216)
);"

,4
table_name,CPSAAT18
description,
DDL,"create or replace TABLE CPSAAT18 (
	""year"" NUMBER(38,0),
	""sector"" VARCHAR(16777216),
	""subsector"" VARCHAR(16777216),
	""industry_group"" VARCHAR(16777216),
	""industry"" VARCHAR(16777216),
	""total_employed_in_thousands"" NUMBER(38,0),
	""percent_women"" FLOAT,
	""percent_white"" FLOAT,
	""percent_black_or_african_american"" FLOAT,
	""percent_asian"" FLOAT,
	""percent_hispanic_or_latino"" FLOAT
);"

,5
table_name,EMPLOYMENT_HOURS_EARNINGS_SERIES
description,
DDL,"create or replace TABLE EMPLOYMENT_HOURS_EARNINGS_SERIES (
	""series_id"" VARCHAR(16777216),
	""supersector_code"" NUMBER(38,0),
	""industry_code"" NUMBER(38,0),
	""data_type_code"" NUMBER(38,0),
	""seasonal"" VARCHAR(16777216),
	""series_title"" VARCHAR(16777216),
	""footnote_codes"" VARCHAR(16777216),
	""begin_year"" NUMBER(38,0),
	""begin_period"" VARCHAR(16777216),
	""end_year"" NUMBER(38,0),
	""end_period"" VARCHAR(16777216)
);"

,6
table_name,UNEMPLOYMENT_CPS
description,
DDL,"create or replace TABLE UNEMPLOYMENT_CPS (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""date"" DATE,
	""series_title"" VARCHAR(16777216)
);"

,7
table_name,WM
description,
DDL,"create or replace TABLE WM (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""date"" DATE,
	""series_title"" VARCHAR(16777216)
);"

,8
table_name,WM_SERIES
description,
DDL,"create or replace TABLE WM_SERIES (
	""series_id"" VARCHAR(16777216),
	""seasonal"" VARCHAR(16777216),
	""area_code"" NUMBER(38,0),
	""ownership_code"" NUMBER(38,0),
	""estimate_code"" NUMBER(38,0),
	""industry_code"" NUMBER(38,0),
	""occupation_code"" NUMBER(38,0),
	""subcell_code"" NUMBER(38,0),
	""datatype_code"" NUMBER(38,0),
	""level_code"" NUMBER(38,0),
	""series_title"" VARCHAR(16777216),
	""footnote_codes"" VARCHAR(16777216),
	""begin_year"" NUMBER(38,0),
	""begin_period"" VARCHAR(16777216),
	""end_year"" NUMBER(38,0),
	""end_period"" VARCHAR(16777216)
);"

Database Name: BLS
Schema Name: BLS_QCEW
DDL describes table information.
,0
table_name,_1990_Q2
description,
DDL,"create or replace TABLE _1990_Q2 (
	""geoid"" VARCHAR(16777216),
	""area_fips"" VARCHAR(16777216),
	""qtrly_estabs_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""avg_wkly_wage_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""month3_emplvl_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""lq_avg_wkly_wage_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""lq_qtrly_estabs_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""lq_month3_emplvl_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""qtrly_estabs_1024_professional_and_business_services"" FLOAT,
	""avg_wkly_wage_1024_professional_and_business_services"" FLOAT,
	""month3_emplvl_1024_professional_and_business_services"" FLOAT,
	""lq_avg_wkly_wage_1024_professional_and_business_services"" FLOAT,
	""lq_qtrly_estabs_1024_professional_and_business_services"" FLOAT,
	""lq_month3_emplvl_1024_professional_and_business_services"" FLOAT,
	""qtrly_estabs_61_educational_services"" FLOAT,
	""avg_wkly_wage_61_educational_services"" FLOAT,
	""month3_emplvl_61_educational_services"" FLOAT,
	""lq_avg_wkly_wage_61_educational_services"" FLOAT,
	""lq_qtrly_estabs_61_educational_services"" FLOAT,
	""lq_month3_emplvl_61_educational_services"" FLOAT,
	""qtrly_estabs_53_real_estate_and_rental_and_leasing"" FLOAT,
	""avg_wkly_wage_53_real_estate_and_rental_and_leasing"" FLOAT,
	""month3_emplvl_53_real_estate_and_rental_and_leasing"" FLOAT,
	""lq_avg_wkly_wage_53_real_estate_and_rental_and_leasing"" FLOAT,
	""lq_qtrly_estabs_53_real_estate_and_rental_and_leasing"" FLOAT,
	""lq_month3_emplvl_53_real_estate_and_rental_and_leasing"" FLOAT,
	""qtrly_estabs_1023_financial_activities"" FLOAT,
	""avg_wkly_wage_1023_financial_activities"" FLOAT,
	""month3_emplvl_1023_financial_activities"" FLOAT,
	""lq_avg_wkly_wage_1023_financial_activities"" FLOAT,
	""lq_qtrly_estabs_1023_financial_activities"" FLOAT,
	""lq_month3_emplvl_1023_financial_activities"" FLOAT,
	""qtrly_estabs_31_33_manufacturing"" FLOAT,
	""avg_wkly_wage_31_33_manufacturing"" FLOAT,
	""month3_emplvl_31_33_manufacturing"" FLOAT,
	""lq_avg_wkly_wage_31_33_manufacturing"" FLOAT,
	""lq_qtrly_estabs_31_33_manufacturing"" FLOAT,
	""lq_month3_emplvl_31_33_manufacturing"" FLOAT,
	""qtrly_estabs_23_construction"" FLOAT,
	""avg_wkly_wage_23_construction"" FLOAT,
	""month3_emplvl_23_construction"" FLOAT,
	""lq_avg_wkly_wage_23_construction"" FLOAT,
	""lq_qtrly_estabs_23_construction"" FLOAT,
	""lq_month3_emplvl_23_construction"" FLOAT,
	""qtrly_estabs_1029_unclassified"" FLOAT,
	""avg_wkly_wage_1029_unclassified"" FLOAT,
	""month3_emplvl_1029_unclassified"" FLOAT,
	""lq_avg_wkly_wage_1029_unclassified"" FLOAT,
	""lq_qtrly_estabs_1029_unclassified"" FLOAT,
	""lq_month3_emplvl_1029_unclassified"" FLOAT,
	""qtrly_estabs_71_arts_entertainment_and_recreation"" FLOAT,
	""avg_wkly_wage_71_arts_entertainment_and_recreation"" FLOAT,
	""month3_emplvl_71_arts_entertainment_and_recreation"" FLOAT,
	""lq_avg_wkly_wage_71_arts_entertainment_and_recreation"" FLOAT,
	""lq_qtrly_estabs_71_arts_entertainment_and_recreation"" FLOAT,
	""lq_month3_emplvl_71_arts_entertainment_and_recreation"" FLOAT,
	""qtrly_estabs_1011_natural_resources_and_mining"" FLOAT,
	""avg_wkly_wage_1011_natural_resources_and_mining"" FLOAT,
	""month3_emplvl_1011_natural_resources_and_mining"" FLOAT,
	""lq_avg_wkly_wage_1011_natural_resources_and_mining"" FLOAT,
	""lq_qtrly_estabs_1011_natural_resources_and_mining"" FLOAT,
	""lq_month3_emplvl_1011_natural_resources_and_mining"" FLOAT,
	""qtrly_estabs_54_professional_and_technical_services"" FLOAT,
	""avg_wkly_wage_54_professional_and_technical_services"" FLOAT,
	""month3_emplvl_54_professional_and_technical_services"" FLOAT,
	""lq_avg_wkly_wage_54_professional_and_technical_services"" FLOAT,
	""lq_qtrly_estabs_54_professional_and_technical_services"" FLOAT,
	""lq_month3_emplvl_54_professional_and_technical_services"" FLOAT,
	""qtrly_estabs_1026_leisure_and_hospitality"" FLOAT,
	""avg_wkly_wage_1026_leisure_and_hospitality"" FLOAT,
	""month3_emplvl_1026_leisure_and_hospitality"" FLOAT,
	""lq_avg_wkly_wage_1026_leisure_and_hospitality"" FLOAT,
	""lq_qtrly_estabs_1026_leisure_and_hospitality"" FLOAT,
	""lq_month3_emplvl_1026_leisure_and_hospitality"" FLOAT,
	""qtrly_estabs_1022_information"" FLOAT,
	""avg_wkly_wage_1022_information"" FLOAT,
	""month3_emplvl_1022_information"" FLOAT,
	""lq_avg_wkly_wage_1022_information"" FLOAT,
	""lq_qtrly_estabs_1022_information"" FLOAT,
	""lq_month3_emplvl_1022_information"" FLOAT,
	""qtrly_estabs_72_accommodation_and_food_services"" FLOAT,
	""avg_wkly_wage_72_accommodation_and_food_services"" FLOAT,
	""month3_emplvl_72_accommodation_and_food_services"" FLOAT,
	""lq_avg_wkly_wage_72_accommodation_and_food_services"" FLOAT,
	""lq_qtrly_estabs_72_accommodation_and_food_services"" FLOAT,
	""lq_month3_emplvl_72_accommodation_and_food_services"" FLOAT,
	""qtrly_estabs_22_utilities"" FLOAT,
	""avg_wkly_wage_22_utilities"" FLOAT,
	""month3_emplvl_22_utilities"" FLOAT,
	""lq_avg_wkly_wage_22_utilities"" FLOAT,
	""lq_qtrly_estabs_22_utilities"" FLOAT,
	""lq_month3_emplvl_22_utilities"" FLOAT,
	""qtrly_estabs_42_wholesale_trade"" FLOAT,
	""avg_wkly_wage_42_wholesale_trade"" FLOAT,
	""month3_emplvl_42_wholesale_trade"" FLOAT,
	""lq_avg_wkly_wage_42_wholesale_trade"" FLOAT,
	""lq_qtrly_estabs_42_wholesale_trade"" FLOAT,
	""lq_month3_emplvl_42_wholesale_trade"" FLOAT,
	""qtrly_estabs_10_total_all_industries"" FLOAT,
	""avg_wkly_wage_10_total_all_industries"" FLOAT,
	""month3_emplvl_10_total_all_industries"" FLOAT,
	""lq_avg_wkly_wage_10_total_all_industries"" FLOAT,
	""lq_qtrly_estabs_10_total_all_industries"" FLOAT,
	""lq_month3_emplvl_10_total_all_industries"" FLOAT,
	""qtrly_estabs_81_other_services_except_public_administration"" FLOAT,
	""avg_wkly_wage_81_other_services_except_public_administration"" FLOAT,
	""month3_emplvl_81_other_services_except_public_administration"" FLOAT,
	""lq_avg_wkly_wage_81_other_services_except_public_administration"" FLOAT,
	""lq_qtrly_estabs_81_other_services_except_public_administration"" FLOAT,
	""lq_month3_emplvl_81_other_services_except_public_administration"" FLOAT,
	""qtrly_estabs_52_finance_and_insurance"" FLOAT,
	""avg_wkly_wage_52_finance_and_insurance"" FLOAT,
	""month3_emplvl_52_finance_and_insurance"" FLOAT,
	""lq_avg_wkly_wage_52_finance_and_insurance"" FLOAT,
	""lq_qtrly_estabs_52_finance_and_insurance"" FLOAT,
	""lq_month3_emplvl_52_finance_and_insurance"" FLOAT,
	""qtrly_estabs_44_45_retail_trade"" FLOAT,
	""avg_wkly_wage_44_45_retail_trade"" FLOAT,
	""month3_emplvl_44_45_retail_trade"" FLOAT,
	""lq_avg_wkly_wage_44_45_retail_trade"" FLOAT,
	""lq_qtrly_estabs_44_45_retail_trade"" FLOAT,
	""lq_month3_emplvl_44_45_retail_trade"" FLOAT,
	""qtrly_estabs_1013_manufacturing"" FLOAT,
	""avg_wkly_wage_1013_manufacturing"" FLOAT,
	""month3_emplvl_1013_manufacturing"" FLOAT,
	""lq_avg_wkly_wage_1013_manufacturing"" FLOAT,
	""lq_qtrly_estabs_1013_manufacturing"" FLOAT,
	""lq_month3_emplvl_1013_manufacturing"" FLOAT,
	""qtrly_estabs_1027_other_services"" FLOAT,
	""avg_wkly_wage_1027_other_services"" FLOAT,
	""month3_emplvl_1027_other_services"" FLOAT,
	""lq_avg_wkly_wage_1027_other_services"" FLOAT,
	""lq_qtrly_estabs_1027_other_services"" FLOAT,
	""lq_month3_emplvl_1027_other_services"" FLOAT,
	""qtrly_estabs_1025_education_and_health_services"" FLOAT,
	""avg_wkly_wage_1025_education_and_health_services"" FLOAT,
	""month3_emplvl_1025_education_and_health_services"" FLOAT,
	""lq_avg_wkly_wage_1025_education_and_health_services"" FLOAT,
	""lq_qtrly_estabs_1025_education_and_health_services"" FLOAT,
	""lq_month3_emplvl_1025_education_and_health_services"" FLOAT,
	""qtrly_estabs_51_information"" FLOAT,
	""avg_wkly_wage_51_information"" FLOAT,
	""month3_emplvl_51_information"" FLOAT,
	""lq_avg_wkly_wage_51_information"" FLOAT,
	""lq_qtrly_estabs_51_information"" FLOAT,
	""lq_month3_emplvl_51_information"" FLOAT,
	""qtrly_estabs_62_health_care_and_social_assistance"" FLOAT,
	""avg_wkly_wage_62_health_care_and_social_assistance"" FLOAT,
	""month3_emplvl_62_health_care_and_social_assistance"" FLOAT,
	""lq_avg_wkly_wage_62_health_care_and_social_assistance"" FLOAT,
	""lq_qtrly_estabs_62_health_care_and_social_assistance"" FLOAT,
	""lq_month3_emplvl_62_health_care_and_social_assistance"" FLOAT,
	""qtrly_estabs_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""avg_wkly_wage_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""month3_emplvl_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""lq_avg_wkly_wage_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""lq_qtrly_estabs_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""lq_month3_emplvl_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""qtrly_estabs_55_management_of_companies_and_enterprises"" FLOAT,
	""avg_wkly_wage_55_management_of_companies_and_enterprises"" FLOAT,
	""month3_emplvl_55_management_of_companies_and_enterprises"" FLOAT,
	""lq_avg_wkly_wage_55_management_of_companies_and_enterprises"" FLOAT,
	""lq_qtrly_estabs_55_management_of_companies_and_enterprises"" FLOAT,
	""lq_month3_emplvl_55_management_of_companies_and_enterprises"" FLOAT,
	""qtrly_estabs_1012_construction"" FLOAT,
	""avg_wkly_wage_1012_construction"" FLOAT,
	""month3_emplvl_1012_construction"" FLOAT,
	""lq_avg_wkly_wage_1012_construction"" FLOAT,
	""lq_qtrly_estabs_1012_construction"" FLOAT,
	""lq_month3_emplvl_1012_construction"" FLOAT,
	""qtrly_estabs_56_administrative_and_waste_services"" FLOAT,
	""avg_wkly_wage_56_administrative_and_waste_services"" FLOAT,
	""month3_emplvl_56_administrative_and_waste_services"" FLOAT,
	""lq_avg_wkly_wage_56_administrative_and_waste_services"" FLOAT,
	""lq_qtrly_estabs_56_administrative_and_waste_services"" FLOAT,
	""lq_month3_emplvl_56_administrative_and_waste_services"" FLOAT,
	""qtrly_estabs_1021_trade_transportation_and_utilities"" FLOAT,
	""avg_wkly_wage_1021_trade_transportation_and_utilities"" FLOAT,
	""month3_emplvl_1021_trade_transportation_and_utilities"" FLOAT,
	""lq_avg_wkly_wage_1021_trade_transportation_and_utilities"" FLOAT,
	""lq_qtrly_estabs_1021_trade_transportation_and_utilities"" FLOAT,
	""lq_month3_emplvl_1021_trade_transportation_and_utilities"" FLOAT,
	""qtrly_estabs_99_unclassified"" FLOAT,
	""avg_wkly_wage_99_unclassified"" FLOAT,
	""month3_emplvl_99_unclassified"" FLOAT,
	""lq_avg_wkly_wage_99_unclassified"" FLOAT,
	""lq_qtrly_estabs_99_unclassified"" FLOAT,
	""lq_month3_emplvl_99_unclassified"" FLOAT,
	""qtrly_estabs_48_49_transportation_and_warehousing"" FLOAT,
	""avg_wkly_wage_48_49_transportation_and_warehousing"" FLOAT,
	""month3_emplvl_48_49_transportation_and_warehousing"" FLOAT,
	""lq_avg_wkly_wage_48_49_transportation_and_warehousing"" FLOAT,
	""lq_qtrly_estabs_48_49_transportation_and_warehousing"" FLOAT,
	""lq_month3_emplvl_48_49_transportation_and_warehousing"" FLOAT
);"

Some other tables have the similar structure: ['_1990_Q2', '_1992_Q1', '_1992_Q3', '_1993_Q1', '_1995_Q4', '_1996_Q4', '_1999_Q1', '_2002_Q1', '_2007_Q3', '_2009_Q4', '_2014_Q1', '_1994_Q1', '_1994_Q4', '_1998_Q4', '_2004_Q4', '_2005_Q2', '_2007_Q4', '_2010_Q3', '_2011_Q4', '_2013_Q2', '_2017_Q1', '_2017_Q2', '_2018_Q1', '_2008_Q2', '_2009_Q1', '_2016_Q3', '_2016_Q4', '_2019_Q2', '_2000_Q2', '_2003_Q3', '_1997_Q1', '_2010_Q4', '_2005_Q4', '_2006_Q4', '_1990_Q3', '_1991_Q1', '_1991_Q3', '_1991_Q4', '_1993_Q3', '_1995_Q2', '_1996_Q3', '_1997_Q4', '_1999_Q3', '_2000_Q4', '_2002_Q3', '_2003_Q4', '_2005_Q3', '_2007_Q1', '_2008_Q4', '_2011_Q1', '_2011_Q2', '_1994_Q2', '_1994_Q3', '_1999_Q2', '_2011_Q3', '_2012_Q1', '_2015_Q3', '_2015_Q4', '_2016_Q1', '_2018_Q3', '_2005_Q1', '_2000_Q1', '_2001_Q4', '_2018_Q4', '_2006_Q1', '_2010_Q1', '_2015_Q1', '_2018_Q2', '_1990_Q1', '_1990_Q4', '_1992_Q2', '_1992_Q4', '_1993_Q2', '_1996_Q2', '_2010_Q2', '_2013_Q1', '_2014_Q2', '_2016_Q2', '_1996_Q1', '_1998_Q2', '_2003_Q1', '_2006_Q2', '_2007_Q2', '_2014_Q4', '_2017_Q3', '_2019_Q1', '_1999_Q4', '_2012_Q2', '_2012_Q3', '_2014_Q3', '_2017_Q4', '_2000_Q3', '_2009_Q2', '_2013_Q3', '_1997_Q3', '_2004_Q1', '_2012_Q4', '_2008_Q3', '_1991_Q2', '_1995_Q3', '_1997_Q2', '_1998_Q1', '_1998_Q3', '_2001_Q2', '_2002_Q2', '_2004_Q3', '_2008_Q1', '_1993_Q4', '_1995_Q1', '_2001_Q1', '_2002_Q4', '_2003_Q2', '_2004_Q2', '_2006_Q3', '_2001_Q3', '_2013_Q4', '_2009_Q3', '_2015_Q2']
Database Name: BLS
Schema Name: GEO_US_BOUNDARIES
DDL describes table information.
,0
table_name,ADJACENT_COUNTIES
description,
DDL,"create or replace TABLE ADJACENT_COUNTIES (
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""neighbors"" VARIANT,
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,CSA
description,
DDL,"create or replace TABLE CSA (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""msa_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""csa_geom"" BINARY(8388608)
);"

,3
table_name,URBAN_AREAS
description,
DDL,"create or replace TABLE URBAN_AREAS (
	""geo_id"" VARCHAR(16777216),
	""urban_area_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""area_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""urban_area_geom"" BINARY(8388608)
);"

,4
table_name,ADJACENT_STATES
description,
DDL,"create or replace TABLE ADJACENT_STATES (
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,5
table_name,CBSA
description,
DDL,"create or replace TABLE CBSA (
	""geo_id"" VARCHAR(16777216),
	""csa_geo_id"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""msa_indicator"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""cbsa_geom"" BINARY(8388608)
);"

,6
table_name,COUNTIES
description,
DDL,"create or replace TABLE COUNTIES (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_gnis_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""csa_fips_code"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""met_div_fips_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""county_geom"" BINARY(8388608)
);"

,7
table_name,STATES
description,
DDL,"create or replace TABLE STATES (
	""geo_id"" VARCHAR(16777216),
	""region_code"" VARCHAR(16777216),
	""division_code"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_gnis_code"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""state_geom"" BINARY(8388608)
);"

,8
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip_code"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_code"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""zip_code_geom"" BINARY(8388608)
);"

,9
table_name,CONGRESS_DISTRICT_116
description,
DDL,"create or replace TABLE CONGRESS_DISTRICT_116 (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""district_fips_code"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""congress_session"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" BOOLEAN,
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""district_geom"" BINARY(8388608)
);"

Some other tables have the similar structure: ['CONGRESS_DISTRICT_116', 'CONGRESS_DISTRICT_115']
,10
table_name,NATIONAL_OUTLINE
description,
DDL,"create or replace TABLE NATIONAL_OUTLINE (
	""us_outline_geom"" BINARY(8388608),
	""aff_geo_id"" VARCHAR(16777216),
	""geo_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216)
);"

,11
table_name,RAILWAYS
description,
DDL,"create or replace TABLE RAILWAYS (
	""geo_id"" NUMBER(38,0),
	""full_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""railway_geom"" VARCHAR(16777216)
);"

,12
table_name,CNECTA
description,
DDL,"create or replace TABLE CNECTA (
	""geo_id"" VARCHAR(16777216),
	""cnecta_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""name_lsad"" VARCHAR(16777216),
	""lsad"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""cnecta_geom"" BINARY(8388608)
);"

,13
table_name,COASTLINE
description,
DDL,"create or replace TABLE COASTLINE (
	""name"" VARCHAR(16777216),
	""coastline_geom"" BINARY(8388608)
);"

,14
table_name,METROPOLITAN_DIVISIONS
description,
DDL,"create or replace TABLE METROPOLITAN_DIVISIONS (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""cbsa_code"" VARCHAR(16777216),
	""metdiv_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""metdiv_geom"" BINARY(8388608)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BLS': {'BLS': ['CPI_U', 'CPSAAT18', 'C_CPI_U', 'EMPLOYMENT_HOURS_EARNINGS', 'EMPLOYMENT_HOURS_EARNINGS_SERIES', 'UNEMPLOYMENT_CPS', 'UNEMPLOYMENT_CPS_SERIES', 'WM', 'WM_SERIES'], 'BLS_QCEW': ['_1990_Q1', '_1990_Q2', '_1990_Q3', '_1990_Q4', '_1991_Q1', '_1991_Q2', '_1991_Q3', '_1991_Q4', '_1992_Q1', '_1992_Q2', '_1992_Q3', '_1992_Q4', '_1993_Q1', '_1993_Q2', '_1993_Q3', '_1993_Q4', '_1994_Q1', '_1994_Q2', '_1994_Q3', '_1994_Q4', '_1995_Q1', '_1995_Q2', '_1995_Q3', '_1995_Q4', '_1996_Q1', '_1996_Q2', '_1996_Q3', '_1996_Q4', '_1997_Q1', '_1997_Q2', '_1997_Q3', '_1997_Q4', '_1998_Q1', '_1998_Q2', '_1998_Q3', '_1998_Q4', '_1999_Q1', '_1999_Q2', '_1999_Q3', '_1999_Q4', '_2000_Q1', '_2000_Q2', '_2000_Q3', '_2000_Q4', '_2001_Q1', '_2001_Q2', '_2001_Q3', '_2001_Q4', '_2002_Q1', '_2002_Q2', '_2002_Q3', '_2002_Q4', '_2003_Q1', '_2003_Q2', '_2003_Q3', '_2003_Q4', '_2004_Q1', '_2004_Q2', '_2004_Q3', '_2004_Q4', '_2005_Q1', '_2005_Q2', '_2005_Q3', '_2005_Q4', '_2006_Q1', '_2006_Q2', '_2006_Q3', '_2006_Q4', '_2007_Q1', '_2007_Q2', '_2007_Q3', '_2007_Q4', '_2008_Q1', '_2008_Q2', '_2008_Q3', '_2008_Q4', '_2009_Q1', '_2009_Q2', '_2009_Q3', '_2009_Q4', '_2010_Q1', '_2010_Q2', '_2010_Q3', '_2010_Q4', '_2011_Q1', '_2011_Q2', '_2011_Q3', '_2011_Q4', '_2012_Q1', '_2012_Q2', '_2012_Q3', '_2012_Q4', '_2013_Q1', '_2013_Q2', '_2013_Q3', '_2013_Q4', '_2014_Q1', '_2014_Q2', '_2014_Q3', '_2014_Q4', '_2015_Q1', '_2015_Q2', '_2015_Q3', '_2015_Q4', '_2016_Q1', '_2016_Q2', '_2016_Q3', '_2016_Q4', '_2017_Q1', '_2017_Q2', '_2017_Q3', '_2017_Q4', '_2018_Q1', '_2018_Q2', '_2018_Q3', '_2018_Q4', '_2019_Q1', '_2019_Q2'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **Table:** `BLS.GEO_US_BOUNDARIES.COUNTIES`
   - **Column:** `"county_name"`: Used to identify counties by name.
   - **Column:** `"county_fips_code"`: Used to obtain the FIPS code for Allegheny County.
   - **Condition:** `"county_name" ILIKE '%Allegheny%'` to filter for Allegheny County.

2. **Table:** `BLS.BLS_QCEW._1998_Q1` to `BLS.BLS_QCEW._2017_Q4`
   - **Column:** `"area_fips"`: Used to match the FIPS code of Allegheny County.
   - **Column:** `"avg_wkly_wage_10_total_all_industries"`: Used to get the average weekly wages for all industries.
   - **Condition:** `"area_fips" = '42003'` (FIPS code for Allegheny County).

3. **Table:** `BLS.BLS.CPI_U`
   - **Column:** `"year"`: Used to filter data between 1998 and 2017.
   - **Column:** `"value"`: CPI values for calculating inflation.
   - **Column:** `"item_name"`: Used to select CPI data for 'All items'.
   - **Column:** `"area_name"`: Used to specify the geographic area, such as 'U.S. city average'.
   - **Condition:** `"item_name" = 'All items'` and `"area_name" = 'U.S. city average'`.

---

**SQL Queries:**

1. **Get the FIPS code for Allegheny County:**

   ```sql
   SELECT DISTINCT "county_name", "county_fips_code"
   FROM BLS.GEO_US_BOUNDARIES.COUNTIES
   WHERE "county_name" ILIKE '%Allegheny%';
   ```

2. **Verify if the FIPS code '42003' corresponds to Allegheny County in wage data for 1998 Q1:**

   ```sql
   SELECT DISTINCT "area_fips"
   FROM BLS.BLS_QCEW."_1998_Q1"
   WHERE "area_fips" = '42003';
   ```

3. **List all item names available in CPI data:**

   ```sql
   SELECT DISTINCT "item_name"
   FROM BLS.BLS.CPI_U;
   ```

4. **Find all area names in CPI data containing 'U.S.':**

   ```sql
   SELECT DISTINCT "area_name"
   FROM BLS.BLS.CPI_U
   WHERE "area_name" ILIKE '%U.S.%';
   ```

5. **Get years available in CPI data between 1998 and 2017:**

   ```sql
   SELECT DISTINCT "year"
   FROM BLS.BLS.CPI_U
   WHERE "year" BETWEEN 1998 AND 2017;
   ```

6. **Retrieve CPI value for 'All items' in 1998:**

   ```sql
   SELECT "year", "value"
   FROM BLS.BLS.CPI_U
   WHERE "item_name" = 'All items'
     AND "area_name" = 'U.S. city average'
     AND "year" = 1998;
   ```

7. **Retrieve CPI value for 'All items' in 2017:**

   ```sql
   SELECT "year", "value"
   FROM BLS.BLS.CPI_U
   WHERE "item_name" = 'All items'
     AND "area_name" = 'U.S. city average'
     AND "year" = 2017;
   ```

8. **Get average weekly wage for all industries in Allegheny County for 1998 Q1:**

   ```sql
   SELECT "avg_wkly_wage_10_total_all_industries"
   FROM BLS.BLS_QCEW."_1998_Q1"
   WHERE "area_fips" = '42003';
   ```

9. **Get average weekly wage for all industries in Allegheny County for 2017 Q4:**

   ```sql
   SELECT "avg_wkly_wage_10_total_all_industries"
   FROM BLS.BLS_QCEW."_2017_Q4"
   WHERE "area_fips" = '42003';
   ```

10. **List all series titles in the Employment Hours and Earnings data:**

    ```sql
    SELECT DISTINCT "series_title"
    FROM BLS.BLS.EMPLOYMENT_HOURS_EARNINGS_SERIES;
    ```

---

These queries help explore the relevant data needed to determine whether the average annual wage increase in Allegheny County kept pace with inflation from 1998 to 2017.Query:
SELECT DISTINCT "county_name", "county_fips_code"
   FROM BLS.GEO_US_BOUNDARIES.COUNTIES
   WHERE "county_name" ILIKE '%Allegheny%';
Answer:
county_name,county_fips_code
Allegheny,42003
Query:
SELECT DISTINCT "area_fips"
   FROM BLS.BLS_QCEW."_1998_Q1"
   WHERE "area_fips" = '42003';
Answer:
area_fips
42003
Query:
SELECT DISTINCT "item_name"
   FROM BLS.BLS.CPI_U;
Answer:
Too long, hard cut:
item_name
Owners' equivalent rent of residences
Owners' equivalent rent of primary residence
Energy services
New and used motor vehicles
Used cars and trucks
Motor vehicle insurance
All items less food and energy
Apparel
Commodities
Education and communication
Food and beverages
Food
Nonalcoholic beverages and beverage materials
Other food at home
Fruits and vegetables
Other goods and services
Other goods
Housing
Shelter
Household energy
Household furnishings and supplies
Transportation
Transportation commodities less motor fuel
"Tuition, other school fees, and childcare"
Food away from home
Rent of primary residence
Recreation
Services less medical care services
All items less food
Energy commodities
"Commodities less food, energy, and used cars and trucks"
Communication
Information and information processing
"Meats, poultry, and fish"
"Nondurables less food, beverages, and apparel"
Nondurables less food and apparel
Recreation commodities
Utilities and public transportation
Boys' apparel
Women's apparel
Boys' and girls' footwear
Watches
Technical and business school tuition and fees
Uncooked beef roasts
Pork
"Bacon, breakfast sausage, and related products"
Pork chops
Milk
Other fresh fruits
Lettuce
Financial services
"Propane, kerosene, and firewood"
Water and sewerage maintenance
Other foods
Limited service meals and snacks
Appliances
Miscellaneous household products
Physicians' services
Tenants' and household insurance
Televisions
"Sewing machines, fabric and supplies"
Cookies
Rental of video discs and other media
Gasoline (all types)
All items less shelter
Commodities less food
"Meats, poultry, fish, and eggs"
"All items less food, shelter, and energy"
"All items less food, shelter, energy, and used cars and trucks"
Education
Medical care services
Rent of shelter
Other services
Services less energy services
Men's pants and shorts
Women's outerwear
Women's footwear
College tuition and fees
Postage and delivery services
Telephone services
Breakfast cereal
Bread
"Fresh biscuits, rolls, muffins"
Beef and veal
Other uncooked poultry including turkey
Other fresh vegetables
Carbonated drinks
Other beverage materials including tea
Other sweets
Salad dressing
Snacks
Baby food
Full service meals and snacks
Food at employee sites and schools
Distilled spirits at home
Wine at home
Alcoholic beverages away from home
Tobacco and smoking products
Tobacco products other than cigarettes
Bedroom furniture
"Living room, kitchen, and dining room furniture"
"Tools, hardware, outdoor equipment and supplies"
Housekeeping supplies
Household operations
"Moving, storage, freight expense"
Other bakery products
Fresh fish and seafood
Frozen noncarbonated juices and drinks
Soups
Personal care services
Furniture and bedding
Dishes and flatware
Domestic services
Dental services
Miscellaneous personal goods
Floor coverings
Other linens
Other appliances
Professional services
Services by other medical professionals
Hospital services
Health insurance
Medicinal drugs
Other video equipment
Audio equipment
Pets and pet products
Sporting goods
Photography
Photographers and photo processing
Toys
Fees for lessons or instructions
Tires
Rice
Bread other than white
Fresh cakes and cupcakes
Breakfast sausage and related products
Frankfurters
Fresh and frozen chicken parts
Shelf stable fish and seafood
Instant coffee
Other condiments
Prepared salads
Whiskey at home
Intercity bus fare
Intracity mass transit
"Toys, games, hobbies and playground equipment"
Admission to sporting events
Sports equipment
Fresh fruits and vegetables
Recreation services
Infants' and toddlers' apparel
"Information technology, hardware and services"
Cereals and cereal products
Processed fish and seafood
Eggs
Fresh fruits
Frozen fruits and vegetables
"Hair, dental, shaving, and miscellaneous personal care products"
"Cosmetics, perfume, bath, nail preparations and implements"
Funeral expenses
Major appliances
Ham
Apples
Juices and nonalcoholic drinks
Water and sewer and trash collection services
Other household equipment and furnishings
Nursing homes and adult day services
Care of invalids and elderly at home
Prescription drugs
Nonprescription drugs
Video and audio
Other recreation services
Motor vehicle maintenance and servicing
Motor vehicle repair
Airline fares
White bread
"Fresh sweetrolls, coffeecakes, doughnuts"
"Frozen and refrigerated bakery products, pies, tarts, turnovers"
Frozen fish and seafood
Fresh milk other than whole
Butter
"Oranges, including tangerines"
Canned vegetables
Salt and other seasonings and spices
"Distilled spirits, excluding whiskey, at home"
New cars and trucks
Vehicle parts and equipment other than tires
Ship fare
Outpatient hospital services
"Admission to movies, theaters, and concerts"
Photo Processing
Veterinarian services
Tax return preparation and other accounting fees
"Housing at school, excluding board"
Video and audio products
Music instruments and accessories
Newspapers and magazines
"Motor oil, coolant, and fluids"
New motorcycles
Pur
Query:
SELECT DISTINCT "area_name"
   FROM BLS.BLS.CPI_U
   WHERE "area_name" ILIKE '%U.S.%';
Answer:
area_name
U.S. city average
Query:
SELECT DISTINCT "year"
   FROM BLS.BLS.CPI_U
   WHERE "year" BETWEEN 1998 AND 2017;
Answer:
year
2008
2009
2011
2014
1998
1999
2001
2002
2007
2010
2012
2013
2015
2016
2017
2000
2004
2003
2005
2006
Query:
SELECT "year", "value"
   FROM BLS.BLS.CPI_U
   WHERE "item_name" = 'All items'
     AND "area_name" = 'U.S. city average'
     AND "year" = 1998;
Answer:
year,value
1998,161.6
1998,161.9
1998,162.2
1998,162.5
1998,162.8
1998,163.0
1998,163.2
1998,163.4
1998,163.6
1998,164.0
1998,164.0
1998,163.9
1998,163.0
1998,162.0
1998,162.0
1998,162.0
1998,162.2
1998,162.6
1998,162.8
1998,163.2
1998,163.4
1998,163.5
1998,163.9
1998,164.1
1998,164.4
1998,162.3
1998,163.7
1998,163.0
Query:
SELECT "year", "value"
   FROM BLS.BLS.CPI_U
   WHERE "item_name" = 'All items'
     AND "area_name" = 'U.S. city average'
     AND "year" = 2017;
Answer:
year,value
2017,244.076
2017,246.163
2017,245.12
2017,242.839
2017,243.603
2017,243.801
2017,244.524
2017,244.733
2017,244.955
2017,244.786
2017,245.519
2017,246.819
2017,246.663
2017,246.669
2017,246.524
2017,245.12
2017,243.62
2017,243.872
2017,243.766
2017,244.274
2017,244.069
2017,244.218
2017,244.28
2017,245.205
2017,246.551
2017,246.657
2017,247.378
2017,247.736
Query:
SELECT "avg_wkly_wage_10_total_all_industries"
   FROM BLS.BLS_QCEW."_1998_Q1"
   WHERE "area_fips" = '42003';
Answer:
avg_wkly_wage_10_total_all_industries
644.0
Query:
SELECT "avg_wkly_wage_10_total_all_industries"
   FROM BLS.BLS_QCEW."_2017_Q4"
   WHERE "area_fips" = '42003';
Answer:
avg_wkly_wage_10_total_all_industries
1171.0
Query:
SELECT DISTINCT "series_title"
    FROM BLS.BLS.EMPLOYMENT_HOURS_EARNINGS_SERIES;
Answer:
Too long, hard cut:
series_title
"All employees, thousands, total nonfarm, seasonally adjusted"
"All employees, quarterly averages, seasonally adjusted, thousands, total nonfarm, seasonally adjusted"
"All employees, 3-month average change, seasonally adjusted, thousands, total nonfarm, seasonally adjusted"
"All employees, thousands, total private, seasonally adjusted"
"Average weekly hours of all employees, total private, seasonally adjusted"
"Production and nonsupervisory employees, thousands, total private, seasonally adjusted"
"Average weekly hours of production and nonsupervisory employees, total private, seasonally adjusted"
"Average weekly earnings of all employees, total private, seasonally adjusted"
"Average weekly earnings of all employees, 1982-1984 dollars, total private, seasonally adjusted"
"Average hourly earnings of all employees, 1982-1984 dollars, total private, seasonally adjusted"
"Indexes of aggregate weekly payrolls of all employees, 2007=100, total private, seasonally adjusted"
"Diffusion indexes, 1-month span, seasonally adjusted, total private, seasonally adjusted"
"Diffusion indexes, 6-month span, seasonally adjusted, total private, seasonally adjusted"
"All employees, 3-month average change, seasonally adjusted, thousands, total private, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, 1982-84 dollars, total private, seasonally adjusted"
"Average hourly earnings of production and nonsupervisory employees, 1982-84 dollars, total private, seasonally adjusted"
"Indexes of aggregate weekly hours of production and nonsupervisory employees, 2002=100, total private, seasonally adjusted"
"Indexes of aggregate weekly payrolls of production and nonsupervisory employees, 2002=100, total private, seasonally adjusted"
"Average weekly hours, production/nonsupervisory employees, quarterly averages, seasonally adjusted, total private, seasonally adjusted"
"Aggregate weekly payrolls of all employees, thousands, total private, seasonally adjusted"
"Aggregate weekly payrolls of production and nonsupervisory employees, thousands, total private, seasonally adjusted"
"Average hourly earnings of all employees, goods-producing, seasonally adjusted"
"Women employees, thousands, goods-producing, seasonally adjusted"
"Average weekly earnings of all employees, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly hours of all employees, 2007=100, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly payrolls of all employees, 2007=100, goods-producing, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly hours of production and nonsupervisory employees, 2002=100, goods-producing, seasonally adjusted"
"Indexes of aggregate weekly payrolls of production and nonsupervisory employees, 2002=100, goods-producing, seasonally adjusted"
"Average weekly hours of production and nonsupervisory employees, private service-providing, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, 1982-84 dollars, private service-providing, seasonally adjusted"
"All employees, thousands, mining and logging, seasonally adjusted"
"Production and nonsupervisory employees, thousands, mining and logging, seasonally adjusted"
"Indexes of aggregate weekly payrolls of all employees, 2007=100, mining and logging, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, mining and logging, seasonally adjusted"
"Indexes of aggregate weekly hours of production and nonsupervisory employees, 2002=100, mining and logging, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, mining, seasonally adjusted"
"Average weekly earnings of all employees, metal ore mining, seasonally adjusted"
"Diffusion indexes, 3-month span, seasonally adjusted, total private, seasonally adjusted"
"All employees, quarterly averages, seasonally adjusted, thousands, total private, seasonally adjusted"
"Average weekly earnings of production and nonsupervisory employees, total private, seasonally adjusted"
"Aggregate weekly hours of production and nonsupervisory employees, thousands, goods-producing, seasonally adjusted"
"Aggregate weekly payrolls of production and nonsupervisory employees, thousands, goods-producing, seasonally adjusted"
"All employees, thousands, service-providing, seasonally adjusted"
"Average weekly hours of all employees, private service-providing, seasonally adjusted"
"Average hourly earnings of production and nonsupervisory employees, private service-providing, seasonally adjusted"
"Women employees, thousands, mining and logging, seasonally adjusted"
"Aggregate weekly hours of production and nonsupervisory employees, thousands, mining and logging, seasonally adjusted"
"Women employees, thousands, logging, seasonally adjusted"
"Indexes of aggregate weekly hours of all employees, 2007=100, logging, season
End Exploring Related Columns
Task: Did the increase on average annual wages for all industries in Allegheny County, Pittsburgh keep pace with inflation of all consumer items between 1998 and 2017? Tell me their growth rates respectively (2 decimals).

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Wage_growth_rate,Inflation_rate
92.51,50.37
```

Between 1998 and 2017, the average annual wages for all industries in Allegheny County, Pittsburgh increased by approximately **92.51%**, while the inflation rate for all consumer items was about **50.37%**. This indicates that wage growth outpaced inflation during this period..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BLS': {'BLS': ['CPI_U', 'CPSAAT18', 'C_CPI_U', 'EMPLOYMENT_HOURS_EARNINGS', 'EMPLOYMENT_HOURS_EARNINGS_SERIES', 'UNEMPLOYMENT_CPS', 'UNEMPLOYMENT_CPS_SERIES', 'WM', 'WM_SERIES'], 'BLS_QCEW': ['_1990_Q1', '_1990_Q2', '_1990_Q3', '_1990_Q4', '_1991_Q1', '_1991_Q2', '_1991_Q3', '_1991_Q4', '_1992_Q1', '_1992_Q2', '_1992_Q3', '_1992_Q4', '_1993_Q1', '_1993_Q2', '_1993_Q3', '_1993_Q4', '_1994_Q1', '_1994_Q2', '_1994_Q3', '_1994_Q4', '_1995_Q1', '_1995_Q2', '_1995_Q3', '_1995_Q4', '_1996_Q1', '_1996_Q2', '_1996_Q3', '_1996_Q4', '_1997_Q1', '_1997_Q2', '_1997_Q3', '_1997_Q4', '_1998_Q1', '_1998_Q2', '_1998_Q3', '_1998_Q4', '_1999_Q1', '_1999_Q2', '_1999_Q3', '_1999_Q4', '_2000_Q1', '_2000_Q2', '_2000_Q3', '_2000_Q4', '_2001_Q1', '_2001_Q2', '_2001_Q3', '_2001_Q4', '_2002_Q1', '_2002_Q2', '_2002_Q3', '_2002_Q4', '_2003_Q1', '_2003_Q2', '_2003_Q3', '_2003_Q4', '_2004_Q1', '_2004_Q2', '_2004_Q3', '_2004_Q4', '_2005_Q1', '_2005_Q2', '_2005_Q3', '_2005_Q4', '_2006_Q1', '_2006_Q2', '_2006_Q3', '_2006_Q4', '_2007_Q1', '_2007_Q2', '_2007_Q3', '_2007_Q4', '_2008_Q1', '_2008_Q2', '_2008_Q3', '_2008_Q4', '_2009_Q1', '_2009_Q2', '_2009_Q3', '_2009_Q4', '_2010_Q1', '_2010_Q2', '_2010_Q3', '_2010_Q4', '_2011_Q1', '_2011_Q2', '_2011_Q3', '_2011_Q4', '_2012_Q1', '_2012_Q2', '_2012_Q3', '_2012_Q4', '_2013_Q1', '_2013_Q2', '_2013_Q3', '_2013_Q4', '_2014_Q1', '_2014_Q2', '_2014_Q3', '_2014_Q4', '_2015_Q1', '_2015_Q2', '_2015_Q3', '_2015_Q4', '_2016_Q1', '_2016_Q2', '_2016_Q3', '_2016_Q4', '_2017_Q1', '_2017_Q2', '_2017_Q3', '_2017_Q4', '_2018_Q1', '_2018_Q2', '_2018_Q3', '_2018_Q4', '_2019_Q1', '_2019_Q2'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
Keep all decimals to four decimal places.

2025-01-18 07:34:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 07:34:17 - root - INFO - ```sql
WITH wage_data AS (
  SELECT 
    (SELECT "avg_wkly_wage_10_total_all_industries" 
     FROM BLS.BLS_QCEW."_1998_Q1" 
     WHERE "area_fips" = '42003') AS wage_1998,
    (SELECT "avg_wkly_wage_10_total_all_industries" 
     FROM BLS.BLS_QCEW."_2017_Q4" 
     WHERE "area_fips" = '42003') AS wage_2017
),
cpi_data AS (
  SELECT 
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 1998) AS CPI_1998,
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 2017) AS CPI_2017
)
SELECT 
  ROUND((wage_2017 - wage_1998) / wage_1998 * 100, 2) AS "Wage_growth_rate",
  ROUND((CPI_2017 - CPI_1998) / CPI_1998 * 100, 2) AS "Inflation_rate"
FROM wage_data, cpi_data;
```
2025-01-18 07:34:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:34:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:34:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:34:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:34:18 - snowflake.connector.connection - INFO - closed
2025-01-18 07:34:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:34:19 - root - INFO - itercount: 1
2025-01-18 07:34:19 - root - INFO - 0
2025-01-18 07:34:19 - root - INFO - results: 
Wage_growth_rate,Inflation_rate
81.83,50.38


2025-01-18 07:34:19 - root - INFO - Please check the answer again by reviewing Did the increase on average annual wages for all industries in Allegheny County, Pittsburgh keep pace with inflation of all consumer items between 1998 and 2017? Tell me their growth rates respectively (2 decimals)., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Wage_growth_rate,Inflation_rate
92.51,50.37
```

Between 1998 and 2017, the average annual wages for all industries in Allegheny County, Pittsburgh increased by approximately **92.51%**, while the inflation rate for all consumer items was about **50.37%**. This indicates that wage growth outpaced inflation during this period. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Wage_growth_rate,Inflation_rate
81.83,50.38
Current sql:
WITH wage_data AS (
  SELECT 
    (SELECT "avg_wkly_wage_10_total_all_industries" 
     FROM BLS.BLS_QCEW."_1998_Q1" 
     WHERE "area_fips" = '42003') AS wage_1998,
    (SELECT "avg_wkly_wage_10_total_all_industries" 
     FROM BLS.BLS_QCEW."_2017_Q4" 
     WHERE "area_fips" = '42003') AS wage_2017
),
cpi_data AS (
  SELECT 
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 1998) AS CPI_1998,
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 2017) AS CPI_2017
)
SELECT 
  ROUND((wage_2017 - wage_1998) / wage_1998 * 100, 2) AS "Wage_growth_rate",
  ROUND((CPI_2017 - CPI_1998) / CPI_1998 * 100, 2) AS "Inflation_rate"
FROM wage_data, cpi_data;
2025-01-18 07:35:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 07:35:32 - root - INFO - ```sql
WITH wage_data AS (
  SELECT
    (
      SELECT AVG("avg_wkly_wage_10_total_all_industries")
      FROM (
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q1" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q2" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q3" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q4" WHERE "area_fips" = '42003'
      )
    ) AS wage_1998,
    (
      SELECT AVG("avg_wkly_wage_10_total_all_industries")
      FROM (
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q1" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q2" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q3" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q4" WHERE "area_fips" = '42003'
      )
    ) AS wage_2017
),
cpi_data AS (
  SELECT 
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 1998) AS CPI_1998,
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 2017) AS CPI_2017
)
SELECT 
  ROUND((wage_2017 - wage_1998) / wage_1998 * 100, 4) AS "Wage_growth_rate",
  ROUND((CPI_2017 - CPI_1998) / CPI_1998 * 100, 4) AS "Inflation_rate"
FROM wage_data, cpi_data;
```
2025-01-18 07:35:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:35:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:35:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:35:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:35:35 - snowflake.connector.connection - INFO - closed
2025-01-18 07:35:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:35:35 - root - INFO - itercount: 2
2025-01-18 07:35:35 - root - INFO - 0
2025-01-18 07:35:35 - root - INFO - results: 
Wage_growth_rate,Inflation_rate
76.2963,50.3777


2025-01-18 07:35:35 - root - INFO - Please check the answer again by reviewing Did the increase on average annual wages for all industries in Allegheny County, Pittsburgh keep pace with inflation of all consumer items between 1998 and 2017? Tell me their growth rates respectively (2 decimals)., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Wage_growth_rate,Inflation_rate
92.51,50.37
```

Between 1998 and 2017, the average annual wages for all industries in Allegheny County, Pittsburgh increased by approximately **92.51%**, while the inflation rate for all consumer items was about **50.37%**. This indicates that wage growth outpaced inflation during this period. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Wage_growth_rate,Inflation_rate
76.2963,50.3777
Current sql:
WITH wage_data AS (
  SELECT
    (
      SELECT AVG("avg_wkly_wage_10_total_all_industries")
      FROM (
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q1" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q2" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q3" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q4" WHERE "area_fips" = '42003'
      )
    ) AS wage_1998,
    (
      SELECT AVG("avg_wkly_wage_10_total_all_industries")
      FROM (
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q1" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q2" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q3" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q4" WHERE "area_fips" = '42003'
      )
    ) AS wage_2017
),
cpi_data AS (
  SELECT 
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 1998) AS CPI_1998,
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 2017) AS CPI_2017
)
SELECT 
  ROUND((wage_2017 - wage_1998) / wage_1998 * 100, 4) AS "Wage_growth_rate",
  ROUND((CPI_2017 - CPI_1998) / CPI_1998 * 100, 4) AS "Inflation_rate"
FROM wage_data, cpi_data;
2025-01-18 07:36:43 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 07:36:43 - root - INFO - ```sql
WITH wage_data AS (
  SELECT
    (
      SELECT AVG("avg_wkly_wage_10_total_all_industries")
      FROM (
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q1" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q2" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q3" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_1998_Q4" WHERE "area_fips" = '42003'
      )
    ) AS wage_1998,
    (
      SELECT AVG("avg_wkly_wage_10_total_all_industries")
      FROM (
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q1" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q2" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q3" WHERE "area_fips" = '42003'
        UNION ALL
        SELECT "avg_wkly_wage_10_total_all_industries" FROM BLS.BLS_QCEW."_2017_Q4" WHERE "area_fips" = '42003'
      )
    ) AS wage_2017
),
cpi_data AS (
  SELECT 
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 1998) AS CPI_1998,
    (SELECT AVG("value") 
     FROM BLS.BLS.CPI_U
     WHERE "item_name" = 'All items'
       AND "area_name" = 'U.S. city average'
       AND "year" = 2017) AS CPI_2017
)
SELECT 
  ROUND((wage_2017 - wage_1998) / wage_1998 * 100, 4) AS "Wage_growth_rate",
  ROUND((CPI_2017 - CPI_1998) / CPI_1998 * 100, 4) AS "Inflation_rate"
FROM wage_data, cpi_data;
```
2025-01-18 07:36:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 07:36:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 07:36:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 07:36:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 07:36:45 - snowflake.connector.connection - INFO - closed
2025-01-18 07:36:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 07:36:46 - root - INFO - itercount: 3
2025-01-18 07:36:46 - root - INFO - 0
2025-01-18 07:36:46 - root - INFO - Total iteration counts: 3
