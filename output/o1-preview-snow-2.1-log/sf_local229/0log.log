2025-01-25 03:24:45 - openai._base_client - INFO - Retrying request to /chat/completions in 0.427152 seconds
2025-01-25 03:26:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:26:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:02 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:02 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:02 - root - INFO - SQL:
SELECT "match_id", "team_1", "team_2", "match_date"
FROM IPL.IPL."MATCH"
LIMIT 100;
Results:
match_id,team_1,team_2,match_date
335987,2,1,2008-04-18
335988,4,3,2008-04-19
335989,6,5,2008-04-19
335990,7,2,2008-04-20
335991,1,8,2008-04-20
335992,5,4,2008-04-21
335993,8,6,2008-04-22
335994,3,7,2008-04-23
335995,8,5,2008-04-24
335996,4,7,2008-04-25
335997,2,5,2008-04-26
335998,3,1,2008-04-26
335999,7,8,2008-04-27
336000,4,6,2008-04-27
336001,2,3,2008-04-28
336002,1,7,2008-04-29
336003,6,2,2008-04-30
336004,8,4,2008-05-01
336005,5,1,2008-05-01
336006,3,6,2008-05-02
336007,8,2,2008-05-25
336008,4,1,2008-05-03
336009,7,6,2008-05-04
336010,5,3,2008-05-04
336011,2,4,2008-05-05
336012,3,8,2008-05-06
336013,7,5,2008-05-07
336014,6,3,2008-05-08
336015,1,2,2008-05-08
336016,5,8,2008-05-09
336017,2,7,2008-05-28
336018,3,4,2008-05-10
336019,8,1,2008-05-11
336020,5,6,2008-05-11
336021,4,2,2008-05-12
336022,1,6,2008-05-13
336023,7,3,2008-05-14
336024,4,5,2008-05-28
336025,6,8,2008-05-15
336026,7,1,2008-05-16
336027,6,4,2008-05-17
336028,5,2,2008-05-17
336029,8,7,2008-05-18
336030,1,3,2008-05-18
336031,2,6,2008-05-19
336032,1,5,2008-05-20
336033,7,4,2008-05-21
336034,3,2,2008-05-21
336036,4,8,2008-05-23
336037,6,7,2008-05-24
336038,3,5,2008-05-24
336039,2,8,2008-05-03
336040,1,4,2008-05-25
336041,5,7,2008-05-26
336042,8,3,2008-05-27
336043,6,5,2008-05-30
336044,3,4,2008-05-31
336045,3,5,2008-06-01
392186,3,7,2009-04-18
392187,2,5,2009-04-18
392188,6,4,2009-04-19
392189,8,1,2009-04-19
392190,2,3,2009-04-20
392191,4,1,2009-04-21
392193,2,8,2009-04-22
392194,3,6,2009-04-23
392196,2,4,2009-04-24
392197,8,7,2009-04-25
392199,2,6,2009-04-26
392200,4,5,2009-04-26
392201,3,8,2009-04-27
392202,1,7,2009-04-27
392203,6,5,2009-04-28
392204,2,1,2009-04-29
392205,4,7,2009-04-29
392206,8,6,2009-04-30
392207,3,5,2009-04-30
392208,1,7,2009-05-01
392209,2,4,2009-05-01
392210,8,5,2009-05-02
392211,3,6,2009-05-02
392212,4,1,2009-05-03
392213,2,7,2009-05-03
392214,3,8,2009-05-04
392215,4,5,2009-05-05
392216,6,1,2009-05-05
392217,8,7,2009-05-06
392218,2,5,2009-05-07
392219,3,4,2009-05-07
392220,6,7,2009-05-08
392221,8,4,2009-05-09
392222,3,5,2009-05-09
392223,2,7,2009-05-10
392224,6,1,2009-05-10
392225,8,5,2009-05-11
392226,2,1,2009-05-12
392227,4,7,2009-05-12
392228,8,6,2009-05-13
392229,2,3,2009-05-14
392230,7,5,2009-05-14

2025-01-25 03:26:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:04 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:05 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "striker", "non_striker"
FROM IPL.IPL."BALL_BY_BALL"
LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,striker,non_striker
335987,2,1,1,6,7
335987,1,1,2,2,1
335987,2,1,2,7,6
335987,1,1,3,2,1
335987,2,1,3,7,6
335987,1,1,4,2,1
335987,2,1,4,7,6
335987,1,1,5,2,1
335987,2,1,5,6,7
335987,1,1,6,2,1
335987,2,1,6,7,6
335987,1,1,7,2,1
335987,2,1,7,7,6
335987,1,2,1,2,1
335987,2,2,1,6,7
335987,1,2,2,2,1
335987,2,2,2,8,7
335987,1,2,3,2,1
335987,2,2,3,8,7
335987,1,2,4,2,1
335987,2,2,4,8,7
335987,1,2,5,2,1
335987,2,2,5,7,8
335987,1,2,6,2,1
335987,2,2,6,7,8
335987,1,3,1,1,2
335987,2,3,1,8,7
335987,1,3,2,1,2
335987,2,3,2,8,7
335987,1,3,3,1,2
335987,2,3,3,9,7
335987,1,3,4,2,1
335987,2,3,4,7,9
335987,1,3,5,2,1
335987,2,3,5,7,9
335987,1,3,6,1,2
335987,2,3,6,7,9
335987,2,3,7,7,9
335987,1,4,1,2,1
335987,2,4,1,7,9
335987,1,4,2,2,1
335987,2,4,2,7,9
335987,1,4,3,2,1
335987,2,4,3,9,7
335987,1,4,4,1,2
335987,2,4,4,9,7
335987,1,4,5,1,2
335987,2,4,5,7,9
335987,1,4,6,1,2
335987,2,4,6,7,9
335987,1,4,7,2,1
335987,1,5,1,1,2
335987,2,5,1,9,7
335987,1,5,2,1,2
335987,2,5,2,7,9
335987,1,5,3,2,1
335987,2,5,3,9,7
335987,1,5,4,2,1
335987,2,5,4,9,7
335987,1,5,5,2,1
335987,2,5,5,9,7
335987,1,5,6,1,2
335987,2,5,6,10,7
335987,1,6,1,2,1
335987,2,6,1,7,10
335987,1,6,2,1,2
335987,2,6,2,7,10
335987,1,6,3,3,2
335987,2,6,3,11,10
335987,1,6,4,3,2
335987,2,6,4,11,10
335987,1,6,5,3,2
335987,2,6,5,10,11
335987,1,6,6,3,2
335987,2,6,6,11,10
335987,1,7,1,2,3
335987,2,7,1,10,11
335987,1,7,2,3,2
335987,2,7,2,10,11
335987,1,7,3,2,3
335987,2,7,3,10,11
335987,1,7,4,3,2
335987,2,7,4,11,10
335987,1,7,5,3,2
335987,2,7,5,11,10
335987,1,7,6,2,3
335987,2,7,6,11,10
335987,2,7,7,11,10
335987,2,7,8,11,10
335987,1,8,1,2,3
335987,2,8,1,10,11
335987,1,8,2,2,3
335987,2,8,2,11,10
335987,1,8,3,3,2
335987,2,8,3,10,11
335987,1,8,4,2,3
335987,2,8,4,11,10
335987,1,8,5,3,2
335987,2,8,5,11,10
335987,1,8,6,2,3

2025-01-25 03:26:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:06 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:06 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
FROM IPL.IPL."BATSMAN_SCORED"
LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0

2025-01-25 03:26:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:08 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:08 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
FROM IPL.IPL."WICKET_TAKEN"
LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,player_out,kind_out
419167,1,10,3,154,caught
419167,2,10,3,46,caught
419167,2,12,4,8,caught
419167,2,14,4,96,caught
419167,1,18,4,208,caught
419168,1,2,7,18,caught
419168,1,5,5,21,caught
419168,2,6,1,53,caught
419168,2,6,5,178,caught
419168,2,8,2,57,caught
419168,1,14,2,20,caught
419168,1,15,5,109,caught
419168,2,16,2,56,caught
419168,2,18,4,188,caught
419168,2,20,2,131,caught
419168,1,20,4,125,caught
419169,1,1,4,53,caught
419169,1,4,2,57,caught
419169,1,7,1,56,caught
419169,1,17,3,54,caught
419169,1,19,3,131,caught
419170,2,2,4,42,caught
419170,1,8,2,185,caught
419170,1,9,4,18,caught
419170,1,12,2,23,caught
419170,2,15,2,133,caught
419170,2,15,5,79,caught
419170,2,17,6,154,caught
419170,1,18,1,20,caught
419170,2,19,6,221,caught
501203,1,1,6,185,caught
501203,1,11,3,21,caught
501203,2,16,2,9,caught
501203,1,18,2,20,caught
501203,2,20,2,63,caught
501204,1,5,5,42,caught
501204,1,6,3,26,caught
501204,2,6,5,252,caught
501204,1,11,1,257,caught
501204,1,13,6,154,caught
501204,1,18,3,258,caught
501204,1,20,1,112,caught
501204,1,20,3,94,caught
501205,2,2,2,135,caught
501205,1,9,6,55,caught
501205,2,10,6,260,caught
501205,1,12,3,2,caught
501205,2,18,4,79,caught
501205,1,19,4,259,caught
501206,1,7,6,254,caught
501206,1,15,2,183,caught
501206,1,18,4,106,caught
501207,2,1,1,74,caught
501207,1,1,4,53,caught
501207,1,2,3,100,caught
501207,1,3,4,167,caught
501207,1,4,3,88,caught
501207,2,8,5,171,caught
501207,1,9,3,48,caught
501207,2,9,3,157,caught
501207,1,18,1,67,caught
501207,1,20,1,14,caught
501208,2,9,6,26,caught
501208,2,13,2,154,caught
501208,1,13,3,9,caught
501208,2,14,6,93,caught
501208,2,17,4,258,caught
501208,2,18,1,112,caught
501208,1,20,6,31,caught
501209,1,1,3,41,caught
501209,1,5,5,254,caught
501209,1,8,1,262,caught
501209,1,8,3,183,caught
501209,2,8,3,6,caught
501209,2,11,5,266,caught
501209,1,18,4,187,caught
501209,1,19,7,54,caught
501210,1,5,4,8,caught
501211,1,1,2,21,caught
501211,2,6,5,53,caught
501211,2,14,6,264,caught
501212,1,1,1,2,caught
501212,1,3,5,64,caught
501212,1,5,5,17,caught
501212,2,8,4,74,caught
501212,2,10,5,171,caught
501212,2,12,2,27,caught
501212,1,16,2,104,caught
501212,1,17,1,35,caught
501213,2,2,6,135,caught
501213,1,3,5,42,caught
501213,2,5,6,260,caught
501213,2,7,4,110,caught
501213,1,9,6,65,caught
501213,2,12,1,79,caught
501213,1,15,4,26,caught
501213,2,17,5,203,caught
501213,2,17,6,268,caught
501213,2,20,1,269,caught
501213,1,20,2,154,caught

2025-01-25 03:26:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:09 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:10 - root - INFO - SQL:
SELECT b."match_id", b."innings_no", b."over_id", b."ball_id", b."striker", s."runs_scored"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,striker,runs_scored
335987,2,1,1,6,1
335987,1,1,2,2,0
335987,2,1,3,7,0
335987,1,1,4,2,0
335987,2,1,4,7,1
335987,1,1,5,2,0
335987,2,1,5,6,1
335987,1,1,6,2,0
335987,2,1,6,7,0
335987,1,1,7,2,0
335987,2,1,7,7,0
335987,1,2,1,2,0
335987,2,2,1,6,0
335987,1,2,2,2,4
335987,2,2,2,8,0
335987,1,2,3,2,4
335987,2,2,3,8,0
335987,1,2,4,2,6
335987,2,2,4,8,1
335987,1,2,5,2,4
335987,2,2,5,7,0
335987,1,2,6,2,0
335987,2,2,6,7,0
335987,1,3,1,1,0
335987,2,3,1,8,0
335987,1,3,2,1,0
335987,2,3,2,8,0
335987,1,3,3,1,0
335987,2,3,3,9,1
335987,1,3,4,2,4
335987,2,3,4,7,0
335987,1,3,5,2,1
335987,1,3,6,1,0
335987,2,3,6,7,0
335987,2,3,7,7,1
335987,2,4,1,7,2
335987,1,4,2,2,6
335987,2,4,2,7,1
335987,1,4,3,2,0
335987,2,4,3,9,0
335987,1,4,4,1,4
335987,2,4,4,9,0
335987,1,4,5,1,0
335987,2,4,5,7,0
335987,1,4,6,1,1
335987,2,4,6,7,0
335987,1,4,7,2,6
335987,1,5,1,1,4
335987,2,5,1,9,1
335987,1,5,2,1,1
335987,2,5,2,7,1
335987,1,5,3,2,4
335987,2,5,3,9,0
335987,1,5,4,2,0
335987,2,5,4,9,6
335987,1,5,5,2,1
335987,2,5,5,9,0
335987,1,5,6,1,0
335987,2,5,6,10,0
335987,1,6,1,2,1
335987,2,6,1,7,0
335987,1,6,2,1,0
335987,2,6,2,7,0
335987,1,6,3,3,0
335987,2,6,3,11,0
335987,1,6,4,3,0
335987,2,6,4,11,1
335987,1,6,5,3,0
335987,2,6,5,10,1
335987,1,6,6,3,0
335987,2,6,6,11,0
335987,1,7,1,2,1
335987,2,7,1,10,0
335987,1,7,2,3,1
335987,2,7,2,10,0
335987,1,7,3,2,1
335987,2,7,3,10,1
335987,1,7,4,3,2
335987,1,7,5,3,1
335987,1,7,6,2,1
335987,2,7,6,11,0
335987,2,7,7,11,0
335987,2,7,8,11,4
335987,1,8,1,2,0
335987,2,8,1,10,1
335987,1,8,2,2,1
335987,2,8,2,11,0
335987,1,8,3,3,1
335987,2,8,3,10,1
335987,1,8,4,2,1
335987,2,8,4,11,2
335987,1,8,5,3,1
335987,2,8,5,11,0
335987,1,8,6,2,1
335987,2,8,6,10,0
335987,1,9,1,2,0
335987,2,9,1,12,0
335987,1,9,2,2,0
335987,2,9,2,12,0
335987,1,9,3,2,0

2025-01-25 03:26:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:11 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:12 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out"
FROM IPL.IPL."WICKET_TAKEN"
WHERE "player_out" IS NOT NULL
LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,player_out
419167,1,10,3,154
419167,2,10,3,46
419167,2,12,4,8
419167,2,14,4,96
419167,1,18,4,208
419168,1,2,7,18
419168,1,5,5,21
419168,2,6,1,53
419168,2,6,5,178
419168,2,8,2,57
419168,1,14,2,20
419168,1,15,5,109
419168,2,16,2,56
419168,2,18,4,188
419168,2,20,2,131
419168,1,20,4,125
419169,1,1,4,53
419169,1,4,2,57
419169,1,7,1,56
419169,1,17,3,54
419169,1,19,3,131
419170,2,2,4,42
419170,1,8,2,185
419170,1,9,4,18
419170,1,12,2,23
419170,2,15,2,133
419170,2,15,5,79
419170,2,17,6,154
419170,1,18,1,20
419170,2,19,6,221
501203,1,1,6,185
501203,1,11,3,21
501203,2,16,2,9
501203,1,18,2,20
501203,2,20,2,63
501204,1,5,5,42
501204,1,6,3,26
501204,2,6,5,252
501204,1,11,1,257
501204,1,13,6,154
501204,1,18,3,258
501204,1,20,1,112
501204,1,20,3,94
501205,2,2,2,135
501205,1,9,6,55
501205,2,10,6,260
501205,1,12,3,2
501205,2,18,4,79
501205,1,19,4,259
501206,1,7,6,254
501206,1,15,2,183
501206,1,18,4,106
501207,2,1,1,74
501207,1,1,4,53
501207,1,2,3,100
501207,1,3,4,167
501207,1,4,3,88
501207,2,8,5,171
501207,1,9,3,48
501207,2,9,3,157
501207,1,18,1,67
501207,1,20,1,14
501208,2,9,6,26
501208,2,13,2,154
501208,1,13,3,9
501208,2,14,6,93
501208,2,17,4,258
501208,2,18,1,112
501208,1,20,6,31
501209,1,1,3,41
501209,1,5,5,254
501209,1,8,1,262
501209,1,8,3,183
501209,2,8,3,6
501209,2,11,5,266
501209,1,18,4,187
501209,1,19,7,54
501210,1,5,4,8
501211,1,1,2,21
501211,2,6,5,53
501211,2,14,6,264
501212,1,1,1,2
501212,1,3,5,64
501212,1,5,5,17
501212,2,8,4,74
501212,2,10,5,171
501212,2,12,2,27
501212,1,16,2,104
501212,1,17,1,35
501213,2,2,6,135
501213,1,3,5,42
501213,2,5,6,260
501213,2,7,4,110
501213,1,9,6,65
501213,2,12,1,79
501213,1,15,4,26
501213,2,17,5,203
501213,2,17,6,268
501213,2,20,1,269
501213,1,20,2,154

2025-01-25 03:26:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:13 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:14 - root - INFO - SQL:
SELECT b."match_id", b."striker", SUM(s."runs_scored") AS "individual_score"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id", b."striker"
LIMIT 100;
Results:
match_id,striker,individual_score
335987,2,158
335987,9,8
335987,14,18
335988,19,116
335988,26,54
335988,21,32
335988,29,3
335989,30,7
335989,42,52
335989,32,17
335989,38,14
335990,43,8
335990,6,32
335990,9,25
335990,11,39
335990,49,28
335990,50,2
335991,60,0
335991,61,1
335992,33,5
335992,31,7
335992,26,20
335993,54,14
335998,5,16
336000,41,6
336002,5,2
335987,15,3
335988,23,31
335989,36,2
335991,62,10
335991,4,38
335991,5,13
335992,24,26
335992,32,76
335992,65,4
335994,46,43
335994,49,17
335994,73,1
335994,23,2
335996,48,2
335998,1,12
336000,87,39
336000,29,10
336000,66,1
336001,21,28
336002,46,37
336002,82,2
335990,48,20
335992,35,36
335994,19,5
335995,232,16
335996,46,21
335997,14,34
335999,44,18
335999,85,0
336000,27,40
336003,8,1
336007,9,31
336007,7,5
336011,76,31
336013,114,27
336012,70,20
336020,42,3
336029,61,3
335991,3,0
335996,49,22
335991,54,14
335991,2,5
335991,1,14
335992,25,16
335992,64,2
335992,66,0
335993,57,66
335994,21,53
335995,53,13
335996,64,12
335996,73,2
335997,51,2
335997,9,11
335997,32,61
335997,11,4
335997,15,17
335998,4,0
335998,83,3
336001,11,4
336001,6,0
336003,42,50
336004,76,15
335991,57,0
335991,58,6
335993,59,8
335993,60,12
335993,61,1
335994,18,81
335995,75,4
335996,26,94
335996,67,0
335996,78,4
335997,16,3
335998,18,70

2025-01-25 03:26:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:15 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:15 - root - INFO - SQL:
SELECT DISTINCT b."match_id", b."innings_no", b."striker", b."non_striker"
FROM IPL.IPL."BALL_BY_BALL" b
LIMIT 100;
Results:
match_id,innings_no,striker,non_striker
335987,2,6,7
335987,1,2,1
335987,2,7,6
335987,2,8,7
335987,2,7,8
335987,1,1,2
335987,2,9,7
335987,2,7,9
335987,2,10,7
335987,2,7,10
335987,1,3,2
335987,2,11,10
335987,2,10,11
335987,1,2,3
335987,2,10,12
335987,2,10,13
335987,2,13,14
335987,2,14,13
335987,2,15,14
335987,2,14,15
335987,1,2,4
335987,2,14,16
335987,1,5,2
335988,2,24,25
335987,2,12,10
335987,1,4,2
335987,1,2,5
335988,1,18,19
335988,2,25,26
335988,2,26,25
335988,1,20,19
335988,1,19,20
335988,1,19,21
335988,2,27,26
335988,1,22,19
335988,1,23,19
335988,2,29,28
335989,2,40,41
335989,2,40,42
335989,1,32,31
335989,1,33,35
335989,1,36,35
335989,1,35,36
335989,1,37,39
335989,1,35,33
335990,1,43,44
335990,2,51,6
335990,1,44,46
335990,2,52,6
335990,2,9,52
335990,2,8,9
335990,2,11,9
335990,2,9,11
335990,1,48,49
335990,2,12,11
335991,2,5,4
335991,1,56,59
335991,2,4,63
335991,1,59,60
335992,2,32,69
335992,1,25,27
335993,1,55,54
335993,1,70,57
335993,1,60,61
335987,2,16,14
335988,1,17,18
335988,1,18,17
335988,2,25,24
335987,2,13,10
335988,1,21,19
335988,2,26,27
335988,1,19,22
335988,2,26,28
335988,1,19,23
335989,1,33,32
335989,1,33,34
335989,1,34,33
335989,1,35,37
335989,1,39,37
335990,2,6,52
335990,1,47,46
335989,1,30,31
335989,1,31,30
335989,2,41,40
335989,1,32,33
335989,1,38,37
335989,1,37,38
335990,2,6,51
335990,1,44,43
335990,1,46,44
335990,2,52,9
335990,2,9,8
335990,1,46,48
335990,1,49,48
335990,1,50,49
335990,2,11,12
335991,2,62,2
335991,1,54,53
335991,2,62,3
335991,2,3,62

2025-01-25 03:26:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:17 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:17 - root - INFO - SQL:
SELECT b."match_id", b."innings_no", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id", b."innings_no", b."striker", b."non_striker"
LIMIT 100;
Results:
match_id,innings_no,striker,non_striker,partnership_runs
335987,2,7,6,1
335987,2,7,8,0
335987,1,3,2,20
335987,2,10,11,4
335987,2,11,10,7
335987,1,4,2,12
335987,2,16,14,3
335987,1,2,4,45
335987,1,5,2,5
335988,2,25,24,31
335988,1,19,18,14
335988,1,19,23,42
335988,2,28,29,13
335989,1,30,31,7
335989,2,41,40,12
335989,2,42,40,52
335989,2,40,42,50
335989,1,35,37,13
335989,1,37,39,16
335990,1,43,44,8
335990,2,9,52,3
335991,1,58,56,6
335994,2,46,44,2
335991,1,60,59,0
335995,2,37,38,1
335996,1,26,66,3
335987,2,10,7,0
335987,1,2,3,27
335987,2,13,14,8
335987,1,2,5,45
335988,2,24,25,24
335988,1,23,19,31
335989,2,40,41,8
335989,1,33,35,4
335990,1,45,44,0
335990,1,46,47,30
335990,2,12,11,3
335991,1,54,53,14
335991,2,1,62,1
335992,2,32,34,32
335992,1,25,64,5
335992,1,29,65,0
335992,1,66,65,0
335993,1,57,232,33
335994,2,71,48,20
335995,1,70,55,10
335995,1,57,56,36
336001,1,20,19,65
335988,1,20,19,2
335988,2,29,28,3
335991,1,61,131,0
335996,2,79,49,13
335997,1,11,8,3
335997,1,15,14,15
335998,1,1,2,7
335998,1,5,63,12
336000,2,24,28,1
336000,2,27,28,17
336000,1,90,87,5
336003,1,40,41,26
335997,2,36,74,0
336001,1,17,19,14
336005,2,95,105,1
336008,1,64,24,0
335987,2,10,13,2
335991,1,232,56,10
335992,2,33,69,5
335987,2,10,12,0
335987,2,14,13,4
335988,2,25,26,40
335988,1,19,21,33
335988,2,26,28,27
335989,1,37,38,3
335989,1,39,37,3
335990,1,48,46,10
335990,1,49,48,17
335990,1,50,49,2
335991,2,2,62,5
335991,2,3,62,0
335991,1,56,232,2
335991,1,59,56,9
335991,2,4,63,18
335991,1,59,60,1
335991,1,59,61,4
335992,2,32,69,14
335992,1,27,29,51
335992,1,65,67,4
335993,1,60,61,11
335994,2,49,46,8
335994,2,49,71,9
335994,2,48,71,12
335995,1,232,56,16
335996,1,29,24,6
335997,1,52,9,32
335997,1,14,16,9
335997,1,15,81,2
335998,1,1,62,2
336000,2,26,28,4
336001,2,7,93,3
336001,2,12,14,1

2025-01-25 03:26:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:18 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:19 - root - INFO - SQL:
SELECT p."match_id", p."striker", p."non_striker", p."partnership_runs"
FROM (
  SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
  FROM IPL.IPL."BALL_BY_BALL" b
  JOIN IPL.IPL."BATSMAN_SCORED" s
    ON b."match_id" = s."match_id"
    AND b."innings_no" = s."innings_no"
    AND b."over_id" = s."over_id"
    AND b."ball_id" = s."ball_id"
  GROUP BY b."match_id", b."striker", b."non_striker"
) p
QUALIFY ROW_NUMBER() OVER (PARTITION BY p."match_id" ORDER BY p."partnership_runs" DESC) = 1
LIMIT 100;
Results:
match_id,striker,non_striker,partnership_runs
392191,29,161,32
734006,383,208,67
980914,96,40,52
548364,236,100,30
336016,31,74,68
392229,8,52,38
829790,162,8,80
548339,275,88,40
829782,339,85,61
598011,88,57,86
392240,133,85,36
419163,1,203,62
501254,19,185,46
501220,21,23,29
598018,216,9,47
829788,57,208,32
392230,35,168,36
734010,27,301,59
501236,192,32,25
501241,65,42,56
829724,187,42,57
980922,21,254,27
598073,8,162,35
501248,41,285,56
501271,162,8,44
548316,71,109,39
419121,18,21,52
598016,57,221,47
598010,104,85,25
598069,320,209,93
419116,41,110,45
419170,21,20,47
501238,41,199,30
829750,21,20,41
829786,40,46,31
501239,40,87,39
419124,9,96,43
980938,351,154,43
548353,26,10,82
336031,41,40,47
392215,74,183,77
598024,277,85,34
734036,19,383,44
419123,229,183,31
548385,185,19,47
829758,2,21,42
392208,104,176,51
548381,154,17,53
734002,46,40,46
548360,133,57,67
980952,221,57,51
598027,35,71,27
980930,46,40,53
598013,162,110,54
392197,154,133,39
336028,101,74,50
336039,57,55,57
548368,57,97,109
734012,62,345,54
392244,56,97,33
501221,26,65,49
419160,40,171,43
548376,53,148,34
548356,171,1,31
981000,110,8,59
501274,289,133,51
598023,46,254,22
548319,42,258,34
501205,2,55,41
548383,40,2,32
734030,383,19,55
829804,320,374,40
548358,40,2,56
335989,42,40,52
829728,334,46,55
336043,101,74,39
336005,101,31,35
598055,133,147,48
598038,147,88,46
336003,42,40,50
392237,6,9,38
548324,100,53,29
829716,20,2,53
501257,162,8,43
598061,280,17,27
419138,185,18,47
501266,19,62,20
598040,46,254,37
980962,306,79,45
598068,207,88,51
980950,350,154,59
548372,208,221,64
419112,31,212,86
733984,46,40,65
419146,229,32,36
501203,125,21,39
419149,1,162,49
548370,32,85,58
336044,21,17,55
336027,40,41,40

2025-01-25 03:26:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:21 - root - INFO - SQL:
SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs",
       SUM(CASE WHEN b."striker" = p."player_id" THEN s."runs_scored" ELSE 0 END) AS "player1_score",
       SUM(CASE WHEN b."non_striker" = p."player_id" THEN s."runs_scored" ELSE 0 END) AS "player2_score"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
JOIN IPL.IPL."PLAYER" p
  ON p."player_id" IN (b."striker", b."non_striker")
GROUP BY b."match_id", b."striker", b."non_striker", p."player_id"
LIMIT 100;
Results:
match_id,striker,non_striker,partnership_runs,player1_score,player2_score
335987,6,7,2,2,0
335987,2,1,41,41,0
335987,7,8,0,0,0
335987,9,7,8,0,8
335987,9,7,8,8,0
335987,7,9,5,0,5
335987,10,7,0,0,0
335987,10,7,0,0,0
335987,11,10,7,7,0
335987,10,11,4,0,4
335987,2,3,27,27,0
335987,10,12,0,0,0
335987,10,13,2,2,0
335987,13,14,8,0,8
335987,15,14,3,3,0
335987,2,4,45,45,0
335987,16,14,3,0,3
335987,14,16,6,6,0
335988,24,25,24,0,24
335988,19,18,14,14,0
335988,22,19,13,13,0
335988,26,28,27,0,27
335991,62,2,1,1,0
335991,1,62,1,0,1
335991,232,56,10,0,10
335992,69,32,11,11,0
335987,14,15,8,0,8
335987,2,5,45,45,0
335988,19,22,24,24,0
335988,22,19,13,0,13
335989,30,31,7,0,7
335989,41,40,12,12,0
335989,32,33,12,12,0
335989,33,32,1,1,0
335989,35,36,12,0,12
335989,35,37,13,0,13
335990,44,46,22,22,0
335990,12,11,3,3,0
335991,53,54,3,3,0
335991,62,2,1,0,1
335991,53,55,1,1,0
335992,31,69,7,0,7
335992,34,32,17,0,17
335992,64,25,2,0,2
335992,65,29,0,0,0
335992,66,65,0,0,0
335992,67,65,9,0,9
335993,53,54,8,8,0
335993,55,54,2,0,2
335990,46,48,15,15,0
335991,56,59,22,22,0
335991,59,56,9,0,9
335991,61,131,0,0,0
335992,69,32,11,0,11
335992,67,68,15,15,0
335993,54,55,12,0,12
335993,41,42,75,75,0
335994,21,18,53,53,0
335994,18,21,41,41,0
335994,48,50,20,0,20
335995,57,56,36,0,36
335996,24,29,2,0,2
335996,79,46,4,4,0
335996,46,79,0,0,0
335987,7,10,0,0,0
335988,19,20,3,3,0
335988,23,19,31,0,31
335989,33,35,4,4,0
335990,47,46,19,0,19
335990,47,46,19,19,0
335987,5,2,5,5,0
335988,20,19,2,2,0
335988,27,26,23,23,0
335988,29,28,3,3,0
335989,40,41,8,8,0
335989,33,32,1,0,1
335989,34,33,1,1,0
335989,39,37,3,0,3
335989,39,37,3,3,0
335990,44,43,1,0,1
335990,44,45,6,6,0
335990,44,45,6,0,6
335990,46,44,3,3,0
335990,46,48,15,0,15
335990,48,46,10,10,0
335990,48,49,10,10,0
335991,62,3,6,0,6
335991,3,62,0,0,0
335991,55,53,0,0,0
335991,63,4,4,4,0
335992,34,32,17,17,0
335992,25,64,5,0,5
335992,27,29,51,51,0
335992,65,67,4,0,4
335993,40,41,12,0,12
335993,42,41,25,25,0
335988,19,23,42,42,0
335989,33,34,4,0,4
335990,52,9,5,0,5
335990,9,8,6,0,6

2025-01-25 03:26:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:26:23 - root - INFO - SQL:
SELECT "player_id", "player_name", "batting_hand", "bowling_skill"
FROM IPL.IPL."PLAYER"
LIMIT 100;
Results:
player_id,player_name,batting_hand,bowling_skill
1,SC Ganguly,Left-hand bat,Right-arm medium
2,BB McCullum,Right-hand bat,Right-arm medium
3,RT Ponting,Right-hand bat,Right-arm medium
4,DJ Hussey,Right-hand bat,Right-arm offbreak
5,Mohammad Hafeez,Right-hand bat,Right-arm offbreak
6,R Dravid,Right-hand bat,Right-arm offbreak
7,W Jaffer,Right-hand bat,Right-arm offbreak
8,V Kohli,Right-hand bat,Right-arm medium
9,JH Kallis,Right-hand bat,Right-arm fast-medium
10,CL White,Right-hand bat,Legbreak googly
11,MV Boucher,Right-hand bat,Right-arm medium
12,B Akhil,Right-hand bat,Right-arm medium-fast
13,AA Noffke,Right-hand bat,Right-arm fast-medium
14,P Kumar,Right-hand bat,Right-arm medium
15,Z Khan,Right-hand bat,Left-arm fast-medium
16,SB Joshi,Left-hand bat,Slow left-arm orthodox
17,PA Patel,Left-hand bat,Right-arm medium
18,ML Hayden,Left-hand bat,Right-arm medium
19,MEK Hussey,Left-hand bat,Right-arm medium
20,MS Dhoni,Right-hand bat,Right-arm medium
21,SK Raina,Left-hand bat,Right-arm offbreak
22,JDP Oram,Left-hand bat,Right-arm fast-medium
23,S Badrinath,Right-hand bat,Right-arm offbreak
24,K Goel,Left-hand bat,Right-arm offbreak
25,JR Hopes,Right-hand bat,Right-arm medium
26,KC Sangakkara,Left-hand bat,Right-arm offbreak
27,Yuvraj Singh,Left-hand bat,Slow left-arm orthodox
28,SM Katich,Left-hand bat,Slow left-arm chinaman
29,IK Pathan,Left-hand bat,Left-arm medium-fast
30,T Kohli,Right-hand bat,Right-arm medium
31,YK Pathan,Right-hand bat,Right-arm offbreak
32,SR Watson,Right-hand bat,Right-arm fast-medium
33,M Kaif,Right-hand bat,Right-arm offbreak
34,DS Lehmann,Left-hand bat,Slow left-arm orthodox
36,M Rawat,Right-hand bat,Right-arm medium
37,D Salunkhe,Right-hand bat,Legbreak
38,SK Warne,Right-hand bat,Legbreak googly
39,SK Trivedi,Right-hand bat,Right-arm medium
40,G Gambhir,Left-hand bat,Legbreak
41,V Sehwag,Right-hand bat,Right-arm offbreak
42,S Dhawan,Left-hand bat,Right-arm offbreak
43,L Ronchi,Right-hand bat,Right-arm medium
44,ST Jayasuriya,Left-hand bat,Slow left-arm orthodox
45,DJ Thornely,Right-hand bat,Right-arm medium
46,RV Uthappa,Right-hand bat,Right-arm medium
47,PR Shah,Right-hand bat,Right-arm medium
48,AM Nayar,Left-hand bat,Right-arm medium
49,SM Pollock,Right-hand bat,Right-arm fast-medium
50,Harbhajan Singh,Right-hand bat,Right-arm offbreak
51,S Chanderpaul,Left-hand bat,Legbreak
52,LRPL Taylor,Right-hand bat,Right-arm offbreak
53,AC Gilchrist,Left-hand bat,Right-arm offbreak
54,Y Venugopal Rao,Right-hand bat,Right-arm offbreak
55,VVS Laxman,Right-hand bat,Right-arm offbreak
56,A Symonds,Right-hand bat,Right-arm offbreak
57,RG Sharma,Right-hand bat,Right-arm offbreak
58,SB Styris,Right-hand bat,Right-arm medium
59,SB Bangar,Right-hand bat,Right-arm medium-fast
60,WPUJC Vaas,Left-hand bat,Left-arm fast-medium
61,RP Singh,Right-hand bat,Left-arm fast-medium
62,WP Saha,Right-hand bat,Right-arm medium
63,LR Shukla,Right-hand bat,Right-arm medium
64,DPMD Jayawardene,Right-hand bat,Right-arm medium
65,S Sohal,Right-hand bat,Legbreak
66,B Lee,Right-hand bat,Right-arm fast
67,PP Chawla,Left-hand bat,Legbreak
68,WA Mota,Right-hand bat,Right-arm medium
69,Kamran Akmal,Right-hand bat,Right-arm medium
70,Shahid Afridi,Right-hand bat,Legbreak googly
71,DJ Bravo,Right-hand bat,Right-arm medium-fast
72,MA Khote,Right-hand bat,Right-arm medium
73,A Nehra,Right-hand bat,Left-arm medium-fast
74,GC Smith,Left-hand bat,Right-arm offbreak
75,Pankaj Singh,Right-hand bat,Right-arm medium-fast
76,RR Sarwan,Right-hand bat,Legbreak
77,S Sreesanth,Right-hand bat,Right-arm fast-medium
78,VRV Singh,Right-hand bat,Right-arm medium-fast
79,SS Tiwary,Left-hand bat,Right-arm medium
80,DS Kulkarni,Right-hand bat,Right-arm medium
81,R Vinay Kumar,Right-hand bat,Right-arm medium
82,AB Agarkar,Right-hand bat,Right-arm fast
83,M Kartik,Left-hand bat,Slow left-arm orthodox
84,I Sharma,Right-hand bat,Right-arm fast-medium
85,AM Rahane,Right-hand bat,Right-arm medium
86,Shoaib Malik,Right-hand bat,Right-arm offbreak
87,MK Tiwary,Right-hand bat,Legbreak googly
88,KD Karthik,Right-hand bat,Right-arm medium
89,R Bhatia,Right-hand bat,Right-arm medium-fast
90,MF Maharoof,Right-hand bat,Right-arm fast-medium
91,VY Mahesh,Right-hand bat,Right-arm medium-fast
92,TM Srivastava,Left-hand bat,Right-arm medium
93,B Chipli,Right-hand bat,Right-arm medium
94,DW Steyn,Right-hand bat,Right-arm fast
95,DB Das,Right-hand bat,Legbreak googly
96,MK Pandey,Right-hand bat,Right-arm medium
97,HH Gibbs,Right-hand bat,Right-arm bowler
98,DNT Zoysa,Left-hand bat,Left-arm fast-medium
99,D Kalyankrishna,Right-hand bat,Right-arm medium-fast
100,SE Marsh,Left-hand bat,Slow left-arm orthodox
101,SA Asnodkar,Right-hand bat,Right-arm offbreak

2025-01-25 03:26:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:26:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:26:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-25 03:26:24 - snowflake.connector.connection - INFO - closed
2025-01-25 03:26:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:27:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:27:55 - root - INFO - ```sql
SELECT
  p."match_id",
  p."player1_id",
  p."player1_score",
  p."player2_id",
  p."player2_score",
  p."partnership_runs"
FROM (
  SELECT
    b."match_id",
    b."striker" AS "player1_id",
    b."non_striker" AS "player2_id",
    SUM(s."runs_scored") AS "partnership_runs",
    SUM(s."runs_scored") AS "player1_score",
    0 AS "player2_score"
  FROM IPL.IPL."BALL_BY_BALL" b
  JOIN IPL.IPL."BATSMAN_SCORED" s
    ON b."match_id" = s."match_id"
    AND b."innings_no" = s."innings_no"
    AND b."over_id" = s."over_id"
    AND b."ball_id" = s."ball_id"
  GROUP BY b."match_id", b."striker", b."non_striker"
) p
ORDER BY p."partnership_runs" DESC
LIMIT 100;
```
2025-01-25 03:27:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:27:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:27:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:27:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:27:56 - snowflake.connector.connection - INFO - closed
2025-01-25 03:27:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:28:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:28:56 - root - INFO - SQL:
SELECT
  p."match_id",
  p."player1_id",
  p."player1_score",
  p."player2_id",
  p."player2_score",
  p."partnership_runs"
FROM (
  SELECT
    b."match_id",
    b."striker" AS "player1_id",
    b."non_striker" AS "player2_id",
    SUM(s."runs_scored") AS "partnership_runs",
    SUM(s."runs_scored") AS "player1_score",
    0 AS "player2_score"
  FROM IPL.IPL."BALL_BY_BALL" b
  JOIN IPL.IPL."BATSMAN_SCORED" s
    ON b."match_id" = s."match_id"
    AND b."innings_no" = s."innings_no"
    AND b."over_id" = s."over_id"
    AND b."ball_id" = s."ball_id"
  GROUP BY b."match_id", b."striker", b."non_striker"
) p
ORDER BY p."partnership_runs" DESC
LIMIT 100;
Results:
match_id,player1_id,player1_score,player2_id,player2_score,partnership_runs
829800,110,133,8,0,133
980992,110,129,8,0,129
548377,162,127,8,0,127
598032,162,127,135,0,127
548334,187,109,183,0,109
335999,53,109,55,0,109
548368,57,109,97,0,109
501265,53,105,100,0,105
980992,8,97,110,0,97
598069,320,93,209,0,93
829748,187,91,42,0,91
734034,187,90,42,0,90
598029,41,90,64,0,90
501268,32,89,6,0,89
729296,305,89,203,0,89
501276,185,89,19,0,89
548386,214,88,9,0,88
548382,147,87,133,0,87
598011,88,86,57,0,86
598012,19,86,185,0,86
419112,31,86,212,0,86
419142,185,85,109,0,85
501227,162,84,135,0,84
733992,305,84,320,0,84
501249,162,83,8,0,83
419148,224,83,183,0,83
980936,110,83,8,0,83
734004,27,83,110,0,83
598075,21,82,19,0,82
829752,393,82,154,0,82
548353,26,82,10,0,82
980912,110,82,8,0,82
598030,320,80,236,0,80
336033,100,80,139,0,80
548342,96,80,46,0,80
336024,100,80,25,0,80
829790,162,80,8,0,80
501265,100,79,53,0,79
598071,321,79,100,0,79
336038,74,79,101,0,79
729288,305,78,320,0,78
419130,21,78,23,0,78
419158,21,78,185,0,78
501228,41,77,187,0,77
392215,74,77,183,0,77
734054,62,77,345,0,77
501214,9,76,40,0,76
981024,162,76,8,0,76
829800,8,76,110,0,76
980958,187,76,396,0,76
829710,57,75,372,0,75
419117,214,75,161,0,75
501214,40,75,9,0,75
598056,21,75,19,0,75
335993,41,75,42,0,75
980934,187,74,42,0,74
598050,162,74,8,0,74
419136,187,74,241,0,74
548334,42,74,10,0,74
501211,185,74,23,0,74
980926,355,74,339,0,74
548336,162,73,110,0,73
335995,56,73,57,0,73
829740,32,73,85,0,73
548377,8,73,162,0,73
981004,162,73,8,0,73
548347,41,72,64,0,72
501245,19,72,21,0,72
336025,40,72,42,0,72
548355,162,71,8,0,71
980912,8,71,110,0,71
336006,41,71,40,0,71
419144,162,71,87,0,71
829740,85,70,32,0,70
829726,221,70,372,0,70
734052,41,69,345,0,69
980966,420,69,355,0,69
501259,88,69,100,0,69
729306,254,69,187,0,69
981004,8,69,162,0,69
980946,17,68,208,0,68
336016,31,68,74,0,68
392202,133,68,44,0,68
548360,133,67,57,0,67
829828,383,67,57,0,67
980942,8,67,354,0,67
598020,254,67,46,0,67
729288,2,67,147,0,67
734006,383,67,208,0,67
980980,276,66,31,0,66
598065,221,66,57,0,66
419118,20,66,23,0,66
829738,334,66,31,0,66
392213,46,66,9,0,66
829752,154,66,393,0,66
336001,20,65,19,0,65
733984,46,65,40,0,65
419111,191,65,204,0,65
392194,110,65,87,0,65
392190,18,65,17,0,65

2025-01-25 03:28:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:28:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:28:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:28:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:28:58 - snowflake.connector.connection - INFO - closed
2025-01-25 03:28:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:28:58 - root - INFO - SQL:
SELECT e."match_id", e."innings_no", e."over_id", e."ball_id", e."extra_type", e."extra_runs"
FROM IPL.IPL."EXTRA_RUNS" e
LIMIT 100
Results:
match_id,innings_no,over_id,ball_id,extra_type,extra_runs
501229,1,16,3,legbyes,1
501229,2,18,1,legbyes,1
501229,2,18,6,legbyes,4
392239,2,18,6,legbyes,1
501229,1,20,3,legbyes,1
501230,1,1,4,legbyes,4
829714,1,18,4,legbyes,1
829816,2,3,3,legbyes,1
501230,2,3,4,legbyes,1
829816,1,2,3,legbyes,4
980962,2,18,2,legbyes,1
829714,2,18,1,legbyes,1
829714,1,9,6,legbyes,1
501231,2,1,1,legbyes,1
335994,2,4,6,legbyes,1
501231,2,2,6,legbyes,1
829714,1,9,3,legbyes,2
980962,2,17,5,legbyes,2
336045,2,3,5,legbyes,4
392240,1,3,7,legbyes,1
336045,1,4,1,legbyes,1
829714,1,3,6,legbyes,1
501231,2,20,5,legbyes,1
501232,2,1,1,legbyes,1
501232,1,1,2,legbyes,1
336045,1,8,3,legbyes,1
336017,2,4,4,legbyes,1
829814,1,18,1,legbyes,1
501232,2,4,3,legbyes,1
501232,1,4,6,legbyes,1
501232,2,7,2,legbyes,1
829714,1,1,1,legbyes,4
336045,2,9,3,legbyes,1
501232,2,14,3,legbyes,1
501232,1,14,7,legbyes,1
829712,1,18,5,legbyes,1
829712,1,3,1,legbyes,4
829712,1,2,6,legbyes,1
392240,1,10,2,legbyes,2
829712,1,1,3,legbyes,4
392240,1,11,2,legbyes,1
335991,1,2,1,legbyes,1
980962,2,14,1,legbyes,1
335988,2,17,1,legbyes,1
392240,1,13,3,legbyes,1
829814,1,14,3,legbyes,1
501232,1,20,7,legbyes,1
829812,1,4,5,legbyes,1
392240,1,15,3,legbyes,1
980960,1,7,5,legbyes,1
829710,2,4,2,legbyes,1
501233,2,6,1,legbyes,1
501233,2,6,3,legbyes,1
981018,2,2,1,legbyes,1
336045,2,18,8,legbyes,1
501233,1,13,1,legbyes,1
829812,1,1,4,legbyes,1
392241,2,3,6,legbyes,1
392241,2,4,6,legbyes,1
981018,1,1,3,legbyes,1
829810,1,12,6,legbyes,1
501234,2,2,1,legbyes,1
980958,1,3,2,legbyes,1
829710,1,1,5,legbyes,1
829710,2,1,3,legbyes,1
392241,2,8,3,legbyes,1
980956,1,20,3,legbyes,1
336017,2,7,5,legbyes,1
392186,1,2,1,legbyes,1
501234,2,14,5,legbyes,2
501234,1,16,2,legbyes,1
336001,2,20,3,legbyes,1
734054,1,19,6,legbyes,1
392186,2,6,1,legbyes,4
392241,1,19,4,legbyes,1
392186,2,6,2,legbyes,1
980986,1,18,2,legbyes,1
392186,2,10,3,legbyes,1
501235,1,12,3,legbyes,1
734054,1,17,6,legbyes,1
829808,1,9,2,legbyes,1
335994,1,9,3,legbyes,1
829808,2,8,2,legbyes,2
829808,2,7,3,legbyes,1
829808,2,7,1,legbyes,1
734054,1,13,2,legbyes,1
501235,1,18,4,legbyes,1
980956,1,16,2,legbyes,1
335994,1,10,2,legbyes,1
335991,2,2,5,legbyes,4
501236,1,13,2,legbyes,1
392187,1,2,2,legbyes,1
501236,1,13,5,legbyes,1
501236,1,15,1,legbyes,1
829808,2,3,1,legbyes,1
501236,2,17,2,legbyes,1
392243,1,4,4,legbyes,1
829806,1,19,6,legbyes,1
392243,2,10,1,legbyes,1
501237,2,5,6,legbyes,1

2025-01-25 03:28:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:28:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:28:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:29:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 03:29:00 - snowflake.connector.connection - INFO - closed
2025-01-25 03:29:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:29:00 - root - INFO - SQL:
SELECT s."match_id", SUM(s."runs_scored") AS "total_runs"
FROM IPL.IPL."BATSMAN_SCORED" s
GROUP BY s."match_id"
LIMIT 100
Results:
match_id,total_runs
335987,268
335988,430
335989,240
335990,315
335991,184
335992,318
335993,268
335994,379
335995,418
335997,264
335999,289
336000,300
336001,332
336002,247
336003,356
336007,320
336010,191
336011,226
336013,188
336014,352
336015,242
336016,264
336017,224
336020,287
336026,117
336031,291
336032,285
336034,222
336041,262
392188,149
392189,198
392196,320
392199,284
392217,259
392220,215
392230,263
419118,262
419129,319
419132,303
419133,325
501214,296
335996,284
336006,328
336033,342
336043,268
392204,264
392205,207
392210,269
392219,347
392227,217
392233,312
419130,333
419148,292
501225,323
501239,221
501275,309
548349,323
548359,293
734040,303
829756,279
419150,347
501212,277
501242,278
548358,264
336008,326
336024,392
336028,297
336038,396
336039,298
336044,220
392193,328
392194,353
392213,285
392222,264
392238,193
392244,262
419121,355
419153,300
419155,291
501217,312
501236,180
548355,311
548362,277
335998,273
336004,321
336009,281
336018,326
336019,358
336023,286
336029,303
336036,340
336037,343
336045,306
392186,299
392187,178
392190,248
392191,221
392197,297
392201,317
392207,277

2025-01-25 03:29:00 - root - INFO - itercount: 0
2025-01-25 03:29:00 - root - INFO - Database Name: IPL
Schema Name: IPL
DDL describes table information.
,0
table_name,PLAYER_MATCH
description,
DDL,"create or replace TABLE PLAYER_MATCH (
	""match_id"" NUMBER(38,0),
	""player_id"" NUMBER(38,0),
	""role"" VARCHAR(16777216),
	""team_id"" NUMBER(38,0)
);"

,1
table_name,PLAYER
description,
DDL,"create or replace TABLE PLAYER (
	""player_id"" NUMBER(38,0),
	""player_name"" VARCHAR(16777216),
	""dob"" VARCHAR(16777216),
	""batting_hand"" VARCHAR(16777216),
	""bowling_skill"" VARCHAR(16777216),
	""country_name"" VARCHAR(16777216)
);"

,2
table_name,BATSMAN_SCORED
description,
DDL,"create or replace TABLE BATSMAN_SCORED (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""runs_scored"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,3
table_name,WICKET_TAKEN
description,
DDL,"create or replace TABLE WICKET_TAKEN (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""player_out"" NUMBER(38,0),
	""kind_out"" VARCHAR(16777216),
	""innings_no"" NUMBER(38,0)
);"

,4
table_name,BALL_BY_BALL
description,
DDL,"create or replace TABLE BALL_BY_BALL (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0),
	""team_batting"" NUMBER(38,0),
	""team_bowling"" NUMBER(38,0),
	""striker_batting_position"" NUMBER(38,0),
	""striker"" NUMBER(38,0),
	""non_striker"" NUMBER(38,0),
	""bowler"" NUMBER(38,0)
);"

,5
table_name,EXTRA_RUNS
description,
DDL,"create or replace TABLE EXTRA_RUNS (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""extra_type"" VARCHAR(16777216),
	""extra_runs"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,6
table_name,MATCH
description,
DDL,"create or replace TABLE MATCH (
	""match_id"" NUMBER(38,0),
	""team_1"" NUMBER(38,0),
	""team_2"" NUMBER(38,0),
	""match_date"" VARCHAR(16777216),
	""season_id"" NUMBER(38,0),
	""venue"" VARCHAR(16777216),
	""toss_winner"" NUMBER(38,0),
	""toss_decision"" VARCHAR(16777216),
	""win_type"" VARCHAR(16777216),
	""win_margin"" NUMBER(38,0),
	""outcome_type"" VARCHAR(16777216),
	""match_winner"" NUMBER(38,0),
	""man_of_the_match"" NUMBER(38,0)
);"

,7
table_name,TEAM
description,
DDL,"create or replace TABLE TEAM (
	""team_id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}
Begin Exploring Related Columns
To solve the task, we need to identify partnerships (pairs of batsmen) and calculate the runs scored during each partnership in each match. This involves the following tables and columns:

**Relevant Tables and Columns:**

1. **BALL_BY_BALL**:
   - `"match_id"`: Identifies the match.
   - `"innings_no"`: Distinguishes the innings in a match.
   - `"over_id"` and `"ball_id"`: Used to sequence the deliveries.
   - `"striker"`: Player ID of the batsman facing the ball.
   - `"non_striker"`: Player ID of the batsman at the other end.
   - `"team_batting"`: ID of the batting team.
   - `"team_bowling"`: ID of the bowling team.

2. **BATSMAN_SCORED**:
   - `"match_id"`: To join with `BALL_BY_BALL`.
   - `"innings_no"`: To join with `BALL_BY_BALL`.
   - `"over_id"` and `"ball_id"`: To join with `BALL_BY_BALL`.
   - `"runs_scored"`: Runs scored by the striker on that delivery.

3. **WICKET_TAKEN**:
   - `"match_id"`: To join with `BALL_BY_BALL`.
   - `"innings_no"`: To join with `BALL_BY_BALL`.
   - `"over_id"` and `"ball_id"`: To identify when a wicket falls.
   - `"player_out"`: Player ID of the batsman who got out.
   - `"kind_out"`: The mode of dismissal.

4. **PLAYER**:
   - `"player_id"`: Unique identifier for each player.
   - `"player_name"`: Name of the player.

**Potential Usage of Columns:**

- **Identifying Partnerships**: Use `"striker"` and `"non_striker"` from `BALL_BY_BALL` to identify pairs of batsmen on the field during each delivery.
- **Calculating Individual Scores**: Sum `"runs_scored"` from `BATSMAN_SCORED` grouped by `"striker"` to get individual scores.
- **Determining Partnership Boundaries**: Use `WICKET_TAKEN` to know when a wicket falls and a partnership ends.
- **Matching Deliveries**: Use `"match_id"`, `"innings_no"`, `"over_id"`, and `"ball_id"` to join tables accurately.
- **Ordering Players**: Use `"player_id"` to order players when their individual scores are equal.

**Conditions That May Be Used:**

- **Joins**: Inner and left joins on `"match_id"`, `"innings_no"`, `"over_id"`, and `"ball_id"` across tables.
- **Grouping**: Group by `"match_id"`, `"innings_no"`, `"striker"`, and `"non_striker"` to calculate partnership runs.
- **Filtering**: Use conditions to filter specific matches, innings, or players if needed.
- **Ordering**: Order results to identify top partnerships and apply the player ordering rules.

**SQL Queries to Explore the Data:**

1. **List Matches and Their Dates**:

```sql
SELECT "match_id", "team_1", "team_2", "match_date"
FROM IPL.IPL."MATCH"
LIMIT 100;
```

2. **View Deliveries in BALL_BY_BALL Table**:

```sql
SELECT "match_id", "innings_no", "over_id", "ball_id", "striker", "non_striker"
FROM IPL.IPL."BALL_BY_BALL"
LIMIT 100;
```

3. **View Runs Scored on Each Delivery**:

```sql
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
FROM IPL.IPL."BATSMAN_SCORED"
LIMIT 100;
```

4. **List Wickets Taken in Matches**:

```sql
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
FROM IPL.IPL."WICKET_TAKEN"
LIMIT 100;
```

5. **Join BALL_BY_BALL and BATSMAN_SCORED to Get Runs per Delivery**:

```sql
SELECT b."match_id", b."innings_no", b."over_id", b."ball_id", b."striker", s."runs_scored"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
LIMIT 100;
```

6. **Identify When Wickets Fall**:

```sql
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out"
FROM IPL.IPL."WICKET_TAKEN"
WHERE "player_out" IS NOT NULL
LIMIT 100;
```

7. **Get Individual Scores of Players in a Match**:

```sql
SELECT b."match_id", b."striker", SUM(s."runs_scored") AS "individual_score"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id", b."striker"
LIMIT 100;
```

8. **List All Partnerships in a Match**:

```sql
SELECT DISTINCT b."match_id", b."innings_no", b."striker", b."non_striker"
FROM IPL.IPL."BALL_BY_BALL" b
LIMIT 100;
```

9. **Calculate Partnership Runs Between Two Batsmen**:

```sql
SELECT b."match_id", b."innings_no", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id", b."innings_no", b."striker", b."non_striker"
LIMIT 100;
```

10. **Find Highest Partnership Runs for Each Match**:

```sql
SELECT p."match_id", p."striker", p."non_striker", p."partnership_runs"
FROM (
  SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
  FROM IPL.IPL."BALL_BY_BALL" b
  JOIN IPL.IPL."BATSMAN_SCORED" s
    ON b."match_id" = s."match_id"
    AND b."innings_no" = s."innings_no"
    AND b."over_id" = s."over_id"
    AND b."ball_id" = s."ball_id"
  GROUP BY b."match_id", b."striker", b."non_striker"
) p
QUALIFY ROW_NUMBER() OVER (PARTITION BY p."match_id" ORDER BY p."partnership_runs" DESC) = 1
LIMIT 100;
```

11. **Order Players Based on Individual Scores and IDs**:

```sql
SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs",
       SUM(CASE WHEN b."striker" = p."player_id" THEN s."runs_scored" ELSE 0 END) AS "player1_score",
       SUM(CASE WHEN b."non_striker" = p."player_id" THEN s."runs_scored" ELSE 0 END) AS "player2_score"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
JOIN IPL.IPL."PLAYER" p
  ON p."player_id" IN (b."striker", b."non_striker")
GROUP BY b."match_id", b."striker", b."non_striker", p."player_id"
LIMIT 100;
```

12. **Explore Player Information**:

```sql
SELECT "player_id", "player_name", "batting_hand", "bowling_skill"
FROM IPL.IPL."PLAYER"
LIMIT 100;
```

13. **Check for Duplicate Deliveries in a Match**:

```sql
SELECT "match_id", "innings_no", "over_id", "ball_id", COUNT(*) AS "delivery_count"
FROM IPL.IPL."BALL_BY_BALL"
GROUP BY "match_id", "innings_no", "over_id", "ball_id"
HAVING COUNT(*) > 1
LIMIT 100;
```

14. **List All Deliveries Where Extras Were Given**:

```sql
SELECT e."match_id", e."innings_no", e."over_id", e."ball_id", e."extra_type", e."extra_runs"
FROM IPL.IPL."EXTRA_RUNS" e
LIMIT 100;
```

15. **Find Total Runs Scored in Each Match**:

```sql
SELECT b."match_id", SUM(s."runs_scored") AS "total_runs"
FROM IPL.IPL."BATSMAN_SCORED" s
JOIN IPL.IPL."BALL_BY_BALL" b
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id"
LIMIT 100;
```

These queries help in understanding the structure and content of the data, which is essential for calculating partnership runs and identifying the players involved. By exploring the tables and their relationships, we can formulate an approach to determine the highest partnership runs for each match and retrieve the required player information.Query:
SELECT "match_id", "team_1", "team_2", "match_date"
FROM IPL.IPL."MATCH"
LIMIT 100;
Answer:
match_id,team_1,team_2,match_date
335987,2,1,2008-04-18
335988,4,3,2008-04-19
335989,6,5,2008-04-19
335990,7,2,2008-04-20
335991,1,8,2008-04-20
335992,5,4,2008-04-21
335993,8,6,2008-04-22
335994,3,7,2008-04-23
335995,8,5,2008-04-24
335996,4,7,2008-04-25
335997,2,5,2008-04-26
335998,3,1,2008-04-26
335999,7,8,2008-04-27
336000,4,6,2008-04-27
336001,2,3,2008-04-28
336002,1,7,2008-04-29
336003,6,2,2008-04-30
336004,8,4,2008-05-01
336005,5,1,2008-05-01
336006,3,6,2008-05-02
336007,8,2,2008-05-25
336008,4,1,2008-05-03
336009,7,6,2008-05-04
336010,5,3,2008-05-04
336011,2,4,2008-05-05
336012,3,8,2008-05-06
336013,7,5,2008-05-07
336014,6,3,2008-05-08
336015,1,2,2008-05-08
336016,5,8,2008-05-09
336017,2,7,2008-05-28
336018,3,4,2008-05-10
336019,8,1,2008-05-11
336020,5,6,2008-05-11
336021,4,2,2008-05-12
336022,1,6,2008-05-13
336023,7,3,2008-05-14
336024,4,5,2008-05-28
336025,6,8,2008-05-15
336026,7,1,2008-05-16
336027,6,4,2008-05-17
336028,5,2,2008-05-17
336029,8,7,2008-05-18
336030,1,3,2008-05-18
336031,2,6,2008-05-19
336032,1,5,2008-05-20
336033,7,4,2008-05-21
336034,3,2,2008-05-21
336036,4,8,2008-05-23
336037,6,7,2008-05-24
336038,3,5,2008-05-24
336039,2,8,2008-05-03
336040,1,4,2008-05-25
336041,5,7,2008-05-26
336042,8,3,2008-05-27
336043,6,5,2008-05-30
336044,3,4,2008-05-31
336045,3,5,2008-06-01
392186,3,7,2009-04-18
392187,2,5,2009-04-18
392188,6,4,2009-04-19
392189,8,1,2009-04-19
392190,2,3,2009-04-20
392191,4,1,2009-04-21
392193,2,8,2009-04-22
392194,3,6,2009-04-23
392196,2,4,2009-04-24
392197,8,7,2009-04-25
392199,2,6,2009-04-26
392200,4,5,2009-04-26
392201,3,8,2009-04-27
392202,1,7,2009-04-27
392203,6,5,2009-04-28
392204,2,1,2009-04-29
392205,4,7,2009-04-29
392206,8,6,2009-04-30
392207,3,5,2009-04-30
392208,1,7,2009-05-01
392209,2,4,2009-05-01
392210,8,5,2009-05-02
392211,3,6,2009-05-02
392212,4,1,2009-05-03
392213,2,7,2009-05-03
392214,3,8,2009-05-04
392215,4,5,2009-05-05
392216,6,1,2009-05-05
392217,8,7,2009-05-06
392218,2,5,2009-05-07
392219,3,4,2009-05-07
392220,6,7,2009-05-08
392221,8,4,2009-05-09
392222,3,5,2009-05-09
392223,2,7,2009-05-10
392224,6,1,2009-05-10
392225,8,5,2009-05-11
392226,2,1,2009-05-12
392227,4,7,2009-05-12
392228,8,6,2009-05-13
392229,2,3,2009-05-14
392230,7,5,2009-05-14
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "striker", "non_striker"
FROM IPL.IPL."BALL_BY_BALL"
LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,striker,non_striker
335987,2,1,1,6,7
335987,1,1,2,2,1
335987,2,1,2,7,6
335987,1,1,3,2,1
335987,2,1,3,7,6
335987,1,1,4,2,1
335987,2,1,4,7,6
335987,1,1,5,2,1
335987,2,1,5,6,7
335987,1,1,6,2,1
335987,2,1,6,7,6
335987,1,1,7,2,1
335987,2,1,7,7,6
335987,1,2,1,2,1
335987,2,2,1,6,7
335987,1,2,2,2,1
335987,2,2,2,8,7
335987,1,2,3,2,1
335987,2,2,3,8,7
335987,1,2,4,2,1
335987,2,2,4,8,7
335987,1,2,5,2,1
335987,2,2,5,7,8
335987,1,2,6,2,1
335987,2,2,6,7,8
335987,1,3,1,1,2
335987,2,3,1,8,7
335987,1,3,2,1,2
335987,2,3,2,8,7
335987,1,3,3,1,2
335987,2,3,3,9,7
335987,1,3,4,2,1
335987,2,3,4,7,9
335987,1,3,5,2,1
335987,2,3,5,7,9
335987,1,3,6,1,2
335987,2,3,6,7,9
335987,2,3,7,7,9
335987,1,4,1,2,1
335987,2,4,1,7,9
335987,1,4,2,2,1
335987,2,4,2,7,9
335987,1,4,3,2,1
335987,2,4,3,9,7
335987,1,4,4,1,2
335987,2,4,4,9,7
335987,1,4,5,1,2
335987,2,4,5,7,9
335987,1,4,6,1,2
335987,2,4,6,7,9
335987,1,4,7,2,1
335987,1,5,1,1,2
335987,2,5,1,9,7
335987,1,5,2,1,2
335987,2,5,2,7,9
335987,1,5,3,2,1
335987,2,5,3,9,7
335987,1,5,4,2,1
335987,2,5,4,9,7
335987,1,5,5,2,1
335987,2,5,5,9,7
335987,1,5,6,1,2
335987,2,5,6,10,7
335987,1,6,1,2,1
335987,2,6,1,7,10
335987,1,6,2,1,2
335987,2,6,2,7,10
335987,1,6,3,3,2
335987,2,6,3,11,10
335987,1,6,4,3,2
335987,2,6,4,11,10
335987,1,6,5,3,2
335987,2,6,5,10,11
335987,1,6,6,3,2
335987,2,6,6,11,10
335987,1,7,1,2,3
335987,2,7,1,10,11
335987,1,7,2,3,2
335987,2,7,2,10,11
335987,1,7,3,2,3
335987,2,7,3,10,11
335987,1,7,4,3,2
335987,2,7,4,11,10
335987,1,7,5,3,2
335987,2,7,5,11,10
335987,1,7,6,2,3
335987,2,7,6,11,10
335987,2,7,7,11,10
335987,2,7,8,11,10
335987,1,8,1,2,3
335987,2,8,1,10,11
335987,1,8,2,2,3
335987,2,8,2,11,10
335987,1,8,3,3,2
335987,2,8,3,10,11
335987,1,8,4,2,3
335987,2,8,4,11,10
335987,1,8,5,3,2
335987,2,8,5,11,10
335987,1,8,6,2,3
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
FROM IPL.IPL."BATSMAN_SCORED"
LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
FROM IPL.IPL."WICKET_TAKEN"
LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,player_out,kind_out
419167,1,10,3,154,caught
419167,2,10,3,46,caught
419167,2,12,4,8,caught
419167,2,14,4,96,caught
419167,1,18,4,208,caught
419168,1,2,7,18,caught
419168,1,5,5,21,caught
419168,2,6,1,53,caught
419168,2,6,5,178,caught
419168,2,8,2,57,caught
419168,1,14,2,20,caught
419168,1,15,5,109,caught
419168,2,16,2,56,caught
419168,2,18,4,188,caught
419168,2,20,2,131,caught
419168,1,20,4,125,caught
419169,1,1,4,53,caught
419169,1,4,2,57,caught
419169,1,7,1,56,caught
419169,1,17,3,54,caught
419169,1,19,3,131,caught
419170,2,2,4,42,caught
419170,1,8,2,185,caught
419170,1,9,4,18,caught
419170,1,12,2,23,caught
419170,2,15,2,133,caught
419170,2,15,5,79,caught
419170,2,17,6,154,caught
419170,1,18,1,20,caught
419170,2,19,6,221,caught
501203,1,1,6,185,caught
501203,1,11,3,21,caught
501203,2,16,2,9,caught
501203,1,18,2,20,caught
501203,2,20,2,63,caught
501204,1,5,5,42,caught
501204,1,6,3,26,caught
501204,2,6,5,252,caught
501204,1,11,1,257,caught
501204,1,13,6,154,caught
501204,1,18,3,258,caught
501204,1,20,1,112,caught
501204,1,20,3,94,caught
501205,2,2,2,135,caught
501205,1,9,6,55,caught
501205,2,10,6,260,caught
501205,1,12,3,2,caught
501205,2,18,4,79,caught
501205,1,19,4,259,caught
501206,1,7,6,254,caught
501206,1,15,2,183,caught
501206,1,18,4,106,caught
501207,2,1,1,74,caught
501207,1,1,4,53,caught
501207,1,2,3,100,caught
501207,1,3,4,167,caught
501207,1,4,3,88,caught
501207,2,8,5,171,caught
501207,1,9,3,48,caught
501207,2,9,3,157,caught
501207,1,18,1,67,caught
501207,1,20,1,14,caught
501208,2,9,6,26,caught
501208,2,13,2,154,caught
501208,1,13,3,9,caught
501208,2,14,6,93,caught
501208,2,17,4,258,caught
501208,2,18,1,112,caught
501208,1,20,6,31,caught
501209,1,1,3,41,caught
501209,1,5,5,254,caught
501209,1,8,1,262,caught
501209,1,8,3,183,caught
501209,2,8,3,6,caught
501209,2,11,5,266,caught
501209,1,18,4,187,caught
501209,1,19,7,54,caught
501210,1,5,4,8,caught
501211,1,1,2,21,caught
501211,2,6,5,53,caught
501211,2,14,6,264,caught
501212,1,1,1,2,caught
501212,1,3,5,64,caught
501212,1,5,5,17,caught
501212,2,8,4,74,caught
501212,2,10,5,171,caught
501212,2,12,2,27,caught
501212,1,16,2,104,caught
501212,1,17,1,35,caught
501213,2,2,6,135,caught
501213,1,3,5,42,caught
501213,2,5,6,260,caught
501213,2,7,4,110,caught
501213,1,9,6,65,caught
501213,2,12,1,79,caught
501213,1,15,4,26,caught
501213,2,17,5,203,caught
501213,2,17,6,268,caught
501213,2,20,1,269,caught
501213,1,20,2,154,caught
Query:
SELECT b."match_id", b."innings_no", b."over_id", b."ball_id", b."striker", s."runs_scored"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,striker,runs_scored
335987,2,1,1,6,1
335987,1,1,2,2,0
335987,2,1,3,7,0
335987,1,1,4,2,0
335987,2,1,4,7,1
335987,1,1,5,2,0
335987,2,1,5,6,1
335987,1,1,6,2,0
335987,2,1,6,7,0
335987,1,1,7,2,0
335987,2,1,7,7,0
335987,1,2,1,2,0
335987,2,2,1,6,0
335987,1,2,2,2,4
335987,2,2,2,8,0
335987,1,2,3,2,4
335987,2,2,3,8,0
335987,1,2,4,2,6
335987,2,2,4,8,1
335987,1,2,5,2,4
335987,2,2,5,7,0
335987,1,2,6,2,0
335987,2,2,6,7,0
335987,1,3,1,1,0
335987,2,3,1,8,0
335987,1,3,2,1,0
335987,2,3,2,8,0
335987,1,3,3,1,0
335987,2,3,3,9,1
335987,1,3,4,2,4
335987,2,3,4,7,0
335987,1,3,5,2,1
335987,1,3,6,1,0
335987,2,3,6,7,0
335987,2,3,7,7,1
335987,2,4,1,7,2
335987,1,4,2,2,6
335987,2,4,2,7,1
335987,1,4,3,2,0
335987,2,4,3,9,0
335987,1,4,4,1,4
335987,2,4,4,9,0
335987,1,4,5,1,0
335987,2,4,5,7,0
335987,1,4,6,1,1
335987,2,4,6,7,0
335987,1,4,7,2,6
335987,1,5,1,1,4
335987,2,5,1,9,1
335987,1,5,2,1,1
335987,2,5,2,7,1
335987,1,5,3,2,4
335987,2,5,3,9,0
335987,1,5,4,2,0
335987,2,5,4,9,6
335987,1,5,5,2,1
335987,2,5,5,9,0
335987,1,5,6,1,0
335987,2,5,6,10,0
335987,1,6,1,2,1
335987,2,6,1,7,0
335987,1,6,2,1,0
335987,2,6,2,7,0
335987,1,6,3,3,0
335987,2,6,3,11,0
335987,1,6,4,3,0
335987,2,6,4,11,1
335987,1,6,5,3,0
335987,2,6,5,10,1
335987,1,6,6,3,0
335987,2,6,6,11,0
335987,1,7,1,2,1
335987,2,7,1,10,0
335987,1,7,2,3,1
335987,2,7,2,10,0
335987,1,7,3,2,1
335987,2,7,3,10,1
335987,1,7,4,3,2
335987,1,7,5,3,1
335987,1,7,6,2,1
335987,2,7,6,11,0
335987,2,7,7,11,0
335987,2,7,8,11,4
335987,1,8,1,2,0
335987,2,8,1,10,1
335987,1,8,2,2,1
335987,2,8,2,11,0
335987,1,8,3,3,1
335987,2,8,3,10,1
335987,1,8,4,2,1
335987,2,8,4,11,2
335987,1,8,5,3,1
335987,2,8,5,11,0
335987,1,8,6,2,1
335987,2,8,6,10,0
335987,1,9,1,2,0
335987,2,9,1,12,0
335987,1,9,2,2,0
335987,2,9,2,12,0
335987,1,9,3,2,0
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out"
FROM IPL.IPL."WICKET_TAKEN"
WHERE "player_out" IS NOT NULL
LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,player_out
419167,1,10,3,154
419167,2,10,3,46
419167,2,12,4,8
419167,2,14,4,96
419167,1,18,4,208
419168,1,2,7,18
419168,1,5,5,21
419168,2,6,1,53
419168,2,6,5,178
419168,2,8,2,57
419168,1,14,2,20
419168,1,15,5,109
419168,2,16,2,56
419168,2,18,4,188
419168,2,20,2,131
419168,1,20,4,125
419169,1,1,4,53
419169,1,4,2,57
419169,1,7,1,56
419169,1,17,3,54
419169,1,19,3,131
419170,2,2,4,42
419170,1,8,2,185
419170,1,9,4,18
419170,1,12,2,23
419170,2,15,2,133
419170,2,15,5,79
419170,2,17,6,154
419170,1,18,1,20
419170,2,19,6,221
501203,1,1,6,185
501203,1,11,3,21
501203,2,16,2,9
501203,1,18,2,20
501203,2,20,2,63
501204,1,5,5,42
501204,1,6,3,26
501204,2,6,5,252
501204,1,11,1,257
501204,1,13,6,154
501204,1,18,3,258
501204,1,20,1,112
501204,1,20,3,94
501205,2,2,2,135
501205,1,9,6,55
501205,2,10,6,260
501205,1,12,3,2
501205,2,18,4,79
501205,1,19,4,259
501206,1,7,6,254
501206,1,15,2,183
501206,1,18,4,106
501207,2,1,1,74
501207,1,1,4,53
501207,1,2,3,100
501207,1,3,4,167
501207,1,4,3,88
501207,2,8,5,171
501207,1,9,3,48
501207,2,9,3,157
501207,1,18,1,67
501207,1,20,1,14
501208,2,9,6,26
501208,2,13,2,154
501208,1,13,3,9
501208,2,14,6,93
501208,2,17,4,258
501208,2,18,1,112
501208,1,20,6,31
501209,1,1,3,41
501209,1,5,5,254
501209,1,8,1,262
501209,1,8,3,183
501209,2,8,3,6
501209,2,11,5,266
501209,1,18,4,187
501209,1,19,7,54
501210,1,5,4,8
501211,1,1,2,21
501211,2,6,5,53
501211,2,14,6,264
501212,1,1,1,2
501212,1,3,5,64
501212,1,5,5,17
501212,2,8,4,74
501212,2,10,5,171
501212,2,12,2,27
501212,1,16,2,104
501212,1,17,1,35
501213,2,2,6,135
501213,1,3,5,42
501213,2,5,6,260
501213,2,7,4,110
501213,1,9,6,65
501213,2,12,1,79
501213,1,15,4,26
501213,2,17,5,203
501213,2,17,6,268
501213,2,20,1,269
501213,1,20,2,154
Query:
SELECT b."match_id", b."striker", SUM(s."runs_scored") AS "individual_score"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id", b."striker"
LIMIT 100;
Answer:
match_id,striker,individual_score
335987,2,158
335987,9,8
335987,14,18
335988,19,116
335988,26,54
335988,21,32
335988,29,3
335989,30,7
335989,42,52
335989,32,17
335989,38,14
335990,43,8
335990,6,32
335990,9,25
335990,11,39
335990,49,28
335990,50,2
335991,60,0
335991,61,1
335992,33,5
335992,31,7
335992,26,20
335993,54,14
335998,5,16
336000,41,6
336002,5,2
335987,15,3
335988,23,31
335989,36,2
335991,62,10
335991,4,38
335991,5,13
335992,24,26
335992,32,76
335992,65,4
335994,46,43
335994,49,17
335994,73,1
335994,23,2
335996,48,2
335998,1,12
336000,87,39
336000,29,10
336000,66,1
336001,21,28
336002,46,37
336002,82,2
335990,48,20
335992,35,36
335994,19,5
335995,232,16
335996,46,21
335997,14,34
335999,44,18
335999,85,0
336000,27,40
336003,8,1
336007,9,31
336007,7,5
336011,76,31
336013,114,27
336012,70,20
336020,42,3
336029,61,3
335991,3,0
335996,49,22
335991,54,14
335991,2,5
335991,1,14
335992,25,16
335992,64,2
335992,66,0
335993,57,66
335994,21,53
335995,53,13
335996,64,12
335996,73,2
335997,51,2
335997,9,11
335997,32,61
335997,11,4
335997,15,17
335998,4,0
335998,83,3
336001,11,4
336001,6,0
336003,42,50
336004,76,15
335991,57,0
335991,58,6
335993,59,8
335993,60,12
335993,61,1
335994,18,81
335995,75,4
335996,26,94
335996,67,0
335996,78,4
335997,16,3
335998,18,70
Query:
SELECT DISTINCT b."match_id", b."innings_no", b."striker", b."non_striker"
FROM IPL.IPL."BALL_BY_BALL" b
LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker
335987,2,6,7
335987,1,2,1
335987,2,7,6
335987,2,8,7
335987,2,7,8
335987,1,1,2
335987,2,9,7
335987,2,7,9
335987,2,10,7
335987,2,7,10
335987,1,3,2
335987,2,11,10
335987,2,10,11
335987,1,2,3
335987,2,10,12
335987,2,10,13
335987,2,13,14
335987,2,14,13
335987,2,15,14
335987,2,14,15
335987,1,2,4
335987,2,14,16
335987,1,5,2
335988,2,24,25
335987,2,12,10
335987,1,4,2
335987,1,2,5
335988,1,18,19
335988,2,25,26
335988,2,26,25
335988,1,20,19
335988,1,19,20
335988,1,19,21
335988,2,27,26
335988,1,22,19
335988,1,23,19
335988,2,29,28
335989,2,40,41
335989,2,40,42
335989,1,32,31
335989,1,33,35
335989,1,36,35
335989,1,35,36
335989,1,37,39
335989,1,35,33
335990,1,43,44
335990,2,51,6
335990,1,44,46
335990,2,52,6
335990,2,9,52
335990,2,8,9
335990,2,11,9
335990,2,9,11
335990,1,48,49
335990,2,12,11
335991,2,5,4
335991,1,56,59
335991,2,4,63
335991,1,59,60
335992,2,32,69
335992,1,25,27
335993,1,55,54
335993,1,70,57
335993,1,60,61
335987,2,16,14
335988,1,17,18
335988,1,18,17
335988,2,25,24
335987,2,13,10
335988,1,21,19
335988,2,26,27
335988,1,19,22
335988,2,26,28
335988,1,19,23
335989,1,33,32
335989,1,33,34
335989,1,34,33
335989,1,35,37
335989,1,39,37
335990,2,6,52
335990,1,47,46
335989,1,30,31
335989,1,31,30
335989,2,41,40
335989,1,32,33
335989,1,38,37
335989,1,37,38
335990,2,6,51
335990,1,44,43
335990,1,46,44
335990,2,52,9
335990,2,9,8
335990,1,46,48
335990,1,49,48
335990,1,50,49
335990,2,11,12
335991,2,62,2
335991,1,54,53
335991,2,62,3
335991,2,3,62
Query:
SELECT b."match_id", b."innings_no", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
GROUP BY b."match_id", b."innings_no", b."striker", b."non_striker"
LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker,partnership_runs
335987,2,7,6,1
335987,2,7,8,0
335987,1,3,2,20
335987,2,10,11,4
335987,2,11,10,7
335987,1,4,2,12
335987,2,16,14,3
335987,1,2,4,45
335987,1,5,2,5
335988,2,25,24,31
335988,1,19,18,14
335988,1,19,23,42
335988,2,28,29,13
335989,1,30,31,7
335989,2,41,40,12
335989,2,42,40,52
335989,2,40,42,50
335989,1,35,37,13
335989,1,37,39,16
335990,1,43,44,8
335990,2,9,52,3
335991,1,58,56,6
335994,2,46,44,2
335991,1,60,59,0
335995,2,37,38,1
335996,1,26,66,3
335987,2,10,7,0
335987,1,2,3,27
335987,2,13,14,8
335987,1,2,5,45
335988,2,24,25,24
335988,1,23,19,31
335989,2,40,41,8
335989,1,33,35,4
335990,1,45,44,0
335990,1,46,47,30
335990,2,12,11,3
335991,1,54,53,14
335991,2,1,62,1
335992,2,32,34,32
335992,1,25,64,5
335992,1,29,65,0
335992,1,66,65,0
335993,1,57,232,33
335994,2,71,48,20
335995,1,70,55,10
335995,1,57,56,36
336001,1,20,19,65
335988,1,20,19,2
335988,2,29,28,3
335991,1,61,131,0
335996,2,79,49,13
335997,1,11,8,3
335997,1,15,14,15
335998,1,1,2,7
335998,1,5,63,12
336000,2,24,28,1
336000,2,27,28,17
336000,1,90,87,5
336003,1,40,41,26
335997,2,36,74,0
336001,1,17,19,14
336005,2,95,105,1
336008,1,64,24,0
335987,2,10,13,2
335991,1,232,56,10
335992,2,33,69,5
335987,2,10,12,0
335987,2,14,13,4
335988,2,25,26,40
335988,1,19,21,33
335988,2,26,28,27
335989,1,37,38,3
335989,1,39,37,3
335990,1,48,46,10
335990,1,49,48,17
335990,1,50,49,2
335991,2,2,62,5
335991,2,3,62,0
335991,1,56,232,2
335991,1,59,56,9
335991,2,4,63,18
335991,1,59,60,1
335991,1,59,61,4
335992,2,32,69,14
335992,1,27,29,51
335992,1,65,67,4
335993,1,60,61,11
335994,2,49,46,8
335994,2,49,71,9
335994,2,48,71,12
335995,1,232,56,16
335996,1,29,24,6
335997,1,52,9,32
335997,1,14,16,9
335997,1,15,81,2
335998,1,1,62,2
336000,2,26,28,4
336001,2,7,93,3
336001,2,12,14,1
Query:
SELECT p."match_id", p."striker", p."non_striker", p."partnership_runs"
FROM (
  SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
  FROM IPL.IPL."BALL_BY_BALL" b
  JOIN IPL.IPL."BATSMAN_SCORED" s
    ON b."match_id" = s."match_id"
    AND b."innings_no" = s."innings_no"
    AND b."over_id" = s."over_id"
    AND b."ball_id" = s."ball_id"
  GROUP BY b."match_id", b."striker", b."non_striker"
) p
QUALIFY ROW_NUMBER() OVER (PARTITION BY p."match_id" ORDER BY p."partnership_runs" DESC) = 1
LIMIT 100;
Answer:
match_id,striker,non_striker,partnership_runs
392191,29,161,32
734006,383,208,67
980914,96,40,52
548364,236,100,30
336016,31,74,68
392229,8,52,38
829790,162,8,80
548339,275,88,40
829782,339,85,61
598011,88,57,86
392240,133,85,36
419163,1,203,62
501254,19,185,46
501220,21,23,29
598018,216,9,47
829788,57,208,32
392230,35,168,36
734010,27,301,59
501236,192,32,25
501241,65,42,56
829724,187,42,57
980922,21,254,27
598073,8,162,35
501248,41,285,56
501271,162,8,44
548316,71,109,39
419121,18,21,52
598016,57,221,47
598010,104,85,25
598069,320,209,93
419116,41,110,45
419170,21,20,47
501238,41,199,30
829750,21,20,41
829786,40,46,31
501239,40,87,39
419124,9,96,43
980938,351,154,43
548353,26,10,82
336031,41,40,47
392215,74,183,77
598024,277,85,34
734036,19,383,44
419123,229,183,31
548385,185,19,47
829758,2,21,42
392208,104,176,51
548381,154,17,53
734002,46,40,46
548360,133,57,67
980952,221,57,51
598027,35,71,27
980930,46,40,53
598013,162,110,54
392197,154,133,39
336028,101,74,50
336039,57,55,57
548368,57,97,109
734012,62,345,54
392244,56,97,33
501221,26,65,49
419160,40,171,43
548376,53,148,34
548356,171,1,31
981000,110,8,59
501274,289,133,51
598023,46,254,22
548319,42,258,34
501205,2,55,41
548383,40,2,32
734030,383,19,55
829804,320,374,40
548358,40,2,56
335989,42,40,52
829728,334,46,55
336043,101,74,39
336005,101,31,35
598055,133,147,48
598038,147,88,46
336003,42,40,50
392237,6,9,38
548324,100,53,29
829716,20,2,53
501257,162,8,43
598061,280,17,27
419138,185,18,47
501266,19,62,20
598040,46,254,37
980962,306,79,45
598068,207,88,51
980950,350,154,59
548372,208,221,64
419112,31,212,86
733984,46,40,65
419146,229,32,36
501203,125,21,39
419149,1,162,49
548370,32,85,58
336044,21,17,55
336027,40,41,40
Query:
SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs",
       SUM(CASE WHEN b."striker" = p."player_id" THEN s."runs_scored" ELSE 0 END) AS "player1_score",
       SUM(CASE WHEN b."non_striker" = p."player_id" THEN s."runs_scored" ELSE 0 END) AS "player2_score"
FROM IPL.IPL."BALL_BY_BALL" b
JOIN IPL.IPL."BATSMAN_SCORED" s
  ON b."match_id" = s."match_id"
  AND b."innings_no" = s."innings_no"
  AND b."over_id" = s."over_id"
  AND b."ball_id" = s."ball_id"
JOIN IPL.IPL."PLAYER" p
  ON p."player_id" IN (b."striker", b."non_striker")
GROUP BY b."match_id", b."striker", b."non_striker", p."player_id"
LIMIT 100;
Answer:
match_id,striker,non_striker,partnership_runs,player1_score,player2_score
335987,6,7,2,2,0
335987,2,1,41,41,0
335987,7,8,0,0,0
335987,9,7,8,0,8
335987,9,7,8,8,0
335987,7,9,5,0,5
335987,10,7,0,0,0
335987,10,7,0,0,0
335987,11,10,7,7,0
335987,10,11,4,0,4
335987,2,3,27,27,0
335987,10,12,0,0,0
335987,10,13,2,2,0
335987,13,14,8,0,8
335987,15,14,3,3,0
335987,2,4,45,45,0
335987,16,14,3,0,3
335987,14,16,6,6,0
335988,24,25,24,0,24
335988,19,18,14,14,0
335988,22,19,13,13,0
335988,26,28,27,0,27
335991,62,2,1,1,0
335991,1,62,1,0,1
335991,232,56,10,0,10
335992,69,32,11,11,0
335987,14,15,8,0,8
335987,2,5,45,45,0
335988,19,22,24,24,0
335988,22,19,13,0,13
335989,30,31,7,0,7
335989,41,40,12,12,0
335989,32,33,12,12,0
335989,33,32,1,1,0
335989,35,36,12,0,12
335989,35,37,13,0,13
335990,44,46,22,22,0
335990,12,11,3,3,0
335991,53,54,3,3,0
335991,62,2,1,0,1
335991,53,55,1,1,0
335992,31,69,7,0,7
335992,34,32,17,0,17
335992,64,25,2,0,2
335992,65,29,0,0,0
335992,66,65,0,0,0
335992,67,65,9,0,9
335993,53,54,8,8,0
335993,55,54,2,0,2
335990,46,48,15,15,0
335991,56,59,22,22,0
335991,59,56,9,0,9
335991,61,131,0,0,0
335992,69,32,11,0,11
335992,67,68,15,15,0
335993,54,55,12,0,12
335993,41,42,75,75,0
335994,21,18,53,53,0
335994,18,21,41,41,0
335994,48,50,20,0,20
335995,57,56,36,0,36
335996,24,29,2,0,2
335996,79,46,4,4,0
335996,46,79,0,0,0
335987,7,10,0,0,0
335988,19,20,3,3,0
335988,23,19,31,0,31
335989,33,35,4,4,0
335990,47,46,19,0,19
335990,47,46,19,19,0
335987,5,2,5,5,0
335988,20,19,2,2,0
335988,27,26,23,23,0
335988,29,28,3,3,0
335989,40,41,8,8,0
335989,33,32,1,0,1
335989,34,33,1,1,0
335989,39,37,3,0,3
335989,39,37,3,3,0
335990,44,43,1,0,1
335990,44,45,6,6,0
335990,44,45,6,0,6
335990,46,44,3,3,0
335990,46,48,15,0,15
335990,48,46,10,10,0
335990,48,49,10,10,0
335991,62,3,6,0,6
335991,3,62,0,0,0
335991,55,53,0,0,0
335991,63,4,4,4,0
335992,34,32,17,17,0
335992,25,64,5,0,5
335992,27,29,51,51,0
335992,65,67,4,0,4
335993,40,41,12,0,12
335993,42,41,25,25,0
335988,19,23,42,42,0
335989,33,34,4,0,4
335990,52,9,5,0,5
335990,9,8,6,0,6
Query:
SELECT "player_id", "player_name", "batting_hand", "bowling_skill"
FROM IPL.IPL."PLAYER"
LIMIT 100;
Answer:
player_id,player_name,batting_hand,bowling_skill
1,SC Ganguly,Left-hand bat,Right-arm medium
2,BB McCullum,Right-hand bat,Right-arm medium
3,RT Ponting,Right-hand bat,Right-arm medium
4,DJ Hussey,Right-hand bat,Right-arm offbreak
5,Mohammad Hafeez,Right-hand bat,Right-arm offbreak
6,R Dravid,Right-hand bat,Right-arm offbreak
7,W Jaffer,Right-hand bat,Right-arm offbreak
8,V Kohli,Right-hand bat,Right-arm medium
9,JH Kallis,Right-hand bat,Right-arm fast-medium
10,CL White,Right-hand bat,Legbreak googly
11,MV Boucher,Right-hand bat,Right-arm medium
12,B Akhil,Right-hand bat,Right-arm medium-fast
13,AA Noffke,Right-hand bat,Right-arm fast-medium
14,P Kumar,Right-hand bat,Right-arm medium
15,Z Khan,Right-hand bat,Left-arm fast-medium
16,SB Joshi,Left-hand bat,Slow left-arm orthodox
17,PA Patel,Left-hand bat,Right-arm medium
18,ML Hayden,Left-hand bat,Right-arm medium
19,MEK Hussey,Left-hand bat,Right-arm medium
20,MS Dhoni,Right-hand bat,Right-arm medium
21,SK Raina,Left-hand bat,Right-arm offbreak
22,JDP Oram,Left-hand bat,Right-arm fast-medium
23,S Badrinath,Right-hand bat,Right-arm offbreak
24,K Goel,Left-hand bat,Right-arm offbreak
25,JR Hopes,Right-hand bat,Right-arm medium
26,KC Sangakkara,Left-hand bat,Right-arm offbreak
27,Yuvraj Singh,Left-hand bat,Slow left-arm orthodox
28,SM Katich,Left-hand bat,Slow left-arm chinaman
29,IK Pathan,Left-hand bat,Left-arm medium-fast
30,T Kohli,Right-hand bat,Right-arm medium
31,YK Pathan,Right-hand bat,Right-arm offbreak
32,SR Watson,Right-hand bat,Right-arm fast-medium
33,M Kaif,Right-hand bat,Right-arm offbreak
34,DS Lehmann,Left-hand bat,Slow left-arm orthodox
36,M Rawat,Right-hand bat,Right-arm medium
37,D Salunkhe,Right-hand bat,Legbreak
38,SK Warne,Right-hand bat,Legbreak googly
39,SK Trivedi,Right-hand bat,Right-arm medium
40,G Gambhir,Left-hand bat,Legbreak
41,V Sehwag,Right-hand bat,Right-arm offbreak
42,S Dhawan,Left-hand bat,Right-arm offbreak
43,L Ronchi,Right-hand bat,Right-arm medium
44,ST Jayasuriya,Left-hand bat,Slow left-arm orthodox
45,DJ Thornely,Right-hand bat,Right-arm medium
46,RV Uthappa,Right-hand bat,Right-arm medium
47,PR Shah,Right-hand bat,Right-arm medium
48,AM Nayar,Left-hand bat,Right-arm medium
49,SM Pollock,Right-hand bat,Right-arm fast-medium
50,Harbhajan Singh,Right-hand bat,Right-arm offbreak
51,S Chanderpaul,Left-hand bat,Legbreak
52,LRPL Taylor,Right-hand bat,Right-arm offbreak
53,AC Gilchrist,Left-hand bat,Right-arm offbreak
54,Y Venugopal Rao,Right-hand bat,Right-arm offbreak
55,VVS Laxman,Right-hand bat,Right-arm offbreak
56,A Symonds,Right-hand bat,Right-arm offbreak
57,RG Sharma,Right-hand bat,Right-arm offbreak
58,SB Styris,Right-hand bat,Right-arm medium
59,SB Bangar,Right-hand bat,Right-arm medium-fast
60,WPUJC Vaas,Left-hand bat,Left-arm fast-medium
61,RP Singh,Right-hand bat,Left-arm fast-medium
62,WP Saha,Right-hand bat,Right-arm medium
63,LR Shukla,Right-hand bat,Right-arm medium
64,DPMD Jayawardene,Right-hand bat,Right-arm medium
65,S Sohal,Right-hand bat,Legbreak
66,B Lee,Right-hand bat,Right-arm fast
67,PP Chawla,Left-hand bat,Legbreak
68,WA Mota,Right-hand bat,Right-arm medium
69,Kamran Akmal,Right-hand bat,Right-arm medium
70,Shahid Afridi,Right-hand bat,Legbreak googly
71,DJ Bravo,Right-hand bat,Right-arm medium-fast
72,MA Khote,Right-hand bat,Right-arm medium
73,A Nehra,Right-hand bat,Left-arm medium-fast
74,GC Smith,Left-hand bat,Right-arm offbreak
75,Pankaj Singh,Right-hand bat,Right-arm medium-fast
76,RR Sarwan,Right-hand bat,Legbreak
77,S Sreesanth,Right-hand bat,Right-arm fast-medium
78,VRV Singh,Right-hand bat,Right-arm medium-fast
79,SS Tiwary,Left-hand bat,Right-arm medium
80,DS Kulkarni,Right-hand bat,Right-arm medium
81,R Vinay Kumar,Right-hand bat,Right-arm medium
82,AB Agarkar,Right-hand bat,Right-arm fast
83,M Kartik,Left-hand bat,Slow left-arm orthodox
84,I Sharma,Right-hand bat,Right-arm fast-medium
85,AM Rahane,Right-hand bat,Right-arm medium
86,Shoaib Malik,Right-hand bat,Right-arm offbreak
87,MK Tiwary,Right-hand bat,Legbreak googly
88,KD Karthik,Right-hand bat,Right-arm medium
89,R Bhatia,Right-hand bat,Right-arm medium-fast
90,MF Maharoof,Right-hand bat,Right-arm fast-medium
91,VY Mahesh,Right-hand bat,Right-arm medium-fast
92,TM Srivastava,Left-hand bat,Right-arm medium
93,B Chipli,Right-hand bat,Right-arm medium
94,DW Steyn,Right-hand bat,Right-arm fast
95,DB Das,Right-hand bat,Legbreak googly
96,MK Pandey,Right-hand bat,Right-arm medium
97,HH Gibbs,Right-hand bat,Right-arm bowler
98,DNT Zoysa,Left-hand bat,Left-arm fast-medium
99,D Kalyankrishna,Right-hand bat,Right-arm medium-fast
100,SE Marsh,Left-hand bat,Slow left-arm orthodox
101,SA Asnodkar,Right-hand bat,Right-arm offbreak
Query:
SELECT
  p."match_id",
  p."player1_id",
  p."player1_score",
  p."player2_id",
  p."player2_score",
  p."partnership_runs"
FROM (
  SELECT
    b."match_id",
    b."striker" AS "player1_id",
    b."non_striker" AS "player2_id",
    SUM(s."runs_scored") AS "partnership_runs",
    SUM(s."runs_scored") AS "player1_score",
    0 AS "player2_score"
  FROM IPL.IPL."BALL_BY_BALL" b
  JOIN IPL.IPL."BATSMAN_SCORED" s
    ON b."match_id" = s."match_id"
    AND b."innings_no" = s."innings_no"
    AND b."over_id" = s."over_id"
    AND b."ball_id" = s."ball_id"
  GROUP BY b."match_id", b."striker", b."non_striker"
) p
ORDER BY p."partnership_runs" DESC
LIMIT 100;
Answer:
match_id,player1_id,player1_score,player2_id,player2_score,partnership_runs
829800,110,133,8,0,133
980992,110,129,8,0,129
548377,162,127,8,0,127
598032,162,127,135,0,127
548334,187,109,183,0,109
335999,53,109,55,0,109
548368,57,109,97,0,109
501265,53,105,100,0,105
980992,8,97,110,0,97
598069,320,93,209,0,93
829748,187,91,42,0,91
734034,187,90,42,0,90
598029,41,90,64,0,90
501268,32,89,6,0,89
729296,305,89,203,0,89
501276,185,89,19,0,89
548386,214,88,9,0,88
548382,147,87,133,0,87
598011,88,86,57,0,86
598012,19,86,185,0,86
419112,31,86,212,0,86
419142,185,85,109,0,85
501227,162,84,135,0,84
733992,305,84,320,0,84
501249,162,83,8,0,83
419148,224,83,183,0,83
980936,110,83,8,0,83
734004,27,83,110,0,83
598075,21,82,19,0,82
829752,393,82,154,0,82
548353,26,82,10,0,82
980912,110,82,8,0,82
598030,320,80,236,0,80
336033,100,80,139,0,80
548342,96,80,46,0,80
336024,100,80,25,0,80
829790,162,80,8,0,80
501265,100,79,53,0,79
598071,321,79,100,0,79
336038,74,79,101,0,79
729288,305,78,320,0,78
419130,21,78,23,0,78
419158,21,78,185,0,78
501228,41,77,187,0,77
392215,74,77,183,0,77
734054,62,77,345,0,77
501214,9,76,40,0,76
981024,162,76,8,0,76
829800,8,76,110,0,76
980958,187,76,396,0,76
829710,57,75,372,0,75
419117,214,75,161,0,75
501214,40,75,9,0,75
598056,21,75,19,0,75
335993,41,75,42,0,75
980934,187,74,42,0,74
598050,162,74,8,0,74
419136,187,74,241,0,74
548334,42,74,10,0,74
501211,185,74,23,0,74
980926,355,74,339,0,74
548336,162,73,110,0,73
335995,56,73,57,0,73
829740,32,73,85,0,73
548377,8,73,162,0,73
981004,162,73,8,0,73
548347,41,72,64,0,72
501245,19,72,21,0,72
336025,40,72,42,0,72
548355,162,71,8,0,71
980912,8,71,110,0,71
336006,41,71,40,0,71
419144,162,71,87,0,71
829740,85,70,32,0,70
829726,221,70,372,0,70
734052,41,69,345,0,69
980966,420,69,355,0,69
501259,88,69,100,0,69
729306,254,69,187,0,69
981004,8,69,162,0,69
980946,17,68,208,0,68
336016,31,68,74,0,68
392202,133,68,44,0,68
548360,133,67,57,0,67
829828,383,67,57,0,67
980942,8,67,354,0,67
598020,254,67,46,0,67
729288,2,67,147,0,67
734006,383,67,208,0,67
980980,276,66,31,0,66
598065,221,66,57,0,66
419118,20,66,23,0,66
829738,334,66,31,0,66
392213,46,66,9,0,66
829752,154,66,393,0,66
336001,20,65,19,0,65
733984,46,65,40,0,65
419111,191,65,204,0,65
392194,110,65,87,0,65
392190,18,65,17,0,65
Query:
SELECT e."match_id", e."innings_no", e."over_id", e."ball_id", e."extra_type", e."extra_runs"
FROM IPL.IPL."EXTRA_RUNS" e
LIMIT 100
Answer:
match_id,innings_no,over_id,ball_id,extra_type,extra_runs
501229,1,16,3,legbyes,1
501229,2,18,1,legbyes,1
501229,2,18,6,legbyes,4
392239,2,18,6,legbyes,1
501229,1,20,3,legbyes,1
501230,1,1,4,legbyes,4
829714,1,18,4,legbyes,1
829816,2,3,3,legbyes,1
501230,2,3,4,legbyes,1
829816,1,2,3,legbyes,4
980962,2,18,2,legbyes,1
829714,2,18,1,legbyes,1
829714,1,9,6,legbyes,1
501231,2,1,1,legbyes,1
335994,2,4,6,legbyes,1
501231,2,2,6,legbyes,1
829714,1,9,3,legbyes,2
980962,2,17,5,legbyes,2
336045,2,3,5,legbyes,4
392240,1,3,7,legbyes,1
336045,1,4,1,legbyes,1
829714,1,3,6,legbyes,1
501231,2,20,5,legbyes,1
501232,2,1,1,legbyes,1
501232,1,1,2,legbyes,1
336045,1,8,3,legbyes,1
336017,2,4,4,legbyes,1
829814,1,18,1,legbyes,1
501232,2,4,3,legbyes,1
501232,1,4,6,legbyes,1
501232,2,7,2,legbyes,1
829714,1,1,1,legbyes,4
336045,2,9,3,legbyes,1
501232,2,14,3,legbyes,1
501232,1,14,7,legbyes,1
829712,1,18,5,legbyes,1
829712,1,3,1,legbyes,4
829712,1,2,6,legbyes,1
392240,1,10,2,legbyes,2
829712,1,1,3,legbyes,4
392240,1,11,2,legbyes,1
335991,1,2,1,legbyes,1
980962,2,14,1,legbyes,1
335988,2,17,1,legbyes,1
392240,1,13,3,legbyes,1
829814,1,14,3,legbyes,1
501232,1,20,7,legbyes,1
829812,1,4,5,legbyes,1
392240,1,15,3,legbyes,1
980960,1,7,5,legbyes,1
829710,2,4,2,legbyes,1
501233,2,6,1,legbyes,1
501233,2,6,3,legbyes,1
981018,2,2,1,legbyes,1
336045,2,18,8,legbyes,1
501233,1,13,1,legbyes,1
829812,1,1,4,legbyes,1
392241,2,3,6,legbyes,1
392241,2,4,6,legbyes,1
981018,1,1,3,legbyes,1
829810,1,12,6,legbyes,1
501234,2,2,1,legbyes,1
980958,1,3,2,legbyes,1
829710,1,1,5,legbyes,1
829710,2,1,3,legbyes,1
392241,2,8,3,legbyes,1
980956,1,20,3,legbyes,1
336017,2,7,5,legbyes,1
392186,1,2,1,legbyes,1
501234,2,14,5,legbyes,2
501234,1,16,2,legbyes,1
336001,2,20,3,legbyes,1
734054,1,19,6,legbyes,1
392186,2,6,1,legbyes,4
392241,1,19,4,legbyes,1
392186,2,6,2,legbyes,1
980986,1,18,2,legbyes,1
392186,2,10,3,legbyes,1
501235,1,12,3,legbyes,1
734054,1,17,6,legbyes,1
829808,1,9,2,legbyes,1
335994,1,9,3,legbyes,1
829808,2,8,2,legbyes,2
829808,2,7,3,legbyes,1
829808,2,7,1,legbyes,1
734054,1,13,2,legbyes,1
501235,1,18,4,legbyes,1
980956,1,16,2,legbyes,1
335994,1,10,2,legbyes,1
335991,2,2,5,legbyes,4
501236,1,13,2,legbyes,1
392187,1,2,2,legbyes,1
501236,1,13,5,legbyes,1
501236,1,15,1,legbyes,1
829808,2,3,1,legbyes,1
501236,2,17,2,legbyes,1
392243,1,4,4,legbyes,1
829806,1,19,6,legbyes,1
392243,2,10,1,legbyes,1
501237,2,5,6,legbyes,1
Query:
SELECT s."match_id", SUM(s."runs_scored") AS "total_runs"
FROM IPL.IPL."BATSMAN_SCORED" s
GROUP BY s."match_id"
LIMIT 100
Answer:
match_id,total_runs
335987,268
335988,430
335989,240
335990,315
335991,184
335992,318
335993,268
335994,379
335995,418
335997,264
335999,289
336000,300
336001,332
336002,247
336003,356
336007,320
336010,191
336011,226
336013,188
336014,352
336015,242
336016,264
336017,224
336020,287
336026,117
336031,291
336032,285
336034,222
336041,262
392188,149
392189,198
392196,320
392199,284
392217,259
392220,215
392230,263
419118,262
419129,319
419132,303
419133,325
501214,296
335996,284
336006,328
336033,342
336043,268
392204,264
392205,207
392210,269
392219,347
392227,217
392233,312
419130,333
419148,292
501225,323
501239,221
501275,309
548349,323
548359,293
734040,303
829756,279
419150,347
501212,277
501242,278
548358,264
336008,326
336024,392
336028,297
336038,396
336039,298
336044,220
392193,328
392194,353
392213,285
392222,264
392238,193
392244,262
419121,355
419153,300
419155,291
501217,312
501236,180
548355,311
548362,277
335998,273
336004,321
336009,281
336018,326
336019,358
336023,286
336029,303
336036,340
336037,343
336045,306
392186,299
392187,178
392190,248
392191,221
392197,297
392201,317
392207,277
End Exploring Related Columns
Task: Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: To find the IDs of players who scored the highest number of partnership runs for each match, we identify the partnerships with the maximum total runs in each match. For each such partnership, we provide the match ID, the IDs of the two players involved along with their individual scores, and the total partnership score. The player with the higher individual score is listed as player1; if both players have the same score, the player with the higher ID is listed as player1.

```csv
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
match_id1:int,player1_id1:int,player1_score1:int,player2_id1:int,player2_score1:int,partnership_score1:int
match_id2:int,player1_id2:int,player1_score2:int,player2_id2:int,player2_score2:int,partnership_score2:int
...
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 03:30:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:30:25 - root - INFO - ```sql
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END)
            OVER (PARTITION BY b."match_id", b."innings_no" ORDER BY b."over_id", b."ball_id"
                  ROWS UNBOUNDED PRECEDING) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partnerships AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        FIRST_VALUE(dw."striker") OVER (
            PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
            ORDER BY dw."over_id", dw."ball_id"
        ) AS "player1_id",
        FIRST_VALUE(dw."non_striker") OVER (
            PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
            ORDER BY dw."over_id", dw."ball_id"
        ) AS "player2_id",
        SUM(dw."runs_scored") AS "partnership_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."innings_no", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        p."partnership_runs",
        COALESCE(s1."player_runs", 0) AS "player1_score",
        COALESCE(s2."player_runs", 0) AS "player2_score"
    FROM partnerships p
    LEFT JOIN individual_scores s1
        ON p."match_id" = s1."match_id"
        AND p."partnership_number" = s1."partnership_number"
        AND p."player1_id" = s1."player_id"
    LEFT JOIN individual_scores s2
        ON p."match_id" = s2."match_id"
        AND p."partnership_number" = s2."partnership_number"
        AND p."player2_id" = s2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC, op."player1_id" DESC, op."player2_id" DESC
) = 1
ORDER BY op."match_id";
```
2025-01-25 03:30:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:30:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:30:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:30:26 - snowflake.connector.connection - INFO - closed
2025-01-25 03:30:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:30:27 - root - INFO - itercount: 1
2025-01-25 03:30:27 - root - INFO - 000979 (42601): 01b9f072-0004-8038-0001-11c300f9f70a: SQL compilation error:
[DW."striker"] is not a valid group by expression
2025-01-25 03:30:27 - root - INFO - Input sql:
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END)
            OVER (PARTITION BY b."match_id", b."innings_no" ORDER BY b."over_id", b."ball_id"
                  ROWS UNBOUNDED PRECEDING) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partnerships AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        FIRST_VALUE(dw."striker") OVER (
            PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
            ORDER BY dw."over_id", dw."ball_id"
        ) AS "player1_id",
        FIRST_VALUE(dw."non_striker") OVER (
            PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
            ORDER BY dw."over_id", dw."ball_id"
        ) AS "player2_id",
        SUM(dw."runs_scored") AS "partnership_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."innings_no", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        p."partnership_runs",
        COALESCE(s1."player_runs", 0) AS "player1_score",
        COALESCE(s2."player_runs", 0) AS "player2_score"
    FROM partnerships p
    LEFT JOIN individual_scores s1
        ON p."match_id" = s1."match_id"
        AND p."partnership_number" = s1."partnership_number"
        AND p."player1_id" = s1."player_id"
    LEFT JOIN individual_scores s2
        ON p."match_id" = s2."match_id"
        AND p."partnership_number" = s2."partnership_number"
        AND p."player2_id" = s2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC, op."player1_id" DESC, op."player2_id" DESC
) = 1
ORDER BY op."match_id";
The error information is:
000979 (42601): 01b9f072-0004-8038-0001-11c300f9f70a: SQL compilation error:
[DW."striker"] is not a valid group by expression
Please correct it and output only 1 complete SQL query.When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-25 03:32:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:32:36 - root - INFO - ```sql
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END) OVER (
            PARTITION BY b."match_id", b."innings_no"
            ORDER BY b."over_id", b."ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partnerships AS (
    SELECT DISTINCT
        dw."match_id",
        dw."innings_no",
        dw."partnership_number"
    FROM deliveries_with_pn dw
),
partners AS (
    SELECT
        p."match_id",
        p."innings_no",
        p."partnership_number",
        MIN(b."player_id") AS "player1_id",
        MAX(b."player_id") AS "player2_id"
    FROM partnerships p
    JOIN (
        SELECT
            dw."match_id",
            dw."innings_no",
            dw."partnership_number",
            dw."striker" AS "player_id"
        FROM deliveries_with_pn dw
        UNION
        SELECT
            dw."match_id",
            dw."innings_no",
            dw."partnership_number",
            dw."non_striker" AS "player_id"
        FROM deliveries_with_pn dw
    ) b
        ON p."match_id" = b."match_id"
        AND p."innings_no" = b."innings_no"
        AND p."partnership_number" = b."partnership_number"
    GROUP BY p."match_id", p."innings_no", p."partnership_number"
),
partnership_runs AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        SUM(dw."runs_scored") AS "partnership_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        pr."partnership_runs",
        COALESCE(is1."player_runs", 0) AS "player1_score",
        COALESCE(is2."player_runs", 0) AS "player2_score"
    FROM partners p
    JOIN partnership_runs pr
        ON p."match_id" = pr."match_id"
        AND p."partnership_number" = pr."partnership_number"
    LEFT JOIN individual_scores is1
        ON p."match_id" = is1."match_id"
        AND p."partnership_number" = is1."partnership_number"
        AND p."player1_id" = is1."player_id"
    LEFT JOIN individual_scores is2
        ON p."match_id" = is2."match_id"
        AND p."partnership_number" = is2."partnership_number"
        AND p."player2_id" = is2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC NULLS LAST, op."player1_id" DESC NULLS LAST, op."player2_id" DESC NULLS LAST
) = 1
ORDER BY op."match_id";
```
2025-01-25 03:32:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:32:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:32:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:32:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 568
2025-01-25 03:32:38 - snowflake.connector.connection - INFO - closed
2025-01-25 03:32:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:32:38 - root - INFO - itercount: 2
2025-01-25 03:32:38 - root - INFO - 0
2025-01-25 03:32:38 - root - INFO - results: 
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
335987,9,8,7,5,70
335988,26,27,28,8,100
335989,42,52,40,50,108
335990,46,15,48,10,79
335991,232,10,56,2,34
335992,35,36,32,30,129
335993,55,2,53,0,114
335994,49,8,44,0,143
335995,74,25,32,0,168
335996,71,23,43,0,70
335997,74,44,31,0,144
335998,18,34,17,21,86
335999,53,109,55,37,159
336000,86,17,40,14,86
336001,17,14,19,5,105
336002,46,37,96,0,131
336003,52,29,7,9,136
336004,100,31,27,0,99
336005,31,5,101,0,70
336006,107,13,17,7,130
336007,97,47,53,45,112
336008,29,22,24,0,144
336009,110,21,41,12,79
336010,101,32,74,27,59
336011,100,8,27,0,75
336012,58,23,53,0,62
336013,101,15,31,0,54
336014,107,0,20,0,113
336015,129,3,1,0,61
336016,53,40,97,19,162
336017,44,54,133,30,119
336018,100,44,24,0,102
336019,112,0,53,0,100
336020,110,12,40,3,77
336021,139,34,25,0,127
336022,110,1,40,0,47
336023,108,16,107,2,89
336024,138,4,33,1,136
336025,97,21,53,0,200
336026,128,0,103,0,40
336027,100,2,25,1,72
336028,130,0,8,0,90
336029,71,24,46,0,125
336030,103,53,1,0,80
336031,41,47,40,33,103
336032,95,12,1,0,100
336033,147,20,44,0,171
336034,107,29,17,24,60
336036,97,44,53,31,158
336037,44,47,133,18,85
336038,107,6,17,5,131
336039,55,37,97,0,110
336040,103,0,1,0,80
336041,69,18,101,2,85
336042,112,40,54,29,102
336043,101,39,74,25,70
336044,100,0,25,0,102
336045,31,34,69,0,94
392186,42,22,133,20,60
392187,159,9,31,4,48
392188,41,38,40,15,113
392189,162,0,1,0,69
392190,46,0,14,0,95
392191,162,32,2,21,62
392193,54,8,58,0,77
392194,155,9,21,0,90
392196,161,13,24,1,81
392197,154,39,44,0,132
392199,171,23,88,0,99
392200,31,2,137,0,81
392201,97,20,55,0,74
392202,162,5,2,1,125
392203,175,12,110,0,107
392204,132,43,9,20,63
392205,154,29,48,15,68
392206,171,3,88,0,82
392207,168,16,35,8,91
392208,133,12,48,1,96
392209,157,2,132,0,71
392210,178,24,53,0,104
392211,187,19,110,0,97
392212,104,26,1,22,78
392213,133,0,44,0,121
392214,147,48,55,0,93
392215,74,77,183,56,133
392216,176,29,2,0,130
392217,53,13,178,0,76
392218,46,6,6,0,47
392219,28,15,24,0,126
392220,135,15,40,0,84
392221,64,16,27,0,115
392222,35,16,101,0,117
392223,154,59,44,0,112
392224,88,17,135,0,86
392225,183,16,101,8,52
392226,52,35,6,12,89
392227,133,41,71,37,104
392228,112,18,53,0,81
392229,18,7,22,1,64
392230,168,25,31,0,61
392231,171,23,88,23,77
392232,154,37,48,26,130
392233,53,43,97,23,91
392234,57,0,56,0,52
392235,192,3,168,0,97
392236,197,9,17,0,105
392237,171,0,40,0,70
392238,159,0,31,0,53
392239,65,3,28,2,45
392240,154,9,44,0,80
392241,178,12,53,0,74
392242,53,9,178,2,90
392243,21,20,17,0,102
392244,97,25,56,0,70
419111,205,5,56,0,135
419112,208,55,79,51,132
419113,161,38,29,21,120
419114,132,8,9,7,113
419115,97,45,55,0,99
419116,212,29,74,0,82
419117,214,75,161,45,185
419118,20,66,23,42,120
419119,208,34,79,34,88
419120,183,16,224,8,110
419121,41,45,187,0,101
419122,161,6,26,0,66
419123,229,31,183,8,89
419124,133,3,44,2,88
419125,187,26,41,0,92
419127,204,31,1,0,132
419128,23,29,185,0,85
419129,224,21,183,13,74
419130,209,5,79,0,156
419131,97,25,53,0,77
419132,214,8,26,4,83
419133,187,33,41,10,108
419134,185,37,18,0,103
419135,231,13,53,0,76
419136,241,53,88,0,154
419137,221,20,42,18,65
419138,20,14,185,0,93
419139,40,29,237,0,111
419140,56,1,97,0,76
419141,161,25,26,0,96
419142,185,85,21,0,241
419143,208,26,71,0,89
419144,162,71,1,0,189
419145,241,36,175,19,71
419146,229,36,32,35,107
419147,185,14,18,6,64
419148,224,83,183,21,130
419149,40,47,187,0,102
419150,53,30,231,0,111
419151,227,24,26,21,89
419152,178,34,56,10,70
419153,6,38,249,24,106
419154,40,26,187,2,51
419155,229,9,32,0,75
419156,231,41,57,36,81
419157,187,31,41,5,68
419158,185,49,18,0,127
419159,158,33,46,26,63
419160,40,43,171,25,69
419161,64,63,26,0,149
419162,210,14,133,0,61
419163,254,3,31,2,112
419164,100,53,27,0,143
419165,241,16,40,0,78
419166,207,1,42,1,90
419167,96,5,8,0,72
419168,97,10,56,7,64
419169,231,0,53,0,49
419170,208,13,50,0,93
501203,21,33,185,0,101
501204,252,20,6,8,68
501205,260,1,135,1,79
501206,57,27,208,0,77
501207,171,35,74,0,60
501208,93,21,26,16,77
501209,54,42,187,39,112
501210,133,46,263,0,123
501211,264,20,100,1,157
501212,231,15,27,0,124
501213,258,0,93,0,60
501214,266,27,6,23,201
501215,133,36,263,12,166
501216,19,20,109,9,71
501217,167,63,53,61,137
501218,187,45,41,22,94
501219,169,8,252,0,58
501220,185,26,19,0,86
501221,187,3,41,0,94
501223,272,0,157,0,67
501224,214,14,9,6,67
501225,88,21,167,0,94
501226,57,33,208,24,117
501227,162,84,135,38,159
501228,167,14,53,10,160
501229,258,16,26,7,123
501230,64,12,55,8,84
501231,231,9,157,8,80
501232,25,8,187,0,84
501233,96,6,231,0,70
501234,259,0,64,0,89
501235,40,10,132,0,55
501236,192,20,32,0,49
501237,162,42,135,15,88
501238,104,14,17,0,72
501239,53,1,100,0,77
501240,287,12,96,0,76
501241,93,10,42,9,79
501242,167,32,53,0,158
501243,54,31,199,18,100
501244,258,1,10,0,77
501245,19,72,185,0,139
501246,57,7,208,0,58
501247,288,22,17,0,77
501248,258,18,26,0,125
501249,167,3,48,1,114
501250,109,30,19,0,61
501251,56,4,221,2,91
501252,162,44,135,21,107
501253,167,2,53,0,55
501254,19,46,185,28,99
501255,157,35,96,19,104
501256,289,2,56,0,59
501257,135,38,162,23,132
501258,29,6,187,0,127
501259,104,4,35,0,117
501260,110,6,8,0,72
501261,221,23,50,16,66
501262,187,14,54,1,112
501263,104,33,2,0,56
501264,157,18,96,13,90
501265,53,105,167,0,195
501266,104,12,2,0,67
501267,295,16,1,9,86
501268,178,5,133,1,138
501269,167,5,53,4,124
501271,185,4,19,0,83
501272,221,3,57,0,67
501273,139,29,8,18,106
501274,289,51,133,28,86
501275,162,62,260,41,126
501276,260,1,162,0,153
548311,304,50,133,14,67
548312,254,30,41,16,59
548313,295,12,46,8,67
548314,85,41,6,28,103
548315,312,8,29,6,66
548316,303,16,21,0,53
548317,104,44,266,20,80
548318,307,45,46,30,109
548319,57,27,304,0,83
548320,214,46,9,0,65
548321,158,40,41,0,74
548322,266,13,85,0,138
548323,21,23,303,9,132
548324,67,21,236,0,67
548325,204,30,6,0,67
548326,42,35,17,34,82
548327,157,21,307,0,125
548328,236,27,4,25,91
548329,260,0,8,0,115
548330,57,20,304,0,46
548331,26,44,42,42,145
548332,307,30,46,0,100
548333,9,30,214,0,76
548334,187,109,41,0,178
548335,303,58,23,57,127
548336,162,73,79,0,156
548337,303,40,23,15,90
548338,157,41,1,41,157
548339,275,40,57,0,131
548340,214,10,2,0,66
548341,110,59,162,0,109
548342,96,80,1,0,176
548344,57,19,221,3,104
548346,307,2,1,0,85
548347,208,54,57,0,135
548348,303,29,23,18,111
548349,40,44,2,0,110
548350,85,55,6,40,108
548351,154,5,10,0,42
548352,40,34,2,0,86
548353,328,1,1,0,154
548354,41,55,158,36,107
548355,319,19,100,0,151
548356,275,25,133,23,67
548357,21,32,303,29,128
548358,46,9,328,1,108
548359,100,14,319,2,83
548360,303,0,21,0,129
548361,313,47,42,36,171
548362,41,23,187,15,105
548363,330,30,46,11,97
548364,331,24,26,0,73
548365,275,0,57,0,91
548366,104,19,255,0,51
548367,79,25,135,0,83
548368,57,109,133,0,164
548369,41,4,187,1,79
548370,157,0,1,0,94
548371,321,11,100,0,120
548372,260,0,81,0,116
548373,40,61,2,36,189
548374,321,9,4,8,74
548375,276,13,40,0,57
548376,236,24,53,23,62
548377,262,17,54,11,228
548378,331,33,42,26,67
548379,236,0,53,0,76
548380,276,37,2,25,66
548381,154,53,17,15,113
548382,147,87,133,58,152
548383,322,8,54,3,66
548384,57,7,147,0,103
548385,185,47,19,20,84
548386,214,88,9,41,200
598003,64,20,262,0,87
598004,208,18,57,0,96
598005,46,24,96,10,65
598006,338,20,64,0,116
598007,221,41,50,21,73
598008,345,32,53,0,77
598010,85,12,255,0,40
598011,338,28,64,0,204
598012,236,9,53,9,154
598013,162,54,8,0,115
598014,254,27,46,0,122
598015,41,12,187,0,68
598016,178,23,27,1,90
598017,23,25,19,0,132
598018,214,28,40,28,107
598019,351,27,85,20,68
598020,254,67,46,24,91
598021,216,40,9,0,109
598023,191,11,306,0,48
598024,133,1,3,1,58
598025,41,9,338,0,87
598026,331,19,355,0,76
598027,201,11,19,11,65
598028,162,26,79,25,82
598029,147,8,133,3,160
598030,358,34,27,0,163
598031,277,7,32,4,98
598032,254,0,46,0,160
598033,320,25,100,0,86
598034,216,31,9,0,101
598035,355,4,42,0,66
598036,345,19,4,10,90
598037,26,4,331,0,76
598038,162,1,8,1,65
598039,40,14,214,6,122
598040,64,12,41,2,86
598041,351,41,6,0,97
598042,320,19,4,2,104
598043,306,9,27,5,74
598044,340,25,26,0,114
598045,262,33,64,0,114
598046,320,48,4,0,169
598047,46,14,254,0,77
598048,351,23,32,17,117
598049,64,11,41,2,46
598050,321,61,53,52,242
598051,50,25,208,0,62
598052,254,45,46,42,182
598053,280,40,10,36,139
598054,41,11,64,5,113
598055,214,0,40,0,89
598056,19,52,185,0,159
598057,85,35,6,0,162
598058,46,14,254,5,62
598059,353,32,187,0,143
598060,57,4,133,0,72
598061,280,26,17,21,50
598062,9,15,214,0,60
598063,255,35,6,0,119
598064,345,8,236,0,59
598065,340,21,17,0,129
598066,31,56,284,42,106
598067,187,4,237,2,61
598068,310,12,6,0,88
598069,320,93,4,0,120
598070,327,25,362,23,52
598071,321,79,53,0,174
598072,358,44,27,0,78
598073,19,6,185,5,74
598074,214,15,40,5,107
598075,88,9,207,0,212
598076,277,0,32,0,53
598077,207,35,147,33,111
598078,208,22,57,0,63
729284,208,13,19,0,141
729286,52,43,185,0,104
729288,41,19,203,12,142
729290,362,6,187,0,99
729292,221,3,57,0,107
729294,154,24,52,0,112
729296,305,89,62,0,183
729298,147,16,2,0,58
729300,354,1,187,0,67
729302,351,16,48,0,51
729304,336,45,9,33,132
729306,355,48,185,48,148
729308,57,46,372,38,136
729310,32,24,339,0,32
729312,336,13,9,0,43
729314,372,1,57,0,50
729316,147,42,2,40,95
729318,356,23,41,0,63
729322,379,15,208,7,121
733976,46,15,9,4,88
733978,360,25,57,20,108
733980,355,22,158,14,85
733982,380,6,8,0,90
733984,85,30,339,20,169
733986,355,24,185,5,103
733988,380,9,8,0,106
733990,355,10,185,4,108
733992,320,47,41,0,162
733994,354,11,42,0,43
733996,320,39,62,13,75
733998,63,17,260,0,52
734000,383,32,208,28,147
734002,41,14,236,0,110
734004,351,13,255,0,145
734006,383,67,208,63,169
734008,314,30,32,21,70
734010,158,28,355,0,103
734012,345,11,62,0,108
734014,383,11,208,9,65
734016,351,39,85,32,82
734018,162,18,8,0,106
734020,354,14,183,0,76
734022,383,62,19,55,132
734024,88,26,185,0,84
734026,42,50,187,46,100
734028,303,23,2,0,119
734030,383,26,19,0,101
734032,276,60,31,0,149
734034,303,19,147,14,145
734036,158,34,185,8,121
734038,390,7,255,0,62
734040,384,2,8,0,73
734042,391,16,125,0,63
734044,345,42,305,0,83
734046,351,49,32,0,132
734048,345,24,41,0,101
734050,303,34,147,24,132
734052,147,1,303,0,104
734054,62,77,345,46,193
829710,308,34,31,14,178
829712,303,15,35,13,75
829714,394,30,255,0,74
829716,183,15,354,0,100
829718,40,44,46,35,104
829720,260,37,393,7,81
829722,50,64,398,32,96
829724,187,57,42,24,119
829726,221,70,372,32,102
829728,334,55,46,52,112
829730,41,7,320,3,110
829732,187,14,42,10,83
829734,383,1,17,0,103
829736,354,24,161,14,75
829738,334,66,31,28,118
829740,32,73,85,70,158
829742,383,32,17,0,83
829744,31,40,308,0,101
829748,187,91,42,36,160
829750,20,12,147,0,80
829752,393,82,154,66,161
829754,32,10,306,0,108
829756,383,20,17,17,82
829758,185,21,41,0,88
829762,260,1,393,0,98
829764,325,9,161,0,57
829766,393,35,87,25,95
829770,147,5,2,0,72
829772,393,54,260,45,100
829774,351,26,306,0,68
829776,46,17,40,12,74
829778,187,61,42,22,96
829780,41,2,185,1,112
829782,339,61,32,0,121
829784,20,1,303,0,65
829786,166,26,14,9,57
829788,221,26,57,0,90
829790,345,2,185,1,115
829792,306,25,394,7,84
829794,17,45,383,38,122
829796,185,28,345,17,76
829798,237,62,79,26,151
829800,383,18,17,0,242
829802,339,8,32,7,108
829804,187,30,42,24,95
829806,393,37,27,32,81
829808,62,31,345,1,64
829810,400,61,57,0,95
829812,187,40,42,0,97
829814,345,0,197,0,90
829816,46,5,40,1,80
829820,187,6,42,1,105
829822,383,52,17,35,87
829824,236,42,8,0,129
829826,88,18,236,0,87
829828,383,67,17,0,180
980906,85,40,303,34,82
980908,355,17,260,6,82
980910,345,38,185,37,76
980912,187,36,42,0,203
980914,400,9,17,0,125
980916,303,48,85,0,116
980918,351,33,393,0,112
980920,187,9,42,6,103
980922,254,22,2,0,60
980924,345,51,185,44,105
980926,355,74,339,54,190
980928,187,39,42,0,77
980930,185,12,345,8,95
980932,208,31,17,0,127
980934,254,0,2,0,127
980936,303,0,85,0,144
980938,393,17,351,16,87
980940,345,12,185,2,101
980942,88,28,2,0,169
980944,308,18,40,10,84
980946,345,6,100,6,145
980948,306,38,85,0,90
980950,355,1,351,1,113
980952,336,0,308,0,84
980954,306,65,79,0,129
980956,339,53,421,45,127
980958,396,45,42,0,162
980960,185,36,409,27,75
980962,306,45,79,36,133
980964,369,16,8,0,119
980966,420,69,355,44,129
980968,185,1,409,0,101
980970,339,24,420,0,75
980972,394,18,27,0,67
980974,426,16,85,10,116
980976,355,52,351,15,108
980978,413,17,57,0,106
980980,35,3,254,0,132
980982,369,27,32,0,138
980984,197,27,426,1,82
980986,407,29,208,0,97
980988,355,34,260,0,83
980990,62,56,427,0,107
980992,8,97,162,0,253
980994,426,6,85,0,56
980996,427,36,62,0,105
980998,415,33,57,0,128
981000,40,39,96,34,186
981002,339,15,393,6,62
981004,185,16,427,1,159
981006,254,26,21,21,56
981008,394,1,42,0,72
981010,427,30,185,26,89
981012,431,4,57,0,101
981014,96,44,31,41,101
981016,355,12,339,0,95
981018,433,19,71,6,109
981020,187,26,42,0,91
981022,254,35,35,16,84
981024,187,32,42,28,168


2025-01-25 03:32:38 - root - INFO - Please check the answer again by reviewing Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To find the IDs of players who scored the highest number of partnership runs for each match, we identify the partnerships with the maximum total runs in each match. For each such partnership, we provide the match ID, the IDs of the two players involved along with their individual scores, and the total partnership score. The player with the higher individual score is listed as player1; if both players have the same score, the player with the higher ID is listed as player1.

```csv
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
match_id1:int,player1_id1:int,player1_score1:int,player2_id1:int,player2_score1:int,partnership_score1:int
match_id2:int,player1_id2:int,player1_score2:int,player2_id2:int,player2_score2:int,partnership_score2:int
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Too long, hard cut:
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
335987,9,8,7,5,70
335988,26,27,28,8,100
335989,42,52,40,50,108
335990,46,15,48,10,79
335991,232,10,56,2,34
335992,35,36,32,30,129
335993,55,2,53,0,114
335994,49,8,44,0,143
335995,74,25,32,0,168
335996,71,23,43,0,70
335997,74,44,31,0,144
335998,18,34,17,21,86
335999,53,109,55,37,159
336000,86,17,40,14,86
336001,17,14,19,5,105
336002,46,37,96,0,131
336003,52,29,7,9,136
336004,100,31,27,0,99
336005,31,5,101,0,70
336006,107,13,17,7,130
336007,97,47,53,45,112
336008,29,22,24,0,144
336009,110,21,41,12,79
336010,101,32,74,27,59
336011,100,8,27,0,75
336012,58,23,53,0,62
336013,101,15,31,0,54
336014,107,0,20,0,113
336015,129,3,1,0,61
336016,53,40,97,19,162
336017,44,54,133,30,119
336018,100,44,24,0,102
336019,112,0,53,0,100
336020,110,12,40,3,77
336021,139,34,25,0,127
336022,110,1,40,0,47
336023,108,16,107,2,89
336024,138,4,33,1,136
336025,97,21,53,0,200
336026,128,0,103,0,40
336027,100,2,25,1,72
336028,130,0,8,0,90
336029,71,24,46,0,125
336030,103,53,1,0,80
336031,41,47,40,33,103
336032,95,12,1,0,100
336033,147,20,44,0,171
336034,107,29,17,24,60
336036,97,44,53,31,158
336037,44,47,133,18,85
336038,107,6,17,5,131
336039,55,37,97,0,110
336040,103,0,1,0,80
336041,69,18,101,2,85
336042,112,40,54,29,102
336043,101,39,74,25,70
336044,100,0,25,0,102
336045,31,34,69,0,94
392186,42,22,133,20,60
392187,159,9,31,4,48
392188,41,38,40,15,113
392189,162,0,1,0,69
392190,46,0,14,0,95
392191,162,32,2,21,62
392193,54,8,58,0,77
392194,155,9,21,0,90
392196,161,13,24,1,81
392197,154,39,44,0,132
392199,171,23,88,0,99
392200,31,2,137,0,81
392201,97,20,55,0,74
392202,162,5,2,1,125
392203,175,12,110,0,107
392204,132,43,9,20,63
392205,154,29,48,15,68
392206,171,3,88,0,82
392207,168,16,35,8,91
392208,133,12,48,1,96
392209,157,2,132,0,71
392210,178,24,53,0,104
392211,187,19,110,0,97
392212,104,26,1,22,78
392213,133,0,44,0,121
392214,147,48,55,0,93
392215,74,77,183,56,133
392216,176,29,2,0,130
392217,53,13,178,0,76
392218,46,6,6,0,47
392219,28,15,24,0,126
392220,135,15,40,0,84
392221,64,16,27,0,115
392222,35,16,101,0,117
392223,154,59,44,0,112
392224,88,17,135,0,86
392225,183,16,101,8,52
392226,52,35,6,12,89
392227,133,41,71,37,104
392228,112,18,53,0,81
392229,18,7,22,1,64
392230,168,25,31,0,61
392231,171,23,88,23,77
392232,154,37,48,26,130
392233,53,43,97,23,91
392234,57,0,56,0,52
392235,192,3,168,0,97
392236,197,9,17,0,105
392237,171,0,40,0,70
392238,159,0,31,0,53
392239,65,3,28,2,45
392240,154,9,44,0,80
392241,178,12,53,0,74
392242,53,9,178,2,90
392243,21,20,17,0,102
392244,97,25,56,0,70
419111,205,5,56,0,135
419112,208,55,79,51,132
419113,161,38,29,21,120
419114,132,8,9,7,113
419115,97,45,55,0,99
419116,212,29,74,0,82
419117,214,75,161,45,185
419118,20,66,23,42,120
419119,208,34,79,34,88
419120,183,16,224,8,110
419121,41,45,187,0,101
419122,161,6,26,0,66
419123,229,31,183,8,89
419124,133,3,44,2,88
419125,187,26,41,0,92
419127,204,31,1,0,132
419128,23,29,185,0,85
419129,224,21,183,13,74
419130,209,5,79,0,156
419131,97,25,53,0,77
419132,214,8,26,4,83
419133,187,33,41,10,108
419134,185,37,18,0,103
419135,231,13,53,0,76
419136,241,53,88,0,154
419137,221,20,42,18,65
419138,20,14,185,0,93
419139,40,29,237,0,111
419140,56,1,97,0,76
419141,161,25,26,0,96
419142,185,85,21,0,241
419143,208,26,71,0,89
419144,162,71,1,0,189
419145,241,36,175,19,71
419146,229,36,32,35,107
419147,185,14,18,6,64
419148,224,83,183,21,130
419149,40,47,187,0,102
419150,53,30,231,0,111
419151,227,24,26,21,89
419152,178,34,56,10,70
419153,6,38,249,24,106
419154,40,26,187,2,51
419155,229,9,32,0,75
419156,231,41,57,36,81
419157,187,31,41,5,68
419158,185,49,18,0,127
419159,158,33,46,26,63
419160,40,43,171,25,69
419161,64,63,26,0,149
419162,210,14,133,0,61
419163,254,3,31,2,112
419164,100,53,27,0,143
419165,241,16,40,0,78
419166,207,1,42,1,90
419167,96,5,8,0,72
419168,97,10,56,7,64
419169,231,0,53,0,49
419170,208,13,50,0,93
501203,21,33,185,0,101
501204,252,20,6,8,68
501205,260,1,135,1,79
501206,57,27,208,0,77
501207,171,35,74,0,60
501208,93,21,26,16,77
501209,54,42,187,39,112
501210,133,46,263,0,123
501211,264,20,100,1,157
501212,231,15,27,0,124
501213,258,0,93,0,60
501214,266,27,6,23,201
501215,133,36,263,12,166
501216,19,20,109,9,71
501217,167,63,53,61,137
501218,187,45,41,22,94
501219,169,8,252,0,58
501220,185,26,19,0,86
501221,187,3,41,0,94
501223,272,0,157,0,67
501224,214,14,9,6,67
501225,88,21,167,0,94
501226,57,33,208,24,117
501227,162,84,135,38,159
501228,167,14,53,10,160
501229,258,16,26,7,123
501230,64,12,55,8,84
501231,231,9,157,8,80
501232,25,8,187,0,84
501233,96,6,231,0,70
501234,259,0,64,0,89
501235,40,10,132,0,55
501236,192,20,32,0,49
501237,162,42,135,15,88
501238,104,14,17,0,72
501239,53,1,100,0,77
501240,287,12,96,0,76
501241,93,10,42,9,79
501242,167,32,53,0,158
501243,54,31,199,18,100
501244,258,1,10,0,77
501245,19,72,185,0,139
501246,57,7,208,0,58
501247,288,22,17,0,77
501248,258,18,26,0,125
501249,167,3,48,1,114
501250,109,30,19,0,61
501251,56,4,221,2,91
501252,162,44,135,21,107
501253,167,2,53,0,55
501254,19,46,185,28,99
501255,157,35,96,19,104
501256,289,2,56,0,59
501257,135,38,162,23,132
501258,29,6,187,0,127
501259,104,4,35,0,117
501260,110,6,8,0,72
501261,221,23,50,16,66
501262,187,14,54,1,112
501263,104,33,2,0,56
501264,157,18,96,13,90
501265,53,105,167,0,195
501266,104,12,2,0,67
501267,295,16,1,9,86
501268,178,5,133,1,138
501269,167,5,53,4,124
501271,185,4,19,0,83
501272,221,3,57,0,67
501273,139,29,8,18,106
501274,289,51,133,28,86
501275,162,62,260,41,126
501276,260,1,162,0,153
548311,304,50,133,14,67
548312,254,30,41,16,59
548313,295,12,46,8,67
548314,85,41,6,28,103
548315,312,8,29,6,66
548316,303,16,21,0,53
548317,104,44,266,20,80
548318,307,45,46,30,109
548319,57,27,304,0,83
548320,214,46,9,0,65
548321,158,40,41,0,74
548322,266,13,85,0,138
548323,21,23,303,9,132
548324,67,21,236,0,67
548325,204,30,6,0,67
548326,42,35,17,34,82
548327,157,21,307,0,125
548328,236,27,4,25,91
548329,260,0,8,0,115
548330,57,20,304,0,46
548331,26,44,42,42,145
548332,307,30,46,0,100
548333,9,30,214,0,76
548334,187,109,41,0,178
548335,303,58,23,57,127
548336,162,73,79,0,156
548337,303,40,23,15,90
548338,157,41,1,41,157
548339,275,40,57,0,131
548340,214,10,2,0,66
548341,110,59,162,0,109
548342,96,80,1,0,176
548344,57,19,221,3,104
548346,307,2,1,0,85
548347,208,54,57,0,135
548348,303,29,23,18,111
548349,40,44,2,0,110
548350,85,55,6,40,108
548351,154,5,10,0,42
548352,40,34,2,0,86
548353,328,1,1,0,154
548354,41,55,158,36,107
548355,319,19,100,0,151
548356,275,25,133,23,67
548357,21,32,303,29,128
548358,46,9,328,1,108
548359,100,14,319,2,83
548360,303,0,21,0,129
548361,313,47,42,36,171
548362,41,23,187,15,105
548363,330,30,46,11,97
548364,331,24,26,0,73
548365,275,0,57,0,91
548366,104,19,255,0,51
548367,79,25,135,0,83
548368,57,109,133,0,164
548369,41,4,187,1,79
548370,157,0,1,0,94
548371,321,11,100,0,120
548372,260,0,81,0,116
548373,40,61,2,36,189
548374,321,9,4,8,74
548375,276,13,40,0,57
548376,236,24,53,23,62
548377,262,17,54,11,228
548378,331,33,42,26,67
548379,236,0,53,0,76
548380,276,37,2,25,66
548381,154,53,17,15,113
548382,147,87,133,58,152
548383,322,8,54,3,66
548384,57,7,147,0,103
548385,185,47,19,20,84
548386,214,88,9,41,200
598003,64,20,262,0,87
598004,208,18,57,0,96
598005,46,24,96,10,65
598006,338,20,64,0,116
598007,221,41,50,21,73
598008,345,32,53,0,77
598010,85,12,255,0,40
598011,338,28,64,0,204
598012,236,9,53,9,154
598013,162,54,8,0,115
598014,254,27,46,0,122
598015,41,12,187,0,68
598016,178,23,27,1,90
598017,23,25,19,0,132
598018,214,28,40,28,107
598019,351,27,85,20,68
598020,254,67,46,24,91
598021,216,40,9,0,109
598023,191,11,306,0,48
598024,133,1,3,1,58
598025,41,9,338,0,87
598026,331,19,355,0,76
598027,201,11,19,11,65
598028,162,26,79,25,82
598029,147,8,133,3,160
598030,358,34,27,0,163
598031,277,7,32,4,98
598032,254,0,46,0,160
598033,320,25,100,0,86
598034,216,31,9,0,101
598035,355,4,42,0,66
598036,345,19,4,10,90
598037,26,4,331,0,76
598038,162,1,8,1,65
598039,40,14,214,6,122
598040,64,12,41,2,86
598041,351,41,6,0,97
598042,320,19,4,2,104
598043,306,9,27,5,74
598044,340,25,26,0,114
598045,262,33,64,0,114
598046,320,48,4,0,169
598047,46,14,254,0,77
598048,351,23,32,17,117
598049,64,11,41,2,46
598050,321,61,53,52,242
598051,50,25,208,0,62
598052,254,45,46,42,182
598053,280,40,10,36,139
598054,41,11,64,5,113
598055,214,0,40,0,89
598056,19,52,185,0,159
598057,85,35,6,0,162
598058,46,14,254,5,62
598059,353,32,187,0,143
598060,57,4,133,0,72
598061,280,26,17,21,50
598062,9,15,214,0,60
598063,255,35,6,0,119
598064,345,8,236,0,59
598065,340,21,17,0,129
598066,31,56,284,42,106
598067,187,4,237,2,61
598068,310,12,6,0,88
598069,320,93,4,0,120
598070,327,25,362,23,52
598071,321,79,53,0,174
598072,358,44,27,0,78
598073,19,6,185,5,74
598074,214,15,40,5,107
598075,88,9,207,0,212
598076,277,0,32,0,53
598077,207,35,147,33,111
598078,208,22,57,0,63
729284,208,13,19,0,141
729286,52,43,185,0,104
729288,41,19,203,12,142
729290,362,6,187,0,99
729292,221,3,57,0,107
729294,154,24,52,0,112
729296,305,89,62,0,183
729298,147,16,2,0,58
729300,354,1,187,0,67
729302,351,16,48,0,51
729304,336,45,9,33,132
729306,355,48,185,48,148
729308,57,46,372,38,136
729310,32,24,339,0,32
729312,336,13,9,0,43
729314,372,1,57,0,50
729316,147,42,2,40,95
729318,356,23,41,0,63
729322,379,15,208,7,121
733976,46,15,9,4,88
733978,360,25,57,20,108
733980,355,22,158,14,85
733982,380,6,8,0,90
733984,85,30,339,20,169
733986,355,24,185,5,103
733988,380,9,8,0,106
733990,355,10,185,4,108
733992,320,47,41,0,162
733994,354,11,42,0,43
733996,320,39,62,13,75
733998,63,17,260,0,52
734000,383,32,208,28,147
734002,41,14,236,0,110
734004,351,13,255,0,145
734006,383,67,208,63,169
734008,314,30,32,21,70
734010,158,28,355,0,103
734012,345,11,62,0,108
734014,383,11,208,9,65
734016,351,39,85,32,82
734018,162,18,8,0,106
734020,354,14,183,0,76
734022,383,62,19,55,132
734024,88,26,185,0,84
734026,42,50,187,46,100
734028,303,23,2,0,119
734030,383,26,19,0,101
734032,276,60,31,0,149
734034,303,19,147,14,145
734036,158,34,185,8,121
734038,390,7,255,0,62
734040,3
Current sql:
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END) OVER (
            PARTITION BY b."match_id", b."innings_no"
            ORDER BY b."over_id", b."ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partnerships AS (
    SELECT DISTINCT
        dw."match_id",
        dw."innings_no",
        dw."partnership_number"
    FROM deliveries_with_pn dw
),
partners AS (
    SELECT
        p."match_id",
        p."innings_no",
        p."partnership_number",
        MIN(b."player_id") AS "player1_id",
        MAX(b."player_id") AS "player2_id"
    FROM partnerships p
    JOIN (
        SELECT
            dw."match_id",
            dw."innings_no",
            dw."partnership_number",
            dw."striker" AS "player_id"
        FROM deliveries_with_pn dw
        UNION
        SELECT
            dw."match_id",
            dw."innings_no",
            dw."partnership_number",
            dw."non_striker" AS "player_id"
        FROM deliveries_with_pn dw
    ) b
        ON p."match_id" = b."match_id"
        AND p."innings_no" = b."innings_no"
        AND p."partnership_number" = b."partnership_number"
    GROUP BY p."match_id", p."innings_no", p."partnership_number"
),
partnership_runs AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        SUM(dw."runs_scored") AS "partnership_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        pr."partnership_runs",
        COALESCE(is1."player_runs", 0) AS "player1_score",
        COALESCE(is2."player_runs", 0) AS "player2_score"
    FROM partners p
    JOIN partnership_runs pr
        ON p."match_id" = pr."match_id"
        AND p."partnership_number" = pr."partnership_number"
    LEFT JOIN individual_scores is1
        ON p."match_id" = is1."match_id"
        AND p."partnership_number" = is1."partnership_number"
        AND p."player1_id" = is1."player_id"
    LEFT JOIN individual_scores is2
        ON p."match_id" = is2."match_id"
        AND p."partnership_number" = is2."partnership_number"
        AND p."player2_id" = is2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC NULLS LAST, op."player1_id" DESC NULLS LAST, op."player2_id" DESC NULLS LAST
) = 1
ORDER BY op."match_id";
2025-01-25 03:34:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:34:22 - root - INFO - ```sql
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END) OVER (
            PARTITION BY b."match_id", b."innings_no"
            ORDER BY b."over_id", b."ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partners AS (
    SELECT
        dw."match_id",
        dw."innings_no",
        dw."partnership_number",
        dw."striker" AS "player1_id",
        dw."non_striker" AS "player2_id"
    FROM (
        SELECT
            dw.*,
            ROW_NUMBER() OVER (
                PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
                ORDER BY dw."over_id", dw."ball_id"
            ) AS rn
        FROM deliveries_with_pn dw
    ) dw
    WHERE dw.rn = 1
),
partnership_runs AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        SUM(dw."runs_scored" + COALESCE(er."extra_runs", 0)) AS "partnership_runs"
    FROM deliveries_with_pn dw
    LEFT JOIN IPL.IPL."EXTRA_RUNS" er
        ON dw."match_id" = er."match_id"
        AND dw."innings_no" = er."innings_no"
        AND dw."over_id" = er."over_id"
        AND dw."ball_id" = er."ball_id"
    GROUP BY dw."match_id", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        pr."partnership_runs",
        COALESCE(is1."player_runs", 0) AS "player1_score",
        COALESCE(is2."player_runs", 0) AS "player2_score"
    FROM partners p
    JOIN partnership_runs pr
        ON p."match_id" = pr."match_id"
        AND p."partnership_number" = pr."partnership_number"
    LEFT JOIN individual_scores is1
        ON p."match_id" = is1."match_id"
        AND p."partnership_number" = is1."partnership_number"
        AND p."player1_id" = is1."player_id"
    LEFT JOIN individual_scores is2
        ON p."match_id" = is2."match_id"
        AND p."partnership_number" = is2."partnership_number"
        AND p."player2_id" = is2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC NULLS LAST, op."player1_id" DESC NULLS LAST, op."player2_id" DESC NULLS LAST
) = 1
ORDER BY op."match_id";
```
2025-01-25 03:34:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:34:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:34:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:34:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 568
2025-01-25 03:34:23 - snowflake.connector.connection - INFO - closed
2025-01-25 03:34:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:34:24 - root - INFO - itercount: 3
2025-01-25 03:34:24 - root - INFO - 0
2025-01-25 03:34:24 - root - INFO - results: 
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
335987,7,5,8,0,71
335988,26,27,27,0,102
335989,40,50,41,0,108
335990,46,15,47,0,81
335991,56,2,58,0,37
335992,32,30,34,0,130
335993,54,12,53,0,119
335994,46,41,44,0,148
335995,74,25,32,0,170
335996,46,21,43,0,71
335997,74,44,31,0,145
335998,18,34,17,21,91
335999,53,109,55,37,165
336000,40,14,42,0,88
336001,17,14,18,0,106
336002,46,37,96,0,141
336003,40,48,41,0,138
336004,100,31,27,0,101
336005,31,5,101,0,71
336006,107,13,17,7,136
336007,97,47,53,45,114
336008,29,22,24,0,151
336009,45,24,44,0,85
336010,101,32,74,27,66
336011,100,8,27,0,76
336012,107,9,125,0,64
336013,101,15,31,0,56
336014,107,0,20,0,118
336015,11,14,6,0,62
336016,53,40,97,19,165
336017,44,54,133,30,121
336018,100,44,24,0,105
336019,112,0,53,0,101
336020,74,21,33,0,86
336021,100,61,25,0,132
336022,110,1,40,0,49
336023,108,16,107,2,92
336024,138,4,33,1,137
336025,70,28,53,0,203
336026,128,0,103,0,41
336027,100,2,25,1,72
336028,130,0,8,0,96
336029,54,41,111,0,128
336030,103,53,1,0,84
336031,41,47,40,33,108
336032,95,12,1,0,102
336033,133,23,44,0,176
336034,107,29,17,24,61
336036,97,44,53,31,162
336037,44,47,133,18,85
336038,107,6,17,5,138
336039,55,37,97,0,112
336040,103,0,1,0,80
336041,69,18,101,2,88
336042,54,29,58,0,104
336043,101,39,74,25,71
336044,100,0,25,0,102
336045,32,27,69,0,96
392186,133,4,42,0,63
392187,159,9,138,0,48
392188,41,38,40,15,119
392189,162,0,1,0,72
392190,46,0,14,0,100
392191,162,32,2,21,62
392193,57,17,58,0,77
392194,155,9,21,0,90
392196,161,13,24,1,82
392197,133,34,44,0,138
392199,135,20,88,0,103
392200,31,2,137,0,83
392201,97,20,55,0,74
392202,162,5,2,1,127
392203,175,12,110,0,113
392204,132,43,9,20,64
392205,154,29,71,0,69
392206,178,22,172,0,85
392207,168,16,101,0,92
392208,133,12,50,0,97
392209,157,2,132,0,71
392210,182,36,183,0,105
392211,187,19,110,0,98
392212,104,26,2,0,80
392213,133,0,44,0,122
392214,57,21,55,0,96
392215,74,77,183,56,135
392216,176,29,2,0,132
392217,53,13,178,0,77
392218,183,19,182,0,47
392219,28,15,24,0,131
392220,135,15,40,0,84
392221,64,16,27,0,122
392222,74,5,101,0,119
392223,85,44,44,0,112
392224,110,35,135,0,89
392225,101,8,182,0,52
392226,52,39,6,0,93
392227,71,37,85,0,107
392228,112,18,53,0,84
392229,52,18,46,0,64
392230,168,25,31,0,61
392231,171,23,135,0,80
392232,154,37,133,0,143
392233,53,43,97,23,93
392234,57,0,56,0,53
392235,192,26,183,0,102
392236,197,9,17,0,109
392237,41,0,40,0,70
392238,63,40,200,0,56
392239,65,3,28,2,45
392240,133,9,44,0,80
392241,97,8,53,0,75
392242,53,9,172,0,95
392243,96,37,177,0,106
392244,97,25,56,0,72
419111,204,58,104,0,139
419112,211,12,74,0,134
419113,161,38,64,0,120
419114,132,8,9,7,113
419115,97,45,55,0,102
419116,211,29,74,0,85
419117,214,75,161,45,194
419118,23,42,21,0,121
419119,90,3,110,0,89
419120,183,16,224,8,111
419121,41,45,187,0,104
419122,161,6,26,0,66
419123,183,8,224,0,90
419124,133,3,44,2,90
419125,187,26,41,0,92
419127,162,46,1,0,134
419128,46,41,216,0,85
419129,224,21,183,13,75
419130,133,18,79,0,161
419131,224,8,183,0,79
419132,214,8,27,0,88
419133,187,33,41,10,112
419134,185,37,18,0,103
419135,231,13,53,0,84
419136,187,74,88,0,157
419137,100,16,161,0,74
419138,21,17,185,0,95
419139,230,11,211,0,112
419140,56,1,97,0,78
419141,161,25,26,0,99
419142,185,85,21,0,247
419143,79,37,71,0,91
419144,162,71,1,0,191
419145,241,36,237,0,76
419146,229,36,183,0,116
419147,185,14,18,6,65
419148,224,83,183,21,134
419149,41,46,187,0,106
419150,53,30,231,0,112
419151,227,24,64,0,89
419152,178,34,57,0,72
419153,249,24,9,0,110
419154,187,2,41,0,51
419155,229,9,32,0,79
419156,57,36,97,0,86
419157,187,31,41,5,77
419158,185,49,18,0,129
419159,252,0,183,0,64
419160,40,43,88,0,69
419161,178,26,231,0,150
419162,210,14,133,0,64
419163,31,2,183,0,112
419164,100,53,27,0,145
419165,171,12,40,0,78
419166,207,1,42,1,96
419167,208,17,154,0,77
419168,97,10,57,0,68
419169,231,0,53,0,50
419170,133,11,50,0,94
501203,125,39,185,0,102
501204,252,20,6,8,70
501205,260,1,135,1,86
501206,133,35,208,0,79
501207,157,23,74,0,61
501208,93,21,42,0,79
501209,192,13,85,0,114
501210,135,2,260,0,128
501211,185,74,21,0,160
501212,104,38,17,0,127
501213,258,0,93,0,62
501214,9,76,214,0,202
501215,133,36,263,12,179
501216,19,20,20,0,71
501217,167,63,53,61,144
501218,187,45,41,22,96
501219,229,2,252,0,62
501220,185,26,19,0,86
501221,187,3,41,0,95
501223,272,0,157,0,73
501224,214,14,9,6,72
501225,100,45,167,0,97
501226,208,24,133,0,117
501227,162,84,135,38,159
501228,167,14,53,10,163
501229,57,56,221,0,125
501230,64,12,55,8,90
501231,231,9,157,8,82
501232,162,26,135,0,86
501233,96,6,231,0,70
501234,259,0,64,0,90
501235,40,10,132,0,56
501236,208,6,133,0,50
501237,162,42,135,15,89
501238,64,7,17,0,74
501239,53,1,100,0,78
501240,287,12,96,0,79
501241,65,56,42,10,85
501242,167,32,53,0,164
501243,199,18,183,0,103
501244,42,1,10,0,82
501245,19,72,185,0,139
501246,96,11,211,0,58
501247,288,22,17,0,78
501248,154,47,26,0,127
501249,167,3,53,0,114
501250,23,31,19,0,62
501251,221,2,208,0,91
501252,162,44,135,21,108
501253,167,2,53,0,60
501254,19,46,185,28,100
501255,157,35,96,19,104
501256,289,2,133,0,71
501257,135,38,162,23,135
501258,29,6,187,0,133
501259,100,41,53,0,117
501260,110,6,8,0,72
501261,221,23,133,0,66
501262,187,14,183,0,114
501263,32,0,6,0,60
501264,157,18,96,13,90
501265,162,0,79,0,216
501266,104,12,2,0,68
501267,295,16,96,0,88
501268,178,5,133,1,139
501269,167,5,53,4,132
501271,185,4,19,0,85
501272,133,19,178,0,72
501273,21,30,23,0,108
501274,289,51,133,28,89
501275,162,62,260,41,126
501276,260,1,162,0,159
548311,304,50,133,14,70
548312,254,30,41,16,61
548313,275,15,57,0,69
548314,85,41,6,28,113
548315,110,34,175,0,69
548316,303,23,185,0,53
548317,266,20,132,0,81
548318,307,45,157,0,122
548319,57,27,304,0,85
548320,203,6,162,1,67
548321,158,40,41,0,78
548322,208,29,304,0,141
548323,303,9,185,0,141
548324,100,25,236,0,68
548325,132,23,6,0,73
548326,42,35,26,0,84
548327,157,21,307,0,127
548328,236,27,100,0,95
548329,260,0,162,0,121
548330,57,20,304,0,47
548331,26,44,42,42,156
548332,307,30,46,0,102
548333,100,15,236,0,77
548334,187,109,41,0,194
548335,303,58,23,57,129
548336,162,73,79,0,168
548337,303,0,21,0,93
548338,157,41,46,0,168
548339,275,40,57,0,132
548340,42,19,26,0,71
548341,135,47,162,0,126
548342,96,80,1,0,182
548344,57,19,88,0,113
548346,46,12,1,0,90
548347,158,26,29,0,137
548348,303,29,23,18,115
548349,162,13,135,0,112
548350,85,55,6,40,112
548351,57,18,88,0,45
548352,40,34,2,0,97
548353,328,1,1,0,164
548354,41,55,64,0,112
548355,236,16,100,0,154
548356,275,25,133,23,70
548357,303,29,185,0,132
548358,46,9,328,1,123
548359,100,14,236,0,90
548360,185,5,303,0,131
548361,313,47,42,36,177
548362,41,23,187,15,108
548363,46,11,328,0,98
548364,313,25,17,0,78
548365,275,0,133,0,95
548366,85,13,6,0,57
548367,79,25,135,0,85
548368,214,0,40,0,169
548369,41,4,187,1,80
548370,157,0,1,0,94
548371,236,18,100,0,126
548372,260,0,135,0,122
548373,40,61,2,36,195
548374,64,23,52,0,75
548375,87,27,40,0,62
548376,236,24,53,23,68
548377,262,17,187,0,232
548378,331,33,42,26,71
548379,236,0,53,0,87
548380,328,0,157,0,73
548381,154,53,26,0,117
548382,147,87,133,58,172
548383,41,10,187,7,72
548384,57,7,147,0,107
548385,185,10,21,0,88
548386,214,88,40,0,209
598003,187,21,262,0,91
598004,162,35,260,0,104
598005,46,24,96,10,70
598006,187,43,64,0,122
598007,221,41,147,0,76
598008,236,26,53,0,78
598010,216,5,31,0,47
598011,187,52,64,0,214
598012,236,9,53,9,158
598013,162,54,8,0,124
598014,254,27,46,0,127
598015,41,12,187,0,70
598016,57,47,88,0,93
598017,21,29,19,0,139
598018,214,28,40,28,116
598019,85,20,104,0,69
598020,254,67,46,24,96
598021,236,6,345,0,114
598023,327,16,340,0,49
598024,133,1,3,1,66
598025,41,9,338,0,91
598026,331,19,355,0,80
598027,201,11,19,11,70
598028,162,26,110,0,90
598029,147,8,133,3,162
598030,306,2,27,0,166
598031,32,4,85,0,102
598032,254,0,46,0,164
598033,320,25,100,0,96
598034,87,20,9,0,104
598035,355,4,42,0,66
598036,345,19,53,0,94
598037,331,0,42,0,77
598038,162,1,135,0,70
598039,40,14,214,6,127
598040,64,12,41,2,88
598041,351,41,6,0,100
598042,57,63,147,0,107
598043,27,5,46,0,75
598044,147,20,88,0,115
598045,262,33,64,0,115
598046,100,46,4,0,170
598047,79,28,162,0,77
598048,32,17,310,0,119
598049,64,11,41,2,46
598050,162,74,203,0,250
598051,57,31,208,0,62
598052,254,45,46,42,182
598053,10,36,26,0,140
598054,41,11,64,5,115
598055,214,0,40,0,90
598056,19,52,185,0,162
598057,85,35,6,0,166
598058,46,14,254,5,62
598059,262,18,187,0,149
598060,96,26,46,0,73
598061,139,2,67,0,51
598062,162,14,203,0,61
598063,35,4,185,0,120
598064,320,12,236,0,59
598065,133,28,147,0,129
598066,31,56,40,0,106
598067,187,4,192,0,62
598068,207,51,305,0,91
598069,320,93,4,0,127
598070,327,25,340,0,58
598071,321,79,53,0,178
598072,353,7,93,0,79
598073,19,6,185,5,77
598074,214,15,40,5,108
598075,147,63,207,0,214
598076,85,3,32,0,55
598077,207,35,147,33,111
598078,185,13,23,0,65
729284,207,3,19,0,145
729286,154,61,185,0,105
729288,41,19,203,12,144
729290,354,18,187,0,100
729292,208,7,57,0,108
729294,88,31,52,0,113
729296,351,23,48,0,187
729298,185,5,260,0,60
729300,305,56,203,0,69
729302,147,22,2,0,51
729304,9,33,96,0,132
729306,355,48,185,48,151
729308,372,38,207,0,136
729310,48,8,339,0,32
729312,336,13,9,0,45
729314,207,5,57,0,51
729316,147,42,2,40,100
729318,197,15,41,0,65
729322,379,15,372,0,123
733976,46,15,40,0,89
733978,360,25,208,0,113
733980,355,22,185,0,85
733982,162,26,8,0,91
733984,85,30,339,20,172
733986,355,24,185,5,115
733988,57,50,372,0,108
733990,355,10,185,4,119
733992,305,84,41,0,164
733994,339,12,85,0,44
733996,320,39,197,0,75
733998,88,35,260,0,55
734000,383,32,360,0,148
734002,41,14,236,0,111
734004,339,6,255,0,147
734006,383,67,360,0,169
734008,314,30,32,21,71
734010,260,28,355,0,111
734012,345,11,62,0,109
734014,383,11,360,0,66
734016,158,3,88,0,84
734018,162,18,8,0,107
734020,187,20,183,0,76
734022,383,62,19,55,133
734024,158,42,185,0,84
734026,42,50,187,46,104
734028,96,12,46,0,119
734030,383,26,19,0,105
734032,46,58,31,0,154
734034,303,19,147,14,146
734036,158,34,185,8,128
734038,351,4,255,0,73
734040,384,2,114,0,77
734042,46,9,40,0,70
734044,345,42,305,0,87
734046,351,49,32,0,133
734048,345,24,41,0,103
734050,303,34,147,24,136
734052,147,1,303,0,106
734054,345,46,197,0,196
829710,308,34,40,0,178
829712,303,15,147,0,75
829714,394,30,255,0,75
829716,187,23,354,0,106
829718,40,44,46,35,109
829720,260,37,393,7,81
829722,398,32,221,0,97
829724,187,57,42,24,119
829726,372,32,262,0,104
829728,303,4,2,0,116
829730,260,46,154,0,112
829732,187,14,42,10,85
829734,383,1,17,0,105
829736,161,14,187,0,76
829738,197,13,280,0,118
829740,32,73,85,70,158
829742,383,32,17,0,86
829744,87,20,393,0,101
829748,187,91,42,36,162
829750,21,41,147,0,80
829752,393,82,260,0,162
829754,32,10,85,0,108
829756,383,20,17,17,83
829758,185,21,41,0,88
829762,260,1,393,0,98
829764,163,4,161,0,57
829766,393,35,87,25,96
829770,147,5,2,0,72
829772,393,54,260,45,103
829774,351,26,306,0,70
829776,46,17,40,12,75
829778,187,61,42,22,99
829780,41,2,185,1,119
829782,393,0,260,0,123
829784,21,2,303,0,66
829786,187,4,42,0,61
829788,208,25,57,0,92
829790,345,2,185,1,118
829792,306,25,339,0,84
829794,17,45,383,38,122
829796,185,28,345,17,76
829798,237,62,154,0,153
829800,383,18,17,0,243
829802,32,7,306,0,109
829804,187,30,42,24,97
829806,393,37,154,0,81
829808,62,31,345,1,65
829810,221,24,57,0,98
829812,187,40,42,0,100
829814,345,0,197,0,90
829816,46,5,40,1,85
829820,187,6,42,1,108
829822,383,52,17,35,88
829824,110,65,8,0,131
829826,162,22,236,0,88
829828,383,67,17,0,184
980906,85,40,303,34,83
980908,355,17,260,6,85
980910,345,38,185,37,78
980912,187,36,42,0,205
980914,57,20,17,0,126
980916,303,48,85,0,119
980918,355,48,393,0,118
980920,187,9,42,6,104
980922,254,22,2,0,63
980924,345,51,185,44,105
980926,355,74,351,0,194
980928,187,39,42,0,79
980930,185,12,345,8,100
980932,57,43,17,0,129
980934,254,0,2,0,128
980936,303,0,85,0,145
980938,393,17,355,0,88
980940,345,12,185,2,101
980942,21,23,2,0,171
980944,85,25,303,0,84
980946,345,6,185,0,147
980948,303,30,85,0,96
980950,355,1,351,1,114
980952,334,15,308,0,84
980954,147,17,2,0,132
980956,339,53,351,0,140
980958,354,24,8,0,163
980960,185,36,409,27,75
980962,79,36,85,0,133
980964,32,19,8,0,125
980966,420,69,355,44,131
980968,185,1,409,0,102
980970,351,10,420,0,78
980972,254,24,2,0,69
980974,426,16,85,10,120
980976,355,52,351,15,114
980978,208,6,57,0,107
980980,276,66,308,0,133
980982,185,42,320,0,139
980984,396,9,42,0,82
980986,354,22,32,0,103
980988,355,10,260,10,86
980990,185,50,427,0,114
980992,8,97,162,0,256
980994,426,6,85,0,58
980996,427,36,62,0,107
980998,415,33,57,0,132
981000,40,39,46,0,187
981002,393,6,355,0,65
981004,185,16,427,1,160
981006,67,4,46,0,57
981008,420,31,355,0,72
981010,427,30,185,26,91
981012,415,4,57,0,102
981014,96,44,40,0,103
981016,355,12,339,0,95
981018,110,51,255,0,119
981020,187,26,42,0,96
981022,254,35,147,0,84
981024,187,32,42,28,170


2025-01-25 03:34:24 - root - INFO - Please check the answer again by reviewing Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To find the IDs of players who scored the highest number of partnership runs for each match, we identify the partnerships with the maximum total runs in each match. For each such partnership, we provide the match ID, the IDs of the two players involved along with their individual scores, and the total partnership score. The player with the higher individual score is listed as player1; if both players have the same score, the player with the higher ID is listed as player1.

```csv
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
match_id1:int,player1_id1:int,player1_score1:int,player2_id1:int,player2_score1:int,partnership_score1:int
match_id2:int,player1_id2:int,player1_score2:int,player2_id2:int,player2_score2:int,partnership_score2:int
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Too long, hard cut:
match_id,player1_id,player1_score,player2_id,player2_score,partnership_score
335987,7,5,8,0,71
335988,26,27,27,0,102
335989,40,50,41,0,108
335990,46,15,47,0,81
335991,56,2,58,0,37
335992,32,30,34,0,130
335993,54,12,53,0,119
335994,46,41,44,0,148
335995,74,25,32,0,170
335996,46,21,43,0,71
335997,74,44,31,0,145
335998,18,34,17,21,91
335999,53,109,55,37,165
336000,40,14,42,0,88
336001,17,14,18,0,106
336002,46,37,96,0,141
336003,40,48,41,0,138
336004,100,31,27,0,101
336005,31,5,101,0,71
336006,107,13,17,7,136
336007,97,47,53,45,114
336008,29,22,24,0,151
336009,45,24,44,0,85
336010,101,32,74,27,66
336011,100,8,27,0,76
336012,107,9,125,0,64
336013,101,15,31,0,56
336014,107,0,20,0,118
336015,11,14,6,0,62
336016,53,40,97,19,165
336017,44,54,133,30,121
336018,100,44,24,0,105
336019,112,0,53,0,101
336020,74,21,33,0,86
336021,100,61,25,0,132
336022,110,1,40,0,49
336023,108,16,107,2,92
336024,138,4,33,1,137
336025,70,28,53,0,203
336026,128,0,103,0,41
336027,100,2,25,1,72
336028,130,0,8,0,96
336029,54,41,111,0,128
336030,103,53,1,0,84
336031,41,47,40,33,108
336032,95,12,1,0,102
336033,133,23,44,0,176
336034,107,29,17,24,61
336036,97,44,53,31,162
336037,44,47,133,18,85
336038,107,6,17,5,138
336039,55,37,97,0,112
336040,103,0,1,0,80
336041,69,18,101,2,88
336042,54,29,58,0,104
336043,101,39,74,25,71
336044,100,0,25,0,102
336045,32,27,69,0,96
392186,133,4,42,0,63
392187,159,9,138,0,48
392188,41,38,40,15,119
392189,162,0,1,0,72
392190,46,0,14,0,100
392191,162,32,2,21,62
392193,57,17,58,0,77
392194,155,9,21,0,90
392196,161,13,24,1,82
392197,133,34,44,0,138
392199,135,20,88,0,103
392200,31,2,137,0,83
392201,97,20,55,0,74
392202,162,5,2,1,127
392203,175,12,110,0,113
392204,132,43,9,20,64
392205,154,29,71,0,69
392206,178,22,172,0,85
392207,168,16,101,0,92
392208,133,12,50,0,97
392209,157,2,132,0,71
392210,182,36,183,0,105
392211,187,19,110,0,98
392212,104,26,2,0,80
392213,133,0,44,0,122
392214,57,21,55,0,96
392215,74,77,183,56,135
392216,176,29,2,0,132
392217,53,13,178,0,77
392218,183,19,182,0,47
392219,28,15,24,0,131
392220,135,15,40,0,84
392221,64,16,27,0,122
392222,74,5,101,0,119
392223,85,44,44,0,112
392224,110,35,135,0,89
392225,101,8,182,0,52
392226,52,39,6,0,93
392227,71,37,85,0,107
392228,112,18,53,0,84
392229,52,18,46,0,64
392230,168,25,31,0,61
392231,171,23,135,0,80
392232,154,37,133,0,143
392233,53,43,97,23,93
392234,57,0,56,0,53
392235,192,26,183,0,102
392236,197,9,17,0,109
392237,41,0,40,0,70
392238,63,40,200,0,56
392239,65,3,28,2,45
392240,133,9,44,0,80
392241,97,8,53,0,75
392242,53,9,172,0,95
392243,96,37,177,0,106
392244,97,25,56,0,72
419111,204,58,104,0,139
419112,211,12,74,0,134
419113,161,38,64,0,120
419114,132,8,9,7,113
419115,97,45,55,0,102
419116,211,29,74,0,85
419117,214,75,161,45,194
419118,23,42,21,0,121
419119,90,3,110,0,89
419120,183,16,224,8,111
419121,41,45,187,0,104
419122,161,6,26,0,66
419123,183,8,224,0,90
419124,133,3,44,2,90
419125,187,26,41,0,92
419127,162,46,1,0,134
419128,46,41,216,0,85
419129,224,21,183,13,75
419130,133,18,79,0,161
419131,224,8,183,0,79
419132,214,8,27,0,88
419133,187,33,41,10,112
419134,185,37,18,0,103
419135,231,13,53,0,84
419136,187,74,88,0,157
419137,100,16,161,0,74
419138,21,17,185,0,95
419139,230,11,211,0,112
419140,56,1,97,0,78
419141,161,25,26,0,99
419142,185,85,21,0,247
419143,79,37,71,0,91
419144,162,71,1,0,191
419145,241,36,237,0,76
419146,229,36,183,0,116
419147,185,14,18,6,65
419148,224,83,183,21,134
419149,41,46,187,0,106
419150,53,30,231,0,112
419151,227,24,64,0,89
419152,178,34,57,0,72
419153,249,24,9,0,110
419154,187,2,41,0,51
419155,229,9,32,0,79
419156,57,36,97,0,86
419157,187,31,41,5,77
419158,185,49,18,0,129
419159,252,0,183,0,64
419160,40,43,88,0,69
419161,178,26,231,0,150
419162,210,14,133,0,64
419163,31,2,183,0,112
419164,100,53,27,0,145
419165,171,12,40,0,78
419166,207,1,42,1,96
419167,208,17,154,0,77
419168,97,10,57,0,68
419169,231,0,53,0,50
419170,133,11,50,0,94
501203,125,39,185,0,102
501204,252,20,6,8,70
501205,260,1,135,1,86
501206,133,35,208,0,79
501207,157,23,74,0,61
501208,93,21,42,0,79
501209,192,13,85,0,114
501210,135,2,260,0,128
501211,185,74,21,0,160
501212,104,38,17,0,127
501213,258,0,93,0,62
501214,9,76,214,0,202
501215,133,36,263,12,179
501216,19,20,20,0,71
501217,167,63,53,61,144
501218,187,45,41,22,96
501219,229,2,252,0,62
501220,185,26,19,0,86
501221,187,3,41,0,95
501223,272,0,157,0,73
501224,214,14,9,6,72
501225,100,45,167,0,97
501226,208,24,133,0,117
501227,162,84,135,38,159
501228,167,14,53,10,163
501229,57,56,221,0,125
501230,64,12,55,8,90
501231,231,9,157,8,82
501232,162,26,135,0,86
501233,96,6,231,0,70
501234,259,0,64,0,90
501235,40,10,132,0,56
501236,208,6,133,0,50
501237,162,42,135,15,89
501238,64,7,17,0,74
501239,53,1,100,0,78
501240,287,12,96,0,79
501241,65,56,42,10,85
501242,167,32,53,0,164
501243,199,18,183,0,103
501244,42,1,10,0,82
501245,19,72,185,0,139
501246,96,11,211,0,58
501247,288,22,17,0,78
501248,154,47,26,0,127
501249,167,3,53,0,114
501250,23,31,19,0,62
501251,221,2,208,0,91
501252,162,44,135,21,108
501253,167,2,53,0,60
501254,19,46,185,28,100
501255,157,35,96,19,104
501256,289,2,133,0,71
501257,135,38,162,23,135
501258,29,6,187,0,133
501259,100,41,53,0,117
501260,110,6,8,0,72
501261,221,23,133,0,66
501262,187,14,183,0,114
501263,32,0,6,0,60
501264,157,18,96,13,90
501265,162,0,79,0,216
501266,104,12,2,0,68
501267,295,16,96,0,88
501268,178,5,133,1,139
501269,167,5,53,4,132
501271,185,4,19,0,85
501272,133,19,178,0,72
501273,21,30,23,0,108
501274,289,51,133,28,89
501275,162,62,260,41,126
501276,260,1,162,0,159
548311,304,50,133,14,70
548312,254,30,41,16,61
548313,275,15,57,0,69
548314,85,41,6,28,113
548315,110,34,175,0,69
548316,303,23,185,0,53
548317,266,20,132,0,81
548318,307,45,157,0,122
548319,57,27,304,0,85
548320,203,6,162,1,67
548321,158,40,41,0,78
548322,208,29,304,0,141
548323,303,9,185,0,141
548324,100,25,236,0,68
548325,132,23,6,0,73
548326,42,35,26,0,84
548327,157,21,307,0,127
548328,236,27,100,0,95
548329,260,0,162,0,121
548330,57,20,304,0,47
548331,26,44,42,42,156
548332,307,30,46,0,102
548333,100,15,236,0,77
548334,187,109,41,0,194
548335,303,58,23,57,129
548336,162,73,79,0,168
548337,303,0,21,0,93
548338,157,41,46,0,168
548339,275,40,57,0,132
548340,42,19,26,0,71
548341,135,47,162,0,126
548342,96,80,1,0,182
548344,57,19,88,0,113
548346,46,12,1,0,90
548347,158,26,29,0,137
548348,303,29,23,18,115
548349,162,13,135,0,112
548350,85,55,6,40,112
548351,57,18,88,0,45
548352,40,34,2,0,97
548353,328,1,1,0,164
548354,41,55,64,0,112
548355,236,16,100,0,154
548356,275,25,133,23,70
548357,303,29,185,0,132
548358,46,9,328,1,123
548359,100,14,236,0,90
548360,185,5,303,0,131
548361,313,47,42,36,177
548362,41,23,187,15,108
548363,46,11,328,0,98
548364,313,25,17,0,78
548365,275,0,133,0,95
548366,85,13,6,0,57
548367,79,25,135,0,85
548368,214,0,40,0,169
548369,41,4,187,1,80
548370,157,0,1,0,94
548371,236,18,100,0,126
548372,260,0,135,0,122
548373,40,61,2,36,195
548374,64,23,52,0,75
548375,87,27,40,0,62
548376,236,24,53,23,68
548377,262,17,187,0,232
548378,331,33,42,26,71
548379,236,0,53,0,87
548380,328,0,157,0,73
548381,154,53,26,0,117
548382,147,87,133,58,172
548383,41,10,187,7,72
548384,57,7,147,0,107
548385,185,10,21,0,88
548386,214,88,40,0,209
598003,187,21,262,0,91
598004,162,35,260,0,104
598005,46,24,96,10,70
598006,187,43,64,0,122
598007,221,41,147,0,76
598008,236,26,53,0,78
598010,216,5,31,0,47
598011,187,52,64,0,214
598012,236,9,53,9,158
598013,162,54,8,0,124
598014,254,27,46,0,127
598015,41,12,187,0,70
598016,57,47,88,0,93
598017,21,29,19,0,139
598018,214,28,40,28,116
598019,85,20,104,0,69
598020,254,67,46,24,96
598021,236,6,345,0,114
598023,327,16,340,0,49
598024,133,1,3,1,66
598025,41,9,338,0,91
598026,331,19,355,0,80
598027,201,11,19,11,70
598028,162,26,110,0,90
598029,147,8,133,3,162
598030,306,2,27,0,166
598031,32,4,85,0,102
598032,254,0,46,0,164
598033,320,25,100,0,96
598034,87,20,9,0,104
598035,355,4,42,0,66
598036,345,19,53,0,94
598037,331,0,42,0,77
598038,162,1,135,0,70
598039,40,14,214,6,127
598040,64,12,41,2,88
598041,351,41,6,0,100
598042,57,63,147,0,107
598043,27,5,46,0,75
598044,147,20,88,0,115
598045,262,33,64,0,115
598046,100,46,4,0,170
598047,79,28,162,0,77
598048,32,17,310,0,119
598049,64,11,41,2,46
598050,162,74,203,0,250
598051,57,31,208,0,62
598052,254,45,46,42,182
598053,10,36,26,0,140
598054,41,11,64,5,115
598055,214,0,40,0,90
598056,19,52,185,0,162
598057,85,35,6,0,166
598058,46,14,254,5,62
598059,262,18,187,0,149
598060,96,26,46,0,73
598061,139,2,67,0,51
598062,162,14,203,0,61
598063,35,4,185,0,120
598064,320,12,236,0,59
598065,133,28,147,0,129
598066,31,56,40,0,106
598067,187,4,192,0,62
598068,207,51,305,0,91
598069,320,93,4,0,127
598070,327,25,340,0,58
598071,321,79,53,0,178
598072,353,7,93,0,79
598073,19,6,185,5,77
598074,214,15,40,5,108
598075,147,63,207,0,214
598076,85,3,32,0,55
598077,207,35,147,33,111
598078,185,13,23,0,65
729284,207,3,19,0,145
729286,154,61,185,0,105
729288,41,19,203,12,144
729290,354,18,187,0,100
729292,208,7,57,0,108
729294,88,31,52,0,113
729296,351,23,48,0,187
729298,185,5,260,0,60
729300,305,56,203,0,69
729302,147,22,2,0,51
729304,9,33,96,0,132
729306,355,48,185,48,151
729308,372,38,207,0,136
729310,48,8,339,0,32
729312,336,13,9,0,45
729314,207,5,57,0,51
729316,147,42,2,40,100
729318,197,15,41,0,65
729322,379,15,372,0,123
733976,46,15,40,0,89
733978,360,25,208,0,113
733980,355,22,185,0,85
733982,162,26,8,0,91
733984,85,30,339,20,172
733986,355,24,185,5,115
733988,57,50,372,0,108
733990,355,10,185,4,119
733992,305,84,41,0,164
733994,339,12,85,0,44
733996,320,39,197,0,75
733998,88,35,260,0,55
734000,383,32,360,0,148
734002,41,14,236,0,111
734004,339,6,255,0,147
734006,383,67,360,0,169
734008,314,30,32,21,71
734010,260,28,355,0,111
734012,345,11,62,0,109
734014,383,11,360,0,66
734016,158,3,88,0,84
734018,162,18,8,0,107
734020,187,20,183,0,76
734022,383,62,19,55,133
734024,158,42,185,0,84
734026,42,50,187,46,104
734028,96,12,46,0,119
734030,383,26,19,0,105
734032,46,58,31,0,154
734034,303,19,147,14,146
734036,158,34,185,8,128
734038,351,4,255,0,73
734040,384,2,
Current sql:
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END) OVER (
            PARTITION BY b."match_id", b."innings_no"
            ORDER BY b."over_id", b."ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partners AS (
    SELECT
        dw."match_id",
        dw."innings_no",
        dw."partnership_number",
        dw."striker" AS "player1_id",
        dw."non_striker" AS "player2_id"
    FROM (
        SELECT
            dw.*,
            ROW_NUMBER() OVER (
                PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
                ORDER BY dw."over_id", dw."ball_id"
            ) AS rn
        FROM deliveries_with_pn dw
    ) dw
    WHERE dw.rn = 1
),
partnership_runs AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        SUM(dw."runs_scored" + COALESCE(er."extra_runs", 0)) AS "partnership_runs"
    FROM deliveries_with_pn dw
    LEFT JOIN IPL.IPL."EXTRA_RUNS" er
        ON dw."match_id" = er."match_id"
        AND dw."innings_no" = er."innings_no"
        AND dw."over_id" = er."over_id"
        AND dw."ball_id" = er."ball_id"
    GROUP BY dw."match_id", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        pr."partnership_runs",
        COALESCE(is1."player_runs", 0) AS "player1_score",
        COALESCE(is2."player_runs", 0) AS "player2_score"
    FROM partners p
    JOIN partnership_runs pr
        ON p."match_id" = pr."match_id"
        AND p."partnership_number" = pr."partnership_number"
    LEFT JOIN individual_scores is1
        ON p."match_id" = is1."match_id"
        AND p."partnership_number" = is1."partnership_number"
        AND p."player1_id" = is1."player_id"
    LEFT JOIN individual_scores is2
        ON p."match_id" = is2."match_id"
        AND p."partnership_number" = is2."partnership_number"
        AND p."player2_id" = is2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC NULLS LAST, op."player1_id" DESC NULLS LAST, op."player2_id" DESC NULLS LAST
) = 1
ORDER BY op."match_id";
2025-01-25 03:35:15 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 03:35:15 - root - INFO - ```sql
WITH deliveries_with_pn AS (
    SELECT
        b."match_id",
        b."innings_no",
        b."over_id",
        b."ball_id",
        b."striker",
        b."non_striker",
        s."runs_scored",
        CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END AS "wicket_fell",
        SUM(CASE WHEN w."player_out" IS NOT NULL THEN 1 ELSE 0 END) OVER (
            PARTITION BY b."match_id", b."innings_no"
            ORDER BY b."over_id", b."ball_id"
            ROWS UNBOUNDED PRECEDING
        ) AS "partnership_number"
    FROM IPL.IPL."BALL_BY_BALL" b
    JOIN IPL.IPL."BATSMAN_SCORED" s
        ON b."match_id" = s."match_id"
        AND b."innings_no" = s."innings_no"
        AND b."over_id" = s."over_id"
        AND b."ball_id" = s."ball_id"
    LEFT JOIN IPL.IPL."WICKET_TAKEN" w
        ON b."match_id" = w."match_id"
        AND b."innings_no" = w."innings_no"
        AND b."over_id" = w."over_id"
        AND b."ball_id" = w."ball_id"
),
partners AS (
    SELECT
        dw."match_id",
        dw."innings_no",
        dw."partnership_number",
        dw."striker" AS "player1_id",
        dw."non_striker" AS "player2_id"
    FROM (
        SELECT
            dw.*,
            ROW_NUMBER() OVER (
                PARTITION BY dw."match_id", dw."innings_no", dw."partnership_number"
                ORDER BY dw."over_id", dw."ball_id"
            ) AS rn
        FROM deliveries_with_pn dw
    ) dw
    WHERE dw.rn = 1
),
partnership_runs AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        SUM(dw."runs_scored" + COALESCE(er."extra_runs", 0)) AS "partnership_runs"
    FROM deliveries_with_pn dw
    LEFT JOIN IPL.IPL."EXTRA_RUNS" er
        ON dw."match_id" = er."match_id"
        AND dw."innings_no" = er."innings_no"
        AND dw."over_id" = er."over_id"
        AND dw."ball_id" = er."ball_id"
    GROUP BY dw."match_id", dw."partnership_number"
),
individual_scores AS (
    SELECT
        dw."match_id",
        dw."partnership_number",
        dw."striker" AS "player_id",
        SUM(dw."runs_scored") AS "player_runs"
    FROM deliveries_with_pn dw
    GROUP BY dw."match_id", dw."partnership_number", dw."striker"
),
partnerships_with_scores AS (
    SELECT
        p."match_id",
        p."player1_id",
        p."player2_id",
        pr."partnership_runs",
        COALESCE(is1."player_runs", 0) AS "player1_score",
        COALESCE(is2."player_runs", 0) AS "player2_score"
    FROM partners p
    JOIN partnership_runs pr
        ON p."match_id" = pr."match_id"
        AND p."partnership_number" = pr."partnership_number"
    LEFT JOIN individual_scores is1
        ON p."match_id" = is1."match_id"
        AND p."partnership_number" = is1."partnership_number"
        AND p."player1_id" = is1."player_id"
    LEFT JOIN individual_scores is2
        ON p."match_id" = is2."match_id"
        AND p."partnership_number" = is2."partnership_number"
        AND p."player2_id" = is2."player_id"
),
ordered_partnerships AS (
    SELECT
        pws."match_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_id"
            ELSE pws."player2_id"
        END AS "player1_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player1_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player2_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player1_score"
            ELSE pws."player2_score"
        END AS "player1_score",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_id"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_id"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_id"
            ELSE pws."player1_id"
        END AS "player2_id",
        CASE
            WHEN pws."player1_score" > pws."player2_score" THEN pws."player2_score"
            WHEN pws."player2_score" > pws."player1_score" THEN pws."player1_score"
            WHEN pws."player1_id" > pws."player2_id" THEN pws."player2_score"
            ELSE pws."player1_score"
        END AS "player2_score",
        pws."partnership_runs" AS "partnership_score"
    FROM partnerships_with_scores pws
)
SELECT
    op."match_id",
    op."player1_id",
    op."player1_score",
    op."player2_id",
    op."player2_score",
    op."partnership_score"
FROM ordered_partnerships op
QUALIFY ROW_NUMBER() OVER (
    PARTITION BY op."match_id"
    ORDER BY op."partnership_score" DESC NULLS LAST, op."player1_id" DESC NULLS LAST, op."player2_id" DESC NULLS LAST
) = 1
ORDER BY op."match_id";
```
2025-01-25 03:35:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 03:35:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 03:35:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 03:35:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 568
2025-01-25 03:35:17 - snowflake.connector.connection - INFO - closed
2025-01-25 03:35:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 03:35:17 - root - INFO - itercount: 4
2025-01-25 03:35:17 - root - INFO - 0
2025-01-25 03:35:17 - root - INFO - Total iteration counts: 4
