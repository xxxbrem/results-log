2025-01-25 11:48:23 - openai._base_client - INFO - Retrying request to /chat/completions in 0.411401 seconds
2025-01-25 11:48:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:48:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:48:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:48:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:48:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:48:59 - snowflake.connector.connection - INFO - closed
2025-01-25 11:48:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:48:59 - root - INFO - SQL:
SELECT "station_id", "station_name", "borough_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
   LIMIT 100;
Results:
station_id,station_name,borough_name
1,Astoria - Ditmars Blvd,Queens
2,Astoria Blvd,Queens
3,30 Av,Queens
4,Broadway,Queens
5,36 Av,Queens
6,39 Av,Queens
7,Lexington Av/59 St,Manhattan
8,5 Av/59 St,Manhattan
9,57 St - 7 Av,Manhattan
10,49 St,Manhattan
11,Times Sq - 42 St,Manhattan
12,34 St - Herald Sq,Manhattan
13,28 St,Manhattan
14,23 St,Manhattan
15,14 St - Union Sq,Manhattan
16,8 St - NYU,Manhattan
17,Prince St,Manhattan
18,Canal St,Manhattan
19,Canal St,Manhattan
20,City Hall,Manhattan
21,Cortlandt St,Manhattan
22,Rector St,Manhattan
23,Whitehall St,Manhattan
24,Court St,Brooklyn
25,Jay St - MetroTech,Brooklyn
26,DeKalb Av,Brooklyn
27,Atlantic Av - Barclays Ctr,Brooklyn
28,Union St,Brooklyn
29,9 St,Brooklyn
30,Prospect Av,Brooklyn
31,25 St,Brooklyn
32,36 St,Brooklyn
33,45 St,Brooklyn
34,53 St,Brooklyn
35,59 St,Brooklyn
36,Bay Ridge Av,Brooklyn
37,77 St,Brooklyn
38,86 St,Brooklyn
39,Bay Ridge - 95 St,Brooklyn
40,Atlantic Av - Barclays Ctr,Brooklyn
41,7 Av,Brooklyn
42,Prospect Park,Brooklyn
43,Parkside Av,Brooklyn
44,Church Av,Brooklyn
45,Beverley Rd,Brooklyn
46,Cortelyou Rd,Brooklyn
47,Newkirk Plaza,Brooklyn
48,Avenue H,Brooklyn
49,Avenue J,Brooklyn
50,Avenue M,Brooklyn
51,Kings Hwy,Brooklyn
52,Avenue U,Brooklyn
53,Neck Rd,Brooklyn
54,Sheepshead Bay,Brooklyn
55,Brighton Beach,Brooklyn
56,Ocean Pkwy,Brooklyn
57,W 8 St - NY Aquarium,Brooklyn
58,Coney Island - Stillwell Av,Brooklyn
59,9 Av,Brooklyn
60,Fort Hamilton Pkwy,Brooklyn
61,50 St,Brooklyn
62,55 St,Brooklyn
63,62 St,Brooklyn
64,71 St,Brooklyn
65,79 St,Brooklyn
66,18 Av,Brooklyn
67,20 Av,Brooklyn
68,Bay Pkwy,Brooklyn
69,25 Av,Brooklyn
70,Bay 50 St,Brooklyn
71,8 Av,Brooklyn
72,Fort Hamilton Pkwy,Brooklyn
73,New Utrecht Av,Brooklyn
74,18 Av,Brooklyn
75,20 Av,Brooklyn
76,Bay Pkwy,Brooklyn
77,Kings Hwy,Brooklyn
78,Avenue U,Brooklyn
79,86 St,Brooklyn
80,121 St,Queens
81,111 St,Queens
82,104 St,Queens
83,Woodhaven Blvd,Queens
84,85 St - Forest Pkwy,Queens
85,75 St,Queens
86,Cypress Hills,Brooklyn
87,Crescent St,Brooklyn
88,Norwood Av,Brooklyn
89,Cleveland St,Brooklyn
90,Van Siclen Av,Brooklyn
91,Alabama Av,Brooklyn
92,Broadway Jct,Brooklyn
93,Chauncey St,Brooklyn
94,Halsey St,Brooklyn
95,Gates Av,Brooklyn
96,Kosciuszko St,Brooklyn
97,Myrtle Av,Brooklyn
98,Flushing Av,Brooklyn
99,Lorimer St,Brooklyn
100,Hewes St,Brooklyn

2025-01-25 11:48:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:48:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:48:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:01 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:01 - root - INFO - SQL:
SELECT "station_name", "entrance_lat", "entrance_lon", "ada_compliant"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   LIMIT 100;
Results:
station_name,entrance_lat,entrance_lon,ada_compliant
Wall St,40.706506,-74.009544,False
Wall St,40.706392,-74.009332,False
Wall St,40.706272,-74.009447,False
Wall St,40.706755,-74.008804,False
Wall St,40.706385,-74.009658,False
Wall St,40.707431,-74.008778,False
Fulton St,40.709475,-74.006409,False
Fulton St,40.7092,-74.006664,False
Fulton St,40.70863,-74.006999,False
Fulton St,40.709046,-74.006814,False
Clark St,40.69759,-73.993275,False
Clark St,40.697649,-73.99306,False
Borough Hall,40.693594,-73.990304,True
Borough Hall,40.693569,-73.990599,True
Borough Hall,40.693728,-73.99063,True
Borough Hall,40.693838,-73.990119,True
Park Place,40.712712,-74.007766,False
Harlem-148th St,40.824069,-73.936981,False
135th St,40.814188,-73.940618,True
135th St,40.814024,-73.941117,True
135th St,40.813896,-73.940831,True
135th St,40.814316,-73.94091,True
125th St,40.807875,-73.945229,False
125th St,40.807995,-73.945524,False
125th St,40.807681,-73.945752,False
125th St,40.807548,-73.945463,False
110th St-Central Park North,40.799033,-73.952058,False
110th St-Central Park North,40.798497,-73.952672,False
145th St,40.820602,-73.935933,False
145th St,40.820662,-73.936275,False
145th St,40.820161,-73.936253,False
145th St,40.820343,-73.936508,False
116th St,40.801945,-73.949943,False
116th St,40.802229,-73.949734,False
116th St,40.802111,-73.949437,False
116th St,40.801822,-73.949651,False
18th Av,40.630531,-73.977251,False
18th Av,40.630562,-73.976995,False
18th Av,40.628674,-73.976892,False
18th Av,40.628708,-73.976646,False
Av N,40.61616,-73.97427,False
Av N,40.616121,-73.974507,False
Av N,40.614304,-73.97391,False
Av N,40.614279,-73.97418,False
Av I,40.626163,-73.976177,False
Av I,40.624263,-73.976049,False
Av I,40.626133,-73.976407,False
Av I,40.624301,-73.975817,False
Kings Highway,40.602178,-73.972379,False
Kings Highway,40.602197,-73.97264,False
Kings Highway,40.604007,-73.972393,False
Kings Highway,40.603999,-73.972124,False
Av P,40.609041,-73.972904,False
Av P,40.608615,-73.973097,False
Bay Parkway-22nd Av,40.620825,-73.975138,False
Bay Parkway-22nd Av,40.620797,-73.975479,False
Bay Parkway-22nd Av,40.621162,-73.975467,False
Av U,40.595053,-73.973623,False
Av U,40.595027,-73.973382,False
Av U,40.596897,-73.973137,False
Av U,40.596701,-73.973402,False
Ditmas Av,40.637093,-73.978463,False
Ditmas Av,40.637107,-73.978257,False
Ditmas Av,40.635389,-73.977914,False
Ditmas Av,40.635434,-73.978289,False
Av X,40.590521,-73.974242,False
Av X,40.590266,-73.974051,False
Neptune Av-Van Siclen,40.580547,-73.974778,False
Neptune Av-Van Siclen,40.580576,-73.974443,False
Franklin Av,40.681256,-73.95559,True
Ralph Av,40.678702,-73.921552,False
Ralph Av,40.678984,-73.921442,False
Ralph Av,40.679164,-73.92187,False
Lafayette Av,40.685559,-73.9729,False
Lafayette Av,40.686041,-73.974278,False
Lafayette Av,40.686409,-73.974347,False
Lafayette Av,40.686119,-73.974517,False
Lafayette Av,40.685789,-73.97276,False
Lafayette Av,40.686077,-73.973308,False
Lafayette Av,40.6857,-73.973526,False
Lafayette Av,40.685969,-73.973021,False
Lafayette Av,40.686553,-73.974606,False
Utica Av,40.679095,-73.930044,False
Utica Av,40.679346,-73.931987,False
Utica Av,40.67953,-73.932021,False
Utica Av,40.679487,-73.929725,False
Euclid Av,40.675301,-73.871801,True
Euclid Av,40.675533,-73.871742,True
Euclid Av,40.675478,-73.872109,True
Euclid Av,40.675274,-73.872115,True
Euclid Av,40.675554,-73.871875,True
Shepherd Av,40.673989,-73.880869,False
Shepherd Av,40.67397,-73.880667,False
Shepherd Av,40.674303,-73.880749,False
Shepherd Av,40.674234,-73.880927,False
Nostrand Av,40.680228,-73.949414,False
Nostrand Av,40.680572,-73.949753,False
Nostrand Av,40.680262,-73.949635,False
Nostrand Av,40.680547,-73.949515,False
Kingston-Throop,40.679804,-73.941119,False

2025-01-25 11:49:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-25 11:49:03 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:03 - root - INFO - SQL:
SELECT DISTINCT "station_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   LIMIT 100;
Results:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St

2025-01-25 11:49:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-25 11:49:04 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:05 - root - INFO - SQL:
SELECT "station_name", COUNT(*) AS "ada_entrance_count"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   GROUP BY "station_name"
   LIMIT 100;
Results:
station_name,ada_entrance_count
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,10
42nd St,9
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,6
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,9
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,6
Times Square,9
South Ferry,5
Chambers St,5
Jackson Heights-Roosevelt Ave,7
21st St,5
59th St-Columbus Circle,5
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,8
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,7
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,7
72nd St,4

2025-01-25 11:49:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:06 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:06 - root - INFO - SQL:
SELECT "station_name",
          COUNT(*) AS "total_entrances",
          SUM(CASE WHEN "ada_compliant" = TRUE THEN 1 ELSE 0 END) AS "ada_entrances"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   GROUP BY "station_name"
   LIMIT 100;
Results:
station_name,total_entrances,ada_entrances
Wall St,14,0
Fulton St,17,0
Clark St,2,0
Borough Hall,9,9
Park Place,3,2
Harlem-148th St,1,0
135th St,10,4
125th St,19,5
145th St,13,0
116th St,12,0
18th Av,9,0
Av N,4,0
Kings Highway,9,0
Ditmas Av,4,0
Av X,2,0
Neptune Av-Van Siclen,2,0
Franklin Av,6,2
Ralph Av,3,0
Shepherd Av,4,0
Kingston-Throop,4,0
183rd St,3,0
Kingsbridge Rd,8,0
176th St,2,0
Knickerbocker Av,2,0
Forest Av,2,0
Central Av,2,0
Seneca Av,2,0
Broad St,9,0
St Lawrence Av,2,0
Cypress Av,4,0
Zerega Av,2,0
Parkchester-East 177th St,1,0
138th St-3rd Ave,7,0
Bay Parkway-22nd Av,5,0
Lafayette Av,9,0
Yankee Stadium-161st St,16,16
149th St-Grand Concourse,4,0
Woodlawn,2,0
170th St,8,0
Mosholu Parkway,4,0
Canal St,17,7
Chambers St,16,5
Brook Av,4,0
Pelham Bay Park,5,5
Broadway,7,0
Ditmars Blvd,4,0
Astoria Blvd-Hoyt Av,4,0
88th St-Boyd Av,2,0
95th St,5,0
Union St,4,0
Atlantic Av-Barclays Ctr,2,2
36th St,8,0
Cathedral Parkway-110th St,6,0
Av J,3,0
Atlantic Av,4,1
Av M,2,0
5th Av,10,0
34th St,41,41
49th St,7,7
Beach 98th St,3,0
Aqueduct Racetrack,1,0
20th Av,5,0
Freeman St,4,0
Av I,4,0
Av P,2,0
Nostrand Av,6,0
Clinton & Washington Avs,5,0
Liberty Av,4,0
Rockaway Av,8,0
Fordham Rd,10,4
167th St,10,0
Westchester Square-East Tremont Av,1,0
Castle Hill Av,2,0
Buhre Av,3,0
Elder Av,2,0
110th St-Central Park North,2,0
Av U,7,0
Utica Av,11,7
Euclid Av,5,5
Van Siclen Av,8,0
138th St,3,0
Mt Eden Av,2,0
Fresh Pond Rd,2,0
Metropolitan Av,5,1
Morrison Av-Soundview Av,3,0
Longwood Av,4,0
Jay St - Borough Hall,13,0
Bedford Park Blvd-Lehman College,1,0
Burnside Av,4,0
East 143rd St-St Mary's St,4,0
Whitlock Av,2,0
Middletown Rd,2,0
30 Av-Grand Av,4,0
Baychester Av,2,0
Gun Hill Rd,4,0
111th St-Greenwood Av,4,0
Grant Av,1,0
Bay Ridge Av,3,0
77th St,11,0
Prospect Av,8,0

2025-01-25 11:49:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 23
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:08 - root - INFO - SQL:
SELECT DISTINCT s."borough_name", s."station_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
   JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES e
     ON s."station_name" = e."station_name"
   WHERE e."ada_compliant" = TRUE
   LIMIT 100;
Results:
borough_name,station_name
Brooklyn,Church Av
Manhattan,Chambers St
Manhattan,World Trade Center
Brooklyn,Myrtle Av
Manhattan,South Ferry
Brooklyn,Metropolitan Av
Brooklyn,Utica Av
Queens,Queens Plaza
Manhattan,Roosevelt Island
Brooklyn,Prospect Park
Brooklyn,Franklin Av
Manhattan,Bowling Green
Brooklyn,DeKalb Av
Queens,Junction Blvd
Bronx,Fordham Rd
Brooklyn,Flushing Av
Brooklyn,Borough Hall
Manhattan,Canal St
Brooklyn,Euclid Av
Bronx,Pelham Bay Park
Brooklyn,Atlantic Av
Brooklyn,Marcy Av
Bronx,Simpson St

2025-01-25 11:49:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:49:09 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:10 - root - INFO - SQL:
SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
   GROUP BY "borough_name"
   LIMIT 100;
Results:
borough_name,total_stations
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21

2025-01-25 11:49:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-25 11:49:11 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:12 - root - INFO - SQL:
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
   JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES e
     ON s."station_name" = e."station_name"
   WHERE e."ada_compliant" = TRUE
   GROUP BY s."borough_name"
   LIMIT 100;
Results:
borough_name,ada_stations
Brooklyn,19
Queens,2
Bronx,4
Manhattan,13

2025-01-25 11:49:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:13 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:13 - root - INFO - SQL:
SELECT "station_name", "entrance_lat", "entrance_lon"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   LIMIT 100;
Results:
station_name,entrance_lat,entrance_lon
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
Franklin Av,40.681256,-73.95559
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Fordham Rd,40.862814,-73.900815
Fordham Rd,40.862592,-73.90097
Fordham Rd,40.86289,-73.901262
Fordham Rd,40.862562,-73.901367
Yankee Stadium-161st St,40.827605,-73.926282
Yankee Stadium-161st St,40.827854,-73.925745
Yankee Stadium-161st St,40.827529,-73.926322
Yankee Stadium-161st St,40.827399,-73.926394
Yankee Stadium-161st St,40.827685,-73.925842
Yankee Stadium-161st St,40.827942,-73.926
Yankee Stadium-161st St,40.827461,-73.926362
Yankee Stadium-161st St,40.827759,-73.9261
Metropolitan Av,40.712082,-73.88954
Pelham Bay Park,40.853012,-73.827172
Pelham Bay Park,40.853041,-73.826991
Pelham Bay Park,40.852803,-73.827195
Pelham Bay Park,40.852824,-73.827035
Pelham Bay Park,40.852377,-73.825986
DeKalb Av,40.689817,-73.981082
DeKalb Av,40.68974,-73.981156
DeKalb Av,40.68981,-73.981651
DeKalb Av,40.69154,-73.982565
DeKalb Av,40.689804,-73.981164
DeKalb Av,40.691562,-73.982048
Pacific St,40.683928,-73.978412
Atlantic Av-Barclays Ctr,40.683805,-73.978487
Pacific St,40.683905,-73.978879
Church Av,40.644908,-73.980019
Church Av,40.643147,-73.979342
Church Av,40.643006,-73.97966
Church Av,40.645042,-73.979573
Church Av,40.642692,-73.97926
Church Av,40.642571,-73.979579
34th St,40.750088,-73.988142
34th St,40.749615,-73.988159
34th St,40.750404,-73.986989
34th St,40.74895,-73.988623
34th St,40.750674,-73.988031
34th St,40.750647,-73.987346
34th St,40.750271,-73.987066
34th St,40.748746,-73.988774
34th St,40.75088,-73.988096
34th St,40.749845,-73.988254
47-50th Sts Rockefeller Center,40.759414,-73.981035
47-50th Sts Rockefeller Center,40.758024,-73.982079
47-50th Sts Rockefeller Center,40.758615,-73.981095
47-50th Sts Rockefeller Center,40.759105,-73.981252
47-50th Sts Rockefeller Center,40.759434,-73.981001
47-50th Sts Rockefeller Center,40.757801,-73.981788
47-50th Sts Rockefeller Center,40.758977,-73.981352
47-50th Sts Rockefeller Center,40.757981,-73.98154
47-50th Sts Rockefeller Center,40.759953,-73.980117
47-50th Sts Rockefeller Center,40.760502,-73.980218
47-50th Sts Rockefeller Center,40.758996,-73.980788
47-50th Sts Rockefeller Center,40.759301,-73.980594
47-50th Sts Rockefeller Center,40.758486,-73.981158
47-50th Sts Rockefeller Center,40.758623,-73.981566
47-50th Sts Rockefeller Center,40.757862,-73.981735
47-50th Sts Rockefeller Center,40.759896,-73.980706
47-50th Sts Rockefeller Center,40.760125,-73.980499
168th St - Washington Heights,40.84186,-73.939569
168th St - Washington Heights,40.84176,-73.939067
168th St - Washington Heights,40.841928,-73.939455
168th St - Washington Heights,40.840741,-73.939252
West 4th St,40.733259,-73.999615
West 4th St,40.731133,-74.001534
West 4th St,40.731091,-74.001127
West 4th St,40.733072,-74.000192
West 4th St,40.731086,-74.001209
West 4th St,40.733067,-73.999728
34th St,40.751291,-73.993887
34th St,40.752689,-73.992742
34th St,40.753032,-73.993188
34th St,40.752161,-73.993109
34th St,40.751996,73.993327
34th St,40.752178,-73.993701
34th St,40.751539,-73.994181
34th St,40.75202,-73.993352
34th St,40.752796,-73.992669
34th St,40.751677,-73.994107
34th St,40.752766,-73.992596
34th St,40.752877,-73.993244
34th St,40.751561,-73.994243
34th St,40.752427,-73.993679
34th St,40.751432,-73.993538
34th St,40.753053,-73.993256

2025-01-25 11:49:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-25 11:49:14 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:15 - root - INFO - SQL:
SELECT "station_name",
           (SUM(CASE WHEN "ada_compliant" = TRUE THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS "ada_compliance_percentage"
    FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
    GROUP BY "station_name"
    LIMIT 100;
Results:
station_name,ada_compliance_percentage
Wall St,0.000000
Fulton St,0.000000
Clark St,0.000000
Borough Hall,100.000000
Park Place,66.666667
Harlem-148th St,0.000000
135th St,40.000000
125th St,26.315789
145th St,0.000000
116th St,0.000000
18th Av,0.000000
Av N,0.000000
Kings Highway,0.000000
Ditmas Av,0.000000
Av X,0.000000
Neptune Av-Van Siclen,0.000000
Franklin Av,33.333333
Ralph Av,0.000000
Shepherd Av,0.000000
Kingston-Throop,0.000000
183rd St,0.000000
Kingsbridge Rd,0.000000
176th St,0.000000
Knickerbocker Av,0.000000
Forest Av,0.000000
Central Av,0.000000
Seneca Av,0.000000
Broad St,0.000000
St Lawrence Av,0.000000
Cypress Av,0.000000
Zerega Av,0.000000
Parkchester-East 177th St,0.000000
138th St-3rd Ave,0.000000
Bay Parkway-22nd Av,0.000000
Lafayette Av,0.000000
Yankee Stadium-161st St,100.000000
149th St-Grand Concourse,0.000000
Woodlawn,0.000000
170th St,0.000000
Mosholu Parkway,0.000000
Canal St,41.176471
Chambers St,31.250000
Brook Av,0.000000
Pelham Bay Park,100.000000
Broadway,0.000000
Ditmars Blvd,0.000000
Astoria Blvd-Hoyt Av,0.000000
88th St-Boyd Av,0.000000
95th St,0.000000
Union St,0.000000
Atlantic Av-Barclays Ctr,100.000000
36th St,0.000000
Cathedral Parkway-110th St,0.000000
Av J,0.000000
Atlantic Av,25.000000
Av M,0.000000
5th Av,0.000000
34th St,100.000000
49th St,100.000000
Beach 98th St,0.000000
Aqueduct Racetrack,0.000000
20th Av,0.000000
Freeman St,0.000000
Av I,0.000000
Av P,0.000000
Nostrand Av,0.000000
Clinton & Washington Avs,0.000000
Liberty Av,0.000000
Rockaway Av,0.000000
Fordham Rd,40.000000
167th St,0.000000
Westchester Square-East Tremont Av,0.000000
Castle Hill Av,0.000000
Buhre Av,0.000000
Elder Av,0.000000
110th St-Central Park North,0.000000
Av U,0.000000
Utica Av,63.636364
Euclid Av,100.000000
Van Siclen Av,0.000000
138th St,0.000000
Mt Eden Av,0.000000
Fresh Pond Rd,0.000000
Metropolitan Av,20.000000
Morrison Av-Soundview Av,0.000000
Longwood Av,0.000000
Jay St - Borough Hall,0.000000
Bedford Park Blvd-Lehman College,0.000000
Burnside Av,0.000000
East 143rd St-St Mary's St,0.000000
Whitlock Av,0.000000
Middletown Rd,0.000000
30 Av-Grand Av,0.000000
Baychester Av,0.000000
Gun Hill Rd,0.000000
111th St-Greenwood Av,0.000000
Grant Av,0.000000
Bay Ridge Av,0.000000
77th St,0.000000
Prospect Av,0.000000

2025-01-25 11:49:15 - root - INFO - itercount: 0
2025-01-25 11:49:15 - root - INFO - Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_311
DDL describes table information.
,0
table_name,_311_SERVICE_REQUESTS
description,
DDL,"create or replace TABLE _311_SERVICE_REQUESTS (
	""unique_key"" NUMBER(38,0),
	""created_date"" NUMBER(38,0),
	""closed_date"" NUMBER(38,0),
	""agency"" VARCHAR(16777216),
	""agency_name"" VARCHAR(16777216),
	""complaint_type"" VARCHAR(16777216),
	""descriptor"" VARCHAR(16777216),
	""location_type"" VARCHAR(16777216),
	""incident_zip"" VARCHAR(16777216),
	""incident_address"" VARCHAR(16777216),
	""street_name"" VARCHAR(16777216),
	""cross_street_1"" VARCHAR(16777216),
	""cross_street_2"" VARCHAR(16777216),
	""intersection_street_1"" VARCHAR(16777216),
	""intersection_street_2"" VARCHAR(16777216),
	""address_type"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""landmark"" VARCHAR(16777216),
	""facility_type"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""due_date"" NUMBER(38,0),
	""resolution_description"" VARCHAR(16777216),
	""resolution_action_updated_date"" NUMBER(38,0),
	""community_board"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""x_coordinate"" NUMBER(38,0),
	""y_coordinate"" NUMBER(38,0),
	""park_facility_name"" VARCHAR(16777216),
	""park_borough"" VARCHAR(16777216),
	""bbl"" NUMBER(38,0),
	""open_data_channel_type"" VARCHAR(16777216),
	""vehicle_type"" VARCHAR(16777216),
	""taxi_company_borough"" VARCHAR(16777216),
	""taxi_pickup_location"" VARCHAR(16777216),
	""bridge_highway_name"" VARCHAR(16777216),
	""bridge_highway_direction"" VARCHAR(16777216),
	""road_ramp"" VARCHAR(16777216),
	""bridge_highway_segment"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_CITIBIKE
DDL describes table information.
,0
table_name,CITIBIKE_STATIONS
description,
DDL,"create or replace TABLE CITIBIKE_STATIONS (
	""station_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""region_id"" NUMBER(38,0),
	""rental_methods"" VARCHAR(16777216),
	""capacity"" NUMBER(38,0),
	""eightd_has_key_dispenser"" BOOLEAN,
	""num_bikes_available"" NUMBER(38,0),
	""num_bikes_disabled"" NUMBER(38,0),
	""num_docks_available"" NUMBER(38,0),
	""num_docks_disabled"" NUMBER(38,0),
	""is_installed"" BOOLEAN,
	""is_renting"" BOOLEAN,
	""is_returning"" BOOLEAN,
	""eightd_has_available_keys"" BOOLEAN,
	""last_reported"" NUMBER(38,0)
);"

,1
table_name,CITIBIKE_TRIPS
description,
DDL,"create or replace TABLE CITIBIKE_TRIPS (
	""tripduration"" NUMBER(38,0),
	""starttime"" NUMBER(38,0),
	""stoptime"" NUMBER(38,0),
	""start_station_id"" NUMBER(38,0),
	""start_station_name"" VARCHAR(16777216),
	""start_station_latitude"" FLOAT,
	""start_station_longitude"" FLOAT,
	""end_station_id"" NUMBER(38,0),
	""end_station_name"" VARCHAR(16777216),
	""end_station_latitude"" FLOAT,
	""end_station_longitude"" FLOAT,
	""bikeid"" NUMBER(38,0),
	""usertype"" VARCHAR(16777216),
	""birth_year"" NUMBER(38,0),
	""gender"" VARCHAR(16777216),
	""customer_plan"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_MV_COLLISIONS
DDL describes table information.
,0
table_name,NYPD_MV_COLLISIONS
description,
DDL,"create or replace TABLE NYPD_MV_COLLISIONS (
	""borough"" VARCHAR(16777216),
	""contributing_factor_vehicle_1"" VARCHAR(16777216),
	""contributing_factor_vehicle_2"" VARCHAR(16777216),
	""contributing_factor_vehicle_3"" VARCHAR(16777216),
	""contributing_factor_vehicle_4"" VARCHAR(16777216),
	""contributing_factor_vehicle_5"" VARCHAR(16777216),
	""cross_street_name"" VARCHAR(16777216),
	""timestamp"" NUMBER(38,0),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location"" VARCHAR(16777216),
	""number_of_cyclist_injured"" NUMBER(38,0),
	""number_of_cyclist_killed"" NUMBER(38,0),
	""number_of_motorist_injured"" NUMBER(38,0),
	""number_of_motorist_killed"" NUMBER(38,0),
	""number_of_pedestrians_injured"" NUMBER(38,0),
	""number_of_pedestrians_killed"" NUMBER(38,0),
	""number_of_persons_injured"" NUMBER(38,0),
	""number_of_persons_killed"" NUMBER(38,0),
	""off_street_name"" VARCHAR(16777216),
	""on_street_name"" VARCHAR(16777216),
	""unique_key"" NUMBER(38,0),
	""vehicle_type_code1"" VARCHAR(16777216),
	""vehicle_type_code2"" VARCHAR(16777216),
	""vehicle_type_code_3"" VARCHAR(16777216),
	""vehicle_type_code_4"" VARCHAR(16777216),
	""vehicle_type_code_5"" VARCHAR(16777216),
	""zip_code"" NUMBER(38,0)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_SUBWAY
DDL describes table information.
,0
table_name,STATIONS
description,
DDL,"create or replace TABLE STATIONS (
	""station_id"" VARCHAR(16777216),
	""complex_id"" VARCHAR(16777216),
	""gtfs_stop_id"" VARCHAR(16777216),
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""daytime_routes"" VARCHAR(16777216),
	""structure"" VARCHAR(16777216),
	""north_direction_label"" VARCHAR(16777216),
	""south_direction_label"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""station_geom"" BINARY(8388608)
);"

,1
table_name,STATION_ENTRANCES
description,
DDL,"create or replace TABLE STATION_ENTRANCES (
	""division"" VARCHAR(16777216),
	""line"" VARCHAR(16777216),
	""station_name"" VARCHAR(16777216),
	""station_lat"" FLOAT,
	""station_lon"" FLOAT,
	""route_1"" VARCHAR(16777216),
	""route_2"" VARCHAR(16777216),
	""route_3"" VARCHAR(16777216),
	""route_4"" VARCHAR(16777216),
	""route_5"" VARCHAR(16777216),
	""route_6"" VARCHAR(16777216),
	""route_7"" VARCHAR(16777216),
	""route_8"" VARCHAR(16777216),
	""route_9"" VARCHAR(16777216),
	""route_10"" VARCHAR(16777216),
	""route_11"" VARCHAR(16777216),
	""entrance_type"" VARCHAR(16777216),
	""staff"" VARCHAR(16777216),
	""staff_hours"" VARCHAR(16777216),
	""ada_notes"" VARCHAR(16777216),
	""free_crossover"" BOOLEAN,
	""north_south_street"" VARCHAR(16777216),
	""east_west_street"" VARCHAR(16777216),
	""corner"" VARCHAR(16777216),
	""entrance_lat"" FLOAT,
	""entrance_lon"" FLOAT,
	""entry"" BOOLEAN,
	""exit_only"" BOOLEAN,
	""vending"" BOOLEAN,
	""ada_compliant"" BOOLEAN,
	""station_geom"" BINARY(8388608),
	""entrance_geom"" BINARY(8388608)
);"

,2
table_name,GEO_NYC_BOROUGH_BOUNDARIES
description,
DDL,"create or replace TABLE GEO_NYC_BOROUGH_BOUNDARIES (
	""borough_code"" VARCHAR(16777216),
	""borough_name"" VARCHAR(16777216),
	""borough_area"" FLOAT,
	""borough_len"" FLOAT,
	""borough_geom"" BINARY(8388608)
);"

,3
table_name,STOP_TIMES
description,
DDL,"create or replace TABLE STOP_TIMES (
	""trip_id"" VARCHAR(16777216),
	""arrival_time"" VARCHAR(16777216),
	""departure_time"" VARCHAR(16777216),
	""stop_id"" VARCHAR(16777216),
	""stop_sequence"" VARCHAR(16777216),
	""stop_headsign"" VARCHAR(16777216),
	""pickup_type"" VARCHAR(16777216),
	""dropoff_type"" VARCHAR(16777216),
	""shape_dist_traveled"" VARCHAR(16777216)
);"

,4
table_name,ROUTES
description,
DDL,"create or replace TABLE ROUTES (
	""route_id"" VARCHAR(16777216),
	""route_short_name"" VARCHAR(16777216),
	""route_long_name"" VARCHAR(16777216),
	""route_describe"" VARCHAR(16777216),
	""route_type"" VARCHAR(16777216)
);"

,5
table_name,STATION_COMPLEXES
description,
DDL,"create or replace TABLE STATION_COMPLEXES (
	""complex_id"" VARCHAR(16777216),
	""complex_name"" VARCHAR(16777216)
);"

,6
table_name,SUBWAY_RIDERSHIP_2013_PRESENT
description,
DDL,"create or replace TABLE SUBWAY_RIDERSHIP_2013_PRESENT (
	""station_name"" VARCHAR(16777216),
	""routes"" VARCHAR(16777216),
	""ridership_2013"" NUMBER(38,0),
	""ridership_2014"" NUMBER(38,0),
	""ridership_2015"" NUMBER(38,0),
	""ridership_2016"" NUMBER(38,0),
	""ridership_2017"" NUMBER(38,0),
	""ridership_2018"" NUMBER(38,0),
	""change_2018_raw"" NUMBER(38,0),
	""change_2018_percent"" FLOAT,
	""rank_ridership_2018"" NUMBER(38,0)
);"

,7
table_name,TRIPS
description,
DDL,"create or replace TABLE TRIPS (
	""route_id"" VARCHAR(16777216),
	""service_id"" VARCHAR(16777216),
	""trip_id"" VARCHAR(16777216),
	""trip_headsign"" VARCHAR(16777216),
	""direction_id"" VARCHAR(16777216),
	""block_id"" VARCHAR(16777216),
	""shape_id"" VARCHAR(16777216)
);"

Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TAXI_TRIPS
DDL describes table information.
,0
table_name,TLC_GREEN_TRIPS_2021
description,
DDL,"create or replace TABLE TLC_GREEN_TRIPS_2021 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""rate_code"" VARCHAR(16777216),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""ehail_fee"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""payment_type"" VARCHAR(16777216),
	""distance_between_service"" NUMBER(38,9),
	""time_between_service"" NUMBER(38,0),
	""trip_type"" VARCHAR(16777216),
	""imp_surcharge"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2020']
,1
table_name,TLC_YELLOW_TRIPS_2011
description,
DDL,"create or replace TABLE TLC_YELLOW_TRIPS_2011 (
	""vendor_id"" VARCHAR(16777216),
	""pickup_datetime"" NUMBER(38,0),
	""dropoff_datetime"" NUMBER(38,0),
	""passenger_count"" NUMBER(38,0),
	""trip_distance"" NUMBER(38,9),
	""rate_code"" VARCHAR(16777216),
	""store_and_fwd_flag"" VARCHAR(16777216),
	""payment_type"" VARCHAR(16777216),
	""fare_amount"" NUMBER(38,9),
	""extra"" NUMBER(38,9),
	""mta_tax"" NUMBER(38,9),
	""tip_amount"" NUMBER(38,9),
	""tolls_amount"" NUMBER(38,9),
	""imp_surcharge"" NUMBER(38,9),
	""airport_fee"" NUMBER(38,9),
	""total_amount"" NUMBER(38,9),
	""pickup_location_id"" VARCHAR(16777216),
	""dropoff_location_id"" VARCHAR(16777216),
	""data_file_year"" NUMBER(38,0),
	""data_file_month"" NUMBER(38,0)
);"

Some other tables have the similar structure: ['TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2023', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2021']
,2
table_name,TAXI_ZONE_GEOM
description,
DDL,"create or replace TABLE TAXI_ZONE_GEOM (
	""zone_id"" VARCHAR(16777216),
	""zone_name"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone_geom"" BINARY(8388608)
);"

,3
table_name,TLC_FHV_TRIPS_2015
description,
DDL,"create or replace TABLE TLC_FHV_TRIPS_2015 (
	""location_id"" NUMBER(38,0),
	""pickup_datetime"" NUMBER(38,0),
	""dispatching_base_num"" VARCHAR(16777216),
	""borough"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""service_zone"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2017', 'TLC_FHV_TRIPS_2016']
Database Name: NEW_YORK_PLUS
Schema Name: NEW_YORK_TREES
DDL describes table information.
,0
table_name,TREE_CENSUS_2015
description,
DDL,"create or replace TABLE TREE_CENSUS_2015 (
	""tree_id"" NUMBER(38,0),
	""block_id"" NUMBER(38,0),
	""created_at"" DATE,
	""tree_dbh"" NUMBER(38,0),
	""stump_diam"" NUMBER(38,0),
	""curb_loc"" VARCHAR(16777216),
	""status"" VARCHAR(16777216),
	""health"" VARCHAR(16777216),
	""spc_latin"" VARCHAR(16777216),
	""spc_common"" VARCHAR(16777216),
	""steward"" VARCHAR(16777216),
	""guards"" VARCHAR(16777216),
	""sidewalk"" VARCHAR(16777216),
	""user_type"" VARCHAR(16777216),
	""problems"" VARCHAR(16777216),
	""root_stone"" VARCHAR(16777216),
	""root_grate"" VARCHAR(16777216),
	""root_other"" VARCHAR(16777216),
	""trunk_wire"" VARCHAR(16777216),
	""trnk_light"" VARCHAR(16777216),
	""trnk_other"" VARCHAR(16777216),
	""brch_light"" VARCHAR(16777216),
	""brch_shoe"" VARCHAR(16777216),
	""brch_other"" VARCHAR(16777216),
	""address"" VARCHAR(16777216),
	""zipcode"" NUMBER(38,0),
	""zip_city"" VARCHAR(16777216),
	""cb_num"" NUMBER(38,0),
	""borocode"" NUMBER(38,0),
	""boroname"" VARCHAR(16777216),
	""cncldist"" NUMBER(38,0),
	""st_assem"" NUMBER(38,0),
	""st_senate"" NUMBER(38,0),
	""nta"" VARCHAR(16777216),
	""nta_name"" VARCHAR(16777216),
	""boro_ct"" NUMBER(38,0),
	""state"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""x_sp"" FLOAT,
	""y_sp"" FLOAT
);"

Some other tables have the similar structure: ['TREE_CENSUS_2015', 'TREE_CENSUS_2005', 'TREE_CENSUS_1995']
,1
table_name,TREE_SPECIES
description,
DDL,"create or replace TABLE TREE_SPECIES (
	""species_scientific_name"" VARCHAR(16777216),
	""species_common_name"" VARCHAR(16777216),
	""form"" VARCHAR(16777216),
	""growth_rate"" VARCHAR(16777216),
	""fall_color"" VARCHAR(16777216),
	""environmental_tolerances"" VARCHAR(16777216),
	""location_tolerances"" VARCHAR(16777216),
	""notes_suggested_cultivars"" VARCHAR(16777216),
	""tree_size"" VARCHAR(16777216),
	""comments"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['GEO_NYC_BOROUGH_BOUNDARIES', 'ROUTES', 'STATIONS', 'STATION_COMPLEXES', 'STATION_ENTRANCES', 'STOP_TIMES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2016', 'TLC_FHV_TRIPS_2017', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2020', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2021', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2023'], 'NEW_YORK_TREES': ['TREE_CENSUS_1995', 'TREE_CENSUS_2005', 'TREE_CENSUS_2015', 'TREE_SPECIES']}}
Begin Exploring Related Columns
**Relevant tables and columns:**

- **Table:** `NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS`
  - `"station_id"`: Unique identifier for each station; used to identify individual stations.
  - `"station_name"`: Name of the station; used to join with entrances.
  - `"borough_name"`: Borough where the station is located; used to group stations by borough.

- **Table:** `NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES`
  - `"station_name"`: Name of the station; used to join with stations.
  - `"ada_compliant"`: Indicates if an entrance is ADA-compliant; used to determine accessibility.
  - `"entrance_lat"` and `"entrance_lon"`: Coordinates of the entrance; could be used for mapping.
  - `"entrance_type"`: Type of entrance; may provide additional context.

**Conditions that may be used:**

- Join the `STATIONS` and `STATION_ENTRANCES` tables on `"station_name"` to associate entrances with their respective stations.
- Filter entrances where `"ada_compliant"` is `TRUE` to find ADA-compliant entrances.
- Use `DISTINCT` to avoid counting the same station multiple times.
- Group by `"borough_name"` to calculate percentages for each borough.

**SQL Queries:**

1. **List all subway stations with their boroughs:**

   ```sql
   SELECT "station_id", "station_name", "borough_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
   LIMIT 100;
   ```

2. **List all station entrances with ADA compliance status:**

   ```sql
   SELECT "station_name", "entrance_lat", "entrance_lon", "ada_compliant"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   LIMIT 100;
   ```

3. **Find stations that have at least one ADA-compliant entrance:**

   ```sql
   SELECT DISTINCT "station_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   LIMIT 100;
   ```

4. **Count the number of ADA-compliant entrances for each station:**

   ```sql
   SELECT "station_name", COUNT(*) AS "ada_entrance_count"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   GROUP BY "station_name"
   LIMIT 100;
   ```

5. **Get total entrances and ADA-compliant entrances per station:**

   ```sql
   SELECT "station_name",
          COUNT(*) AS "total_entrances",
          SUM(CASE WHEN "ada_compliant" = TRUE THEN 1 ELSE 0 END) AS "ada_entrances"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   GROUP BY "station_name"
   LIMIT 100;
   ```

6. **Find stations in each borough with at least one ADA-compliant entrance:**

   ```sql
   SELECT DISTINCT s."borough_name", s."station_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
   JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES e
     ON s."station_name" = e."station_name"
   WHERE e."ada_compliant" = TRUE
   LIMIT 100;
   ```

7. **Calculate the total number of stations per borough:**

   ```sql
   SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
   GROUP BY "borough_name"
   LIMIT 100;
   ```

8. **Calculate the number of stations with ADA-compliant entrances per borough:**

   ```sql
   SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
   JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES e
     ON s."station_name" = e."station_name"
   WHERE e."ada_compliant" = TRUE
   GROUP BY s."borough_name"
   LIMIT 100;
   ```

9. **List ADA-compliant entrances with their locations:**

   ```sql
   SELECT "station_name", "entrance_lat", "entrance_lon"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   LIMIT 100;
   ```

10. **Calculate the percentage of ADA-compliant entrances per station:**

    ```sql
    SELECT "station_name",
           (SUM(CASE WHEN "ada_compliant" = TRUE THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS "ada_compliance_percentage"
    FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
    GROUP BY "station_name"
    LIMIT 100;
    ```

These queries help explore the data related to subway stations, entrances, ADA compliance, and borough information, which are relevant to determining the percentage of stations with ADA-compliant entrances in each New York borough.Query:
SELECT "station_id", "station_name", "borough_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
   LIMIT 100;
Answer:
station_id,station_name,borough_name
1,Astoria - Ditmars Blvd,Queens
2,Astoria Blvd,Queens
3,30 Av,Queens
4,Broadway,Queens
5,36 Av,Queens
6,39 Av,Queens
7,Lexington Av/59 St,Manhattan
8,5 Av/59 St,Manhattan
9,57 St - 7 Av,Manhattan
10,49 St,Manhattan
11,Times Sq - 42 St,Manhattan
12,34 St - Herald Sq,Manhattan
13,28 St,Manhattan
14,23 St,Manhattan
15,14 St - Union Sq,Manhattan
16,8 St - NYU,Manhattan
17,Prince St,Manhattan
18,Canal St,Manhattan
19,Canal St,Manhattan
20,City Hall,Manhattan
21,Cortlandt St,Manhattan
22,Rector St,Manhattan
23,Whitehall St,Manhattan
24,Court St,Brooklyn
25,Jay St - MetroTech,Brooklyn
26,DeKalb Av,Brooklyn
27,Atlantic Av - Barclays Ctr,Brooklyn
28,Union St,Brooklyn
29,9 St,Brooklyn
30,Prospect Av,Brooklyn
31,25 St,Brooklyn
32,36 St,Brooklyn
33,45 St,Brooklyn
34,53 St,Brooklyn
35,59 St,Brooklyn
36,Bay Ridge Av,Brooklyn
37,77 St,Brooklyn
38,86 St,Brooklyn
39,Bay Ridge - 95 St,Brooklyn
40,Atlantic Av - Barclays Ctr,Brooklyn
41,7 Av,Brooklyn
42,Prospect Park,Brooklyn
43,Parkside Av,Brooklyn
44,Church Av,Brooklyn
45,Beverley Rd,Brooklyn
46,Cortelyou Rd,Brooklyn
47,Newkirk Plaza,Brooklyn
48,Avenue H,Brooklyn
49,Avenue J,Brooklyn
50,Avenue M,Brooklyn
51,Kings Hwy,Brooklyn
52,Avenue U,Brooklyn
53,Neck Rd,Brooklyn
54,Sheepshead Bay,Brooklyn
55,Brighton Beach,Brooklyn
56,Ocean Pkwy,Brooklyn
57,W 8 St - NY Aquarium,Brooklyn
58,Coney Island - Stillwell Av,Brooklyn
59,9 Av,Brooklyn
60,Fort Hamilton Pkwy,Brooklyn
61,50 St,Brooklyn
62,55 St,Brooklyn
63,62 St,Brooklyn
64,71 St,Brooklyn
65,79 St,Brooklyn
66,18 Av,Brooklyn
67,20 Av,Brooklyn
68,Bay Pkwy,Brooklyn
69,25 Av,Brooklyn
70,Bay 50 St,Brooklyn
71,8 Av,Brooklyn
72,Fort Hamilton Pkwy,Brooklyn
73,New Utrecht Av,Brooklyn
74,18 Av,Brooklyn
75,20 Av,Brooklyn
76,Bay Pkwy,Brooklyn
77,Kings Hwy,Brooklyn
78,Avenue U,Brooklyn
79,86 St,Brooklyn
80,121 St,Queens
81,111 St,Queens
82,104 St,Queens
83,Woodhaven Blvd,Queens
84,85 St - Forest Pkwy,Queens
85,75 St,Queens
86,Cypress Hills,Brooklyn
87,Crescent St,Brooklyn
88,Norwood Av,Brooklyn
89,Cleveland St,Brooklyn
90,Van Siclen Av,Brooklyn
91,Alabama Av,Brooklyn
92,Broadway Jct,Brooklyn
93,Chauncey St,Brooklyn
94,Halsey St,Brooklyn
95,Gates Av,Brooklyn
96,Kosciuszko St,Brooklyn
97,Myrtle Av,Brooklyn
98,Flushing Av,Brooklyn
99,Lorimer St,Brooklyn
100,Hewes St,Brooklyn
Query:
SELECT "station_name", "entrance_lat", "entrance_lon", "ada_compliant"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   LIMIT 100;
Answer:
station_name,entrance_lat,entrance_lon,ada_compliant
Wall St,40.706506,-74.009544,False
Wall St,40.706392,-74.009332,False
Wall St,40.706272,-74.009447,False
Wall St,40.706755,-74.008804,False
Wall St,40.706385,-74.009658,False
Wall St,40.707431,-74.008778,False
Fulton St,40.709475,-74.006409,False
Fulton St,40.7092,-74.006664,False
Fulton St,40.70863,-74.006999,False
Fulton St,40.709046,-74.006814,False
Clark St,40.69759,-73.993275,False
Clark St,40.697649,-73.99306,False
Borough Hall,40.693594,-73.990304,True
Borough Hall,40.693569,-73.990599,True
Borough Hall,40.693728,-73.99063,True
Borough Hall,40.693838,-73.990119,True
Park Place,40.712712,-74.007766,False
Harlem-148th St,40.824069,-73.936981,False
135th St,40.814188,-73.940618,True
135th St,40.814024,-73.941117,True
135th St,40.813896,-73.940831,True
135th St,40.814316,-73.94091,True
125th St,40.807875,-73.945229,False
125th St,40.807995,-73.945524,False
125th St,40.807681,-73.945752,False
125th St,40.807548,-73.945463,False
110th St-Central Park North,40.799033,-73.952058,False
110th St-Central Park North,40.798497,-73.952672,False
145th St,40.820602,-73.935933,False
145th St,40.820662,-73.936275,False
145th St,40.820161,-73.936253,False
145th St,40.820343,-73.936508,False
116th St,40.801945,-73.949943,False
116th St,40.802229,-73.949734,False
116th St,40.802111,-73.949437,False
116th St,40.801822,-73.949651,False
18th Av,40.630531,-73.977251,False
18th Av,40.630562,-73.976995,False
18th Av,40.628674,-73.976892,False
18th Av,40.628708,-73.976646,False
Av N,40.61616,-73.97427,False
Av N,40.616121,-73.974507,False
Av N,40.614304,-73.97391,False
Av N,40.614279,-73.97418,False
Av I,40.626163,-73.976177,False
Av I,40.624263,-73.976049,False
Av I,40.626133,-73.976407,False
Av I,40.624301,-73.975817,False
Kings Highway,40.602178,-73.972379,False
Kings Highway,40.602197,-73.97264,False
Kings Highway,40.604007,-73.972393,False
Kings Highway,40.603999,-73.972124,False
Av P,40.609041,-73.972904,False
Av P,40.608615,-73.973097,False
Bay Parkway-22nd Av,40.620825,-73.975138,False
Bay Parkway-22nd Av,40.620797,-73.975479,False
Bay Parkway-22nd Av,40.621162,-73.975467,False
Av U,40.595053,-73.973623,False
Av U,40.595027,-73.973382,False
Av U,40.596897,-73.973137,False
Av U,40.596701,-73.973402,False
Ditmas Av,40.637093,-73.978463,False
Ditmas Av,40.637107,-73.978257,False
Ditmas Av,40.635389,-73.977914,False
Ditmas Av,40.635434,-73.978289,False
Av X,40.590521,-73.974242,False
Av X,40.590266,-73.974051,False
Neptune Av-Van Siclen,40.580547,-73.974778,False
Neptune Av-Van Siclen,40.580576,-73.974443,False
Franklin Av,40.681256,-73.95559,True
Ralph Av,40.678702,-73.921552,False
Ralph Av,40.678984,-73.921442,False
Ralph Av,40.679164,-73.92187,False
Lafayette Av,40.685559,-73.9729,False
Lafayette Av,40.686041,-73.974278,False
Lafayette Av,40.686409,-73.974347,False
Lafayette Av,40.686119,-73.974517,False
Lafayette Av,40.685789,-73.97276,False
Lafayette Av,40.686077,-73.973308,False
Lafayette Av,40.6857,-73.973526,False
Lafayette Av,40.685969,-73.973021,False
Lafayette Av,40.686553,-73.974606,False
Utica Av,40.679095,-73.930044,False
Utica Av,40.679346,-73.931987,False
Utica Av,40.67953,-73.932021,False
Utica Av,40.679487,-73.929725,False
Euclid Av,40.675301,-73.871801,True
Euclid Av,40.675533,-73.871742,True
Euclid Av,40.675478,-73.872109,True
Euclid Av,40.675274,-73.872115,True
Euclid Av,40.675554,-73.871875,True
Shepherd Av,40.673989,-73.880869,False
Shepherd Av,40.67397,-73.880667,False
Shepherd Av,40.674303,-73.880749,False
Shepherd Av,40.674234,-73.880927,False
Nostrand Av,40.680228,-73.949414,False
Nostrand Av,40.680572,-73.949753,False
Nostrand Av,40.680262,-73.949635,False
Nostrand Av,40.680547,-73.949515,False
Kingston-Throop,40.679804,-73.941119,False
Query:
SELECT DISTINCT "station_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   LIMIT 100;
Answer:
station_name
Borough Hall
135th St
Franklin Av
Euclid Av
Fordham Rd
Yankee Stadium-161st St
Metropolitan Av
DeKalb Av
Pacific St
Atlantic Av-Barclays Ctr
Church Av
34th St
47-50th Sts Rockefeller Center
West 4th St
175th St
50th St
42nd St
59th St
World Trade Center
Prospect Park
Stillwell Av
49th St
Times Square-42nd St
Union Square
Myrtle Av
8th Av
Canarsie - Rockaway Parkway
Flushing-Main St
Broadway-74th St
Grand Central-42nd St
Park Place
Howard Beach
Lexington Av
Utica Av
Flushing Av
96th St
Times Square
South Ferry
Chambers St
Jackson Heights-Roosevelt Ave
21st St
59th St-Columbus Circle
Jamaica-179th St
233rd St
149th St-3rd Av
Pelham Bay Park
168th St - Washington Heights
Inwood - 207th St
14th St
Atlantic Av
Junction Blvd
Woodside Av-61st St
Rockaway Park-Beach 116th
Sutphin Blvd-Archer Av - JFK
Bowling Green
125th St
51st St
Marcy Av
231st St
Kew Gardens-Union Turnpike
Canal St
Roosevelt Island
Queens Plaza
Lexington Av-53rd St
66th St-Lincoln Center
Simpson St
Pelham Parkway
Flatbush Av-Brooklyn College
Parsons Blvd-Archer Av - Jamaica Center
Brooklyn Bridge-City Hall
Grand Central
72nd St
Query:
SELECT "station_name", COUNT(*) AS "ada_entrance_count"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   GROUP BY "station_name"
   LIMIT 100;
Answer:
station_name,ada_entrance_count
Borough Hall,9
135th St,4
Franklin Av,2
Euclid Av,5
Fordham Rd,4
Yankee Stadium-161st St,16
Metropolitan Av,1
DeKalb Av,6
Pacific St,2
Atlantic Av-Barclays Ctr,2
Church Av,13
34th St,41
47-50th Sts Rockefeller Center,17
West 4th St,6
175th St,7
50th St,10
42nd St,9
59th St,12
World Trade Center,8
Prospect Park,3
Stillwell Av,2
49th St,7
Times Square-42nd St,4
Union Square,6
Myrtle Av,3
8th Av,2
Canarsie - Rockaway Parkway,3
Flushing-Main St,10
Broadway-74th St,1
Grand Central-42nd St,9
Park Place,2
Howard Beach,4
Lexington Av,5
Utica Av,7
Flushing Av,4
96th St,6
Times Square,9
South Ferry,5
Chambers St,5
Jackson Heights-Roosevelt Ave,7
21st St,5
59th St-Columbus Circle,5
Jamaica-179th St,16
233rd St,2
149th St-3rd Av,8
Pelham Bay Park,5
168th St - Washington Heights,4
Inwood - 207th St,6
14th St,8
Atlantic Av,1
Junction Blvd,5
Woodside Av-61st St,3
Rockaway Park-Beach 116th,1
Sutphin Blvd-Archer Av - JFK,4
Bowling Green,5
125th St,5
51st St,9
Marcy Av,8
231st St,4
Kew Gardens-Union Turnpike,8
Canal St,7
Roosevelt Island,1
Queens Plaza,7
Lexington Av-53rd St,7
66th St-Lincoln Center,6
Simpson St,5
Pelham Parkway,5
Flatbush Av-Brooklyn College,8
Parsons Blvd-Archer Av - Jamaica Center,10
Brooklyn Bridge-City Hall,9
Grand Central,7
72nd St,4
Query:
SELECT "station_name",
          COUNT(*) AS "total_entrances",
          SUM(CASE WHEN "ada_compliant" = TRUE THEN 1 ELSE 0 END) AS "ada_entrances"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   GROUP BY "station_name"
   LIMIT 100;
Answer:
station_name,total_entrances,ada_entrances
Wall St,14,0
Fulton St,17,0
Clark St,2,0
Borough Hall,9,9
Park Place,3,2
Harlem-148th St,1,0
135th St,10,4
125th St,19,5
145th St,13,0
116th St,12,0
18th Av,9,0
Av N,4,0
Kings Highway,9,0
Ditmas Av,4,0
Av X,2,0
Neptune Av-Van Siclen,2,0
Franklin Av,6,2
Ralph Av,3,0
Shepherd Av,4,0
Kingston-Throop,4,0
183rd St,3,0
Kingsbridge Rd,8,0
176th St,2,0
Knickerbocker Av,2,0
Forest Av,2,0
Central Av,2,0
Seneca Av,2,0
Broad St,9,0
St Lawrence Av,2,0
Cypress Av,4,0
Zerega Av,2,0
Parkchester-East 177th St,1,0
138th St-3rd Ave,7,0
Bay Parkway-22nd Av,5,0
Lafayette Av,9,0
Yankee Stadium-161st St,16,16
149th St-Grand Concourse,4,0
Woodlawn,2,0
170th St,8,0
Mosholu Parkway,4,0
Canal St,17,7
Chambers St,16,5
Brook Av,4,0
Pelham Bay Park,5,5
Broadway,7,0
Ditmars Blvd,4,0
Astoria Blvd-Hoyt Av,4,0
88th St-Boyd Av,2,0
95th St,5,0
Union St,4,0
Atlantic Av-Barclays Ctr,2,2
36th St,8,0
Cathedral Parkway-110th St,6,0
Av J,3,0
Atlantic Av,4,1
Av M,2,0
5th Av,10,0
34th St,41,41
49th St,7,7
Beach 98th St,3,0
Aqueduct Racetrack,1,0
20th Av,5,0
Freeman St,4,0
Av I,4,0
Av P,2,0
Nostrand Av,6,0
Clinton & Washington Avs,5,0
Liberty Av,4,0
Rockaway Av,8,0
Fordham Rd,10,4
167th St,10,0
Westchester Square-East Tremont Av,1,0
Castle Hill Av,2,0
Buhre Av,3,0
Elder Av,2,0
110th St-Central Park North,2,0
Av U,7,0
Utica Av,11,7
Euclid Av,5,5
Van Siclen Av,8,0
138th St,3,0
Mt Eden Av,2,0
Fresh Pond Rd,2,0
Metropolitan Av,5,1
Morrison Av-Soundview Av,3,0
Longwood Av,4,0
Jay St - Borough Hall,13,0
Bedford Park Blvd-Lehman College,1,0
Burnside Av,4,0
East 143rd St-St Mary's St,4,0
Whitlock Av,2,0
Middletown Rd,2,0
30 Av-Grand Av,4,0
Baychester Av,2,0
Gun Hill Rd,4,0
111th St-Greenwood Av,4,0
Grant Av,1,0
Bay Ridge Av,3,0
77th St,11,0
Prospect Av,8,0
Query:
SELECT DISTINCT s."borough_name", s."station_name"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
   JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES e
     ON s."station_name" = e."station_name"
   WHERE e."ada_compliant" = TRUE
   LIMIT 100;
Answer:
borough_name,station_name
Brooklyn,Church Av
Manhattan,Chambers St
Manhattan,World Trade Center
Brooklyn,Myrtle Av
Manhattan,South Ferry
Brooklyn,Metropolitan Av
Brooklyn,Utica Av
Queens,Queens Plaza
Manhattan,Roosevelt Island
Brooklyn,Prospect Park
Brooklyn,Franklin Av
Manhattan,Bowling Green
Brooklyn,DeKalb Av
Queens,Junction Blvd
Bronx,Fordham Rd
Brooklyn,Flushing Av
Brooklyn,Borough Hall
Manhattan,Canal St
Brooklyn,Euclid Av
Bronx,Pelham Bay Park
Brooklyn,Atlantic Av
Brooklyn,Marcy Av
Bronx,Simpson St
Query:
SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS
   GROUP BY "borough_name"
   LIMIT 100;
Answer:
borough_name,total_stations
Queens,82
Manhattan,151
Brooklyn,169
Bronx,70
Staten Island,21
Query:
SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATIONS s
   JOIN NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES e
     ON s."station_name" = e."station_name"
   WHERE e."ada_compliant" = TRUE
   GROUP BY s."borough_name"
   LIMIT 100;
Answer:
borough_name,ada_stations
Brooklyn,19
Queens,2
Bronx,4
Manhattan,13
Query:
SELECT "station_name", "entrance_lat", "entrance_lon"
   FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
   WHERE "ada_compliant" = TRUE
   LIMIT 100;
Answer:
station_name,entrance_lat,entrance_lon
Borough Hall,40.693594,-73.990304
Borough Hall,40.693569,-73.990599
Borough Hall,40.693728,-73.99063
Borough Hall,40.693838,-73.990119
135th St,40.814188,-73.940618
135th St,40.814024,-73.941117
135th St,40.813896,-73.940831
135th St,40.814316,-73.94091
Franklin Av,40.681256,-73.95559
Euclid Av,40.675301,-73.871801
Euclid Av,40.675533,-73.871742
Euclid Av,40.675478,-73.872109
Euclid Av,40.675274,-73.872115
Euclid Av,40.675554,-73.871875
Fordham Rd,40.862814,-73.900815
Fordham Rd,40.862592,-73.90097
Fordham Rd,40.86289,-73.901262
Fordham Rd,40.862562,-73.901367
Yankee Stadium-161st St,40.827605,-73.926282
Yankee Stadium-161st St,40.827854,-73.925745
Yankee Stadium-161st St,40.827529,-73.926322
Yankee Stadium-161st St,40.827399,-73.926394
Yankee Stadium-161st St,40.827685,-73.925842
Yankee Stadium-161st St,40.827942,-73.926
Yankee Stadium-161st St,40.827461,-73.926362
Yankee Stadium-161st St,40.827759,-73.9261
Metropolitan Av,40.712082,-73.88954
Pelham Bay Park,40.853012,-73.827172
Pelham Bay Park,40.853041,-73.826991
Pelham Bay Park,40.852803,-73.827195
Pelham Bay Park,40.852824,-73.827035
Pelham Bay Park,40.852377,-73.825986
DeKalb Av,40.689817,-73.981082
DeKalb Av,40.68974,-73.981156
DeKalb Av,40.68981,-73.981651
DeKalb Av,40.69154,-73.982565
DeKalb Av,40.689804,-73.981164
DeKalb Av,40.691562,-73.982048
Pacific St,40.683928,-73.978412
Atlantic Av-Barclays Ctr,40.683805,-73.978487
Pacific St,40.683905,-73.978879
Church Av,40.644908,-73.980019
Church Av,40.643147,-73.979342
Church Av,40.643006,-73.97966
Church Av,40.645042,-73.979573
Church Av,40.642692,-73.97926
Church Av,40.642571,-73.979579
34th St,40.750088,-73.988142
34th St,40.749615,-73.988159
34th St,40.750404,-73.986989
34th St,40.74895,-73.988623
34th St,40.750674,-73.988031
34th St,40.750647,-73.987346
34th St,40.750271,-73.987066
34th St,40.748746,-73.988774
34th St,40.75088,-73.988096
34th St,40.749845,-73.988254
47-50th Sts Rockefeller Center,40.759414,-73.981035
47-50th Sts Rockefeller Center,40.758024,-73.982079
47-50th Sts Rockefeller Center,40.758615,-73.981095
47-50th Sts Rockefeller Center,40.759105,-73.981252
47-50th Sts Rockefeller Center,40.759434,-73.981001
47-50th Sts Rockefeller Center,40.757801,-73.981788
47-50th Sts Rockefeller Center,40.758977,-73.981352
47-50th Sts Rockefeller Center,40.757981,-73.98154
47-50th Sts Rockefeller Center,40.759953,-73.980117
47-50th Sts Rockefeller Center,40.760502,-73.980218
47-50th Sts Rockefeller Center,40.758996,-73.980788
47-50th Sts Rockefeller Center,40.759301,-73.980594
47-50th Sts Rockefeller Center,40.758486,-73.981158
47-50th Sts Rockefeller Center,40.758623,-73.981566
47-50th Sts Rockefeller Center,40.757862,-73.981735
47-50th Sts Rockefeller Center,40.759896,-73.980706
47-50th Sts Rockefeller Center,40.760125,-73.980499
168th St - Washington Heights,40.84186,-73.939569
168th St - Washington Heights,40.84176,-73.939067
168th St - Washington Heights,40.841928,-73.939455
168th St - Washington Heights,40.840741,-73.939252
West 4th St,40.733259,-73.999615
West 4th St,40.731133,-74.001534
West 4th St,40.731091,-74.001127
West 4th St,40.733072,-74.000192
West 4th St,40.731086,-74.001209
West 4th St,40.733067,-73.999728
34th St,40.751291,-73.993887
34th St,40.752689,-73.992742
34th St,40.753032,-73.993188
34th St,40.752161,-73.993109
34th St,40.751996,73.993327
34th St,40.752178,-73.993701
34th St,40.751539,-73.994181
34th St,40.75202,-73.993352
34th St,40.752796,-73.992669
34th St,40.751677,-73.994107
34th St,40.752766,-73.992596
34th St,40.752877,-73.993244
34th St,40.751561,-73.994243
34th St,40.752427,-73.993679
34th St,40.751432,-73.993538
34th St,40.753053,-73.993256
Query:
SELECT "station_name",
           (SUM(CASE WHEN "ada_compliant" = TRUE THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS "ada_compliance_percentage"
    FROM NEW_YORK_PLUS.NEW_YORK_SUBWAY.STATION_ENTRANCES
    GROUP BY "station_name"
    LIMIT 100;
Answer:
station_name,ada_compliance_percentage
Wall St,0.000000
Fulton St,0.000000
Clark St,0.000000
Borough Hall,100.000000
Park Place,66.666667
Harlem-148th St,0.000000
135th St,40.000000
125th St,26.315789
145th St,0.000000
116th St,0.000000
18th Av,0.000000
Av N,0.000000
Kings Highway,0.000000
Ditmas Av,0.000000
Av X,0.000000
Neptune Av-Van Siclen,0.000000
Franklin Av,33.333333
Ralph Av,0.000000
Shepherd Av,0.000000
Kingston-Throop,0.000000
183rd St,0.000000
Kingsbridge Rd,0.000000
176th St,0.000000
Knickerbocker Av,0.000000
Forest Av,0.000000
Central Av,0.000000
Seneca Av,0.000000
Broad St,0.000000
St Lawrence Av,0.000000
Cypress Av,0.000000
Zerega Av,0.000000
Parkchester-East 177th St,0.000000
138th St-3rd Ave,0.000000
Bay Parkway-22nd Av,0.000000
Lafayette Av,0.000000
Yankee Stadium-161st St,100.000000
149th St-Grand Concourse,0.000000
Woodlawn,0.000000
170th St,0.000000
Mosholu Parkway,0.000000
Canal St,41.176471
Chambers St,31.250000
Brook Av,0.000000
Pelham Bay Park,100.000000
Broadway,0.000000
Ditmars Blvd,0.000000
Astoria Blvd-Hoyt Av,0.000000
88th St-Boyd Av,0.000000
95th St,0.000000
Union St,0.000000
Atlantic Av-Barclays Ctr,100.000000
36th St,0.000000
Cathedral Parkway-110th St,0.000000
Av J,0.000000
Atlantic Av,25.000000
Av M,0.000000
5th Av,0.000000
34th St,100.000000
49th St,100.000000
Beach 98th St,0.000000
Aqueduct Racetrack,0.000000
20th Av,0.000000
Freeman St,0.000000
Av I,0.000000
Av P,0.000000
Nostrand Av,0.000000
Clinton & Washington Avs,0.000000
Liberty Av,0.000000
Rockaway Av,0.000000
Fordham Rd,40.000000
167th St,0.000000
Westchester Square-East Tremont Av,0.000000
Castle Hill Av,0.000000
Buhre Av,0.000000
Elder Av,0.000000
110th St-Central Park North,0.000000
Av U,0.000000
Utica Av,63.636364
Euclid Av,100.000000
Van Siclen Av,0.000000
138th St,0.000000
Mt Eden Av,0.000000
Fresh Pond Rd,0.000000
Metropolitan Av,20.000000
Morrison Av-Soundview Av,0.000000
Longwood Av,0.000000
Jay St - Borough Hall,0.000000
Bedford Park Blvd-Lehman College,0.000000
Burnside Av,0.000000
East 143rd St-St Mary's St,0.000000
Whitlock Av,0.000000
Middletown Rd,0.000000
30 Av-Grand Av,0.000000
Baychester Av,0.000000
Gun Hill Rd,0.000000
111th St-Greenwood Av,0.000000
Grant Av,0.000000
Bay Ridge Av,0.000000
77th St,0.000000
Prospect Av,0.000000
End Exploring Related Columns
Task: What percentage of subway stations in each New York borough have at least one ADA-compliant entrance?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```csv
borough_name,percentage_ada_stations
borough_name1:str,percentage1:float between 0 and 100
borough_name2:str,percentage2:float between 0 and 100
...
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'NEW_YORK_PLUS': {'NEW_YORK_311': ['_311_SERVICE_REQUESTS'], 'NEW_YORK_CITIBIKE': ['CITIBIKE_STATIONS', 'CITIBIKE_TRIPS'], 'NEW_YORK_MV_COLLISIONS': ['NYPD_MV_COLLISIONS'], 'NEW_YORK_SUBWAY': ['GEO_NYC_BOROUGH_BOUNDARIES', 'ROUTES', 'STATIONS', 'STATION_COMPLEXES', 'STATION_ENTRANCES', 'STOP_TIMES', 'SUBWAY_RIDERSHIP_2013_PRESENT', 'TRIPS'], 'NEW_YORK_TAXI_TRIPS': ['TAXI_ZONE_GEOM', 'TLC_FHV_TRIPS_2015', 'TLC_FHV_TRIPS_2016', 'TLC_FHV_TRIPS_2017', 'TLC_GREEN_TRIPS_2014', 'TLC_GREEN_TRIPS_2015', 'TLC_GREEN_TRIPS_2016', 'TLC_GREEN_TRIPS_2017', 'TLC_GREEN_TRIPS_2018', 'TLC_GREEN_TRIPS_2019', 'TLC_GREEN_TRIPS_2020', 'TLC_GREEN_TRIPS_2021', 'TLC_GREEN_TRIPS_2022', 'TLC_GREEN_TRIPS_2023', 'TLC_YELLOW_TRIPS_2011', 'TLC_YELLOW_TRIPS_2012', 'TLC_YELLOW_TRIPS_2013', 'TLC_YELLOW_TRIPS_2014', 'TLC_YELLOW_TRIPS_2015', 'TLC_YELLOW_TRIPS_2016', 'TLC_YELLOW_TRIPS_2017', 'TLC_YELLOW_TRIPS_2018', 'TLC_YELLOW_TRIPS_2019', 'TLC_YELLOW_TRIPS_2020', 'TLC_YELLOW_TRIPS_2021', 'TLC_YELLOW_TRIPS_2022', 'TLC_YELLOW_TRIPS_2023'], 'NEW_YORK_TREES': ['TREE_CENSUS_1995', 'TREE_CENSUS_2005', 'TREE_CENSUS_2015', 'TREE_SPECIES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 11:49:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:49:41 - root - INFO - To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```sql
WITH total_stations AS (
  SELECT "borough_name", COUNT(DISTINCT "station_name") AS "total_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
  GROUP BY "borough_name"
),
ada_stations AS (
  SELECT s."borough_name", COUNT(DISTINCT s."station_name") AS "ada_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
  JOIN (
    SELECT DISTINCT "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "ada_compliant" = TRUE
  ) ada
  ON s."station_name" = ada."station_name"
  GROUP BY s."borough_name"
)
SELECT t."borough_name",
       ROUND(COALESCE((a."ada_stations" * 100.0) / t."total_stations", 0), 4) AS "percentage_ada_stations"
FROM total_stations t
LEFT JOIN ada_stations a ON t."borough_name" = a."borough_name";
```
2025-01-25 11:49:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:49:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:49:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:49:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:49:43 - snowflake.connector.connection - INFO - closed
2025-01-25 11:49:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:49:43 - root - INFO - itercount: 1
2025-01-25 11:49:43 - root - INFO - 0
2025-01-25 11:49:43 - root - INFO - results: 
borough_name,percentage_ada_stations
Queens,2.6667
Brooklyn,8.8889
Bronx,4.8387
Manhattan,6.0606
Staten Island,0.0000


2025-01-25 11:49:43 - root - INFO - Please check the answer again by reviewing What percentage of subway stations in each New York borough have at least one ADA-compliant entrance?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```csv
borough_name,percentage_ada_stations
borough_name1:str,percentage1:float between 0 and 100
borough_name2:str,percentage2:float between 0 and 100
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
borough_name,percentage_ada_stations
Queens,2.6667
Brooklyn,8.8889
Bronx,4.8387
Manhattan,6.0606
Staten Island,0.0000
Current sql:
WITH total_stations AS (
  SELECT "borough_name", COUNT(DISTINCT "station_name") AS "total_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
  GROUP BY "borough_name"
),
ada_stations AS (
  SELECT s."borough_name", COUNT(DISTINCT s."station_name") AS "ada_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
  JOIN (
    SELECT DISTINCT "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "ada_compliant" = TRUE
  ) ada
  ON s."station_name" = ada."station_name"
  GROUP BY s."borough_name"
)
SELECT t."borough_name",
       ROUND(COALESCE((a."ada_stations" * 100.0) / t."total_stations", 0), 4) AS "percentage_ada_stations"
FROM total_stations t
LEFT JOIN ada_stations a ON t."borough_name" = a."borough_name";
2025-01-25 11:50:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:50:12 - root - INFO - To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```sql
WITH total_stations AS (
  SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
  GROUP BY "borough_name"
),
ada_stations AS (
  SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
  JOIN (
    SELECT DISTINCT "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "ada_compliant" = TRUE
  ) ada
  ON s."station_name" = ada."station_name"
  GROUP BY s."borough_name"
)
SELECT t."borough_name",
       ROUND(COALESCE((a."ada_stations" * 100.0) / t."total_stations", 0), 4) AS "percentage_ada_stations"
FROM total_stations t
LEFT JOIN ada_stations a ON t."borough_name" = a."borough_name";
```
2025-01-25 11:50:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:50:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:50:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:50:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:50:13 - snowflake.connector.connection - INFO - closed
2025-01-25 11:50:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:50:14 - root - INFO - itercount: 2
2025-01-25 11:50:14 - root - INFO - 0
2025-01-25 11:50:14 - root - INFO - results: 
borough_name,percentage_ada_stations
Queens,2.4390
Brooklyn,11.2426
Bronx,5.7143
Manhattan,8.6093
Staten Island,0.0000


2025-01-25 11:50:14 - root - INFO - Please check the answer again by reviewing What percentage of subway stations in each New York borough have at least one ADA-compliant entrance?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```csv
borough_name,percentage_ada_stations
borough_name1:str,percentage1:float between 0 and 100
borough_name2:str,percentage2:float between 0 and 100
...
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
borough_name,percentage_ada_stations
Queens,2.4390
Brooklyn,11.2426
Bronx,5.7143
Manhattan,8.6093
Staten Island,0.0000
Current sql:
WITH total_stations AS (
  SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
  GROUP BY "borough_name"
),
ada_stations AS (
  SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
  JOIN (
    SELECT DISTINCT "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "ada_compliant" = TRUE
  ) ada
  ON s."station_name" = ada."station_name"
  GROUP BY s."borough_name"
)
SELECT t."borough_name",
       ROUND(COALESCE((a."ada_stations" * 100.0) / t."total_stations", 0), 4) AS "percentage_ada_stations"
FROM total_stations t
LEFT JOIN ada_stations a ON t."borough_name" = a."borough_name";
2025-01-25 11:51:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:51:06 - root - INFO - To determine the percentage of subway stations in each New York borough that have at least one ADA-compliant entrance, we use the `STATIONS` and `STATION_ENTRANCES` tables. We identify stations with at least one ADA-compliant entrance and calculate the percentage within each borough.

```sql
WITH total_stations AS (
  SELECT "borough_name", COUNT(DISTINCT "station_id") AS "total_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS"
  GROUP BY "borough_name"
),
ada_stations AS (
  SELECT s."borough_name", COUNT(DISTINCT s."station_id") AS "ada_stations"
  FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATIONS" s
  JOIN (
    SELECT DISTINCT "station_name"
    FROM "NEW_YORK_PLUS"."NEW_YORK_SUBWAY"."STATION_ENTRANCES"
    WHERE "ada_compliant" = TRUE
  ) ada
  ON s."station_name" = ada."station_name"
  GROUP BY s."borough_name"
)
SELECT t."borough_name",
       ROUND(COALESCE((a."ada_stations" * 100.0) / t."total_stations", 0), 4) AS "percentage_ada_stations"
FROM total_stations t
LEFT JOIN ada_stations a ON t."borough_name" = a."borough_name";
```
2025-01-25 11:51:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-25 11:51:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-25 11:51:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-25 11:51:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-25 11:51:07 - snowflake.connector.connection - INFO - closed
2025-01-25 11:51:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-25 11:51:07 - root - INFO - itercount: 3
2025-01-25 11:51:07 - root - INFO - 0
2025-01-25 11:51:07 - root - INFO - Total iteration counts: 3
