```plaintext
0result.sql
```

**Reasoning:**

After reviewing both SQL queries provided (`0result.sql` and `2result.sql`), we determine that `0result.sql` is the correct and more effective solution for the following reasons:

1. **Structured and Readable Approach**:
   - `0result.sql` uses **Common Table Expressions (CTEs)** with the `WITH` clause to break down the problem into manageable parts. This makes the query more organized and easier to understand.
   - Each CTE (`t2015`, `t2018`, `national_totals`, `national_percentage_change`, `state_changes`) serves a specific purpose, leading to clear and logical steps in the calculation process.

2. **Efficiency**:
   - By calculating the **national percentage change** once in the `national_percentage_change` CTE, `0result.sql` avoids recalculating this value multiple times. This improves performance, especially with larger datasets.
   - In contrast, `2result.sql` calculates the national percentage change within the `ORDER BY` clause, which may lead to redundant computations for each state in the result set.

3. **Scoped Calculations**:
   - `0result.sql` performs calculations at the appropriate scope. It separates state-level and national-level computations, which minimizes errors and makes the query maintenance-friendly.
   - The use of rounding and absolute difference calculations is consistent and clearly defined in the `state_changes` CTE.

4. **Consistent Results**:
   - Both queries produce the same results, listing the top 5 states closest to the national average percentage change. However, `0result.sql` achieves this in a more systematic and transparent manner.

5. **Best Practices**:
   - Using CTEs aligns with SQL best practices for complex queries, enhancing readability and debugging capabilities.

**Conclusion**:

For these reasons, **`0result.sql`** is the correct and preferred SQL query to answer the task of identifying the 5 states whose percentage change in unsheltered homeless individuals from 2015 to 2018 is closest to the national average.