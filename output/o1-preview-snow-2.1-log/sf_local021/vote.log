After comparing the three SQL queries and their results, I conclude that **`1result.sql`** is the correct answer.

**Reasoning:**

The SQL query in **`1result.sql`** effectively addresses the task by following a structured approach using Common Table Expressions (CTEs):

1. **`runs_per_match`** CTE:
   - Calculates the total runs scored by each striker in each match by grouping the data by `"striker"` and `"match_id"`.
   - This step identifies the performance of each striker in every match.

2. **`strikers_over_50`** CTE:
   - Filters the strikers who have scored more than 50 runs in at least one match.
   - Uses the results from `runs_per_match` to find these strikers.
   - Ensures that only strikers meeting the specified criterion are considered in the subsequent calculations.

3. **`total_runs_per_striker`** CTE:
   - Calculates the total runs scored by each of these strikers across all matches.
   - Aggregates the runs for the strikers identified in `strikers_over_50`.
   - Provides the total runs needed to compute the average.

4. **Final SELECT Statement:**
   - Computes the average of the total runs of the strikers who have scored more than 50 runs in at least one match.
   - Uses the `ROUND` function for precision.

This query is comprehensive and methodical, ensuring accuracy in the identification of the required strikers and the calculation of their total and average scores. By using CTEs, the query enhances readability and maintainability.

**Therefore, the SQL in `1result.sql` correctly answers the question.**

```plaintext
1result.sql
```