WITH
-- Identify the cohort of users who first used the app between September 1 and September 7, 2018 (Shanghai time)
cohort AS (
  SELECT DISTINCT "user_pseudo_id"
  FROM (
    SELECT "user_pseudo_id",
           CONVERT_TIMEZONE('UTC', 'Asia/Shanghai', TO_TIMESTAMP_NTZ("user_first_touch_timestamp" / 1000000)) AS "first_touch_time_shanghai"
    FROM (
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180901"
      UNION ALL
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180902"
      UNION ALL
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180903"
      UNION ALL
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180904"
      UNION ALL
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180905"
      UNION ALL
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180906"
      UNION ALL
      SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180907"
    )
  )
  WHERE "first_touch_time_shanghai" >= '2018-09-01 00:00:00' AND "first_touch_time_shanghai" <= '2018-09-07 23:59:59'
),

-- Get events of the cohort users in the following 3 weeks
events_after_cohort AS (
  SELECT "user_pseudo_id", "event_date"
  FROM (
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180908"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180909"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180910"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180911"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180912"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180913"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180914"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180915"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180916"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180917"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180918"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180919"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180920"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180921"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180922"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180923"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180924"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180925"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180926"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180927"
    UNION ALL
    SELECT * FROM "FIREBASE"."ANALYTICS_153293282"."EVENTS_20180928"
  )
  WHERE "user_pseudo_id" IN (SELECT "user_pseudo_id" FROM cohort)
),

-- Categorize users based on the week they returned
week_users AS (
  SELECT DISTINCT "user_pseudo_id",
         CASE
           WHEN "event_date" BETWEEN '20180908' AND '20180914' THEN 'Week 1'
           WHEN "event_date" BETWEEN '20180915' AND '20180921' THEN 'Week 2'
           WHEN "event_date" BETWEEN '20180922' AND '20180928' THEN 'Week 3'
           ELSE NULL
         END AS "Week"
  FROM events_after_cohort
  WHERE "event_date" BETWEEN '20180908' AND '20180928'
)

-- Calculate the retention rate for each week
SELECT "Week",
       ROUND(COUNT(DISTINCT "user_pseudo_id") * 100.0 / (SELECT COUNT(*) FROM cohort), 4) AS "Retention_Rate"
FROM week_users
GROUP BY "Week"
ORDER BY "Week";