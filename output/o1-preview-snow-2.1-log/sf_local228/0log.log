2025-01-26 13:55:16 - openai._base_client - INFO - Retrying request to /chat/completions in 0.419783 seconds
2025-01-26 13:56:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 13:56:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:07 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:07 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:08 - root - INFO - SQL:
SELECT * FROM IPL.IPL."BATSMAN_SCORED"
   LIMIT 100;
Results:
match_id,over_id,ball_id,runs_scored,innings_no
335987,1,1,1,2
335987,1,2,0,1
335987,1,3,0,2
335987,1,4,0,1
335987,1,4,1,2
335987,1,5,0,1
335987,1,5,1,2
335987,1,6,0,1
335987,1,6,0,2
335987,1,7,0,1
335987,1,7,0,2
335987,2,1,0,1
335987,2,1,0,2
335987,2,2,4,1
335987,2,2,0,2
335987,2,3,4,1
335987,2,3,0,2
335987,2,4,6,1
335987,2,4,1,2
335987,2,5,4,1
335987,2,5,0,2
335987,2,6,0,1
335987,2,6,0,2
335987,3,1,0,1
335987,3,1,0,2
335987,3,2,0,1
335987,3,2,0,2
335987,3,3,0,1
335987,3,3,1,2
335987,3,4,4,1
335987,3,4,0,2
335987,3,5,1,1
335987,3,6,0,1
335987,3,6,0,2
335987,3,7,1,2
335987,4,1,2,2
335987,4,2,6,1
335987,4,2,1,2
335987,4,3,0,1
335987,4,3,0,2
335987,4,4,4,1
335987,4,4,0,2
335987,4,5,0,1
335987,4,5,0,2
335987,4,6,1,1
335987,4,6,0,2
335987,4,7,6,1
335987,5,1,4,1
335987,5,1,1,2
335987,5,2,1,1
335987,5,2,1,2
335987,5,3,4,1
335987,5,3,0,2
335987,5,4,0,1
335987,5,4,6,2
335987,5,5,1,1
335987,5,5,0,2
335987,5,6,0,1
335987,5,6,0,2
335987,6,1,1,1
335987,6,1,0,2
335987,6,2,0,1
335987,6,2,0,2
335987,6,3,0,1
335987,6,3,0,2
335987,6,4,0,1
335987,6,4,1,2
335987,6,5,0,1
335987,6,5,1,2
335987,6,6,0,1
335987,6,6,0,2
335987,7,1,1,1
335987,7,1,0,2
335987,7,2,1,1
335987,7,2,0,2
335987,7,3,1,1
335987,7,3,1,2
335987,7,4,2,1
335987,7,5,1,1
335987,7,6,1,1
335987,7,6,0,2
335987,7,7,0,2
335987,7,8,4,2
335987,8,1,0,1
335987,8,1,1,2
335987,8,2,1,1
335987,8,2,0,2
335987,8,3,1,1
335987,8,3,1,2
335987,8,4,1,1
335987,8,4,2,2
335987,8,5,1,1
335987,8,5,0,2
335987,8,6,1,1
335987,8,6,0,2
335987,9,1,0,1
335987,9,1,0,2
335987,9,2,0,1
335987,9,2,0,2
335987,9,3,0,1

2025-01-26 13:56:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:09 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:10 - root - INFO - SQL:
SELECT bs."match_id", bs."over_id", bs."ball_id", bs."innings_no", bs."runs_scored", bb."striker"
   FROM IPL.IPL."BATSMAN_SCORED" bs
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON bs."match_id" = bb."match_id"
    AND bs."over_id" = bb."over_id"
    AND bs."ball_id" = bb."ball_id"
    AND bs."innings_no" = bb."innings_no"
   LIMIT 100;
Results:
match_id,over_id,ball_id,innings_no,runs_scored,striker
335987,1,1,2,1,6
335987,1,2,1,0,2
335987,1,3,2,0,7
335987,1,4,1,0,2
335987,1,4,2,1,7
335987,1,5,1,0,2
335987,1,5,2,1,6
335987,1,6,1,0,2
335987,1,6,2,0,7
335987,1,7,1,0,2
335987,1,7,2,0,7
335987,2,1,1,0,2
335987,2,1,2,0,6
335987,2,2,1,4,2
335987,2,2,2,0,8
335987,2,3,1,4,2
335987,2,3,2,0,8
335987,2,4,1,6,2
335987,2,4,2,1,8
335987,2,5,1,4,2
335987,2,5,2,0,7
335987,2,6,1,0,2
335987,2,6,2,0,7
335987,3,1,1,0,1
335987,3,1,2,0,8
335987,3,2,1,0,1
335987,3,2,2,0,8
335987,3,3,1,0,1
335987,3,3,2,1,9
335987,3,4,1,4,2
335987,3,4,2,0,7
335987,3,5,1,1,2
335987,3,6,1,0,1
335987,3,6,2,0,7
335987,3,7,2,1,7
335987,4,1,2,2,7
335987,4,2,1,6,2
335987,4,2,2,1,7
335987,4,3,1,0,2
335987,4,3,2,0,9
335987,4,4,1,4,1
335987,4,4,2,0,9
335987,4,5,1,0,1
335987,4,5,2,0,7
335987,4,6,1,1,1
335987,4,6,2,0,7
335987,4,7,1,6,2
335987,5,1,1,4,1
335987,5,1,2,1,9
335987,5,2,1,1,1
335987,5,2,2,1,7
335987,5,3,1,4,2
335987,5,3,2,0,9
335987,5,4,1,0,2
335987,5,4,2,6,9
335987,5,5,1,1,2
335987,5,5,2,0,9
335987,5,6,1,0,1
335987,5,6,2,0,10
335987,6,1,1,1,2
335987,6,1,2,0,7
335987,6,2,1,0,1
335987,6,2,2,0,7
335987,6,3,1,0,3
335987,6,3,2,0,11
335987,6,4,1,0,3
335987,6,4,2,1,11
335987,6,5,1,0,3
335987,6,5,2,1,10
335987,6,6,1,0,3
335987,6,6,2,0,11
335987,7,1,1,1,2
335987,7,1,2,0,10
335987,7,2,1,1,3
335987,7,2,2,0,10
335987,7,3,1,1,2
335987,7,3,2,1,10
335987,7,4,1,2,3
335987,7,5,1,1,3
335987,7,6,1,1,2
335987,7,6,2,0,11
335987,7,7,2,0,11
335987,7,8,2,4,11
335987,8,1,1,0,2
335987,8,1,2,1,10
335987,8,2,1,1,2
335987,8,2,2,0,11
335987,8,3,1,1,3
335987,8,3,2,1,10
335987,8,4,1,1,2
335987,8,4,2,2,11
335987,8,5,1,1,3
335987,8,5,2,0,11
335987,8,6,1,1,2
335987,8,6,2,0,10
335987,9,1,1,0,2
335987,9,1,2,0,12
335987,9,2,1,0,2
335987,9,2,2,0,12
335987,9,3,1,0,2

2025-01-26 13:56:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 9
2025-01-26 13:56:11 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:11 - root - INFO - SQL:
SELECT DISTINCT "kind_out"
   FROM IPL.IPL."WICKET_TAKEN";
Results:
kind_out
caught
bowled
run out
lbw
retired hurt
stumped
caught and bowled
hit wicket
obstructing the field

2025-01-26 13:56:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:13 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:13 - root - INFO - SQL:
SELECT * FROM IPL.IPL."WICKET_TAKEN"
   LIMIT 100;
Results:
match_id,over_id,ball_id,player_out,kind_out,innings_no
419167,10,3,154,caught,1
419167,10,3,46,caught,2
419167,12,4,8,caught,2
419167,14,4,96,caught,2
419167,18,4,208,caught,1
419168,2,7,18,caught,1
419168,5,5,21,caught,1
419168,6,1,53,caught,2
419168,6,5,178,caught,2
419168,8,2,57,caught,2
419168,14,2,20,caught,1
419168,15,5,109,caught,1
419168,16,2,56,caught,2
419168,18,4,188,caught,2
419168,20,2,131,caught,2
419168,20,4,125,caught,1
419169,1,4,53,caught,1
419169,4,2,57,caught,1
419169,7,1,56,caught,1
419169,17,3,54,caught,1
419169,19,3,131,caught,1
419170,2,4,42,caught,2
419170,8,2,185,caught,1
419170,9,4,18,caught,1
419170,12,2,23,caught,1
419170,15,2,133,caught,2
419170,15,5,79,caught,2
419170,17,6,154,caught,2
419170,18,1,20,caught,1
419170,19,6,221,caught,2
501203,1,6,185,caught,1
501203,11,3,21,caught,1
501203,16,2,9,caught,2
501203,18,2,20,caught,1
501203,20,2,63,caught,2
501204,5,5,42,caught,1
501204,6,3,26,caught,1
501204,6,5,252,caught,2
501204,11,1,257,caught,1
501204,13,6,154,caught,1
501204,18,3,258,caught,1
501204,20,1,112,caught,1
501204,20,3,94,caught,1
501205,2,2,135,caught,2
501205,9,6,55,caught,1
501205,10,6,260,caught,2
501205,12,3,2,caught,1
501205,18,4,79,caught,2
501205,19,4,259,caught,1
501206,7,6,254,caught,1
501206,15,2,183,caught,1
501206,18,4,106,caught,1
501207,1,1,74,caught,2
501207,1,4,53,caught,1
501207,2,3,100,caught,1
501207,3,4,167,caught,1
501207,4,3,88,caught,1
501207,8,5,171,caught,2
501207,9,3,48,caught,1
501207,9,3,157,caught,2
501207,18,1,67,caught,1
501207,20,1,14,caught,1
501208,9,6,26,caught,2
501208,13,2,154,caught,2
501208,13,3,9,caught,1
501208,14,6,93,caught,2
501208,17,4,258,caught,2
501208,18,1,112,caught,2
501208,20,6,31,caught,1
501209,1,3,41,caught,1
501209,5,5,254,caught,1
501209,8,1,262,caught,1
501209,8,3,183,caught,1
501209,8,3,6,caught,2
501209,11,5,266,caught,2
501209,18,4,187,caught,1
501209,19,7,54,caught,1
501210,5,4,8,caught,1
501211,1,2,21,caught,1
501211,6,5,53,caught,2
501211,14,6,264,caught,2
501212,1,1,2,caught,1
501212,3,5,64,caught,1
501212,5,5,17,caught,1
501212,8,4,74,caught,2
501212,10,5,171,caught,2
501212,12,2,27,caught,2
501212,16,2,104,caught,1
501212,17,1,35,caught,1
501213,2,6,135,caught,2
501213,3,5,42,caught,1
501213,5,6,260,caught,2
501213,7,4,110,caught,2
501213,9,6,65,caught,1
501213,12,1,79,caught,2
501213,15,4,26,caught,1
501213,17,5,203,caught,2
501213,17,6,268,caught,2
501213,20,1,269,caught,2
501213,20,2,154,caught,1

2025-01-26 13:56:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:14 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:15 - root - INFO - SQL:
SELECT wt."match_id", wt."over_id", wt."ball_id", wt."innings_no", wt."player_out", bb."bowler"
   FROM IPL.IPL."WICKET_TAKEN" wt
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON wt."match_id" = bb."match_id"
    AND wt."over_id" = bb."over_id"
    AND wt."ball_id" = bb."ball_id"
    AND wt."innings_no" = bb."innings_no"
   LIMIT 100;
Results:
match_id,over_id,ball_id,innings_no,player_out,bowler
335987,2,1,2,6,84
335987,3,2,2,8,106
335987,5,5,2,9,82
335987,6,2,1,1,15
335987,6,2,2,7,106
335987,8,5,2,11,1
335987,9,2,2,12,82
335987,9,8,2,10,82
335987,12,1,2,13,1
335987,13,1,1,3,9
335987,14,1,2,15,1
335987,16,2,2,16,63
335987,18,1,1,4,13
335988,3,5,1,17,66
335988,6,6,2,24,120
335988,7,2,1,18,29
335988,8,1,1,20,25
335988,11,2,2,25,435
335988,13,2,1,21,68
335988,15,2,2,27,119
335988,16,3,1,22,29
335988,18,4,2,26,121
335989,2,4,2,41,32
335989,3,3,1,30,118
335989,4,5,1,31,436
335989,7,2,1,32,89
335989,8,4,1,34,90
335989,11,3,1,33,89
335989,13,1,1,36,89
335989,15,2,1,35,175
335989,18,1,1,38,90
335990,2,5,1,43,15
335990,4,4,1,45,15
335990,5,7,2,51,80
335990,6,4,1,44,15
335990,9,6,2,6,50
335990,10,6,2,52,44
335990,14,3,1,47,12
335990,14,4,2,8,73
335990,17,5,1,46,12
335990,19,4,2,9,50
335990,19,5,1,48,14
335990,20,6,1,49,15
335991,2,2,2,2,61
335991,3,1,2,3,60
335991,4,2,1,54,84
335991,5,2,2,62,60
335991,5,3,1,55,106
335991,9,1,1,53,83
335991,9,4,1,57,83
335991,12,4,1,58,5
335991,13,8,2,1,131
335991,15,3,1,232,4
335991,17,3,2,5,131
335991,18,4,1,56,82
335991,18,6,1,60,82
335991,19,3,1,59,83
335991,19,4,1,131,83
335992,2,1,2,33,77
335992,3,3,2,31,66
335992,5,5,1,24,126
335992,5,5,2,69,25
335992,7,3,1,26,38
335992,8,4,1,64,37
335992,9,6,1,25,38
335992,12,2,2,34,29
335992,17,5,1,27,38
335992,18,2,1,29,39
335992,18,4,1,66,39
335992,19,6,1,65,126
335993,2,6,1,53,117
335993,4,3,2,40,61
335993,6,1,1,55,117
335993,8,6,1,54,90
335993,10,3,1,56,90
335993,13,1,1,70,89
335993,17,1,1,59,89
335993,19,4,1,57,89
335993,20,2,1,232,91
335994,1,8,2,43,22
335994,4,1,1,17,73
335994,4,4,2,44,120
335994,5,4,1,19,80
335994,10,4,2,46,119
335994,12,4,2,49,435
335994,15,2,2,71,119
335994,15,6,1,21,72
335994,16,3,2,72,121
335994,19,5,2,50,121
335994,19,7,1,18,73
335994,20,5,1,20,72
335995,3,1,2,69,60
335995,3,2,1,53,31
335995,3,6,1,70,31
335995,9,3,1,55,38
335995,10,3,2,31,99
335995,12,6,2,32,70
335995,18,1,2,33,70
335995,18,3,2,74,70
335995,18,6,1,57,38

2025-01-26 13:56:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:16 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:16 - root - INFO - SQL:
SELECT "match_id", "season_id", "match_date"
   FROM IPL.IPL."MATCH"
   LIMIT 100;
Results:
match_id,season_id,match_date
335987,1,2008-04-18
335988,1,2008-04-19
335989,1,2008-04-19
335990,1,2008-04-20
335991,1,2008-04-20
335992,1,2008-04-21
335993,1,2008-04-22
335994,1,2008-04-23
335995,1,2008-04-24
335996,1,2008-04-25
335997,1,2008-04-26
335998,1,2008-04-26
335999,1,2008-04-27
336000,1,2008-04-27
336001,1,2008-04-28
336002,1,2008-04-29
336003,1,2008-04-30
336004,1,2008-05-01
336005,1,2008-05-01
336006,1,2008-05-02
336007,1,2008-05-25
336008,1,2008-05-03
336009,1,2008-05-04
336010,1,2008-05-04
336011,1,2008-05-05
336012,1,2008-05-06
336013,1,2008-05-07
336014,1,2008-05-08
336015,1,2008-05-08
336016,1,2008-05-09
336017,1,2008-05-28
336018,1,2008-05-10
336019,1,2008-05-11
336020,1,2008-05-11
336021,1,2008-05-12
336022,1,2008-05-13
336023,1,2008-05-14
336024,1,2008-05-28
336025,1,2008-05-15
336026,1,2008-05-16
336027,1,2008-05-17
336028,1,2008-05-17
336029,1,2008-05-18
336030,1,2008-05-18
336031,1,2008-05-19
336032,1,2008-05-20
336033,1,2008-05-21
336034,1,2008-05-21
336036,1,2008-05-23
336037,1,2008-05-24
336038,1,2008-05-24
336039,1,2008-05-03
336040,1,2008-05-25
336041,1,2008-05-26
336042,1,2008-05-27
336043,1,2008-05-30
336044,1,2008-05-31
336045,1,2008-06-01
392186,2,2009-04-18
392187,2,2009-04-18
392188,2,2009-04-19
392189,2,2009-04-19
392190,2,2009-04-20
392191,2,2009-04-21
392193,2,2009-04-22
392194,2,2009-04-23
392196,2,2009-04-24
392197,2,2009-04-25
392199,2,2009-04-26
392200,2,2009-04-26
392201,2,2009-04-27
392202,2,2009-04-27
392203,2,2009-04-28
392204,2,2009-04-29
392205,2,2009-04-29
392206,2,2009-04-30
392207,2,2009-04-30
392208,2,2009-05-01
392209,2,2009-05-01
392210,2,2009-05-02
392211,2,2009-05-02
392212,2,2009-05-03
392213,2,2009-05-03
392214,2,2009-05-04
392215,2,2009-05-05
392216,2,2009-05-05
392217,2,2009-05-06
392218,2,2009-05-07
392219,2,2009-05-07
392220,2,2009-05-08
392221,2,2009-05-09
392222,2,2009-05-09
392223,2,2009-05-10
392224,2,2009-05-10
392225,2,2009-05-11
392226,2,2009-05-12
392227,2,2009-05-12
392228,2,2009-05-13
392229,2,2009-05-14
392230,2,2009-05-14

2025-01-26 13:56:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:18 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:18 - root - INFO - SQL:
SELECT "player_id", "player_name"
   FROM IPL.IPL."PLAYER"
   LIMIT 100;
Results:
player_id,player_name
1,SC Ganguly
2,BB McCullum
3,RT Ponting
4,DJ Hussey
5,Mohammad Hafeez
6,R Dravid
7,W Jaffer
8,V Kohli
9,JH Kallis
10,CL White
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
16,SB Joshi
17,PA Patel
18,ML Hayden
19,MEK Hussey
20,MS Dhoni
21,SK Raina
22,JDP Oram
23,S Badrinath
24,K Goel
25,JR Hopes
26,KC Sangakkara
27,Yuvraj Singh
28,SM Katich
29,IK Pathan
30,T Kohli
31,YK Pathan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
40,G Gambhir
41,V Sehwag
42,S Dhawan
43,L Ronchi
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
51,S Chanderpaul
52,LRPL Taylor
53,AC Gilchrist
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
59,SB Bangar
60,WPUJC Vaas
61,RP Singh
62,WP Saha
63,LR Shukla
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
69,Kamran Akmal
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
76,RR Sarwan
77,S Sreesanth
78,VRV Singh
79,SS Tiwary
80,DS Kulkarni
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
90,MF Maharoof
91,VY Mahesh
92,TM Srivastava
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
100,SE Marsh
101,SA Asnodkar

2025-01-26 13:56:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:20 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:20 - root - INFO - SQL:
SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
   FROM IPL.IPL."BATSMAN_SCORED" bs
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON bs."match_id" = bb."match_id"
    AND bs."over_id" = bb."over_id"
    AND bs."ball_id" = bb."ball_id"
    AND bs."innings_no" = bb."innings_no"
   GROUP BY bb."striker"
   ORDER BY total_runs DESC, bb."striker" ASC
   LIMIT 100;
Results:
striker,TOTAL_RUNS
21,4083
8,3987
57,3874
40,3589
46,3390
162,3356
187,3339
20,3270
110,3161
42,3082
31,2719
41,2702
85,2529
88,2515
185,2490
32,2469
2,2431
9,2414
133,2329
208,2325
27,2281
6,2170
100,2148
147,2146
53,2069
19,1977
221,1959
154,1926
17,1868
96,1800
64,1771
26,1656
35,1552
183,1466
23,1439
320,1426
104,1395
87,1324
4,1322
62,1304
254,1304
1,1303
303,1287
71,1262
306,1212
79,1205
135,1154
29,1079
18,1074
52,1017
351,1015
158,1001
54,985
56,974
109,962
10,949
383,942
305,917
236,897
97,886
339,842
216,789
214,788
50,783
260,781
44,768
345,728
74,724
354,713
191,691
178,676
255,676
48,672
197,663
355,657
163,648
157,604
237,597
334,574
161,530
171,514
204,506
67,505
167,496
308,472
310,470
276,468
393,449
101,423
25,417
280,414
192,409
266,401
11,394
203,390
321,388
63,386
372,379
112,375
65,368

2025-01-26 13:56:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:21 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:21 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:22 - root - INFO - SQL:
SELECT bb."bowler", COUNT(*) AS total_wickets
   FROM IPL.IPL."WICKET_TAKEN" wt
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON wt."match_id" = bb."match_id"
    AND wt."over_id" = bb."over_id"
    AND wt."ball_id" = bb."ball_id"
    AND wt."innings_no" = bb."innings_no"
   WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
   GROUP BY bb."bowler"
   ORDER BY total_wickets DESC, bb."bowler" ASC
   LIMIT 100;
Results:
bowler,TOTAL_WICKETS
194,143
136,123
71,122
67,119
50,118
201,100
73,97
81,97
15,92
61,90
94,90
131,89
299,85
315,85
14,84
109,82
32,81
29,79
35,77
151,75
190,75
80,72
126,72
232,72
364,70
89,68
106,68
9,65
39,65
121,59
221,56
38,55
382,54
84,53
367,52
357,51
310,49
186,47
124,45
188,45
276,42
31,40
235,40
270,40
350,40
374,40
333,39
77,38
140,38
120,37
248,37
166,36
163,35
27,34
378,34
403,34
309,33
83,31
296,31
334,31
116,30
280,30
293,30
82,29
311,29
321,29
386,29
175,28
196,28
223,28
346,28
90,27
191,27
256,27
267,27
375,26
66,25
192,25
370,25
21,24
147,24
154,23
238,23
316,23
102,22
451,22
91,21
177,21
56,20
371,20
253,19
258,19
60,18
137,18
162,18
356,18
359,18
104,17
149,17
325,17

2025-01-26 13:56:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:23 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:24 - root - INFO - SQL:
SELECT m."season_id", bb."striker", SUM(bs."runs_scored") AS total_runs
    FROM IPL.IPL."BATSMAN_SCORED" bs
    JOIN IPL.IPL."BALL_BY_BALL" bb
      ON bs."match_id" = bb."match_id"
     AND bs."over_id" = bb."over_id"
     AND bs."ball_id" = bb."ball_id"
     AND bs."innings_no" = bb."innings_no"
    JOIN IPL.IPL."MATCH" m
      ON bs."match_id" = m."match_id"
    GROUP BY m."season_id", bb."striker"
    ORDER BY m."season_id", total_runs DESC, bb."striker" ASC
    LIMIT 100;
Results:
season_id,striker,TOTAL_RUNS
1,100,616
1,40,534
1,44,514
1,32,468
1,74,441
1,53,436
1,31,435
1,21,421
1,20,414
1,41,406
1,57,404
1,6,371
1,1,349
1,42,340
1,26,320
1,46,320
1,4,319
1,101,311
1,17,302
1,27,299
1,54,288
1,109,241
1,11,225
1,25,221
1,48,206
1,9,199
1,107,196
1,103,193
1,23,192
1,18,189
1,2,188
1,133,188
1,64,179
1,71,178
1,33,176
1,19,168
1,97,167
1,8,165
1,56,161
1,62,159
1,63,157
1,55,155
1,139,152
1,52,149
1,49,147
1,88,145
1,108,145
1,35,135
1,29,131
1,69,128
1,90,125
1,113,117
1,7,115
1,10,114
1,14,112
1,58,112
1,112,109
1,87,104
1,135,104
1,95,103
1,138,103
1,28,96
1,110,95
1,67,90
1,132,82
1,70,81
1,24,76
1,76,73
1,38,70
1,114,70
1,5,64
1,82,54
1,86,52
1,232,49
1,59,47
1,12,46
1,147,45
1,128,42
1,111,40
1,3,39
1,45,39
1,105,39
1,136,37
1,102,36
1,120,35
1,15,34
1,36,34
1,43,34
1,47,34
1,89,34
1,37,33
1,129,31
1,50,30
1,83,30
1,153,28
1,61,27
1,68,26
1,79,26
1,51,25
1,81,25

2025-01-26 13:56:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:25 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:25 - root - INFO - SQL:
SELECT m."season_id", bb."bowler", COUNT(*) AS total_wickets
    FROM IPL.IPL."WICKET_TAKEN" wt
    JOIN IPL.IPL."BALL_BY_BALL" bb
      ON wt."match_id" = bb."match_id"
     AND wt."over_id" = bb."over_id"
     AND wt."ball_id" = bb."ball_id"
     AND wt."innings_no" = bb."innings_no"
    JOIN IPL.IPL."MATCH" m
      ON wt."match_id" = m."match_id"
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY m."season_id", bb."bowler"
    ORDER BY m."season_id", total_wickets DESC, bb."bowler" ASC
    LIMIT 100;
Results:
season_id,bowler,TOTAL_WICKETS
1,102,22
1,38,19
1,32,17
1,67,17
1,77,17
1,109,17
1,120,17
1,91,16
1,29,15
1,61,15
1,90,15
1,126,14
1,15,13
1,39,13
1,73,12
1,105,12
1,118,12
1,14,11
1,49,11
1,71,11
1,78,11
1,80,11
1,121,11
1,131,11
1,136,11
1,151,11
1,94,10
1,149,10
1,70,9
1,106,9
1,31,8
1,82,8
1,117,8
1,119,8
1,25,7
1,84,7
1,122,7
1,124,7
1,435,7
1,1,6
1,63,6
1,89,6
1,50,5
1,60,5
1,81,5
1,115,5
1,116,5
1,144,5
1,147,5
1,9,4
1,44,4
1,59,4
1,66,4
1,143,4
1,22,3
1,27,3
1,41,3
1,45,3
1,58,3
1,83,3
1,153,3
1,437,3
1,4,2
1,5,2
1,8,2
1,12,2
1,54,2
1,72,2
1,86,2
1,98,2
1,99,2
1,137,2
1,148,2
1,175,2
1,13,1
1,16,1
1,21,1
1,37,1
1,48,1
1,57,1
1,68,1
1,108,1
1,112,1
1,135,1
1,142,1
1,174,1
1,436,1
1,438,1
2,61,23
2,124,21
2,73,19
2,131,18
2,194,18
2,29,17
2,116,15
2,126,15
2,223,15
2,121,14
2,136,14
2,215,14

2025-01-26 13:56:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 99
2025-01-26 13:56:27 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:27 - root - INFO - SQL:
SELECT p."player_name", total_runs
    FROM (
      SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
      FROM IPL.IPL."BATSMAN_SCORED" bs
      JOIN IPL.IPL."BALL_BY_BALL" bb
        ON bs."match_id" = bb."match_id"
       AND bs."over_id" = bb."over_id"
       AND bs."ball_id" = bb."ball_id"
       AND bs."innings_no" = bb."innings_no"
      GROUP BY bb."striker"
      ORDER BY total_runs DESC, bb."striker" ASC
      LIMIT 100
    ) t
    JOIN IPL.IPL."PLAYER" p
      ON t."striker" = p."player_id";
Results:
player_name,TOTAL_RUNS
SC Ganguly,1303
BB McCullum,2431
DJ Hussey,1322
R Dravid,2170
V Kohli,3987
JH Kallis,2414
CL White,949
MV Boucher,394
PA Patel,1868
ML Hayden,1074
MEK Hussey,1977
MS Dhoni,3270
SK Raina,4083
S Badrinath,1439
JR Hopes,417
KC Sangakkara,1656
Yuvraj Singh,2281
IK Pathan,1079
YK Pathan,2719
SR Watson,2469
G Gambhir,3589
V Sehwag,2702
S Dhawan,3082
ST Jayasuriya,768
RV Uthappa,3390
AM Nayar,672
Harbhajan Singh,783
LRPL Taylor,1017
AC Gilchrist,2069
Y Venugopal Rao,985
A Symonds,974
RG Sharma,3874
WP Saha,1304
LR Shukla,386
DPMD Jayawardene,1771
S Sohal,368
PP Chawla,505
DJ Bravo,1262
GC Smith,724
SS Tiwary,1205
AM Rahane,2529
MK Tiwary,1324
KD Karthik,2515
MK Pandey,1800
HH Gibbs,886
SE Marsh,2148
SA Asnodkar,423
BJ Hodge,1395
JA Morkel,962
AB de Villiers,3161
DB Ravi Teja,375
SR Tendulkar,2329
TM Dilshan,1154
DR Smith,2146
JP Duminy,1926
JD Ryder,604
KP Pietersen,1001
RS Bopara,530
CH Gayle,3356
MC Henriques,648
PC Valthaty,496
M Manhas,514
TL Suman,676
NV Ojha,1466
M Vijay,2490
DA Warner,3339
AD Mathews,691
J Botha,409
GJ Bailey,663
CA Pujara,390
OA Shah,506
AT Rayudu,2325
MS Bisla,788
EJG Morgan,789
KA Pollard,1959
Mandeep Singh,897
KM Jadhav,597
AJ Finch,1304
STR Binny,676
MA Agarwal,781
AL Menaria,401
Shakib Al Hasan,468
NLTC Perera,414
F du Plessis,1287
GJ Maxwell,917
SPD Smith,1212
SA Yadav,472
JP Faulkner,470
DA Miller,1426
Azhar Mahmood,388
AD Russell,574
KK Nair,842
M Vohra,728
SV Samson,1015
KL Rahul,713
Q de Kock,657
CJ Anderson,379
LMP Simmons,942
SS Iyer,449

2025-01-26 13:56:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 99
2025-01-26 13:56:29 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:29 - root - INFO - SQL:
SELECT p."player_name", total_wickets
    FROM (
      SELECT bb."bowler", COUNT(*) AS total_wickets
      FROM IPL.IPL."WICKET_TAKEN" wt
      JOIN IPL.IPL."BALL_BY_BALL" bb
        ON wt."match_id" = bb."match_id"
       AND wt."over_id" = bb."over_id"
       AND wt."ball_id" = bb."ball_id"
       AND wt."innings_no" = bb."innings_no"
      WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
      GROUP BY bb."bowler"
      ORDER BY total_wickets DESC, bb."bowler" ASC
      LIMIT 100
    ) t
    JOIN IPL.IPL."PLAYER" p
      ON t."bowler" = p."player_id";
Results:
player_name,TOTAL_WICKETS
JH Kallis,65
P Kumar,84
Z Khan,92
SK Raina,24
Yuvraj Singh,34
IK Pathan,79
YK Pathan,40
SR Watson,81
SK Warne,55
SK Trivedi,65
Harbhajan Singh,118
A Symonds,20
WPUJC Vaas,18
RP Singh,90
B Lee,25
PP Chawla,119
DJ Bravo,122
A Nehra,97
S Sreesanth,38
DS Kulkarni,72
R Vinay Kumar,97
AB Agarkar,29
M Kartik,31
I Sharma,53
R Bhatia,68
MF Maharoof,27
VY Mahesh,21
DW Steyn,90
Sohail Tanvir,22
BJ Hodge,17
AB Dinda,68
JA Morkel,82
PJ Sangwan,30
MS Gony,37
M Muralitharan,59
A Kumble,45
MM Patel,72
PP Ojha,89
A Mishra,123
AD Mascarenhas,18
Iqbal Abdulla,38
DR Smith,24
CRD Fernando,17
L Balaji,75
JP Duminy,23
CH Gayle,18
MC Henriques,35
KV Sharma,36
DL Vettori,28
RE van der Merwe,21
SB Jakati,47
RJ Harris,45
M Morkel,75
AD Mathews,27
J Botha,25
SL Malinga,143
A Singh,28
R Ashwin,100
KA Pollard,56
DP Nannes,28
UT Yadav,72
R Sharma,40
SW Tait,23
DE Bollinger,37
MR Marsh,19
Harmeet Singh,27
DT Christian,19
WD Parnell,27
S Aravind,40
Shakib Al Hasan,42
NLTC Perera,30
S Nadeem,30
VR Aaron,31
B Kumar,85
KK Cooper,33
JP Faulkner,49
HV Patel,29
SP Narine,85
GB Hogg,23
Azhar Mahmood,29
A Ashish Reddy,17
P Awana,39
AD Russell,31
JD Unadkat,28
CH Morris,40
R Dhawan,18
MG Johnson,51
IC Pandey,18
MM Sharma,70
Sandeep Sharma,52
PV Tambe,25
NM Coulter-Nile,20
AR Patel,40
JJ Bumrah,26
MA Starc,34
YS Chahal,54
Imran Tahir,29
MJ McClenaghan,34
BW Hilfenhaus,22

2025-01-26 13:56:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:30 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:31 - root - INFO - SQL:
SELECT "match_id", "season_id", "venue"
    FROM IPL.IPL."MATCH"
    LIMIT 100;
Results:
match_id,season_id,venue
335987,1,M Chinnaswamy Stadium
335988,1,Punjab Cricket Association Stadium Mohali
335989,1,Feroz Shah Kotla
335990,1,Wankhede Stadium
335991,1,Eden Gardens
335992,1,Sawai Mansingh Stadium
335993,1,Rajiv Gandhi International Stadium Uppal
335994,1,MA Chidambaram Stadium Chepauk
335995,1,Rajiv Gandhi International Stadium Uppal
335996,1,Punjab Cricket Association Stadium Mohali
335997,1,M Chinnaswamy Stadium
335998,1,MA Chidambaram Stadium Chepauk
335999,1,Dr DY Patil Sports Academy
336000,1,Punjab Cricket Association Stadium Mohali
336001,1,M Chinnaswamy Stadium
336002,1,Eden Gardens
336003,1,Feroz Shah Kotla
336004,1,Rajiv Gandhi International Stadium Uppal
336005,1,Sawai Mansingh Stadium
336006,1,MA Chidambaram Stadium Chepauk
336007,1,Rajiv Gandhi International Stadium Uppal
336008,1,Punjab Cricket Association Stadium Mohali
336009,1,Dr DY Patil Sports Academy
336010,1,Sawai Mansingh Stadium
336011,1,M Chinnaswamy Stadium
336012,1,MA Chidambaram Stadium Chepauk
336013,1,Dr DY Patil Sports Academy
336014,1,Feroz Shah Kotla
336015,1,Eden Gardens
336016,1,Sawai Mansingh Stadium
336017,1,M Chinnaswamy Stadium
336018,1,MA Chidambaram Stadium Chepauk
336019,1,Rajiv Gandhi International Stadium Uppal
336020,1,Sawai Mansingh Stadium
336021,1,Punjab Cricket Association Stadium Mohali
336022,1,Eden Gardens
336023,1,Wankhede Stadium
336024,1,Punjab Cricket Association Stadium Mohali
336025,1,Feroz Shah Kotla
336026,1,Wankhede Stadium
336027,1,Feroz Shah Kotla
336028,1,Sawai Mansingh Stadium
336029,1,Rajiv Gandhi International Stadium Uppal
336030,1,Eden Gardens
336031,1,M Chinnaswamy Stadium
336032,1,Eden Gardens
336033,1,Wankhede Stadium
336034,1,MA Chidambaram Stadium Chepauk
336036,1,Punjab Cricket Association Stadium Mohali
336037,1,Feroz Shah Kotla
336038,1,MA Chidambaram Stadium Chepauk
336039,1,M Chinnaswamy Stadium
336040,1,Eden Gardens
336041,1,Sawai Mansingh Stadium
336042,1,Rajiv Gandhi International Stadium Uppal
336043,1,Wankhede Stadium
336044,1,Wankhede Stadium
336045,1,Dr DY Patil Sports Academy
392186,2,Newlands
392187,2,Newlands
392188,2,Newlands
392189,2,Newlands
392190,2,St George's Park
392191,2,Kingsmead
392193,2,Newlands
392194,2,Kingsmead
392196,2,Kingsmead
392197,2,Kingsmead
392199,2,St George's Park
392200,2,Newlands
392201,2,Kingsmead
392202,2,St George's Park
392203,2,SuperSport Park
392204,2,Kingsmead
392205,2,Kingsmead
392206,2,SuperSport Park
392207,2,SuperSport Park
392208,2,Buffalo Park
392209,2,Kingsmead
392210,2,St George's Park
392211,2,New Wanderers Stadium
392212,2,St George's Park
392213,2,New Wanderers Stadium
392214,2,Buffalo Park
392215,2,Kingsmead
392216,2,Kingsmead
392217,2,SuperSport Park
392218,2,SuperSport Park
392219,2,SuperSport Park
392220,2,Buffalo Park
392221,2,De Beers Diamond Oval
392222,2,De Beers Diamond Oval
392223,2,St George's Park
392224,2,New Wanderers Stadium
392225,2,De Beers Diamond Oval
392226,2,SuperSport Park
392227,2,SuperSport Park
392228,2,Kingsmead
392229,2,Kingsmead
392230,2,Kingsmead

2025-01-26 13:56:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 9
2025-01-26 13:56:32 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:32 - root - INFO - SQL:
SELECT "season_id", COUNT(*) AS total_matches
    FROM IPL.IPL."MATCH"
    GROUP BY "season_id"
    ORDER BY "season_id" ASC
    LIMIT 100;
Results:
season_id,TOTAL_MATCHES
1,58
2,56
3,58
4,72
5,74
6,74
7,59
8,56
9,60

2025-01-26 13:56:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:34 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:34 - root - INFO - SQL:
SELECT "player_id", "player_name", "batting_hand", "bowling_skill"
    FROM IPL.IPL."PLAYER"
    LIMIT 100;
Results:
player_id,player_name,batting_hand,bowling_skill
1,SC Ganguly,Left-hand bat,Right-arm medium
2,BB McCullum,Right-hand bat,Right-arm medium
3,RT Ponting,Right-hand bat,Right-arm medium
4,DJ Hussey,Right-hand bat,Right-arm offbreak
5,Mohammad Hafeez,Right-hand bat,Right-arm offbreak
6,R Dravid,Right-hand bat,Right-arm offbreak
7,W Jaffer,Right-hand bat,Right-arm offbreak
8,V Kohli,Right-hand bat,Right-arm medium
9,JH Kallis,Right-hand bat,Right-arm fast-medium
10,CL White,Right-hand bat,Legbreak googly
11,MV Boucher,Right-hand bat,Right-arm medium
12,B Akhil,Right-hand bat,Right-arm medium-fast
13,AA Noffke,Right-hand bat,Right-arm fast-medium
14,P Kumar,Right-hand bat,Right-arm medium
15,Z Khan,Right-hand bat,Left-arm fast-medium
16,SB Joshi,Left-hand bat,Slow left-arm orthodox
17,PA Patel,Left-hand bat,Right-arm medium
18,ML Hayden,Left-hand bat,Right-arm medium
19,MEK Hussey,Left-hand bat,Right-arm medium
20,MS Dhoni,Right-hand bat,Right-arm medium
21,SK Raina,Left-hand bat,Right-arm offbreak
22,JDP Oram,Left-hand bat,Right-arm fast-medium
23,S Badrinath,Right-hand bat,Right-arm offbreak
24,K Goel,Left-hand bat,Right-arm offbreak
25,JR Hopes,Right-hand bat,Right-arm medium
26,KC Sangakkara,Left-hand bat,Right-arm offbreak
27,Yuvraj Singh,Left-hand bat,Slow left-arm orthodox
28,SM Katich,Left-hand bat,Slow left-arm chinaman
29,IK Pathan,Left-hand bat,Left-arm medium-fast
30,T Kohli,Right-hand bat,Right-arm medium
31,YK Pathan,Right-hand bat,Right-arm offbreak
32,SR Watson,Right-hand bat,Right-arm fast-medium
33,M Kaif,Right-hand bat,Right-arm offbreak
34,DS Lehmann,Left-hand bat,Slow left-arm orthodox
36,M Rawat,Right-hand bat,Right-arm medium
37,D Salunkhe,Right-hand bat,Legbreak
38,SK Warne,Right-hand bat,Legbreak googly
39,SK Trivedi,Right-hand bat,Right-arm medium
40,G Gambhir,Left-hand bat,Legbreak
41,V Sehwag,Right-hand bat,Right-arm offbreak
42,S Dhawan,Left-hand bat,Right-arm offbreak
43,L Ronchi,Right-hand bat,Right-arm medium
44,ST Jayasuriya,Left-hand bat,Slow left-arm orthodox
45,DJ Thornely,Right-hand bat,Right-arm medium
46,RV Uthappa,Right-hand bat,Right-arm medium
47,PR Shah,Right-hand bat,Right-arm medium
48,AM Nayar,Left-hand bat,Right-arm medium
49,SM Pollock,Right-hand bat,Right-arm fast-medium
50,Harbhajan Singh,Right-hand bat,Right-arm offbreak
51,S Chanderpaul,Left-hand bat,Legbreak
52,LRPL Taylor,Right-hand bat,Right-arm offbreak
53,AC Gilchrist,Left-hand bat,Right-arm offbreak
54,Y Venugopal Rao,Right-hand bat,Right-arm offbreak
55,VVS Laxman,Right-hand bat,Right-arm offbreak
56,A Symonds,Right-hand bat,Right-arm offbreak
57,RG Sharma,Right-hand bat,Right-arm offbreak
58,SB Styris,Right-hand bat,Right-arm medium
59,SB Bangar,Right-hand bat,Right-arm medium-fast
60,WPUJC Vaas,Left-hand bat,Left-arm fast-medium
61,RP Singh,Right-hand bat,Left-arm fast-medium
62,WP Saha,Right-hand bat,Right-arm medium
63,LR Shukla,Right-hand bat,Right-arm medium
64,DPMD Jayawardene,Right-hand bat,Right-arm medium
65,S Sohal,Right-hand bat,Legbreak
66,B Lee,Right-hand bat,Right-arm fast
67,PP Chawla,Left-hand bat,Legbreak
68,WA Mota,Right-hand bat,Right-arm medium
69,Kamran Akmal,Right-hand bat,Right-arm medium
70,Shahid Afridi,Right-hand bat,Legbreak googly
71,DJ Bravo,Right-hand bat,Right-arm medium-fast
72,MA Khote,Right-hand bat,Right-arm medium
73,A Nehra,Right-hand bat,Left-arm medium-fast
74,GC Smith,Left-hand bat,Right-arm offbreak
75,Pankaj Singh,Right-hand bat,Right-arm medium-fast
76,RR Sarwan,Right-hand bat,Legbreak
77,S Sreesanth,Right-hand bat,Right-arm fast-medium
78,VRV Singh,Right-hand bat,Right-arm medium-fast
79,SS Tiwary,Left-hand bat,Right-arm medium
80,DS Kulkarni,Right-hand bat,Right-arm medium
81,R Vinay Kumar,Right-hand bat,Right-arm medium
82,AB Agarkar,Right-hand bat,Right-arm fast
83,M Kartik,Left-hand bat,Slow left-arm orthodox
84,I Sharma,Right-hand bat,Right-arm fast-medium
85,AM Rahane,Right-hand bat,Right-arm medium
86,Shoaib Malik,Right-hand bat,Right-arm offbreak
87,MK Tiwary,Right-hand bat,Legbreak googly
88,KD Karthik,Right-hand bat,Right-arm medium
89,R Bhatia,Right-hand bat,Right-arm medium-fast
90,MF Maharoof,Right-hand bat,Right-arm fast-medium
91,VY Mahesh,Right-hand bat,Right-arm medium-fast
92,TM Srivastava,Left-hand bat,Right-arm medium
93,B Chipli,Right-hand bat,Right-arm medium
94,DW Steyn,Right-hand bat,Right-arm fast
95,DB Das,Right-hand bat,Legbreak googly
96,MK Pandey,Right-hand bat,Right-arm medium
97,HH Gibbs,Right-hand bat,Right-arm bowler
98,DNT Zoysa,Left-hand bat,Left-arm fast-medium
99,D Kalyankrishna,Right-hand bat,Right-arm medium-fast
100,SE Marsh,Left-hand bat,Slow left-arm orthodox
101,SA Asnodkar,Right-hand bat,Right-arm offbreak

2025-01-26 13:56:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 9
2025-01-26 13:56:35 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:36 - root - INFO - SQL:
SELECT DISTINCT "season_id"
    FROM IPL.IPL."MATCH"
    ORDER BY "season_id" ASC;
Results:
season_id
1
2
3
4
5
6
7
8
9

2025-01-26 13:56:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:37 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:38 - root - INFO - SQL:
SELECT bs."match_id", SUM(bs."runs_scored") AS total_runs
    FROM IPL.IPL."BATSMAN_SCORED" bs
    GROUP BY bs."match_id"
    ORDER BY bs."match_id" ASC
    LIMIT 100;
Results:
match_id,TOTAL_RUNS
335987,268
335988,430
335989,240
335990,315
335991,184
335992,318
335993,268
335994,379
335995,418
335996,284
335997,264
335998,273
335999,289
336000,300
336001,332
336002,247
336003,356
336004,321
336005,321
336006,328
336007,320
336008,326
336009,281
336010,191
336011,226
336012,277
336013,188
336014,352
336015,242
336016,264
336017,224
336018,326
336019,358
336020,287
336021,263
336022,224
336023,286
336024,392
336025,365
336026,117
336027,198
336028,297
336029,303
336030,187
336031,291
336032,285
336033,342
336034,222
336036,340
336037,343
336038,396
336039,298
336040,329
336041,262
336042,268
336043,268
336044,220
336045,306
392186,299
392187,178
392188,149
392189,198
392190,248
392191,221
392193,328
392194,353
392196,320
392197,297
392199,284
392200,228
392201,317
392202,269
392203,276
392204,264
392205,207
392206,275
392207,277
392208,266
392209,263
392210,269
392211,296
392212,290
392213,285
392214,261
392215,321
392216,299
392217,259
392218,204
392219,347
392220,215
392221,321
392222,264
392223,277
392224,227
392225,273
392226,331
392227,217
392228,314
392229,249
392230,263

2025-01-26 13:56:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 5
2025-01-26 13:56:39 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:40 - root - INFO - SQL:
SELECT DISTINCT "extra_type"
    FROM IPL.IPL."EXTRA_RUNS";
Results:
extra_type
legbyes
wides
byes
noballs
penalty

2025-01-26 13:56:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:56:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:56:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:56:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 100
2025-01-26 13:56:41 - snowflake.connector.connection - INFO - closed
2025-01-26 13:56:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:56:41 - root - INFO - SQL:
SELECT wt."match_id", COUNT(*) AS total_wickets
    FROM IPL.IPL."WICKET_TAKEN" wt
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY wt."match_id"
    ORDER BY wt."match_id" ASC
    LIMIT 100;
Results:
match_id,TOTAL_WICKETS
335987,12
335988,9
335989,7
335990,10
335991,14
335992,11
335993,8
335994,10
335995,11
335996,15
335997,9
335998,9
335999,7
336000,12
336001,12
336002,10
336003,9
336004,9
336005,13
336006,7
336007,11
336008,11
336009,17
336010,12
336011,11
336012,10
336013,13
336014,10
336015,7
336016,8
336017,9
336018,13
336019,10
336020,10
336021,7
336022,13
336023,7
336024,9
336025,12
336026,11
336027,7
336028,10
336029,13
336030,5
336031,9
336032,11
336033,9
336034,15
336036,8
336037,11
336038,9
336039,13
336040,12
336041,10
336042,10
336043,17
336044,8
336045,10
392186,13
392187,17
392188,5
392189,10
392190,13
392191,6
392193,12
392194,11
392196,11
392197,15
392199,10
392200,11
392201,10
392202,14
392203,11
392204,11
392205,14
392206,11
392207,13
392208,11
392209,15
392210,11
392211,17
392212,7
392213,5
392214,13
392215,12
392216,4
392217,13
392218,11
392219,6
392220,10
392221,9
392222,9
392223,8
392224,11
392225,14
392226,8
392227,8
392228,15
392229,15
392230,13

2025-01-26 13:56:41 - root - INFO - itercount: 0
2025-01-26 13:56:41 - root - INFO - Database Name: IPL
Schema Name: IPL
DDL describes table information.
,0
table_name,PLAYER_MATCH
description,
DDL,"create or replace TABLE PLAYER_MATCH (
	""match_id"" NUMBER(38,0),
	""player_id"" NUMBER(38,0),
	""role"" VARCHAR(16777216),
	""team_id"" NUMBER(38,0)
);"

,1
table_name,PLAYER
description,
DDL,"create or replace TABLE PLAYER (
	""player_id"" NUMBER(38,0),
	""player_name"" VARCHAR(16777216),
	""dob"" VARCHAR(16777216),
	""batting_hand"" VARCHAR(16777216),
	""bowling_skill"" VARCHAR(16777216),
	""country_name"" VARCHAR(16777216)
);"

,2
table_name,BATSMAN_SCORED
description,
DDL,"create or replace TABLE BATSMAN_SCORED (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""runs_scored"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,3
table_name,WICKET_TAKEN
description,
DDL,"create or replace TABLE WICKET_TAKEN (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""player_out"" NUMBER(38,0),
	""kind_out"" VARCHAR(16777216),
	""innings_no"" NUMBER(38,0)
);"

,4
table_name,BALL_BY_BALL
description,
DDL,"create or replace TABLE BALL_BY_BALL (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0),
	""team_batting"" NUMBER(38,0),
	""team_bowling"" NUMBER(38,0),
	""striker_batting_position"" NUMBER(38,0),
	""striker"" NUMBER(38,0),
	""non_striker"" NUMBER(38,0),
	""bowler"" NUMBER(38,0)
);"

,5
table_name,EXTRA_RUNS
description,
DDL,"create or replace TABLE EXTRA_RUNS (
	""match_id"" NUMBER(38,0),
	""over_id"" NUMBER(38,0),
	""ball_id"" NUMBER(38,0),
	""extra_type"" VARCHAR(16777216),
	""extra_runs"" NUMBER(38,0),
	""innings_no"" NUMBER(38,0)
);"

,6
table_name,MATCH
description,
DDL,"create or replace TABLE MATCH (
	""match_id"" NUMBER(38,0),
	""team_1"" NUMBER(38,0),
	""team_2"" NUMBER(38,0),
	""match_date"" VARCHAR(16777216),
	""season_id"" NUMBER(38,0),
	""venue"" VARCHAR(16777216),
	""toss_winner"" NUMBER(38,0),
	""toss_decision"" VARCHAR(16777216),
	""win_type"" VARCHAR(16777216),
	""win_margin"" NUMBER(38,0),
	""outcome_type"" VARCHAR(16777216),
	""match_winner"" NUMBER(38,0),
	""man_of_the_match"" NUMBER(38,0)
);"

,7
table_name,TEAM
description,
DDL,"create or replace TABLE TEAM (
	""team_id"" NUMBER(38,0),
	""name"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **`BATSMAN_SCORED`**
   - **`"match_id"`**: Used to join with other tables.
   - **`"over_id"`, `"ball_id"`, `"innings_no"`**: Used to identify each delivery uniquely.
   - **`"runs_scored"`**: Represents the runs scored on each ball.

2. **`BALL_BY_BALL`**
   - **`"match_id"`, `"over_id"`, `"ball_id"`, `"innings_no"`**: Used to join with `BATSMAN_SCORED` and `WICKET_TAKEN`.
   - **`"striker"`**: Player ID of the batsman who faced the ball.
   - **`"bowler"`**: Player ID of the bowler who bowled the ball.

3. **`WICKET_TAKEN`**
   - **`"match_id"`, `"over_id"`, `"ball_id"`, `"innings_no"`**: Used to join with `BALL_BY_BALL`.
   - **`"player_out"`**: Player ID of the batsman who got out.
   - **`"kind_out"`**: Type of dismissal. Conditions: Exclude 'run out', 'hit wicket', and 'retired hurt'.

4. **`MATCH`**
   - **`"match_id"`**: Used to join with other tables.
   - **`"season_id"`**: Used to group data by season.

5. **`PLAYER`**
   - **`"player_id"`**: Used to identify players.
   - **`"player_name"`**: Used to retrieve the names of players.

**Conditions:**
- Exclude dismissals with `kind_out` of 'run out', 'hit wicket', and 'retired hurt' when counting wickets for bowlers.
- Prioritize players with lower `player_id` in case of ties.
- Group data by `season_id` for season-wise aggregation.

---

**SQL Queries to Explore the Data:**

1. **View the first 100 records from `BATSMAN_SCORED`:**

   ```sql
   SELECT * FROM IPL.IPL."BATSMAN_SCORED"
   LIMIT 100;
   ```

2. **Retrieve batsman runs along with their player IDs by joining `BATSMAN_SCORED` and `BALL_BY_BALL`:**

   ```sql
   SELECT bs."match_id", bs."over_id", bs."ball_id", bs."innings_no", bs."runs_scored", bb."striker"
   FROM IPL.IPL."BATSMAN_SCORED" bs
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON bs."match_id" = bb."match_id"
    AND bs."over_id" = bb."over_id"
    AND bs."ball_id" = bb."ball_id"
    AND bs."innings_no" = bb."innings_no"
   LIMIT 100;
   ```

3. **List unique dismissal types from `WICKET_TAKEN`:**

   ```sql
   SELECT DISTINCT "kind_out"
   FROM IPL.IPL."WICKET_TAKEN";
   ```

4. **View the first 100 records from `WICKET_TAKEN`:**

   ```sql
   SELECT * FROM IPL.IPL."WICKET_TAKEN"
   LIMIT 100;
   ```

5. **Retrieve bowler IDs associated with wickets by joining `WICKET_TAKEN` and `BALL_BY_BALL`:**

   ```sql
   SELECT wt."match_id", wt."over_id", wt."ball_id", wt."innings_no", wt."player_out", bb."bowler"
   FROM IPL.IPL."WICKET_TAKEN" wt
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON wt."match_id" = bb."match_id"
    AND wt."over_id" = bb."over_id"
    AND wt."ball_id" = bb."ball_id"
    AND wt."innings_no" = bb."innings_no"
   LIMIT 100;
   ```

6. **Get match dates and seasons from `MATCH`:**

   ```sql
   SELECT "match_id", "season_id", "match_date"
   FROM IPL.IPL."MATCH"
   LIMIT 100;
   ```

7. **Retrieve player names and their IDs from `PLAYER`:**

   ```sql
   SELECT "player_id", "player_name"
   FROM IPL.IPL."PLAYER"
   LIMIT 100;
   ```

8. **Calculate total runs scored by each batsman:**

   ```sql
   SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
   FROM IPL.IPL."BATSMAN_SCORED" bs
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON bs."match_id" = bb."match_id"
    AND bs."over_id" = bb."over_id"
    AND bs."ball_id" = bb."ball_id"
    AND bs."innings_no" = bb."innings_no"
   GROUP BY bb."striker"
   ORDER BY total_runs DESC, bb."striker" ASC
   LIMIT 100;
   ```

9. **Identify total wickets taken by each bowler, excluding specified dismissal types:**

   ```sql
   SELECT bb."bowler", COUNT(*) AS total_wickets
   FROM IPL.IPL."WICKET_TAKEN" wt
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON wt."match_id" = bb."match_id"
    AND wt."over_id" = bb."over_id"
    AND wt."ball_id" = bb."ball_id"
    AND wt."innings_no" = bb."innings_no"
   WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
   GROUP BY bb."bowler"
   ORDER BY total_wickets DESC, bb."bowler" ASC
   LIMIT 100;
   ```

10. **Get total runs scored by each batsman per season:**

    ```sql
    SELECT m."season_id", bb."striker", SUM(bs."runs_scored") AS total_runs
    FROM IPL.IPL."BATSMAN_SCORED" bs
    JOIN IPL.IPL."BALL_BY_BALL" bb
      ON bs."match_id" = bb."match_id"
     AND bs."over_id" = bb."over_id"
     AND bs."ball_id" = bb."ball_id"
     AND bs."innings_no" = bb."innings_no"
    JOIN IPL.IPL."MATCH" m
      ON bs."match_id" = m."match_id"
    GROUP BY m."season_id", bb."striker"
    ORDER BY m."season_id", total_runs DESC, bb."striker" ASC
    LIMIT 100;
    ```

11. **Find total wickets taken by each bowler per season, excluding certain dismissal types:**

    ```sql
    SELECT m."season_id", bb."bowler", COUNT(*) AS total_wickets
    FROM IPL.IPL."WICKET_TAKEN" wt
    JOIN IPL.IPL."BALL_BY_BALL" bb
      ON wt."match_id" = bb."match_id"
     AND wt."over_id" = bb."over_id"
     AND wt."ball_id" = bb."ball_id"
     AND wt."innings_no" = bb."innings_no"
    JOIN IPL.IPL."MATCH" m
      ON wt."match_id" = m."match_id"
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY m."season_id", bb."bowler"
    ORDER BY m."season_id", total_wickets DESC, bb."bowler" ASC
    LIMIT 100;
    ```

12. **Retrieve the top 100 batsmen names and their total runs:**

    ```sql
    SELECT p."player_name", total_runs
    FROM (
      SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
      FROM IPL.IPL."BATSMAN_SCORED" bs
      JOIN IPL.IPL."BALL_BY_BALL" bb
        ON bs."match_id" = bb."match_id"
       AND bs."over_id" = bb."over_id"
       AND bs."ball_id" = bb."ball_id"
       AND bs."innings_no" = bb."innings_no"
      GROUP BY bb."striker"
      ORDER BY total_runs DESC, bb."striker" ASC
      LIMIT 100
    ) t
    JOIN IPL.IPL."PLAYER" p
      ON t."striker" = p."player_id";
    ```

13. **Retrieve the top 100 bowlers' names and their total wickets:**

    ```sql
    SELECT p."player_name", total_wickets
    FROM (
      SELECT bb."bowler", COUNT(*) AS total_wickets
      FROM IPL.IPL."WICKET_TAKEN" wt
      JOIN IPL.IPL."BALL_BY_BALL" bb
        ON wt."match_id" = bb."match_id"
       AND wt."over_id" = bb."over_id"
       AND wt."ball_id" = bb."ball_id"
       AND wt."innings_no" = bb."innings_no"
      WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
      GROUP BY bb."bowler"
      ORDER BY total_wickets DESC, bb."bowler" ASC
      LIMIT 100
    ) t
    JOIN IPL.IPL."PLAYER" p
      ON t."bowler" = p."player_id";
    ```

14. **List matches with their corresponding seasons and venues:**

    ```sql
    SELECT "match_id", "season_id", "venue"
    FROM IPL.IPL."MATCH"
    LIMIT 100;
    ```

15. **Get the number of matches played in each season:**

    ```sql
    SELECT "season_id", COUNT(*) AS total_matches
    FROM IPL.IPL."MATCH"
    GROUP BY "season_id"
    ORDER BY "season_id" ASC
    LIMIT 100;
    ```

16. **List all players along with their batting hand and bowling skill:**

    ```sql
    SELECT "player_id", "player_name", "batting_hand", "bowling_skill"
    FROM IPL.IPL."PLAYER"
    LIMIT 100;
    ```

17. **Find all unique seasons from the `MATCH` table:**

    ```sql
    SELECT DISTINCT "season_id"
    FROM IPL.IPL."MATCH"
    ORDER BY "season_id" ASC;
    ```

18. **Retrieve total runs per match for the first 100 matches:**

    ```sql
    SELECT bs."match_id", SUM(bs."runs_scored") AS total_runs
    FROM IPL.IPL."BATSMAN_SCORED" bs
    GROUP BY bs."match_id"
    ORDER BY bs."match_id" ASC
    LIMIT 100;
    ```

19. **Identify the types of extras recorded in `EXTRA_RUNS`:**

    ```sql
    SELECT DISTINCT "extra_type"
    FROM IPL.IPL."EXTRA_RUNS";
    ```

20. **Get the total number of wickets (excluding certain types) per match:**

    ```sql
    SELECT wt."match_id", COUNT(*) AS total_wickets
    FROM IPL.IPL."WICKET_TAKEN" wt
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY wt."match_id"
    ORDER BY wt."match_id" ASC
    LIMIT 100;
    ```

These queries explore different aspects of the data, such as player performances, match details, and dismissal types. They help in understanding how to extract and aggregate the information needed for the task.Query:
SELECT * FROM IPL.IPL."BATSMAN_SCORED"
   LIMIT 100;
Answer:
match_id,over_id,ball_id,runs_scored,innings_no
335987,1,1,1,2
335987,1,2,0,1
335987,1,3,0,2
335987,1,4,0,1
335987,1,4,1,2
335987,1,5,0,1
335987,1,5,1,2
335987,1,6,0,1
335987,1,6,0,2
335987,1,7,0,1
335987,1,7,0,2
335987,2,1,0,1
335987,2,1,0,2
335987,2,2,4,1
335987,2,2,0,2
335987,2,3,4,1
335987,2,3,0,2
335987,2,4,6,1
335987,2,4,1,2
335987,2,5,4,1
335987,2,5,0,2
335987,2,6,0,1
335987,2,6,0,2
335987,3,1,0,1
335987,3,1,0,2
335987,3,2,0,1
335987,3,2,0,2
335987,3,3,0,1
335987,3,3,1,2
335987,3,4,4,1
335987,3,4,0,2
335987,3,5,1,1
335987,3,6,0,1
335987,3,6,0,2
335987,3,7,1,2
335987,4,1,2,2
335987,4,2,6,1
335987,4,2,1,2
335987,4,3,0,1
335987,4,3,0,2
335987,4,4,4,1
335987,4,4,0,2
335987,4,5,0,1
335987,4,5,0,2
335987,4,6,1,1
335987,4,6,0,2
335987,4,7,6,1
335987,5,1,4,1
335987,5,1,1,2
335987,5,2,1,1
335987,5,2,1,2
335987,5,3,4,1
335987,5,3,0,2
335987,5,4,0,1
335987,5,4,6,2
335987,5,5,1,1
335987,5,5,0,2
335987,5,6,0,1
335987,5,6,0,2
335987,6,1,1,1
335987,6,1,0,2
335987,6,2,0,1
335987,6,2,0,2
335987,6,3,0,1
335987,6,3,0,2
335987,6,4,0,1
335987,6,4,1,2
335987,6,5,0,1
335987,6,5,1,2
335987,6,6,0,1
335987,6,6,0,2
335987,7,1,1,1
335987,7,1,0,2
335987,7,2,1,1
335987,7,2,0,2
335987,7,3,1,1
335987,7,3,1,2
335987,7,4,2,1
335987,7,5,1,1
335987,7,6,1,1
335987,7,6,0,2
335987,7,7,0,2
335987,7,8,4,2
335987,8,1,0,1
335987,8,1,1,2
335987,8,2,1,1
335987,8,2,0,2
335987,8,3,1,1
335987,8,3,1,2
335987,8,4,1,1
335987,8,4,2,2
335987,8,5,1,1
335987,8,5,0,2
335987,8,6,1,1
335987,8,6,0,2
335987,9,1,0,1
335987,9,1,0,2
335987,9,2,0,1
335987,9,2,0,2
335987,9,3,0,1
Query:
SELECT bs."match_id", bs."over_id", bs."ball_id", bs."innings_no", bs."runs_scored", bb."striker"
   FROM IPL.IPL."BATSMAN_SCORED" bs
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON bs."match_id" = bb."match_id"
    AND bs."over_id" = bb."over_id"
    AND bs."ball_id" = bb."ball_id"
    AND bs."innings_no" = bb."innings_no"
   LIMIT 100;
Answer:
match_id,over_id,ball_id,innings_no,runs_scored,striker
335987,1,1,2,1,6
335987,1,2,1,0,2
335987,1,3,2,0,7
335987,1,4,1,0,2
335987,1,4,2,1,7
335987,1,5,1,0,2
335987,1,5,2,1,6
335987,1,6,1,0,2
335987,1,6,2,0,7
335987,1,7,1,0,2
335987,1,7,2,0,7
335987,2,1,1,0,2
335987,2,1,2,0,6
335987,2,2,1,4,2
335987,2,2,2,0,8
335987,2,3,1,4,2
335987,2,3,2,0,8
335987,2,4,1,6,2
335987,2,4,2,1,8
335987,2,5,1,4,2
335987,2,5,2,0,7
335987,2,6,1,0,2
335987,2,6,2,0,7
335987,3,1,1,0,1
335987,3,1,2,0,8
335987,3,2,1,0,1
335987,3,2,2,0,8
335987,3,3,1,0,1
335987,3,3,2,1,9
335987,3,4,1,4,2
335987,3,4,2,0,7
335987,3,5,1,1,2
335987,3,6,1,0,1
335987,3,6,2,0,7
335987,3,7,2,1,7
335987,4,1,2,2,7
335987,4,2,1,6,2
335987,4,2,2,1,7
335987,4,3,1,0,2
335987,4,3,2,0,9
335987,4,4,1,4,1
335987,4,4,2,0,9
335987,4,5,1,0,1
335987,4,5,2,0,7
335987,4,6,1,1,1
335987,4,6,2,0,7
335987,4,7,1,6,2
335987,5,1,1,4,1
335987,5,1,2,1,9
335987,5,2,1,1,1
335987,5,2,2,1,7
335987,5,3,1,4,2
335987,5,3,2,0,9
335987,5,4,1,0,2
335987,5,4,2,6,9
335987,5,5,1,1,2
335987,5,5,2,0,9
335987,5,6,1,0,1
335987,5,6,2,0,10
335987,6,1,1,1,2
335987,6,1,2,0,7
335987,6,2,1,0,1
335987,6,2,2,0,7
335987,6,3,1,0,3
335987,6,3,2,0,11
335987,6,4,1,0,3
335987,6,4,2,1,11
335987,6,5,1,0,3
335987,6,5,2,1,10
335987,6,6,1,0,3
335987,6,6,2,0,11
335987,7,1,1,1,2
335987,7,1,2,0,10
335987,7,2,1,1,3
335987,7,2,2,0,10
335987,7,3,1,1,2
335987,7,3,2,1,10
335987,7,4,1,2,3
335987,7,5,1,1,3
335987,7,6,1,1,2
335987,7,6,2,0,11
335987,7,7,2,0,11
335987,7,8,2,4,11
335987,8,1,1,0,2
335987,8,1,2,1,10
335987,8,2,1,1,2
335987,8,2,2,0,11
335987,8,3,1,1,3
335987,8,3,2,1,10
335987,8,4,1,1,2
335987,8,4,2,2,11
335987,8,5,1,1,3
335987,8,5,2,0,11
335987,8,6,1,1,2
335987,8,6,2,0,10
335987,9,1,1,0,2
335987,9,1,2,0,12
335987,9,2,1,0,2
335987,9,2,2,0,12
335987,9,3,1,0,2
Query:
SELECT DISTINCT "kind_out"
   FROM IPL.IPL."WICKET_TAKEN";
Answer:
kind_out
caught
bowled
run out
lbw
retired hurt
stumped
caught and bowled
hit wicket
obstructing the field
Query:
SELECT * FROM IPL.IPL."WICKET_TAKEN"
   LIMIT 100;
Answer:
match_id,over_id,ball_id,player_out,kind_out,innings_no
419167,10,3,154,caught,1
419167,10,3,46,caught,2
419167,12,4,8,caught,2
419167,14,4,96,caught,2
419167,18,4,208,caught,1
419168,2,7,18,caught,1
419168,5,5,21,caught,1
419168,6,1,53,caught,2
419168,6,5,178,caught,2
419168,8,2,57,caught,2
419168,14,2,20,caught,1
419168,15,5,109,caught,1
419168,16,2,56,caught,2
419168,18,4,188,caught,2
419168,20,2,131,caught,2
419168,20,4,125,caught,1
419169,1,4,53,caught,1
419169,4,2,57,caught,1
419169,7,1,56,caught,1
419169,17,3,54,caught,1
419169,19,3,131,caught,1
419170,2,4,42,caught,2
419170,8,2,185,caught,1
419170,9,4,18,caught,1
419170,12,2,23,caught,1
419170,15,2,133,caught,2
419170,15,5,79,caught,2
419170,17,6,154,caught,2
419170,18,1,20,caught,1
419170,19,6,221,caught,2
501203,1,6,185,caught,1
501203,11,3,21,caught,1
501203,16,2,9,caught,2
501203,18,2,20,caught,1
501203,20,2,63,caught,2
501204,5,5,42,caught,1
501204,6,3,26,caught,1
501204,6,5,252,caught,2
501204,11,1,257,caught,1
501204,13,6,154,caught,1
501204,18,3,258,caught,1
501204,20,1,112,caught,1
501204,20,3,94,caught,1
501205,2,2,135,caught,2
501205,9,6,55,caught,1
501205,10,6,260,caught,2
501205,12,3,2,caught,1
501205,18,4,79,caught,2
501205,19,4,259,caught,1
501206,7,6,254,caught,1
501206,15,2,183,caught,1
501206,18,4,106,caught,1
501207,1,1,74,caught,2
501207,1,4,53,caught,1
501207,2,3,100,caught,1
501207,3,4,167,caught,1
501207,4,3,88,caught,1
501207,8,5,171,caught,2
501207,9,3,48,caught,1
501207,9,3,157,caught,2
501207,18,1,67,caught,1
501207,20,1,14,caught,1
501208,9,6,26,caught,2
501208,13,2,154,caught,2
501208,13,3,9,caught,1
501208,14,6,93,caught,2
501208,17,4,258,caught,2
501208,18,1,112,caught,2
501208,20,6,31,caught,1
501209,1,3,41,caught,1
501209,5,5,254,caught,1
501209,8,1,262,caught,1
501209,8,3,183,caught,1
501209,8,3,6,caught,2
501209,11,5,266,caught,2
501209,18,4,187,caught,1
501209,19,7,54,caught,1
501210,5,4,8,caught,1
501211,1,2,21,caught,1
501211,6,5,53,caught,2
501211,14,6,264,caught,2
501212,1,1,2,caught,1
501212,3,5,64,caught,1
501212,5,5,17,caught,1
501212,8,4,74,caught,2
501212,10,5,171,caught,2
501212,12,2,27,caught,2
501212,16,2,104,caught,1
501212,17,1,35,caught,1
501213,2,6,135,caught,2
501213,3,5,42,caught,1
501213,5,6,260,caught,2
501213,7,4,110,caught,2
501213,9,6,65,caught,1
501213,12,1,79,caught,2
501213,15,4,26,caught,1
501213,17,5,203,caught,2
501213,17,6,268,caught,2
501213,20,1,269,caught,2
501213,20,2,154,caught,1
Query:
SELECT wt."match_id", wt."over_id", wt."ball_id", wt."innings_no", wt."player_out", bb."bowler"
   FROM IPL.IPL."WICKET_TAKEN" wt
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON wt."match_id" = bb."match_id"
    AND wt."over_id" = bb."over_id"
    AND wt."ball_id" = bb."ball_id"
    AND wt."innings_no" = bb."innings_no"
   LIMIT 100;
Answer:
match_id,over_id,ball_id,innings_no,player_out,bowler
335987,2,1,2,6,84
335987,3,2,2,8,106
335987,5,5,2,9,82
335987,6,2,1,1,15
335987,6,2,2,7,106
335987,8,5,2,11,1
335987,9,2,2,12,82
335987,9,8,2,10,82
335987,12,1,2,13,1
335987,13,1,1,3,9
335987,14,1,2,15,1
335987,16,2,2,16,63
335987,18,1,1,4,13
335988,3,5,1,17,66
335988,6,6,2,24,120
335988,7,2,1,18,29
335988,8,1,1,20,25
335988,11,2,2,25,435
335988,13,2,1,21,68
335988,15,2,2,27,119
335988,16,3,1,22,29
335988,18,4,2,26,121
335989,2,4,2,41,32
335989,3,3,1,30,118
335989,4,5,1,31,436
335989,7,2,1,32,89
335989,8,4,1,34,90
335989,11,3,1,33,89
335989,13,1,1,36,89
335989,15,2,1,35,175
335989,18,1,1,38,90
335990,2,5,1,43,15
335990,4,4,1,45,15
335990,5,7,2,51,80
335990,6,4,1,44,15
335990,9,6,2,6,50
335990,10,6,2,52,44
335990,14,3,1,47,12
335990,14,4,2,8,73
335990,17,5,1,46,12
335990,19,4,2,9,50
335990,19,5,1,48,14
335990,20,6,1,49,15
335991,2,2,2,2,61
335991,3,1,2,3,60
335991,4,2,1,54,84
335991,5,2,2,62,60
335991,5,3,1,55,106
335991,9,1,1,53,83
335991,9,4,1,57,83
335991,12,4,1,58,5
335991,13,8,2,1,131
335991,15,3,1,232,4
335991,17,3,2,5,131
335991,18,4,1,56,82
335991,18,6,1,60,82
335991,19,3,1,59,83
335991,19,4,1,131,83
335992,2,1,2,33,77
335992,3,3,2,31,66
335992,5,5,1,24,126
335992,5,5,2,69,25
335992,7,3,1,26,38
335992,8,4,1,64,37
335992,9,6,1,25,38
335992,12,2,2,34,29
335992,17,5,1,27,38
335992,18,2,1,29,39
335992,18,4,1,66,39
335992,19,6,1,65,126
335993,2,6,1,53,117
335993,4,3,2,40,61
335993,6,1,1,55,117
335993,8,6,1,54,90
335993,10,3,1,56,90
335993,13,1,1,70,89
335993,17,1,1,59,89
335993,19,4,1,57,89
335993,20,2,1,232,91
335994,1,8,2,43,22
335994,4,1,1,17,73
335994,4,4,2,44,120
335994,5,4,1,19,80
335994,10,4,2,46,119
335994,12,4,2,49,435
335994,15,2,2,71,119
335994,15,6,1,21,72
335994,16,3,2,72,121
335994,19,5,2,50,121
335994,19,7,1,18,73
335994,20,5,1,20,72
335995,3,1,2,69,60
335995,3,2,1,53,31
335995,3,6,1,70,31
335995,9,3,1,55,38
335995,10,3,2,31,99
335995,12,6,2,32,70
335995,18,1,2,33,70
335995,18,3,2,74,70
335995,18,6,1,57,38
Query:
SELECT "match_id", "season_id", "match_date"
   FROM IPL.IPL."MATCH"
   LIMIT 100;
Answer:
match_id,season_id,match_date
335987,1,2008-04-18
335988,1,2008-04-19
335989,1,2008-04-19
335990,1,2008-04-20
335991,1,2008-04-20
335992,1,2008-04-21
335993,1,2008-04-22
335994,1,2008-04-23
335995,1,2008-04-24
335996,1,2008-04-25
335997,1,2008-04-26
335998,1,2008-04-26
335999,1,2008-04-27
336000,1,2008-04-27
336001,1,2008-04-28
336002,1,2008-04-29
336003,1,2008-04-30
336004,1,2008-05-01
336005,1,2008-05-01
336006,1,2008-05-02
336007,1,2008-05-25
336008,1,2008-05-03
336009,1,2008-05-04
336010,1,2008-05-04
336011,1,2008-05-05
336012,1,2008-05-06
336013,1,2008-05-07
336014,1,2008-05-08
336015,1,2008-05-08
336016,1,2008-05-09
336017,1,2008-05-28
336018,1,2008-05-10
336019,1,2008-05-11
336020,1,2008-05-11
336021,1,2008-05-12
336022,1,2008-05-13
336023,1,2008-05-14
336024,1,2008-05-28
336025,1,2008-05-15
336026,1,2008-05-16
336027,1,2008-05-17
336028,1,2008-05-17
336029,1,2008-05-18
336030,1,2008-05-18
336031,1,2008-05-19
336032,1,2008-05-20
336033,1,2008-05-21
336034,1,2008-05-21
336036,1,2008-05-23
336037,1,2008-05-24
336038,1,2008-05-24
336039,1,2008-05-03
336040,1,2008-05-25
336041,1,2008-05-26
336042,1,2008-05-27
336043,1,2008-05-30
336044,1,2008-05-31
336045,1,2008-06-01
392186,2,2009-04-18
392187,2,2009-04-18
392188,2,2009-04-19
392189,2,2009-04-19
392190,2,2009-04-20
392191,2,2009-04-21
392193,2,2009-04-22
392194,2,2009-04-23
392196,2,2009-04-24
392197,2,2009-04-25
392199,2,2009-04-26
392200,2,2009-04-26
392201,2,2009-04-27
392202,2,2009-04-27
392203,2,2009-04-28
392204,2,2009-04-29
392205,2,2009-04-29
392206,2,2009-04-30
392207,2,2009-04-30
392208,2,2009-05-01
392209,2,2009-05-01
392210,2,2009-05-02
392211,2,2009-05-02
392212,2,2009-05-03
392213,2,2009-05-03
392214,2,2009-05-04
392215,2,2009-05-05
392216,2,2009-05-05
392217,2,2009-05-06
392218,2,2009-05-07
392219,2,2009-05-07
392220,2,2009-05-08
392221,2,2009-05-09
392222,2,2009-05-09
392223,2,2009-05-10
392224,2,2009-05-10
392225,2,2009-05-11
392226,2,2009-05-12
392227,2,2009-05-12
392228,2,2009-05-13
392229,2,2009-05-14
392230,2,2009-05-14
Query:
SELECT "player_id", "player_name"
   FROM IPL.IPL."PLAYER"
   LIMIT 100;
Answer:
player_id,player_name
1,SC Ganguly
2,BB McCullum
3,RT Ponting
4,DJ Hussey
5,Mohammad Hafeez
6,R Dravid
7,W Jaffer
8,V Kohli
9,JH Kallis
10,CL White
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
16,SB Joshi
17,PA Patel
18,ML Hayden
19,MEK Hussey
20,MS Dhoni
21,SK Raina
22,JDP Oram
23,S Badrinath
24,K Goel
25,JR Hopes
26,KC Sangakkara
27,Yuvraj Singh
28,SM Katich
29,IK Pathan
30,T Kohli
31,YK Pathan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
40,G Gambhir
41,V Sehwag
42,S Dhawan
43,L Ronchi
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
51,S Chanderpaul
52,LRPL Taylor
53,AC Gilchrist
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
59,SB Bangar
60,WPUJC Vaas
61,RP Singh
62,WP Saha
63,LR Shukla
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
69,Kamran Akmal
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
76,RR Sarwan
77,S Sreesanth
78,VRV Singh
79,SS Tiwary
80,DS Kulkarni
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
90,MF Maharoof
91,VY Mahesh
92,TM Srivastava
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
100,SE Marsh
101,SA Asnodkar
Query:
SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
   FROM IPL.IPL."BATSMAN_SCORED" bs
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON bs."match_id" = bb."match_id"
    AND bs."over_id" = bb."over_id"
    AND bs."ball_id" = bb."ball_id"
    AND bs."innings_no" = bb."innings_no"
   GROUP BY bb."striker"
   ORDER BY total_runs DESC, bb."striker" ASC
   LIMIT 100;
Answer:
striker,TOTAL_RUNS
21,4083
8,3987
57,3874
40,3589
46,3390
162,3356
187,3339
20,3270
110,3161
42,3082
31,2719
41,2702
85,2529
88,2515
185,2490
32,2469
2,2431
9,2414
133,2329
208,2325
27,2281
6,2170
100,2148
147,2146
53,2069
19,1977
221,1959
154,1926
17,1868
96,1800
64,1771
26,1656
35,1552
183,1466
23,1439
320,1426
104,1395
87,1324
4,1322
62,1304
254,1304
1,1303
303,1287
71,1262
306,1212
79,1205
135,1154
29,1079
18,1074
52,1017
351,1015
158,1001
54,985
56,974
109,962
10,949
383,942
305,917
236,897
97,886
339,842
216,789
214,788
50,783
260,781
44,768
345,728
74,724
354,713
191,691
178,676
255,676
48,672
197,663
355,657
163,648
157,604
237,597
334,574
161,530
171,514
204,506
67,505
167,496
308,472
310,470
276,468
393,449
101,423
25,417
280,414
192,409
266,401
11,394
203,390
321,388
63,386
372,379
112,375
65,368
Query:
SELECT bb."bowler", COUNT(*) AS total_wickets
   FROM IPL.IPL."WICKET_TAKEN" wt
   JOIN IPL.IPL."BALL_BY_BALL" bb
     ON wt."match_id" = bb."match_id"
    AND wt."over_id" = bb."over_id"
    AND wt."ball_id" = bb."ball_id"
    AND wt."innings_no" = bb."innings_no"
   WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
   GROUP BY bb."bowler"
   ORDER BY total_wickets DESC, bb."bowler" ASC
   LIMIT 100;
Answer:
bowler,TOTAL_WICKETS
194,143
136,123
71,122
67,119
50,118
201,100
73,97
81,97
15,92
61,90
94,90
131,89
299,85
315,85
14,84
109,82
32,81
29,79
35,77
151,75
190,75
80,72
126,72
232,72
364,70
89,68
106,68
9,65
39,65
121,59
221,56
38,55
382,54
84,53
367,52
357,51
310,49
186,47
124,45
188,45
276,42
31,40
235,40
270,40
350,40
374,40
333,39
77,38
140,38
120,37
248,37
166,36
163,35
27,34
378,34
403,34
309,33
83,31
296,31
334,31
116,30
280,30
293,30
82,29
311,29
321,29
386,29
175,28
196,28
223,28
346,28
90,27
191,27
256,27
267,27
375,26
66,25
192,25
370,25
21,24
147,24
154,23
238,23
316,23
102,22
451,22
91,21
177,21
56,20
371,20
253,19
258,19
60,18
137,18
162,18
356,18
359,18
104,17
149,17
325,17
Query:
SELECT m."season_id", bb."striker", SUM(bs."runs_scored") AS total_runs
    FROM IPL.IPL."BATSMAN_SCORED" bs
    JOIN IPL.IPL."BALL_BY_BALL" bb
      ON bs."match_id" = bb."match_id"
     AND bs."over_id" = bb."over_id"
     AND bs."ball_id" = bb."ball_id"
     AND bs."innings_no" = bb."innings_no"
    JOIN IPL.IPL."MATCH" m
      ON bs."match_id" = m."match_id"
    GROUP BY m."season_id", bb."striker"
    ORDER BY m."season_id", total_runs DESC, bb."striker" ASC
    LIMIT 100;
Answer:
season_id,striker,TOTAL_RUNS
1,100,616
1,40,534
1,44,514
1,32,468
1,74,441
1,53,436
1,31,435
1,21,421
1,20,414
1,41,406
1,57,404
1,6,371
1,1,349
1,42,340
1,26,320
1,46,320
1,4,319
1,101,311
1,17,302
1,27,299
1,54,288
1,109,241
1,11,225
1,25,221
1,48,206
1,9,199
1,107,196
1,103,193
1,23,192
1,18,189
1,2,188
1,133,188
1,64,179
1,71,178
1,33,176
1,19,168
1,97,167
1,8,165
1,56,161
1,62,159
1,63,157
1,55,155
1,139,152
1,52,149
1,49,147
1,88,145
1,108,145
1,35,135
1,29,131
1,69,128
1,90,125
1,113,117
1,7,115
1,10,114
1,14,112
1,58,112
1,112,109
1,87,104
1,135,104
1,95,103
1,138,103
1,28,96
1,110,95
1,67,90
1,132,82
1,70,81
1,24,76
1,76,73
1,38,70
1,114,70
1,5,64
1,82,54
1,86,52
1,232,49
1,59,47
1,12,46
1,147,45
1,128,42
1,111,40
1,3,39
1,45,39
1,105,39
1,136,37
1,102,36
1,120,35
1,15,34
1,36,34
1,43,34
1,47,34
1,89,34
1,37,33
1,129,31
1,50,30
1,83,30
1,153,28
1,61,27
1,68,26
1,79,26
1,51,25
1,81,25
Query:
SELECT m."season_id", bb."bowler", COUNT(*) AS total_wickets
    FROM IPL.IPL."WICKET_TAKEN" wt
    JOIN IPL.IPL."BALL_BY_BALL" bb
      ON wt."match_id" = bb."match_id"
     AND wt."over_id" = bb."over_id"
     AND wt."ball_id" = bb."ball_id"
     AND wt."innings_no" = bb."innings_no"
    JOIN IPL.IPL."MATCH" m
      ON wt."match_id" = m."match_id"
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY m."season_id", bb."bowler"
    ORDER BY m."season_id", total_wickets DESC, bb."bowler" ASC
    LIMIT 100;
Answer:
season_id,bowler,TOTAL_WICKETS
1,102,22
1,38,19
1,32,17
1,67,17
1,77,17
1,109,17
1,120,17
1,91,16
1,29,15
1,61,15
1,90,15
1,126,14
1,15,13
1,39,13
1,73,12
1,105,12
1,118,12
1,14,11
1,49,11
1,71,11
1,78,11
1,80,11
1,121,11
1,131,11
1,136,11
1,151,11
1,94,10
1,149,10
1,70,9
1,106,9
1,31,8
1,82,8
1,117,8
1,119,8
1,25,7
1,84,7
1,122,7
1,124,7
1,435,7
1,1,6
1,63,6
1,89,6
1,50,5
1,60,5
1,81,5
1,115,5
1,116,5
1,144,5
1,147,5
1,9,4
1,44,4
1,59,4
1,66,4
1,143,4
1,22,3
1,27,3
1,41,3
1,45,3
1,58,3
1,83,3
1,153,3
1,437,3
1,4,2
1,5,2
1,8,2
1,12,2
1,54,2
1,72,2
1,86,2
1,98,2
1,99,2
1,137,2
1,148,2
1,175,2
1,13,1
1,16,1
1,21,1
1,37,1
1,48,1
1,57,1
1,68,1
1,108,1
1,112,1
1,135,1
1,142,1
1,174,1
1,436,1
1,438,1
2,61,23
2,124,21
2,73,19
2,131,18
2,194,18
2,29,17
2,116,15
2,126,15
2,223,15
2,121,14
2,136,14
2,215,14
Query:
SELECT p."player_name", total_runs
    FROM (
      SELECT bb."striker", SUM(bs."runs_scored") AS total_runs
      FROM IPL.IPL."BATSMAN_SCORED" bs
      JOIN IPL.IPL."BALL_BY_BALL" bb
        ON bs."match_id" = bb."match_id"
       AND bs."over_id" = bb."over_id"
       AND bs."ball_id" = bb."ball_id"
       AND bs."innings_no" = bb."innings_no"
      GROUP BY bb."striker"
      ORDER BY total_runs DESC, bb."striker" ASC
      LIMIT 100
    ) t
    JOIN IPL.IPL."PLAYER" p
      ON t."striker" = p."player_id";
Answer:
player_name,TOTAL_RUNS
SC Ganguly,1303
BB McCullum,2431
DJ Hussey,1322
R Dravid,2170
V Kohli,3987
JH Kallis,2414
CL White,949
MV Boucher,394
PA Patel,1868
ML Hayden,1074
MEK Hussey,1977
MS Dhoni,3270
SK Raina,4083
S Badrinath,1439
JR Hopes,417
KC Sangakkara,1656
Yuvraj Singh,2281
IK Pathan,1079
YK Pathan,2719
SR Watson,2469
G Gambhir,3589
V Sehwag,2702
S Dhawan,3082
ST Jayasuriya,768
RV Uthappa,3390
AM Nayar,672
Harbhajan Singh,783
LRPL Taylor,1017
AC Gilchrist,2069
Y Venugopal Rao,985
A Symonds,974
RG Sharma,3874
WP Saha,1304
LR Shukla,386
DPMD Jayawardene,1771
S Sohal,368
PP Chawla,505
DJ Bravo,1262
GC Smith,724
SS Tiwary,1205
AM Rahane,2529
MK Tiwary,1324
KD Karthik,2515
MK Pandey,1800
HH Gibbs,886
SE Marsh,2148
SA Asnodkar,423
BJ Hodge,1395
JA Morkel,962
AB de Villiers,3161
DB Ravi Teja,375
SR Tendulkar,2329
TM Dilshan,1154
DR Smith,2146
JP Duminy,1926
JD Ryder,604
KP Pietersen,1001
RS Bopara,530
CH Gayle,3356
MC Henriques,648
PC Valthaty,496
M Manhas,514
TL Suman,676
NV Ojha,1466
M Vijay,2490
DA Warner,3339
AD Mathews,691
J Botha,409
GJ Bailey,663
CA Pujara,390
OA Shah,506
AT Rayudu,2325
MS Bisla,788
EJG Morgan,789
KA Pollard,1959
Mandeep Singh,897
KM Jadhav,597
AJ Finch,1304
STR Binny,676
MA Agarwal,781
AL Menaria,401
Shakib Al Hasan,468
NLTC Perera,414
F du Plessis,1287
GJ Maxwell,917
SPD Smith,1212
SA Yadav,472
JP Faulkner,470
DA Miller,1426
Azhar Mahmood,388
AD Russell,574
KK Nair,842
M Vohra,728
SV Samson,1015
KL Rahul,713
Q de Kock,657
CJ Anderson,379
LMP Simmons,942
SS Iyer,449
Query:
SELECT p."player_name", total_wickets
    FROM (
      SELECT bb."bowler", COUNT(*) AS total_wickets
      FROM IPL.IPL."WICKET_TAKEN" wt
      JOIN IPL.IPL."BALL_BY_BALL" bb
        ON wt."match_id" = bb."match_id"
       AND wt."over_id" = bb."over_id"
       AND wt."ball_id" = bb."ball_id"
       AND wt."innings_no" = bb."innings_no"
      WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
      GROUP BY bb."bowler"
      ORDER BY total_wickets DESC, bb."bowler" ASC
      LIMIT 100
    ) t
    JOIN IPL.IPL."PLAYER" p
      ON t."bowler" = p."player_id";
Answer:
player_name,TOTAL_WICKETS
JH Kallis,65
P Kumar,84
Z Khan,92
SK Raina,24
Yuvraj Singh,34
IK Pathan,79
YK Pathan,40
SR Watson,81
SK Warne,55
SK Trivedi,65
Harbhajan Singh,118
A Symonds,20
WPUJC Vaas,18
RP Singh,90
B Lee,25
PP Chawla,119
DJ Bravo,122
A Nehra,97
S Sreesanth,38
DS Kulkarni,72
R Vinay Kumar,97
AB Agarkar,29
M Kartik,31
I Sharma,53
R Bhatia,68
MF Maharoof,27
VY Mahesh,21
DW Steyn,90
Sohail Tanvir,22
BJ Hodge,17
AB Dinda,68
JA Morkel,82
PJ Sangwan,30
MS Gony,37
M Muralitharan,59
A Kumble,45
MM Patel,72
PP Ojha,89
A Mishra,123
AD Mascarenhas,18
Iqbal Abdulla,38
DR Smith,24
CRD Fernando,17
L Balaji,75
JP Duminy,23
CH Gayle,18
MC Henriques,35
KV Sharma,36
DL Vettori,28
RE van der Merwe,21
SB Jakati,47
RJ Harris,45
M Morkel,75
AD Mathews,27
J Botha,25
SL Malinga,143
A Singh,28
R Ashwin,100
KA Pollard,56
DP Nannes,28
UT Yadav,72
R Sharma,40
SW Tait,23
DE Bollinger,37
MR Marsh,19
Harmeet Singh,27
DT Christian,19
WD Parnell,27
S Aravind,40
Shakib Al Hasan,42
NLTC Perera,30
S Nadeem,30
VR Aaron,31
B Kumar,85
KK Cooper,33
JP Faulkner,49
HV Patel,29
SP Narine,85
GB Hogg,23
Azhar Mahmood,29
A Ashish Reddy,17
P Awana,39
AD Russell,31
JD Unadkat,28
CH Morris,40
R Dhawan,18
MG Johnson,51
IC Pandey,18
MM Sharma,70
Sandeep Sharma,52
PV Tambe,25
NM Coulter-Nile,20
AR Patel,40
JJ Bumrah,26
MA Starc,34
YS Chahal,54
Imran Tahir,29
MJ McClenaghan,34
BW Hilfenhaus,22
Query:
SELECT "match_id", "season_id", "venue"
    FROM IPL.IPL."MATCH"
    LIMIT 100;
Answer:
match_id,season_id,venue
335987,1,M Chinnaswamy Stadium
335988,1,Punjab Cricket Association Stadium Mohali
335989,1,Feroz Shah Kotla
335990,1,Wankhede Stadium
335991,1,Eden Gardens
335992,1,Sawai Mansingh Stadium
335993,1,Rajiv Gandhi International Stadium Uppal
335994,1,MA Chidambaram Stadium Chepauk
335995,1,Rajiv Gandhi International Stadium Uppal
335996,1,Punjab Cricket Association Stadium Mohali
335997,1,M Chinnaswamy Stadium
335998,1,MA Chidambaram Stadium Chepauk
335999,1,Dr DY Patil Sports Academy
336000,1,Punjab Cricket Association Stadium Mohali
336001,1,M Chinnaswamy Stadium
336002,1,Eden Gardens
336003,1,Feroz Shah Kotla
336004,1,Rajiv Gandhi International Stadium Uppal
336005,1,Sawai Mansingh Stadium
336006,1,MA Chidambaram Stadium Chepauk
336007,1,Rajiv Gandhi International Stadium Uppal
336008,1,Punjab Cricket Association Stadium Mohali
336009,1,Dr DY Patil Sports Academy
336010,1,Sawai Mansingh Stadium
336011,1,M Chinnaswamy Stadium
336012,1,MA Chidambaram Stadium Chepauk
336013,1,Dr DY Patil Sports Academy
336014,1,Feroz Shah Kotla
336015,1,Eden Gardens
336016,1,Sawai Mansingh Stadium
336017,1,M Chinnaswamy Stadium
336018,1,MA Chidambaram Stadium Chepauk
336019,1,Rajiv Gandhi International Stadium Uppal
336020,1,Sawai Mansingh Stadium
336021,1,Punjab Cricket Association Stadium Mohali
336022,1,Eden Gardens
336023,1,Wankhede Stadium
336024,1,Punjab Cricket Association Stadium Mohali
336025,1,Feroz Shah Kotla
336026,1,Wankhede Stadium
336027,1,Feroz Shah Kotla
336028,1,Sawai Mansingh Stadium
336029,1,Rajiv Gandhi International Stadium Uppal
336030,1,Eden Gardens
336031,1,M Chinnaswamy Stadium
336032,1,Eden Gardens
336033,1,Wankhede Stadium
336034,1,MA Chidambaram Stadium Chepauk
336036,1,Punjab Cricket Association Stadium Mohali
336037,1,Feroz Shah Kotla
336038,1,MA Chidambaram Stadium Chepauk
336039,1,M Chinnaswamy Stadium
336040,1,Eden Gardens
336041,1,Sawai Mansingh Stadium
336042,1,Rajiv Gandhi International Stadium Uppal
336043,1,Wankhede Stadium
336044,1,Wankhede Stadium
336045,1,Dr DY Patil Sports Academy
392186,2,Newlands
392187,2,Newlands
392188,2,Newlands
392189,2,Newlands
392190,2,St George's Park
392191,2,Kingsmead
392193,2,Newlands
392194,2,Kingsmead
392196,2,Kingsmead
392197,2,Kingsmead
392199,2,St George's Park
392200,2,Newlands
392201,2,Kingsmead
392202,2,St George's Park
392203,2,SuperSport Park
392204,2,Kingsmead
392205,2,Kingsmead
392206,2,SuperSport Park
392207,2,SuperSport Park
392208,2,Buffalo Park
392209,2,Kingsmead
392210,2,St George's Park
392211,2,New Wanderers Stadium
392212,2,St George's Park
392213,2,New Wanderers Stadium
392214,2,Buffalo Park
392215,2,Kingsmead
392216,2,Kingsmead
392217,2,SuperSport Park
392218,2,SuperSport Park
392219,2,SuperSport Park
392220,2,Buffalo Park
392221,2,De Beers Diamond Oval
392222,2,De Beers Diamond Oval
392223,2,St George's Park
392224,2,New Wanderers Stadium
392225,2,De Beers Diamond Oval
392226,2,SuperSport Park
392227,2,SuperSport Park
392228,2,Kingsmead
392229,2,Kingsmead
392230,2,Kingsmead
Query:
SELECT "season_id", COUNT(*) AS total_matches
    FROM IPL.IPL."MATCH"
    GROUP BY "season_id"
    ORDER BY "season_id" ASC
    LIMIT 100;
Answer:
season_id,TOTAL_MATCHES
1,58
2,56
3,58
4,72
5,74
6,74
7,59
8,56
9,60
Query:
SELECT "player_id", "player_name", "batting_hand", "bowling_skill"
    FROM IPL.IPL."PLAYER"
    LIMIT 100;
Answer:
player_id,player_name,batting_hand,bowling_skill
1,SC Ganguly,Left-hand bat,Right-arm medium
2,BB McCullum,Right-hand bat,Right-arm medium
3,RT Ponting,Right-hand bat,Right-arm medium
4,DJ Hussey,Right-hand bat,Right-arm offbreak
5,Mohammad Hafeez,Right-hand bat,Right-arm offbreak
6,R Dravid,Right-hand bat,Right-arm offbreak
7,W Jaffer,Right-hand bat,Right-arm offbreak
8,V Kohli,Right-hand bat,Right-arm medium
9,JH Kallis,Right-hand bat,Right-arm fast-medium
10,CL White,Right-hand bat,Legbreak googly
11,MV Boucher,Right-hand bat,Right-arm medium
12,B Akhil,Right-hand bat,Right-arm medium-fast
13,AA Noffke,Right-hand bat,Right-arm fast-medium
14,P Kumar,Right-hand bat,Right-arm medium
15,Z Khan,Right-hand bat,Left-arm fast-medium
16,SB Joshi,Left-hand bat,Slow left-arm orthodox
17,PA Patel,Left-hand bat,Right-arm medium
18,ML Hayden,Left-hand bat,Right-arm medium
19,MEK Hussey,Left-hand bat,Right-arm medium
20,MS Dhoni,Right-hand bat,Right-arm medium
21,SK Raina,Left-hand bat,Right-arm offbreak
22,JDP Oram,Left-hand bat,Right-arm fast-medium
23,S Badrinath,Right-hand bat,Right-arm offbreak
24,K Goel,Left-hand bat,Right-arm offbreak
25,JR Hopes,Right-hand bat,Right-arm medium
26,KC Sangakkara,Left-hand bat,Right-arm offbreak
27,Yuvraj Singh,Left-hand bat,Slow left-arm orthodox
28,SM Katich,Left-hand bat,Slow left-arm chinaman
29,IK Pathan,Left-hand bat,Left-arm medium-fast
30,T Kohli,Right-hand bat,Right-arm medium
31,YK Pathan,Right-hand bat,Right-arm offbreak
32,SR Watson,Right-hand bat,Right-arm fast-medium
33,M Kaif,Right-hand bat,Right-arm offbreak
34,DS Lehmann,Left-hand bat,Slow left-arm orthodox
36,M Rawat,Right-hand bat,Right-arm medium
37,D Salunkhe,Right-hand bat,Legbreak
38,SK Warne,Right-hand bat,Legbreak googly
39,SK Trivedi,Right-hand bat,Right-arm medium
40,G Gambhir,Left-hand bat,Legbreak
41,V Sehwag,Right-hand bat,Right-arm offbreak
42,S Dhawan,Left-hand bat,Right-arm offbreak
43,L Ronchi,Right-hand bat,Right-arm medium
44,ST Jayasuriya,Left-hand bat,Slow left-arm orthodox
45,DJ Thornely,Right-hand bat,Right-arm medium
46,RV Uthappa,Right-hand bat,Right-arm medium
47,PR Shah,Right-hand bat,Right-arm medium
48,AM Nayar,Left-hand bat,Right-arm medium
49,SM Pollock,Right-hand bat,Right-arm fast-medium
50,Harbhajan Singh,Right-hand bat,Right-arm offbreak
51,S Chanderpaul,Left-hand bat,Legbreak
52,LRPL Taylor,Right-hand bat,Right-arm offbreak
53,AC Gilchrist,Left-hand bat,Right-arm offbreak
54,Y Venugopal Rao,Right-hand bat,Right-arm offbreak
55,VVS Laxman,Right-hand bat,Right-arm offbreak
56,A Symonds,Right-hand bat,Right-arm offbreak
57,RG Sharma,Right-hand bat,Right-arm offbreak
58,SB Styris,Right-hand bat,Right-arm medium
59,SB Bangar,Right-hand bat,Right-arm medium-fast
60,WPUJC Vaas,Left-hand bat,Left-arm fast-medium
61,RP Singh,Right-hand bat,Left-arm fast-medium
62,WP Saha,Right-hand bat,Right-arm medium
63,LR Shukla,Right-hand bat,Right-arm medium
64,DPMD Jayawardene,Right-hand bat,Right-arm medium
65,S Sohal,Right-hand bat,Legbreak
66,B Lee,Right-hand bat,Right-arm fast
67,PP Chawla,Left-hand bat,Legbreak
68,WA Mota,Right-hand bat,Right-arm medium
69,Kamran Akmal,Right-hand bat,Right-arm medium
70,Shahid Afridi,Right-hand bat,Legbreak googly
71,DJ Bravo,Right-hand bat,Right-arm medium-fast
72,MA Khote,Right-hand bat,Right-arm medium
73,A Nehra,Right-hand bat,Left-arm medium-fast
74,GC Smith,Left-hand bat,Right-arm offbreak
75,Pankaj Singh,Right-hand bat,Right-arm medium-fast
76,RR Sarwan,Right-hand bat,Legbreak
77,S Sreesanth,Right-hand bat,Right-arm fast-medium
78,VRV Singh,Right-hand bat,Right-arm medium-fast
79,SS Tiwary,Left-hand bat,Right-arm medium
80,DS Kulkarni,Right-hand bat,Right-arm medium
81,R Vinay Kumar,Right-hand bat,Right-arm medium
82,AB Agarkar,Right-hand bat,Right-arm fast
83,M Kartik,Left-hand bat,Slow left-arm orthodox
84,I Sharma,Right-hand bat,Right-arm fast-medium
85,AM Rahane,Right-hand bat,Right-arm medium
86,Shoaib Malik,Right-hand bat,Right-arm offbreak
87,MK Tiwary,Right-hand bat,Legbreak googly
88,KD Karthik,Right-hand bat,Right-arm medium
89,R Bhatia,Right-hand bat,Right-arm medium-fast
90,MF Maharoof,Right-hand bat,Right-arm fast-medium
91,VY Mahesh,Right-hand bat,Right-arm medium-fast
92,TM Srivastava,Left-hand bat,Right-arm medium
93,B Chipli,Right-hand bat,Right-arm medium
94,DW Steyn,Right-hand bat,Right-arm fast
95,DB Das,Right-hand bat,Legbreak googly
96,MK Pandey,Right-hand bat,Right-arm medium
97,HH Gibbs,Right-hand bat,Right-arm bowler
98,DNT Zoysa,Left-hand bat,Left-arm fast-medium
99,D Kalyankrishna,Right-hand bat,Right-arm medium-fast
100,SE Marsh,Left-hand bat,Slow left-arm orthodox
101,SA Asnodkar,Right-hand bat,Right-arm offbreak
Query:
SELECT DISTINCT "season_id"
    FROM IPL.IPL."MATCH"
    ORDER BY "season_id" ASC;
Answer:
season_id
1
2
3
4
5
6
7
8
9
Query:
SELECT bs."match_id", SUM(bs."runs_scored") AS total_runs
    FROM IPL.IPL."BATSMAN_SCORED" bs
    GROUP BY bs."match_id"
    ORDER BY bs."match_id" ASC
    LIMIT 100;
Answer:
match_id,TOTAL_RUNS
335987,268
335988,430
335989,240
335990,315
335991,184
335992,318
335993,268
335994,379
335995,418
335996,284
335997,264
335998,273
335999,289
336000,300
336001,332
336002,247
336003,356
336004,321
336005,321
336006,328
336007,320
336008,326
336009,281
336010,191
336011,226
336012,277
336013,188
336014,352
336015,242
336016,264
336017,224
336018,326
336019,358
336020,287
336021,263
336022,224
336023,286
336024,392
336025,365
336026,117
336027,198
336028,297
336029,303
336030,187
336031,291
336032,285
336033,342
336034,222
336036,340
336037,343
336038,396
336039,298
336040,329
336041,262
336042,268
336043,268
336044,220
336045,306
392186,299
392187,178
392188,149
392189,198
392190,248
392191,221
392193,328
392194,353
392196,320
392197,297
392199,284
392200,228
392201,317
392202,269
392203,276
392204,264
392205,207
392206,275
392207,277
392208,266
392209,263
392210,269
392211,296
392212,290
392213,285
392214,261
392215,321
392216,299
392217,259
392218,204
392219,347
392220,215
392221,321
392222,264
392223,277
392224,227
392225,273
392226,331
392227,217
392228,314
392229,249
392230,263
Query:
SELECT DISTINCT "extra_type"
    FROM IPL.IPL."EXTRA_RUNS";
Answer:
extra_type
legbyes
wides
byes
noballs
penalty
Query:
SELECT wt."match_id", COUNT(*) AS total_wickets
    FROM IPL.IPL."WICKET_TAKEN" wt
    WHERE wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY wt."match_id"
    ORDER BY wt."match_id" ASC
    LIMIT 100;
Answer:
match_id,TOTAL_WICKETS
335987,12
335988,9
335989,7
335990,10
335991,14
335992,11
335993,8
335994,10
335995,11
335996,15
335997,9
335998,9
335999,7
336000,12
336001,12
336002,10
336003,9
336004,9
336005,13
336006,7
336007,11
336008,11
336009,17
336010,12
336011,11
336012,10
336013,13
336014,10
336015,7
336016,8
336017,9
336018,13
336019,10
336020,10
336021,7
336022,13
336023,7
336024,9
336025,12
336026,11
336027,7
336028,10
336029,13
336030,5
336031,9
336032,11
336033,9
336034,15
336036,8
336037,11
336038,9
336039,13
336040,12
336041,10
336042,10
336043,17
336044,8
336045,10
392186,13
392187,17
392188,5
392189,10
392190,13
392191,6
392193,12
392194,11
392196,11
392197,15
392199,10
392200,11
392201,10
392202,14
392203,11
392204,11
392205,14
392206,11
392207,13
392208,11
392209,15
392210,11
392211,17
392212,7
392213,5
392214,13
392215,12
392216,4
392217,13
392218,11
392219,6
392220,10
392221,9
392222,9
392223,8
392224,11
392225,14
392226,8
392227,8
392228,15
392229,15
392230,13
End Exploring Related Columns
Task: Identify the top three batsmen with the most runs and the top three bowlers with the most wickets in each season, displaying them in the same row for each season. In case of ties, prioritize players with lower player_ids. Exclude 'run out', 'hit wicket', and 'retired hurt' as out_types for bowlers.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: ```sql
SELECT "COLUMN_NAME" FROM DATABASE.SCHEMA.TABLE WHERE ... ``` (Adjust "DATABASE", "SCHEMA", and "TABLE" to match actual names, ensure all column names are enclosed in double quotations)
Follow the answer format like: Here's the result in CSV format:

```csv
Season,Batsman1_Name,Batsman1_Runs,Batsman2_Name,Batsman2_Runs,Batsman3_Name,Batsman3_Runs,Bowler1_Name,Bowler1_Wickets,Bowler2_Name,Bowler2_Wickets,Bowler3_Name,Bowler3_Wickets
season1:str,batsman1:str,runs1:int,batsman2:str,runs2:int,batsman3:str,runs3:int,bowler1:str,wickets1:int,bowler2:str,wickets2:int,bowler3:str,wickets3:int
season2:str,batsman1:str,runs1:int,batsman2:str,runs2:int,batsman3:str,runs3:int,bowler1:str,wickets1:int,bowler2:str,wickets2:int,bowler3:str,wickets3:int
...
```

**Explanation:**

For each season, the table displays the top three batsmen with the most runs and the top three bowlers with the most wickets, all in the same row. The players are ranked based on their total runs or wickets in that season. In case of ties, players with lower `player_id` values are given priority. The out_types 'run out', 'hit wicket', and 'retired hurt' are excluded when counting wickets for bowlers..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'IPL': {'IPL': ['BALL_BY_BALL', 'BATSMAN_SCORED', 'EXTRA_RUNS', 'MATCH', 'PLAYER', 'PLAYER_MATCH', 'TEAM', 'WICKET_TAKEN']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-26 13:57:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 13:57:37 - root - INFO - ```sql
WITH batsman_runs AS (
    SELECT
        m."season_id",
        bb."striker" AS "player_id",
        SUM(bs."runs_scored") AS total_runs
    FROM
        IPL.IPL."BATSMAN_SCORED" bs
    JOIN
        IPL.IPL."BALL_BY_BALL" bb
        ON bs."match_id" = bb."match_id"
        AND bs."over_id" = bb."over_id"
        AND bs."ball_id" = bb."ball_id"
        AND bs."innings_no" = bb."innings_no"
    JOIN
        IPL.IPL."MATCH" m
        ON bs."match_id" = m."match_id"
    GROUP BY
        m."season_id", bb."striker"
),
batsman_ranked AS (
    SELECT
        "season_id",
        "player_id",
        total_runs,
        ROW_NUMBER() OVER (
            PARTITION BY "season_id"
            ORDER BY total_runs DESC NULLS LAST, "player_id" ASC
        ) AS rank
    FROM batsman_runs
),
batsman_top3 AS (
    SELECT 
        b."season_id",
        p1."player_name" AS "Batsman1_Name",
        b.batsman1_runs AS "Batsman1_Runs",
        p2."player_name" AS "Batsman2_Name",
        b.batsman2_runs AS "Batsman2_Runs",
        p3."player_name" AS "Batsman3_Name",
        b.batsman3_runs AS "Batsman3_Runs"
    FROM (
        SELECT
            "season_id",
            MAX(CASE WHEN rank = 1 THEN "player_id" END) AS batsman1_id,
            MAX(CASE WHEN rank = 1 THEN total_runs END) AS batsman1_runs,
            MAX(CASE WHEN rank = 2 THEN "player_id" END) AS batsman2_id,
            MAX(CASE WHEN rank = 2 THEN total_runs END) AS batsman2_runs,
            MAX(CASE WHEN rank = 3 THEN "player_id" END) AS batsman3_id,
            MAX(CASE WHEN rank = 3 THEN total_runs END) AS batsman3_runs
        FROM batsman_ranked
        WHERE rank <= 3
        GROUP BY "season_id"
    ) b
    LEFT JOIN IPL.IPL."PLAYER" p1 ON b.batsman1_id = p1."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p2 ON b.batsman2_id = p2."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p3 ON b.batsman3_id = p3."player_id"
),
bowlers_wickets AS (
    SELECT
        m."season_id",
        bb."bowler" AS "player_id",
        COUNT(*) AS total_wickets
    FROM
        IPL.IPL."WICKET_TAKEN" wt
    JOIN
        IPL.IPL."BALL_BY_BALL" bb
        ON wt."match_id" = bb."match_id"
        AND wt."over_id" = bb."over_id"
        AND wt."ball_id" = bb."ball_id"
        AND wt."innings_no" = bb."innings_no"
    JOIN
        IPL.IPL."MATCH" m
        ON wt."match_id" = m."match_id"
    WHERE
        wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY
        m."season_id", bb."bowler"
),
bowler_ranked AS (
    SELECT
        "season_id",
        "player_id",
        total_wickets,
        ROW_NUMBER() OVER (
            PARTITION BY "season_id"
            ORDER BY total_wickets DESC NULLS LAST, "player_id" ASC
        ) AS rank
    FROM bowlers_wickets
),
bowler_top3 AS (
    SELECT 
        b."season_id",
        p1."player_name" AS "Bowler1_Name",
        b.bowler1_wickets AS "Bowler1_Wickets",
        p2."player_name" AS "Bowler2_Name",
        b.bowler2_wickets AS "Bowler2_Wickets",
        p3."player_name" AS "Bowler3_Name",
        b.bowler3_wickets AS "Bowler3_Wickets"
    FROM (
        SELECT
            "season_id",
            MAX(CASE WHEN rank = 1 THEN "player_id" END) AS bowler1_id,
            MAX(CASE WHEN rank = 1 THEN total_wickets END) AS bowler1_wickets,
            MAX(CASE WHEN rank = 2 THEN "player_id" END) AS bowler2_id,
            MAX(CASE WHEN rank = 2 THEN total_wickets END) AS bowler2_wickets,
            MAX(CASE WHEN rank = 3 THEN "player_id" END) AS bowler3_id,
            MAX(CASE WHEN rank = 3 THEN total_wickets END) AS bowler3_wickets
        FROM bowler_ranked
        WHERE rank <= 3
        GROUP BY "season_id"
    ) b
    LEFT JOIN IPL.IPL."PLAYER" p1 ON b.bowler1_id = p1."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p2 ON b.bowler2_id = p2."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p3 ON b.bowler3_id = p3."player_id"
)
SELECT
    b."season_id" AS "Season",
    b."Batsman1_Name",
    b."Batsman1_Runs",
    b."Batsman2_Name",
    b."Batsman2_Runs",
    b."Batsman3_Name",
    b."Batsman3_Runs",
    w."Bowler1_Name",
    w."Bowler1_Wickets",
    w."Bowler2_Name",
    w."Bowler2_Wickets",
    w."Bowler3_Name",
    w."Bowler3_Wickets"
FROM
    batsman_top3 b
JOIN
    bowler_top3 w
ON
    b."season_id" = w."season_id"
ORDER BY
    b."season_id" ASC;
```
2025-01-26 13:57:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:57:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:57:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:57:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 9
2025-01-26 13:57:39 - snowflake.connector.connection - INFO - closed
2025-01-26 13:57:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:57:39 - root - INFO - itercount: 1
2025-01-26 13:57:39 - root - INFO - 0
2025-01-26 13:57:39 - root - INFO - results: 
Season,Batsman1_Name,Batsman1_Runs,Batsman2_Name,Batsman2_Runs,Batsman3_Name,Batsman3_Runs,Bowler1_Name,Bowler1_Wickets,Bowler2_Name,Bowler2_Wickets,Bowler3_Name,Bowler3_Wickets
1,SE Marsh,616,G Gambhir,534,ST Jayasuriya,514,Sohail Tanvir,22,SK Warne,19,SR Watson,17
2,ML Hayden,572,AC Gilchrist,495,AB de Villiers,465,RP Singh,23,A Kumble,21,A Nehra,19
3,SR Tendulkar,617,JH Kallis,572,SK Raina,505,PP Ojha,21,Harbhajan Singh,17,A Kumble,17
4,CH Gayle,604,V Kohli,557,SR Tendulkar,553,SL Malinga,28,MM Patel,22,S Aravind,21
5,CH Gayle,733,G Gambhir,590,S Dhawan,569,M Morkel,25,SP Narine,24,SL Malinga,22
6,MEK Hussey,733,CH Gayle,694,SK Raina,548,DJ Bravo,32,JP Faulkner,28,Harbhajan Singh,24
7,RV Uthappa,660,DR Smith,566,GJ Maxwell,552,MM Sharma,23,SP Narine,21,B Kumar,20
8,DA Warner,562,LMP Simmons,540,V Kohli,503,DJ Bravo,26,SL Malinga,24,A Nehra,22
9,V Kohli,969,DA Warner,848,AB de Villiers,687,B Kumar,23,YS Chahal,21,SR Watson,20


2025-01-26 13:57:39 - root - INFO - Please check the answer again by reviewing Identify the top three batsmen with the most runs and the top three bowlers with the most wickets in each season, displaying them in the same row for each season. In case of ties, prioritize players with lower player_ids. Exclude 'run out', 'hit wicket', and 'retired hurt' as out_types for bowlers., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Here's the result in CSV format:

```csv
Season,Batsman1_Name,Batsman1_Runs,Batsman2_Name,Batsman2_Runs,Batsman3_Name,Batsman3_Runs,Bowler1_Name,Bowler1_Wickets,Bowler2_Name,Bowler2_Wickets,Bowler3_Name,Bowler3_Wickets
season1:str,batsman1:str,runs1:int,batsman2:str,runs2:int,batsman3:str,runs3:int,bowler1:str,wickets1:int,bowler2:str,wickets2:int,bowler3:str,wickets3:int
season2:str,batsman1:str,runs1:int,batsman2:str,runs2:int,batsman3:str,runs3:int,bowler1:str,wickets1:int,bowler2:str,wickets2:int,bowler3:str,wickets3:int
...
```

**Explanation:**

For each season, the table displays the top three batsmen with the most runs and the top three bowlers with the most wickets, all in the same row. The players are ranked based on their total runs or wickets in that season. In case of ties, players with lower `player_id` values are given priority. The out_types 'run out', 'hit wicket', and 'retired hurt' are excluded when counting wickets for bowlers. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Season,Batsman1_Name,Batsman1_Runs,Batsman2_Name,Batsman2_Runs,Batsman3_Name,Batsman3_Runs,Bowler1_Name,Bowler1_Wickets,Bowler2_Name,Bowler2_Wickets,Bowler3_Name,Bowler3_Wickets
1,SE Marsh,616,G Gambhir,534,ST Jayasuriya,514,Sohail Tanvir,22,SK Warne,19,SR Watson,17
2,ML Hayden,572,AC Gilchrist,495,AB de Villiers,465,RP Singh,23,A Kumble,21,A Nehra,19
3,SR Tendulkar,617,JH Kallis,572,SK Raina,505,PP Ojha,21,Harbhajan Singh,17,A Kumble,17
4,CH Gayle,604,V Kohli,557,SR Tendulkar,553,SL Malinga,28,MM Patel,22,S Aravind,21
5,CH Gayle,733,G Gambhir,590,S Dhawan,569,M Morkel,25,SP Narine,24,SL Malinga,22
6,MEK Hussey,733,CH Gayle,694,SK Raina,548,DJ Bravo,32,JP Faulkner,28,Harbhajan Singh,24
7,RV Uthappa,660,DR Smith,566,GJ Maxwell,552,MM Sharma,23,SP Narine,21,B Kumar,20
8,DA Warner,562,LMP Simmons,540,V Kohli,503,DJ Bravo,26,SL Malinga,24,A Nehra,22
9,V Kohli,969,DA Warner,848,AB de Villiers,687,B Kumar,23,YS Chahal,21,SR Watson,20
Current sql:
WITH batsman_runs AS (
    SELECT
        m."season_id",
        bb."striker" AS "player_id",
        SUM(bs."runs_scored") AS total_runs
    FROM
        IPL.IPL."BATSMAN_SCORED" bs
    JOIN
        IPL.IPL."BALL_BY_BALL" bb
        ON bs."match_id" = bb."match_id"
        AND bs."over_id" = bb."over_id"
        AND bs."ball_id" = bb."ball_id"
        AND bs."innings_no" = bb."innings_no"
    JOIN
        IPL.IPL."MATCH" m
        ON bs."match_id" = m."match_id"
    GROUP BY
        m."season_id", bb."striker"
),
batsman_ranked AS (
    SELECT
        "season_id",
        "player_id",
        total_runs,
        ROW_NUMBER() OVER (
            PARTITION BY "season_id"
            ORDER BY total_runs DESC NULLS LAST, "player_id" ASC
        ) AS rank
    FROM batsman_runs
),
batsman_top3 AS (
    SELECT 
        b."season_id",
        p1."player_name" AS "Batsman1_Name",
        b.batsman1_runs AS "Batsman1_Runs",
        p2."player_name" AS "Batsman2_Name",
        b.batsman2_runs AS "Batsman2_Runs",
        p3."player_name" AS "Batsman3_Name",
        b.batsman3_runs AS "Batsman3_Runs"
    FROM (
        SELECT
            "season_id",
            MAX(CASE WHEN rank = 1 THEN "player_id" END) AS batsman1_id,
            MAX(CASE WHEN rank = 1 THEN total_runs END) AS batsman1_runs,
            MAX(CASE WHEN rank = 2 THEN "player_id" END) AS batsman2_id,
            MAX(CASE WHEN rank = 2 THEN total_runs END) AS batsman2_runs,
            MAX(CASE WHEN rank = 3 THEN "player_id" END) AS batsman3_id,
            MAX(CASE WHEN rank = 3 THEN total_runs END) AS batsman3_runs
        FROM batsman_ranked
        WHERE rank <= 3
        GROUP BY "season_id"
    ) b
    LEFT JOIN IPL.IPL."PLAYER" p1 ON b.batsman1_id = p1."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p2 ON b.batsman2_id = p2."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p3 ON b.batsman3_id = p3."player_id"
),
bowlers_wickets AS (
    SELECT
        m."season_id",
        bb."bowler" AS "player_id",
        COUNT(*) AS total_wickets
    FROM
        IPL.IPL."WICKET_TAKEN" wt
    JOIN
        IPL.IPL."BALL_BY_BALL" bb
        ON wt."match_id" = bb."match_id"
        AND wt."over_id" = bb."over_id"
        AND wt."ball_id" = bb."ball_id"
        AND wt."innings_no" = bb."innings_no"
    JOIN
        IPL.IPL."MATCH" m
        ON wt."match_id" = m."match_id"
    WHERE
        wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY
        m."season_id", bb."bowler"
),
bowler_ranked AS (
    SELECT
        "season_id",
        "player_id",
        total_wickets,
        ROW_NUMBER() OVER (
            PARTITION BY "season_id"
            ORDER BY total_wickets DESC NULLS LAST, "player_id" ASC
        ) AS rank
    FROM bowlers_wickets
),
bowler_top3 AS (
    SELECT 
        b."season_id",
        p1."player_name" AS "Bowler1_Name",
        b.bowler1_wickets AS "Bowler1_Wickets",
        p2."player_name" AS "Bowler2_Name",
        b.bowler2_wickets AS "Bowler2_Wickets",
        p3."player_name" AS "Bowler3_Name",
        b.bowler3_wickets AS "Bowler3_Wickets"
    FROM (
        SELECT
            "season_id",
            MAX(CASE WHEN rank = 1 THEN "player_id" END) AS bowler1_id,
            MAX(CASE WHEN rank = 1 THEN total_wickets END) AS bowler1_wickets,
            MAX(CASE WHEN rank = 2 THEN "player_id" END) AS bowler2_id,
            MAX(CASE WHEN rank = 2 THEN total_wickets END) AS bowler2_wickets,
            MAX(CASE WHEN rank = 3 THEN "player_id" END) AS bowler3_id,
            MAX(CASE WHEN rank = 3 THEN total_wickets END) AS bowler3_wickets
        FROM bowler_ranked
        WHERE rank <= 3
        GROUP BY "season_id"
    ) b
    LEFT JOIN IPL.IPL."PLAYER" p1 ON b.bowler1_id = p1."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p2 ON b.bowler2_id = p2."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p3 ON b.bowler3_id = p3."player_id"
)
SELECT
    b."season_id" AS "Season",
    b."Batsman1_Name",
    b."Batsman1_Runs",
    b."Batsman2_Name",
    b."Batsman2_Runs",
    b."Batsman3_Name",
    b."Batsman3_Runs",
    w."Bowler1_Name",
    w."Bowler1_Wickets",
    w."Bowler2_Name",
    w."Bowler2_Wickets",
    w."Bowler3_Name",
    w."Bowler3_Wickets"
FROM
    batsman_top3 b
JOIN
    bowler_top3 w
ON
    b."season_id" = w."season_id"
ORDER BY
    b."season_id" ASC;
2025-01-26 13:58:29 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-26 13:58:29 - root - INFO - ```sql
WITH batsman_runs AS (
    SELECT
        m."season_id",
        bb."striker" AS "player_id",
        SUM(bs."runs_scored") AS total_runs
    FROM
        IPL.IPL."BATSMAN_SCORED" bs
    JOIN
        IPL.IPL."BALL_BY_BALL" bb
        ON bs."match_id" = bb."match_id"
        AND bs."over_id" = bb."over_id"
        AND bs."ball_id" = bb."ball_id"
        AND bs."innings_no" = bb."innings_no"
    JOIN
        IPL.IPL."MATCH" m
        ON bs."match_id" = m."match_id"
    GROUP BY
        m."season_id", bb."striker"
),
batsman_ranked AS (
    SELECT
        "season_id",
        "player_id",
        total_runs,
        ROW_NUMBER() OVER (
            PARTITION BY "season_id"
            ORDER BY total_runs DESC NULLS LAST, "player_id" ASC
        ) AS rank
    FROM batsman_runs
),
batsman_top3 AS (
    SELECT 
        b."season_id",
        p1."player_name" AS "Batsman1_Name",
        b.batsman1_runs AS "Batsman1_Runs",
        p2."player_name" AS "Batsman2_Name",
        b.batsman2_runs AS "Batsman2_Runs",
        p3."player_name" AS "Batsman3_Name",
        b.batsman3_runs AS "Batsman3_Runs"
    FROM (
        SELECT
            "season_id",
            MAX(CASE WHEN rank = 1 THEN "player_id" END) AS batsman1_id,
            MAX(CASE WHEN rank = 1 THEN total_runs END) AS batsman1_runs,
            MAX(CASE WHEN rank = 2 THEN "player_id" END) AS batsman2_id,
            MAX(CASE WHEN rank = 2 THEN total_runs END) AS batsman2_runs,
            MAX(CASE WHEN rank = 3 THEN "player_id" END) AS batsman3_id,
            MAX(CASE WHEN rank = 3 THEN total_runs END) AS batsman3_runs
        FROM batsman_ranked
        WHERE rank <= 3
        GROUP BY "season_id"
    ) b
    LEFT JOIN IPL.IPL."PLAYER" p1 ON b.batsman1_id = p1."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p2 ON b.batsman2_id = p2."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p3 ON b.batsman3_id = p3."player_id"
),
bowlers_wickets AS (
    SELECT
        m."season_id",
        bb."bowler" AS "player_id",
        COUNT(*) AS total_wickets
    FROM
        IPL.IPL."WICKET_TAKEN" wt
    JOIN
        IPL.IPL."BALL_BY_BALL" bb
        ON wt."match_id" = bb."match_id"
        AND wt."over_id" = bb."over_id"
        AND wt."ball_id" = bb."ball_id"
        AND wt."innings_no" = bb."innings_no"
    JOIN
        IPL.IPL."MATCH" m
        ON wt."match_id" = m."match_id"
    WHERE
        wt."kind_out" NOT IN ('run out', 'hit wicket', 'retired hurt')
    GROUP BY
        m."season_id", bb."bowler"
),
bowler_ranked AS (
    SELECT
        "season_id",
        "player_id",
        total_wickets,
        ROW_NUMBER() OVER (
            PARTITION BY "season_id"
            ORDER BY total_wickets DESC NULLS LAST, "player_id" ASC
        ) AS rank
    FROM bowlers_wickets
),
bowler_top3 AS (
    SELECT 
        b."season_id",
        p1."player_name" AS "Bowler1_Name",
        b.bowler1_wickets AS "Bowler1_Wickets",
        p2."player_name" AS "Bowler2_Name",
        b.bowler2_wickets AS "Bowler2_Wickets",
        p3."player_name" AS "Bowler3_Name",
        b.bowler3_wickets AS "Bowler3_Wickets"
    FROM (
        SELECT
            "season_id",
            MAX(CASE WHEN rank = 1 THEN "player_id" END) AS bowler1_id,
            MAX(CASE WHEN rank = 1 THEN total_wickets END) AS bowler1_wickets,
            MAX(CASE WHEN rank = 2 THEN "player_id" END) AS bowler2_id,
            MAX(CASE WHEN rank = 2 THEN total_wickets END) AS bowler2_wickets,
            MAX(CASE WHEN rank = 3 THEN "player_id" END) AS bowler3_id,
            MAX(CASE WHEN rank = 3 THEN total_wickets END) AS bowler3_wickets
        FROM bowler_ranked
        WHERE rank <= 3
        GROUP BY "season_id"
    ) b
    LEFT JOIN IPL.IPL."PLAYER" p1 ON b.bowler1_id = p1."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p2 ON b.bowler2_id = p2."player_id"
    LEFT JOIN IPL.IPL."PLAYER" p3 ON b.bowler3_id = p3."player_id"
)
SELECT
    b."season_id" AS "Season",
    b."Batsman1_Name",
    b."Batsman1_Runs",
    b."Batsman2_Name",
    b."Batsman2_Runs",
    b."Batsman3_Name",
    b."Batsman3_Runs",
    w."Bowler1_Name",
    w."Bowler1_Wickets",
    w."Bowler2_Name",
    w."Bowler2_Wickets",
    w."Bowler3_Name",
    w."Bowler3_Wickets"
FROM
    batsman_top3 b
JOIN
    bowler_top3 w
ON
    b."season_id" = w."season_id"
ORDER BY
    b."season_id" ASC;
```
2025-01-26 13:58:29 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-26 13:58:29 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-26 13:58:29 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-26 13:58:30 - snowflake.connector.cursor - INFO - Number of results in first chunk: 9
2025-01-26 13:58:30 - snowflake.connector.connection - INFO - closed
2025-01-26 13:58:30 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-26 13:58:30 - root - INFO - itercount: 2
2025-01-26 13:58:30 - root - INFO - 0
2025-01-26 13:58:30 - root - INFO - Total iteration counts: 2
